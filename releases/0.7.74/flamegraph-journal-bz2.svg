<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno" version="1.1" width="1200" height="726" onload="init(evt)" viewBox="0 0 1200 726">
  <!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.-->
  <!--NOTES: foo&lt;br/&gt;bar&lt;br/&gt;super_speedy_syslog_searcher 0.7.74; git: 732f8e65; -freq 8000; created 20240622T180708-0700; flamegraph-flamegraph 0.6.5; rustc 1.70.0-->
  <defs>
    <linearGradient id="background" y1="0" y2="1" x1="0" x2="0">
      <stop stop-color="#eeeeee" offset="5%"/>
      <stop stop-color="#eeeeb0" offset="95%"/>
    </linearGradient>
  </defs>
  <style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames &gt; *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style>
  <script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    "use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script>
  <rect x="0" y="0" width="100%" height="726" fill="url(#background)"/>
  <text id="title" style="font-size:xx-small" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph: super_speedy_syslog_searcher 0.7.74; git: 732f8e65; -freq 8000; created 20240622T180708-0700; flamegraph-flamegraph 0.6.5; rustc 1.70.0<br/>; command: s4 ./logs/programs/journal/RHE_91_system.journal.bz2</text>
  <text id="details" fill="rgb(0,0,0)" x="10" y="709.00"> </text>
  <text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text>
  <text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text>
  <text id="matched" fill="rgb(0,0,0)" x="1190" y="709.00"> </text>
  <svg id="frames" x="10" width="1180" total_samples="497">
    <g>
      <title>x86_pmu_enable_all (12 samples, 2.41%)</title>
      <rect x="0.0000%" y="581" width="2.4145%" height="15" fill="rgb(230,100,7)" fg:x="0" fg:w="12"/>
      <text x="0.2500%" y="591.50">x8..</text>
    </g>
    <g>
      <title>ret_from_fork (24 samples, 4.83%)</title>
      <rect x="0.0000%" y="645" width="4.8290%" height="15" fill="rgb(249,149,44)" fg:x="0" fg:w="24"/>
      <text x="0.2500%" y="655.50">ret_fr..</text>
    </g>
    <g>
      <title>schedule_tail (24 samples, 4.83%)</title>
      <rect x="0.0000%" y="629" width="4.8290%" height="15" fill="rgb(215,144,34)" fg:x="0" fg:w="24"/>
      <text x="0.2500%" y="639.50">schedu..</text>
    </g>
    <g>
      <title>finish_task_switch.isra.0 (24 samples, 4.83%)</title>
      <rect x="0.0000%" y="613" width="4.8290%" height="15" fill="rgb(249,184,27)" fg:x="0" fg:w="24"/>
      <text x="0.2500%" y="623.50">finish..</text>
    </g>
    <g>
      <title>__perf_event_task_sched_in (24 samples, 4.83%)</title>
      <rect x="0.0000%" y="597" width="4.8290%" height="15" fill="rgb(253,170,3)" fg:x="0" fg:w="24"/>
      <text x="0.2500%" y="607.50">__perf..</text>
    </g>
    <g>
      <title>rcu_read_unlock_strict (1 samples, 0.20%)</title>
      <rect x="4.8290%" y="533" width="0.2012%" height="15" fill="rgb(251,95,14)" fg:x="24" fg:w="1"/>
      <text x="5.0790%" y="543.50"/>
    </g>
    <g>
      <title>truncate_cleanup_page (2 samples, 0.40%)</title>
      <rect x="5.0302%" y="453" width="0.4024%" height="15" fill="rgb(211,95,19)" fg:x="25" fg:w="2"/>
      <text x="5.2802%" y="463.50"/>
    </g>
    <g>
      <title>block_invalidatepage (2 samples, 0.40%)</title>
      <rect x="5.0302%" y="437" width="0.4024%" height="15" fill="rgb(208,16,47)" fg:x="25" fg:w="2"/>
      <text x="5.2802%" y="447.50"/>
    </g>
    <g>
      <title>xas_store (1 samples, 0.20%)</title>
      <rect x="5.4326%" y="437" width="0.2012%" height="15" fill="rgb(212,131,5)" fg:x="27" fg:w="1"/>
      <text x="5.6826%" y="447.50"/>
    </g>
    <g>
      <title>delete_from_page_cache_batch (2 samples, 0.40%)</title>
      <rect x="5.4326%" y="453" width="0.4024%" height="15" fill="rgb(205,34,0)" fg:x="27" fg:w="2"/>
      <text x="5.6826%" y="463.50"/>
    </g>
    <g>
      <title>unaccount_page_cache_page (1 samples, 0.20%)</title>
      <rect x="5.6338%" y="437" width="0.2012%" height="15" fill="rgb(252,116,10)" fg:x="28" fg:w="1"/>
      <text x="5.8838%" y="447.50"/>
    </g>
    <g>
      <title>task_work_run (6 samples, 1.21%)</title>
      <rect x="4.8290%" y="565" width="1.2072%" height="15" fill="rgb(206,18,50)" fg:x="24" fg:w="6"/>
      <text x="5.0790%" y="575.50"/>
    </g>
    <g>
      <title>__fput (6 samples, 1.21%)</title>
      <rect x="4.8290%" y="549" width="1.2072%" height="15" fill="rgb(210,120,45)" fg:x="24" fg:w="6"/>
      <text x="5.0790%" y="559.50"/>
    </g>
    <g>
      <title>dput (5 samples, 1.01%)</title>
      <rect x="5.0302%" y="533" width="1.0060%" height="15" fill="rgb(252,3,5)" fg:x="25" fg:w="5"/>
      <text x="5.2802%" y="543.50"/>
    </g>
    <g>
      <title>__dentry_kill (5 samples, 1.01%)</title>
      <rect x="5.0302%" y="517" width="1.0060%" height="15" fill="rgb(216,135,0)" fg:x="25" fg:w="5"/>
      <text x="5.2802%" y="527.50"/>
    </g>
    <g>
      <title>evict (5 samples, 1.01%)</title>
      <rect x="5.0302%" y="501" width="1.0060%" height="15" fill="rgb(232,48,28)" fg:x="25" fg:w="5"/>
      <text x="5.2802%" y="511.50"/>
    </g>
    <g>
      <title>ext4_evict_inode (5 samples, 1.01%)</title>
      <rect x="5.0302%" y="485" width="1.0060%" height="15" fill="rgb(225,179,4)" fg:x="25" fg:w="5"/>
      <text x="5.2802%" y="495.50"/>
    </g>
    <g>
      <title>truncate_inode_pages_range (5 samples, 1.01%)</title>
      <rect x="5.0302%" y="469" width="1.0060%" height="15" fill="rgb(228,2,6)" fg:x="25" fg:w="5"/>
      <text x="5.2802%" y="479.50"/>
    </g>
    <g>
      <title>__pagevec_release (1 samples, 0.20%)</title>
      <rect x="5.8350%" y="453" width="0.2012%" height="15" fill="rgb(246,111,1)" fg:x="29" fg:w="1"/>
      <text x="6.0850%" y="463.50"/>
    </g>
    <g>
      <title>release_pages (1 samples, 0.20%)</title>
      <rect x="5.8350%" y="437" width="0.2012%" height="15" fill="rgb(247,202,4)" fg:x="29" fg:w="1"/>
      <text x="6.0850%" y="447.50"/>
    </g>
    <g>
      <title>__list_del_entry_valid (1 samples, 0.20%)</title>
      <rect x="5.8350%" y="421" width="0.2012%" height="15" fill="rgb(224,110,12)" fg:x="29" fg:w="1"/>
      <text x="6.0850%" y="431.50"/>
    </g>
    <g>
      <title>page_remove_rmap (1 samples, 0.20%)</title>
      <rect x="6.0362%" y="501" width="0.2012%" height="15" fill="rgb(222,17,10)" fg:x="30" fg:w="1"/>
      <text x="6.2862%" y="511.50"/>
    </g>
    <g>
      <title>__mod_lruvec_page_state (1 samples, 0.20%)</title>
      <rect x="6.0362%" y="485" width="0.2012%" height="15" fill="rgb(231,38,23)" fg:x="30" fg:w="1"/>
      <text x="6.2862%" y="495.50"/>
    </g>
    <g>
      <title>__mod_memcg_lruvec_state (1 samples, 0.20%)</title>
      <rect x="6.0362%" y="469" width="0.2012%" height="15" fill="rgb(247,169,19)" fg:x="30" fg:w="1"/>
      <text x="6.2862%" y="479.50"/>
    </g>
    <g>
      <title>mmput (2 samples, 0.40%)</title>
      <rect x="6.0362%" y="565" width="0.4024%" height="15" fill="rgb(228,125,30)" fg:x="30" fg:w="2"/>
      <text x="6.2862%" y="575.50"/>
    </g>
    <g>
      <title>exit_mmap (2 samples, 0.40%)</title>
      <rect x="6.0362%" y="549" width="0.4024%" height="15" fill="rgb(221,135,18)" fg:x="30" fg:w="2"/>
      <text x="6.2862%" y="559.50"/>
    </g>
    <g>
      <title>unmap_vmas (2 samples, 0.40%)</title>
      <rect x="6.0362%" y="533" width="0.4024%" height="15" fill="rgb(216,135,47)" fg:x="30" fg:w="2"/>
      <text x="6.2862%" y="543.50"/>
    </g>
    <g>
      <title>unmap_page_range (2 samples, 0.40%)</title>
      <rect x="6.0362%" y="517" width="0.4024%" height="15" fill="rgb(216,127,1)" fg:x="30" fg:w="2"/>
      <text x="6.2862%" y="527.50"/>
    </g>
    <g>
      <title>__x64_sys_exit_group (9 samples, 1.81%)</title>
      <rect x="4.8290%" y="613" width="1.8109%" height="15" fill="rgb(219,187,49)" fg:x="24" fg:w="9"/>
      <text x="5.0790%" y="623.50">_..</text>
    </g>
    <g>
      <title>do_group_exit (9 samples, 1.81%)</title>
      <rect x="4.8290%" y="597" width="1.8109%" height="15" fill="rgb(241,5,8)" fg:x="24" fg:w="9"/>
      <text x="5.0790%" y="607.50">d..</text>
    </g>
    <g>
      <title>do_exit (9 samples, 1.81%)</title>
      <rect x="4.8290%" y="581" width="1.8109%" height="15" fill="rgb(238,144,25)" fg:x="24" fg:w="9"/>
      <text x="5.0790%" y="591.50">d..</text>
    </g>
    <g>
      <title>mm_update_next_owner (1 samples, 0.20%)</title>
      <rect x="6.4386%" y="565" width="0.2012%" height="15" fill="rgb(214,110,20)" fg:x="32" fg:w="1"/>
      <text x="6.6886%" y="575.50"/>
    </g>
    <g>
      <title>vm_mmap_pgoff (1 samples, 0.20%)</title>
      <rect x="6.6398%" y="549" width="0.2012%" height="15" fill="rgb(226,196,1)" fg:x="33" fg:w="1"/>
      <text x="6.8898%" y="559.50"/>
    </g>
    <g>
      <title>do_mmap (1 samples, 0.20%)</title>
      <rect x="6.6398%" y="533" width="0.2012%" height="15" fill="rgb(228,25,27)" fg:x="33" fg:w="1"/>
      <text x="6.8898%" y="543.50"/>
    </g>
    <g>
      <title>mmap_region (1 samples, 0.20%)</title>
      <rect x="6.6398%" y="517" width="0.2012%" height="15" fill="rgb(233,57,38)" fg:x="33" fg:w="1"/>
      <text x="6.8898%" y="527.50"/>
    </g>
    <g>
      <title>vma_link (1 samples, 0.20%)</title>
      <rect x="6.6398%" y="501" width="0.2012%" height="15" fill="rgb(249,28,0)" fg:x="33" fg:w="1"/>
      <text x="6.8898%" y="511.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (11 samples, 2.21%)</title>
      <rect x="4.8290%" y="645" width="2.2133%" height="15" fill="rgb(205,226,15)" fg:x="24" fg:w="11"/>
      <text x="5.0790%" y="655.50">e..</text>
    </g>
    <g>
      <title>do_syscall_64 (11 samples, 2.21%)</title>
      <rect x="4.8290%" y="629" width="2.2133%" height="15" fill="rgb(220,74,14)" fg:x="24" fg:w="11"/>
      <text x="5.0790%" y="639.50">d..</text>
    </g>
    <g>
      <title>__x64_sys_execve (2 samples, 0.40%)</title>
      <rect x="6.6398%" y="613" width="0.4024%" height="15" fill="rgb(237,59,15)" fg:x="33" fg:w="2"/>
      <text x="6.8898%" y="623.50"/>
    </g>
    <g>
      <title>do_execveat_common.isra.0 (2 samples, 0.40%)</title>
      <rect x="6.6398%" y="597" width="0.4024%" height="15" fill="rgb(248,134,53)" fg:x="33" fg:w="2"/>
      <text x="6.8898%" y="607.50"/>
    </g>
    <g>
      <title>bprm_execve (2 samples, 0.40%)</title>
      <rect x="6.6398%" y="581" width="0.4024%" height="15" fill="rgb(232,147,16)" fg:x="33" fg:w="2"/>
      <text x="6.8898%" y="591.50"/>
    </g>
    <g>
      <title>load_elf_binary (2 samples, 0.40%)</title>
      <rect x="6.6398%" y="565" width="0.4024%" height="15" fill="rgb(246,102,21)" fg:x="33" fg:w="2"/>
      <text x="6.8898%" y="575.50"/>
    </g>
    <g>
      <title>setup_arg_pages (1 samples, 0.20%)</title>
      <rect x="6.8410%" y="549" width="0.2012%" height="15" fill="rgb(232,213,47)" fg:x="34" fg:w="1"/>
      <text x="7.0910%" y="559.50"/>
    </g>
    <g>
      <title>shift_arg_pages (1 samples, 0.20%)</title>
      <rect x="6.8410%" y="533" width="0.2012%" height="15" fill="rgb(220,171,8)" fg:x="34" fg:w="1"/>
      <text x="7.0910%" y="543.50"/>
    </g>
    <g>
      <title>free_pgd_range (1 samples, 0.20%)</title>
      <rect x="6.8410%" y="517" width="0.2012%" height="15" fill="rgb(216,191,16)" fg:x="34" fg:w="1"/>
      <text x="7.0910%" y="527.50"/>
    </g>
    <g>
      <title>___pte_free_tlb (1 samples, 0.20%)</title>
      <rect x="6.8410%" y="501" width="0.2012%" height="15" fill="rgb(225,121,8)" fg:x="34" fg:w="1"/>
      <text x="7.0910%" y="511.50"/>
    </g>
    <g>
      <title>__mprotect (1 samples, 0.20%)</title>
      <rect x="7.0423%" y="581" width="0.2012%" height="15" fill="rgb(236,147,42)" fg:x="35" fg:w="1"/>
      <text x="7.2923%" y="591.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (1 samples, 0.20%)</title>
      <rect x="7.0423%" y="565" width="0.2012%" height="15" fill="rgb(205,226,15)" fg:x="35" fg:w="1"/>
      <text x="7.2923%" y="575.50"/>
    </g>
    <g>
      <title>do_syscall_64 (1 samples, 0.20%)</title>
      <rect x="7.0423%" y="549" width="0.2012%" height="15" fill="rgb(220,74,14)" fg:x="35" fg:w="1"/>
      <text x="7.2923%" y="559.50"/>
    </g>
    <g>
      <title>__x64_sys_mprotect (1 samples, 0.20%)</title>
      <rect x="7.0423%" y="533" width="0.2012%" height="15" fill="rgb(254,23,50)" fg:x="35" fg:w="1"/>
      <text x="7.2923%" y="543.50"/>
    </g>
    <g>
      <title>do_mprotect_pkey (1 samples, 0.20%)</title>
      <rect x="7.0423%" y="517" width="0.2012%" height="15" fill="rgb(224,41,39)" fg:x="35" fg:w="1"/>
      <text x="7.2923%" y="527.50"/>
    </g>
    <g>
      <title>mprotect_fixup (1 samples, 0.20%)</title>
      <rect x="7.0423%" y="501" width="0.2012%" height="15" fill="rgb(232,46,46)" fg:x="35" fg:w="1"/>
      <text x="7.2923%" y="511.50"/>
    </g>
    <g>
      <title>__split_vma (1 samples, 0.20%)</title>
      <rect x="7.0423%" y="485" width="0.2012%" height="15" fill="rgb(231,148,17)" fg:x="35" fg:w="1"/>
      <text x="7.2923%" y="495.50"/>
    </g>
    <g>
      <title>__vma_adjust (1 samples, 0.20%)</title>
      <rect x="7.0423%" y="469" width="0.2012%" height="15" fill="rgb(224,210,22)" fg:x="35" fg:w="1"/>
      <text x="7.2923%" y="479.50"/>
    </g>
    <g>
      <title>start_thread (2 samples, 0.40%)</title>
      <rect x="7.0423%" y="629" width="0.4024%" height="15" fill="rgb(209,148,13)" fg:x="35" fg:w="2"/>
      <text x="7.2923%" y="639.50"/>
    </g>
    <g>
      <title>std::sys::unix::thread::Thread::new::thread_start (2 samples, 0.40%)</title>
      <rect x="7.0423%" y="613" width="0.4024%" height="15" fill="rgb(215,36,0)" fg:x="35" fg:w="2"/>
      <text x="7.2923%" y="623.50"/>
    </g>
    <g>
      <title>std::sys::unix::stack_overflow::imp::make_handler (2 samples, 0.40%)</title>
      <rect x="7.0423%" y="597" width="0.4024%" height="15" fill="rgb(237,166,40)" fg:x="35" fg:w="2"/>
      <text x="7.2923%" y="607.50"/>
    </g>
    <g>
      <title>__mmap (1 samples, 0.20%)</title>
      <rect x="7.2435%" y="581" width="0.2012%" height="15" fill="rgb(252,174,12)" fg:x="36" fg:w="1"/>
      <text x="7.4935%" y="591.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (1 samples, 0.20%)</title>
      <rect x="7.2435%" y="565" width="0.2012%" height="15" fill="rgb(205,226,15)" fg:x="36" fg:w="1"/>
      <text x="7.4935%" y="575.50"/>
    </g>
    <g>
      <title>do_syscall_64 (1 samples, 0.20%)</title>
      <rect x="7.2435%" y="549" width="0.2012%" height="15" fill="rgb(220,74,14)" fg:x="36" fg:w="1"/>
      <text x="7.4935%" y="559.50"/>
    </g>
    <g>
      <title>vm_mmap_pgoff (1 samples, 0.20%)</title>
      <rect x="7.2435%" y="533" width="0.2012%" height="15" fill="rgb(226,196,1)" fg:x="36" fg:w="1"/>
      <text x="7.4935%" y="543.50"/>
    </g>
    <g>
      <title>do_mmap (1 samples, 0.20%)</title>
      <rect x="7.2435%" y="517" width="0.2012%" height="15" fill="rgb(228,25,27)" fg:x="36" fg:w="1"/>
      <text x="7.4935%" y="527.50"/>
    </g>
    <g>
      <title>mmap_region (1 samples, 0.20%)</title>
      <rect x="7.2435%" y="501" width="0.2012%" height="15" fill="rgb(233,57,38)" fg:x="36" fg:w="1"/>
      <text x="7.4935%" y="511.50"/>
    </g>
    <g>
      <title>vm_area_alloc (1 samples, 0.20%)</title>
      <rect x="7.2435%" y="485" width="0.2012%" height="15" fill="rgb(242,51,19)" fg:x="36" fg:w="1"/>
      <text x="7.4935%" y="495.50"/>
    </g>
    <g>
      <title>clone3 (3 samples, 0.60%)</title>
      <rect x="7.0423%" y="645" width="0.6036%" height="15" fill="rgb(208,138,34)" fg:x="35" fg:w="3"/>
      <text x="7.2923%" y="655.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (1 samples, 0.20%)</title>
      <rect x="7.4447%" y="629" width="0.2012%" height="15" fill="rgb(205,226,15)" fg:x="37" fg:w="1"/>
      <text x="7.6947%" y="639.50"/>
    </g>
    <g>
      <title>do_syscall_64 (1 samples, 0.20%)</title>
      <rect x="7.4447%" y="613" width="0.2012%" height="15" fill="rgb(220,74,14)" fg:x="37" fg:w="1"/>
      <text x="7.6947%" y="623.50"/>
    </g>
    <g>
      <title>__do_sys_clone3 (1 samples, 0.20%)</title>
      <rect x="7.4447%" y="597" width="0.2012%" height="15" fill="rgb(226,75,10)" fg:x="37" fg:w="1"/>
      <text x="7.6947%" y="607.50"/>
    </g>
    <g>
      <title>kernel_clone (1 samples, 0.20%)</title>
      <rect x="7.4447%" y="581" width="0.2012%" height="15" fill="rgb(225,70,27)" fg:x="37" fg:w="1"/>
      <text x="7.6947%" y="591.50"/>
    </g>
    <g>
      <title>copy_process (1 samples, 0.20%)</title>
      <rect x="7.4447%" y="565" width="0.2012%" height="15" fill="rgb(210,101,2)" fg:x="37" fg:w="1"/>
      <text x="7.6947%" y="575.50"/>
    </g>
    <g>
      <title>perf_event_init_task (1 samples, 0.20%)</title>
      <rect x="7.4447%" y="549" width="0.2012%" height="15" fill="rgb(215,189,39)" fg:x="37" fg:w="1"/>
      <text x="7.6947%" y="559.50"/>
    </g>
    <g>
      <title>inherit_task_group.isra.0 (1 samples, 0.20%)</title>
      <rect x="7.4447%" y="533" width="0.2012%" height="15" fill="rgb(234,227,7)" fg:x="37" fg:w="1"/>
      <text x="7.6947%" y="543.50"/>
    </g>
    <g>
      <title>inherit_event.constprop.0 (1 samples, 0.20%)</title>
      <rect x="7.4447%" y="517" width="0.2012%" height="15" fill="rgb(250,34,25)" fg:x="37" fg:w="1"/>
      <text x="7.6947%" y="527.50"/>
    </g>
    <g>
      <title>_raw_spin_unlock_irqrestore (1 samples, 0.20%)</title>
      <rect x="7.4447%" y="501" width="0.2012%" height="15" fill="rgb(216,183,20)" fg:x="37" fg:w="1"/>
      <text x="7.6947%" y="511.50"/>
    </g>
    <g>
      <title>exc_page_fault (1 samples, 0.20%)</title>
      <rect x="7.6459%" y="549" width="0.2012%" height="15" fill="rgb(216,51,29)" fg:x="38" fg:w="1"/>
      <text x="7.8959%" y="559.50"/>
    </g>
    <g>
      <title>do_user_addr_fault (1 samples, 0.20%)</title>
      <rect x="7.6459%" y="533" width="0.2012%" height="15" fill="rgb(253,37,52)" fg:x="38" fg:w="1"/>
      <text x="7.8959%" y="543.50"/>
    </g>
    <g>
      <title>handle_mm_fault (1 samples, 0.20%)</title>
      <rect x="7.6459%" y="517" width="0.2012%" height="15" fill="rgb(247,31,49)" fg:x="38" fg:w="1"/>
      <text x="7.8959%" y="527.50"/>
    </g>
    <g>
      <title>__handle_mm_fault (1 samples, 0.20%)</title>
      <rect x="7.6459%" y="501" width="0.2012%" height="15" fill="rgb(254,123,40)" fg:x="38" fg:w="1"/>
      <text x="7.8959%" y="511.50"/>
    </g>
    <g>
      <title>__do_fault (1 samples, 0.20%)</title>
      <rect x="7.6459%" y="485" width="0.2012%" height="15" fill="rgb(232,18,38)" fg:x="38" fg:w="1"/>
      <text x="7.8959%" y="495.50"/>
    </g>
    <g>
      <title>filemap_fault (1 samples, 0.20%)</title>
      <rect x="7.6459%" y="469" width="0.2012%" height="15" fill="rgb(254,137,16)" fg:x="38" fg:w="1"/>
      <text x="7.8959%" y="479.50"/>
    </g>
    <g>
      <title>_dl_relocate_object (3 samples, 0.60%)</title>
      <rect x="7.6459%" y="581" width="0.6036%" height="15" fill="rgb(244,75,35)" fg:x="38" fg:w="3"/>
      <text x="7.8959%" y="591.50"/>
    </g>
    <g>
      <title>asm_exc_page_fault (3 samples, 0.60%)</title>
      <rect x="7.6459%" y="565" width="0.6036%" height="15" fill="rgb(208,26,13)" fg:x="38" fg:w="3"/>
      <text x="7.8959%" y="575.50"/>
    </g>
    <g>
      <title>_dl_map_object_deps (1 samples, 0.20%)</title>
      <rect x="8.2495%" y="581" width="0.2012%" height="15" fill="rgb(208,68,2)" fg:x="41" fg:w="1"/>
      <text x="8.4995%" y="591.50"/>
    </g>
    <g>
      <title>_dl_catch_exception (1 samples, 0.20%)</title>
      <rect x="8.2495%" y="565" width="0.2012%" height="15" fill="rgb(238,71,42)" fg:x="41" fg:w="1"/>
      <text x="8.4995%" y="575.50"/>
    </g>
    <g>
      <title>openaux (1 samples, 0.20%)</title>
      <rect x="8.2495%" y="549" width="0.2012%" height="15" fill="rgb(215,55,1)" fg:x="41" fg:w="1"/>
      <text x="8.4995%" y="559.50"/>
    </g>
    <g>
      <title>_dl_map_object (1 samples, 0.20%)</title>
      <rect x="8.2495%" y="533" width="0.2012%" height="15" fill="rgb(247,77,9)" fg:x="41" fg:w="1"/>
      <text x="8.4995%" y="543.50"/>
    </g>
    <g>
      <title>_dl_load_cache_lookup (1 samples, 0.20%)</title>
      <rect x="8.2495%" y="517" width="0.2012%" height="15" fill="rgb(216,8,51)" fg:x="41" fg:w="1"/>
      <text x="8.4995%" y="527.50"/>
    </g>
    <g>
      <title>_dl_sysdep_read_whole_file (1 samples, 0.20%)</title>
      <rect x="8.2495%" y="501" width="0.2012%" height="15" fill="rgb(239,215,28)" fg:x="41" fg:w="1"/>
      <text x="8.4995%" y="511.50"/>
    </g>
    <g>
      <title>__GI___open64_nocancel (1 samples, 0.20%)</title>
      <rect x="8.2495%" y="485" width="0.2012%" height="15" fill="rgb(216,127,2)" fg:x="41" fg:w="1"/>
      <text x="8.4995%" y="495.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (1 samples, 0.20%)</title>
      <rect x="8.2495%" y="469" width="0.2012%" height="15" fill="rgb(205,226,15)" fg:x="41" fg:w="1"/>
      <text x="8.4995%" y="479.50"/>
    </g>
    <g>
      <title>do_syscall_64 (1 samples, 0.20%)</title>
      <rect x="8.2495%" y="453" width="0.2012%" height="15" fill="rgb(220,74,14)" fg:x="41" fg:w="1"/>
      <text x="8.4995%" y="463.50"/>
    </g>
    <g>
      <title>__x64_sys_openat (1 samples, 0.20%)</title>
      <rect x="8.2495%" y="437" width="0.2012%" height="15" fill="rgb(236,228,31)" fg:x="41" fg:w="1"/>
      <text x="8.4995%" y="447.50"/>
    </g>
    <g>
      <title>do_sys_openat2 (1 samples, 0.20%)</title>
      <rect x="8.2495%" y="421" width="0.2012%" height="15" fill="rgb(208,111,23)" fg:x="41" fg:w="1"/>
      <text x="8.4995%" y="431.50"/>
    </g>
    <g>
      <title>alloc_fd (1 samples, 0.20%)</title>
      <rect x="8.2495%" y="405" width="0.2012%" height="15" fill="rgb(205,84,50)" fg:x="41" fg:w="1"/>
      <text x="8.4995%" y="415.50"/>
    </g>
    <g>
      <title>_dl_start (5 samples, 1.01%)</title>
      <rect x="7.6459%" y="629" width="1.0060%" height="15" fill="rgb(214,13,30)" fg:x="38" fg:w="5"/>
      <text x="7.8959%" y="639.50"/>
    </g>
    <g>
      <title>_dl_sysdep_start (5 samples, 1.01%)</title>
      <rect x="7.6459%" y="613" width="1.0060%" height="15" fill="rgb(238,104,49)" fg:x="38" fg:w="5"/>
      <text x="7.8959%" y="623.50"/>
    </g>
    <g>
      <title>dl_main (5 samples, 1.01%)</title>
      <rect x="7.6459%" y="597" width="1.0060%" height="15" fill="rgb(253,59,10)" fg:x="38" fg:w="5"/>
      <text x="7.8959%" y="607.50"/>
    </g>
    <g>
      <title>__libc_early_init (1 samples, 0.20%)</title>
      <rect x="8.4507%" y="581" width="0.2012%" height="15" fill="rgb(229,67,28)" fg:x="42" fg:w="1"/>
      <text x="8.7007%" y="591.50"/>
    </g>
    <g>
      <title>__getrlimit (1 samples, 0.20%)</title>
      <rect x="8.4507%" y="565" width="0.2012%" height="15" fill="rgb(249,23,32)" fg:x="42" fg:w="1"/>
      <text x="8.7007%" y="575.50"/>
    </g>
    <g>
      <title>asm_exc_page_fault (1 samples, 0.20%)</title>
      <rect x="8.4507%" y="549" width="0.2012%" height="15" fill="rgb(208,26,13)" fg:x="42" fg:w="1"/>
      <text x="8.7007%" y="559.50"/>
    </g>
    <g>
      <title>exc_page_fault (1 samples, 0.20%)</title>
      <rect x="8.4507%" y="533" width="0.2012%" height="15" fill="rgb(216,51,29)" fg:x="42" fg:w="1"/>
      <text x="8.7007%" y="543.50"/>
    </g>
    <g>
      <title>do_user_addr_fault (1 samples, 0.20%)</title>
      <rect x="8.4507%" y="517" width="0.2012%" height="15" fill="rgb(253,37,52)" fg:x="42" fg:w="1"/>
      <text x="8.7007%" y="527.50"/>
    </g>
    <g>
      <title>handle_mm_fault (1 samples, 0.20%)</title>
      <rect x="8.4507%" y="501" width="0.2012%" height="15" fill="rgb(247,31,49)" fg:x="42" fg:w="1"/>
      <text x="8.7007%" y="511.50"/>
    </g>
    <g>
      <title>__handle_mm_fault (1 samples, 0.20%)</title>
      <rect x="8.4507%" y="485" width="0.2012%" height="15" fill="rgb(254,123,40)" fg:x="42" fg:w="1"/>
      <text x="8.7007%" y="495.50"/>
    </g>
    <g>
      <title>filemap_map_pages (1 samples, 0.20%)</title>
      <rect x="8.4507%" y="469" width="0.2012%" height="15" fill="rgb(240,96,12)" fg:x="42" fg:w="1"/>
      <text x="8.7007%" y="479.50"/>
    </g>
    <g>
      <title>do_set_pte (1 samples, 0.20%)</title>
      <rect x="8.4507%" y="453" width="0.2012%" height="15" fill="rgb(208,28,54)" fg:x="42" fg:w="1"/>
      <text x="8.7007%" y="463.50"/>
    </g>
    <g>
      <title>__memmove_avx512_unaligned_erms (2 samples, 0.40%)</title>
      <rect x="8.6519%" y="405" width="0.4024%" height="15" fill="rgb(217,126,36)" fg:x="43" fg:w="2"/>
      <text x="8.9019%" y="415.50"/>
    </g>
    <g>
      <title>write_null (1 samples, 0.20%)</title>
      <rect x="9.0543%" y="389" width="0.2012%" height="15" fill="rgb(223,225,28)" fg:x="45" fg:w="1"/>
      <text x="9.3043%" y="399.50"/>
    </g>
    <g>
      <title>srso_alias_safe_ret (1 samples, 0.20%)</title>
      <rect x="9.0543%" y="373" width="0.2012%" height="15" fill="rgb(248,122,31)" fg:x="45" fg:w="1"/>
      <text x="9.3043%" y="383.50"/>
    </g>
    <g>
      <title>syscall_exit_to_user_mode (1 samples, 0.20%)</title>
      <rect x="9.2555%" y="357" width="0.2012%" height="15" fill="rgb(215,101,28)" fg:x="46" fg:w="1"/>
      <text x="9.5055%" y="367.50"/>
    </g>
    <g>
      <title>vfs_write (1 samples, 0.20%)</title>
      <rect x="9.4567%" y="341" width="0.2012%" height="15" fill="rgb(216,184,13)" fg:x="47" fg:w="1"/>
      <text x="9.7067%" y="351.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (3 samples, 0.60%)</title>
      <rect x="9.2555%" y="389" width="0.6036%" height="15" fill="rgb(205,226,15)" fg:x="46" fg:w="3"/>
      <text x="9.5055%" y="399.50"/>
    </g>
    <g>
      <title>do_syscall_64 (3 samples, 0.60%)</title>
      <rect x="9.2555%" y="373" width="0.6036%" height="15" fill="rgb(220,74,14)" fg:x="46" fg:w="3"/>
      <text x="9.5055%" y="383.50"/>
    </g>
    <g>
      <title>ksys_write (2 samples, 0.40%)</title>
      <rect x="9.4567%" y="357" width="0.4024%" height="15" fill="rgb(223,155,43)" fg:x="47" fg:w="2"/>
      <text x="9.7067%" y="367.50"/>
    </g>
    <g>
      <title>__fdget_pos (1 samples, 0.20%)</title>
      <rect x="9.6579%" y="341" width="0.2012%" height="15" fill="rgb(205,61,45)" fg:x="48" fg:w="1"/>
      <text x="9.9079%" y="351.50"/>
    </g>
    <g>
      <title>__GI___libc_write (5 samples, 1.01%)</title>
      <rect x="9.0543%" y="405" width="1.0060%" height="15" fill="rgb(232,197,30)" fg:x="45" fg:w="5"/>
      <text x="9.3043%" y="415.50"/>
    </g>
    <g>
      <title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write (8 samples, 1.61%)</title>
      <rect x="8.6519%" y="421" width="1.6097%" height="15" fill="rgb(216,85,2)" fg:x="43" fg:w="8"/>
      <text x="8.9019%" y="431.50"/>
    </g>
    <g>
      <title>std::io::Write::write_all (9 samples, 1.81%)</title>
      <rect x="8.6519%" y="485" width="1.8109%" height="15" fill="rgb(251,145,9)" fg:x="43" fg:w="9"/>
      <text x="8.9019%" y="495.50">s..</text>
    </g>
    <g>
      <title>&lt;termcolor::LossyStandardStream&lt;W&gt; as std::io::Write&gt;::write (9 samples, 1.81%)</title>
      <rect x="8.6519%" y="469" width="1.8109%" height="15" fill="rgb(232,195,18)" fg:x="43" fg:w="9"/>
      <text x="8.9019%" y="479.50">&lt;..</text>
    </g>
    <g>
      <title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write (9 samples, 1.81%)</title>
      <rect x="8.6519%" y="453" width="1.8109%" height="15" fill="rgb(215,142,33)" fg:x="43" fg:w="9"/>
      <text x="8.9019%" y="463.50">&lt;..</text>
    </g>
    <g>
      <title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write (9 samples, 1.81%)</title>
      <rect x="8.6519%" y="437" width="1.8109%" height="15" fill="rgb(232,39,45)" fg:x="43" fg:w="9"/>
      <text x="8.9019%" y="447.50">&lt;..</text>
    </g>
    <g>
      <title>termcolor::Ansi&lt;W&gt;::write_color (2 samples, 0.40%)</title>
      <rect x="10.4628%" y="469" width="0.4024%" height="15" fill="rgb(250,61,20)" fg:x="52" fg:w="2"/>
      <text x="10.7128%" y="479.50"/>
    </g>
    <g>
      <title>std::io::Write::write_all (2 samples, 0.40%)</title>
      <rect x="10.4628%" y="453" width="0.4024%" height="15" fill="rgb(251,145,9)" fg:x="52" fg:w="2"/>
      <text x="10.7128%" y="463.50"/>
    </g>
    <g>
      <title>__memmove_avx512_unaligned_erms (1 samples, 0.20%)</title>
      <rect x="10.8652%" y="405" width="0.2012%" height="15" fill="rgb(217,126,36)" fg:x="54" fg:w="1"/>
      <text x="11.1152%" y="415.50"/>
    </g>
    <g>
      <title>&lt;termcolor::LossyStandardStream&lt;W&gt; as termcolor::WriteColor&gt;::set_color (5 samples, 1.01%)</title>
      <rect x="10.4628%" y="485" width="1.0060%" height="15" fill="rgb(244,124,31)" fg:x="52" fg:w="5"/>
      <text x="10.7128%" y="495.50"/>
    </g>
    <g>
      <title>std::io::Write::write_all (3 samples, 0.60%)</title>
      <rect x="10.8652%" y="469" width="0.6036%" height="15" fill="rgb(251,145,9)" fg:x="54" fg:w="3"/>
      <text x="11.1152%" y="479.50"/>
    </g>
    <g>
      <title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write (3 samples, 0.60%)</title>
      <rect x="10.8652%" y="453" width="0.6036%" height="15" fill="rgb(215,142,33)" fg:x="54" fg:w="3"/>
      <text x="11.1152%" y="463.50"/>
    </g>
    <g>
      <title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write (3 samples, 0.60%)</title>
      <rect x="10.8652%" y="437" width="0.6036%" height="15" fill="rgb(232,39,45)" fg:x="54" fg:w="3"/>
      <text x="11.1152%" y="447.50"/>
    </g>
    <g>
      <title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write (3 samples, 0.60%)</title>
      <rect x="10.8652%" y="421" width="0.6036%" height="15" fill="rgb(216,85,2)" fg:x="54" fg:w="3"/>
      <text x="11.1152%" y="431.50"/>
    </g>
    <g>
      <title>srso_alias_return_thunk (1 samples, 0.20%)</title>
      <rect x="11.4688%" y="405" width="0.2012%" height="15" fill="rgb(245,80,51)" fg:x="57" fg:w="1"/>
      <text x="11.7188%" y="415.50"/>
    </g>
    <g>
      <title>srso_alias_safe_ret (1 samples, 0.20%)</title>
      <rect x="11.4688%" y="389" width="0.2012%" height="15" fill="rgb(248,122,31)" fg:x="57" fg:w="1"/>
      <text x="11.7188%" y="399.50"/>
    </g>
    <g>
      <title>syscall_exit_to_user_mode (1 samples, 0.20%)</title>
      <rect x="11.6700%" y="389" width="0.2012%" height="15" fill="rgb(215,101,28)" fg:x="58" fg:w="1"/>
      <text x="11.9200%" y="399.50"/>
    </g>
    <g>
      <title>srso_alias_return_thunk (1 samples, 0.20%)</title>
      <rect x="11.8712%" y="357" width="0.2012%" height="15" fill="rgb(245,80,51)" fg:x="59" fg:w="1"/>
      <text x="12.1212%" y="367.50"/>
    </g>
    <g>
      <title>srso_alias_safe_ret (1 samples, 0.20%)</title>
      <rect x="11.8712%" y="341" width="0.2012%" height="15" fill="rgb(248,122,31)" fg:x="59" fg:w="1"/>
      <text x="12.1212%" y="351.50"/>
    </g>
    <g>
      <title>__fsnotify_parent (1 samples, 0.20%)</title>
      <rect x="12.0724%" y="357" width="0.2012%" height="15" fill="rgb(232,3,50)" fg:x="60" fg:w="1"/>
      <text x="12.3224%" y="367.50"/>
    </g>
    <g>
      <title>vfs_write (7 samples, 1.41%)</title>
      <rect x="11.8712%" y="373" width="1.4085%" height="15" fill="rgb(216,184,13)" fg:x="59" fg:w="7"/>
      <text x="12.1212%" y="383.50"/>
    </g>
    <g>
      <title>srso_alias_return_thunk (1 samples, 0.20%)</title>
      <rect x="13.2797%" y="373" width="0.2012%" height="15" fill="rgb(245,80,51)" fg:x="66" fg:w="1"/>
      <text x="13.5297%" y="383.50"/>
    </g>
    <g>
      <title>srso_alias_safe_ret (1 samples, 0.20%)</title>
      <rect x="13.2797%" y="357" width="0.2012%" height="15" fill="rgb(248,122,31)" fg:x="66" fg:w="1"/>
      <text x="13.5297%" y="367.50"/>
    </g>
    <g>
      <title>__fdget_pos (2 samples, 0.40%)</title>
      <rect x="13.4809%" y="373" width="0.4024%" height="15" fill="rgb(205,61,45)" fg:x="67" fg:w="2"/>
      <text x="13.7309%" y="383.50"/>
    </g>
    <g>
      <title>__fget_light (2 samples, 0.40%)</title>
      <rect x="13.4809%" y="357" width="0.4024%" height="15" fill="rgb(243,103,32)" fg:x="67" fg:w="2"/>
      <text x="13.7309%" y="367.50"/>
    </g>
    <g>
      <title>ksys_write (12 samples, 2.41%)</title>
      <rect x="11.8712%" y="389" width="2.4145%" height="15" fill="rgb(223,155,43)" fg:x="59" fg:w="12"/>
      <text x="12.1212%" y="399.50">ks..</text>
    </g>
    <g>
      <title>do_syscall_64 (15 samples, 3.02%)</title>
      <rect x="11.6700%" y="405" width="3.0181%" height="15" fill="rgb(220,74,14)" fg:x="58" fg:w="15"/>
      <text x="11.9200%" y="415.50">do_..</text>
    </g>
    <g>
      <title>__x64_sys_write (2 samples, 0.40%)</title>
      <rect x="14.2857%" y="389" width="0.4024%" height="15" fill="rgb(242,206,33)" fg:x="71" fg:w="2"/>
      <text x="14.5357%" y="399.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (17 samples, 3.42%)</title>
      <rect x="11.4688%" y="421" width="3.4205%" height="15" fill="rgb(205,226,15)" fg:x="57" fg:w="17"/>
      <text x="11.7188%" y="431.50">ent..</text>
    </g>
    <g>
      <title>entry_SYSCALL_64 (3 samples, 0.60%)</title>
      <rect x="14.8893%" y="421" width="0.6036%" height="15" fill="rgb(234,224,53)" fg:x="74" fg:w="3"/>
      <text x="15.1393%" y="431.50"/>
    </g>
    <g>
      <title>__x86_indirect_thunk_rax (1 samples, 0.20%)</title>
      <rect x="15.4930%" y="421" width="0.2012%" height="15" fill="rgb(231,153,3)" fg:x="77" fg:w="1"/>
      <text x="15.7430%" y="431.50"/>
    </g>
    <g>
      <title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::flush (22 samples, 4.43%)</title>
      <rect x="11.4688%" y="485" width="4.4266%" height="15" fill="rgb(244,108,51)" fg:x="57" fg:w="22"/>
      <text x="11.7188%" y="495.50">&lt;std:..</text>
    </g>
    <g>
      <title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::flush (22 samples, 4.43%)</title>
      <rect x="11.4688%" y="469" width="4.4266%" height="15" fill="rgb(224,207,51)" fg:x="57" fg:w="22"/>
      <text x="11.7188%" y="479.50">&lt;&amp;std..</text>
    </g>
    <g>
      <title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (22 samples, 4.43%)</title>
      <rect x="11.4688%" y="453" width="4.4266%" height="15" fill="rgb(240,178,54)" fg:x="57" fg:w="22"/>
      <text x="11.7188%" y="463.50">std::..</text>
    </g>
    <g>
      <title>__GI___libc_write (22 samples, 4.43%)</title>
      <rect x="11.4688%" y="437" width="4.4266%" height="15" fill="rgb(232,197,30)" fg:x="57" fg:w="22"/>
      <text x="11.7188%" y="447.50">__GI_..</text>
    </g>
    <g>
      <title>__GI___pthread_disable_asynccancel (1 samples, 0.20%)</title>
      <rect x="15.6942%" y="421" width="0.2012%" height="15" fill="rgb(234,197,42)" fg:x="78" fg:w="1"/>
      <text x="15.9442%" y="431.50"/>
    </g>
    <g>
      <title>s4lib::printer::printers::PrinterLogMessage::print_journalentry_color (38 samples, 7.65%)</title>
      <rect x="8.6519%" y="501" width="7.6459%" height="15" fill="rgb(248,209,52)" fg:x="43" fg:w="38"/>
      <text x="8.9019%" y="511.50">s4lib::pri..</text>
    </g>
    <g>
      <title>_dl_relocate_object (2 samples, 0.40%)</title>
      <rect x="16.2978%" y="293" width="0.4024%" height="15" fill="rgb(244,75,35)" fg:x="81" fg:w="2"/>
      <text x="16.5478%" y="303.50"/>
    </g>
    <g>
      <title>_dl_lookup_symbol_x (2 samples, 0.40%)</title>
      <rect x="16.2978%" y="277" width="0.4024%" height="15" fill="rgb(229,85,42)" fg:x="81" fg:w="2"/>
      <text x="16.5478%" y="287.50"/>
    </g>
    <g>
      <title>do_lookup_x (2 samples, 0.40%)</title>
      <rect x="16.2978%" y="261" width="0.4024%" height="15" fill="rgb(240,183,18)" fg:x="81" fg:w="2"/>
      <text x="16.5478%" y="271.50"/>
    </g>
    <g>
      <title>_dl_map_object_deps (1 samples, 0.20%)</title>
      <rect x="16.7002%" y="293" width="0.2012%" height="15" fill="rgb(208,68,2)" fg:x="83" fg:w="1"/>
      <text x="16.9502%" y="303.50"/>
    </g>
    <g>
      <title>_dl_catch_exception (1 samples, 0.20%)</title>
      <rect x="16.7002%" y="277" width="0.2012%" height="15" fill="rgb(238,71,42)" fg:x="83" fg:w="1"/>
      <text x="16.9502%" y="287.50"/>
    </g>
    <g>
      <title>openaux (1 samples, 0.20%)</title>
      <rect x="16.7002%" y="261" width="0.2012%" height="15" fill="rgb(215,55,1)" fg:x="83" fg:w="1"/>
      <text x="16.9502%" y="271.50"/>
    </g>
    <g>
      <title>_dl_map_object (1 samples, 0.20%)</title>
      <rect x="16.7002%" y="245" width="0.2012%" height="15" fill="rgb(247,77,9)" fg:x="83" fg:w="1"/>
      <text x="16.9502%" y="255.50"/>
    </g>
    <g>
      <title>_dl_map_object_from_fd (1 samples, 0.20%)</title>
      <rect x="16.7002%" y="229" width="0.2012%" height="15" fill="rgb(253,121,32)" fg:x="83" fg:w="1"/>
      <text x="16.9502%" y="239.50"/>
    </g>
    <g>
      <title>mmap64 (1 samples, 0.20%)</title>
      <rect x="16.7002%" y="213" width="0.2012%" height="15" fill="rgb(246,213,14)" fg:x="83" fg:w="1"/>
      <text x="16.9502%" y="223.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (1 samples, 0.20%)</title>
      <rect x="16.7002%" y="197" width="0.2012%" height="15" fill="rgb(205,226,15)" fg:x="83" fg:w="1"/>
      <text x="16.9502%" y="207.50"/>
    </g>
    <g>
      <title>do_syscall_64 (1 samples, 0.20%)</title>
      <rect x="16.7002%" y="181" width="0.2012%" height="15" fill="rgb(220,74,14)" fg:x="83" fg:w="1"/>
      <text x="16.9502%" y="191.50"/>
    </g>
    <g>
      <title>ksys_mmap_pgoff (1 samples, 0.20%)</title>
      <rect x="16.7002%" y="165" width="0.2012%" height="15" fill="rgb(248,1,16)" fg:x="83" fg:w="1"/>
      <text x="16.9502%" y="175.50"/>
    </g>
    <g>
      <title>vm_mmap_pgoff (1 samples, 0.20%)</title>
      <rect x="16.7002%" y="149" width="0.2012%" height="15" fill="rgb(226,196,1)" fg:x="83" fg:w="1"/>
      <text x="16.9502%" y="159.50"/>
    </g>
    <g>
      <title>do_mmap (1 samples, 0.20%)</title>
      <rect x="16.7002%" y="133" width="0.2012%" height="15" fill="rgb(228,25,27)" fg:x="83" fg:w="1"/>
      <text x="16.9502%" y="143.50"/>
    </g>
    <g>
      <title>mmap_region (1 samples, 0.20%)</title>
      <rect x="16.7002%" y="117" width="0.2012%" height="15" fill="rgb(233,57,38)" fg:x="83" fg:w="1"/>
      <text x="16.9502%" y="127.50"/>
    </g>
    <g>
      <title>perf_event_mmap (1 samples, 0.20%)</title>
      <rect x="16.7002%" y="101" width="0.2012%" height="15" fill="rgb(252,32,1)" fg:x="83" fg:w="1"/>
      <text x="16.9502%" y="111.50"/>
    </g>
    <g>
      <title>perf_iterate_sb (1 samples, 0.20%)</title>
      <rect x="16.7002%" y="85" width="0.2012%" height="15" fill="rgb(241,203,1)" fg:x="83" fg:w="1"/>
      <text x="16.9502%" y="95.50"/>
    </g>
    <g>
      <title>perf_iterate_ctx (1 samples, 0.20%)</title>
      <rect x="16.7002%" y="69" width="0.2012%" height="15" fill="rgb(227,133,21)" fg:x="83" fg:w="1"/>
      <text x="16.9502%" y="79.50"/>
    </g>
    <g>
      <title>perf_event_mmap_output (1 samples, 0.20%)</title>
      <rect x="16.7002%" y="53" width="0.2012%" height="15" fill="rgb(225,127,18)" fg:x="83" fg:w="1"/>
      <text x="16.9502%" y="63.50"/>
    </g>
    <g>
      <title>__perf_event__output_id_sample (1 samples, 0.20%)</title>
      <rect x="16.7002%" y="37" width="0.2012%" height="15" fill="rgb(209,115,25)" fg:x="83" fg:w="1"/>
      <text x="16.9502%" y="47.50"/>
    </g>
    <g>
      <title>s4lib::libload::systemd_dlopen2::load_library_systemd (4 samples, 0.80%)</title>
      <rect x="16.2978%" y="501" width="0.8048%" height="15" fill="rgb(209,147,6)" fg:x="81" fg:w="4"/>
      <text x="16.5478%" y="511.50"/>
    </g>
    <g>
      <title>dlopen2::wrapper::container::Container&lt;T&gt;::load (4 samples, 0.80%)</title>
      <rect x="16.2978%" y="485" width="0.8048%" height="15" fill="rgb(205,124,22)" fg:x="81" fg:w="4"/>
      <text x="16.5478%" y="495.50"/>
    </g>
    <g>
      <title>dlopen2::raw::common::Library::open (4 samples, 0.80%)</title>
      <rect x="16.2978%" y="469" width="0.8048%" height="15" fill="rgb(215,66,11)" fg:x="81" fg:w="4"/>
      <text x="16.5478%" y="479.50"/>
    </g>
    <g>
      <title>dlopen@GLIBC_2.2.5 (4 samples, 0.80%)</title>
      <rect x="16.2978%" y="453" width="0.8048%" height="15" fill="rgb(248,147,24)" fg:x="81" fg:w="4"/>
      <text x="16.5478%" y="463.50"/>
    </g>
    <g>
      <title>_dlerror_run (4 samples, 0.80%)</title>
      <rect x="16.2978%" y="437" width="0.8048%" height="15" fill="rgb(208,58,37)" fg:x="81" fg:w="4"/>
      <text x="16.5478%" y="447.50"/>
    </g>
    <g>
      <title>_dl_catch_error (4 samples, 0.80%)</title>
      <rect x="16.2978%" y="421" width="0.8048%" height="15" fill="rgb(251,190,30)" fg:x="81" fg:w="4"/>
      <text x="16.5478%" y="431.50"/>
    </g>
    <g>
      <title>_dl_catch_exception (4 samples, 0.80%)</title>
      <rect x="16.2978%" y="405" width="0.8048%" height="15" fill="rgb(238,71,42)" fg:x="81" fg:w="4"/>
      <text x="16.5478%" y="415.50"/>
    </g>
    <g>
      <title>dlopen_doit (4 samples, 0.80%)</title>
      <rect x="16.2978%" y="389" width="0.8048%" height="15" fill="rgb(227,103,25)" fg:x="81" fg:w="4"/>
      <text x="16.5478%" y="399.50"/>
    </g>
    <g>
      <title>_dl_open (4 samples, 0.80%)</title>
      <rect x="16.2978%" y="373" width="0.8048%" height="15" fill="rgb(246,203,24)" fg:x="81" fg:w="4"/>
      <text x="16.5478%" y="383.50"/>
    </g>
    <g>
      <title>_dl_catch_exception (4 samples, 0.80%)</title>
      <rect x="16.2978%" y="357" width="0.8048%" height="15" fill="rgb(238,71,42)" fg:x="81" fg:w="4"/>
      <text x="16.5478%" y="367.50"/>
    </g>
    <g>
      <title>dl_open_worker (4 samples, 0.80%)</title>
      <rect x="16.2978%" y="341" width="0.8048%" height="15" fill="rgb(248,64,50)" fg:x="81" fg:w="4"/>
      <text x="16.5478%" y="351.50"/>
    </g>
    <g>
      <title>_dl_catch_exception (4 samples, 0.80%)</title>
      <rect x="16.2978%" y="325" width="0.8048%" height="15" fill="rgb(238,71,42)" fg:x="81" fg:w="4"/>
      <text x="16.5478%" y="335.50"/>
    </g>
    <g>
      <title>dl_open_worker_begin (4 samples, 0.80%)</title>
      <rect x="16.2978%" y="309" width="0.8048%" height="15" fill="rgb(243,153,31)" fg:x="81" fg:w="4"/>
      <text x="16.5478%" y="319.50"/>
    </g>
    <g>
      <title>_dl_map_object (1 samples, 0.20%)</title>
      <rect x="16.9014%" y="293" width="0.2012%" height="15" fill="rgb(247,77,9)" fg:x="84" fg:w="1"/>
      <text x="17.1514%" y="303.50"/>
    </g>
    <g>
      <title>_dl_load_cache_lookup (1 samples, 0.20%)</title>
      <rect x="16.9014%" y="277" width="0.2012%" height="15" fill="rgb(216,8,51)" fg:x="84" fg:w="1"/>
      <text x="17.1514%" y="287.50"/>
    </g>
    <g>
      <title>hashbrown::set::HashSet&lt;T,S,A&gt;::remove (1 samples, 0.20%)</title>
      <rect x="17.1026%" y="501" width="0.2012%" height="15" fill="rgb(218,114,38)" fg:x="85" fg:w="1"/>
      <text x="17.3526%" y="511.50"/>
    </g>
    <g>
      <title>core::hash::BuildHasher::hash_one (1 samples, 0.20%)</title>
      <rect x="17.1026%" y="485" width="0.2012%" height="15" fill="rgb(222,198,6)" fg:x="85" fg:w="1"/>
      <text x="17.3526%" y="495.50"/>
    </g>
    <g>
      <title>crossbeam_channel::select::SelectedOperation::recv (2 samples, 0.40%)</title>
      <rect x="17.3038%" y="501" width="0.4024%" height="15" fill="rgb(206,140,19)" fg:x="86" fg:w="2"/>
      <text x="17.5538%" y="511.50"/>
    </g>
    <g>
      <title>crossbeam_channel::channel::read (2 samples, 0.40%)</title>
      <rect x="17.3038%" y="485" width="0.4024%" height="15" fill="rgb(209,181,8)" fg:x="86" fg:w="2"/>
      <text x="17.5538%" y="495.50"/>
    </g>
    <g>
      <title>__memmove_avx512_unaligned_erms (2 samples, 0.40%)</title>
      <rect x="17.3038%" y="469" width="0.4024%" height="15" fill="rgb(217,126,36)" fg:x="86" fg:w="2"/>
      <text x="17.5538%" y="479.50"/>
    </g>
    <g>
      <title>crossbeam_channel::select::Select::select (1 samples, 0.20%)</title>
      <rect x="17.7062%" y="501" width="0.2012%" height="15" fill="rgb(218,151,27)" fg:x="88" fg:w="1"/>
      <text x="17.9562%" y="511.50"/>
    </g>
    <g>
      <title>crossbeam_channel::select::run_select (1 samples, 0.20%)</title>
      <rect x="17.7062%" y="485" width="0.2012%" height="15" fill="rgb(238,41,29)" fg:x="88" fg:w="1"/>
      <text x="17.9562%" y="495.50"/>
    </g>
    <g>
      <title>&lt;crossbeam_channel::flavors::array::Receiver&lt;T&gt; as crossbeam_channel::select::SelectHandle&gt;::try_select (1 samples, 0.20%)</title>
      <rect x="17.7062%" y="469" width="0.2012%" height="15" fill="rgb(205,196,31)" fg:x="88" fg:w="1"/>
      <text x="17.9562%" y="479.50"/>
    </g>
    <g>
      <title>_int_free (1 samples, 0.20%)</title>
      <rect x="17.9074%" y="485" width="0.2012%" height="15" fill="rgb(221,113,48)" fg:x="89" fg:w="1"/>
      <text x="18.1574%" y="495.50"/>
    </g>
    <g>
      <title>cfree@GLIBC_2.2.5 (2 samples, 0.40%)</title>
      <rect x="17.9074%" y="501" width="0.4024%" height="15" fill="rgb(240,159,37)" fg:x="89" fg:w="2"/>
      <text x="18.1574%" y="511.50"/>
    </g>
    <g>
      <title>__lll_lock_wake_private (1 samples, 0.20%)</title>
      <rect x="18.1087%" y="485" width="0.2012%" height="15" fill="rgb(224,56,33)" fg:x="90" fg:w="1"/>
      <text x="18.3587%" y="495.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (1 samples, 0.20%)</title>
      <rect x="18.1087%" y="469" width="0.2012%" height="15" fill="rgb(205,226,15)" fg:x="90" fg:w="1"/>
      <text x="18.3587%" y="479.50"/>
    </g>
    <g>
      <title>do_syscall_64 (1 samples, 0.20%)</title>
      <rect x="18.1087%" y="453" width="0.2012%" height="15" fill="rgb(220,74,14)" fg:x="90" fg:w="1"/>
      <text x="18.3587%" y="463.50"/>
    </g>
    <g>
      <title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.20%)</title>
      <rect x="18.3099%" y="501" width="0.2012%" height="15" fill="rgb(213,87,31)" fg:x="91" fg:w="1"/>
      <text x="18.5599%" y="511.50"/>
    </g>
    <g>
      <title>__memmove_avx512_unaligned_erms (1 samples, 0.20%)</title>
      <rect x="18.5111%" y="501" width="0.2012%" height="15" fill="rgb(217,126,36)" fg:x="92" fg:w="1"/>
      <text x="18.7611%" y="511.50"/>
    </g>
    <g>
      <title>s4::processing_loop (52 samples, 10.46%)</title>
      <rect x="8.6519%" y="517" width="10.4628%" height="15" fill="rgb(233,182,14)" fg:x="43" fg:w="52"/>
      <text x="8.9019%" y="527.50">s4::processing_..</text>
    </g>
    <g>
      <title>std::rt::lang_start::_{{closure}} (53 samples, 10.66%)</title>
      <rect x="8.6519%" y="565" width="10.6640%" height="15" fill="rgb(225,45,7)" fg:x="43" fg:w="53"/>
      <text x="8.9019%" y="575.50">std::rt::lang_st..</text>
    </g>
    <g>
      <title>std::sys_common::backtrace::__rust_begin_short_backtrace (53 samples, 10.66%)</title>
      <rect x="8.6519%" y="549" width="10.6640%" height="15" fill="rgb(210,88,34)" fg:x="43" fg:w="53"/>
      <text x="8.9019%" y="559.50">std::sys_common:..</text>
    </g>
    <g>
      <title>s4::main (53 samples, 10.66%)</title>
      <rect x="8.6519%" y="533" width="10.6640%" height="15" fill="rgb(221,151,31)" fg:x="43" fg:w="53"/>
      <text x="8.9019%" y="543.50">s4::main</text>
    </g>
    <g>
      <title>&lt;s4::CLI_Args as clap_builder::derive::Args&gt;::augment_args (1 samples, 0.20%)</title>
      <rect x="19.1147%" y="517" width="0.2012%" height="15" fill="rgb(230,145,47)" fg:x="95" fg:w="1"/>
      <text x="19.3647%" y="527.50"/>
    </g>
    <g>
      <title>__memmove_avx512_unaligned_erms (1 samples, 0.20%)</title>
      <rect x="19.1147%" y="501" width="0.2012%" height="15" fill="rgb(217,126,36)" fg:x="95" fg:w="1"/>
      <text x="19.3647%" y="511.50"/>
    </g>
    <g>
      <title>s4 (97 samples, 19.52%)</title>
      <rect x="0.0000%" y="661" width="19.5171%" height="15" fill="rgb(230,7,27)" fg:x="0" fg:w="97"/>
      <text x="0.2500%" y="671.50">s4</text>
    </g>
    <g>
      <title>_start (59 samples, 11.87%)</title>
      <rect x="7.6459%" y="645" width="11.8712%" height="15" fill="rgb(210,219,27)" fg:x="38" fg:w="59"/>
      <text x="7.8959%" y="655.50">_start</text>
    </g>
    <g>
      <title>__libc_start_main@@GLIBC_2.34 (54 samples, 10.87%)</title>
      <rect x="8.6519%" y="629" width="10.8652%" height="15" fill="rgb(217,176,50)" fg:x="43" fg:w="54"/>
      <text x="8.9019%" y="639.50">__libc_start_mai..</text>
    </g>
    <g>
      <title>__libc_start_call_main (54 samples, 10.87%)</title>
      <rect x="8.6519%" y="613" width="10.8652%" height="15" fill="rgb(249,173,1)" fg:x="43" fg:w="54"/>
      <text x="8.9019%" y="623.50">__libc_start_cal..</text>
    </g>
    <g>
      <title>main (54 samples, 10.87%)</title>
      <rect x="8.6519%" y="597" width="10.8652%" height="15" fill="rgb(238,28,47)" fg:x="43" fg:w="54"/>
      <text x="8.9019%" y="607.50">main</text>
    </g>
    <g>
      <title>std::rt::lang_start_internal (54 samples, 10.87%)</title>
      <rect x="8.6519%" y="581" width="10.8652%" height="15" fill="rgb(240,177,54)" fg:x="43" fg:w="54"/>
      <text x="8.9019%" y="591.50">std::rt::lang_st..</text>
    </g>
    <g>
      <title>pthread_getattr_np@@GLIBC_2.32 (1 samples, 0.20%)</title>
      <rect x="19.3159%" y="565" width="0.2012%" height="15" fill="rgb(219,192,28)" fg:x="96" fg:w="1"/>
      <text x="19.5659%" y="575.50"/>
    </g>
    <g>
      <title>__getdelim (1 samples, 0.20%)</title>
      <rect x="19.3159%" y="549" width="0.2012%" height="15" fill="rgb(216,153,9)" fg:x="96" fg:w="1"/>
      <text x="19.5659%" y="559.50"/>
    </g>
    <g>
      <title>[libc.so.6] (1 samples, 0.20%)</title>
      <rect x="19.3159%" y="533" width="0.2012%" height="15" fill="rgb(253,161,50)" fg:x="96" fg:w="1"/>
      <text x="19.5659%" y="543.50"/>
    </g>
    <g>
      <title>perf-exec (12 samples, 2.41%)</title>
      <rect x="19.5171%" y="661" width="2.4145%" height="15" fill="rgb(250,111,27)" fg:x="97" fg:w="12"/>
      <text x="19.7671%" y="671.50">pe..</text>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (12 samples, 2.41%)</title>
      <rect x="19.5171%" y="645" width="2.4145%" height="15" fill="rgb(205,226,15)" fg:x="97" fg:w="12"/>
      <text x="19.7671%" y="655.50">en..</text>
    </g>
    <g>
      <title>do_syscall_64 (12 samples, 2.41%)</title>
      <rect x="19.5171%" y="629" width="2.4145%" height="15" fill="rgb(220,74,14)" fg:x="97" fg:w="12"/>
      <text x="19.7671%" y="639.50">do..</text>
    </g>
    <g>
      <title>__x64_sys_execve (12 samples, 2.41%)</title>
      <rect x="19.5171%" y="613" width="2.4145%" height="15" fill="rgb(237,59,15)" fg:x="97" fg:w="12"/>
      <text x="19.7671%" y="623.50">__..</text>
    </g>
    <g>
      <title>do_execveat_common.isra.0 (12 samples, 2.41%)</title>
      <rect x="19.5171%" y="597" width="2.4145%" height="15" fill="rgb(248,134,53)" fg:x="97" fg:w="12"/>
      <text x="19.7671%" y="607.50">do..</text>
    </g>
    <g>
      <title>bprm_execve (12 samples, 2.41%)</title>
      <rect x="19.5171%" y="581" width="2.4145%" height="15" fill="rgb(232,147,16)" fg:x="97" fg:w="12"/>
      <text x="19.7671%" y="591.50">bp..</text>
    </g>
    <g>
      <title>load_elf_binary (12 samples, 2.41%)</title>
      <rect x="19.5171%" y="565" width="2.4145%" height="15" fill="rgb(246,102,21)" fg:x="97" fg:w="12"/>
      <text x="19.7671%" y="575.50">lo..</text>
    </g>
    <g>
      <title>begin_new_exec (12 samples, 2.41%)</title>
      <rect x="19.5171%" y="549" width="2.4145%" height="15" fill="rgb(219,195,31)" fg:x="97" fg:w="12"/>
      <text x="19.7671%" y="559.50">be..</text>
    </g>
    <g>
      <title>perf_event_exec (12 samples, 2.41%)</title>
      <rect x="19.5171%" y="533" width="2.4145%" height="15" fill="rgb(225,89,21)" fg:x="97" fg:w="12"/>
      <text x="19.7671%" y="543.50">pe..</text>
    </g>
    <g>
      <title>ctrl-c (1 samples, 0.20%)</title>
      <rect x="21.9316%" y="661" width="0.2012%" height="15" fill="rgb(217,0,15)" fg:x="109" fg:w="1"/>
      <text x="22.1816%" y="671.50"/>
    </g>
    <g>
      <title>clone3 (1 samples, 0.20%)</title>
      <rect x="21.9316%" y="645" width="0.2012%" height="15" fill="rgb(208,138,34)" fg:x="109" fg:w="1"/>
      <text x="22.1816%" y="655.50"/>
    </g>
    <g>
      <title>start_thread (1 samples, 0.20%)</title>
      <rect x="21.9316%" y="629" width="0.2012%" height="15" fill="rgb(209,148,13)" fg:x="109" fg:w="1"/>
      <text x="22.1816%" y="639.50"/>
    </g>
    <g>
      <title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.20%)</title>
      <rect x="21.9316%" y="613" width="0.2012%" height="15" fill="rgb(215,36,0)" fg:x="109" fg:w="1"/>
      <text x="22.1816%" y="623.50"/>
    </g>
    <g>
      <title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.20%)</title>
      <rect x="21.9316%" y="597" width="0.2012%" height="15" fill="rgb(218,104,40)" fg:x="109" fg:w="1"/>
      <text x="22.1816%" y="607.50"/>
    </g>
    <g>
      <title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.20%)</title>
      <rect x="21.9316%" y="581" width="0.2012%" height="15" fill="rgb(210,88,34)" fg:x="109" fg:w="1"/>
      <text x="22.1816%" y="591.50"/>
    </g>
    <g>
      <title>nix::unistd::read (1 samples, 0.20%)</title>
      <rect x="21.9316%" y="565" width="0.2012%" height="15" fill="rgb(224,130,35)" fg:x="109" fg:w="1"/>
      <text x="22.1816%" y="575.50"/>
    </g>
    <g>
      <title>read (1 samples, 0.20%)</title>
      <rect x="21.9316%" y="549" width="0.2012%" height="15" fill="rgb(209,69,29)" fg:x="109" fg:w="1"/>
      <text x="22.1816%" y="559.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (1 samples, 0.20%)</title>
      <rect x="21.9316%" y="533" width="0.2012%" height="15" fill="rgb(205,226,15)" fg:x="109" fg:w="1"/>
      <text x="22.1816%" y="543.50"/>
    </g>
    <g>
      <title>do_syscall_64 (1 samples, 0.20%)</title>
      <rect x="21.9316%" y="517" width="0.2012%" height="15" fill="rgb(220,74,14)" fg:x="109" fg:w="1"/>
      <text x="22.1816%" y="527.50"/>
    </g>
    <g>
      <title>syscall_exit_to_user_mode (1 samples, 0.20%)</title>
      <rect x="21.9316%" y="501" width="0.2012%" height="15" fill="rgb(215,101,28)" fg:x="109" fg:w="1"/>
      <text x="22.1816%" y="511.50"/>
    </g>
    <g>
      <title>exit_to_user_mode_prepare (1 samples, 0.20%)</title>
      <rect x="21.9316%" y="485" width="0.2012%" height="15" fill="rgb(240,77,26)" fg:x="109" fg:w="1"/>
      <text x="22.1816%" y="495.50"/>
    </g>
    <g>
      <title>arch_do_signal_or_restart (1 samples, 0.20%)</title>
      <rect x="21.9316%" y="469" width="0.2012%" height="15" fill="rgb(236,153,36)" fg:x="109" fg:w="1"/>
      <text x="22.1816%" y="479.50"/>
    </g>
    <g>
      <title>get_signal (1 samples, 0.20%)</title>
      <rect x="21.9316%" y="453" width="0.2012%" height="15" fill="rgb(219,222,19)" fg:x="109" fg:w="1"/>
      <text x="22.1816%" y="463.50"/>
    </g>
    <g>
      <title>do_group_exit (1 samples, 0.20%)</title>
      <rect x="21.9316%" y="437" width="0.2012%" height="15" fill="rgb(241,5,8)" fg:x="109" fg:w="1"/>
      <text x="22.1816%" y="447.50"/>
    </g>
    <g>
      <title>do_exit (1 samples, 0.20%)</title>
      <rect x="21.9316%" y="421" width="0.2012%" height="15" fill="rgb(238,144,25)" fg:x="109" fg:w="1"/>
      <text x="22.1816%" y="431.50"/>
    </g>
    <g>
      <title>exit_signals (1 samples, 0.20%)</title>
      <rect x="21.9316%" y="405" width="0.2012%" height="15" fill="rgb(232,22,46)" fg:x="109" fg:w="1"/>
      <text x="22.1816%" y="415.50"/>
    </g>
    <g>
      <title>[libsystemd.so.0.32.0] (5 samples, 1.01%)</title>
      <rect x="22.1328%" y="469" width="1.0060%" height="15" fill="rgb(211,164,11)" fg:x="110" fg:w="5"/>
      <text x="22.3828%" y="479.50"/>
    </g>
    <g>
      <title>[libsystemd.so.0.32.0] (7 samples, 1.41%)</title>
      <rect x="22.1328%" y="485" width="1.4085%" height="15" fill="rgb(211,164,11)" fg:x="110" fg:w="7"/>
      <text x="22.3828%" y="495.50"/>
    </g>
    <g>
      <title>sd_journal_enumerate_available_data (15 samples, 3.02%)</title>
      <rect x="22.1328%" y="533" width="3.0181%" height="15" fill="rgb(233,38,20)" fg:x="110" fg:w="15"/>
      <text x="22.3828%" y="543.50">sd_..</text>
    </g>
    <g>
      <title>sd_journal_enumerate_data (15 samples, 3.02%)</title>
      <rect x="22.1328%" y="517" width="3.0181%" height="15" fill="rgb(253,48,41)" fg:x="110" fg:w="15"/>
      <text x="22.3828%" y="527.50">sd_..</text>
    </g>
    <g>
      <title>[libsystemd.so.0.32.0] (15 samples, 3.02%)</title>
      <rect x="22.1328%" y="501" width="3.0181%" height="15" fill="rgb(211,164,11)" fg:x="110" fg:w="15"/>
      <text x="22.3828%" y="511.50">[li..</text>
    </g>
    <g>
      <title>sd_journal_get_realtime_usec (1 samples, 0.20%)</title>
      <rect x="25.1509%" y="517" width="0.2012%" height="15" fill="rgb(220,118,3)" fg:x="125" fg:w="1"/>
      <text x="25.4009%" y="527.50"/>
    </g>
    <g>
      <title>[libsystemd.so.0.32.0] (1 samples, 0.20%)</title>
      <rect x="25.1509%" y="501" width="0.2012%" height="15" fill="rgb(211,164,11)" fg:x="125" fg:w="1"/>
      <text x="25.4009%" y="511.50"/>
    </g>
    <g>
      <title>[libsystemd.so.0.32.0] (1 samples, 0.20%)</title>
      <rect x="25.1509%" y="485" width="0.2012%" height="15" fill="rgb(211,164,11)" fg:x="125" fg:w="1"/>
      <text x="25.4009%" y="495.50"/>
    </g>
    <g>
      <title>asm_exc_page_fault (1 samples, 0.20%)</title>
      <rect x="25.3521%" y="501" width="0.2012%" height="15" fill="rgb(208,26,13)" fg:x="126" fg:w="1"/>
      <text x="25.6021%" y="511.50"/>
    </g>
    <g>
      <title>exc_page_fault (1 samples, 0.20%)</title>
      <rect x="25.3521%" y="485" width="0.2012%" height="15" fill="rgb(216,51,29)" fg:x="126" fg:w="1"/>
      <text x="25.6021%" y="495.50"/>
    </g>
    <g>
      <title>do_user_addr_fault (1 samples, 0.20%)</title>
      <rect x="25.3521%" y="469" width="0.2012%" height="15" fill="rgb(253,37,52)" fg:x="126" fg:w="1"/>
      <text x="25.6021%" y="479.50"/>
    </g>
    <g>
      <title>handle_mm_fault (1 samples, 0.20%)</title>
      <rect x="25.3521%" y="453" width="0.2012%" height="15" fill="rgb(247,31,49)" fg:x="126" fg:w="1"/>
      <text x="25.6021%" y="463.50"/>
    </g>
    <g>
      <title>__handle_mm_fault (1 samples, 0.20%)</title>
      <rect x="25.3521%" y="437" width="0.2012%" height="15" fill="rgb(254,123,40)" fg:x="126" fg:w="1"/>
      <text x="25.6021%" y="447.50"/>
    </g>
    <g>
      <title>filemap_map_pages (1 samples, 0.20%)</title>
      <rect x="25.3521%" y="421" width="0.2012%" height="15" fill="rgb(240,96,12)" fg:x="126" fg:w="1"/>
      <text x="25.6021%" y="431.50"/>
    </g>
    <g>
      <title>next_uptodate_page (1 samples, 0.20%)</title>
      <rect x="25.3521%" y="405" width="0.2012%" height="15" fill="rgb(231,221,15)" fg:x="126" fg:w="1"/>
      <text x="25.6021%" y="415.50"/>
    </g>
    <g>
      <title>[libsystemd.so.0.32.0] (1 samples, 0.20%)</title>
      <rect x="25.5533%" y="469" width="0.2012%" height="15" fill="rgb(211,164,11)" fg:x="127" fg:w="1"/>
      <text x="25.8033%" y="479.50"/>
    </g>
    <g>
      <title>[libsystemd.so.0.32.0] (3 samples, 0.60%)</title>
      <rect x="25.5533%" y="485" width="0.6036%" height="15" fill="rgb(211,164,11)" fg:x="127" fg:w="3"/>
      <text x="25.8033%" y="495.50"/>
    </g>
    <g>
      <title>[libsystemd.so.0.32.0] (6 samples, 1.21%)</title>
      <rect x="25.5533%" y="501" width="1.2072%" height="15" fill="rgb(211,164,11)" fg:x="127" fg:w="6"/>
      <text x="25.8033%" y="511.50"/>
    </g>
    <g>
      <title>sd_journal_get_data (8 samples, 1.61%)</title>
      <rect x="25.3521%" y="517" width="1.6097%" height="15" fill="rgb(223,156,7)" fg:x="126" fg:w="8"/>
      <text x="25.6021%" y="527.50"/>
    </g>
    <g>
      <title>malloc (2 samples, 0.40%)</title>
      <rect x="26.9618%" y="485" width="0.4024%" height="15" fill="rgb(250,195,53)" fg:x="134" fg:w="2"/>
      <text x="27.2118%" y="495.50"/>
    </g>
    <g>
      <title>_int_malloc (2 samples, 0.40%)</title>
      <rect x="26.9618%" y="469" width="0.4024%" height="15" fill="rgb(222,219,51)" fg:x="134" fg:w="2"/>
      <text x="27.2118%" y="479.50"/>
    </g>
    <g>
      <title>core::fmt::Formatter::pad (1 samples, 0.20%)</title>
      <rect x="27.3642%" y="469" width="0.2012%" height="15" fill="rgb(213,99,10)" fg:x="136" fg:w="1"/>
      <text x="27.6142%" y="479.50"/>
    </g>
    <g>
      <title>core::unicode::unicode_data::grapheme_extend::lookup (2 samples, 0.40%)</title>
      <rect x="27.5654%" y="453" width="0.4024%" height="15" fill="rgb(252,148,43)" fg:x="137" fg:w="2"/>
      <text x="27.8154%" y="463.50"/>
    </g>
    <g>
      <title>&lt;str as core::fmt::Debug&gt;::fmt (3 samples, 0.60%)</title>
      <rect x="27.5654%" y="469" width="0.6036%" height="15" fill="rgb(215,221,20)" fg:x="137" fg:w="3"/>
      <text x="27.8154%" y="479.50"/>
    </g>
    <g>
      <title>core::unicode::printable::is_printable (1 samples, 0.20%)</title>
      <rect x="27.9678%" y="453" width="0.2012%" height="15" fill="rgb(208,130,50)" fg:x="139" fg:w="1"/>
      <text x="28.2178%" y="463.50"/>
    </g>
    <g>
      <title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.20%)</title>
      <rect x="28.1690%" y="469" width="0.2012%" height="15" fill="rgb(250,109,27)" fg:x="140" fg:w="1"/>
      <text x="28.4190%" y="479.50"/>
    </g>
    <g>
      <title>__memmove_avx512_unaligned_erms (1 samples, 0.20%)</title>
      <rect x="28.1690%" y="453" width="0.2012%" height="15" fill="rgb(217,126,36)" fg:x="140" fg:w="1"/>
      <text x="28.4190%" y="463.50"/>
    </g>
    <g>
      <title>core::fmt::write (6 samples, 1.21%)</title>
      <rect x="27.3642%" y="485" width="1.2072%" height="15" fill="rgb(248,210,20)" fg:x="136" fg:w="6"/>
      <text x="27.6142%" y="495.50"/>
    </g>
    <g>
      <title>s4lib::readers::journalreader::JournalReader::Error_from_Errno (9 samples, 1.81%)</title>
      <rect x="26.9618%" y="517" width="1.8109%" height="15" fill="rgb(229,197,29)" fg:x="134" fg:w="9"/>
      <text x="27.2118%" y="527.50">s..</text>
    </g>
    <g>
      <title>alloc::fmt::format::format_inner (9 samples, 1.81%)</title>
      <rect x="26.9618%" y="501" width="1.8109%" height="15" fill="rgb(225,219,39)" fg:x="134" fg:w="9"/>
      <text x="27.2118%" y="511.50">a..</text>
    </g>
    <g>
      <title>core::ptr::drop_in_place&lt;&lt;alloc::boxed::Box&lt;dyn core::error::Error+core::marker::Send+core::marker::Sync&gt; as core::convert::From&lt;alloc::string::String&gt;&gt;::from::StringError&gt; (1 samples, 0.20%)</title>
      <rect x="28.7726%" y="517" width="0.2012%" height="15" fill="rgb(240,80,14)" fg:x="143" fg:w="1"/>
      <text x="29.0226%" y="527.50"/>
    </g>
    <g>
      <title>[libsystemd.so.0.32.0] (1 samples, 0.20%)</title>
      <rect x="28.9738%" y="453" width="0.2012%" height="15" fill="rgb(211,164,11)" fg:x="144" fg:w="1"/>
      <text x="29.2238%" y="463.50"/>
    </g>
    <g>
      <title>[libsystemd.so.0.32.0] (1 samples, 0.20%)</title>
      <rect x="28.9738%" y="437" width="0.2012%" height="15" fill="rgb(211,164,11)" fg:x="144" fg:w="1"/>
      <text x="29.2238%" y="447.50"/>
    </g>
    <g>
      <title>[libsystemd.so.0.32.0] (1 samples, 0.20%)</title>
      <rect x="28.9738%" y="421" width="0.2012%" height="15" fill="rgb(211,164,11)" fg:x="144" fg:w="1"/>
      <text x="29.2238%" y="431.50"/>
    </g>
    <g>
      <title>[libsystemd.so.0.32.0] (2 samples, 0.40%)</title>
      <rect x="28.9738%" y="485" width="0.4024%" height="15" fill="rgb(211,164,11)" fg:x="144" fg:w="2"/>
      <text x="29.2238%" y="495.50"/>
    </g>
    <g>
      <title>[libsystemd.so.0.32.0] (2 samples, 0.40%)</title>
      <rect x="28.9738%" y="469" width="0.4024%" height="15" fill="rgb(211,164,11)" fg:x="144" fg:w="2"/>
      <text x="29.2238%" y="479.50"/>
    </g>
    <g>
      <title>s4lib::readers::journalreader::JournalReader::next_common (22 samples, 4.43%)</title>
      <rect x="25.1509%" y="533" width="4.4266%" height="15" fill="rgb(253,190,43)" fg:x="125" fg:w="22"/>
      <text x="25.4009%" y="543.50">s4lib..</text>
    </g>
    <g>
      <title>[libsystemd.so.0.32.0] (3 samples, 0.60%)</title>
      <rect x="28.9738%" y="517" width="0.6036%" height="15" fill="rgb(211,164,11)" fg:x="144" fg:w="3"/>
      <text x="29.2238%" y="527.50"/>
    </g>
    <g>
      <title>[libsystemd.so.0.32.0] (3 samples, 0.60%)</title>
      <rect x="28.9738%" y="501" width="0.6036%" height="15" fill="rgb(211,164,11)" fg:x="144" fg:w="3"/>
      <text x="29.2238%" y="511.50"/>
    </g>
    <g>
      <title>memchr::arch::x86_64::memchr::memchr_raw::find_avx2 (2 samples, 0.40%)</title>
      <rect x="29.5775%" y="533" width="0.4024%" height="15" fill="rgb(242,174,18)" fg:x="147" fg:w="2"/>
      <text x="29.8275%" y="543.50"/>
    </g>
    <g>
      <title>memchr::arch::x86_64::avx2::memchr::One::find_raw (2 samples, 0.40%)</title>
      <rect x="29.5775%" y="517" width="0.4024%" height="15" fill="rgb(232,209,29)" fg:x="147" fg:w="2"/>
      <text x="29.8275%" y="527.50"/>
    </g>
    <g>
      <title>malloc (2 samples, 0.40%)</title>
      <rect x="29.9799%" y="533" width="0.4024%" height="15" fill="rgb(250,195,53)" fg:x="149" fg:w="2"/>
      <text x="30.2299%" y="543.50"/>
    </g>
    <g>
      <title>_int_malloc (2 samples, 0.40%)</title>
      <rect x="29.9799%" y="517" width="0.4024%" height="15" fill="rgb(222,219,51)" fg:x="149" fg:w="2"/>
      <text x="30.2299%" y="527.50"/>
    </g>
    <g>
      <title>chrono::format::formatting::DelayedFormat&lt;I&gt;::new_with_offset (1 samples, 0.20%)</title>
      <rect x="30.3823%" y="533" width="0.2012%" height="15" fill="rgb(250,9,12)" fg:x="151" fg:w="1"/>
      <text x="30.6323%" y="543.50"/>
    </g>
    <g>
      <title>&lt;chrono::offset::fixed::FixedOffset as core::fmt::Debug&gt;::fmt (1 samples, 0.20%)</title>
      <rect x="30.3823%" y="517" width="0.2012%" height="15" fill="rgb(236,160,0)" fg:x="151" fg:w="1"/>
      <text x="30.6323%" y="527.50"/>
    </g>
    <g>
      <title>&lt;core::fmt::Formatter as core::fmt::Write&gt;::write_fmt (1 samples, 0.20%)</title>
      <rect x="30.3823%" y="501" width="0.2012%" height="15" fill="rgb(253,7,45)" fg:x="151" fg:w="1"/>
      <text x="30.6323%" y="511.50"/>
    </g>
    <g>
      <title>core::fmt::write (1 samples, 0.20%)</title>
      <rect x="30.3823%" y="485" width="0.2012%" height="15" fill="rgb(248,210,20)" fg:x="151" fg:w="1"/>
      <text x="30.6323%" y="495.50"/>
    </g>
    <g>
      <title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (1 samples, 0.20%)</title>
      <rect x="30.3823%" y="469" width="0.2012%" height="15" fill="rgb(247,117,39)" fg:x="151" fg:w="1"/>
      <text x="30.6323%" y="479.50"/>
    </g>
    <g>
      <title>core::fmt::Formatter::pad_integral (1 samples, 0.20%)</title>
      <rect x="30.3823%" y="453" width="0.2012%" height="15" fill="rgb(249,31,39)" fg:x="151" fg:w="1"/>
      <text x="30.6323%" y="463.50"/>
    </g>
    <g>
      <title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (1 samples, 0.20%)</title>
      <rect x="30.3823%" y="437" width="0.2012%" height="15" fill="rgb(246,6,32)" fg:x="151" fg:w="1"/>
      <text x="30.6323%" y="447.50"/>
    </g>
    <g>
      <title>__memmove_avx512_unaligned_erms (2 samples, 0.40%)</title>
      <rect x="30.5835%" y="533" width="0.4024%" height="15" fill="rgb(217,126,36)" fg:x="152" fg:w="2"/>
      <text x="30.8335%" y="543.50"/>
    </g>
    <g>
      <title>s4lib::readers::journalreader::JournalReader::next_short (46 samples, 9.26%)</title>
      <rect x="22.1328%" y="549" width="9.2555%" height="15" fill="rgb(239,51,26)" fg:x="110" fg:w="46"/>
      <text x="22.3828%" y="559.50">s4lib::reader..</text>
    </g>
    <g>
      <title>&lt;chrono::format::formatting::DelayedFormat&lt;I&gt; as core::fmt::Display&gt;::fmt (2 samples, 0.40%)</title>
      <rect x="30.9859%" y="533" width="0.4024%" height="15" fill="rgb(231,60,11)" fg:x="154" fg:w="2"/>
      <text x="31.2359%" y="543.50"/>
    </g>
    <g>
      <title>s4lib::readers::journalreader::JournalReader::new (1 samples, 0.20%)</title>
      <rect x="31.3883%" y="549" width="0.2012%" height="15" fill="rgb(241,172,36)" fg:x="156" fg:w="1"/>
      <text x="31.6383%" y="559.50"/>
    </g>
    <g>
      <title>&lt;tempfile::file::TempPath as core::convert::AsRef&lt;std::ffi::os_str::OsStr&gt;&gt;::as_ref (1 samples, 0.20%)</title>
      <rect x="31.3883%" y="533" width="0.2012%" height="15" fill="rgb(237,130,50)" fg:x="156" fg:w="1"/>
      <text x="31.6383%" y="543.50"/>
    </g>
    <g>
      <title>clone3 (48 samples, 9.66%)</title>
      <rect x="22.1328%" y="645" width="9.6579%" height="15" fill="rgb(208,138,34)" fg:x="110" fg:w="48"/>
      <text x="22.3828%" y="655.50">clone3</text>
    </g>
    <g>
      <title>start_thread (48 samples, 9.66%)</title>
      <rect x="22.1328%" y="629" width="9.6579%" height="15" fill="rgb(209,148,13)" fg:x="110" fg:w="48"/>
      <text x="22.3828%" y="639.50">start_thread</text>
    </g>
    <g>
      <title>std::sys::unix::thread::Thread::new::thread_start (48 samples, 9.66%)</title>
      <rect x="22.1328%" y="613" width="9.6579%" height="15" fill="rgb(215,36,0)" fg:x="110" fg:w="48"/>
      <text x="22.3828%" y="623.50">std::sys::unix..</text>
    </g>
    <g>
      <title>core::ops::function::FnOnce::call_once{{vtable.shim}} (48 samples, 9.66%)</title>
      <rect x="22.1328%" y="597" width="9.6579%" height="15" fill="rgb(218,104,40)" fg:x="110" fg:w="48"/>
      <text x="22.3828%" y="607.50">core::ops::fun..</text>
    </g>
    <g>
      <title>std::sys_common::backtrace::__rust_begin_short_backtrace (48 samples, 9.66%)</title>
      <rect x="22.1328%" y="581" width="9.6579%" height="15" fill="rgb(210,88,34)" fg:x="110" fg:w="48"/>
      <text x="22.3828%" y="591.50">std::sys_commo..</text>
    </g>
    <g>
      <title>s4::exec_fileprocessor_thread (48 samples, 9.66%)</title>
      <rect x="22.1328%" y="565" width="9.6579%" height="15" fill="rgb(245,49,27)" fg:x="110" fg:w="48"/>
      <text x="22.3828%" y="575.50">s4::exec_filep..</text>
    </g>
    <g>
      <title>crossbeam_channel::channel::Sender&lt;T&gt;::send (1 samples, 0.20%)</title>
      <rect x="31.5895%" y="549" width="0.2012%" height="15" fill="rgb(211,156,23)" fg:x="157" fg:w="1"/>
      <text x="31.8395%" y="559.50"/>
    </g>
    <g>
      <title>asm_exc_page_fault (1 samples, 0.20%)</title>
      <rect x="31.7907%" y="645" width="0.2012%" height="15" fill="rgb(208,26,13)" fg:x="158" fg:w="1"/>
      <text x="32.0407%" y="655.50"/>
    </g>
    <g>
      <title>exc_page_fault (1 samples, 0.20%)</title>
      <rect x="31.7907%" y="629" width="0.2012%" height="15" fill="rgb(216,51,29)" fg:x="158" fg:w="1"/>
      <text x="32.0407%" y="639.50"/>
    </g>
    <g>
      <title>do_user_addr_fault (1 samples, 0.20%)</title>
      <rect x="31.7907%" y="613" width="0.2012%" height="15" fill="rgb(253,37,52)" fg:x="158" fg:w="1"/>
      <text x="32.0407%" y="623.50"/>
    </g>
    <g>
      <title>handle_mm_fault (1 samples, 0.20%)</title>
      <rect x="31.7907%" y="597" width="0.2012%" height="15" fill="rgb(247,31,49)" fg:x="158" fg:w="1"/>
      <text x="32.0407%" y="607.50"/>
    </g>
    <g>
      <title>__handle_mm_fault (1 samples, 0.20%)</title>
      <rect x="31.7907%" y="581" width="0.2012%" height="15" fill="rgb(254,123,40)" fg:x="158" fg:w="1"/>
      <text x="32.0407%" y="591.50"/>
    </g>
    <g>
      <title>__alloc_pages (1 samples, 0.20%)</title>
      <rect x="31.7907%" y="565" width="0.2012%" height="15" fill="rgb(244,104,38)" fg:x="158" fg:w="1"/>
      <text x="32.0407%" y="575.50"/>
    </g>
    <g>
      <title>get_page_from_freelist (1 samples, 0.20%)</title>
      <rect x="31.7907%" y="549" width="0.2012%" height="15" fill="rgb(246,35,53)" fg:x="158" fg:w="1"/>
      <text x="32.0407%" y="559.50"/>
    </g>
    <g>
      <title>kernel_init_free_pages.part.0 (1 samples, 0.20%)</title>
      <rect x="31.7907%" y="533" width="0.2012%" height="15" fill="rgb(224,1,41)" fg:x="158" fg:w="1"/>
      <text x="32.0407%" y="543.50"/>
    </g>
    <g>
      <title>clear_page_erms (1 samples, 0.20%)</title>
      <rect x="31.7907%" y="517" width="0.2012%" height="15" fill="rgb(253,135,51)" fg:x="158" fg:w="1"/>
      <text x="32.0407%" y="527.50"/>
    </g>
    <g>
      <title>srso_alias_safe_ret (1 samples, 0.20%)</title>
      <rect x="31.9920%" y="517" width="0.2012%" height="15" fill="rgb(248,122,31)" fg:x="159" fg:w="1"/>
      <text x="32.2420%" y="527.50"/>
    </g>
    <g>
      <title>ext4_reserve_inode_write (1 samples, 0.20%)</title>
      <rect x="32.1932%" y="373" width="0.2012%" height="15" fill="rgb(232,18,0)" fg:x="160" fg:w="1"/>
      <text x="32.4432%" y="383.50"/>
    </g>
    <g>
      <title>__ext4_journal_get_write_access (1 samples, 0.20%)</title>
      <rect x="32.1932%" y="357" width="0.2012%" height="15" fill="rgb(219,28,3)" fg:x="160" fg:w="1"/>
      <text x="32.4432%" y="367.50"/>
    </g>
    <g>
      <title>ext4_inode_csum_set (1 samples, 0.20%)</title>
      <rect x="32.3944%" y="357" width="0.2012%" height="15" fill="rgb(229,207,44)" fg:x="161" fg:w="1"/>
      <text x="32.6444%" y="367.50"/>
    </g>
    <g>
      <title>ext4_inode_csum (1 samples, 0.20%)</title>
      <rect x="32.3944%" y="341" width="0.2012%" height="15" fill="rgb(246,100,22)" fg:x="161" fg:w="1"/>
      <text x="32.6444%" y="351.50"/>
    </g>
    <g>
      <title>__ext4_mark_inode_dirty (3 samples, 0.60%)</title>
      <rect x="32.1932%" y="389" width="0.6036%" height="15" fill="rgb(250,159,10)" fg:x="160" fg:w="3"/>
      <text x="32.4432%" y="399.50"/>
    </g>
    <g>
      <title>ext4_mark_iloc_dirty (2 samples, 0.40%)</title>
      <rect x="32.3944%" y="373" width="0.4024%" height="15" fill="rgb(236,133,21)" fg:x="161" fg:w="2"/>
      <text x="32.6444%" y="383.50"/>
    </g>
    <g>
      <title>ext4_fc_track_inode (1 samples, 0.20%)</title>
      <rect x="32.5956%" y="357" width="0.2012%" height="15" fill="rgb(206,21,50)" fg:x="162" fg:w="1"/>
      <text x="32.8456%" y="367.50"/>
    </g>
    <g>
      <title>ext4_dirty_inode (4 samples, 0.80%)</title>
      <rect x="32.1932%" y="405" width="0.8048%" height="15" fill="rgb(235,194,15)" fg:x="160" fg:w="4"/>
      <text x="32.4432%" y="415.50"/>
    </g>
    <g>
      <title>__ext4_journal_start_sb (1 samples, 0.20%)</title>
      <rect x="32.7968%" y="389" width="0.2012%" height="15" fill="rgb(251,66,45)" fg:x="163" fg:w="1"/>
      <text x="33.0468%" y="399.50"/>
    </g>
    <g>
      <title>jbd2__journal_start (1 samples, 0.20%)</title>
      <rect x="32.7968%" y="373" width="0.2012%" height="15" fill="rgb(212,174,30)" fg:x="163" fg:w="1"/>
      <text x="33.0468%" y="383.50"/>
    </g>
    <g>
      <title>start_this_handle (1 samples, 0.20%)</title>
      <rect x="32.7968%" y="357" width="0.2012%" height="15" fill="rgb(247,124,24)" fg:x="163" fg:w="1"/>
      <text x="33.0468%" y="367.50"/>
    </g>
    <g>
      <title>__mark_inode_dirty (5 samples, 1.01%)</title>
      <rect x="32.1932%" y="421" width="1.0060%" height="15" fill="rgb(212,91,54)" fg:x="160" fg:w="5"/>
      <text x="32.4432%" y="431.50"/>
    </g>
    <g>
      <title>__ext4_journal_stop (1 samples, 0.20%)</title>
      <rect x="32.9980%" y="405" width="0.2012%" height="15" fill="rgb(225,40,54)" fg:x="164" fg:w="1"/>
      <text x="33.2480%" y="415.50"/>
    </g>
    <g>
      <title>jbd2_journal_stop (1 samples, 0.20%)</title>
      <rect x="32.9980%" y="389" width="0.2012%" height="15" fill="rgb(229,91,7)" fg:x="164" fg:w="1"/>
      <text x="33.2480%" y="399.50"/>
    </g>
    <g>
      <title>stop_this_handle (1 samples, 0.20%)</title>
      <rect x="32.9980%" y="373" width="0.2012%" height="15" fill="rgb(240,3,51)" fg:x="164" fg:w="1"/>
      <text x="33.2480%" y="383.50"/>
    </g>
    <g>
      <title>__wake_up_common_lock (1 samples, 0.20%)</title>
      <rect x="32.9980%" y="357" width="0.2012%" height="15" fill="rgb(248,80,4)" fg:x="164" fg:w="1"/>
      <text x="33.2480%" y="367.50"/>
    </g>
    <g>
      <title>_raw_spin_lock_irqsave (1 samples, 0.20%)</title>
      <rect x="32.9980%" y="341" width="0.2012%" height="15" fill="rgb(206,213,41)" fg:x="164" fg:w="1"/>
      <text x="33.2480%" y="351.50"/>
    </g>
    <g>
      <title>xas_start (1 samples, 0.20%)</title>
      <rect x="33.1992%" y="341" width="0.2012%" height="15" fill="rgb(249,53,40)" fg:x="165" fg:w="1"/>
      <text x="33.4492%" y="351.50"/>
    </g>
    <g>
      <title>__xa_set_mark (2 samples, 0.40%)</title>
      <rect x="33.1992%" y="373" width="0.4024%" height="15" fill="rgb(239,212,30)" fg:x="165" fg:w="2"/>
      <text x="33.4492%" y="383.50"/>
    </g>
    <g>
      <title>xas_load (2 samples, 0.40%)</title>
      <rect x="33.1992%" y="357" width="0.4024%" height="15" fill="rgb(249,146,47)" fg:x="165" fg:w="2"/>
      <text x="33.4492%" y="367.50"/>
    </g>
    <g>
      <title>generic_write_end (8 samples, 1.61%)</title>
      <rect x="32.1932%" y="437" width="1.6097%" height="15" fill="rgb(207,107,21)" fg:x="160" fg:w="8"/>
      <text x="32.4432%" y="447.50"/>
    </g>
    <g>
      <title>__block_commit_write.constprop.0.isra.0 (3 samples, 0.60%)</title>
      <rect x="33.1992%" y="421" width="0.6036%" height="15" fill="rgb(249,65,48)" fg:x="165" fg:w="3"/>
      <text x="33.4492%" y="431.50"/>
    </g>
    <g>
      <title>mark_buffer_dirty (3 samples, 0.60%)</title>
      <rect x="33.1992%" y="405" width="0.6036%" height="15" fill="rgb(238,162,48)" fg:x="165" fg:w="3"/>
      <text x="33.4492%" y="415.50"/>
    </g>
    <g>
      <title>__set_page_dirty (3 samples, 0.60%)</title>
      <rect x="33.1992%" y="389" width="0.6036%" height="15" fill="rgb(221,172,50)" fg:x="165" fg:w="3"/>
      <text x="33.4492%" y="399.50"/>
    </g>
    <g>
      <title>__mod_lruvec_page_state (1 samples, 0.20%)</title>
      <rect x="33.6016%" y="373" width="0.2012%" height="15" fill="rgb(231,38,23)" fg:x="167" fg:w="1"/>
      <text x="33.8516%" y="383.50"/>
    </g>
    <g>
      <title>__mod_memcg_lruvec_state (1 samples, 0.20%)</title>
      <rect x="33.6016%" y="357" width="0.2012%" height="15" fill="rgb(247,169,19)" fg:x="167" fg:w="1"/>
      <text x="33.8516%" y="367.50"/>
    </g>
    <g>
      <title>cgroup_rstat_updated (1 samples, 0.20%)</title>
      <rect x="33.6016%" y="341" width="0.2012%" height="15" fill="rgb(232,180,27)" fg:x="167" fg:w="1"/>
      <text x="33.8516%" y="351.50"/>
    </g>
    <g>
      <title>xas_load (1 samples, 0.20%)</title>
      <rect x="33.8028%" y="389" width="0.2012%" height="15" fill="rgb(249,146,47)" fg:x="168" fg:w="1"/>
      <text x="34.0528%" y="399.50"/>
    </g>
    <g>
      <title>srso_alias_safe_ret (1 samples, 0.20%)</title>
      <rect x="33.8028%" y="373" width="0.2012%" height="15" fill="rgb(248,122,31)" fg:x="168" fg:w="1"/>
      <text x="34.0528%" y="383.50"/>
    </g>
    <g>
      <title>xas_find_conflict (1 samples, 0.20%)</title>
      <rect x="34.0040%" y="357" width="0.2012%" height="15" fill="rgb(210,127,24)" fg:x="169" fg:w="1"/>
      <text x="34.2540%" y="367.50"/>
    </g>
    <g>
      <title>__mem_cgroup_charge (1 samples, 0.20%)</title>
      <rect x="34.2052%" y="357" width="0.2012%" height="15" fill="rgb(222,56,28)" fg:x="170" fg:w="1"/>
      <text x="34.4552%" y="367.50"/>
    </g>
    <g>
      <title>charge_memcg (1 samples, 0.20%)</title>
      <rect x="34.2052%" y="341" width="0.2012%" height="15" fill="rgb(240,39,15)" fg:x="170" fg:w="1"/>
      <text x="34.4552%" y="351.50"/>
    </g>
    <g>
      <title>memcg_check_events.isra.0 (1 samples, 0.20%)</title>
      <rect x="34.2052%" y="325" width="0.2012%" height="15" fill="rgb(251,15,39)" fg:x="170" fg:w="1"/>
      <text x="34.4552%" y="335.50"/>
    </g>
    <g>
      <title>add_to_page_cache_lru (3 samples, 0.60%)</title>
      <rect x="34.0040%" y="389" width="0.6036%" height="15" fill="rgb(223,55,45)" fg:x="169" fg:w="3"/>
      <text x="34.2540%" y="399.50"/>
    </g>
    <g>
      <title>__add_to_page_cache_locked (3 samples, 0.60%)</title>
      <rect x="34.0040%" y="373" width="0.6036%" height="15" fill="rgb(229,179,48)" fg:x="169" fg:w="3"/>
      <text x="34.2540%" y="383.50"/>
    </g>
    <g>
      <title>grab_cache_page_write_begin (5 samples, 1.01%)</title>
      <rect x="33.8028%" y="421" width="1.0060%" height="15" fill="rgb(221,143,40)" fg:x="168" fg:w="5"/>
      <text x="34.0528%" y="431.50"/>
    </g>
    <g>
      <title>pagecache_get_page (5 samples, 1.01%)</title>
      <rect x="33.8028%" y="405" width="1.0060%" height="15" fill="rgb(254,146,25)" fg:x="168" fg:w="5"/>
      <text x="34.0528%" y="415.50"/>
    </g>
    <g>
      <title>__alloc_pages (1 samples, 0.20%)</title>
      <rect x="34.6076%" y="389" width="0.2012%" height="15" fill="rgb(244,104,38)" fg:x="172" fg:w="1"/>
      <text x="34.8576%" y="399.50"/>
    </g>
    <g>
      <title>get_page_from_freelist (1 samples, 0.20%)</title>
      <rect x="34.6076%" y="373" width="0.2012%" height="15" fill="rgb(246,35,53)" fg:x="172" fg:w="1"/>
      <text x="34.8576%" y="383.50"/>
    </g>
    <g>
      <title>rmqueue_bulk (1 samples, 0.20%)</title>
      <rect x="34.6076%" y="357" width="0.2012%" height="15" fill="rgb(251,33,45)" fg:x="172" fg:w="1"/>
      <text x="34.8576%" y="367.50"/>
    </g>
    <g>
      <title>__list_del_entry_valid (1 samples, 0.20%)</title>
      <rect x="34.6076%" y="341" width="0.2012%" height="15" fill="rgb(224,110,12)" fg:x="172" fg:w="1"/>
      <text x="34.8576%" y="351.50"/>
    </g>
    <g>
      <title>zero_user_segments (1 samples, 0.20%)</title>
      <rect x="34.8089%" y="405" width="0.2012%" height="15" fill="rgb(242,45,40)" fg:x="173" fg:w="1"/>
      <text x="35.0589%" y="415.50"/>
    </g>
    <g>
      <title>memset_erms (1 samples, 0.20%)</title>
      <rect x="34.8089%" y="389" width="0.2012%" height="15" fill="rgb(233,67,1)" fg:x="173" fg:w="1"/>
      <text x="35.0589%" y="399.50"/>
    </g>
    <g>
      <title>ext4_da_get_block_prep (1 samples, 0.20%)</title>
      <rect x="35.0101%" y="405" width="0.2012%" height="15" fill="rgb(235,98,3)" fg:x="174" fg:w="1"/>
      <text x="35.2601%" y="415.50"/>
    </g>
    <g>
      <title>ext4_es_insert_delayed_block (1 samples, 0.20%)</title>
      <rect x="35.0101%" y="389" width="0.2012%" height="15" fill="rgb(214,51,42)" fg:x="174" fg:w="1"/>
      <text x="35.2601%" y="399.50"/>
    </g>
    <g>
      <title>alloc_page_buffers (2 samples, 0.40%)</title>
      <rect x="35.2113%" y="373" width="0.4024%" height="15" fill="rgb(210,90,32)" fg:x="175" fg:w="2"/>
      <text x="35.4613%" y="383.50"/>
    </g>
    <g>
      <title>alloc_buffer_head (2 samples, 0.40%)</title>
      <rect x="35.2113%" y="357" width="0.4024%" height="15" fill="rgb(220,228,42)" fg:x="175" fg:w="2"/>
      <text x="35.4613%" y="367.50"/>
    </g>
    <g>
      <title>kmem_cache_alloc (2 samples, 0.40%)</title>
      <rect x="35.2113%" y="341" width="0.4024%" height="15" fill="rgb(223,51,51)" fg:x="175" fg:w="2"/>
      <text x="35.4613%" y="351.50"/>
    </g>
    <g>
      <title>ext4_da_write_begin (11 samples, 2.21%)</title>
      <rect x="33.8028%" y="437" width="2.2133%" height="15" fill="rgb(235,31,43)" fg:x="168" fg:w="11"/>
      <text x="34.0528%" y="447.50">e..</text>
    </g>
    <g>
      <title>__block_write_begin_int (6 samples, 1.21%)</title>
      <rect x="34.8089%" y="421" width="1.2072%" height="15" fill="rgb(211,15,34)" fg:x="173" fg:w="6"/>
      <text x="35.0589%" y="431.50"/>
    </g>
    <g>
      <title>create_page_buffers (4 samples, 0.80%)</title>
      <rect x="35.2113%" y="405" width="0.8048%" height="15" fill="rgb(227,99,15)" fg:x="175" fg:w="4"/>
      <text x="35.4613%" y="415.50"/>
    </g>
    <g>
      <title>create_empty_buffers (4 samples, 0.80%)</title>
      <rect x="35.2113%" y="389" width="0.8048%" height="15" fill="rgb(209,173,14)" fg:x="175" fg:w="4"/>
      <text x="35.4613%" y="399.50"/>
    </g>
    <g>
      <title>srso_alias_return_thunk (1 samples, 0.20%)</title>
      <rect x="36.0161%" y="421" width="0.2012%" height="15" fill="rgb(245,80,51)" fg:x="179" fg:w="1"/>
      <text x="36.2661%" y="431.50"/>
    </g>
    <g>
      <title>srso_alias_safe_ret (1 samples, 0.20%)</title>
      <rect x="36.0161%" y="405" width="0.2012%" height="15" fill="rgb(248,122,31)" fg:x="179" fg:w="1"/>
      <text x="36.2661%" y="415.50"/>
    </g>
    <g>
      <title>copy_page_from_iter_atomic (4 samples, 0.80%)</title>
      <rect x="36.0161%" y="437" width="0.8048%" height="15" fill="rgb(247,27,48)" fg:x="179" fg:w="4"/>
      <text x="36.2661%" y="447.50"/>
    </g>
    <g>
      <title>copy_user_enhanced_fast_string (3 samples, 0.60%)</title>
      <rect x="36.2173%" y="421" width="0.6036%" height="15" fill="rgb(254,4,9)" fg:x="180" fg:w="3"/>
      <text x="36.4673%" y="431.50"/>
    </g>
    <g>
      <title>vfs_write (24 samples, 4.83%)</title>
      <rect x="32.1932%" y="501" width="4.8290%" height="15" fill="rgb(216,184,13)" fg:x="160" fg:w="24"/>
      <text x="32.4432%" y="511.50">vfs_wr..</text>
    </g>
    <g>
      <title>new_sync_write (24 samples, 4.83%)</title>
      <rect x="32.1932%" y="485" width="4.8290%" height="15" fill="rgb(220,167,51)" fg:x="160" fg:w="24"/>
      <text x="32.4432%" y="495.50">new_sy..</text>
    </g>
    <g>
      <title>ext4_buffered_write_iter (24 samples, 4.83%)</title>
      <rect x="32.1932%" y="469" width="4.8290%" height="15" fill="rgb(214,47,26)" fg:x="160" fg:w="24"/>
      <text x="32.4432%" y="479.50">ext4_b..</text>
    </g>
    <g>
      <title>generic_perform_write (24 samples, 4.83%)</title>
      <rect x="32.1932%" y="453" width="4.8290%" height="15" fill="rgb(218,161,27)" fg:x="160" fg:w="24"/>
      <text x="32.4432%" y="463.50">generi..</text>
    </g>
    <g>
      <title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_all_cold (26 samples, 5.23%)</title>
      <rect x="31.9920%" y="613" width="5.2314%" height="15" fill="rgb(219,202,23)" fg:x="159" fg:w="26"/>
      <text x="32.2420%" y="623.50">std::i..</text>
    </g>
    <g>
      <title>std::io::Write::write_all (26 samples, 5.23%)</title>
      <rect x="31.9920%" y="597" width="5.2314%" height="15" fill="rgb(251,145,9)" fg:x="159" fg:w="26"/>
      <text x="32.2420%" y="607.50">std::i..</text>
    </g>
    <g>
      <title>std::os::unix::net::datagram::UnixDatagram::send (26 samples, 5.23%)</title>
      <rect x="31.9920%" y="581" width="5.2314%" height="15" fill="rgb(237,7,30)" fg:x="159" fg:w="26"/>
      <text x="32.2420%" y="591.50">std::o..</text>
    </g>
    <g>
      <title>__GI___libc_write (26 samples, 5.23%)</title>
      <rect x="31.9920%" y="565" width="5.2314%" height="15" fill="rgb(232,197,30)" fg:x="159" fg:w="26"/>
      <text x="32.2420%" y="575.50">__GI__..</text>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (26 samples, 5.23%)</title>
      <rect x="31.9920%" y="549" width="5.2314%" height="15" fill="rgb(205,226,15)" fg:x="159" fg:w="26"/>
      <text x="32.2420%" y="559.50">entry_..</text>
    </g>
    <g>
      <title>do_syscall_64 (26 samples, 5.23%)</title>
      <rect x="31.9920%" y="533" width="5.2314%" height="15" fill="rgb(220,74,14)" fg:x="159" fg:w="26"/>
      <text x="32.2420%" y="543.50">do_sys..</text>
    </g>
    <g>
      <title>ksys_write (25 samples, 5.03%)</title>
      <rect x="32.1932%" y="517" width="5.0302%" height="15" fill="rgb(223,155,43)" fg:x="160" fg:w="25"/>
      <text x="32.4432%" y="527.50">ksys_w..</text>
    </g>
    <g>
      <title>fput_many (1 samples, 0.20%)</title>
      <rect x="37.0221%" y="501" width="0.2012%" height="15" fill="rgb(223,66,3)" fg:x="184" fg:w="1"/>
      <text x="37.2721%" y="511.50"/>
    </g>
    <g>
      <title>core::ptr::drop_in_place&lt;bzip2_rs::decoder::reader::DecoderReader&lt;std::fs::File&gt;&gt; (1 samples, 0.20%)</title>
      <rect x="37.2233%" y="613" width="0.2012%" height="15" fill="rgb(229,59,39)" fg:x="185" fg:w="1"/>
      <text x="37.4733%" y="623.50"/>
    </g>
    <g>
      <title>cfree@GLIBC_2.2.5 (1 samples, 0.20%)</title>
      <rect x="37.2233%" y="597" width="0.2012%" height="15" fill="rgb(240,159,37)" fg:x="185" fg:w="1"/>
      <text x="37.4733%" y="607.50"/>
    </g>
    <g>
      <title>__munmap (1 samples, 0.20%)</title>
      <rect x="37.2233%" y="581" width="0.2012%" height="15" fill="rgb(232,183,39)" fg:x="185" fg:w="1"/>
      <text x="37.4733%" y="591.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (1 samples, 0.20%)</title>
      <rect x="37.2233%" y="565" width="0.2012%" height="15" fill="rgb(205,226,15)" fg:x="185" fg:w="1"/>
      <text x="37.4733%" y="575.50"/>
    </g>
    <g>
      <title>do_syscall_64 (1 samples, 0.20%)</title>
      <rect x="37.2233%" y="549" width="0.2012%" height="15" fill="rgb(220,74,14)" fg:x="185" fg:w="1"/>
      <text x="37.4733%" y="559.50"/>
    </g>
    <g>
      <title>__x64_sys_munmap (1 samples, 0.20%)</title>
      <rect x="37.2233%" y="533" width="0.2012%" height="15" fill="rgb(218,184,12)" fg:x="185" fg:w="1"/>
      <text x="37.4733%" y="543.50"/>
    </g>
    <g>
      <title>__vm_munmap (1 samples, 0.20%)</title>
      <rect x="37.2233%" y="517" width="0.2012%" height="15" fill="rgb(247,197,25)" fg:x="185" fg:w="1"/>
      <text x="37.4733%" y="527.50"/>
    </g>
    <g>
      <title>__do_munmap (1 samples, 0.20%)</title>
      <rect x="37.2233%" y="501" width="0.2012%" height="15" fill="rgb(225,34,24)" fg:x="185" fg:w="1"/>
      <text x="37.4733%" y="511.50"/>
    </g>
    <g>
      <title>unmap_region (1 samples, 0.20%)</title>
      <rect x="37.2233%" y="485" width="0.2012%" height="15" fill="rgb(215,221,10)" fg:x="185" fg:w="1"/>
      <text x="37.4733%" y="495.50"/>
    </g>
    <g>
      <title>unmap_vmas (1 samples, 0.20%)</title>
      <rect x="37.2233%" y="469" width="0.2012%" height="15" fill="rgb(216,135,47)" fg:x="185" fg:w="1"/>
      <text x="37.4733%" y="479.50"/>
    </g>
    <g>
      <title>unmap_page_range (1 samples, 0.20%)</title>
      <rect x="37.2233%" y="453" width="0.2012%" height="15" fill="rgb(216,127,1)" fg:x="185" fg:w="1"/>
      <text x="37.4733%" y="463.50"/>
    </g>
    <g>
      <title>crc32fast::Hasher::new (1 samples, 0.20%)</title>
      <rect x="37.4245%" y="581" width="0.2012%" height="15" fill="rgb(248,139,46)" fg:x="186" fg:w="1"/>
      <text x="37.6745%" y="591.50"/>
    </g>
    <g>
      <title>asm_exc_page_fault (1 samples, 0.20%)</title>
      <rect x="37.4245%" y="565" width="0.2012%" height="15" fill="rgb(208,26,13)" fg:x="186" fg:w="1"/>
      <text x="37.6745%" y="575.50"/>
    </g>
    <g>
      <title>irqentry_exit (1 samples, 0.20%)</title>
      <rect x="37.4245%" y="549" width="0.2012%" height="15" fill="rgb(235,213,50)" fg:x="186" fg:w="1"/>
      <text x="37.6745%" y="559.50"/>
    </g>
    <g>
      <title>bzip2_rs::decoder::Decoder::write (2 samples, 0.40%)</title>
      <rect x="37.4245%" y="597" width="0.4024%" height="15" fill="rgb(230,15,23)" fg:x="186" fg:w="2"/>
      <text x="37.6745%" y="607.50"/>
    </g>
    <g>
      <title>__memmove_avx512_unaligned_erms (1 samples, 0.20%)</title>
      <rect x="37.6258%" y="581" width="0.2012%" height="15" fill="rgb(217,126,36)" fg:x="187" fg:w="1"/>
      <text x="37.8758%" y="591.50"/>
    </g>
    <g>
      <title>asm_exc_page_fault (1 samples, 0.20%)</title>
      <rect x="37.6258%" y="565" width="0.2012%" height="15" fill="rgb(208,26,13)" fg:x="187" fg:w="1"/>
      <text x="37.8758%" y="575.50"/>
    </g>
    <g>
      <title>exc_page_fault (1 samples, 0.20%)</title>
      <rect x="37.6258%" y="549" width="0.2012%" height="15" fill="rgb(216,51,29)" fg:x="187" fg:w="1"/>
      <text x="37.8758%" y="559.50"/>
    </g>
    <g>
      <title>do_user_addr_fault (1 samples, 0.20%)</title>
      <rect x="37.6258%" y="533" width="0.2012%" height="15" fill="rgb(253,37,52)" fg:x="187" fg:w="1"/>
      <text x="37.8758%" y="543.50"/>
    </g>
    <g>
      <title>handle_mm_fault (1 samples, 0.20%)</title>
      <rect x="37.6258%" y="517" width="0.2012%" height="15" fill="rgb(247,31,49)" fg:x="187" fg:w="1"/>
      <text x="37.8758%" y="527.50"/>
    </g>
    <g>
      <title>__handle_mm_fault (1 samples, 0.20%)</title>
      <rect x="37.6258%" y="501" width="0.2012%" height="15" fill="rgb(254,123,40)" fg:x="187" fg:w="1"/>
      <text x="37.8758%" y="511.50"/>
    </g>
    <g>
      <title>__mem_cgroup_charge (1 samples, 0.20%)</title>
      <rect x="37.6258%" y="485" width="0.2012%" height="15" fill="rgb(222,56,28)" fg:x="187" fg:w="1"/>
      <text x="37.8758%" y="495.50"/>
    </g>
    <g>
      <title>get_mem_cgroup_from_mm (1 samples, 0.20%)</title>
      <rect x="37.6258%" y="469" width="0.2012%" height="15" fill="rgb(232,222,48)" fg:x="187" fg:w="1"/>
      <text x="37.8758%" y="479.50"/>
    </g>
    <g>
      <title>syscall_exit_to_user_mode (1 samples, 0.20%)</title>
      <rect x="37.8270%" y="533" width="0.2012%" height="15" fill="rgb(215,101,28)" fg:x="188" fg:w="1"/>
      <text x="38.0770%" y="543.50"/>
    </g>
    <g>
      <title>srso_alias_safe_ret (1 samples, 0.20%)</title>
      <rect x="37.8270%" y="517" width="0.2012%" height="15" fill="rgb(248,122,31)" fg:x="188" fg:w="1"/>
      <text x="38.0770%" y="527.50"/>
    </g>
    <g>
      <title>new_sync_read (1 samples, 0.20%)</title>
      <rect x="38.0282%" y="501" width="0.2012%" height="15" fill="rgb(207,29,15)" fg:x="189" fg:w="1"/>
      <text x="38.2782%" y="511.50"/>
    </g>
    <g>
      <title>filemap_read (1 samples, 0.20%)</title>
      <rect x="38.0282%" y="485" width="0.2012%" height="15" fill="rgb(214,68,38)" fg:x="189" fg:w="1"/>
      <text x="38.2782%" y="495.50"/>
    </g>
    <g>
      <title>filemap_get_pages (1 samples, 0.20%)</title>
      <rect x="38.0282%" y="469" width="0.2012%" height="15" fill="rgb(242,84,29)" fg:x="189" fg:w="1"/>
      <text x="38.2782%" y="479.50"/>
    </g>
    <g>
      <title>filemap_get_read_batch (1 samples, 0.20%)</title>
      <rect x="38.0282%" y="453" width="0.2012%" height="15" fill="rgb(213,106,43)" fg:x="189" fg:w="1"/>
      <text x="38.2782%" y="463.50"/>
    </g>
    <g>
      <title>s4lib::readers::filedecompressor::decompress_to_ntf (32 samples, 6.44%)</title>
      <rect x="31.9920%" y="629" width="6.4386%" height="15" fill="rgb(253,7,37)" fg:x="159" fg:w="32"/>
      <text x="32.2420%" y="639.50">s4lib::r..</text>
    </g>
    <g>
      <title>&lt;bzip2_rs::decoder::reader::DecoderReader&lt;R&gt; as std::io::Read&gt;::read (5 samples, 1.01%)</title>
      <rect x="37.4245%" y="613" width="1.0060%" height="15" fill="rgb(241,41,48)" fg:x="186" fg:w="5"/>
      <text x="37.6745%" y="623.50"/>
    </g>
    <g>
      <title>&lt;std::process::ChildStdout as std::io::Read&gt;::read (3 samples, 0.60%)</title>
      <rect x="37.8270%" y="597" width="0.6036%" height="15" fill="rgb(242,102,42)" fg:x="188" fg:w="3"/>
      <text x="38.0770%" y="607.50"/>
    </g>
    <g>
      <title>read (3 samples, 0.60%)</title>
      <rect x="37.8270%" y="581" width="0.6036%" height="15" fill="rgb(209,69,29)" fg:x="188" fg:w="3"/>
      <text x="38.0770%" y="591.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (3 samples, 0.60%)</title>
      <rect x="37.8270%" y="565" width="0.6036%" height="15" fill="rgb(205,226,15)" fg:x="188" fg:w="3"/>
      <text x="38.0770%" y="575.50"/>
    </g>
    <g>
      <title>do_syscall_64 (3 samples, 0.60%)</title>
      <rect x="37.8270%" y="549" width="0.6036%" height="15" fill="rgb(220,74,14)" fg:x="188" fg:w="3"/>
      <text x="38.0770%" y="559.50"/>
    </g>
    <g>
      <title>ksys_read (2 samples, 0.40%)</title>
      <rect x="38.0282%" y="533" width="0.4024%" height="15" fill="rgb(233,96,2)" fg:x="189" fg:w="2"/>
      <text x="38.2782%" y="543.50"/>
    </g>
    <g>
      <title>vfs_read (2 samples, 0.40%)</title>
      <rect x="38.0282%" y="517" width="0.4024%" height="15" fill="rgb(232,76,33)" fg:x="189" fg:w="2"/>
      <text x="38.2782%" y="527.50"/>
    </g>
    <g>
      <title>__fsnotify_parent (1 samples, 0.20%)</title>
      <rect x="38.2294%" y="501" width="0.2012%" height="15" fill="rgb(232,3,50)" fg:x="190" fg:w="1"/>
      <text x="38.4794%" y="511.50"/>
    </g>
    <g>
      <title>crc32fast::Hasher::update (2 samples, 0.40%)</title>
      <rect x="38.4306%" y="613" width="0.4024%" height="15" fill="rgb(242,188,16)" fg:x="191" fg:w="2"/>
      <text x="38.6806%" y="623.50"/>
    </g>
    <g>
      <title>crc32fast::specialized::pclmulqdq::calculate (2 samples, 0.40%)</title>
      <rect x="38.4306%" y="597" width="0.4024%" height="15" fill="rgb(208,156,27)" fg:x="191" fg:w="2"/>
      <text x="38.6806%" y="607.50"/>
    </g>
    <g>
      <title>core::slice::sort::recurse (2 samples, 0.40%)</title>
      <rect x="38.8330%" y="597" width="0.4024%" height="15" fill="rgb(252,189,28)" fg:x="193" fg:w="2"/>
      <text x="39.0830%" y="607.50"/>
    </g>
    <g>
      <title>bzip2_rs::huffman::HuffmanTree::new (3 samples, 0.60%)</title>
      <rect x="38.8330%" y="613" width="0.6036%" height="15" fill="rgb(221,129,41)" fg:x="193" fg:w="3"/>
      <text x="39.0830%" y="623.50"/>
    </g>
    <g>
      <title>&lt;tinyvec::arrayvec::ArrayVec&lt;A&gt; as core::default::Default&gt;::default (1 samples, 0.20%)</title>
      <rect x="39.2354%" y="597" width="0.2012%" height="15" fill="rgb(242,226,18)" fg:x="195" fg:w="1"/>
      <text x="39.4854%" y="607.50"/>
    </g>
    <g>
      <title>bzip2_rs::huffman::HuffmanTree::decode (30 samples, 6.04%)</title>
      <rect x="39.4366%" y="613" width="6.0362%" height="15" fill="rgb(211,190,0)" fg:x="196" fg:w="30"/>
      <text x="39.6866%" y="623.50">bzip2_rs..</text>
    </g>
    <g>
      <title>bzip2_rs::block::bwt::inverse_bwt (16 samples, 3.22%)</title>
      <rect x="45.4728%" y="613" width="3.2193%" height="15" fill="rgb(217,10,9)" fg:x="226" fg:w="16"/>
      <text x="45.7228%" y="623.50">bzi..</text>
    </g>
    <g>
      <title>error_entry (1 samples, 0.20%)</title>
      <rect x="48.6922%" y="597" width="0.2012%" height="15" fill="rgb(220,135,2)" fg:x="242" fg:w="1"/>
      <text x="48.9422%" y="607.50"/>
    </g>
    <g>
      <title>sync_regs (1 samples, 0.20%)</title>
      <rect x="48.6922%" y="581" width="0.2012%" height="15" fill="rgb(205,158,27)" fg:x="242" fg:w="1"/>
      <text x="48.9422%" y="591.50"/>
    </g>
    <g>
      <title>rcu_read_unlock_strict (1 samples, 0.20%)</title>
      <rect x="48.8934%" y="533" width="0.2012%" height="15" fill="rgb(251,95,14)" fg:x="243" fg:w="1"/>
      <text x="49.1434%" y="543.50"/>
    </g>
    <g>
      <title>do_huge_pmd_anonymous_page (2 samples, 0.40%)</title>
      <rect x="49.0946%" y="517" width="0.4024%" height="15" fill="rgb(228,71,17)" fg:x="244" fg:w="2"/>
      <text x="49.3446%" y="527.50"/>
    </g>
    <g>
      <title>clear_huge_page (2 samples, 0.40%)</title>
      <rect x="49.0946%" y="501" width="0.4024%" height="15" fill="rgb(217,175,25)" fg:x="244" fg:w="2"/>
      <text x="49.3446%" y="511.50"/>
    </g>
    <g>
      <title>clear_subpage (2 samples, 0.40%)</title>
      <rect x="49.0946%" y="485" width="0.4024%" height="15" fill="rgb(254,74,19)" fg:x="244" fg:w="2"/>
      <text x="49.3446%" y="495.50"/>
    </g>
    <g>
      <title>clear_page_erms (2 samples, 0.40%)</title>
      <rect x="49.0946%" y="469" width="0.4024%" height="15" fill="rgb(253,135,51)" fg:x="244" fg:w="2"/>
      <text x="49.3446%" y="479.50"/>
    </g>
    <g>
      <title>__mem_cgroup_charge (1 samples, 0.20%)</title>
      <rect x="49.4970%" y="517" width="0.2012%" height="15" fill="rgb(222,56,28)" fg:x="246" fg:w="1"/>
      <text x="49.7470%" y="527.50"/>
    </g>
    <g>
      <title>charge_memcg (1 samples, 0.20%)</title>
      <rect x="49.4970%" y="501" width="0.2012%" height="15" fill="rgb(240,39,15)" fg:x="246" fg:w="1"/>
      <text x="49.7470%" y="511.50"/>
    </g>
    <g>
      <title>asm_exc_page_fault (5 samples, 1.01%)</title>
      <rect x="48.8934%" y="597" width="1.0060%" height="15" fill="rgb(208,26,13)" fg:x="243" fg:w="5"/>
      <text x="49.1434%" y="607.50"/>
    </g>
    <g>
      <title>exc_page_fault (5 samples, 1.01%)</title>
      <rect x="48.8934%" y="581" width="1.0060%" height="15" fill="rgb(216,51,29)" fg:x="243" fg:w="5"/>
      <text x="49.1434%" y="591.50"/>
    </g>
    <g>
      <title>do_user_addr_fault (5 samples, 1.01%)</title>
      <rect x="48.8934%" y="565" width="1.0060%" height="15" fill="rgb(253,37,52)" fg:x="243" fg:w="5"/>
      <text x="49.1434%" y="575.50"/>
    </g>
    <g>
      <title>handle_mm_fault (5 samples, 1.01%)</title>
      <rect x="48.8934%" y="549" width="1.0060%" height="15" fill="rgb(247,31,49)" fg:x="243" fg:w="5"/>
      <text x="49.1434%" y="559.50"/>
    </g>
    <g>
      <title>__handle_mm_fault (4 samples, 0.80%)</title>
      <rect x="49.0946%" y="533" width="0.8048%" height="15" fill="rgb(254,123,40)" fg:x="244" fg:w="4"/>
      <text x="49.3446%" y="543.50"/>
    </g>
    <g>
      <title>__alloc_pages (1 samples, 0.20%)</title>
      <rect x="49.6982%" y="517" width="0.2012%" height="15" fill="rgb(244,104,38)" fg:x="247" fg:w="1"/>
      <text x="49.9482%" y="527.50"/>
    </g>
    <g>
      <title>alloc::vec::Vec&lt;T,A&gt;::resize (11 samples, 2.21%)</title>
      <rect x="48.6922%" y="613" width="2.2133%" height="15" fill="rgb(249,199,35)" fg:x="242" fg:w="11"/>
      <text x="48.9422%" y="623.50">a..</text>
    </g>
    <g>
      <title>mem_cgroup_from_task (1 samples, 0.20%)</title>
      <rect x="50.9054%" y="533" width="0.2012%" height="15" fill="rgb(232,92,8)" fg:x="253" fg:w="1"/>
      <text x="51.1554%" y="543.50"/>
    </g>
    <g>
      <title>kernel_init_free_pages.part.0 (1 samples, 0.20%)</title>
      <rect x="51.1066%" y="485" width="0.2012%" height="15" fill="rgb(224,1,41)" fg:x="254" fg:w="1"/>
      <text x="51.3566%" y="495.50"/>
    </g>
    <g>
      <title>clear_page_erms (1 samples, 0.20%)</title>
      <rect x="51.1066%" y="469" width="0.2012%" height="15" fill="rgb(253,135,51)" fg:x="254" fg:w="1"/>
      <text x="51.3566%" y="479.50"/>
    </g>
    <g>
      <title>__handle_mm_fault (2 samples, 0.40%)</title>
      <rect x="51.1066%" y="533" width="0.4024%" height="15" fill="rgb(254,123,40)" fg:x="254" fg:w="2"/>
      <text x="51.3566%" y="543.50"/>
    </g>
    <g>
      <title>__alloc_pages (2 samples, 0.40%)</title>
      <rect x="51.1066%" y="517" width="0.4024%" height="15" fill="rgb(244,104,38)" fg:x="254" fg:w="2"/>
      <text x="51.3566%" y="527.50"/>
    </g>
    <g>
      <title>get_page_from_freelist (2 samples, 0.40%)</title>
      <rect x="51.1066%" y="501" width="0.4024%" height="15" fill="rgb(246,35,53)" fg:x="254" fg:w="2"/>
      <text x="51.3566%" y="511.50"/>
    </g>
    <g>
      <title>asm_exc_page_fault (4 samples, 0.80%)</title>
      <rect x="50.9054%" y="597" width="0.8048%" height="15" fill="rgb(208,26,13)" fg:x="253" fg:w="4"/>
      <text x="51.1554%" y="607.50"/>
    </g>
    <g>
      <title>exc_page_fault (4 samples, 0.80%)</title>
      <rect x="50.9054%" y="581" width="0.8048%" height="15" fill="rgb(216,51,29)" fg:x="253" fg:w="4"/>
      <text x="51.1554%" y="591.50"/>
    </g>
    <g>
      <title>do_user_addr_fault (4 samples, 0.80%)</title>
      <rect x="50.9054%" y="565" width="0.8048%" height="15" fill="rgb(253,37,52)" fg:x="253" fg:w="4"/>
      <text x="51.1554%" y="575.50"/>
    </g>
    <g>
      <title>handle_mm_fault (4 samples, 0.80%)</title>
      <rect x="50.9054%" y="549" width="0.8048%" height="15" fill="rgb(247,31,49)" fg:x="253" fg:w="4"/>
      <text x="51.1554%" y="559.50"/>
    </g>
    <g>
      <title>__count_memcg_events (1 samples, 0.20%)</title>
      <rect x="51.5091%" y="533" width="0.2012%" height="15" fill="rgb(212,54,41)" fg:x="256" fg:w="1"/>
      <text x="51.7591%" y="543.50"/>
    </g>
    <g>
      <title>cgroup_rstat_updated (1 samples, 0.20%)</title>
      <rect x="51.5091%" y="517" width="0.2012%" height="15" fill="rgb(232,180,27)" fg:x="256" fg:w="1"/>
      <text x="51.7591%" y="527.50"/>
    </g>
    <g>
      <title>alloc::vec::Vec&lt;T,A&gt;::push (9 samples, 1.81%)</title>
      <rect x="50.9054%" y="613" width="1.8109%" height="15" fill="rgb(241,229,15)" fg:x="253" fg:w="9"/>
      <text x="51.1554%" y="623.50">a..</text>
    </g>
    <g>
      <title>__memmove_avx512_unaligned_erms (44 samples, 8.85%)</title>
      <rect x="52.7163%" y="613" width="8.8531%" height="15" fill="rgb(217,126,36)" fg:x="262" fg:w="44"/>
      <text x="52.9663%" y="623.50">__memmove_avx..</text>
    </g>
    <g>
      <title>[unknown] (337 samples, 67.81%)</title>
      <rect x="31.9920%" y="645" width="67.8068%" height="15" fill="rgb(227,28,50)" fg:x="159" fg:w="337"/>
      <text x="32.2420%" y="655.50">[unknown]</text>
    </g>
    <g>
      <title>bzip2_rs::block::Block::read (305 samples, 61.37%)</title>
      <rect x="38.4306%" y="629" width="61.3682%" height="15" fill="rgb(226,191,8)" fg:x="191" fg:w="305"/>
      <text x="38.6806%" y="639.50">bzip2_rs::block::Block::read</text>
    </g>
    <g>
      <title>all (497 samples, 100%)</title>
      <rect x="0.0000%" y="677" width="100.0000%" height="15" fill="rgb(206,183,37)" fg:x="0" fg:w="497"/>
      <text x="0.2500%" y="687.50"/>
    </g>
    <g>
      <title>RHE_91_system.j (387 samples, 77.87%)</title>
      <rect x="22.1328%" y="661" width="77.8672%" height="15" fill="rgb(216,111,28)" fg:x="110" fg:w="387"/>
      <text x="22.3828%" y="671.50">RHE_91_system.j</text>
    </g>
    <g>
      <title>[anon] (1 samples, 0.20%)</title>
      <rect x="99.7988%" y="645" width="0.2012%" height="15" fill="rgb(207,220,20)" fg:x="496" fg:w="1"/>
      <text x="100.0488%" y="655.50"/>
    </g>
    <g>
      <title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.20%)</title>
      <rect x="99.7988%" y="629" width="0.2012%" height="15" fill="rgb(241,229,15)" fg:x="496" fg:w="1"/>
      <text x="100.0488%" y="639.50"/>
    </g>
    <g>
      <title>error_entry (1 samples, 0.20%)</title>
      <rect x="99.7988%" y="613" width="0.2012%" height="15" fill="rgb(220,135,2)" fg:x="496" fg:w="1"/>
      <text x="100.0488%" y="623.50"/>
    </g>
    <g>
      <title>sync_regs (1 samples, 0.20%)</title>
      <rect x="99.7988%" y="597" width="0.2012%" height="15" fill="rgb(205,158,27)" fg:x="496" fg:w="1"/>
      <text x="100.0488%" y="607.50"/>
    </g>
    <g>
      <title>memcpy_erms (1 samples, 0.20%)</title>
      <rect x="99.7988%" y="581" width="0.2012%" height="15" fill="rgb(234,99,0)" fg:x="496" fg:w="1"/>
      <text x="100.0488%" y="591.50"/>
    </g>
  </svg>
</svg>
