<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno" version="1.1" width="1200" height="550" onload="init(evt)" viewBox="0 0 1200 550">
  <!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.-->
  <!--NOTES: foo&lt;br/&gt;bar&lt;br/&gt;super_speedy_syslog_searcher 0.7.74; git: 732f8e65; -freq 9999; created 20240622T180700-0700; flamegraph-flamegraph 0.6.5; rustc 1.70.0-->
  <defs>
    <linearGradient id="background" y1="0" y2="1" x1="0" x2="0">
      <stop stop-color="#eeeeee" offset="5%"/>
      <stop stop-color="#eeeeb0" offset="95%"/>
    </linearGradient>
  </defs>
  <style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames &gt; *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style>
  <script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    "use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script>
  <rect x="0" y="0" width="100%" height="550" fill="url(#background)"/>
  <text id="title" style="font-size:xx-small" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph: super_speedy_syslog_searcher 0.7.74; git: 732f8e65; -freq 9999; created 20240622T180700-0700; flamegraph-flamegraph 0.6.5; rustc 1.70.0<br/>; command: s4 --help</text>
  <text id="details" fill="rgb(0,0,0)" x="10" y="533.00"> </text>
  <text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text>
  <text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text>
  <text id="matched" fill="rgb(0,0,0)" x="1190" y="533.00"> </text>
  <svg id="frames" x="10" width="1180" total_samples="38">
    <g>
      <title>__x64_sys_exit_group (1 samples, 2.63%)</title>
      <rect x="0.0000%" y="437" width="2.6316%" height="15" fill="rgb(219,187,49)" fg:x="0" fg:w="1"/>
      <text x="0.2500%" y="447.50">__..</text>
    </g>
    <g>
      <title>do_group_exit (1 samples, 2.63%)</title>
      <rect x="0.0000%" y="421" width="2.6316%" height="15" fill="rgb(241,5,8)" fg:x="0" fg:w="1"/>
      <text x="0.2500%" y="431.50">do..</text>
    </g>
    <g>
      <title>do_exit (1 samples, 2.63%)</title>
      <rect x="0.0000%" y="405" width="2.6316%" height="15" fill="rgb(238,144,25)" fg:x="0" fg:w="1"/>
      <text x="0.2500%" y="415.50">do..</text>
    </g>
    <g>
      <title>mmput (1 samples, 2.63%)</title>
      <rect x="0.0000%" y="389" width="2.6316%" height="15" fill="rgb(228,125,30)" fg:x="0" fg:w="1"/>
      <text x="0.2500%" y="399.50">mm..</text>
    </g>
    <g>
      <title>exit_mmap (1 samples, 2.63%)</title>
      <rect x="0.0000%" y="373" width="2.6316%" height="15" fill="rgb(221,135,18)" fg:x="0" fg:w="1"/>
      <text x="0.2500%" y="383.50">ex..</text>
    </g>
    <g>
      <title>tlb_finish_mmu (1 samples, 2.63%)</title>
      <rect x="0.0000%" y="357" width="2.6316%" height="15" fill="rgb(238,90,34)" fg:x="0" fg:w="1"/>
      <text x="0.2500%" y="367.50">tl..</text>
    </g>
    <g>
      <title>release_pages (1 samples, 2.63%)</title>
      <rect x="0.0000%" y="341" width="2.6316%" height="15" fill="rgb(247,202,4)" fg:x="0" fg:w="1"/>
      <text x="0.2500%" y="351.50">re..</text>
    </g>
    <g>
      <title>__mem_cgroup_uncharge_list (1 samples, 2.63%)</title>
      <rect x="0.0000%" y="325" width="2.6316%" height="15" fill="rgb(228,178,19)" fg:x="0" fg:w="1"/>
      <text x="0.2500%" y="335.50">__..</text>
    </g>
    <g>
      <title>vm_mmap_pgoff (1 samples, 2.63%)</title>
      <rect x="2.6316%" y="373" width="2.6316%" height="15" fill="rgb(226,196,1)" fg:x="1" fg:w="1"/>
      <text x="2.8816%" y="383.50">vm..</text>
    </g>
    <g>
      <title>do_mmap (1 samples, 2.63%)</title>
      <rect x="2.6316%" y="357" width="2.6316%" height="15" fill="rgb(228,25,27)" fg:x="1" fg:w="1"/>
      <text x="2.8816%" y="367.50">do..</text>
    </g>
    <g>
      <title>mmap_region (1 samples, 2.63%)</title>
      <rect x="2.6316%" y="341" width="2.6316%" height="15" fill="rgb(233,57,38)" fg:x="1" fg:w="1"/>
      <text x="2.8816%" y="351.50">mm..</text>
    </g>
    <g>
      <title>perf_event_mmap (1 samples, 2.63%)</title>
      <rect x="2.6316%" y="325" width="2.6316%" height="15" fill="rgb(252,32,1)" fg:x="1" fg:w="1"/>
      <text x="2.8816%" y="335.50">pe..</text>
    </g>
    <g>
      <title>perf_iterate_sb (1 samples, 2.63%)</title>
      <rect x="2.6316%" y="309" width="2.6316%" height="15" fill="rgb(241,203,1)" fg:x="1" fg:w="1"/>
      <text x="2.8816%" y="319.50">pe..</text>
    </g>
    <g>
      <title>perf_iterate_ctx (1 samples, 2.63%)</title>
      <rect x="2.6316%" y="293" width="2.6316%" height="15" fill="rgb(227,133,21)" fg:x="1" fg:w="1"/>
      <text x="2.8816%" y="303.50">pe..</text>
    </g>
    <g>
      <title>perf_event_mmap_output (1 samples, 2.63%)</title>
      <rect x="2.6316%" y="277" width="2.6316%" height="15" fill="rgb(225,127,18)" fg:x="1" fg:w="1"/>
      <text x="2.8816%" y="287.50">pe..</text>
    </g>
    <g>
      <title>setup_arg_pages (1 samples, 2.63%)</title>
      <rect x="5.2632%" y="373" width="2.6316%" height="15" fill="rgb(232,213,47)" fg:x="2" fg:w="1"/>
      <text x="5.5132%" y="383.50">se..</text>
    </g>
    <g>
      <title>shift_arg_pages (1 samples, 2.63%)</title>
      <rect x="5.2632%" y="357" width="2.6316%" height="15" fill="rgb(220,171,8)" fg:x="2" fg:w="1"/>
      <text x="5.5132%" y="367.50">sh..</text>
    </g>
    <g>
      <title>move_page_tables.part.0 (1 samples, 2.63%)</title>
      <rect x="5.2632%" y="341" width="2.6316%" height="15" fill="rgb(254,193,10)" fg:x="2" fg:w="1"/>
      <text x="5.5132%" y="351.50">mo..</text>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (4 samples, 10.53%)</title>
      <rect x="0.0000%" y="469" width="10.5263%" height="15" fill="rgb(205,226,15)" fg:x="0" fg:w="4"/>
      <text x="0.2500%" y="479.50">entry_SYSCALL_6..</text>
    </g>
    <g>
      <title>do_syscall_64 (4 samples, 10.53%)</title>
      <rect x="0.0000%" y="453" width="10.5263%" height="15" fill="rgb(220,74,14)" fg:x="0" fg:w="4"/>
      <text x="0.2500%" y="463.50">do_syscall_64</text>
    </g>
    <g>
      <title>__x64_sys_execve (3 samples, 7.89%)</title>
      <rect x="2.6316%" y="437" width="7.8947%" height="15" fill="rgb(237,59,15)" fg:x="1" fg:w="3"/>
      <text x="2.8816%" y="447.50">__x64_sys_e..</text>
    </g>
    <g>
      <title>do_execveat_common.isra.0 (3 samples, 7.89%)</title>
      <rect x="2.6316%" y="421" width="7.8947%" height="15" fill="rgb(248,134,53)" fg:x="1" fg:w="3"/>
      <text x="2.8816%" y="431.50">do_execveat..</text>
    </g>
    <g>
      <title>bprm_execve (3 samples, 7.89%)</title>
      <rect x="2.6316%" y="405" width="7.8947%" height="15" fill="rgb(232,147,16)" fg:x="1" fg:w="3"/>
      <text x="2.8816%" y="415.50">bprm_execve</text>
    </g>
    <g>
      <title>load_elf_binary (3 samples, 7.89%)</title>
      <rect x="2.6316%" y="389" width="7.8947%" height="15" fill="rgb(246,102,21)" fg:x="1" fg:w="3"/>
      <text x="2.8816%" y="399.50">load_elf_bi..</text>
    </g>
    <g>
      <title>set_brk (1 samples, 2.63%)</title>
      <rect x="7.8947%" y="373" width="2.6316%" height="15" fill="rgb(242,15,12)" fg:x="3" fg:w="1"/>
      <text x="8.1447%" y="383.50">se..</text>
    </g>
    <g>
      <title>vm_brk_flags (1 samples, 2.63%)</title>
      <rect x="7.8947%" y="357" width="2.6316%" height="15" fill="rgb(211,22,18)" fg:x="3" fg:w="1"/>
      <text x="8.1447%" y="367.50">vm..</text>
    </g>
    <g>
      <title>do_brk_flags (1 samples, 2.63%)</title>
      <rect x="7.8947%" y="341" width="2.6316%" height="15" fill="rgb(216,139,3)" fg:x="3" fg:w="1"/>
      <text x="8.1447%" y="351.50">do..</text>
    </g>
    <g>
      <title>asm_exc_page_fault (1 samples, 2.63%)</title>
      <rect x="10.5263%" y="437" width="2.6316%" height="15" fill="rgb(208,26,13)" fg:x="4" fg:w="1"/>
      <text x="10.7763%" y="447.50">as..</text>
    </g>
    <g>
      <title>exc_page_fault (1 samples, 2.63%)</title>
      <rect x="10.5263%" y="421" width="2.6316%" height="15" fill="rgb(216,51,29)" fg:x="4" fg:w="1"/>
      <text x="10.7763%" y="431.50">ex..</text>
    </g>
    <g>
      <title>do_user_addr_fault (1 samples, 2.63%)</title>
      <rect x="10.5263%" y="405" width="2.6316%" height="15" fill="rgb(253,37,52)" fg:x="4" fg:w="1"/>
      <text x="10.7763%" y="415.50">do..</text>
    </g>
    <g>
      <title>handle_mm_fault (1 samples, 2.63%)</title>
      <rect x="10.5263%" y="389" width="2.6316%" height="15" fill="rgb(247,31,49)" fg:x="4" fg:w="1"/>
      <text x="10.7763%" y="399.50">ha..</text>
    </g>
    <g>
      <title>__handle_mm_fault (1 samples, 2.63%)</title>
      <rect x="10.5263%" y="373" width="2.6316%" height="15" fill="rgb(254,123,40)" fg:x="4" fg:w="1"/>
      <text x="10.7763%" y="383.50">__..</text>
    </g>
    <g>
      <title>__mem_cgroup_charge (1 samples, 2.63%)</title>
      <rect x="10.5263%" y="357" width="2.6316%" height="15" fill="rgb(222,56,28)" fg:x="4" fg:w="1"/>
      <text x="10.7763%" y="367.50">__..</text>
    </g>
    <g>
      <title>get_mem_cgroup_from_mm (1 samples, 2.63%)</title>
      <rect x="10.5263%" y="341" width="2.6316%" height="15" fill="rgb(232,222,48)" fg:x="4" fg:w="1"/>
      <text x="10.7763%" y="351.50">ge..</text>
    </g>
    <g>
      <title>init_tls (1 samples, 2.63%)</title>
      <rect x="13.1579%" y="405" width="2.6316%" height="15" fill="rgb(235,170,49)" fg:x="5" fg:w="1"/>
      <text x="13.4079%" y="415.50">in..</text>
    </g>
    <g>
      <title>_dl_allocate_tls_storage (1 samples, 2.63%)</title>
      <rect x="13.1579%" y="389" width="2.6316%" height="15" fill="rgb(249,189,41)" fg:x="5" fg:w="1"/>
      <text x="13.4079%" y="399.50">_d..</text>
    </g>
    <g>
      <title>__minimal_malloc (1 samples, 2.63%)</title>
      <rect x="13.1579%" y="373" width="2.6316%" height="15" fill="rgb(215,94,15)" fg:x="5" fg:w="1"/>
      <text x="13.4079%" y="383.50">__..</text>
    </g>
    <g>
      <title>mmap64 (1 samples, 2.63%)</title>
      <rect x="13.1579%" y="357" width="2.6316%" height="15" fill="rgb(246,213,14)" fg:x="5" fg:w="1"/>
      <text x="13.4079%" y="367.50">mm..</text>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (1 samples, 2.63%)</title>
      <rect x="13.1579%" y="341" width="2.6316%" height="15" fill="rgb(205,226,15)" fg:x="5" fg:w="1"/>
      <text x="13.4079%" y="351.50">en..</text>
    </g>
    <g>
      <title>do_syscall_64 (1 samples, 2.63%)</title>
      <rect x="13.1579%" y="325" width="2.6316%" height="15" fill="rgb(220,74,14)" fg:x="5" fg:w="1"/>
      <text x="13.4079%" y="335.50">do..</text>
    </g>
    <g>
      <title>vm_mmap_pgoff (1 samples, 2.63%)</title>
      <rect x="13.1579%" y="309" width="2.6316%" height="15" fill="rgb(226,196,1)" fg:x="5" fg:w="1"/>
      <text x="13.4079%" y="319.50">vm..</text>
    </g>
    <g>
      <title>do_mmap (1 samples, 2.63%)</title>
      <rect x="13.1579%" y="293" width="2.6316%" height="15" fill="rgb(228,25,27)" fg:x="5" fg:w="1"/>
      <text x="13.4079%" y="303.50">do..</text>
    </g>
    <g>
      <title>mmap_region (1 samples, 2.63%)</title>
      <rect x="13.1579%" y="277" width="2.6316%" height="15" fill="rgb(233,57,38)" fg:x="5" fg:w="1"/>
      <text x="13.4079%" y="287.50">mm..</text>
    </g>
    <g>
      <title>vm_area_alloc (1 samples, 2.63%)</title>
      <rect x="13.1579%" y="261" width="2.6316%" height="15" fill="rgb(242,51,19)" fg:x="5" fg:w="1"/>
      <text x="13.4079%" y="271.50">vm..</text>
    </g>
    <g>
      <title>kmem_cache_alloc (1 samples, 2.63%)</title>
      <rect x="13.1579%" y="245" width="2.6316%" height="15" fill="rgb(223,51,51)" fg:x="5" fg:w="1"/>
      <text x="13.4079%" y="255.50">km..</text>
    </g>
    <g>
      <title>asm_exc_page_fault (1 samples, 2.63%)</title>
      <rect x="15.7895%" y="405" width="2.6316%" height="15" fill="rgb(208,26,13)" fg:x="6" fg:w="1"/>
      <text x="16.0395%" y="415.50">as..</text>
    </g>
    <g>
      <title>exc_page_fault (1 samples, 2.63%)</title>
      <rect x="15.7895%" y="389" width="2.6316%" height="15" fill="rgb(216,51,29)" fg:x="6" fg:w="1"/>
      <text x="16.0395%" y="399.50">ex..</text>
    </g>
    <g>
      <title>do_user_addr_fault (1 samples, 2.63%)</title>
      <rect x="15.7895%" y="373" width="2.6316%" height="15" fill="rgb(253,37,52)" fg:x="6" fg:w="1"/>
      <text x="16.0395%" y="383.50">do..</text>
    </g>
    <g>
      <title>handle_mm_fault (1 samples, 2.63%)</title>
      <rect x="15.7895%" y="357" width="2.6316%" height="15" fill="rgb(247,31,49)" fg:x="6" fg:w="1"/>
      <text x="16.0395%" y="367.50">ha..</text>
    </g>
    <g>
      <title>__handle_mm_fault (1 samples, 2.63%)</title>
      <rect x="15.7895%" y="341" width="2.6316%" height="15" fill="rgb(254,123,40)" fg:x="6" fg:w="1"/>
      <text x="16.0395%" y="351.50">__..</text>
    </g>
    <g>
      <title>wp_page_copy (1 samples, 2.63%)</title>
      <rect x="15.7895%" y="325" width="2.6316%" height="15" fill="rgb(231,223,9)" fg:x="6" fg:w="1"/>
      <text x="16.0395%" y="335.50">wp..</text>
    </g>
    <g>
      <title>finish_fault (1 samples, 2.63%)</title>
      <rect x="18.4211%" y="309" width="2.6316%" height="15" fill="rgb(219,25,1)" fg:x="7" fg:w="1"/>
      <text x="18.6711%" y="319.50">fi..</text>
    </g>
    <g>
      <title>do_set_pte (1 samples, 2.63%)</title>
      <rect x="18.4211%" y="293" width="2.6316%" height="15" fill="rgb(208,28,54)" fg:x="7" fg:w="1"/>
      <text x="18.6711%" y="303.50">do..</text>
    </g>
    <g>
      <title>lru_cache_add (1 samples, 2.63%)</title>
      <rect x="18.4211%" y="277" width="2.6316%" height="15" fill="rgb(205,98,13)" fg:x="7" fg:w="1"/>
      <text x="18.6711%" y="287.50">lr..</text>
    </g>
    <g>
      <title>__pagevec_lru_add (1 samples, 2.63%)</title>
      <rect x="18.4211%" y="261" width="2.6316%" height="15" fill="rgb(207,69,45)" fg:x="7" fg:w="1"/>
      <text x="18.6711%" y="271.50">__..</text>
    </g>
    <g>
      <title>__mod_lruvec_state (1 samples, 2.63%)</title>
      <rect x="18.4211%" y="245" width="2.6316%" height="15" fill="rgb(240,209,16)" fg:x="7" fg:w="1"/>
      <text x="18.6711%" y="255.50">__..</text>
    </g>
    <g>
      <title>__mod_node_page_state (1 samples, 2.63%)</title>
      <rect x="18.4211%" y="229" width="2.6316%" height="15" fill="rgb(214,74,36)" fg:x="7" fg:w="1"/>
      <text x="18.6711%" y="239.50">__..</text>
    </g>
    <g>
      <title>copy_page (1 samples, 2.63%)</title>
      <rect x="21.0526%" y="309" width="2.6316%" height="15" fill="rgb(213,151,43)" fg:x="8" fg:w="1"/>
      <text x="21.3026%" y="319.50">co..</text>
    </g>
    <g>
      <title>asm_exc_page_fault (3 samples, 7.89%)</title>
      <rect x="18.4211%" y="389" width="7.8947%" height="15" fill="rgb(208,26,13)" fg:x="7" fg:w="3"/>
      <text x="18.6711%" y="399.50">asm_exc_pag..</text>
    </g>
    <g>
      <title>exc_page_fault (3 samples, 7.89%)</title>
      <rect x="18.4211%" y="373" width="7.8947%" height="15" fill="rgb(216,51,29)" fg:x="7" fg:w="3"/>
      <text x="18.6711%" y="383.50">exc_page_fa..</text>
    </g>
    <g>
      <title>do_user_addr_fault (3 samples, 7.89%)</title>
      <rect x="18.4211%" y="357" width="7.8947%" height="15" fill="rgb(253,37,52)" fg:x="7" fg:w="3"/>
      <text x="18.6711%" y="367.50">do_user_add..</text>
    </g>
    <g>
      <title>handle_mm_fault (3 samples, 7.89%)</title>
      <rect x="18.4211%" y="341" width="7.8947%" height="15" fill="rgb(247,31,49)" fg:x="7" fg:w="3"/>
      <text x="18.6711%" y="351.50">handle_mm_f..</text>
    </g>
    <g>
      <title>__handle_mm_fault (3 samples, 7.89%)</title>
      <rect x="18.4211%" y="325" width="7.8947%" height="15" fill="rgb(254,123,40)" fg:x="7" fg:w="3"/>
      <text x="18.6711%" y="335.50">__handle_mm..</text>
    </g>
    <g>
      <title>__mem_cgroup_charge (1 samples, 2.63%)</title>
      <rect x="23.6842%" y="309" width="2.6316%" height="15" fill="rgb(222,56,28)" fg:x="9" fg:w="1"/>
      <text x="23.9342%" y="319.50">__..</text>
    </g>
    <g>
      <title>get_mem_cgroup_from_mm (1 samples, 2.63%)</title>
      <rect x="23.6842%" y="293" width="2.6316%" height="15" fill="rgb(232,222,48)" fg:x="9" fg:w="1"/>
      <text x="23.9342%" y="303.50">ge..</text>
    </g>
    <g>
      <title>check_match (1 samples, 2.63%)</title>
      <rect x="26.3158%" y="357" width="2.6316%" height="15" fill="rgb(236,41,41)" fg:x="10" fg:w="1"/>
      <text x="26.5658%" y="367.50">ch..</text>
    </g>
    <g>
      <title>strcmp (1 samples, 2.63%)</title>
      <rect x="26.3158%" y="341" width="2.6316%" height="15" fill="rgb(215,54,52)" fg:x="10" fg:w="1"/>
      <text x="26.5658%" y="351.50">st..</text>
    </g>
    <g>
      <title>_dl_relocate_object (5 samples, 13.16%)</title>
      <rect x="18.4211%" y="405" width="13.1579%" height="15" fill="rgb(244,75,35)" fg:x="7" fg:w="5"/>
      <text x="18.6711%" y="415.50">_dl_relocate_object</text>
    </g>
    <g>
      <title>_dl_lookup_symbol_x (2 samples, 5.26%)</title>
      <rect x="26.3158%" y="389" width="5.2632%" height="15" fill="rgb(229,85,42)" fg:x="10" fg:w="2"/>
      <text x="26.5658%" y="399.50">_dl_lo..</text>
    </g>
    <g>
      <title>do_lookup_x (2 samples, 5.26%)</title>
      <rect x="26.3158%" y="373" width="5.2632%" height="15" fill="rgb(240,183,18)" fg:x="10" fg:w="2"/>
      <text x="26.5658%" y="383.50">do_loo..</text>
    </g>
    <g>
      <title>mprotect (1 samples, 2.63%)</title>
      <rect x="31.5789%" y="325" width="2.6316%" height="15" fill="rgb(228,68,36)" fg:x="12" fg:w="1"/>
      <text x="31.8289%" y="335.50">mp..</text>
    </g>
    <g>
      <title>syscall_return_via_sysret (1 samples, 2.63%)</title>
      <rect x="31.5789%" y="309" width="2.6316%" height="15" fill="rgb(230,222,6)" fg:x="12" fg:w="1"/>
      <text x="31.8289%" y="319.50">sy..</text>
    </g>
    <g>
      <title>_dl_start (10 samples, 26.32%)</title>
      <rect x="10.5263%" y="453" width="26.3158%" height="15" fill="rgb(214,13,30)" fg:x="4" fg:w="10"/>
      <text x="10.7763%" y="463.50">_dl_start</text>
    </g>
    <g>
      <title>_dl_sysdep_start (9 samples, 23.68%)</title>
      <rect x="13.1579%" y="437" width="23.6842%" height="15" fill="rgb(238,104,49)" fg:x="5" fg:w="9"/>
      <text x="13.4079%" y="447.50">_dl_sysdep_start</text>
    </g>
    <g>
      <title>dl_main (9 samples, 23.68%)</title>
      <rect x="13.1579%" y="421" width="23.6842%" height="15" fill="rgb(253,59,10)" fg:x="5" fg:w="9"/>
      <text x="13.4079%" y="431.50">dl_main</text>
    </g>
    <g>
      <title>_dl_map_object_deps (2 samples, 5.26%)</title>
      <rect x="31.5789%" y="405" width="5.2632%" height="15" fill="rgb(208,68,2)" fg:x="12" fg:w="2"/>
      <text x="31.8289%" y="415.50">_dl_ma..</text>
    </g>
    <g>
      <title>_dl_catch_exception (2 samples, 5.26%)</title>
      <rect x="31.5789%" y="389" width="5.2632%" height="15" fill="rgb(238,71,42)" fg:x="12" fg:w="2"/>
      <text x="31.8289%" y="399.50">_dl_ca..</text>
    </g>
    <g>
      <title>openaux (2 samples, 5.26%)</title>
      <rect x="31.5789%" y="373" width="5.2632%" height="15" fill="rgb(215,55,1)" fg:x="12" fg:w="2"/>
      <text x="31.8289%" y="383.50">openaux</text>
    </g>
    <g>
      <title>_dl_map_object (2 samples, 5.26%)</title>
      <rect x="31.5789%" y="357" width="5.2632%" height="15" fill="rgb(247,77,9)" fg:x="12" fg:w="2"/>
      <text x="31.8289%" y="367.50">_dl_ma..</text>
    </g>
    <g>
      <title>_dl_map_object_from_fd (2 samples, 5.26%)</title>
      <rect x="31.5789%" y="341" width="5.2632%" height="15" fill="rgb(253,121,32)" fg:x="12" fg:w="2"/>
      <text x="31.8289%" y="351.50">_dl_ma..</text>
    </g>
    <g>
      <title>mmap64 (1 samples, 2.63%)</title>
      <rect x="34.2105%" y="325" width="2.6316%" height="15" fill="rgb(246,213,14)" fg:x="13" fg:w="1"/>
      <text x="34.4605%" y="335.50">mm..</text>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (1 samples, 2.63%)</title>
      <rect x="34.2105%" y="309" width="2.6316%" height="15" fill="rgb(205,226,15)" fg:x="13" fg:w="1"/>
      <text x="34.4605%" y="319.50">en..</text>
    </g>
    <g>
      <title>do_syscall_64 (1 samples, 2.63%)</title>
      <rect x="34.2105%" y="293" width="2.6316%" height="15" fill="rgb(220,74,14)" fg:x="13" fg:w="1"/>
      <text x="34.4605%" y="303.50">do..</text>
    </g>
    <g>
      <title>ksys_mmap_pgoff (1 samples, 2.63%)</title>
      <rect x="34.2105%" y="277" width="2.6316%" height="15" fill="rgb(248,1,16)" fg:x="13" fg:w="1"/>
      <text x="34.4605%" y="287.50">ks..</text>
    </g>
    <g>
      <title>vm_mmap_pgoff (1 samples, 2.63%)</title>
      <rect x="34.2105%" y="261" width="2.6316%" height="15" fill="rgb(226,196,1)" fg:x="13" fg:w="1"/>
      <text x="34.4605%" y="271.50">vm..</text>
    </g>
    <g>
      <title>do_mmap (1 samples, 2.63%)</title>
      <rect x="34.2105%" y="245" width="2.6316%" height="15" fill="rgb(228,25,27)" fg:x="13" fg:w="1"/>
      <text x="34.4605%" y="255.50">do..</text>
    </g>
    <g>
      <title>mmap_region (1 samples, 2.63%)</title>
      <rect x="34.2105%" y="229" width="2.6316%" height="15" fill="rgb(233,57,38)" fg:x="13" fg:w="1"/>
      <text x="34.4605%" y="239.50">mm..</text>
    </g>
    <g>
      <title>clap_builder::error::Error&lt;F&gt;::exit (1 samples, 2.63%)</title>
      <rect x="36.8421%" y="325" width="2.6316%" height="15" fill="rgb(224,56,9)" fg:x="14" fg:w="1"/>
      <text x="37.0921%" y="335.50">cl..</text>
    </g>
    <g>
      <title>clap_builder::util::safe_exit (1 samples, 2.63%)</title>
      <rect x="36.8421%" y="309" width="2.6316%" height="15" fill="rgb(237,72,25)" fg:x="14" fg:w="1"/>
      <text x="37.0921%" y="319.50">cl..</text>
    </g>
    <g>
      <title>std::process::exit (1 samples, 2.63%)</title>
      <rect x="36.8421%" y="293" width="2.6316%" height="15" fill="rgb(251,172,24)" fg:x="14" fg:w="1"/>
      <text x="37.0921%" y="303.50">st..</text>
    </g>
    <g>
      <title>std::rt::cleanup (1 samples, 2.63%)</title>
      <rect x="36.8421%" y="277" width="2.6316%" height="15" fill="rgb(228,61,1)" fg:x="14" fg:w="1"/>
      <text x="37.0921%" y="287.50">st..</text>
    </g>
    <g>
      <title>std::sys_common::once::futex::Once::call (1 samples, 2.63%)</title>
      <rect x="36.8421%" y="261" width="2.6316%" height="15" fill="rgb(246,168,49)" fg:x="14" fg:w="1"/>
      <text x="37.0921%" y="271.50">st..</text>
    </g>
    <g>
      <title>__munmap (1 samples, 2.63%)</title>
      <rect x="36.8421%" y="245" width="2.6316%" height="15" fill="rgb(232,183,39)" fg:x="14" fg:w="1"/>
      <text x="37.0921%" y="255.50">__..</text>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (1 samples, 2.63%)</title>
      <rect x="36.8421%" y="229" width="2.6316%" height="15" fill="rgb(205,226,15)" fg:x="14" fg:w="1"/>
      <text x="37.0921%" y="239.50">en..</text>
    </g>
    <g>
      <title>do_syscall_64 (1 samples, 2.63%)</title>
      <rect x="36.8421%" y="213" width="2.6316%" height="15" fill="rgb(220,74,14)" fg:x="14" fg:w="1"/>
      <text x="37.0921%" y="223.50">do..</text>
    </g>
    <g>
      <title>__x64_sys_munmap (1 samples, 2.63%)</title>
      <rect x="36.8421%" y="197" width="2.6316%" height="15" fill="rgb(218,184,12)" fg:x="14" fg:w="1"/>
      <text x="37.0921%" y="207.50">__..</text>
    </g>
    <g>
      <title>__vm_munmap (1 samples, 2.63%)</title>
      <rect x="36.8421%" y="181" width="2.6316%" height="15" fill="rgb(247,197,25)" fg:x="14" fg:w="1"/>
      <text x="37.0921%" y="191.50">__..</text>
    </g>
    <g>
      <title>__do_munmap (1 samples, 2.63%)</title>
      <rect x="36.8421%" y="165" width="2.6316%" height="15" fill="rgb(225,34,24)" fg:x="14" fg:w="1"/>
      <text x="37.0921%" y="175.50">__..</text>
    </g>
    <g>
      <title>clap_builder::builder::command::Command::get_matches_from (2 samples, 5.26%)</title>
      <rect x="36.8421%" y="341" width="5.2632%" height="15" fill="rgb(236,115,49)" fg:x="14" fg:w="2"/>
      <text x="37.0921%" y="351.50">clap_b..</text>
    </g>
    <g>
      <title>clap_builder::builder::command::Command::_do_parse (1 samples, 2.63%)</title>
      <rect x="39.4737%" y="325" width="2.6316%" height="15" fill="rgb(242,199,15)" fg:x="15" fg:w="1"/>
      <text x="39.7237%" y="335.50">cl..</text>
    </g>
    <g>
      <title>clap_builder::parser::parser::Parser::get_matches_with (1 samples, 2.63%)</title>
      <rect x="39.4737%" y="309" width="2.6316%" height="15" fill="rgb(214,35,29)" fg:x="15" fg:w="1"/>
      <text x="39.7237%" y="319.50">cl..</text>
    </g>
    <g>
      <title>clap_builder::parser::parser::Parser::react (1 samples, 2.63%)</title>
      <rect x="39.4737%" y="293" width="2.6316%" height="15" fill="rgb(237,49,38)" fg:x="15" fg:w="1"/>
      <text x="39.7237%" y="303.50">cl..</text>
    </g>
    <g>
      <title>clap_builder::output::help::write_help (1 samples, 2.63%)</title>
      <rect x="39.4737%" y="277" width="2.6316%" height="15" fill="rgb(206,62,7)" fg:x="15" fg:w="1"/>
      <text x="39.7237%" y="287.50">cl..</text>
    </g>
    <g>
      <title>clap_builder::output::help_template::HelpTemplate::write_templated_help (1 samples, 2.63%)</title>
      <rect x="39.4737%" y="261" width="2.6316%" height="15" fill="rgb(233,128,22)" fg:x="15" fg:w="1"/>
      <text x="39.7237%" y="271.50">cl..</text>
    </g>
    <g>
      <title>clap_builder::output::help_template::HelpTemplate::write_all_args (1 samples, 2.63%)</title>
      <rect x="39.4737%" y="245" width="2.6316%" height="15" fill="rgb(245,121,16)" fg:x="15" fg:w="1"/>
      <text x="39.7237%" y="255.50">cl..</text>
    </g>
    <g>
      <title>clap_builder::output::help_template::HelpTemplate::write_args (1 samples, 2.63%)</title>
      <rect x="39.4737%" y="229" width="2.6316%" height="15" fill="rgb(236,171,12)" fg:x="15" fg:w="1"/>
      <text x="39.7237%" y="239.50">cl..</text>
    </g>
    <g>
      <title>clap_builder::output::help_template::HelpTemplate::spec_vals (1 samples, 2.63%)</title>
      <rect x="39.4737%" y="213" width="2.6316%" height="15" fill="rgb(229,22,1)" fg:x="15" fg:w="1"/>
      <text x="39.7237%" y="223.50">cl..</text>
    </g>
    <g>
      <title>std::rt::lang_start::_{{closure}} (3 samples, 7.89%)</title>
      <rect x="36.8421%" y="389" width="7.8947%" height="15" fill="rgb(225,45,7)" fg:x="14" fg:w="3"/>
      <text x="37.0921%" y="399.50">std::rt::la..</text>
    </g>
    <g>
      <title>std::sys_common::backtrace::__rust_begin_short_backtrace (3 samples, 7.89%)</title>
      <rect x="36.8421%" y="373" width="7.8947%" height="15" fill="rgb(210,88,34)" fg:x="14" fg:w="3"/>
      <text x="37.0921%" y="383.50">std::sys_co..</text>
    </g>
    <g>
      <title>s4::main (3 samples, 7.89%)</title>
      <rect x="36.8421%" y="357" width="7.8947%" height="15" fill="rgb(221,151,31)" fg:x="14" fg:w="3"/>
      <text x="37.0921%" y="367.50">s4::main</text>
    </g>
    <g>
      <title>&lt;s4::CLI_Args as clap_builder::derive::Args&gt;::augment_args (1 samples, 2.63%)</title>
      <rect x="42.1053%" y="341" width="2.6316%" height="15" fill="rgb(230,145,47)" fg:x="16" fg:w="1"/>
      <text x="42.3553%" y="351.50">&lt;s..</text>
    </g>
    <g>
      <title>once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 2.63%)</title>
      <rect x="42.1053%" y="325" width="2.6316%" height="15" fill="rgb(216,218,52)" fg:x="16" fg:w="1"/>
      <text x="42.3553%" y="335.50">on..</text>
    </g>
    <g>
      <title>once_cell::imp::initialize_or_wait (1 samples, 2.63%)</title>
      <rect x="42.1053%" y="309" width="2.6316%" height="15" fill="rgb(247,128,5)" fg:x="16" fg:w="1"/>
      <text x="42.3553%" y="319.50">on..</text>
    </g>
    <g>
      <title>once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (1 samples, 2.63%)</title>
      <rect x="42.1053%" y="293" width="2.6316%" height="15" fill="rgb(247,216,6)" fg:x="16" fg:w="1"/>
      <text x="42.3553%" y="303.50">on..</text>
    </g>
    <g>
      <title>core::ops::function::FnOnce::call_once (1 samples, 2.63%)</title>
      <rect x="42.1053%" y="277" width="2.6316%" height="15" fill="rgb(210,80,10)" fg:x="16" fg:w="1"/>
      <text x="42.3553%" y="287.50">co..</text>
    </g>
    <g>
      <title>std::sys::common::thread_local::fast_local::fast::Key&lt;T&gt;::try_initialize (1 samples, 2.63%)</title>
      <rect x="42.1053%" y="261" width="2.6316%" height="15" fill="rgb(207,217,36)" fg:x="16" fg:w="1"/>
      <text x="42.3553%" y="271.50">st..</text>
    </g>
    <g>
      <title>std::sys::common::thread_local::fast_local::fast::Key&lt;T&gt;::try_initialize (1 samples, 2.63%)</title>
      <rect x="42.1053%" y="245" width="2.6316%" height="15" fill="rgb(207,217,36)" fg:x="16" fg:w="1"/>
      <text x="42.3553%" y="255.50">st..</text>
    </g>
    <g>
      <title>std::sys::common::thread_local::fast_local::fast::Key&lt;T&gt;::try_initialize (1 samples, 2.63%)</title>
      <rect x="42.1053%" y="229" width="2.6316%" height="15" fill="rgb(207,217,36)" fg:x="16" fg:w="1"/>
      <text x="42.3553%" y="239.50">st..</text>
    </g>
    <g>
      <title>chrono::offset::utc::Utc::now (1 samples, 2.63%)</title>
      <rect x="42.1053%" y="213" width="2.6316%" height="15" fill="rgb(237,117,12)" fg:x="16" fg:w="1"/>
      <text x="42.3553%" y="223.50">ch..</text>
    </g>
    <g>
      <title>chrono::naive::date::NaiveDate::from_num_days_from_ce_opt (1 samples, 2.63%)</title>
      <rect x="42.1053%" y="197" width="2.6316%" height="15" fill="rgb(233,97,50)" fg:x="16" fg:w="1"/>
      <text x="42.3553%" y="207.50">ch..</text>
    </g>
    <g>
      <title>asm_exc_page_fault (1 samples, 2.63%)</title>
      <rect x="42.1053%" y="181" width="2.6316%" height="15" fill="rgb(208,26,13)" fg:x="16" fg:w="1"/>
      <text x="42.3553%" y="191.50">as..</text>
    </g>
    <g>
      <title>exc_page_fault (1 samples, 2.63%)</title>
      <rect x="42.1053%" y="165" width="2.6316%" height="15" fill="rgb(216,51,29)" fg:x="16" fg:w="1"/>
      <text x="42.3553%" y="175.50">ex..</text>
    </g>
    <g>
      <title>do_user_addr_fault (1 samples, 2.63%)</title>
      <rect x="42.1053%" y="149" width="2.6316%" height="15" fill="rgb(253,37,52)" fg:x="16" fg:w="1"/>
      <text x="42.3553%" y="159.50">do..</text>
    </g>
    <g>
      <title>handle_mm_fault (1 samples, 2.63%)</title>
      <rect x="42.1053%" y="133" width="2.6316%" height="15" fill="rgb(247,31,49)" fg:x="16" fg:w="1"/>
      <text x="42.3553%" y="143.50">ha..</text>
    </g>
    <g>
      <title>__handle_mm_fault (1 samples, 2.63%)</title>
      <rect x="42.1053%" y="117" width="2.6316%" height="15" fill="rgb(254,123,40)" fg:x="16" fg:w="1"/>
      <text x="42.3553%" y="127.50">__..</text>
    </g>
    <g>
      <title>filemap_map_pages (1 samples, 2.63%)</title>
      <rect x="42.1053%" y="101" width="2.6316%" height="15" fill="rgb(240,96,12)" fg:x="16" fg:w="1"/>
      <text x="42.3553%" y="111.50">fi..</text>
    </g>
    <g>
      <title>do_set_pte (1 samples, 2.63%)</title>
      <rect x="42.1053%" y="85" width="2.6316%" height="15" fill="rgb(208,28,54)" fg:x="16" fg:w="1"/>
      <text x="42.3553%" y="95.50">do..</text>
    </g>
    <g>
      <title>page_add_file_rmap (1 samples, 2.63%)</title>
      <rect x="42.1053%" y="69" width="2.6316%" height="15" fill="rgb(233,84,22)" fg:x="16" fg:w="1"/>
      <text x="42.3553%" y="79.50">pa..</text>
    </g>
    <g>
      <title>__mod_lruvec_page_state (1 samples, 2.63%)</title>
      <rect x="42.1053%" y="53" width="2.6316%" height="15" fill="rgb(231,38,23)" fg:x="16" fg:w="1"/>
      <text x="42.3553%" y="63.50">__..</text>
    </g>
    <g>
      <title>__mod_memcg_lruvec_state (1 samples, 2.63%)</title>
      <rect x="42.1053%" y="37" width="2.6316%" height="15" fill="rgb(247,169,19)" fg:x="16" fg:w="1"/>
      <text x="42.3553%" y="47.50">__..</text>
    </g>
    <g>
      <title>_start (14 samples, 36.84%)</title>
      <rect x="10.5263%" y="469" width="36.8421%" height="15" fill="rgb(210,219,27)" fg:x="4" fg:w="14"/>
      <text x="10.7763%" y="479.50">_start</text>
    </g>
    <g>
      <title>__libc_start_main@@GLIBC_2.34 (4 samples, 10.53%)</title>
      <rect x="36.8421%" y="453" width="10.5263%" height="15" fill="rgb(217,176,50)" fg:x="14" fg:w="4"/>
      <text x="37.0921%" y="463.50">__libc_start_ma..</text>
    </g>
    <g>
      <title>__libc_start_call_main (4 samples, 10.53%)</title>
      <rect x="36.8421%" y="437" width="10.5263%" height="15" fill="rgb(249,173,1)" fg:x="14" fg:w="4"/>
      <text x="37.0921%" y="447.50">__libc_start_ca..</text>
    </g>
    <g>
      <title>main (4 samples, 10.53%)</title>
      <rect x="36.8421%" y="421" width="10.5263%" height="15" fill="rgb(238,28,47)" fg:x="14" fg:w="4"/>
      <text x="37.0921%" y="431.50">main</text>
    </g>
    <g>
      <title>std::rt::lang_start_internal (4 samples, 10.53%)</title>
      <rect x="36.8421%" y="405" width="10.5263%" height="15" fill="rgb(240,177,54)" fg:x="14" fg:w="4"/>
      <text x="37.0921%" y="415.50">std::rt::lang_s..</text>
    </g>
    <g>
      <title>pthread_getattr_np@@GLIBC_2.32 (1 samples, 2.63%)</title>
      <rect x="44.7368%" y="389" width="2.6316%" height="15" fill="rgb(219,192,28)" fg:x="17" fg:w="1"/>
      <text x="44.9868%" y="399.50">pt..</text>
    </g>
    <g>
      <title>__getdelim (1 samples, 2.63%)</title>
      <rect x="44.7368%" y="373" width="2.6316%" height="15" fill="rgb(216,153,9)" fg:x="17" fg:w="1"/>
      <text x="44.9868%" y="383.50">__..</text>
    </g>
    <g>
      <title>_IO_file_underflow@@GLIBC_2.2.5 (1 samples, 2.63%)</title>
      <rect x="44.7368%" y="357" width="2.6316%" height="15" fill="rgb(208,164,16)" fg:x="17" fg:w="1"/>
      <text x="44.9868%" y="367.50">_I..</text>
    </g>
    <g>
      <title>__read_nocancel (1 samples, 2.63%)</title>
      <rect x="44.7368%" y="341" width="2.6316%" height="15" fill="rgb(249,111,7)" fg:x="17" fg:w="1"/>
      <text x="44.9868%" y="351.50">__..</text>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (1 samples, 2.63%)</title>
      <rect x="44.7368%" y="325" width="2.6316%" height="15" fill="rgb(205,226,15)" fg:x="17" fg:w="1"/>
      <text x="44.9868%" y="335.50">en..</text>
    </g>
    <g>
      <title>do_syscall_64 (1 samples, 2.63%)</title>
      <rect x="44.7368%" y="309" width="2.6316%" height="15" fill="rgb(220,74,14)" fg:x="17" fg:w="1"/>
      <text x="44.9868%" y="319.50">do..</text>
    </g>
    <g>
      <title>ksys_read (1 samples, 2.63%)</title>
      <rect x="44.7368%" y="293" width="2.6316%" height="15" fill="rgb(233,96,2)" fg:x="17" fg:w="1"/>
      <text x="44.9868%" y="303.50">ks..</text>
    </g>
    <g>
      <title>vfs_read (1 samples, 2.63%)</title>
      <rect x="44.7368%" y="277" width="2.6316%" height="15" fill="rgb(232,76,33)" fg:x="17" fg:w="1"/>
      <text x="44.9868%" y="287.50">vf..</text>
    </g>
    <g>
      <title>seq_read (1 samples, 2.63%)</title>
      <rect x="44.7368%" y="261" width="2.6316%" height="15" fill="rgb(230,146,54)" fg:x="17" fg:w="1"/>
      <text x="44.9868%" y="271.50">se..</text>
    </g>
    <g>
      <title>seq_read_iter (1 samples, 2.63%)</title>
      <rect x="44.7368%" y="245" width="2.6316%" height="15" fill="rgb(230,110,51)" fg:x="17" fg:w="1"/>
      <text x="44.9868%" y="255.50">se..</text>
    </g>
    <g>
      <title>show_map (1 samples, 2.63%)</title>
      <rect x="44.7368%" y="229" width="2.6316%" height="15" fill="rgb(234,116,41)" fg:x="17" fg:w="1"/>
      <text x="44.9868%" y="239.50">sh..</text>
    </g>
    <g>
      <title>show_map_vma (1 samples, 2.63%)</title>
      <rect x="44.7368%" y="213" width="2.6316%" height="15" fill="rgb(237,17,11)" fg:x="17" fg:w="1"/>
      <text x="44.9868%" y="223.50">sh..</text>
    </g>
    <g>
      <title>seq_path (1 samples, 2.63%)</title>
      <rect x="44.7368%" y="197" width="2.6316%" height="15" fill="rgb(212,173,8)" fg:x="17" fg:w="1"/>
      <text x="44.9868%" y="207.50">se..</text>
    </g>
    <g>
      <title>mangle_path (1 samples, 2.63%)</title>
      <rect x="44.7368%" y="181" width="2.6316%" height="15" fill="rgb(234,54,32)" fg:x="17" fg:w="1"/>
      <text x="44.9868%" y="191.50">ma..</text>
    </g>
    <g>
      <title>s4 (19 samples, 50.00%)</title>
      <rect x="0.0000%" y="485" width="50.0000%" height="15" fill="rgb(230,7,27)" fg:x="0" fg:w="19"/>
      <text x="0.2500%" y="495.50">s4</text>
    </g>
    <g>
      <title>[unknown] (1 samples, 2.63%)</title>
      <rect x="47.3684%" y="469" width="2.6316%" height="15" fill="rgb(227,28,50)" fg:x="18" fg:w="1"/>
      <text x="47.6184%" y="479.50">[u..</text>
    </g>
    <g>
      <title>_start (1 samples, 2.63%)</title>
      <rect x="47.3684%" y="453" width="2.6316%" height="15" fill="rgb(210,219,27)" fg:x="18" fg:w="1"/>
      <text x="47.6184%" y="463.50">_s..</text>
    </g>
    <g>
      <title>asm_exc_page_fault (1 samples, 2.63%)</title>
      <rect x="47.3684%" y="437" width="2.6316%" height="15" fill="rgb(208,26,13)" fg:x="18" fg:w="1"/>
      <text x="47.6184%" y="447.50">as..</text>
    </g>
    <g>
      <title>exc_page_fault (1 samples, 2.63%)</title>
      <rect x="47.3684%" y="421" width="2.6316%" height="15" fill="rgb(216,51,29)" fg:x="18" fg:w="1"/>
      <text x="47.6184%" y="431.50">ex..</text>
    </g>
    <g>
      <title>do_user_addr_fault (1 samples, 2.63%)</title>
      <rect x="47.3684%" y="405" width="2.6316%" height="15" fill="rgb(253,37,52)" fg:x="18" fg:w="1"/>
      <text x="47.6184%" y="415.50">do..</text>
    </g>
    <g>
      <title>handle_mm_fault (1 samples, 2.63%)</title>
      <rect x="47.3684%" y="389" width="2.6316%" height="15" fill="rgb(247,31,49)" fg:x="18" fg:w="1"/>
      <text x="47.6184%" y="399.50">ha..</text>
    </g>
    <g>
      <title>__handle_mm_fault (1 samples, 2.63%)</title>
      <rect x="47.3684%" y="373" width="2.6316%" height="15" fill="rgb(254,123,40)" fg:x="18" fg:w="1"/>
      <text x="47.6184%" y="383.50">__..</text>
    </g>
    <g>
      <title>filemap_map_pages (1 samples, 2.63%)</title>
      <rect x="47.3684%" y="357" width="2.6316%" height="15" fill="rgb(240,96,12)" fg:x="18" fg:w="1"/>
      <text x="47.6184%" y="367.50">fi..</text>
    </g>
    <g>
      <title>unlock_page (1 samples, 2.63%)</title>
      <rect x="47.3684%" y="341" width="2.6316%" height="15" fill="rgb(250,162,14)" fg:x="18" fg:w="1"/>
      <text x="47.6184%" y="351.50">un..</text>
    </g>
    <g>
      <title>x86_pmu_enable_all (18 samples, 47.37%)</title>
      <rect x="50.0000%" y="341" width="47.3684%" height="15" fill="rgb(230,100,7)" fg:x="19" fg:w="18"/>
      <text x="50.2500%" y="351.50">x86_pmu_enable_all</text>
    </g>
    <g>
      <title>all (38 samples, 100%)</title>
      <rect x="0.0000%" y="501" width="100.0000%" height="15" fill="rgb(206,183,37)" fg:x="0" fg:w="38"/>
      <text x="0.2500%" y="511.50"/>
    </g>
    <g>
      <title>perf-exec (19 samples, 50.00%)</title>
      <rect x="50.0000%" y="485" width="50.0000%" height="15" fill="rgb(250,111,27)" fg:x="19" fg:w="19"/>
      <text x="50.2500%" y="495.50">perf-exec</text>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (19 samples, 50.00%)</title>
      <rect x="50.0000%" y="469" width="50.0000%" height="15" fill="rgb(205,226,15)" fg:x="19" fg:w="19"/>
      <text x="50.2500%" y="479.50">entry_SYSCALL_64_after_hwframe</text>
    </g>
    <g>
      <title>do_syscall_64 (19 samples, 50.00%)</title>
      <rect x="50.0000%" y="453" width="50.0000%" height="15" fill="rgb(220,74,14)" fg:x="19" fg:w="19"/>
      <text x="50.2500%" y="463.50">do_syscall_64</text>
    </g>
    <g>
      <title>__x64_sys_execve (19 samples, 50.00%)</title>
      <rect x="50.0000%" y="437" width="50.0000%" height="15" fill="rgb(237,59,15)" fg:x="19" fg:w="19"/>
      <text x="50.2500%" y="447.50">__x64_sys_execve</text>
    </g>
    <g>
      <title>do_execveat_common.isra.0 (19 samples, 50.00%)</title>
      <rect x="50.0000%" y="421" width="50.0000%" height="15" fill="rgb(248,134,53)" fg:x="19" fg:w="19"/>
      <text x="50.2500%" y="431.50">do_execveat_common.isra.0</text>
    </g>
    <g>
      <title>bprm_execve (19 samples, 50.00%)</title>
      <rect x="50.0000%" y="405" width="50.0000%" height="15" fill="rgb(232,147,16)" fg:x="19" fg:w="19"/>
      <text x="50.2500%" y="415.50">bprm_execve</text>
    </g>
    <g>
      <title>load_elf_binary (19 samples, 50.00%)</title>
      <rect x="50.0000%" y="389" width="50.0000%" height="15" fill="rgb(246,102,21)" fg:x="19" fg:w="19"/>
      <text x="50.2500%" y="399.50">load_elf_binary</text>
    </g>
    <g>
      <title>begin_new_exec (19 samples, 50.00%)</title>
      <rect x="50.0000%" y="373" width="50.0000%" height="15" fill="rgb(219,195,31)" fg:x="19" fg:w="19"/>
      <text x="50.2500%" y="383.50">begin_new_exec</text>
    </g>
    <g>
      <title>perf_event_exec (19 samples, 50.00%)</title>
      <rect x="50.0000%" y="357" width="50.0000%" height="15" fill="rgb(225,89,21)" fg:x="19" fg:w="19"/>
      <text x="50.2500%" y="367.50">perf_event_exec</text>
    </g>
    <g>
      <title>asm_sysvec_irq_work (1 samples, 2.63%)</title>
      <rect x="97.3684%" y="341" width="2.6316%" height="15" fill="rgb(233,134,12)" fg:x="37" fg:w="1"/>
      <text x="97.6184%" y="351.50">as..</text>
    </g>
    <g>
      <title>sysvec_irq_work (1 samples, 2.63%)</title>
      <rect x="97.3684%" y="325" width="2.6316%" height="15" fill="rgb(217,137,17)" fg:x="37" fg:w="1"/>
      <text x="97.6184%" y="335.50">sy..</text>
    </g>
    <g>
      <title>__sysvec_irq_work (1 samples, 2.63%)</title>
      <rect x="97.3684%" y="309" width="2.6316%" height="15" fill="rgb(215,190,23)" fg:x="37" fg:w="1"/>
      <text x="97.6184%" y="319.50">__..</text>
    </g>
    <g>
      <title>irq_work_run (1 samples, 2.63%)</title>
      <rect x="97.3684%" y="293" width="2.6316%" height="15" fill="rgb(219,119,4)" fg:x="37" fg:w="1"/>
      <text x="97.6184%" y="303.50">ir..</text>
    </g>
    <g>
      <title>irq_work_run_list (1 samples, 2.63%)</title>
      <rect x="97.3684%" y="277" width="2.6316%" height="15" fill="rgb(230,57,3)" fg:x="37" fg:w="1"/>
      <text x="97.6184%" y="287.50">ir..</text>
    </g>
    <g>
      <title>perf_pending_irq (1 samples, 2.63%)</title>
      <rect x="97.3684%" y="261" width="2.6316%" height="15" fill="rgb(208,102,45)" fg:x="37" fg:w="1"/>
      <text x="97.6184%" y="271.50">pe..</text>
    </g>
    <g>
      <title>perf_event_wakeup (1 samples, 2.63%)</title>
      <rect x="97.3684%" y="245" width="2.6316%" height="15" fill="rgb(215,46,41)" fg:x="37" fg:w="1"/>
      <text x="97.6184%" y="255.50">pe..</text>
    </g>
    <g>
      <title>__wake_up_common_lock (1 samples, 2.63%)</title>
      <rect x="97.3684%" y="229" width="2.6316%" height="15" fill="rgb(248,80,4)" fg:x="37" fg:w="1"/>
      <text x="97.6184%" y="239.50">__..</text>
    </g>
    <g>
      <title>srso_alias_return_thunk (1 samples, 2.63%)</title>
      <rect x="97.3684%" y="213" width="2.6316%" height="15" fill="rgb(245,80,51)" fg:x="37" fg:w="1"/>
      <text x="97.6184%" y="223.50">sr..</text>
    </g>
  </svg>
</svg>
