<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno" version="1.1" width="1200" height="662" onload="init(evt)" viewBox="0 0 1200 662">
  <!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.-->
  <!--NOTES: foo&lt;br/&gt;bar&lt;br/&gt;super_speedy_syslog_searcher 0.7.75; git: d799548f; -freq 8000; created 20240707T231059-0700; flamegraph-flamegraph 0.6.5; rustc 1.70.0-->
  <defs>
    <linearGradient id="background" y1="0" y2="1" x1="0" x2="0">
      <stop stop-color="#eeeeee" offset="5%"/>
      <stop stop-color="#eeeeb0" offset="95%"/>
    </linearGradient>
  </defs>
  <style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames &gt; *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style>
  <script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    "use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script>
  <rect x="0" y="0" width="100%" height="662" fill="url(#background)"/>
  <text id="title" style="font-size:xx-small" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph: super_speedy_syslog_searcher 0.7.75; git: d799548f; -freq 8000; created 20240707T231059-0700; flamegraph-flamegraph 0.6.5; rustc 1.70.0<br/>; command: s4 ./logs/programs/journal/RHE_91_system.journal.gz</text>
  <text id="details" fill="rgb(0,0,0)" x="10" y="645.00"> </text>
  <text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text>
  <text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text>
  <text id="matched" fill="rgb(0,0,0)" x="1190" y="645.00"> </text>
  <svg id="frames" x="10" width="1180" total_samples="196">
    <g>
      <title>ret_from_fork (22 samples, 11.22%)</title>
      <rect x="0.0000%" y="581" width="11.2245%" height="15" fill="rgb(249,149,44)" fg:x="0" fg:w="22"/>
      <text x="0.2500%" y="591.50">ret_from_fork</text>
    </g>
    <g>
      <title>schedule_tail (22 samples, 11.22%)</title>
      <rect x="0.0000%" y="565" width="11.2245%" height="15" fill="rgb(215,144,34)" fg:x="0" fg:w="22"/>
      <text x="0.2500%" y="575.50">schedule_tail</text>
    </g>
    <g>
      <title>finish_task_switch.isra.0 (22 samples, 11.22%)</title>
      <rect x="0.0000%" y="549" width="11.2245%" height="15" fill="rgb(249,184,27)" fg:x="0" fg:w="22"/>
      <text x="0.2500%" y="559.50">finish_task_switc..</text>
    </g>
    <g>
      <title>__perf_event_task_sched_in (22 samples, 11.22%)</title>
      <rect x="0.0000%" y="533" width="11.2245%" height="15" fill="rgb(253,170,3)" fg:x="0" fg:w="22"/>
      <text x="0.2500%" y="543.50">__perf_event_task..</text>
    </g>
    <g>
      <title>__raw_callee_save___pv_queued_spin_unlock (22 samples, 11.22%)</title>
      <rect x="0.0000%" y="517" width="11.2245%" height="15" fill="rgb(236,100,45)" fg:x="0" fg:w="22"/>
      <text x="0.2500%" y="527.50">__raw_callee_save..</text>
    </g>
    <g>
      <title>truncate_cleanup_page (1 samples, 0.51%)</title>
      <rect x="11.2245%" y="389" width="0.5102%" height="15" fill="rgb(211,95,19)" fg:x="22" fg:w="1"/>
      <text x="11.4745%" y="399.50"/>
    </g>
    <g>
      <title>try_to_free_buffers (1 samples, 0.51%)</title>
      <rect x="11.2245%" y="373" width="0.5102%" height="15" fill="rgb(250,34,27)" fg:x="22" fg:w="1"/>
      <text x="11.4745%" y="383.50"/>
    </g>
    <g>
      <title>kmem_cache_free.part.0 (1 samples, 0.51%)</title>
      <rect x="11.2245%" y="357" width="0.5102%" height="15" fill="rgb(227,24,38)" fg:x="22" fg:w="1"/>
      <text x="11.4745%" y="367.50"/>
    </g>
    <g>
      <title>__slab_free.constprop.0 (1 samples, 0.51%)</title>
      <rect x="11.2245%" y="341" width="0.5102%" height="15" fill="rgb(225,166,35)" fg:x="22" fg:w="1"/>
      <text x="11.4745%" y="351.50"/>
    </g>
    <g>
      <title>__pagevec_release (1 samples, 0.51%)</title>
      <rect x="11.7347%" y="389" width="0.5102%" height="15" fill="rgb(246,111,1)" fg:x="23" fg:w="1"/>
      <text x="11.9847%" y="399.50"/>
    </g>
    <g>
      <title>release_pages (1 samples, 0.51%)</title>
      <rect x="11.7347%" y="373" width="0.5102%" height="15" fill="rgb(247,202,4)" fg:x="23" fg:w="1"/>
      <text x="11.9847%" y="383.50"/>
    </g>
    <g>
      <title>__cond_resched (1 samples, 0.51%)</title>
      <rect x="12.2449%" y="389" width="0.5102%" height="15" fill="rgb(224,19,7)" fg:x="24" fg:w="1"/>
      <text x="12.4949%" y="399.50"/>
    </g>
    <g>
      <title>srso_alias_safe_ret (1 samples, 0.51%)</title>
      <rect x="12.2449%" y="373" width="0.5102%" height="15" fill="rgb(248,122,31)" fg:x="24" fg:w="1"/>
      <text x="12.4949%" y="383.50"/>
    </g>
    <g>
      <title>task_work_run (4 samples, 2.04%)</title>
      <rect x="11.2245%" y="501" width="2.0408%" height="15" fill="rgb(206,18,50)" fg:x="22" fg:w="4"/>
      <text x="11.4745%" y="511.50">t..</text>
    </g>
    <g>
      <title>__fput (4 samples, 2.04%)</title>
      <rect x="11.2245%" y="485" width="2.0408%" height="15" fill="rgb(210,120,45)" fg:x="22" fg:w="4"/>
      <text x="11.4745%" y="495.50">_..</text>
    </g>
    <g>
      <title>dput (4 samples, 2.04%)</title>
      <rect x="11.2245%" y="469" width="2.0408%" height="15" fill="rgb(252,3,5)" fg:x="22" fg:w="4"/>
      <text x="11.4745%" y="479.50">d..</text>
    </g>
    <g>
      <title>__dentry_kill (4 samples, 2.04%)</title>
      <rect x="11.2245%" y="453" width="2.0408%" height="15" fill="rgb(216,135,0)" fg:x="22" fg:w="4"/>
      <text x="11.4745%" y="463.50">_..</text>
    </g>
    <g>
      <title>evict (4 samples, 2.04%)</title>
      <rect x="11.2245%" y="437" width="2.0408%" height="15" fill="rgb(232,48,28)" fg:x="22" fg:w="4"/>
      <text x="11.4745%" y="447.50">e..</text>
    </g>
    <g>
      <title>ext4_evict_inode (4 samples, 2.04%)</title>
      <rect x="11.2245%" y="421" width="2.0408%" height="15" fill="rgb(225,179,4)" fg:x="22" fg:w="4"/>
      <text x="11.4745%" y="431.50">e..</text>
    </g>
    <g>
      <title>truncate_inode_pages_range (4 samples, 2.04%)</title>
      <rect x="11.2245%" y="405" width="2.0408%" height="15" fill="rgb(228,2,6)" fg:x="22" fg:w="4"/>
      <text x="11.4745%" y="415.50">t..</text>
    </g>
    <g>
      <title>mmput (1 samples, 0.51%)</title>
      <rect x="13.2653%" y="501" width="0.5102%" height="15" fill="rgb(228,125,30)" fg:x="26" fg:w="1"/>
      <text x="13.5153%" y="511.50"/>
    </g>
    <g>
      <title>exit_mmap (1 samples, 0.51%)</title>
      <rect x="13.2653%" y="485" width="0.5102%" height="15" fill="rgb(221,135,18)" fg:x="26" fg:w="1"/>
      <text x="13.5153%" y="495.50"/>
    </g>
    <g>
      <title>unmap_vmas (1 samples, 0.51%)</title>
      <rect x="13.2653%" y="469" width="0.5102%" height="15" fill="rgb(216,135,47)" fg:x="26" fg:w="1"/>
      <text x="13.5153%" y="479.50"/>
    </g>
    <g>
      <title>unmap_page_range (1 samples, 0.51%)</title>
      <rect x="13.2653%" y="453" width="0.5102%" height="15" fill="rgb(216,127,1)" fg:x="26" fg:w="1"/>
      <text x="13.5153%" y="463.50"/>
    </g>
    <g>
      <title>__x64_sys_exit_group (6 samples, 3.06%)</title>
      <rect x="11.2245%" y="549" width="3.0612%" height="15" fill="rgb(219,187,49)" fg:x="22" fg:w="6"/>
      <text x="11.4745%" y="559.50">__x..</text>
    </g>
    <g>
      <title>do_group_exit (6 samples, 3.06%)</title>
      <rect x="11.2245%" y="533" width="3.0612%" height="15" fill="rgb(241,5,8)" fg:x="22" fg:w="6"/>
      <text x="11.4745%" y="543.50">do_..</text>
    </g>
    <g>
      <title>do_exit (6 samples, 3.06%)</title>
      <rect x="11.2245%" y="517" width="3.0612%" height="15" fill="rgb(238,144,25)" fg:x="22" fg:w="6"/>
      <text x="11.4745%" y="527.50">do_..</text>
    </g>
    <g>
      <title>mm_update_next_owner (1 samples, 0.51%)</title>
      <rect x="13.7755%" y="501" width="0.5102%" height="15" fill="rgb(214,110,20)" fg:x="27" fg:w="1"/>
      <text x="14.0255%" y="511.50"/>
    </g>
    <g>
      <title>setup_arg_pages (1 samples, 0.51%)</title>
      <rect x="14.2857%" y="485" width="0.5102%" height="15" fill="rgb(232,213,47)" fg:x="28" fg:w="1"/>
      <text x="14.5357%" y="495.50"/>
    </g>
    <g>
      <title>shift_arg_pages (1 samples, 0.51%)</title>
      <rect x="14.2857%" y="469" width="0.5102%" height="15" fill="rgb(220,171,8)" fg:x="28" fg:w="1"/>
      <text x="14.5357%" y="479.50"/>
    </g>
    <g>
      <title>move_page_tables.part.0 (1 samples, 0.51%)</title>
      <rect x="14.2857%" y="453" width="0.5102%" height="15" fill="rgb(254,193,10)" fg:x="28" fg:w="1"/>
      <text x="14.5357%" y="463.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (8 samples, 4.08%)</title>
      <rect x="11.2245%" y="581" width="4.0816%" height="15" fill="rgb(205,226,15)" fg:x="22" fg:w="8"/>
      <text x="11.4745%" y="591.50">entr..</text>
    </g>
    <g>
      <title>do_syscall_64 (8 samples, 4.08%)</title>
      <rect x="11.2245%" y="565" width="4.0816%" height="15" fill="rgb(220,74,14)" fg:x="22" fg:w="8"/>
      <text x="11.4745%" y="575.50">do_s..</text>
    </g>
    <g>
      <title>__x64_sys_execve (2 samples, 1.02%)</title>
      <rect x="14.2857%" y="549" width="1.0204%" height="15" fill="rgb(237,59,15)" fg:x="28" fg:w="2"/>
      <text x="14.5357%" y="559.50"/>
    </g>
    <g>
      <title>do_execveat_common.isra.0 (2 samples, 1.02%)</title>
      <rect x="14.2857%" y="533" width="1.0204%" height="15" fill="rgb(248,134,53)" fg:x="28" fg:w="2"/>
      <text x="14.5357%" y="543.50"/>
    </g>
    <g>
      <title>bprm_execve (2 samples, 1.02%)</title>
      <rect x="14.2857%" y="517" width="1.0204%" height="15" fill="rgb(232,147,16)" fg:x="28" fg:w="2"/>
      <text x="14.5357%" y="527.50"/>
    </g>
    <g>
      <title>load_elf_binary (2 samples, 1.02%)</title>
      <rect x="14.2857%" y="501" width="1.0204%" height="15" fill="rgb(246,102,21)" fg:x="28" fg:w="2"/>
      <text x="14.5357%" y="511.50"/>
    </g>
    <g>
      <title>map_vdso_randomized (1 samples, 0.51%)</title>
      <rect x="14.7959%" y="485" width="0.5102%" height="15" fill="rgb(226,107,36)" fg:x="29" fg:w="1"/>
      <text x="15.0459%" y="495.50"/>
    </g>
    <g>
      <title>mmap_region (1 samples, 0.51%)</title>
      <rect x="15.3061%" y="437" width="0.5102%" height="15" fill="rgb(233,57,38)" fg:x="30" fg:w="1"/>
      <text x="15.5561%" y="447.50"/>
    </g>
    <g>
      <title>security_vm_enough_memory_mm (1 samples, 0.51%)</title>
      <rect x="15.3061%" y="421" width="0.5102%" height="15" fill="rgb(234,218,45)" fg:x="30" fg:w="1"/>
      <text x="15.5561%" y="431.50"/>
    </g>
    <g>
      <title>cap_vm_enough_memory (1 samples, 0.51%)</title>
      <rect x="15.3061%" y="405" width="0.5102%" height="15" fill="rgb(251,89,54)" fg:x="30" fg:w="1"/>
      <text x="15.5561%" y="415.50"/>
    </g>
    <g>
      <title>clone3 (2 samples, 1.02%)</title>
      <rect x="15.3061%" y="581" width="1.0204%" height="15" fill="rgb(208,138,34)" fg:x="30" fg:w="2"/>
      <text x="15.5561%" y="591.50"/>
    </g>
    <g>
      <title>start_thread (2 samples, 1.02%)</title>
      <rect x="15.3061%" y="565" width="1.0204%" height="15" fill="rgb(209,148,13)" fg:x="30" fg:w="2"/>
      <text x="15.5561%" y="575.50"/>
    </g>
    <g>
      <title>std::sys::unix::thread::Thread::new::thread_start (2 samples, 1.02%)</title>
      <rect x="15.3061%" y="549" width="1.0204%" height="15" fill="rgb(215,36,0)" fg:x="30" fg:w="2"/>
      <text x="15.5561%" y="559.50"/>
    </g>
    <g>
      <title>std::sys::unix::stack_overflow::imp::make_handler (2 samples, 1.02%)</title>
      <rect x="15.3061%" y="533" width="1.0204%" height="15" fill="rgb(237,166,40)" fg:x="30" fg:w="2"/>
      <text x="15.5561%" y="543.50"/>
    </g>
    <g>
      <title>__mmap (2 samples, 1.02%)</title>
      <rect x="15.3061%" y="517" width="1.0204%" height="15" fill="rgb(252,174,12)" fg:x="30" fg:w="2"/>
      <text x="15.5561%" y="527.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (2 samples, 1.02%)</title>
      <rect x="15.3061%" y="501" width="1.0204%" height="15" fill="rgb(205,226,15)" fg:x="30" fg:w="2"/>
      <text x="15.5561%" y="511.50"/>
    </g>
    <g>
      <title>do_syscall_64 (2 samples, 1.02%)</title>
      <rect x="15.3061%" y="485" width="1.0204%" height="15" fill="rgb(220,74,14)" fg:x="30" fg:w="2"/>
      <text x="15.5561%" y="495.50"/>
    </g>
    <g>
      <title>vm_mmap_pgoff (2 samples, 1.02%)</title>
      <rect x="15.3061%" y="469" width="1.0204%" height="15" fill="rgb(226,196,1)" fg:x="30" fg:w="2"/>
      <text x="15.5561%" y="479.50"/>
    </g>
    <g>
      <title>do_mmap (2 samples, 1.02%)</title>
      <rect x="15.3061%" y="453" width="1.0204%" height="15" fill="rgb(228,25,27)" fg:x="30" fg:w="2"/>
      <text x="15.5561%" y="463.50"/>
    </g>
    <g>
      <title>get_unmapped_area (1 samples, 0.51%)</title>
      <rect x="15.8163%" y="437" width="0.5102%" height="15" fill="rgb(243,176,38)" fg:x="31" fg:w="1"/>
      <text x="16.0663%" y="447.50"/>
    </g>
    <g>
      <title>asm_exc_page_fault (1 samples, 0.51%)</title>
      <rect x="16.3265%" y="581" width="0.5102%" height="15" fill="rgb(208,26,13)" fg:x="32" fg:w="1"/>
      <text x="16.5765%" y="591.50"/>
    </g>
    <g>
      <title>exc_page_fault (1 samples, 0.51%)</title>
      <rect x="16.3265%" y="565" width="0.5102%" height="15" fill="rgb(216,51,29)" fg:x="32" fg:w="1"/>
      <text x="16.5765%" y="575.50"/>
    </g>
    <g>
      <title>do_user_addr_fault (1 samples, 0.51%)</title>
      <rect x="16.3265%" y="549" width="0.5102%" height="15" fill="rgb(253,37,52)" fg:x="32" fg:w="1"/>
      <text x="16.5765%" y="559.50"/>
    </g>
    <g>
      <title>handle_mm_fault (1 samples, 0.51%)</title>
      <rect x="16.3265%" y="533" width="0.5102%" height="15" fill="rgb(247,31,49)" fg:x="32" fg:w="1"/>
      <text x="16.5765%" y="543.50"/>
    </g>
    <g>
      <title>__handle_mm_fault (1 samples, 0.51%)</title>
      <rect x="16.3265%" y="517" width="0.5102%" height="15" fill="rgb(254,123,40)" fg:x="32" fg:w="1"/>
      <text x="16.5765%" y="527.50"/>
    </g>
    <g>
      <title>filemap_map_pages (1 samples, 0.51%)</title>
      <rect x="16.8367%" y="421" width="0.5102%" height="15" fill="rgb(240,96,12)" fg:x="33" fg:w="1"/>
      <text x="17.0867%" y="431.50"/>
    </g>
    <g>
      <title>next_uptodate_page (1 samples, 0.51%)</title>
      <rect x="16.8367%" y="405" width="0.5102%" height="15" fill="rgb(231,221,15)" fg:x="33" fg:w="1"/>
      <text x="17.0867%" y="415.50"/>
    </g>
    <g>
      <title>_dl_relocate_object (2 samples, 1.02%)</title>
      <rect x="16.8367%" y="517" width="1.0204%" height="15" fill="rgb(244,75,35)" fg:x="33" fg:w="2"/>
      <text x="17.0867%" y="527.50"/>
    </g>
    <g>
      <title>asm_exc_page_fault (2 samples, 1.02%)</title>
      <rect x="16.8367%" y="501" width="1.0204%" height="15" fill="rgb(208,26,13)" fg:x="33" fg:w="2"/>
      <text x="17.0867%" y="511.50"/>
    </g>
    <g>
      <title>exc_page_fault (2 samples, 1.02%)</title>
      <rect x="16.8367%" y="485" width="1.0204%" height="15" fill="rgb(216,51,29)" fg:x="33" fg:w="2"/>
      <text x="17.0867%" y="495.50"/>
    </g>
    <g>
      <title>do_user_addr_fault (2 samples, 1.02%)</title>
      <rect x="16.8367%" y="469" width="1.0204%" height="15" fill="rgb(253,37,52)" fg:x="33" fg:w="2"/>
      <text x="17.0867%" y="479.50"/>
    </g>
    <g>
      <title>handle_mm_fault (2 samples, 1.02%)</title>
      <rect x="16.8367%" y="453" width="1.0204%" height="15" fill="rgb(247,31,49)" fg:x="33" fg:w="2"/>
      <text x="17.0867%" y="463.50"/>
    </g>
    <g>
      <title>__handle_mm_fault (2 samples, 1.02%)</title>
      <rect x="16.8367%" y="437" width="1.0204%" height="15" fill="rgb(254,123,40)" fg:x="33" fg:w="2"/>
      <text x="17.0867%" y="447.50"/>
    </g>
    <g>
      <title>_dl_start (3 samples, 1.53%)</title>
      <rect x="16.8367%" y="565" width="1.5306%" height="15" fill="rgb(214,13,30)" fg:x="33" fg:w="3"/>
      <text x="17.0867%" y="575.50"/>
    </g>
    <g>
      <title>_dl_sysdep_start (3 samples, 1.53%)</title>
      <rect x="16.8367%" y="549" width="1.5306%" height="15" fill="rgb(238,104,49)" fg:x="33" fg:w="3"/>
      <text x="17.0867%" y="559.50"/>
    </g>
    <g>
      <title>dl_main (3 samples, 1.53%)</title>
      <rect x="16.8367%" y="533" width="1.5306%" height="15" fill="rgb(253,59,10)" fg:x="33" fg:w="3"/>
      <text x="17.0867%" y="543.50"/>
    </g>
    <g>
      <title>_dl_map_object_deps (1 samples, 0.51%)</title>
      <rect x="17.8571%" y="517" width="0.5102%" height="15" fill="rgb(208,68,2)" fg:x="35" fg:w="1"/>
      <text x="18.1071%" y="527.50"/>
    </g>
    <g>
      <title>_dl_catch_exception (1 samples, 0.51%)</title>
      <rect x="17.8571%" y="501" width="0.5102%" height="15" fill="rgb(238,71,42)" fg:x="35" fg:w="1"/>
      <text x="18.1071%" y="511.50"/>
    </g>
    <g>
      <title>openaux (1 samples, 0.51%)</title>
      <rect x="17.8571%" y="485" width="0.5102%" height="15" fill="rgb(215,55,1)" fg:x="35" fg:w="1"/>
      <text x="18.1071%" y="495.50"/>
    </g>
    <g>
      <title>_dl_map_object (1 samples, 0.51%)</title>
      <rect x="17.8571%" y="469" width="0.5102%" height="15" fill="rgb(247,77,9)" fg:x="35" fg:w="1"/>
      <text x="18.1071%" y="479.50"/>
    </g>
    <g>
      <title>_dl_map_object_from_fd (1 samples, 0.51%)</title>
      <rect x="17.8571%" y="453" width="0.5102%" height="15" fill="rgb(253,121,32)" fg:x="35" fg:w="1"/>
      <text x="18.1071%" y="463.50"/>
    </g>
    <g>
      <title>memset (1 samples, 0.51%)</title>
      <rect x="17.8571%" y="437" width="0.5102%" height="15" fill="rgb(251,9,1)" fg:x="35" fg:w="1"/>
      <text x="18.1071%" y="447.50"/>
    </g>
    <g>
      <title>asm_exc_page_fault (1 samples, 0.51%)</title>
      <rect x="17.8571%" y="421" width="0.5102%" height="15" fill="rgb(208,26,13)" fg:x="35" fg:w="1"/>
      <text x="18.1071%" y="431.50"/>
    </g>
    <g>
      <title>exc_page_fault (1 samples, 0.51%)</title>
      <rect x="17.8571%" y="405" width="0.5102%" height="15" fill="rgb(216,51,29)" fg:x="35" fg:w="1"/>
      <text x="18.1071%" y="415.50"/>
    </g>
    <g>
      <title>do_user_addr_fault (1 samples, 0.51%)</title>
      <rect x="17.8571%" y="389" width="0.5102%" height="15" fill="rgb(253,37,52)" fg:x="35" fg:w="1"/>
      <text x="18.1071%" y="399.50"/>
    </g>
    <g>
      <title>handle_mm_fault (1 samples, 0.51%)</title>
      <rect x="17.8571%" y="373" width="0.5102%" height="15" fill="rgb(247,31,49)" fg:x="35" fg:w="1"/>
      <text x="18.1071%" y="383.50"/>
    </g>
    <g>
      <title>__handle_mm_fault (1 samples, 0.51%)</title>
      <rect x="17.8571%" y="357" width="0.5102%" height="15" fill="rgb(254,123,40)" fg:x="35" fg:w="1"/>
      <text x="18.1071%" y="367.50"/>
    </g>
    <g>
      <title>copy_page (1 samples, 0.51%)</title>
      <rect x="17.8571%" y="341" width="0.5102%" height="15" fill="rgb(213,151,43)" fg:x="35" fg:w="1"/>
      <text x="18.1071%" y="351.50"/>
    </g>
    <g>
      <title>std::io::Write::write_all (1 samples, 0.51%)</title>
      <rect x="18.3673%" y="421" width="0.5102%" height="15" fill="rgb(251,145,9)" fg:x="36" fg:w="1"/>
      <text x="18.6173%" y="431.50"/>
    </g>
    <g>
      <title>&lt;termcolor::LossyStandardStream&lt;W&gt; as std::io::Write&gt;::write (1 samples, 0.51%)</title>
      <rect x="18.3673%" y="405" width="0.5102%" height="15" fill="rgb(232,195,18)" fg:x="36" fg:w="1"/>
      <text x="18.6173%" y="415.50"/>
    </g>
    <g>
      <title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write (1 samples, 0.51%)</title>
      <rect x="18.3673%" y="389" width="0.5102%" height="15" fill="rgb(215,142,33)" fg:x="36" fg:w="1"/>
      <text x="18.6173%" y="399.50"/>
    </g>
    <g>
      <title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write (1 samples, 0.51%)</title>
      <rect x="18.3673%" y="373" width="0.5102%" height="15" fill="rgb(232,39,45)" fg:x="36" fg:w="1"/>
      <text x="18.6173%" y="383.50"/>
    </g>
    <g>
      <title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write (1 samples, 0.51%)</title>
      <rect x="18.3673%" y="357" width="0.5102%" height="15" fill="rgb(216,85,2)" fg:x="36" fg:w="1"/>
      <text x="18.6173%" y="367.50"/>
    </g>
    <g>
      <title>__GI___libc_write (1 samples, 0.51%)</title>
      <rect x="18.3673%" y="341" width="0.5102%" height="15" fill="rgb(232,197,30)" fg:x="36" fg:w="1"/>
      <text x="18.6173%" y="351.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (1 samples, 0.51%)</title>
      <rect x="18.3673%" y="325" width="0.5102%" height="15" fill="rgb(205,226,15)" fg:x="36" fg:w="1"/>
      <text x="18.6173%" y="335.50"/>
    </g>
    <g>
      <title>do_syscall_64 (1 samples, 0.51%)</title>
      <rect x="18.3673%" y="309" width="0.5102%" height="15" fill="rgb(220,74,14)" fg:x="36" fg:w="1"/>
      <text x="18.6173%" y="319.50"/>
    </g>
    <g>
      <title>ksys_write (1 samples, 0.51%)</title>
      <rect x="18.3673%" y="293" width="0.5102%" height="15" fill="rgb(223,155,43)" fg:x="36" fg:w="1"/>
      <text x="18.6173%" y="303.50"/>
    </g>
    <g>
      <title>vfs_write (1 samples, 0.51%)</title>
      <rect x="18.3673%" y="277" width="0.5102%" height="15" fill="rgb(216,184,13)" fg:x="36" fg:w="1"/>
      <text x="18.6173%" y="287.50"/>
    </g>
    <g>
      <title>write_null (1 samples, 0.51%)</title>
      <rect x="18.3673%" y="261" width="0.5102%" height="15" fill="rgb(223,225,28)" fg:x="36" fg:w="1"/>
      <text x="18.6173%" y="271.50"/>
    </g>
    <g>
      <title>std::io::Write::write_all (1 samples, 0.51%)</title>
      <rect x="18.8776%" y="389" width="0.5102%" height="15" fill="rgb(251,145,9)" fg:x="37" fg:w="1"/>
      <text x="19.1276%" y="399.50"/>
    </g>
    <g>
      <title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write (1 samples, 0.51%)</title>
      <rect x="18.8776%" y="373" width="0.5102%" height="15" fill="rgb(215,142,33)" fg:x="37" fg:w="1"/>
      <text x="19.1276%" y="383.50"/>
    </g>
    <g>
      <title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write (1 samples, 0.51%)</title>
      <rect x="18.8776%" y="357" width="0.5102%" height="15" fill="rgb(232,39,45)" fg:x="37" fg:w="1"/>
      <text x="19.1276%" y="367.50"/>
    </g>
    <g>
      <title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write (1 samples, 0.51%)</title>
      <rect x="18.8776%" y="341" width="0.5102%" height="15" fill="rgb(216,85,2)" fg:x="37" fg:w="1"/>
      <text x="19.1276%" y="351.50"/>
    </g>
    <g>
      <title>__memrchr_evex (1 samples, 0.51%)</title>
      <rect x="18.8776%" y="325" width="0.5102%" height="15" fill="rgb(249,31,17)" fg:x="37" fg:w="1"/>
      <text x="19.1276%" y="335.50"/>
    </g>
    <g>
      <title>termcolor::Ansi&lt;W&gt;::write_color (2 samples, 1.02%)</title>
      <rect x="18.8776%" y="405" width="1.0204%" height="15" fill="rgb(250,61,20)" fg:x="37" fg:w="2"/>
      <text x="19.1276%" y="415.50"/>
    </g>
    <g>
      <title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write (1 samples, 0.51%)</title>
      <rect x="19.8980%" y="357" width="0.5102%" height="15" fill="rgb(216,85,2)" fg:x="39" fg:w="1"/>
      <text x="20.1480%" y="367.50"/>
    </g>
    <g>
      <title>std::io::Write::write_all (2 samples, 1.02%)</title>
      <rect x="19.8980%" y="405" width="1.0204%" height="15" fill="rgb(251,145,9)" fg:x="39" fg:w="2"/>
      <text x="20.1480%" y="415.50"/>
    </g>
    <g>
      <title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write (2 samples, 1.02%)</title>
      <rect x="19.8980%" y="389" width="1.0204%" height="15" fill="rgb(215,142,33)" fg:x="39" fg:w="2"/>
      <text x="20.1480%" y="399.50"/>
    </g>
    <g>
      <title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write (2 samples, 1.02%)</title>
      <rect x="19.8980%" y="373" width="1.0204%" height="15" fill="rgb(232,39,45)" fg:x="39" fg:w="2"/>
      <text x="20.1480%" y="383.50"/>
    </g>
    <g>
      <title>&lt;termcolor::LossyStandardStream&lt;W&gt; as termcolor::WriteColor&gt;::set_color (5 samples, 2.55%)</title>
      <rect x="18.8776%" y="421" width="2.5510%" height="15" fill="rgb(244,124,31)" fg:x="37" fg:w="5"/>
      <text x="19.1276%" y="431.50">&lt;t..</text>
    </g>
    <g>
      <title>srso_alias_return_thunk (1 samples, 0.51%)</title>
      <rect x="21.4286%" y="341" width="0.5102%" height="15" fill="rgb(245,80,51)" fg:x="42" fg:w="1"/>
      <text x="21.6786%" y="351.50"/>
    </g>
    <g>
      <title>srso_alias_safe_ret (1 samples, 0.51%)</title>
      <rect x="21.4286%" y="325" width="0.5102%" height="15" fill="rgb(248,122,31)" fg:x="42" fg:w="1"/>
      <text x="21.6786%" y="335.50"/>
    </g>
    <g>
      <title>syscall_exit_to_user_mode (1 samples, 0.51%)</title>
      <rect x="21.9388%" y="325" width="0.5102%" height="15" fill="rgb(215,101,28)" fg:x="43" fg:w="1"/>
      <text x="22.1888%" y="335.50"/>
    </g>
    <g>
      <title>lockref_put_return (2 samples, 1.02%)</title>
      <rect x="22.4490%" y="261" width="1.0204%" height="15" fill="rgb(209,35,30)" fg:x="44" fg:w="2"/>
      <text x="22.6990%" y="271.50"/>
    </g>
    <g>
      <title>__fsnotify_parent (4 samples, 2.04%)</title>
      <rect x="22.4490%" y="293" width="2.0408%" height="15" fill="rgb(232,3,50)" fg:x="44" fg:w="4"/>
      <text x="22.6990%" y="303.50">_..</text>
    </g>
    <g>
      <title>dput (4 samples, 2.04%)</title>
      <rect x="22.4490%" y="277" width="2.0408%" height="15" fill="rgb(252,3,5)" fg:x="44" fg:w="4"/>
      <text x="22.6990%" y="287.50">d..</text>
    </g>
    <g>
      <title>vfs_write (8 samples, 4.08%)</title>
      <rect x="22.4490%" y="309" width="4.0816%" height="15" fill="rgb(216,184,13)" fg:x="44" fg:w="8"/>
      <text x="22.6990%" y="319.50">vfs_..</text>
    </g>
    <g>
      <title>__fdget_pos (1 samples, 0.51%)</title>
      <rect x="26.5306%" y="309" width="0.5102%" height="15" fill="rgb(205,61,45)" fg:x="52" fg:w="1"/>
      <text x="26.7806%" y="319.50"/>
    </g>
    <g>
      <title>__fget_light (1 samples, 0.51%)</title>
      <rect x="26.5306%" y="293" width="0.5102%" height="15" fill="rgb(243,103,32)" fg:x="52" fg:w="1"/>
      <text x="26.7806%" y="303.50"/>
    </g>
    <g>
      <title>__fget_files (1 samples, 0.51%)</title>
      <rect x="26.5306%" y="277" width="0.5102%" height="15" fill="rgb(209,124,29)" fg:x="52" fg:w="1"/>
      <text x="26.7806%" y="287.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (13 samples, 6.63%)</title>
      <rect x="21.4286%" y="357" width="6.6327%" height="15" fill="rgb(205,226,15)" fg:x="42" fg:w="13"/>
      <text x="21.6786%" y="367.50">entry_SYS..</text>
    </g>
    <g>
      <title>do_syscall_64 (12 samples, 6.12%)</title>
      <rect x="21.9388%" y="341" width="6.1224%" height="15" fill="rgb(220,74,14)" fg:x="43" fg:w="12"/>
      <text x="22.1888%" y="351.50">do_sysca..</text>
    </g>
    <g>
      <title>ksys_write (11 samples, 5.61%)</title>
      <rect x="22.4490%" y="325" width="5.6122%" height="15" fill="rgb(223,155,43)" fg:x="44" fg:w="11"/>
      <text x="22.6990%" y="335.50">ksys_wr..</text>
    </g>
    <g>
      <title>__GI___pthread_disable_asynccancel (1 samples, 0.51%)</title>
      <rect x="28.0612%" y="357" width="0.5102%" height="15" fill="rgb(234,197,42)" fg:x="55" fg:w="1"/>
      <text x="28.3112%" y="367.50"/>
    </g>
    <g>
      <title>s4lib::printer::printers::PrinterLogMessage::print_journalentry_color (22 samples, 11.22%)</title>
      <rect x="18.3673%" y="437" width="11.2245%" height="15" fill="rgb(248,209,52)" fg:x="36" fg:w="22"/>
      <text x="18.6173%" y="447.50">s4lib::printer::p..</text>
    </g>
    <g>
      <title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::flush (16 samples, 8.16%)</title>
      <rect x="21.4286%" y="421" width="8.1633%" height="15" fill="rgb(244,108,51)" fg:x="42" fg:w="16"/>
      <text x="21.6786%" y="431.50">&lt;std::io::s..</text>
    </g>
    <g>
      <title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::flush (16 samples, 8.16%)</title>
      <rect x="21.4286%" y="405" width="8.1633%" height="15" fill="rgb(224,207,51)" fg:x="42" fg:w="16"/>
      <text x="21.6786%" y="415.50">&lt;&amp;std::io::..</text>
    </g>
    <g>
      <title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (16 samples, 8.16%)</title>
      <rect x="21.4286%" y="389" width="8.1633%" height="15" fill="rgb(240,178,54)" fg:x="42" fg:w="16"/>
      <text x="21.6786%" y="399.50">std::io::bu..</text>
    </g>
    <g>
      <title>__GI___libc_write (16 samples, 8.16%)</title>
      <rect x="21.4286%" y="373" width="8.1633%" height="15" fill="rgb(232,197,30)" fg:x="42" fg:w="16"/>
      <text x="21.6786%" y="383.50">__GI___libc..</text>
    </g>
    <g>
      <title>_dl_relocate_object (1 samples, 0.51%)</title>
      <rect x="29.5918%" y="229" width="0.5102%" height="15" fill="rgb(244,75,35)" fg:x="58" fg:w="1"/>
      <text x="29.8418%" y="239.50"/>
    </g>
    <g>
      <title>_dl_lookup_symbol_x (1 samples, 0.51%)</title>
      <rect x="29.5918%" y="213" width="0.5102%" height="15" fill="rgb(229,85,42)" fg:x="58" fg:w="1"/>
      <text x="29.8418%" y="223.50"/>
    </g>
    <g>
      <title>do_lookup_x (1 samples, 0.51%)</title>
      <rect x="29.5918%" y="197" width="0.5102%" height="15" fill="rgb(240,183,18)" fg:x="58" fg:w="1"/>
      <text x="29.8418%" y="207.50"/>
    </g>
    <g>
      <title>check_match (1 samples, 0.51%)</title>
      <rect x="29.5918%" y="181" width="0.5102%" height="15" fill="rgb(236,41,41)" fg:x="58" fg:w="1"/>
      <text x="29.8418%" y="191.50"/>
    </g>
    <g>
      <title>strcmp (1 samples, 0.51%)</title>
      <rect x="29.5918%" y="165" width="0.5102%" height="15" fill="rgb(215,54,52)" fg:x="58" fg:w="1"/>
      <text x="29.8418%" y="175.50"/>
    </g>
    <g>
      <title>s4lib::libload::systemd_dlopen2::load_library_systemd (2 samples, 1.02%)</title>
      <rect x="29.5918%" y="437" width="1.0204%" height="15" fill="rgb(209,147,6)" fg:x="58" fg:w="2"/>
      <text x="29.8418%" y="447.50"/>
    </g>
    <g>
      <title>dlopen2::wrapper::container::Container&lt;T&gt;::load (2 samples, 1.02%)</title>
      <rect x="29.5918%" y="421" width="1.0204%" height="15" fill="rgb(205,124,22)" fg:x="58" fg:w="2"/>
      <text x="29.8418%" y="431.50"/>
    </g>
    <g>
      <title>dlopen2::raw::common::Library::open (2 samples, 1.02%)</title>
      <rect x="29.5918%" y="405" width="1.0204%" height="15" fill="rgb(215,66,11)" fg:x="58" fg:w="2"/>
      <text x="29.8418%" y="415.50"/>
    </g>
    <g>
      <title>dlopen@GLIBC_2.2.5 (2 samples, 1.02%)</title>
      <rect x="29.5918%" y="389" width="1.0204%" height="15" fill="rgb(248,147,24)" fg:x="58" fg:w="2"/>
      <text x="29.8418%" y="399.50"/>
    </g>
    <g>
      <title>_dlerror_run (2 samples, 1.02%)</title>
      <rect x="29.5918%" y="373" width="1.0204%" height="15" fill="rgb(208,58,37)" fg:x="58" fg:w="2"/>
      <text x="29.8418%" y="383.50"/>
    </g>
    <g>
      <title>_dl_catch_error (2 samples, 1.02%)</title>
      <rect x="29.5918%" y="357" width="1.0204%" height="15" fill="rgb(251,190,30)" fg:x="58" fg:w="2"/>
      <text x="29.8418%" y="367.50"/>
    </g>
    <g>
      <title>_dl_catch_exception (2 samples, 1.02%)</title>
      <rect x="29.5918%" y="341" width="1.0204%" height="15" fill="rgb(238,71,42)" fg:x="58" fg:w="2"/>
      <text x="29.8418%" y="351.50"/>
    </g>
    <g>
      <title>dlopen_doit (2 samples, 1.02%)</title>
      <rect x="29.5918%" y="325" width="1.0204%" height="15" fill="rgb(227,103,25)" fg:x="58" fg:w="2"/>
      <text x="29.8418%" y="335.50"/>
    </g>
    <g>
      <title>_dl_open (2 samples, 1.02%)</title>
      <rect x="29.5918%" y="309" width="1.0204%" height="15" fill="rgb(246,203,24)" fg:x="58" fg:w="2"/>
      <text x="29.8418%" y="319.50"/>
    </g>
    <g>
      <title>_dl_catch_exception (2 samples, 1.02%)</title>
      <rect x="29.5918%" y="293" width="1.0204%" height="15" fill="rgb(238,71,42)" fg:x="58" fg:w="2"/>
      <text x="29.8418%" y="303.50"/>
    </g>
    <g>
      <title>dl_open_worker (2 samples, 1.02%)</title>
      <rect x="29.5918%" y="277" width="1.0204%" height="15" fill="rgb(248,64,50)" fg:x="58" fg:w="2"/>
      <text x="29.8418%" y="287.50"/>
    </g>
    <g>
      <title>_dl_catch_exception (2 samples, 1.02%)</title>
      <rect x="29.5918%" y="261" width="1.0204%" height="15" fill="rgb(238,71,42)" fg:x="58" fg:w="2"/>
      <text x="29.8418%" y="271.50"/>
    </g>
    <g>
      <title>dl_open_worker_begin (2 samples, 1.02%)</title>
      <rect x="29.5918%" y="245" width="1.0204%" height="15" fill="rgb(243,153,31)" fg:x="58" fg:w="2"/>
      <text x="29.8418%" y="255.50"/>
    </g>
    <g>
      <title>_dl_map_object_deps (1 samples, 0.51%)</title>
      <rect x="30.1020%" y="229" width="0.5102%" height="15" fill="rgb(208,68,2)" fg:x="59" fg:w="1"/>
      <text x="30.3520%" y="239.50"/>
    </g>
    <g>
      <title>_dl_catch_exception (1 samples, 0.51%)</title>
      <rect x="30.1020%" y="213" width="0.5102%" height="15" fill="rgb(238,71,42)" fg:x="59" fg:w="1"/>
      <text x="30.3520%" y="223.50"/>
    </g>
    <g>
      <title>openaux (1 samples, 0.51%)</title>
      <rect x="30.1020%" y="197" width="0.5102%" height="15" fill="rgb(215,55,1)" fg:x="59" fg:w="1"/>
      <text x="30.3520%" y="207.50"/>
    </g>
    <g>
      <title>_dl_map_object (1 samples, 0.51%)</title>
      <rect x="30.1020%" y="181" width="0.5102%" height="15" fill="rgb(247,77,9)" fg:x="59" fg:w="1"/>
      <text x="30.3520%" y="191.50"/>
    </g>
    <g>
      <title>_dl_map_object_from_fd (1 samples, 0.51%)</title>
      <rect x="30.1020%" y="165" width="0.5102%" height="15" fill="rgb(253,121,32)" fg:x="59" fg:w="1"/>
      <text x="30.3520%" y="175.50"/>
    </g>
    <g>
      <title>mmap64 (1 samples, 0.51%)</title>
      <rect x="30.1020%" y="149" width="0.5102%" height="15" fill="rgb(246,213,14)" fg:x="59" fg:w="1"/>
      <text x="30.3520%" y="159.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (1 samples, 0.51%)</title>
      <rect x="30.1020%" y="133" width="0.5102%" height="15" fill="rgb(205,226,15)" fg:x="59" fg:w="1"/>
      <text x="30.3520%" y="143.50"/>
    </g>
    <g>
      <title>do_syscall_64 (1 samples, 0.51%)</title>
      <rect x="30.1020%" y="117" width="0.5102%" height="15" fill="rgb(220,74,14)" fg:x="59" fg:w="1"/>
      <text x="30.3520%" y="127.50"/>
    </g>
    <g>
      <title>ksys_mmap_pgoff (1 samples, 0.51%)</title>
      <rect x="30.1020%" y="101" width="0.5102%" height="15" fill="rgb(248,1,16)" fg:x="59" fg:w="1"/>
      <text x="30.3520%" y="111.50"/>
    </g>
    <g>
      <title>vm_mmap_pgoff (1 samples, 0.51%)</title>
      <rect x="30.1020%" y="85" width="0.5102%" height="15" fill="rgb(226,196,1)" fg:x="59" fg:w="1"/>
      <text x="30.3520%" y="95.50"/>
    </g>
    <g>
      <title>do_mmap (1 samples, 0.51%)</title>
      <rect x="30.1020%" y="69" width="0.5102%" height="15" fill="rgb(228,25,27)" fg:x="59" fg:w="1"/>
      <text x="30.3520%" y="79.50"/>
    </g>
    <g>
      <title>mmap_region (1 samples, 0.51%)</title>
      <rect x="30.1020%" y="53" width="0.5102%" height="15" fill="rgb(233,57,38)" fg:x="59" fg:w="1"/>
      <text x="30.3520%" y="63.50"/>
    </g>
    <g>
      <title>__do_munmap (1 samples, 0.51%)</title>
      <rect x="30.1020%" y="37" width="0.5102%" height="15" fill="rgb(225,34,24)" fg:x="59" fg:w="1"/>
      <text x="30.3520%" y="47.50"/>
    </g>
    <g>
      <title>hashbrown::set::HashSet&lt;T,S,A&gt;::remove (1 samples, 0.51%)</title>
      <rect x="30.6122%" y="437" width="0.5102%" height="15" fill="rgb(218,114,38)" fg:x="60" fg:w="1"/>
      <text x="30.8622%" y="447.50"/>
    </g>
    <g>
      <title>core::hash::BuildHasher::hash_one (1 samples, 0.51%)</title>
      <rect x="30.6122%" y="421" width="0.5102%" height="15" fill="rgb(222,198,6)" fg:x="60" fg:w="1"/>
      <text x="30.8622%" y="431.50"/>
    </g>
    <g>
      <title>crossbeam_channel::select::SelectedOperation::recv (2 samples, 1.02%)</title>
      <rect x="31.1224%" y="437" width="1.0204%" height="15" fill="rgb(206,140,19)" fg:x="61" fg:w="2"/>
      <text x="31.3724%" y="447.50"/>
    </g>
    <g>
      <title>crossbeam_channel::channel::read (2 samples, 1.02%)</title>
      <rect x="31.1224%" y="421" width="1.0204%" height="15" fill="rgb(209,181,8)" fg:x="61" fg:w="2"/>
      <text x="31.3724%" y="431.50"/>
    </g>
    <g>
      <title>__memmove_avx512_unaligned_erms (2 samples, 1.02%)</title>
      <rect x="31.1224%" y="405" width="1.0204%" height="15" fill="rgb(217,126,36)" fg:x="61" fg:w="2"/>
      <text x="31.3724%" y="415.50"/>
    </g>
    <g>
      <title>std::thread::park (1 samples, 0.51%)</title>
      <rect x="32.1429%" y="373" width="0.5102%" height="15" fill="rgb(253,209,8)" fg:x="63" fg:w="1"/>
      <text x="32.3929%" y="383.50"/>
    </g>
    <g>
      <title>syscall (1 samples, 0.51%)</title>
      <rect x="32.1429%" y="357" width="0.5102%" height="15" fill="rgb(207,84,5)" fg:x="63" fg:w="1"/>
      <text x="32.3929%" y="367.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (1 samples, 0.51%)</title>
      <rect x="32.1429%" y="341" width="0.5102%" height="15" fill="rgb(205,226,15)" fg:x="63" fg:w="1"/>
      <text x="32.3929%" y="351.50"/>
    </g>
    <g>
      <title>do_syscall_64 (1 samples, 0.51%)</title>
      <rect x="32.1429%" y="325" width="0.5102%" height="15" fill="rgb(220,74,14)" fg:x="63" fg:w="1"/>
      <text x="32.3929%" y="335.50"/>
    </g>
    <g>
      <title>__x64_sys_futex (1 samples, 0.51%)</title>
      <rect x="32.1429%" y="309" width="0.5102%" height="15" fill="rgb(238,204,33)" fg:x="63" fg:w="1"/>
      <text x="32.3929%" y="319.50"/>
    </g>
    <g>
      <title>do_futex (1 samples, 0.51%)</title>
      <rect x="32.1429%" y="293" width="0.5102%" height="15" fill="rgb(249,126,29)" fg:x="63" fg:w="1"/>
      <text x="32.3929%" y="303.50"/>
    </g>
    <g>
      <title>futex_wait (1 samples, 0.51%)</title>
      <rect x="32.1429%" y="277" width="0.5102%" height="15" fill="rgb(242,80,18)" fg:x="63" fg:w="1"/>
      <text x="32.3929%" y="287.50"/>
    </g>
    <g>
      <title>futex_wait_queue_me (1 samples, 0.51%)</title>
      <rect x="32.1429%" y="261" width="0.5102%" height="15" fill="rgb(227,18,39)" fg:x="63" fg:w="1"/>
      <text x="32.3929%" y="271.50"/>
    </g>
    <g>
      <title>schedule (1 samples, 0.51%)</title>
      <rect x="32.1429%" y="245" width="0.5102%" height="15" fill="rgb(213,215,35)" fg:x="63" fg:w="1"/>
      <text x="32.3929%" y="255.50"/>
    </g>
    <g>
      <title>__schedule (1 samples, 0.51%)</title>
      <rect x="32.1429%" y="229" width="0.5102%" height="15" fill="rgb(207,40,26)" fg:x="63" fg:w="1"/>
      <text x="32.3929%" y="239.50"/>
    </g>
    <g>
      <title>dequeue_task_fair (1 samples, 0.51%)</title>
      <rect x="32.1429%" y="213" width="0.5102%" height="15" fill="rgb(221,4,41)" fg:x="63" fg:w="1"/>
      <text x="32.3929%" y="223.50"/>
    </g>
    <g>
      <title>dequeue_entity (1 samples, 0.51%)</title>
      <rect x="32.1429%" y="197" width="0.5102%" height="15" fill="rgb(217,209,51)" fg:x="63" fg:w="1"/>
      <text x="32.3929%" y="207.50"/>
    </g>
    <g>
      <title>update_load_avg (1 samples, 0.51%)</title>
      <rect x="32.1429%" y="181" width="0.5102%" height="15" fill="rgb(222,111,24)" fg:x="63" fg:w="1"/>
      <text x="32.3929%" y="191.50"/>
    </g>
    <g>
      <title>__update_load_avg_se (1 samples, 0.51%)</title>
      <rect x="32.1429%" y="165" width="0.5102%" height="15" fill="rgb(209,63,2)" fg:x="63" fg:w="1"/>
      <text x="32.3929%" y="175.50"/>
    </g>
    <g>
      <title>_raw_spin_lock (1 samples, 0.51%)</title>
      <rect x="32.6531%" y="277" width="0.5102%" height="15" fill="rgb(225,195,37)" fg:x="64" fg:w="1"/>
      <text x="32.9031%" y="287.50"/>
    </g>
    <g>
      <title>__sched_yield (2 samples, 1.02%)</title>
      <rect x="32.6531%" y="373" width="1.0204%" height="15" fill="rgb(254,100,22)" fg:x="64" fg:w="2"/>
      <text x="32.9031%" y="383.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (2 samples, 1.02%)</title>
      <rect x="32.6531%" y="357" width="1.0204%" height="15" fill="rgb(205,226,15)" fg:x="64" fg:w="2"/>
      <text x="32.9031%" y="367.50"/>
    </g>
    <g>
      <title>do_syscall_64 (2 samples, 1.02%)</title>
      <rect x="32.6531%" y="341" width="1.0204%" height="15" fill="rgb(220,74,14)" fg:x="64" fg:w="2"/>
      <text x="32.9031%" y="351.50"/>
    </g>
    <g>
      <title>__x64_sys_sched_yield (2 samples, 1.02%)</title>
      <rect x="32.6531%" y="325" width="1.0204%" height="15" fill="rgb(235,109,42)" fg:x="64" fg:w="2"/>
      <text x="32.9031%" y="335.50"/>
    </g>
    <g>
      <title>schedule (2 samples, 1.02%)</title>
      <rect x="32.6531%" y="309" width="1.0204%" height="15" fill="rgb(213,215,35)" fg:x="64" fg:w="2"/>
      <text x="32.9031%" y="319.50"/>
    </g>
    <g>
      <title>__schedule (2 samples, 1.02%)</title>
      <rect x="32.6531%" y="293" width="1.0204%" height="15" fill="rgb(207,40,26)" fg:x="64" fg:w="2"/>
      <text x="32.9031%" y="303.50"/>
    </g>
    <g>
      <title>crossbeam_channel::context::Context::wait_until (7 samples, 3.57%)</title>
      <rect x="32.1429%" y="389" width="3.5714%" height="15" fill="rgb(218,28,27)" fg:x="63" fg:w="7"/>
      <text x="32.3929%" y="399.50">cros..</text>
    </g>
    <g>
      <title>crossbeam_channel::context::Context::with::{{closure}} (9 samples, 4.59%)</title>
      <rect x="32.1429%" y="405" width="4.5918%" height="15" fill="rgb(251,136,16)" fg:x="63" fg:w="9"/>
      <text x="32.3929%" y="415.50">cross..</text>
    </g>
    <g>
      <title>&lt;crossbeam_channel::channel::Receiver&lt;T&gt; as crossbeam_channel::select::SelectHandle&gt;::register (2 samples, 1.02%)</title>
      <rect x="35.7143%" y="389" width="1.0204%" height="15" fill="rgb(232,111,38)" fg:x="70" fg:w="2"/>
      <text x="35.9643%" y="399.50"/>
    </g>
    <g>
      <title>crossbeam_channel::waker::SyncWaker::register (2 samples, 1.02%)</title>
      <rect x="35.7143%" y="373" width="1.0204%" height="15" fill="rgb(224,150,31)" fg:x="70" fg:w="2"/>
      <text x="35.9643%" y="383.50"/>
    </g>
    <g>
      <title>crossbeam_channel::select::Select::select (10 samples, 5.10%)</title>
      <rect x="32.1429%" y="437" width="5.1020%" height="15" fill="rgb(218,151,27)" fg:x="63" fg:w="10"/>
      <text x="32.3929%" y="447.50">crossb..</text>
    </g>
    <g>
      <title>crossbeam_channel::select::run_select (10 samples, 5.10%)</title>
      <rect x="32.1429%" y="421" width="5.1020%" height="15" fill="rgb(238,41,29)" fg:x="63" fg:w="10"/>
      <text x="32.3929%" y="431.50">crossb..</text>
    </g>
    <g>
      <title>&lt;crossbeam_channel::flavors::array::Receiver&lt;T&gt; as crossbeam_channel::select::SelectHandle&gt;::try_select (1 samples, 0.51%)</title>
      <rect x="36.7347%" y="405" width="0.5102%" height="15" fill="rgb(205,196,31)" fg:x="72" fg:w="1"/>
      <text x="36.9847%" y="415.50"/>
    </g>
    <g>
      <title>cfree@GLIBC_2.2.5 (1 samples, 0.51%)</title>
      <rect x="37.2449%" y="437" width="0.5102%" height="15" fill="rgb(240,159,37)" fg:x="73" fg:w="1"/>
      <text x="37.4949%" y="447.50"/>
    </g>
    <g>
      <title>__lll_lock_wake_private (1 samples, 0.51%)</title>
      <rect x="37.2449%" y="421" width="0.5102%" height="15" fill="rgb(224,56,33)" fg:x="73" fg:w="1"/>
      <text x="37.4949%" y="431.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (1 samples, 0.51%)</title>
      <rect x="37.2449%" y="405" width="0.5102%" height="15" fill="rgb(205,226,15)" fg:x="73" fg:w="1"/>
      <text x="37.4949%" y="415.50"/>
    </g>
    <g>
      <title>do_syscall_64 (1 samples, 0.51%)</title>
      <rect x="37.2449%" y="389" width="0.5102%" height="15" fill="rgb(220,74,14)" fg:x="73" fg:w="1"/>
      <text x="37.4949%" y="399.50"/>
    </g>
    <g>
      <title>__x64_sys_futex (1 samples, 0.51%)</title>
      <rect x="37.2449%" y="373" width="0.5102%" height="15" fill="rgb(238,204,33)" fg:x="73" fg:w="1"/>
      <text x="37.4949%" y="383.50"/>
    </g>
    <g>
      <title>do_futex (1 samples, 0.51%)</title>
      <rect x="37.2449%" y="357" width="0.5102%" height="15" fill="rgb(249,126,29)" fg:x="73" fg:w="1"/>
      <text x="37.4949%" y="367.50"/>
    </g>
    <g>
      <title>futex_wake (1 samples, 0.51%)</title>
      <rect x="37.2449%" y="341" width="0.5102%" height="15" fill="rgb(247,80,14)" fg:x="73" fg:w="1"/>
      <text x="37.4949%" y="351.50"/>
    </g>
    <g>
      <title>s4::processing_loop (40 samples, 20.41%)</title>
      <rect x="18.3673%" y="453" width="20.4082%" height="15" fill="rgb(233,182,14)" fg:x="36" fg:w="40"/>
      <text x="18.6173%" y="463.50">s4::processing_loop</text>
    </g>
    <g>
      <title>std::rt::lang_start::_{{closure}} (41 samples, 20.92%)</title>
      <rect x="18.3673%" y="501" width="20.9184%" height="15" fill="rgb(225,45,7)" fg:x="36" fg:w="41"/>
      <text x="18.6173%" y="511.50">std::rt::lang_start::_{{closure}}</text>
    </g>
    <g>
      <title>std::sys_common::backtrace::__rust_begin_short_backtrace (41 samples, 20.92%)</title>
      <rect x="18.3673%" y="485" width="20.9184%" height="15" fill="rgb(210,88,34)" fg:x="36" fg:w="41"/>
      <text x="18.6173%" y="495.50">std::sys_common::backtrace::__rus..</text>
    </g>
    <g>
      <title>s4::main (41 samples, 20.92%)</title>
      <rect x="18.3673%" y="469" width="20.9184%" height="15" fill="rgb(221,151,31)" fg:x="36" fg:w="41"/>
      <text x="18.6173%" y="479.50">s4::main</text>
    </g>
    <g>
      <title>clap_builder::builder::command::Command::get_matches_from (1 samples, 0.51%)</title>
      <rect x="38.7755%" y="453" width="0.5102%" height="15" fill="rgb(236,115,49)" fg:x="76" fg:w="1"/>
      <text x="39.0255%" y="463.50"/>
    </g>
    <g>
      <title>clap_builder::builder::app_settings::AppFlags::is_set (1 samples, 0.51%)</title>
      <rect x="38.7755%" y="437" width="0.5102%" height="15" fill="rgb(236,109,10)" fg:x="76" fg:w="1"/>
      <text x="39.0255%" y="447.50"/>
    </g>
    <g>
      <title>_start (45 samples, 22.96%)</title>
      <rect x="16.8367%" y="581" width="22.9592%" height="15" fill="rgb(210,219,27)" fg:x="33" fg:w="45"/>
      <text x="17.0867%" y="591.50">_start</text>
    </g>
    <g>
      <title>__libc_start_main@@GLIBC_2.34 (42 samples, 21.43%)</title>
      <rect x="18.3673%" y="565" width="21.4286%" height="15" fill="rgb(217,176,50)" fg:x="36" fg:w="42"/>
      <text x="18.6173%" y="575.50">__libc_start_main@@GLIBC_2.34</text>
    </g>
    <g>
      <title>__libc_start_call_main (42 samples, 21.43%)</title>
      <rect x="18.3673%" y="549" width="21.4286%" height="15" fill="rgb(249,173,1)" fg:x="36" fg:w="42"/>
      <text x="18.6173%" y="559.50">__libc_start_call_main</text>
    </g>
    <g>
      <title>main (42 samples, 21.43%)</title>
      <rect x="18.3673%" y="533" width="21.4286%" height="15" fill="rgb(238,28,47)" fg:x="36" fg:w="42"/>
      <text x="18.6173%" y="543.50">main</text>
    </g>
    <g>
      <title>std::rt::lang_start_internal (42 samples, 21.43%)</title>
      <rect x="18.3673%" y="517" width="21.4286%" height="15" fill="rgb(240,177,54)" fg:x="36" fg:w="42"/>
      <text x="18.6173%" y="527.50">std::rt::lang_start_internal</text>
    </g>
    <g>
      <title>pthread_getattr_np@@GLIBC_2.32 (1 samples, 0.51%)</title>
      <rect x="39.2857%" y="501" width="0.5102%" height="15" fill="rgb(219,192,28)" fg:x="77" fg:w="1"/>
      <text x="39.5357%" y="511.50"/>
    </g>
    <g>
      <title>__getdelim (1 samples, 0.51%)</title>
      <rect x="39.2857%" y="485" width="0.5102%" height="15" fill="rgb(216,153,9)" fg:x="77" fg:w="1"/>
      <text x="39.5357%" y="495.50"/>
    </g>
    <g>
      <title>malloc (1 samples, 0.51%)</title>
      <rect x="39.2857%" y="469" width="0.5102%" height="15" fill="rgb(250,195,53)" fg:x="77" fg:w="1"/>
      <text x="39.5357%" y="479.50"/>
    </g>
    <g>
      <title>_int_malloc (1 samples, 0.51%)</title>
      <rect x="39.2857%" y="453" width="0.5102%" height="15" fill="rgb(222,219,51)" fg:x="77" fg:w="1"/>
      <text x="39.5357%" y="463.50"/>
    </g>
    <g>
      <title>s4 (79 samples, 40.31%)</title>
      <rect x="0.0000%" y="597" width="40.3061%" height="15" fill="rgb(230,7,27)" fg:x="0" fg:w="79"/>
      <text x="0.2500%" y="607.50">s4</text>
    </g>
    <g>
      <title>[[heap]] (1 samples, 0.51%)</title>
      <rect x="39.7959%" y="581" width="0.5102%" height="15" fill="rgb(221,205,47)" fg:x="78" fg:w="1"/>
      <text x="40.0459%" y="591.50"/>
    </g>
    <g>
      <title>__GI___libc_write (1 samples, 0.51%)</title>
      <rect x="39.7959%" y="565" width="0.5102%" height="15" fill="rgb(232,197,30)" fg:x="78" fg:w="1"/>
      <text x="40.0459%" y="575.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64 (1 samples, 0.51%)</title>
      <rect x="39.7959%" y="549" width="0.5102%" height="15" fill="rgb(234,224,53)" fg:x="78" fg:w="1"/>
      <text x="40.0459%" y="559.50"/>
    </g>
    <g>
      <title>perf-exec (11 samples, 5.61%)</title>
      <rect x="40.3061%" y="597" width="5.6122%" height="15" fill="rgb(250,111,27)" fg:x="79" fg:w="11"/>
      <text x="40.5561%" y="607.50">perf-ex..</text>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (11 samples, 5.61%)</title>
      <rect x="40.3061%" y="581" width="5.6122%" height="15" fill="rgb(205,226,15)" fg:x="79" fg:w="11"/>
      <text x="40.5561%" y="591.50">entry_S..</text>
    </g>
    <g>
      <title>do_syscall_64 (11 samples, 5.61%)</title>
      <rect x="40.3061%" y="565" width="5.6122%" height="15" fill="rgb(220,74,14)" fg:x="79" fg:w="11"/>
      <text x="40.5561%" y="575.50">do_sysc..</text>
    </g>
    <g>
      <title>__x64_sys_execve (11 samples, 5.61%)</title>
      <rect x="40.3061%" y="549" width="5.6122%" height="15" fill="rgb(237,59,15)" fg:x="79" fg:w="11"/>
      <text x="40.5561%" y="559.50">__x64_s..</text>
    </g>
    <g>
      <title>do_execveat_common.isra.0 (11 samples, 5.61%)</title>
      <rect x="40.3061%" y="533" width="5.6122%" height="15" fill="rgb(248,134,53)" fg:x="79" fg:w="11"/>
      <text x="40.5561%" y="543.50">do_exec..</text>
    </g>
    <g>
      <title>bprm_execve (11 samples, 5.61%)</title>
      <rect x="40.3061%" y="517" width="5.6122%" height="15" fill="rgb(232,147,16)" fg:x="79" fg:w="11"/>
      <text x="40.5561%" y="527.50">bprm_ex..</text>
    </g>
    <g>
      <title>load_elf_binary (11 samples, 5.61%)</title>
      <rect x="40.3061%" y="501" width="5.6122%" height="15" fill="rgb(246,102,21)" fg:x="79" fg:w="11"/>
      <text x="40.5561%" y="511.50">load_el..</text>
    </g>
    <g>
      <title>begin_new_exec (11 samples, 5.61%)</title>
      <rect x="40.3061%" y="485" width="5.6122%" height="15" fill="rgb(219,195,31)" fg:x="79" fg:w="11"/>
      <text x="40.5561%" y="495.50">begin_n..</text>
    </g>
    <g>
      <title>perf_event_exec (11 samples, 5.61%)</title>
      <rect x="40.3061%" y="469" width="5.6122%" height="15" fill="rgb(225,89,21)" fg:x="79" fg:w="11"/>
      <text x="40.5561%" y="479.50">perf_ev..</text>
    </g>
    <g>
      <title>x86_pmu_enable_all (11 samples, 5.61%)</title>
      <rect x="40.3061%" y="453" width="5.6122%" height="15" fill="rgb(230,100,7)" fg:x="79" fg:w="11"/>
      <text x="40.5561%" y="463.50">x86_pmu..</text>
    </g>
    <g>
      <title>ctrl-c (1 samples, 0.51%)</title>
      <rect x="45.9184%" y="597" width="0.5102%" height="15" fill="rgb(217,0,15)" fg:x="90" fg:w="1"/>
      <text x="46.1684%" y="607.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (1 samples, 0.51%)</title>
      <rect x="45.9184%" y="581" width="0.5102%" height="15" fill="rgb(205,226,15)" fg:x="90" fg:w="1"/>
      <text x="46.1684%" y="591.50"/>
    </g>
    <g>
      <title>do_syscall_64 (1 samples, 0.51%)</title>
      <rect x="45.9184%" y="565" width="0.5102%" height="15" fill="rgb(220,74,14)" fg:x="90" fg:w="1"/>
      <text x="46.1684%" y="575.50"/>
    </g>
    <g>
      <title>syscall_exit_to_user_mode (1 samples, 0.51%)</title>
      <rect x="45.9184%" y="549" width="0.5102%" height="15" fill="rgb(215,101,28)" fg:x="90" fg:w="1"/>
      <text x="46.1684%" y="559.50"/>
    </g>
    <g>
      <title>exit_to_user_mode_prepare (1 samples, 0.51%)</title>
      <rect x="45.9184%" y="533" width="0.5102%" height="15" fill="rgb(240,77,26)" fg:x="90" fg:w="1"/>
      <text x="46.1684%" y="543.50"/>
    </g>
    <g>
      <title>arch_do_signal_or_restart (1 samples, 0.51%)</title>
      <rect x="45.9184%" y="517" width="0.5102%" height="15" fill="rgb(236,153,36)" fg:x="90" fg:w="1"/>
      <text x="46.1684%" y="527.50"/>
    </g>
    <g>
      <title>get_signal (1 samples, 0.51%)</title>
      <rect x="45.9184%" y="501" width="0.5102%" height="15" fill="rgb(219,222,19)" fg:x="90" fg:w="1"/>
      <text x="46.1684%" y="511.50"/>
    </g>
    <g>
      <title>do_group_exit (1 samples, 0.51%)</title>
      <rect x="45.9184%" y="485" width="0.5102%" height="15" fill="rgb(241,5,8)" fg:x="90" fg:w="1"/>
      <text x="46.1684%" y="495.50"/>
    </g>
    <g>
      <title>do_exit (1 samples, 0.51%)</title>
      <rect x="45.9184%" y="469" width="0.5102%" height="15" fill="rgb(238,144,25)" fg:x="90" fg:w="1"/>
      <text x="46.1684%" y="479.50"/>
    </g>
    <g>
      <title>acct_process (1 samples, 0.51%)</title>
      <rect x="45.9184%" y="453" width="0.5102%" height="15" fill="rgb(244,20,44)" fg:x="90" fg:w="1"/>
      <text x="46.1684%" y="463.50"/>
    </g>
    <g>
      <title>do_acct_process (1 samples, 0.51%)</title>
      <rect x="45.9184%" y="437" width="0.5102%" height="15" fill="rgb(208,39,41)" fg:x="90" fg:w="1"/>
      <text x="46.1684%" y="447.50"/>
    </g>
    <g>
      <title>__kernel_write (1 samples, 0.51%)</title>
      <rect x="45.9184%" y="421" width="0.5102%" height="15" fill="rgb(230,121,9)" fg:x="90" fg:w="1"/>
      <text x="46.1684%" y="431.50"/>
    </g>
    <g>
      <title>ext4_buffered_write_iter (1 samples, 0.51%)</title>
      <rect x="45.9184%" y="405" width="0.5102%" height="15" fill="rgb(214,47,26)" fg:x="90" fg:w="1"/>
      <text x="46.1684%" y="415.50"/>
    </g>
    <g>
      <title>generic_perform_write (1 samples, 0.51%)</title>
      <rect x="45.9184%" y="389" width="0.5102%" height="15" fill="rgb(218,161,27)" fg:x="90" fg:w="1"/>
      <text x="46.1684%" y="399.50"/>
    </g>
    <g>
      <title>ext4_da_write_begin (1 samples, 0.51%)</title>
      <rect x="45.9184%" y="373" width="0.5102%" height="15" fill="rgb(235,31,43)" fg:x="90" fg:w="1"/>
      <text x="46.1684%" y="383.50"/>
    </g>
    <g>
      <title>grab_cache_page_write_begin (1 samples, 0.51%)</title>
      <rect x="45.9184%" y="357" width="0.5102%" height="15" fill="rgb(221,143,40)" fg:x="90" fg:w="1"/>
      <text x="46.1684%" y="367.50"/>
    </g>
    <g>
      <title>pagecache_get_page (1 samples, 0.51%)</title>
      <rect x="45.9184%" y="341" width="0.5102%" height="15" fill="rgb(254,146,25)" fg:x="90" fg:w="1"/>
      <text x="46.1684%" y="351.50"/>
    </g>
    <g>
      <title>xas_load (1 samples, 0.51%)</title>
      <rect x="45.9184%" y="325" width="0.5102%" height="15" fill="rgb(249,146,47)" fg:x="90" fg:w="1"/>
      <text x="46.1684%" y="335.50"/>
    </g>
    <g>
      <title>[libsystemd.so.0.32.0] (1 samples, 0.51%)</title>
      <rect x="46.4286%" y="405" width="0.5102%" height="15" fill="rgb(211,164,11)" fg:x="91" fg:w="1"/>
      <text x="46.6786%" y="415.50"/>
    </g>
    <g>
      <title>[libsystemd.so.0.32.0] (6 samples, 3.06%)</title>
      <rect x="46.4286%" y="421" width="3.0612%" height="15" fill="rgb(211,164,11)" fg:x="91" fg:w="6"/>
      <text x="46.6786%" y="431.50">[li..</text>
    </g>
    <g>
      <title>[libsystemd.so.0.32.0] (11 samples, 5.61%)</title>
      <rect x="46.4286%" y="437" width="5.6122%" height="15" fill="rgb(211,164,11)" fg:x="91" fg:w="11"/>
      <text x="46.6786%" y="447.50">[libsys..</text>
    </g>
    <g>
      <title>sd_journal_enumerate_available_data (12 samples, 6.12%)</title>
      <rect x="46.4286%" y="469" width="6.1224%" height="15" fill="rgb(233,38,20)" fg:x="91" fg:w="12"/>
      <text x="46.6786%" y="479.50">sd_journ..</text>
    </g>
    <g>
      <title>sd_journal_enumerate_data (12 samples, 6.12%)</title>
      <rect x="46.4286%" y="453" width="6.1224%" height="15" fill="rgb(253,48,41)" fg:x="91" fg:w="12"/>
      <text x="46.6786%" y="463.50">sd_journ..</text>
    </g>
    <g>
      <title>[libsystemd.so.0.32.0] (1 samples, 0.51%)</title>
      <rect x="52.5510%" y="405" width="0.5102%" height="15" fill="rgb(211,164,11)" fg:x="103" fg:w="1"/>
      <text x="52.8010%" y="415.50"/>
    </g>
    <g>
      <title>[libsystemd.so.0.32.0] (3 samples, 1.53%)</title>
      <rect x="52.5510%" y="421" width="1.5306%" height="15" fill="rgb(211,164,11)" fg:x="103" fg:w="3"/>
      <text x="52.8010%" y="431.50"/>
    </g>
    <g>
      <title>sd_journal_get_data (4 samples, 2.04%)</title>
      <rect x="52.5510%" y="453" width="2.0408%" height="15" fill="rgb(223,156,7)" fg:x="103" fg:w="4"/>
      <text x="52.8010%" y="463.50">s..</text>
    </g>
    <g>
      <title>[libsystemd.so.0.32.0] (4 samples, 2.04%)</title>
      <rect x="52.5510%" y="437" width="2.0408%" height="15" fill="rgb(211,164,11)" fg:x="103" fg:w="4"/>
      <text x="52.8010%" y="447.50">[..</text>
    </g>
    <g>
      <title>core::unicode::unicode_data::grapheme_extend::lookup (1 samples, 0.51%)</title>
      <rect x="54.5918%" y="389" width="0.5102%" height="15" fill="rgb(252,148,43)" fg:x="107" fg:w="1"/>
      <text x="54.8418%" y="399.50"/>
    </g>
    <g>
      <title>s4lib::readers::journalreader::JournalReader::Error_from_Errno (2 samples, 1.02%)</title>
      <rect x="54.5918%" y="453" width="1.0204%" height="15" fill="rgb(229,197,29)" fg:x="107" fg:w="2"/>
      <text x="54.8418%" y="463.50"/>
    </g>
    <g>
      <title>alloc::fmt::format::format_inner (2 samples, 1.02%)</title>
      <rect x="54.5918%" y="437" width="1.0204%" height="15" fill="rgb(225,219,39)" fg:x="107" fg:w="2"/>
      <text x="54.8418%" y="447.50"/>
    </g>
    <g>
      <title>core::fmt::write (2 samples, 1.02%)</title>
      <rect x="54.5918%" y="421" width="1.0204%" height="15" fill="rgb(248,210,20)" fg:x="107" fg:w="2"/>
      <text x="54.8418%" y="431.50"/>
    </g>
    <g>
      <title>&lt;str as core::fmt::Debug&gt;::fmt (2 samples, 1.02%)</title>
      <rect x="54.5918%" y="405" width="1.0204%" height="15" fill="rgb(215,221,20)" fg:x="107" fg:w="2"/>
      <text x="54.8418%" y="415.50"/>
    </g>
    <g>
      <title>[libsystemd.so.0.32.0] (1 samples, 0.51%)</title>
      <rect x="55.6122%" y="421" width="0.5102%" height="15" fill="rgb(211,164,11)" fg:x="109" fg:w="1"/>
      <text x="55.8622%" y="431.50"/>
    </g>
    <g>
      <title>[libsystemd.so.0.32.0] (1 samples, 0.51%)</title>
      <rect x="55.6122%" y="405" width="0.5102%" height="15" fill="rgb(211,164,11)" fg:x="109" fg:w="1"/>
      <text x="55.8622%" y="415.50"/>
    </g>
    <g>
      <title>[libsystemd.so.0.32.0] (1 samples, 0.51%)</title>
      <rect x="55.6122%" y="389" width="0.5102%" height="15" fill="rgb(211,164,11)" fg:x="109" fg:w="1"/>
      <text x="55.8622%" y="399.50"/>
    </g>
    <g>
      <title>[libsystemd.so.0.32.0] (1 samples, 0.51%)</title>
      <rect x="55.6122%" y="373" width="0.5102%" height="15" fill="rgb(211,164,11)" fg:x="109" fg:w="1"/>
      <text x="55.8622%" y="383.50"/>
    </g>
    <g>
      <title>[libsystemd.so.0.32.0] (2 samples, 1.02%)</title>
      <rect x="55.6122%" y="453" width="1.0204%" height="15" fill="rgb(211,164,11)" fg:x="109" fg:w="2"/>
      <text x="55.8622%" y="463.50"/>
    </g>
    <g>
      <title>[libsystemd.so.0.32.0] (2 samples, 1.02%)</title>
      <rect x="55.6122%" y="437" width="1.0204%" height="15" fill="rgb(211,164,11)" fg:x="109" fg:w="2"/>
      <text x="55.8622%" y="447.50"/>
    </g>
    <g>
      <title>s4lib::readers::journalreader::JournalReader::next_common (9 samples, 4.59%)</title>
      <rect x="52.5510%" y="469" width="4.5918%" height="15" fill="rgb(253,190,43)" fg:x="103" fg:w="9"/>
      <text x="52.8010%" y="479.50">s4lib..</text>
    </g>
    <g>
      <title>memchr::arch::x86_64::avx2::memchr::One::find_raw_avx2 (2 samples, 1.02%)</title>
      <rect x="57.1429%" y="437" width="1.0204%" height="15" fill="rgb(221,60,13)" fg:x="112" fg:w="2"/>
      <text x="57.3929%" y="447.50"/>
    </g>
    <g>
      <title>memchr::arch::x86_64::memchr::memchr_raw::find_avx2 (4 samples, 2.04%)</title>
      <rect x="57.1429%" y="469" width="2.0408%" height="15" fill="rgb(242,174,18)" fg:x="112" fg:w="4"/>
      <text x="57.3929%" y="479.50">m..</text>
    </g>
    <g>
      <title>memchr::arch::x86_64::avx2::memchr::One::find_raw (4 samples, 2.04%)</title>
      <rect x="57.1429%" y="453" width="2.0408%" height="15" fill="rgb(232,209,29)" fg:x="112" fg:w="4"/>
      <text x="57.3929%" y="463.50">m..</text>
    </g>
    <g>
      <title>malloc (1 samples, 0.51%)</title>
      <rect x="59.1837%" y="469" width="0.5102%" height="15" fill="rgb(250,195,53)" fg:x="116" fg:w="1"/>
      <text x="59.4337%" y="479.50"/>
    </g>
    <g>
      <title>_int_malloc (1 samples, 0.51%)</title>
      <rect x="59.1837%" y="453" width="0.5102%" height="15" fill="rgb(222,219,51)" fg:x="116" fg:w="1"/>
      <text x="59.4337%" y="463.50"/>
    </g>
    <g>
      <title>core::fmt::write (1 samples, 0.51%)</title>
      <rect x="59.6939%" y="421" width="0.5102%" height="15" fill="rgb(248,210,20)" fg:x="117" fg:w="1"/>
      <text x="59.9439%" y="431.50"/>
    </g>
    <g>
      <title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (1 samples, 0.51%)</title>
      <rect x="59.6939%" y="405" width="0.5102%" height="15" fill="rgb(247,117,39)" fg:x="117" fg:w="1"/>
      <text x="59.9439%" y="415.50"/>
    </g>
    <g>
      <title>core::fmt::Formatter::pad_integral (1 samples, 0.51%)</title>
      <rect x="59.6939%" y="389" width="0.5102%" height="15" fill="rgb(249,31,39)" fg:x="117" fg:w="1"/>
      <text x="59.9439%" y="399.50"/>
    </g>
    <g>
      <title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.51%)</title>
      <rect x="59.6939%" y="373" width="0.5102%" height="15" fill="rgb(237,176,18)" fg:x="117" fg:w="1"/>
      <text x="59.9439%" y="383.50"/>
    </g>
    <g>
      <title>&lt;chrono::offset::fixed::FixedOffset as core::fmt::Debug&gt;::fmt (3 samples, 1.53%)</title>
      <rect x="59.6939%" y="453" width="1.5306%" height="15" fill="rgb(236,160,0)" fg:x="117" fg:w="3"/>
      <text x="59.9439%" y="463.50"/>
    </g>
    <g>
      <title>&lt;core::fmt::Formatter as core::fmt::Write&gt;::write_fmt (3 samples, 1.53%)</title>
      <rect x="59.6939%" y="437" width="1.5306%" height="15" fill="rgb(253,7,45)" fg:x="117" fg:w="3"/>
      <text x="59.9439%" y="447.50"/>
    </g>
    <g>
      <title>chrono::format::formatting::DelayedFormat&lt;I&gt;::new_with_offset (4 samples, 2.04%)</title>
      <rect x="59.6939%" y="469" width="2.0408%" height="15" fill="rgb(250,9,12)" fg:x="117" fg:w="4"/>
      <text x="59.9439%" y="479.50">c..</text>
    </g>
    <g>
      <title>__memmove_avx512_unaligned_erms (1 samples, 0.51%)</title>
      <rect x="61.7347%" y="469" width="0.5102%" height="15" fill="rgb(217,126,36)" fg:x="121" fg:w="1"/>
      <text x="61.9847%" y="479.50"/>
    </g>
    <g>
      <title>cfree@GLIBC_2.2.5 (1 samples, 0.51%)</title>
      <rect x="62.2449%" y="453" width="0.5102%" height="15" fill="rgb(240,159,37)" fg:x="122" fg:w="1"/>
      <text x="62.4949%" y="463.50"/>
    </g>
    <g>
      <title>_int_free (1 samples, 0.51%)</title>
      <rect x="62.2449%" y="437" width="0.5102%" height="15" fill="rgb(221,113,48)" fg:x="122" fg:w="1"/>
      <text x="62.4949%" y="447.50"/>
    </g>
    <g>
      <title>s4lib::readers::journalreader::JournalReader::next_short (36 samples, 18.37%)</title>
      <rect x="46.4286%" y="485" width="18.3673%" height="15" fill="rgb(239,51,26)" fg:x="91" fg:w="36"/>
      <text x="46.6786%" y="495.50">s4lib::readers::journalreader..</text>
    </g>
    <g>
      <title>&lt;chrono::format::formatting::DelayedFormat&lt;I&gt; as core::fmt::Display&gt;::fmt (5 samples, 2.55%)</title>
      <rect x="62.2449%" y="469" width="2.5510%" height="15" fill="rgb(231,60,11)" fg:x="122" fg:w="5"/>
      <text x="62.4949%" y="479.50">&lt;c..</text>
    </g>
    <g>
      <title>crossbeam_channel::waker::SyncWaker::notify (1 samples, 0.51%)</title>
      <rect x="64.7959%" y="469" width="0.5102%" height="15" fill="rgb(222,105,38)" fg:x="127" fg:w="1"/>
      <text x="65.0459%" y="479.50"/>
    </g>
    <g>
      <title>std::sys::unix::futex::futex_wake (1 samples, 0.51%)</title>
      <rect x="64.7959%" y="453" width="0.5102%" height="15" fill="rgb(220,16,22)" fg:x="127" fg:w="1"/>
      <text x="65.0459%" y="463.50"/>
    </g>
    <g>
      <title>syscall (1 samples, 0.51%)</title>
      <rect x="64.7959%" y="437" width="0.5102%" height="15" fill="rgb(207,84,5)" fg:x="127" fg:w="1"/>
      <text x="65.0459%" y="447.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (1 samples, 0.51%)</title>
      <rect x="64.7959%" y="421" width="0.5102%" height="15" fill="rgb(205,226,15)" fg:x="127" fg:w="1"/>
      <text x="65.0459%" y="431.50"/>
    </g>
    <g>
      <title>do_syscall_64 (1 samples, 0.51%)</title>
      <rect x="64.7959%" y="405" width="0.5102%" height="15" fill="rgb(220,74,14)" fg:x="127" fg:w="1"/>
      <text x="65.0459%" y="415.50"/>
    </g>
    <g>
      <title>__x64_sys_futex (1 samples, 0.51%)</title>
      <rect x="64.7959%" y="389" width="0.5102%" height="15" fill="rgb(238,204,33)" fg:x="127" fg:w="1"/>
      <text x="65.0459%" y="399.50"/>
    </g>
    <g>
      <title>do_futex (1 samples, 0.51%)</title>
      <rect x="64.7959%" y="373" width="0.5102%" height="15" fill="rgb(249,126,29)" fg:x="127" fg:w="1"/>
      <text x="65.0459%" y="383.50"/>
    </g>
    <g>
      <title>futex_wake (1 samples, 0.51%)</title>
      <rect x="64.7959%" y="357" width="0.5102%" height="15" fill="rgb(247,80,14)" fg:x="127" fg:w="1"/>
      <text x="65.0459%" y="367.50"/>
    </g>
    <g>
      <title>wake_up_q (1 samples, 0.51%)</title>
      <rect x="64.7959%" y="341" width="0.5102%" height="15" fill="rgb(236,117,44)" fg:x="127" fg:w="1"/>
      <text x="65.0459%" y="351.50"/>
    </g>
    <g>
      <title>try_to_wake_up (1 samples, 0.51%)</title>
      <rect x="64.7959%" y="325" width="0.5102%" height="15" fill="rgb(251,124,39)" fg:x="127" fg:w="1"/>
      <text x="65.0459%" y="335.50"/>
    </g>
    <g>
      <title>crossbeam_channel::channel::Sender&lt;T&gt;::send (2 samples, 1.02%)</title>
      <rect x="64.7959%" y="485" width="1.0204%" height="15" fill="rgb(211,156,23)" fg:x="127" fg:w="2"/>
      <text x="65.0459%" y="495.50"/>
    </g>
    <g>
      <title>crossbeam_channel::context::Context::with::{{closure}} (1 samples, 0.51%)</title>
      <rect x="65.3061%" y="469" width="0.5102%" height="15" fill="rgb(251,136,16)" fg:x="128" fg:w="1"/>
      <text x="65.5561%" y="479.50"/>
    </g>
    <g>
      <title>std::thread::park (1 samples, 0.51%)</title>
      <rect x="65.3061%" y="453" width="0.5102%" height="15" fill="rgb(253,209,8)" fg:x="128" fg:w="1"/>
      <text x="65.5561%" y="463.50"/>
    </g>
    <g>
      <title>syscall (1 samples, 0.51%)</title>
      <rect x="65.3061%" y="437" width="0.5102%" height="15" fill="rgb(207,84,5)" fg:x="128" fg:w="1"/>
      <text x="65.5561%" y="447.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (1 samples, 0.51%)</title>
      <rect x="65.3061%" y="421" width="0.5102%" height="15" fill="rgb(205,226,15)" fg:x="128" fg:w="1"/>
      <text x="65.5561%" y="431.50"/>
    </g>
    <g>
      <title>do_syscall_64 (1 samples, 0.51%)</title>
      <rect x="65.3061%" y="405" width="0.5102%" height="15" fill="rgb(220,74,14)" fg:x="128" fg:w="1"/>
      <text x="65.5561%" y="415.50"/>
    </g>
    <g>
      <title>__x64_sys_futex (1 samples, 0.51%)</title>
      <rect x="65.3061%" y="389" width="0.5102%" height="15" fill="rgb(238,204,33)" fg:x="128" fg:w="1"/>
      <text x="65.5561%" y="399.50"/>
    </g>
    <g>
      <title>do_futex (1 samples, 0.51%)</title>
      <rect x="65.3061%" y="373" width="0.5102%" height="15" fill="rgb(249,126,29)" fg:x="128" fg:w="1"/>
      <text x="65.5561%" y="383.50"/>
    </g>
    <g>
      <title>futex_wait (1 samples, 0.51%)</title>
      <rect x="65.3061%" y="357" width="0.5102%" height="15" fill="rgb(242,80,18)" fg:x="128" fg:w="1"/>
      <text x="65.5561%" y="367.50"/>
    </g>
    <g>
      <title>futex_wait_queue_me (1 samples, 0.51%)</title>
      <rect x="65.3061%" y="341" width="0.5102%" height="15" fill="rgb(227,18,39)" fg:x="128" fg:w="1"/>
      <text x="65.5561%" y="351.50"/>
    </g>
    <g>
      <title>schedule (1 samples, 0.51%)</title>
      <rect x="65.3061%" y="325" width="0.5102%" height="15" fill="rgb(213,215,35)" fg:x="128" fg:w="1"/>
      <text x="65.5561%" y="335.50"/>
    </g>
    <g>
      <title>__schedule (1 samples, 0.51%)</title>
      <rect x="65.3061%" y="309" width="0.5102%" height="15" fill="rgb(207,40,26)" fg:x="128" fg:w="1"/>
      <text x="65.5561%" y="319.50"/>
    </g>
    <g>
      <title>update_rq_clock (1 samples, 0.51%)</title>
      <rect x="65.3061%" y="293" width="0.5102%" height="15" fill="rgb(248,207,48)" fg:x="128" fg:w="1"/>
      <text x="65.5561%" y="303.50"/>
    </g>
    <g>
      <title>sched_clock_cpu (1 samples, 0.51%)</title>
      <rect x="65.3061%" y="277" width="0.5102%" height="15" fill="rgb(217,142,15)" fg:x="128" fg:w="1"/>
      <text x="65.5561%" y="287.50"/>
    </g>
    <g>
      <title>read_hv_sched_clock_tsc (1 samples, 0.51%)</title>
      <rect x="65.3061%" y="261" width="0.5102%" height="15" fill="rgb(223,117,54)" fg:x="128" fg:w="1"/>
      <text x="65.5561%" y="271.50"/>
    </g>
    <g>
      <title>read_hv_clock_tsc (1 samples, 0.51%)</title>
      <rect x="65.3061%" y="245" width="0.5102%" height="15" fill="rgb(216,55,40)" fg:x="128" fg:w="1"/>
      <text x="65.5561%" y="255.50"/>
    </g>
    <g>
      <title>clone3 (39 samples, 19.90%)</title>
      <rect x="46.4286%" y="581" width="19.8980%" height="15" fill="rgb(208,138,34)" fg:x="91" fg:w="39"/>
      <text x="46.6786%" y="591.50">clone3</text>
    </g>
    <g>
      <title>start_thread (39 samples, 19.90%)</title>
      <rect x="46.4286%" y="565" width="19.8980%" height="15" fill="rgb(209,148,13)" fg:x="91" fg:w="39"/>
      <text x="46.6786%" y="575.50">start_thread</text>
    </g>
    <g>
      <title>std::sys::unix::thread::Thread::new::thread_start (39 samples, 19.90%)</title>
      <rect x="46.4286%" y="549" width="19.8980%" height="15" fill="rgb(215,36,0)" fg:x="91" fg:w="39"/>
      <text x="46.6786%" y="559.50">std::sys::unix::thread::Thread:..</text>
    </g>
    <g>
      <title>core::ops::function::FnOnce::call_once{{vtable.shim}} (39 samples, 19.90%)</title>
      <rect x="46.4286%" y="533" width="19.8980%" height="15" fill="rgb(218,104,40)" fg:x="91" fg:w="39"/>
      <text x="46.6786%" y="543.50">core::ops::function::FnOnce::ca..</text>
    </g>
    <g>
      <title>std::sys_common::backtrace::__rust_begin_short_backtrace (39 samples, 19.90%)</title>
      <rect x="46.4286%" y="517" width="19.8980%" height="15" fill="rgb(210,88,34)" fg:x="91" fg:w="39"/>
      <text x="46.6786%" y="527.50">std::sys_common::backtrace::__r..</text>
    </g>
    <g>
      <title>s4::exec_fileprocessor_thread (39 samples, 19.90%)</title>
      <rect x="46.4286%" y="501" width="19.8980%" height="15" fill="rgb(245,49,27)" fg:x="91" fg:w="39"/>
      <text x="46.6786%" y="511.50">s4::exec_fileprocessor_thread</text>
    </g>
    <g>
      <title>core::ptr::drop_in_place&lt;s4lib::readers::journalreader::JournalReader&gt; (1 samples, 0.51%)</title>
      <rect x="65.8163%" y="485" width="0.5102%" height="15" fill="rgb(249,92,16)" fg:x="129" fg:w="1"/>
      <text x="66.0663%" y="495.50"/>
    </g>
    <g>
      <title>core::ptr::drop_in_place&lt;core::option::Option&lt;tempfile::file::NamedTempFile&gt;&gt; (1 samples, 0.51%)</title>
      <rect x="65.8163%" y="469" width="0.5102%" height="15" fill="rgb(241,38,36)" fg:x="129" fg:w="1"/>
      <text x="66.0663%" y="479.50"/>
    </g>
    <g>
      <title>&lt;tempfile::file::TempPath as core::ops::drop::Drop&gt;::drop (1 samples, 0.51%)</title>
      <rect x="65.8163%" y="453" width="0.5102%" height="15" fill="rgb(226,166,16)" fg:x="129" fg:w="1"/>
      <text x="66.0663%" y="463.50"/>
    </g>
    <g>
      <title>std::sys::unix::fs::unlink (1 samples, 0.51%)</title>
      <rect x="65.8163%" y="437" width="0.5102%" height="15" fill="rgb(221,81,50)" fg:x="129" fg:w="1"/>
      <text x="66.0663%" y="447.50"/>
    </g>
    <g>
      <title>__GI___unlink (1 samples, 0.51%)</title>
      <rect x="65.8163%" y="421" width="0.5102%" height="15" fill="rgb(246,1,33)" fg:x="129" fg:w="1"/>
      <text x="66.0663%" y="431.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (1 samples, 0.51%)</title>
      <rect x="65.8163%" y="405" width="0.5102%" height="15" fill="rgb(205,226,15)" fg:x="129" fg:w="1"/>
      <text x="66.0663%" y="415.50"/>
    </g>
    <g>
      <title>do_syscall_64 (1 samples, 0.51%)</title>
      <rect x="65.8163%" y="389" width="0.5102%" height="15" fill="rgb(220,74,14)" fg:x="129" fg:w="1"/>
      <text x="66.0663%" y="399.50"/>
    </g>
    <g>
      <title>__x64_sys_unlink (1 samples, 0.51%)</title>
      <rect x="65.8163%" y="373" width="0.5102%" height="15" fill="rgb(205,45,16)" fg:x="129" fg:w="1"/>
      <text x="66.0663%" y="383.50"/>
    </g>
    <g>
      <title>do_unlinkat (1 samples, 0.51%)</title>
      <rect x="65.8163%" y="357" width="0.5102%" height="15" fill="rgb(229,136,44)" fg:x="129" fg:w="1"/>
      <text x="66.0663%" y="367.50"/>
    </g>
    <g>
      <title>vfs_unlink (1 samples, 0.51%)</title>
      <rect x="65.8163%" y="341" width="0.5102%" height="15" fill="rgb(205,3,11)" fg:x="129" fg:w="1"/>
      <text x="66.0663%" y="351.50"/>
    </g>
    <g>
      <title>ext4_unlink (1 samples, 0.51%)</title>
      <rect x="65.8163%" y="325" width="0.5102%" height="15" fill="rgb(246,42,3)" fg:x="129" fg:w="1"/>
      <text x="66.0663%" y="335.50"/>
    </g>
    <g>
      <title>__ext4_unlink (1 samples, 0.51%)</title>
      <rect x="65.8163%" y="309" width="0.5102%" height="15" fill="rgb(233,0,45)" fg:x="129" fg:w="1"/>
      <text x="66.0663%" y="319.50"/>
    </g>
    <g>
      <title>ext4_orphan_add (1 samples, 0.51%)</title>
      <rect x="65.8163%" y="293" width="0.5102%" height="15" fill="rgb(221,145,18)" fg:x="129" fg:w="1"/>
      <text x="66.0663%" y="303.50"/>
    </g>
    <g>
      <title>asm_exc_page_fault (2 samples, 1.02%)</title>
      <rect x="66.3265%" y="581" width="1.0204%" height="15" fill="rgb(208,26,13)" fg:x="130" fg:w="2"/>
      <text x="66.5765%" y="591.50"/>
    </g>
    <g>
      <title>exc_page_fault (2 samples, 1.02%)</title>
      <rect x="66.3265%" y="565" width="1.0204%" height="15" fill="rgb(216,51,29)" fg:x="130" fg:w="2"/>
      <text x="66.5765%" y="575.50"/>
    </g>
    <g>
      <title>do_user_addr_fault (2 samples, 1.02%)</title>
      <rect x="66.3265%" y="549" width="1.0204%" height="15" fill="rgb(253,37,52)" fg:x="130" fg:w="2"/>
      <text x="66.5765%" y="559.50"/>
    </g>
    <g>
      <title>handle_mm_fault (2 samples, 1.02%)</title>
      <rect x="66.3265%" y="533" width="1.0204%" height="15" fill="rgb(247,31,49)" fg:x="130" fg:w="2"/>
      <text x="66.5765%" y="543.50"/>
    </g>
    <g>
      <title>__handle_mm_fault (2 samples, 1.02%)</title>
      <rect x="66.3265%" y="517" width="1.0204%" height="15" fill="rgb(254,123,40)" fg:x="130" fg:w="2"/>
      <text x="66.5765%" y="527.50"/>
    </g>
    <g>
      <title>__alloc_pages (2 samples, 1.02%)</title>
      <rect x="66.3265%" y="501" width="1.0204%" height="15" fill="rgb(244,104,38)" fg:x="130" fg:w="2"/>
      <text x="66.5765%" y="511.50"/>
    </g>
    <g>
      <title>get_page_from_freelist (2 samples, 1.02%)</title>
      <rect x="66.3265%" y="485" width="1.0204%" height="15" fill="rgb(246,35,53)" fg:x="130" fg:w="2"/>
      <text x="66.5765%" y="495.50"/>
    </g>
    <g>
      <title>kernel_init_free_pages.part.0 (2 samples, 1.02%)</title>
      <rect x="66.3265%" y="469" width="1.0204%" height="15" fill="rgb(224,1,41)" fg:x="130" fg:w="2"/>
      <text x="66.5765%" y="479.50"/>
    </g>
    <g>
      <title>clear_page_erms (2 samples, 1.02%)</title>
      <rect x="66.3265%" y="453" width="1.0204%" height="15" fill="rgb(253,135,51)" fg:x="130" fg:w="2"/>
      <text x="66.5765%" y="463.50"/>
    </g>
    <g>
      <title>chksum_update (2 samples, 1.02%)</title>
      <rect x="67.3469%" y="261" width="1.0204%" height="15" fill="rgb(244,9,51)" fg:x="132" fg:w="2"/>
      <text x="67.5969%" y="271.50"/>
    </g>
    <g>
      <title>crc32_body (2 samples, 1.02%)</title>
      <rect x="67.3469%" y="245" width="1.0204%" height="15" fill="rgb(235,34,1)" fg:x="132" fg:w="2"/>
      <text x="67.5969%" y="255.50"/>
    </g>
    <g>
      <title>ext4_inode_csum_set (3 samples, 1.53%)</title>
      <rect x="67.3469%" y="293" width="1.5306%" height="15" fill="rgb(229,207,44)" fg:x="132" fg:w="3"/>
      <text x="67.5969%" y="303.50"/>
    </g>
    <g>
      <title>ext4_inode_csum (3 samples, 1.53%)</title>
      <rect x="67.3469%" y="277" width="1.5306%" height="15" fill="rgb(246,100,22)" fg:x="132" fg:w="3"/>
      <text x="67.5969%" y="287.50"/>
    </g>
    <g>
      <title>__ext4_handle_dirty_metadata (1 samples, 0.51%)</title>
      <rect x="68.8776%" y="293" width="0.5102%" height="15" fill="rgb(236,9,12)" fg:x="135" fg:w="1"/>
      <text x="69.1276%" y="303.50"/>
    </g>
    <g>
      <title>ext4_dirty_inode (5 samples, 2.55%)</title>
      <rect x="67.3469%" y="341" width="2.5510%" height="15" fill="rgb(235,194,15)" fg:x="132" fg:w="5"/>
      <text x="67.5969%" y="351.50">ex..</text>
    </g>
    <g>
      <title>__ext4_mark_inode_dirty (5 samples, 2.55%)</title>
      <rect x="67.3469%" y="325" width="2.5510%" height="15" fill="rgb(250,159,10)" fg:x="132" fg:w="5"/>
      <text x="67.5969%" y="335.50">__..</text>
    </g>
    <g>
      <title>ext4_mark_iloc_dirty (5 samples, 2.55%)</title>
      <rect x="67.3469%" y="309" width="2.5510%" height="15" fill="rgb(236,133,21)" fg:x="132" fg:w="5"/>
      <text x="67.5969%" y="319.50">ex..</text>
    </g>
    <g>
      <title>stop_this_handle (1 samples, 0.51%)</title>
      <rect x="69.8980%" y="309" width="0.5102%" height="15" fill="rgb(240,3,51)" fg:x="137" fg:w="1"/>
      <text x="70.1480%" y="319.50"/>
    </g>
    <g>
      <title>__wake_up_common_lock (1 samples, 0.51%)</title>
      <rect x="69.8980%" y="293" width="0.5102%" height="15" fill="rgb(248,80,4)" fg:x="137" fg:w="1"/>
      <text x="70.1480%" y="303.50"/>
    </g>
    <g>
      <title>_raw_spin_lock_irqsave (1 samples, 0.51%)</title>
      <rect x="69.8980%" y="277" width="0.5102%" height="15" fill="rgb(206,213,41)" fg:x="137" fg:w="1"/>
      <text x="70.1480%" y="287.50"/>
    </g>
    <g>
      <title>__mark_inode_dirty (7 samples, 3.57%)</title>
      <rect x="67.3469%" y="357" width="3.5714%" height="15" fill="rgb(212,91,54)" fg:x="132" fg:w="7"/>
      <text x="67.5969%" y="367.50">__ma..</text>
    </g>
    <g>
      <title>__ext4_journal_stop (2 samples, 1.02%)</title>
      <rect x="69.8980%" y="341" width="1.0204%" height="15" fill="rgb(225,40,54)" fg:x="137" fg:w="2"/>
      <text x="70.1480%" y="351.50"/>
    </g>
    <g>
      <title>jbd2_journal_stop (2 samples, 1.02%)</title>
      <rect x="69.8980%" y="325" width="1.0204%" height="15" fill="rgb(229,91,7)" fg:x="137" fg:w="2"/>
      <text x="70.1480%" y="335.50"/>
    </g>
    <g>
      <title>_raw_spin_unlock_irqrestore (1 samples, 0.51%)</title>
      <rect x="70.9184%" y="325" width="0.5102%" height="15" fill="rgb(216,183,20)" fg:x="139" fg:w="1"/>
      <text x="71.1684%" y="335.50"/>
    </g>
    <g>
      <title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.51%)</title>
      <rect x="70.9184%" y="309" width="0.5102%" height="15" fill="rgb(236,100,45)" fg:x="139" fg:w="1"/>
      <text x="71.1684%" y="319.50"/>
    </g>
    <g>
      <title>generic_write_end (9 samples, 4.59%)</title>
      <rect x="67.3469%" y="373" width="4.5918%" height="15" fill="rgb(207,107,21)" fg:x="132" fg:w="9"/>
      <text x="67.5969%" y="383.50">gener..</text>
    </g>
    <g>
      <title>__block_commit_write.constprop.0.isra.0 (2 samples, 1.02%)</title>
      <rect x="70.9184%" y="357" width="1.0204%" height="15" fill="rgb(249,65,48)" fg:x="139" fg:w="2"/>
      <text x="71.1684%" y="367.50"/>
    </g>
    <g>
      <title>mark_buffer_dirty (2 samples, 1.02%)</title>
      <rect x="70.9184%" y="341" width="1.0204%" height="15" fill="rgb(238,162,48)" fg:x="139" fg:w="2"/>
      <text x="71.1684%" y="351.50"/>
    </g>
    <g>
      <title>xas_find_conflict (1 samples, 0.51%)</title>
      <rect x="71.9388%" y="293" width="0.5102%" height="15" fill="rgb(210,127,24)" fg:x="141" fg:w="1"/>
      <text x="72.1888%" y="303.50"/>
    </g>
    <g>
      <title>add_to_page_cache_lru (4 samples, 2.04%)</title>
      <rect x="71.9388%" y="325" width="2.0408%" height="15" fill="rgb(223,55,45)" fg:x="141" fg:w="4"/>
      <text x="72.1888%" y="335.50">a..</text>
    </g>
    <g>
      <title>__add_to_page_cache_locked (4 samples, 2.04%)</title>
      <rect x="71.9388%" y="309" width="2.0408%" height="15" fill="rgb(229,179,48)" fg:x="141" fg:w="4"/>
      <text x="72.1888%" y="319.50">_..</text>
    </g>
    <g>
      <title>node_dirty_ok (1 samples, 0.51%)</title>
      <rect x="73.9796%" y="293" width="0.5102%" height="15" fill="rgb(238,125,45)" fg:x="145" fg:w="1"/>
      <text x="74.2296%" y="303.50"/>
    </g>
    <g>
      <title>grab_cache_page_write_begin (6 samples, 3.06%)</title>
      <rect x="71.9388%" y="357" width="3.0612%" height="15" fill="rgb(221,143,40)" fg:x="141" fg:w="6"/>
      <text x="72.1888%" y="367.50">gra..</text>
    </g>
    <g>
      <title>pagecache_get_page (6 samples, 3.06%)</title>
      <rect x="71.9388%" y="341" width="3.0612%" height="15" fill="rgb(254,146,25)" fg:x="141" fg:w="6"/>
      <text x="72.1888%" y="351.50">pag..</text>
    </g>
    <g>
      <title>__alloc_pages (2 samples, 1.02%)</title>
      <rect x="73.9796%" y="325" width="1.0204%" height="15" fill="rgb(244,104,38)" fg:x="145" fg:w="2"/>
      <text x="74.2296%" y="335.50"/>
    </g>
    <g>
      <title>get_page_from_freelist (2 samples, 1.02%)</title>
      <rect x="73.9796%" y="309" width="1.0204%" height="15" fill="rgb(246,35,53)" fg:x="145" fg:w="2"/>
      <text x="74.2296%" y="319.50"/>
    </g>
    <g>
      <title>__list_del_entry_valid (1 samples, 0.51%)</title>
      <rect x="74.4898%" y="293" width="0.5102%" height="15" fill="rgb(224,110,12)" fg:x="146" fg:w="1"/>
      <text x="74.7398%" y="303.50"/>
    </g>
    <g>
      <title>_raw_write_lock (2 samples, 1.02%)</title>
      <rect x="75.0000%" y="309" width="1.0204%" height="15" fill="rgb(241,8,44)" fg:x="147" fg:w="2"/>
      <text x="75.2500%" y="319.50"/>
    </g>
    <g>
      <title>ext4_es_insert_delayed_block (3 samples, 1.53%)</title>
      <rect x="75.0000%" y="325" width="1.5306%" height="15" fill="rgb(214,51,42)" fg:x="147" fg:w="3"/>
      <text x="75.2500%" y="335.50"/>
    </g>
    <g>
      <title>ext4_da_write_begin (10 samples, 5.10%)</title>
      <rect x="71.9388%" y="373" width="5.1020%" height="15" fill="rgb(235,31,43)" fg:x="141" fg:w="10"/>
      <text x="72.1888%" y="383.50">ext4_d..</text>
    </g>
    <g>
      <title>__block_write_begin_int (4 samples, 2.04%)</title>
      <rect x="75.0000%" y="357" width="2.0408%" height="15" fill="rgb(211,15,34)" fg:x="147" fg:w="4"/>
      <text x="75.2500%" y="367.50">_..</text>
    </g>
    <g>
      <title>ext4_da_get_block_prep (4 samples, 2.04%)</title>
      <rect x="75.0000%" y="341" width="2.0408%" height="15" fill="rgb(235,98,3)" fg:x="147" fg:w="4"/>
      <text x="75.2500%" y="351.50">e..</text>
    </g>
    <g>
      <title>ext4_da_reserve_space (1 samples, 0.51%)</title>
      <rect x="76.5306%" y="325" width="0.5102%" height="15" fill="rgb(253,48,44)" fg:x="150" fg:w="1"/>
      <text x="76.7806%" y="335.50"/>
    </g>
    <g>
      <title>__dquot_alloc_space (1 samples, 0.51%)</title>
      <rect x="76.5306%" y="309" width="0.5102%" height="15" fill="rgb(217,146,30)" fg:x="150" fg:w="1"/>
      <text x="76.7806%" y="319.50"/>
    </g>
    <g>
      <title>std::io::Write::write_all (24 samples, 12.24%)</title>
      <rect x="67.3469%" y="533" width="12.2449%" height="15" fill="rgb(251,145,9)" fg:x="132" fg:w="24"/>
      <text x="67.5969%" y="543.50">std::io::Write::wr..</text>
    </g>
    <g>
      <title>std::os::unix::net::datagram::UnixDatagram::send (24 samples, 12.24%)</title>
      <rect x="67.3469%" y="517" width="12.2449%" height="15" fill="rgb(237,7,30)" fg:x="132" fg:w="24"/>
      <text x="67.5969%" y="527.50">std::os::unix::net..</text>
    </g>
    <g>
      <title>__GI___libc_write (24 samples, 12.24%)</title>
      <rect x="67.3469%" y="501" width="12.2449%" height="15" fill="rgb(232,197,30)" fg:x="132" fg:w="24"/>
      <text x="67.5969%" y="511.50">__GI___libc_write</text>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (24 samples, 12.24%)</title>
      <rect x="67.3469%" y="485" width="12.2449%" height="15" fill="rgb(205,226,15)" fg:x="132" fg:w="24"/>
      <text x="67.5969%" y="495.50">entry_SYSCALL_64_a..</text>
    </g>
    <g>
      <title>do_syscall_64 (24 samples, 12.24%)</title>
      <rect x="67.3469%" y="469" width="12.2449%" height="15" fill="rgb(220,74,14)" fg:x="132" fg:w="24"/>
      <text x="67.5969%" y="479.50">do_syscall_64</text>
    </g>
    <g>
      <title>ksys_write (24 samples, 12.24%)</title>
      <rect x="67.3469%" y="453" width="12.2449%" height="15" fill="rgb(223,155,43)" fg:x="132" fg:w="24"/>
      <text x="67.5969%" y="463.50">ksys_write</text>
    </g>
    <g>
      <title>vfs_write (24 samples, 12.24%)</title>
      <rect x="67.3469%" y="437" width="12.2449%" height="15" fill="rgb(216,184,13)" fg:x="132" fg:w="24"/>
      <text x="67.5969%" y="447.50">vfs_write</text>
    </g>
    <g>
      <title>new_sync_write (24 samples, 12.24%)</title>
      <rect x="67.3469%" y="421" width="12.2449%" height="15" fill="rgb(220,167,51)" fg:x="132" fg:w="24"/>
      <text x="67.5969%" y="431.50">new_sync_write</text>
    </g>
    <g>
      <title>ext4_buffered_write_iter (24 samples, 12.24%)</title>
      <rect x="67.3469%" y="405" width="12.2449%" height="15" fill="rgb(214,47,26)" fg:x="132" fg:w="24"/>
      <text x="67.5969%" y="415.50">ext4_buffered_writ..</text>
    </g>
    <g>
      <title>generic_perform_write (24 samples, 12.24%)</title>
      <rect x="67.3469%" y="389" width="12.2449%" height="15" fill="rgb(218,161,27)" fg:x="132" fg:w="24"/>
      <text x="67.5969%" y="399.50">generic_perform_wr..</text>
    </g>
    <g>
      <title>copy_page_from_iter_atomic (5 samples, 2.55%)</title>
      <rect x="77.0408%" y="373" width="2.5510%" height="15" fill="rgb(247,27,48)" fg:x="151" fg:w="5"/>
      <text x="77.2908%" y="383.50">co..</text>
    </g>
    <g>
      <title>copy_user_enhanced_fast_string (5 samples, 2.55%)</title>
      <rect x="77.0408%" y="357" width="2.5510%" height="15" fill="rgb(254,4,9)" fg:x="151" fg:w="5"/>
      <text x="77.2908%" y="367.50">co..</text>
    </g>
    <g>
      <title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_all_cold (25 samples, 12.76%)</title>
      <rect x="67.3469%" y="549" width="12.7551%" height="15" fill="rgb(219,202,23)" fg:x="132" fg:w="25"/>
      <text x="67.5969%" y="559.50">std::io::buffered::..</text>
    </g>
    <g>
      <title>miniz_oxide::inflate::core::transfer (19 samples, 9.69%)</title>
      <rect x="80.1020%" y="469" width="9.6939%" height="15" fill="rgb(245,196,31)" fg:x="157" fg:w="19"/>
      <text x="80.3520%" y="479.50">miniz_oxide::i..</text>
    </g>
    <g>
      <title>miniz_oxide::inflate::core::init_tree (1 samples, 0.51%)</title>
      <rect x="89.7959%" y="469" width="0.5102%" height="15" fill="rgb(245,66,0)" fg:x="176" fg:w="1"/>
      <text x="90.0459%" y="479.50"/>
    </g>
    <g>
      <title>miniz_oxide::inflate::core::apply_match (1 samples, 0.51%)</title>
      <rect x="90.3061%" y="469" width="0.5102%" height="15" fill="rgb(215,134,22)" fg:x="177" fg:w="1"/>
      <text x="90.5561%" y="479.50"/>
    </g>
    <g>
      <title>__memmove_avx512_unaligned_erms (2 samples, 1.02%)</title>
      <rect x="90.8163%" y="469" width="1.0204%" height="15" fill="rgb(217,126,36)" fg:x="178" fg:w="2"/>
      <text x="91.0663%" y="479.50"/>
    </g>
    <g>
      <title>flate2::zio::read (36 samples, 18.37%)</title>
      <rect x="80.1020%" y="533" width="18.3673%" height="15" fill="rgb(223,11,11)" fg:x="157" fg:w="36"/>
      <text x="80.3520%" y="543.50">flate2::zio::read</text>
    </g>
    <g>
      <title>&lt;flate2::ffi::rust::Inflate as flate2::ffi::InflateBackend&gt;::decompress (36 samples, 18.37%)</title>
      <rect x="80.1020%" y="517" width="18.3673%" height="15" fill="rgb(229,135,15)" fg:x="157" fg:w="36"/>
      <text x="80.3520%" y="527.50">&lt;flate2::ffi::rust::Inflate a..</text>
    </g>
    <g>
      <title>miniz_oxide::inflate::stream::inflate (36 samples, 18.37%)</title>
      <rect x="80.1020%" y="501" width="18.3673%" height="15" fill="rgb(251,102,38)" fg:x="157" fg:w="36"/>
      <text x="80.3520%" y="511.50">miniz_oxide::inflate::stream:..</text>
    </g>
    <g>
      <title>miniz_oxide::inflate::core::decompress (36 samples, 18.37%)</title>
      <rect x="80.1020%" y="485" width="18.3673%" height="15" fill="rgb(248,154,7)" fg:x="157" fg:w="36"/>
      <text x="80.3520%" y="495.50">miniz_oxide::inflate::core::d..</text>
    </g>
    <g>
      <title>all (196 samples, 100%)</title>
      <rect x="0.0000%" y="613" width="100.0000%" height="15" fill="rgb(206,183,37)" fg:x="0" fg:w="196"/>
      <text x="0.2500%" y="623.50"/>
    </g>
    <g>
      <title>RHE_91_system.j (105 samples, 53.57%)</title>
      <rect x="46.4286%" y="597" width="53.5714%" height="15" fill="rgb(216,111,28)" fg:x="91" fg:w="105"/>
      <text x="46.6786%" y="607.50">RHE_91_system.j</text>
    </g>
    <g>
      <title>[unknown] (64 samples, 32.65%)</title>
      <rect x="67.3469%" y="581" width="32.6531%" height="15" fill="rgb(227,28,50)" fg:x="132" fg:w="64"/>
      <text x="67.5969%" y="591.50">[unknown]</text>
    </g>
    <g>
      <title>s4lib::readers::filedecompressor::decompress_to_ntf (64 samples, 32.65%)</title>
      <rect x="67.3469%" y="565" width="32.6531%" height="15" fill="rgb(253,7,37)" fg:x="132" fg:w="64"/>
      <text x="67.5969%" y="575.50">s4lib::readers::filedecompressor::decompress_to_ntf</text>
    </g>
    <g>
      <title>&lt;flate2::gz::bufread::GzDecoder&lt;R&gt; as std::io::Read&gt;::read (39 samples, 19.90%)</title>
      <rect x="80.1020%" y="549" width="19.8980%" height="15" fill="rgb(225,64,27)" fg:x="157" fg:w="39"/>
      <text x="80.3520%" y="559.50">&lt;flate2::gz::bufread::GzDecoder..</text>
    </g>
    <g>
      <title>crc32fast::Hasher::update (3 samples, 1.53%)</title>
      <rect x="98.4694%" y="533" width="1.5306%" height="15" fill="rgb(242,188,16)" fg:x="193" fg:w="3"/>
      <text x="98.7194%" y="543.50"/>
    </g>
    <g>
      <title>crc32fast::specialized::pclmulqdq::calculate (3 samples, 1.53%)</title>
      <rect x="98.4694%" y="517" width="1.5306%" height="15" fill="rgb(208,156,27)" fg:x="193" fg:w="3"/>
      <text x="98.7194%" y="527.50"/>
    </g>
  </svg>
</svg>
