<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno" version="1.1" width="1200" height="422" onload="init(evt)" viewBox="0 0 1200 422">
  <!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.-->
  <!--NOTES: foo&lt;br/&gt;bar&lt;br/&gt;super_speedy_syslog_searcher 0.7.75; git: d799548f; -freq 8000; created 20240707T231133-0700; flamegraph-flamegraph 0.6.5; rustc 1.70.0-->
  <defs>
    <linearGradient id="background" y1="0" y2="1" x1="0" x2="0">
      <stop stop-color="#eeeeee" offset="5%"/>
      <stop stop-color="#eeeeb0" offset="95%"/>
    </linearGradient>
  </defs>
  <style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames &gt; *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style>
  <script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    "use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script>
  <rect x="0" y="0" width="100%" height="422" fill="url(#background)"/>
  <text id="title" style="font-size:xx-small" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph: super_speedy_syslog_searcher 0.7.75; git: d799548f; -freq 8000; created 20240707T231133-0700; flamegraph-flamegraph 0.6.5; rustc 1.70.0<br/>; command: s4 ./logs/CentOS7/x86_64/wtmp</text>
  <text id="details" fill="rgb(0,0,0)" x="10" y="405.00"> </text>
  <text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text>
  <text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text>
  <text id="matched" fill="rgb(0,0,0)" x="1190" y="405.00"> </text>
  <svg id="frames" x="10" width="1180" total_samples="58">
    <g>
      <title>s4lib::readers::fixedstructreader::FixedStructReader::process_entry_at (1 samples, 1.72%)</title>
      <rect x="0.0000%" y="245" width="1.7241%" height="15" fill="rgb(214,176,48)" fg:x="0" fg:w="1"/>
      <text x="0.2500%" y="255.50"/>
    </g>
    <g>
      <title>s4lib::data::fixedstruct::buffer_to_fixedstructptr (1 samples, 1.72%)</title>
      <rect x="0.0000%" y="229" width="1.7241%" height="15" fill="rgb(226,205,30)" fg:x="0" fg:w="1"/>
      <text x="0.2500%" y="239.50"/>
    </g>
    <g>
      <title>alloc::alloc::exchange_malloc (1 samples, 1.72%)</title>
      <rect x="0.0000%" y="213" width="1.7241%" height="15" fill="rgb(248,129,10)" fg:x="0" fg:w="1"/>
      <text x="0.2500%" y="223.50"/>
    </g>
    <g>
      <title>malloc (1 samples, 1.72%)</title>
      <rect x="0.0000%" y="197" width="1.7241%" height="15" fill="rgb(250,195,53)" fg:x="0" fg:w="1"/>
      <text x="0.2500%" y="207.50"/>
    </g>
    <g>
      <title>s4lib::readers::fixedstructreader::FixedStructReader::new (1 samples, 1.72%)</title>
      <rect x="1.7241%" y="245" width="1.7241%" height="15" fill="rgb(213,38,1)" fg:x="1" fg:w="1"/>
      <text x="1.9741%" y="255.50"/>
    </g>
    <g>
      <title>s4lib::readers::fixedstructreader::FixedStructReader::score_file (1 samples, 1.72%)</title>
      <rect x="1.7241%" y="229" width="1.7241%" height="15" fill="rgb(215,32,0)" fg:x="1" fg:w="1"/>
      <text x="1.9741%" y="239.50"/>
    </g>
    <g>
      <title>s4lib::data::fixedstruct::FixedStruct::score_fixedstruct (1 samples, 1.72%)</title>
      <rect x="1.7241%" y="213" width="1.7241%" height="15" fill="rgb(214,193,42)" fg:x="1" fg:w="1"/>
      <text x="1.9741%" y="223.50"/>
    </g>
    <g>
      <title>asm_exc_page_fault (1 samples, 1.72%)</title>
      <rect x="1.7241%" y="197" width="1.7241%" height="15" fill="rgb(208,26,13)" fg:x="1" fg:w="1"/>
      <text x="1.9741%" y="207.50"/>
    </g>
    <g>
      <title>srso_alias_return_thunk (1 samples, 1.72%)</title>
      <rect x="1.7241%" y="181" width="1.7241%" height="15" fill="rgb(245,80,51)" fg:x="1" fg:w="1"/>
      <text x="1.9741%" y="191.50"/>
    </g>
    <g>
      <title>clone3 (3 samples, 5.17%)</title>
      <rect x="0.0000%" y="341" width="5.1724%" height="15" fill="rgb(208,138,34)" fg:x="0" fg:w="3"/>
      <text x="0.2500%" y="351.50">clone3</text>
    </g>
    <g>
      <title>start_thread (3 samples, 5.17%)</title>
      <rect x="0.0000%" y="325" width="5.1724%" height="15" fill="rgb(209,148,13)" fg:x="0" fg:w="3"/>
      <text x="0.2500%" y="335.50">start_..</text>
    </g>
    <g>
      <title>std::sys::unix::thread::Thread::new::thread_start (3 samples, 5.17%)</title>
      <rect x="0.0000%" y="309" width="5.1724%" height="15" fill="rgb(215,36,0)" fg:x="0" fg:w="3"/>
      <text x="0.2500%" y="319.50">std::s..</text>
    </g>
    <g>
      <title>core::ops::function::FnOnce::call_once{{vtable.shim}} (3 samples, 5.17%)</title>
      <rect x="0.0000%" y="293" width="5.1724%" height="15" fill="rgb(218,104,40)" fg:x="0" fg:w="3"/>
      <text x="0.2500%" y="303.50">core::..</text>
    </g>
    <g>
      <title>std::sys_common::backtrace::__rust_begin_short_backtrace (3 samples, 5.17%)</title>
      <rect x="0.0000%" y="277" width="5.1724%" height="15" fill="rgb(210,88,34)" fg:x="0" fg:w="3"/>
      <text x="0.2500%" y="287.50">std::s..</text>
    </g>
    <g>
      <title>s4::exec_fileprocessor_thread (3 samples, 5.17%)</title>
      <rect x="0.0000%" y="261" width="5.1724%" height="15" fill="rgb(245,49,27)" fg:x="0" fg:w="3"/>
      <text x="0.2500%" y="271.50">s4::ex..</text>
    </g>
    <g>
      <title>crossbeam_channel::channel::Sender&lt;T&gt;::send (1 samples, 1.72%)</title>
      <rect x="3.4483%" y="245" width="1.7241%" height="15" fill="rgb(211,156,23)" fg:x="2" fg:w="1"/>
      <text x="3.6983%" y="255.50"/>
    </g>
    <g>
      <title>wtmp (4 samples, 6.90%)</title>
      <rect x="0.0000%" y="357" width="6.8966%" height="15" fill="rgb(248,152,39)" fg:x="0" fg:w="4"/>
      <text x="0.2500%" y="367.50">wtmp</text>
    </g>
    <g>
      <title>asm_exc_page_fault (1 samples, 1.72%)</title>
      <rect x="5.1724%" y="341" width="1.7241%" height="15" fill="rgb(208,26,13)" fg:x="3" fg:w="1"/>
      <text x="5.4224%" y="351.50"/>
    </g>
    <g>
      <title>exc_page_fault (1 samples, 1.72%)</title>
      <rect x="5.1724%" y="325" width="1.7241%" height="15" fill="rgb(216,51,29)" fg:x="3" fg:w="1"/>
      <text x="5.4224%" y="335.50"/>
    </g>
    <g>
      <title>do_user_addr_fault (1 samples, 1.72%)</title>
      <rect x="5.1724%" y="309" width="1.7241%" height="15" fill="rgb(253,37,52)" fg:x="3" fg:w="1"/>
      <text x="5.4224%" y="319.50"/>
    </g>
    <g>
      <title>handle_mm_fault (1 samples, 1.72%)</title>
      <rect x="5.1724%" y="293" width="1.7241%" height="15" fill="rgb(247,31,49)" fg:x="3" fg:w="1"/>
      <text x="5.4224%" y="303.50"/>
    </g>
    <g>
      <title>__handle_mm_fault (1 samples, 1.72%)</title>
      <rect x="5.1724%" y="277" width="1.7241%" height="15" fill="rgb(254,123,40)" fg:x="3" fg:w="1"/>
      <text x="5.4224%" y="287.50"/>
    </g>
    <g>
      <title>__alloc_pages (1 samples, 1.72%)</title>
      <rect x="5.1724%" y="261" width="1.7241%" height="15" fill="rgb(244,104,38)" fg:x="3" fg:w="1"/>
      <text x="5.4224%" y="271.50"/>
    </g>
    <g>
      <title>get_page_from_freelist (1 samples, 1.72%)</title>
      <rect x="5.1724%" y="245" width="1.7241%" height="15" fill="rgb(246,35,53)" fg:x="3" fg:w="1"/>
      <text x="5.4224%" y="255.50"/>
    </g>
    <g>
      <title>kernel_init_free_pages.part.0 (1 samples, 1.72%)</title>
      <rect x="5.1724%" y="229" width="1.7241%" height="15" fill="rgb(224,1,41)" fg:x="3" fg:w="1"/>
      <text x="5.4224%" y="239.50"/>
    </g>
    <g>
      <title>clear_page_erms (1 samples, 1.72%)</title>
      <rect x="5.1724%" y="213" width="1.7241%" height="15" fill="rgb(253,135,51)" fg:x="3" fg:w="1"/>
      <text x="5.4224%" y="223.50"/>
    </g>
    <g>
      <title>ret_from_fork (22 samples, 37.93%)</title>
      <rect x="6.8966%" y="341" width="37.9310%" height="15" fill="rgb(249,149,44)" fg:x="4" fg:w="22"/>
      <text x="7.1466%" y="351.50">ret_from_fork</text>
    </g>
    <g>
      <title>schedule_tail (22 samples, 37.93%)</title>
      <rect x="6.8966%" y="325" width="37.9310%" height="15" fill="rgb(215,144,34)" fg:x="4" fg:w="22"/>
      <text x="7.1466%" y="335.50">schedule_tail</text>
    </g>
    <g>
      <title>finish_task_switch.isra.0 (22 samples, 37.93%)</title>
      <rect x="6.8966%" y="309" width="37.9310%" height="15" fill="rgb(249,184,27)" fg:x="4" fg:w="22"/>
      <text x="7.1466%" y="319.50">finish_task_switch.isra.0</text>
    </g>
    <g>
      <title>__perf_event_task_sched_in (22 samples, 37.93%)</title>
      <rect x="6.8966%" y="293" width="37.9310%" height="15" fill="rgb(253,170,3)" fg:x="4" fg:w="22"/>
      <text x="7.1466%" y="303.50">__perf_event_task_sched_in</text>
    </g>
    <g>
      <title>__raw_callee_save___pv_queued_spin_unlock (22 samples, 37.93%)</title>
      <rect x="6.8966%" y="277" width="37.9310%" height="15" fill="rgb(236,100,45)" fg:x="4" fg:w="22"/>
      <text x="7.1466%" y="287.50">__raw_callee_save___pv_queued_spin_unlock</text>
    </g>
    <g>
      <title>mmput (1 samples, 1.72%)</title>
      <rect x="44.8276%" y="261" width="1.7241%" height="15" fill="rgb(228,125,30)" fg:x="26" fg:w="1"/>
      <text x="45.0776%" y="271.50"/>
    </g>
    <g>
      <title>exit_mmap (1 samples, 1.72%)</title>
      <rect x="44.8276%" y="245" width="1.7241%" height="15" fill="rgb(221,135,18)" fg:x="26" fg:w="1"/>
      <text x="45.0776%" y="255.50"/>
    </g>
    <g>
      <title>tlb_finish_mmu (1 samples, 1.72%)</title>
      <rect x="44.8276%" y="229" width="1.7241%" height="15" fill="rgb(238,90,34)" fg:x="26" fg:w="1"/>
      <text x="45.0776%" y="239.50"/>
    </g>
    <g>
      <title>free_pages_and_swap_cache (1 samples, 1.72%)</title>
      <rect x="44.8276%" y="213" width="1.7241%" height="15" fill="rgb(244,4,31)" fg:x="26" fg:w="1"/>
      <text x="45.0776%" y="223.50"/>
    </g>
    <g>
      <title>free_swap_cache (1 samples, 1.72%)</title>
      <rect x="44.8276%" y="197" width="1.7241%" height="15" fill="rgb(207,77,13)" fg:x="26" fg:w="1"/>
      <text x="45.0776%" y="207.50"/>
    </g>
    <g>
      <title>__x64_sys_exit_group (2 samples, 3.45%)</title>
      <rect x="44.8276%" y="309" width="3.4483%" height="15" fill="rgb(219,187,49)" fg:x="26" fg:w="2"/>
      <text x="45.0776%" y="319.50">__x..</text>
    </g>
    <g>
      <title>do_group_exit (2 samples, 3.45%)</title>
      <rect x="44.8276%" y="293" width="3.4483%" height="15" fill="rgb(241,5,8)" fg:x="26" fg:w="2"/>
      <text x="45.0776%" y="303.50">do_..</text>
    </g>
    <g>
      <title>do_exit (2 samples, 3.45%)</title>
      <rect x="44.8276%" y="277" width="3.4483%" height="15" fill="rgb(238,144,25)" fg:x="26" fg:w="2"/>
      <text x="45.0776%" y="287.50">do_..</text>
    </g>
    <g>
      <title>mm_update_next_owner (1 samples, 1.72%)</title>
      <rect x="46.5517%" y="261" width="1.7241%" height="15" fill="rgb(214,110,20)" fg:x="27" fg:w="1"/>
      <text x="46.8017%" y="271.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (3 samples, 5.17%)</title>
      <rect x="44.8276%" y="341" width="5.1724%" height="15" fill="rgb(205,226,15)" fg:x="26" fg:w="3"/>
      <text x="45.0776%" y="351.50">entry_..</text>
    </g>
    <g>
      <title>do_syscall_64 (3 samples, 5.17%)</title>
      <rect x="44.8276%" y="325" width="5.1724%" height="15" fill="rgb(220,74,14)" fg:x="26" fg:w="3"/>
      <text x="45.0776%" y="335.50">do_sys..</text>
    </g>
    <g>
      <title>__x64_sys_execve (1 samples, 1.72%)</title>
      <rect x="48.2759%" y="309" width="1.7241%" height="15" fill="rgb(237,59,15)" fg:x="28" fg:w="1"/>
      <text x="48.5259%" y="319.50"/>
    </g>
    <g>
      <title>do_execveat_common.isra.0 (1 samples, 1.72%)</title>
      <rect x="48.2759%" y="293" width="1.7241%" height="15" fill="rgb(248,134,53)" fg:x="28" fg:w="1"/>
      <text x="48.5259%" y="303.50"/>
    </g>
    <g>
      <title>bprm_execve (1 samples, 1.72%)</title>
      <rect x="48.2759%" y="277" width="1.7241%" height="15" fill="rgb(232,147,16)" fg:x="28" fg:w="1"/>
      <text x="48.5259%" y="287.50"/>
    </g>
    <g>
      <title>load_elf_binary (1 samples, 1.72%)</title>
      <rect x="48.2759%" y="261" width="1.7241%" height="15" fill="rgb(246,102,21)" fg:x="28" fg:w="1"/>
      <text x="48.5259%" y="271.50"/>
    </g>
    <g>
      <title>vm_mmap_pgoff (1 samples, 1.72%)</title>
      <rect x="48.2759%" y="245" width="1.7241%" height="15" fill="rgb(226,196,1)" fg:x="28" fg:w="1"/>
      <text x="48.5259%" y="255.50"/>
    </g>
    <g>
      <title>do_mmap (1 samples, 1.72%)</title>
      <rect x="48.2759%" y="229" width="1.7241%" height="15" fill="rgb(228,25,27)" fg:x="28" fg:w="1"/>
      <text x="48.5259%" y="239.50"/>
    </g>
    <g>
      <title>mmap_region (1 samples, 1.72%)</title>
      <rect x="48.2759%" y="213" width="1.7241%" height="15" fill="rgb(233,57,38)" fg:x="28" fg:w="1"/>
      <text x="48.5259%" y="223.50"/>
    </g>
    <g>
      <title>perf_event_mmap (1 samples, 1.72%)</title>
      <rect x="48.2759%" y="197" width="1.7241%" height="15" fill="rgb(252,32,1)" fg:x="28" fg:w="1"/>
      <text x="48.5259%" y="207.50"/>
    </g>
    <g>
      <title>perf_iterate_sb (1 samples, 1.72%)</title>
      <rect x="48.2759%" y="181" width="1.7241%" height="15" fill="rgb(241,203,1)" fg:x="28" fg:w="1"/>
      <text x="48.5259%" y="191.50"/>
    </g>
    <g>
      <title>perf_iterate_ctx (1 samples, 1.72%)</title>
      <rect x="48.2759%" y="165" width="1.7241%" height="15" fill="rgb(227,133,21)" fg:x="28" fg:w="1"/>
      <text x="48.5259%" y="175.50"/>
    </g>
    <g>
      <title>perf_event_mmap_output (1 samples, 1.72%)</title>
      <rect x="48.2759%" y="149" width="1.7241%" height="15" fill="rgb(225,127,18)" fg:x="28" fg:w="1"/>
      <text x="48.5259%" y="159.50"/>
    </g>
    <g>
      <title>perf_output_copy (1 samples, 1.72%)</title>
      <rect x="48.2759%" y="133" width="1.7241%" height="15" fill="rgb(250,195,20)" fg:x="28" fg:w="1"/>
      <text x="48.5259%" y="143.50"/>
    </g>
    <g>
      <title>security_mmap_addr (1 samples, 1.72%)</title>
      <rect x="50.0000%" y="181" width="1.7241%" height="15" fill="rgb(209,129,54)" fg:x="29" fg:w="1"/>
      <text x="50.2500%" y="191.50"/>
    </g>
    <g>
      <title>cap_mmap_addr (1 samples, 1.72%)</title>
      <rect x="50.0000%" y="165" width="1.7241%" height="15" fill="rgb(248,49,37)" fg:x="29" fg:w="1"/>
      <text x="50.2500%" y="175.50"/>
    </g>
    <g>
      <title>clone3 (2 samples, 3.45%)</title>
      <rect x="50.0000%" y="341" width="3.4483%" height="15" fill="rgb(208,138,34)" fg:x="29" fg:w="2"/>
      <text x="50.2500%" y="351.50">clo..</text>
    </g>
    <g>
      <title>start_thread (2 samples, 3.45%)</title>
      <rect x="50.0000%" y="325" width="3.4483%" height="15" fill="rgb(209,148,13)" fg:x="29" fg:w="2"/>
      <text x="50.2500%" y="335.50">sta..</text>
    </g>
    <g>
      <title>std::sys::unix::thread::Thread::new::thread_start (2 samples, 3.45%)</title>
      <rect x="50.0000%" y="309" width="3.4483%" height="15" fill="rgb(215,36,0)" fg:x="29" fg:w="2"/>
      <text x="50.2500%" y="319.50">std..</text>
    </g>
    <g>
      <title>std::sys::unix::stack_overflow::imp::make_handler (2 samples, 3.45%)</title>
      <rect x="50.0000%" y="293" width="3.4483%" height="15" fill="rgb(237,166,40)" fg:x="29" fg:w="2"/>
      <text x="50.2500%" y="303.50">std..</text>
    </g>
    <g>
      <title>__mmap (2 samples, 3.45%)</title>
      <rect x="50.0000%" y="277" width="3.4483%" height="15" fill="rgb(252,174,12)" fg:x="29" fg:w="2"/>
      <text x="50.2500%" y="287.50">__m..</text>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (2 samples, 3.45%)</title>
      <rect x="50.0000%" y="261" width="3.4483%" height="15" fill="rgb(205,226,15)" fg:x="29" fg:w="2"/>
      <text x="50.2500%" y="271.50">ent..</text>
    </g>
    <g>
      <title>do_syscall_64 (2 samples, 3.45%)</title>
      <rect x="50.0000%" y="245" width="3.4483%" height="15" fill="rgb(220,74,14)" fg:x="29" fg:w="2"/>
      <text x="50.2500%" y="255.50">do_..</text>
    </g>
    <g>
      <title>vm_mmap_pgoff (2 samples, 3.45%)</title>
      <rect x="50.0000%" y="229" width="3.4483%" height="15" fill="rgb(226,196,1)" fg:x="29" fg:w="2"/>
      <text x="50.2500%" y="239.50">vm_..</text>
    </g>
    <g>
      <title>do_mmap (2 samples, 3.45%)</title>
      <rect x="50.0000%" y="213" width="3.4483%" height="15" fill="rgb(228,25,27)" fg:x="29" fg:w="2"/>
      <text x="50.2500%" y="223.50">do_..</text>
    </g>
    <g>
      <title>get_unmapped_area (2 samples, 3.45%)</title>
      <rect x="50.0000%" y="197" width="3.4483%" height="15" fill="rgb(243,176,38)" fg:x="29" fg:w="2"/>
      <text x="50.2500%" y="207.50">get..</text>
    </g>
    <g>
      <title>arch_get_unmapped_area_topdown (1 samples, 1.72%)</title>
      <rect x="51.7241%" y="181" width="1.7241%" height="15" fill="rgb(213,22,5)" fg:x="30" fg:w="1"/>
      <text x="51.9741%" y="191.50"/>
    </g>
    <g>
      <title>vm_unmapped_area (1 samples, 1.72%)</title>
      <rect x="51.7241%" y="165" width="1.7241%" height="15" fill="rgb(208,22,54)" fg:x="30" fg:w="1"/>
      <text x="51.9741%" y="175.50"/>
    </g>
    <g>
      <title>asm_exc_page_fault (1 samples, 1.72%)</title>
      <rect x="53.4483%" y="341" width="1.7241%" height="15" fill="rgb(208,26,13)" fg:x="31" fg:w="1"/>
      <text x="53.6983%" y="351.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (1 samples, 1.72%)</title>
      <rect x="55.1724%" y="325" width="1.7241%" height="15" fill="rgb(205,226,15)" fg:x="32" fg:w="1"/>
      <text x="55.4224%" y="335.50"/>
    </g>
    <g>
      <title>do_syscall_64 (1 samples, 1.72%)</title>
      <rect x="55.1724%" y="309" width="1.7241%" height="15" fill="rgb(220,74,14)" fg:x="32" fg:w="1"/>
      <text x="55.4224%" y="319.50"/>
    </g>
    <g>
      <title>syscall_exit_to_user_mode (1 samples, 1.72%)</title>
      <rect x="55.1724%" y="293" width="1.7241%" height="15" fill="rgb(215,101,28)" fg:x="32" fg:w="1"/>
      <text x="55.4224%" y="303.50"/>
    </g>
    <g>
      <title>exit_to_user_mode_prepare (1 samples, 1.72%)</title>
      <rect x="55.1724%" y="277" width="1.7241%" height="15" fill="rgb(240,77,26)" fg:x="32" fg:w="1"/>
      <text x="55.4224%" y="287.50"/>
    </g>
    <g>
      <title>task_work_run (1 samples, 1.72%)</title>
      <rect x="55.1724%" y="261" width="1.7241%" height="15" fill="rgb(206,18,50)" fg:x="32" fg:w="1"/>
      <text x="55.4224%" y="271.50"/>
    </g>
    <g>
      <title>__fput (1 samples, 1.72%)</title>
      <rect x="55.1724%" y="245" width="1.7241%" height="15" fill="rgb(210,120,45)" fg:x="32" fg:w="1"/>
      <text x="55.4224%" y="255.50"/>
    </g>
    <g>
      <title>pipe_release (1 samples, 1.72%)</title>
      <rect x="55.1724%" y="229" width="1.7241%" height="15" fill="rgb(226,198,37)" fg:x="32" fg:w="1"/>
      <text x="55.4224%" y="239.50"/>
    </g>
    <g>
      <title>free_pipe_info (1 samples, 1.72%)</title>
      <rect x="55.1724%" y="213" width="1.7241%" height="15" fill="rgb(214,31,26)" fg:x="32" fg:w="1"/>
      <text x="55.4224%" y="223.50"/>
    </g>
    <g>
      <title>kfree (1 samples, 1.72%)</title>
      <rect x="55.1724%" y="197" width="1.7241%" height="15" fill="rgb(222,6,37)" fg:x="32" fg:w="1"/>
      <text x="55.4224%" y="207.50"/>
    </g>
    <g>
      <title>memcg_slab_free_hook (1 samples, 1.72%)</title>
      <rect x="55.1724%" y="181" width="1.7241%" height="15" fill="rgb(245,180,28)" fg:x="32" fg:w="1"/>
      <text x="55.4224%" y="191.50"/>
    </g>
    <g>
      <title>wp_page_copy (1 samples, 1.72%)</title>
      <rect x="56.8966%" y="181" width="1.7241%" height="15" fill="rgb(231,223,9)" fg:x="33" fg:w="1"/>
      <text x="57.1466%" y="191.50"/>
    </g>
    <g>
      <title>copy_mc_enhanced_fast_string (1 samples, 1.72%)</title>
      <rect x="56.8966%" y="165" width="1.7241%" height="15" fill="rgb(252,193,17)" fg:x="33" fg:w="1"/>
      <text x="57.1466%" y="175.50"/>
    </g>
    <g>
      <title>asm_exc_page_fault (2 samples, 3.45%)</title>
      <rect x="56.8966%" y="261" width="3.4483%" height="15" fill="rgb(208,26,13)" fg:x="33" fg:w="2"/>
      <text x="57.1466%" y="271.50">asm..</text>
    </g>
    <g>
      <title>exc_page_fault (2 samples, 3.45%)</title>
      <rect x="56.8966%" y="245" width="3.4483%" height="15" fill="rgb(216,51,29)" fg:x="33" fg:w="2"/>
      <text x="57.1466%" y="255.50">exc..</text>
    </g>
    <g>
      <title>do_user_addr_fault (2 samples, 3.45%)</title>
      <rect x="56.8966%" y="229" width="3.4483%" height="15" fill="rgb(253,37,52)" fg:x="33" fg:w="2"/>
      <text x="57.1466%" y="239.50">do_..</text>
    </g>
    <g>
      <title>handle_mm_fault (2 samples, 3.45%)</title>
      <rect x="56.8966%" y="213" width="3.4483%" height="15" fill="rgb(247,31,49)" fg:x="33" fg:w="2"/>
      <text x="57.1466%" y="223.50">han..</text>
    </g>
    <g>
      <title>__handle_mm_fault (2 samples, 3.45%)</title>
      <rect x="56.8966%" y="197" width="3.4483%" height="15" fill="rgb(254,123,40)" fg:x="33" fg:w="2"/>
      <text x="57.1466%" y="207.50">__h..</text>
    </g>
    <g>
      <title>copy_page (1 samples, 1.72%)</title>
      <rect x="58.6207%" y="181" width="1.7241%" height="15" fill="rgb(213,151,43)" fg:x="34" fg:w="1"/>
      <text x="58.8707%" y="191.50"/>
    </g>
    <g>
      <title>_dl_relocate_object (3 samples, 5.17%)</title>
      <rect x="56.8966%" y="277" width="5.1724%" height="15" fill="rgb(244,75,35)" fg:x="33" fg:w="3"/>
      <text x="57.1466%" y="287.50">_dl_re..</text>
    </g>
    <g>
      <title>__memrchr_ifunc (1 samples, 1.72%)</title>
      <rect x="60.3448%" y="261" width="1.7241%" height="15" fill="rgb(226,82,31)" fg:x="35" fg:w="1"/>
      <text x="60.5948%" y="271.50"/>
    </g>
    <g>
      <title>asm_exc_page_fault (1 samples, 1.72%)</title>
      <rect x="60.3448%" y="245" width="1.7241%" height="15" fill="rgb(208,26,13)" fg:x="35" fg:w="1"/>
      <text x="60.5948%" y="255.50"/>
    </g>
    <g>
      <title>exc_page_fault (1 samples, 1.72%)</title>
      <rect x="60.3448%" y="229" width="1.7241%" height="15" fill="rgb(216,51,29)" fg:x="35" fg:w="1"/>
      <text x="60.5948%" y="239.50"/>
    </g>
    <g>
      <title>do_user_addr_fault (1 samples, 1.72%)</title>
      <rect x="60.3448%" y="213" width="1.7241%" height="15" fill="rgb(253,37,52)" fg:x="35" fg:w="1"/>
      <text x="60.5948%" y="223.50"/>
    </g>
    <g>
      <title>handle_mm_fault (1 samples, 1.72%)</title>
      <rect x="60.3448%" y="197" width="1.7241%" height="15" fill="rgb(247,31,49)" fg:x="35" fg:w="1"/>
      <text x="60.5948%" y="207.50"/>
    </g>
    <g>
      <title>__handle_mm_fault (1 samples, 1.72%)</title>
      <rect x="60.3448%" y="181" width="1.7241%" height="15" fill="rgb(254,123,40)" fg:x="35" fg:w="1"/>
      <text x="60.5948%" y="191.50"/>
    </g>
    <g>
      <title>_dl_start (4 samples, 6.90%)</title>
      <rect x="56.8966%" y="325" width="6.8966%" height="15" fill="rgb(214,13,30)" fg:x="33" fg:w="4"/>
      <text x="57.1466%" y="335.50">_dl_start</text>
    </g>
    <g>
      <title>_dl_sysdep_start (4 samples, 6.90%)</title>
      <rect x="56.8966%" y="309" width="6.8966%" height="15" fill="rgb(238,104,49)" fg:x="33" fg:w="4"/>
      <text x="57.1466%" y="319.50">_dl_sysde..</text>
    </g>
    <g>
      <title>dl_main (4 samples, 6.90%)</title>
      <rect x="56.8966%" y="293" width="6.8966%" height="15" fill="rgb(253,59,10)" fg:x="33" fg:w="4"/>
      <text x="57.1466%" y="303.50">dl_main</text>
    </g>
    <g>
      <title>_dl_map_object_deps (1 samples, 1.72%)</title>
      <rect x="62.0690%" y="277" width="1.7241%" height="15" fill="rgb(208,68,2)" fg:x="36" fg:w="1"/>
      <text x="62.3190%" y="287.50"/>
    </g>
    <g>
      <title>_dl_catch_exception (1 samples, 1.72%)</title>
      <rect x="62.0690%" y="261" width="1.7241%" height="15" fill="rgb(238,71,42)" fg:x="36" fg:w="1"/>
      <text x="62.3190%" y="271.50"/>
    </g>
    <g>
      <title>openaux (1 samples, 1.72%)</title>
      <rect x="62.0690%" y="245" width="1.7241%" height="15" fill="rgb(215,55,1)" fg:x="36" fg:w="1"/>
      <text x="62.3190%" y="255.50"/>
    </g>
    <g>
      <title>_dl_map_object (1 samples, 1.72%)</title>
      <rect x="62.0690%" y="229" width="1.7241%" height="15" fill="rgb(247,77,9)" fg:x="36" fg:w="1"/>
      <text x="62.3190%" y="239.50"/>
    </g>
    <g>
      <title>_dl_map_object_from_fd (1 samples, 1.72%)</title>
      <rect x="62.0690%" y="213" width="1.7241%" height="15" fill="rgb(253,121,32)" fg:x="36" fg:w="1"/>
      <text x="62.3190%" y="223.50"/>
    </g>
    <g>
      <title>memset (1 samples, 1.72%)</title>
      <rect x="62.0690%" y="197" width="1.7241%" height="15" fill="rgb(251,9,1)" fg:x="36" fg:w="1"/>
      <text x="62.3190%" y="207.50"/>
    </g>
    <g>
      <title>asm_exc_page_fault (1 samples, 1.72%)</title>
      <rect x="62.0690%" y="181" width="1.7241%" height="15" fill="rgb(208,26,13)" fg:x="36" fg:w="1"/>
      <text x="62.3190%" y="191.50"/>
    </g>
    <g>
      <title>exc_page_fault (1 samples, 1.72%)</title>
      <rect x="62.0690%" y="165" width="1.7241%" height="15" fill="rgb(216,51,29)" fg:x="36" fg:w="1"/>
      <text x="62.3190%" y="175.50"/>
    </g>
    <g>
      <title>do_user_addr_fault (1 samples, 1.72%)</title>
      <rect x="62.0690%" y="149" width="1.7241%" height="15" fill="rgb(253,37,52)" fg:x="36" fg:w="1"/>
      <text x="62.3190%" y="159.50"/>
    </g>
    <g>
      <title>handle_mm_fault (1 samples, 1.72%)</title>
      <rect x="62.0690%" y="133" width="1.7241%" height="15" fill="rgb(247,31,49)" fg:x="36" fg:w="1"/>
      <text x="62.3190%" y="143.50"/>
    </g>
    <g>
      <title>__handle_mm_fault (1 samples, 1.72%)</title>
      <rect x="62.0690%" y="117" width="1.7241%" height="15" fill="rgb(254,123,40)" fg:x="36" fg:w="1"/>
      <text x="62.3190%" y="127.50"/>
    </g>
    <g>
      <title>__do_fault (1 samples, 1.72%)</title>
      <rect x="62.0690%" y="101" width="1.7241%" height="15" fill="rgb(232,18,38)" fg:x="36" fg:w="1"/>
      <text x="62.3190%" y="111.50"/>
    </g>
    <g>
      <title>filemap_fault (1 samples, 1.72%)</title>
      <rect x="62.0690%" y="85" width="1.7241%" height="15" fill="rgb(254,137,16)" fg:x="36" fg:w="1"/>
      <text x="62.3190%" y="95.50"/>
    </g>
    <g>
      <title>pagecache_get_page (1 samples, 1.72%)</title>
      <rect x="62.0690%" y="69" width="1.7241%" height="15" fill="rgb(254,146,25)" fg:x="36" fg:w="1"/>
      <text x="62.3190%" y="79.50"/>
    </g>
    <g>
      <title>srso_alias_return_thunk (1 samples, 1.72%)</title>
      <rect x="62.0690%" y="53" width="1.7241%" height="15" fill="rgb(245,80,51)" fg:x="36" fg:w="1"/>
      <text x="62.3190%" y="63.50"/>
    </g>
    <g>
      <title>srso_alias_safe_ret (1 samples, 1.72%)</title>
      <rect x="62.0690%" y="37" width="1.7241%" height="15" fill="rgb(248,122,31)" fg:x="36" fg:w="1"/>
      <text x="62.3190%" y="47.50"/>
    </g>
    <g>
      <title>s4lib::readers::filepreprocessor::process_path (1 samples, 1.72%)</title>
      <rect x="63.7931%" y="213" width="1.7241%" height="15" fill="rgb(239,169,47)" fg:x="37" fg:w="1"/>
      <text x="64.0431%" y="223.50"/>
    </g>
    <g>
      <title>std::path::Path::is_file (1 samples, 1.72%)</title>
      <rect x="63.7931%" y="197" width="1.7241%" height="15" fill="rgb(212,29,40)" fg:x="37" fg:w="1"/>
      <text x="64.0431%" y="207.50"/>
    </g>
    <g>
      <title>std::sys::unix::fs::stat (1 samples, 1.72%)</title>
      <rect x="63.7931%" y="181" width="1.7241%" height="15" fill="rgb(210,71,41)" fg:x="37" fg:w="1"/>
      <text x="64.0431%" y="191.50"/>
    </g>
    <g>
      <title>core::ffi::c_str::CStr::from_bytes_with_nul (1 samples, 1.72%)</title>
      <rect x="63.7931%" y="165" width="1.7241%" height="15" fill="rgb(225,95,28)" fg:x="37" fg:w="1"/>
      <text x="64.0431%" y="175.50"/>
    </g>
    <g>
      <title>core::slice::memchr::memchr_aligned (1 samples, 1.72%)</title>
      <rect x="63.7931%" y="149" width="1.7241%" height="15" fill="rgb(243,148,11)" fg:x="37" fg:w="1"/>
      <text x="64.0431%" y="159.50"/>
    </g>
    <g>
      <title>s4lib::printer::printers::PrinterLogMessage::print_fixedstruct_color (1 samples, 1.72%)</title>
      <rect x="65.5172%" y="197" width="1.7241%" height="15" fill="rgb(214,112,46)" fg:x="38" fg:w="1"/>
      <text x="65.7672%" y="207.50"/>
    </g>
    <g>
      <title>asm_exc_page_fault (1 samples, 1.72%)</title>
      <rect x="65.5172%" y="181" width="1.7241%" height="15" fill="rgb(208,26,13)" fg:x="38" fg:w="1"/>
      <text x="65.7672%" y="191.50"/>
    </g>
    <g>
      <title>exc_page_fault (1 samples, 1.72%)</title>
      <rect x="65.5172%" y="165" width="1.7241%" height="15" fill="rgb(216,51,29)" fg:x="38" fg:w="1"/>
      <text x="65.7672%" y="175.50"/>
    </g>
    <g>
      <title>do_user_addr_fault (1 samples, 1.72%)</title>
      <rect x="65.5172%" y="149" width="1.7241%" height="15" fill="rgb(253,37,52)" fg:x="38" fg:w="1"/>
      <text x="65.7672%" y="159.50"/>
    </g>
    <g>
      <title>handle_mm_fault (1 samples, 1.72%)</title>
      <rect x="65.5172%" y="133" width="1.7241%" height="15" fill="rgb(247,31,49)" fg:x="38" fg:w="1"/>
      <text x="65.7672%" y="143.50"/>
    </g>
    <g>
      <title>__handle_mm_fault (1 samples, 1.72%)</title>
      <rect x="65.5172%" y="117" width="1.7241%" height="15" fill="rgb(254,123,40)" fg:x="38" fg:w="1"/>
      <text x="65.7672%" y="127.50"/>
    </g>
    <g>
      <title>filemap_map_pages (1 samples, 1.72%)</title>
      <rect x="65.5172%" y="101" width="1.7241%" height="15" fill="rgb(240,96,12)" fg:x="38" fg:w="1"/>
      <text x="65.7672%" y="111.50"/>
    </g>
    <g>
      <title>next_uptodate_page (1 samples, 1.72%)</title>
      <rect x="65.5172%" y="85" width="1.7241%" height="15" fill="rgb(231,221,15)" fg:x="38" fg:w="1"/>
      <text x="65.7672%" y="95.50"/>
    </g>
    <g>
      <title>s4::processing_loop (2 samples, 3.45%)</title>
      <rect x="65.5172%" y="213" width="3.4483%" height="15" fill="rgb(233,182,14)" fg:x="38" fg:w="2"/>
      <text x="65.7672%" y="223.50">s4:..</text>
    </g>
    <g>
      <title>hashbrown::set::HashSet&lt;T,S,A&gt;::remove (1 samples, 1.72%)</title>
      <rect x="67.2414%" y="197" width="1.7241%" height="15" fill="rgb(218,114,38)" fg:x="39" fg:w="1"/>
      <text x="67.4914%" y="207.50"/>
    </g>
    <g>
      <title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (1 samples, 1.72%)</title>
      <rect x="67.2414%" y="181" width="1.7241%" height="15" fill="rgb(215,93,43)" fg:x="39" fg:w="1"/>
      <text x="67.4914%" y="191.50"/>
    </g>
    <g>
      <title>std::rt::lang_start::_{{closure}} (4 samples, 6.90%)</title>
      <rect x="63.7931%" y="261" width="6.8966%" height="15" fill="rgb(225,45,7)" fg:x="37" fg:w="4"/>
      <text x="64.0431%" y="271.50">std::rt::..</text>
    </g>
    <g>
      <title>std::sys_common::backtrace::__rust_begin_short_backtrace (4 samples, 6.90%)</title>
      <rect x="63.7931%" y="245" width="6.8966%" height="15" fill="rgb(210,88,34)" fg:x="37" fg:w="4"/>
      <text x="64.0431%" y="255.50">std::sys_..</text>
    </g>
    <g>
      <title>s4::main (4 samples, 6.90%)</title>
      <rect x="63.7931%" y="229" width="6.8966%" height="15" fill="rgb(221,151,31)" fg:x="37" fg:w="4"/>
      <text x="64.0431%" y="239.50">s4::main</text>
    </g>
    <g>
      <title>&lt;s4::CLI_Args as clap_builder::derive::Args&gt;::augment_args (1 samples, 1.72%)</title>
      <rect x="68.9655%" y="213" width="1.7241%" height="15" fill="rgb(230,145,47)" fg:x="40" fg:w="1"/>
      <text x="69.2155%" y="223.50"/>
    </g>
    <g>
      <title>once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 1.72%)</title>
      <rect x="68.9655%" y="197" width="1.7241%" height="15" fill="rgb(216,218,52)" fg:x="40" fg:w="1"/>
      <text x="69.2155%" y="207.50"/>
    </g>
    <g>
      <title>once_cell::imp::initialize_or_wait (1 samples, 1.72%)</title>
      <rect x="68.9655%" y="181" width="1.7241%" height="15" fill="rgb(247,128,5)" fg:x="40" fg:w="1"/>
      <text x="69.2155%" y="191.50"/>
    </g>
    <g>
      <title>asm_exc_page_fault (1 samples, 1.72%)</title>
      <rect x="68.9655%" y="165" width="1.7241%" height="15" fill="rgb(208,26,13)" fg:x="40" fg:w="1"/>
      <text x="69.2155%" y="175.50"/>
    </g>
    <g>
      <title>exc_page_fault (1 samples, 1.72%)</title>
      <rect x="68.9655%" y="149" width="1.7241%" height="15" fill="rgb(216,51,29)" fg:x="40" fg:w="1"/>
      <text x="69.2155%" y="159.50"/>
    </g>
    <g>
      <title>do_user_addr_fault (1 samples, 1.72%)</title>
      <rect x="68.9655%" y="133" width="1.7241%" height="15" fill="rgb(253,37,52)" fg:x="40" fg:w="1"/>
      <text x="69.2155%" y="143.50"/>
    </g>
    <g>
      <title>handle_mm_fault (1 samples, 1.72%)</title>
      <rect x="68.9655%" y="117" width="1.7241%" height="15" fill="rgb(247,31,49)" fg:x="40" fg:w="1"/>
      <text x="69.2155%" y="127.50"/>
    </g>
    <g>
      <title>__handle_mm_fault (1 samples, 1.72%)</title>
      <rect x="68.9655%" y="101" width="1.7241%" height="15" fill="rgb(254,123,40)" fg:x="40" fg:w="1"/>
      <text x="69.2155%" y="111.50"/>
    </g>
    <g>
      <title>filemap_map_pages (1 samples, 1.72%)</title>
      <rect x="68.9655%" y="85" width="1.7241%" height="15" fill="rgb(240,96,12)" fg:x="40" fg:w="1"/>
      <text x="69.2155%" y="95.50"/>
    </g>
    <g>
      <title>unlock_page (1 samples, 1.72%)</title>
      <rect x="68.9655%" y="69" width="1.7241%" height="15" fill="rgb(250,162,14)" fg:x="40" fg:w="1"/>
      <text x="69.2155%" y="79.50"/>
    </g>
    <g>
      <title>s4 (38 samples, 65.52%)</title>
      <rect x="6.8966%" y="357" width="65.5172%" height="15" fill="rgb(230,7,27)" fg:x="4" fg:w="38"/>
      <text x="7.1466%" y="367.50">s4</text>
    </g>
    <g>
      <title>_start (10 samples, 17.24%)</title>
      <rect x="55.1724%" y="341" width="17.2414%" height="15" fill="rgb(210,219,27)" fg:x="32" fg:w="10"/>
      <text x="55.4224%" y="351.50">_start</text>
    </g>
    <g>
      <title>__libc_start_main@@GLIBC_2.34 (5 samples, 8.62%)</title>
      <rect x="63.7931%" y="325" width="8.6207%" height="15" fill="rgb(217,176,50)" fg:x="37" fg:w="5"/>
      <text x="64.0431%" y="335.50">__libc_start..</text>
    </g>
    <g>
      <title>__libc_start_call_main (5 samples, 8.62%)</title>
      <rect x="63.7931%" y="309" width="8.6207%" height="15" fill="rgb(249,173,1)" fg:x="37" fg:w="5"/>
      <text x="64.0431%" y="319.50">__libc_start..</text>
    </g>
    <g>
      <title>main (5 samples, 8.62%)</title>
      <rect x="63.7931%" y="293" width="8.6207%" height="15" fill="rgb(238,28,47)" fg:x="37" fg:w="5"/>
      <text x="64.0431%" y="303.50">main</text>
    </g>
    <g>
      <title>std::rt::lang_start_internal (5 samples, 8.62%)</title>
      <rect x="63.7931%" y="277" width="8.6207%" height="15" fill="rgb(240,177,54)" fg:x="37" fg:w="5"/>
      <text x="64.0431%" y="287.50">std::rt::lan..</text>
    </g>
    <g>
      <title>asm_exc_page_fault (1 samples, 1.72%)</title>
      <rect x="70.6897%" y="261" width="1.7241%" height="15" fill="rgb(208,26,13)" fg:x="41" fg:w="1"/>
      <text x="70.9397%" y="271.50"/>
    </g>
    <g>
      <title>exc_page_fault (1 samples, 1.72%)</title>
      <rect x="70.6897%" y="245" width="1.7241%" height="15" fill="rgb(216,51,29)" fg:x="41" fg:w="1"/>
      <text x="70.9397%" y="255.50"/>
    </g>
    <g>
      <title>do_user_addr_fault (1 samples, 1.72%)</title>
      <rect x="70.6897%" y="229" width="1.7241%" height="15" fill="rgb(253,37,52)" fg:x="41" fg:w="1"/>
      <text x="70.9397%" y="239.50"/>
    </g>
    <g>
      <title>handle_mm_fault (1 samples, 1.72%)</title>
      <rect x="70.6897%" y="213" width="1.7241%" height="15" fill="rgb(247,31,49)" fg:x="41" fg:w="1"/>
      <text x="70.9397%" y="223.50"/>
    </g>
    <g>
      <title>__handle_mm_fault (1 samples, 1.72%)</title>
      <rect x="70.6897%" y="197" width="1.7241%" height="15" fill="rgb(254,123,40)" fg:x="41" fg:w="1"/>
      <text x="70.9397%" y="207.50"/>
    </g>
    <g>
      <title>filemap_map_pages (1 samples, 1.72%)</title>
      <rect x="70.6897%" y="181" width="1.7241%" height="15" fill="rgb(240,96,12)" fg:x="41" fg:w="1"/>
      <text x="70.9397%" y="191.50"/>
    </g>
    <g>
      <title>next_uptodate_page (1 samples, 1.72%)</title>
      <rect x="70.6897%" y="165" width="1.7241%" height="15" fill="rgb(231,221,15)" fg:x="41" fg:w="1"/>
      <text x="70.9397%" y="175.50"/>
    </g>
    <g>
      <title>strrchr (1 samples, 1.72%)</title>
      <rect x="72.4138%" y="229" width="1.7241%" height="15" fill="rgb(207,67,39)" fg:x="42" fg:w="1"/>
      <text x="72.6638%" y="239.50"/>
    </g>
    <g>
      <title>perf-exec (15 samples, 25.86%)</title>
      <rect x="72.4138%" y="357" width="25.8621%" height="15" fill="rgb(250,111,27)" fg:x="42" fg:w="15"/>
      <text x="72.6638%" y="367.50">perf-exec</text>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (15 samples, 25.86%)</title>
      <rect x="72.4138%" y="341" width="25.8621%" height="15" fill="rgb(205,226,15)" fg:x="42" fg:w="15"/>
      <text x="72.6638%" y="351.50">entry_SYSCALL_64_after_hwframe</text>
    </g>
    <g>
      <title>do_syscall_64 (15 samples, 25.86%)</title>
      <rect x="72.4138%" y="325" width="25.8621%" height="15" fill="rgb(220,74,14)" fg:x="42" fg:w="15"/>
      <text x="72.6638%" y="335.50">do_syscall_64</text>
    </g>
    <g>
      <title>__x64_sys_execve (15 samples, 25.86%)</title>
      <rect x="72.4138%" y="309" width="25.8621%" height="15" fill="rgb(237,59,15)" fg:x="42" fg:w="15"/>
      <text x="72.6638%" y="319.50">__x64_sys_execve</text>
    </g>
    <g>
      <title>do_execveat_common.isra.0 (15 samples, 25.86%)</title>
      <rect x="72.4138%" y="293" width="25.8621%" height="15" fill="rgb(248,134,53)" fg:x="42" fg:w="15"/>
      <text x="72.6638%" y="303.50">do_execveat_common.isra.0</text>
    </g>
    <g>
      <title>bprm_execve (15 samples, 25.86%)</title>
      <rect x="72.4138%" y="277" width="25.8621%" height="15" fill="rgb(232,147,16)" fg:x="42" fg:w="15"/>
      <text x="72.6638%" y="287.50">bprm_execve</text>
    </g>
    <g>
      <title>load_elf_binary (15 samples, 25.86%)</title>
      <rect x="72.4138%" y="261" width="25.8621%" height="15" fill="rgb(246,102,21)" fg:x="42" fg:w="15"/>
      <text x="72.6638%" y="271.50">load_elf_binary</text>
    </g>
    <g>
      <title>begin_new_exec (15 samples, 25.86%)</title>
      <rect x="72.4138%" y="245" width="25.8621%" height="15" fill="rgb(219,195,31)" fg:x="42" fg:w="15"/>
      <text x="72.6638%" y="255.50">begin_new_exec</text>
    </g>
    <g>
      <title>perf_event_exec (14 samples, 24.14%)</title>
      <rect x="74.1379%" y="229" width="24.1379%" height="15" fill="rgb(225,89,21)" fg:x="43" fg:w="14"/>
      <text x="74.3879%" y="239.50">perf_event_exec</text>
    </g>
    <g>
      <title>x86_pmu_enable_all (14 samples, 24.14%)</title>
      <rect x="74.1379%" y="213" width="24.1379%" height="15" fill="rgb(230,100,7)" fg:x="43" fg:w="14"/>
      <text x="74.3879%" y="223.50">x86_pmu_enable_all</text>
    </g>
    <g>
      <title>all (58 samples, 100%)</title>
      <rect x="0.0000%" y="373" width="100.0000%" height="15" fill="rgb(206,183,37)" fg:x="0" fg:w="58"/>
      <text x="0.2500%" y="383.50"/>
    </g>
    <g>
      <title>ctrl-c (1 samples, 1.72%)</title>
      <rect x="98.2759%" y="357" width="1.7241%" height="15" fill="rgb(217,0,15)" fg:x="57" fg:w="1"/>
      <text x="98.5259%" y="367.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (1 samples, 1.72%)</title>
      <rect x="98.2759%" y="341" width="1.7241%" height="15" fill="rgb(205,226,15)" fg:x="57" fg:w="1"/>
      <text x="98.5259%" y="351.50"/>
    </g>
    <g>
      <title>do_syscall_64 (1 samples, 1.72%)</title>
      <rect x="98.2759%" y="325" width="1.7241%" height="15" fill="rgb(220,74,14)" fg:x="57" fg:w="1"/>
      <text x="98.5259%" y="335.50"/>
    </g>
    <g>
      <title>syscall_exit_to_user_mode (1 samples, 1.72%)</title>
      <rect x="98.2759%" y="309" width="1.7241%" height="15" fill="rgb(215,101,28)" fg:x="57" fg:w="1"/>
      <text x="98.5259%" y="319.50"/>
    </g>
    <g>
      <title>exit_to_user_mode_prepare (1 samples, 1.72%)</title>
      <rect x="98.2759%" y="293" width="1.7241%" height="15" fill="rgb(240,77,26)" fg:x="57" fg:w="1"/>
      <text x="98.5259%" y="303.50"/>
    </g>
    <g>
      <title>arch_do_signal_or_restart (1 samples, 1.72%)</title>
      <rect x="98.2759%" y="277" width="1.7241%" height="15" fill="rgb(236,153,36)" fg:x="57" fg:w="1"/>
      <text x="98.5259%" y="287.50"/>
    </g>
    <g>
      <title>get_signal (1 samples, 1.72%)</title>
      <rect x="98.2759%" y="261" width="1.7241%" height="15" fill="rgb(219,222,19)" fg:x="57" fg:w="1"/>
      <text x="98.5259%" y="271.50"/>
    </g>
    <g>
      <title>do_group_exit (1 samples, 1.72%)</title>
      <rect x="98.2759%" y="245" width="1.7241%" height="15" fill="rgb(241,5,8)" fg:x="57" fg:w="1"/>
      <text x="98.5259%" y="255.50"/>
    </g>
    <g>
      <title>do_exit (1 samples, 1.72%)</title>
      <rect x="98.2759%" y="229" width="1.7241%" height="15" fill="rgb(238,144,25)" fg:x="57" fg:w="1"/>
      <text x="98.5259%" y="239.50"/>
    </g>
    <g>
      <title>acct_process (1 samples, 1.72%)</title>
      <rect x="98.2759%" y="213" width="1.7241%" height="15" fill="rgb(244,20,44)" fg:x="57" fg:w="1"/>
      <text x="98.5259%" y="223.50"/>
    </g>
  </svg>
</svg>
