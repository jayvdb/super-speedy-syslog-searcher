<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1302" onload="init(evt)" viewBox="0 0 1200 1302" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: super_speedy_syslog_searcher 0.6.68; git: 1f68039; -freq 9000; created 20240316T235505-0700--><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1302" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">super_speedy_syslog_searcher 0.6.68; git: 1f68039; -freq 9000; created 20240316T235505-0700;<br/> s4 ./logs/other/tests/gen-1000-3-foobar.log.gz</text><text id="details" fill="rgb(0,0,0)" x="10" y="1285.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1285.00"> </text><svg id="frames" x="10" width="1180" total_samples="612"><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="0.0000%" y="1013" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1023.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="0.0000%" y="997" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1007.50"></text></g><g><title>elf_machine_rela_relative (2 samples, 0.33%)</title><rect x="0.0000%" y="1109" width="0.3268%" height="15" fill="rgb(215,35,45)" fg:x="0" fg:w="2"/><text x="0.2500%" y="1119.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.33%)</title><rect x="0.0000%" y="1093" width="0.3268%" height="15" fill="rgb(210,204,4)" fg:x="0" fg:w="2"/><text x="0.2500%" y="1103.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.33%)</title><rect x="0.0000%" y="1077" width="0.3268%" height="15" fill="rgb(210,204,4)" fg:x="0" fg:w="2"/><text x="0.2500%" y="1087.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.33%)</title><rect x="0.0000%" y="1061" width="0.3268%" height="15" fill="rgb(210,204,4)" fg:x="0" fg:w="2"/><text x="0.2500%" y="1071.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.33%)</title><rect x="0.0000%" y="1045" width="0.3268%" height="15" fill="rgb(210,204,4)" fg:x="0" fg:w="2"/><text x="0.2500%" y="1055.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.33%)</title><rect x="0.0000%" y="1029" width="0.3268%" height="15" fill="rgb(210,204,4)" fg:x="0" fg:w="2"/><text x="0.2500%" y="1039.50"></text></g><g><title>_dl_relocate_object (3 samples, 0.49%)</title><rect x="0.0000%" y="1141" width="0.4902%" height="15" fill="rgb(244,75,35)" fg:x="0" fg:w="3"/><text x="0.2500%" y="1151.50"></text></g><g><title>elf_dynamic_do_Rela (3 samples, 0.49%)</title><rect x="0.0000%" y="1125" width="0.4902%" height="15" fill="rgb(234,90,53)" fg:x="0" fg:w="3"/><text x="0.2500%" y="1135.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.16%)</title><rect x="0.4902%" y="1141" width="0.1634%" height="15" fill="rgb(208,68,2)" fg:x="3" fg:w="1"/><text x="0.7402%" y="1151.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.16%)</title><rect x="0.4902%" y="1125" width="0.1634%" height="15" fill="rgb(238,71,42)" fg:x="3" fg:w="1"/><text x="0.7402%" y="1135.50"></text></g><g><title>openaux (1 samples, 0.16%)</title><rect x="0.4902%" y="1109" width="0.1634%" height="15" fill="rgb(215,55,1)" fg:x="3" fg:w="1"/><text x="0.7402%" y="1119.50"></text></g><g><title>_dl_map_object (1 samples, 0.16%)</title><rect x="0.4902%" y="1093" width="0.1634%" height="15" fill="rgb(247,77,9)" fg:x="3" fg:w="1"/><text x="0.7402%" y="1103.50"></text></g><g><title>_dl_map_object_from_fd (1 samples, 0.16%)</title><rect x="0.4902%" y="1077" width="0.1634%" height="15" fill="rgb(253,121,32)" fg:x="3" fg:w="1"/><text x="0.7402%" y="1087.50"></text></g><g><title>dl_main (5 samples, 0.82%)</title><rect x="0.0000%" y="1157" width="0.8170%" height="15" fill="rgb(253,59,10)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1167.50"></text></g><g><title>_dl_start (6 samples, 0.98%)</title><rect x="0.0000%" y="1205" width="0.9804%" height="15" fill="rgb(214,13,30)" fg:x="0" fg:w="6"/><text x="0.2500%" y="1215.50"></text></g><g><title>_dl_start_final (6 samples, 0.98%)</title><rect x="0.0000%" y="1189" width="0.9804%" height="15" fill="rgb(222,52,46)" fg:x="0" fg:w="6"/><text x="0.2500%" y="1199.50"></text></g><g><title>_dl_sysdep_start (6 samples, 0.98%)</title><rect x="0.0000%" y="1173" width="0.9804%" height="15" fill="rgb(238,104,49)" fg:x="0" fg:w="6"/><text x="0.2500%" y="1183.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="0.8170%" y="1157" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="5" fg:w="1"/><text x="1.0670%" y="1167.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="0.8170%" y="1141" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="5" fg:w="1"/><text x="1.0670%" y="1151.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="0.8170%" y="1125" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="5" fg:w="1"/><text x="1.0670%" y="1135.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="0.8170%" y="1109" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="5" fg:w="1"/><text x="1.0670%" y="1119.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="0.8170%" y="1093" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="5" fg:w="1"/><text x="1.0670%" y="1103.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="0.8170%" y="1077" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="5" fg:w="1"/><text x="1.0670%" y="1087.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="0.8170%" y="1061" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="5" fg:w="1"/><text x="1.0670%" y="1071.50"></text></g><g><title>std::rt::init (1 samples, 0.16%)</title><rect x="0.9804%" y="1077" width="0.1634%" height="15" fill="rgb(248,16,48)" fg:x="6" fg:w="1"/><text x="1.2304%" y="1087.50"></text></g><g><title>std::sys::unix::thread::guard::init (1 samples, 0.16%)</title><rect x="0.9804%" y="1061" width="0.1634%" height="15" fill="rgb(254,202,37)" fg:x="6" fg:w="1"/><text x="1.2304%" y="1071.50"></text></g><g><title>std::sys::unix::thread::guard::get_stack_start_aligned (1 samples, 0.16%)</title><rect x="0.9804%" y="1045" width="0.1634%" height="15" fill="rgb(212,120,22)" fg:x="6" fg:w="1"/><text x="1.2304%" y="1055.50"></text></g><g><title>std::sys::unix::thread::guard::get_stack_start (1 samples, 0.16%)</title><rect x="0.9804%" y="1029" width="0.1634%" height="15" fill="rgb(231,77,40)" fg:x="6" fg:w="1"/><text x="1.2304%" y="1039.50"></text></g><g><title>__pthread_getattr_np (1 samples, 0.16%)</title><rect x="0.9804%" y="1013" width="0.1634%" height="15" fill="rgb(220,69,37)" fg:x="6" fg:w="1"/><text x="1.2304%" y="1023.50"></text></g><g><title>__GI___getdelim (1 samples, 0.16%)</title><rect x="0.9804%" y="997" width="0.1634%" height="15" fill="rgb(234,98,10)" fg:x="6" fg:w="1"/><text x="1.2304%" y="1007.50"></text></g><g><title>_IO_new_file_underflow (1 samples, 0.16%)</title><rect x="0.9804%" y="981" width="0.1634%" height="15" fill="rgb(231,29,20)" fg:x="6" fg:w="1"/><text x="1.2304%" y="991.50"></text></g><g><title>__GI___read_nocancel (1 samples, 0.16%)</title><rect x="0.9804%" y="965" width="0.1634%" height="15" fill="rgb(246,171,46)" fg:x="6" fg:w="1"/><text x="1.2304%" y="975.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="0.9804%" y="949" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="6" fg:w="1"/><text x="1.2304%" y="959.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="0.9804%" y="933" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="6" fg:w="1"/><text x="1.2304%" y="943.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="0.9804%" y="917" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="6" fg:w="1"/><text x="1.2304%" y="927.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="0.9804%" y="901" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="6" fg:w="1"/><text x="1.2304%" y="911.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="0.9804%" y="885" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="6" fg:w="1"/><text x="1.2304%" y="895.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="0.9804%" y="869" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="6" fg:w="1"/><text x="1.2304%" y="879.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="0.9804%" y="853" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="6" fg:w="1"/><text x="1.2304%" y="863.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="0.9804%" y="837" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="6" fg:w="1"/><text x="1.2304%" y="847.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="0.9804%" y="821" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="6" fg:w="1"/><text x="1.2304%" y="831.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="0.9804%" y="805" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="6" fg:w="1"/><text x="1.2304%" y="815.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::remove (1 samples, 0.16%)</title><rect x="1.1438%" y="933" width="0.1634%" height="15" fill="rgb(232,125,5)" fg:x="7" fg:w="1"/><text x="1.3938%" y="943.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::remove (1 samples, 0.16%)</title><rect x="1.1438%" y="917" width="0.1634%" height="15" fill="rgb(218,114,38)" fg:x="7" fg:w="1"/><text x="1.3938%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (1 samples, 0.16%)</title><rect x="1.1438%" y="901" width="0.1634%" height="15" fill="rgb(230,19,42)" fg:x="7" fg:w="1"/><text x="1.3938%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (1 samples, 0.16%)</title><rect x="1.1438%" y="885" width="0.1634%" height="15" fill="rgb(208,183,29)" fg:x="7" fg:w="1"/><text x="1.3938%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (1 samples, 0.16%)</title><rect x="1.1438%" y="869" width="0.1634%" height="15" fill="rgb(215,93,43)" fg:x="7" fg:w="1"/><text x="1.3938%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.16%)</title><rect x="1.1438%" y="853" width="0.1634%" height="15" fill="rgb(252,63,32)" fg:x="7" fg:w="1"/><text x="1.3938%" y="863.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.16%)</title><rect x="1.1438%" y="837" width="0.1634%" height="15" fill="rgb(248,7,52)" fg:x="7" fg:w="1"/><text x="1.3938%" y="847.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.33%)</title><rect x="1.3072%" y="565" width="0.3268%" height="15" fill="rgb(210,204,4)" fg:x="8" fg:w="2"/><text x="1.5572%" y="575.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (4 samples, 0.65%)</title><rect x="1.3072%" y="757" width="0.6536%" height="15" fill="rgb(240,178,54)" fg:x="8" fg:w="4"/><text x="1.5572%" y="767.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (4 samples, 0.65%)</title><rect x="1.3072%" y="741" width="0.6536%" height="15" fill="rgb(239,119,25)" fg:x="8" fg:w="4"/><text x="1.5572%" y="751.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (4 samples, 0.65%)</title><rect x="1.3072%" y="725" width="0.6536%" height="15" fill="rgb(236,163,16)" fg:x="8" fg:w="4"/><text x="1.5572%" y="735.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (4 samples, 0.65%)</title><rect x="1.3072%" y="709" width="0.6536%" height="15" fill="rgb(247,26,49)" fg:x="8" fg:w="4"/><text x="1.5572%" y="719.50"></text></g><g><title>__GI___libc_write (4 samples, 0.65%)</title><rect x="1.3072%" y="693" width="0.6536%" height="15" fill="rgb(232,197,30)" fg:x="8" fg:w="4"/><text x="1.5572%" y="703.50"></text></g><g><title>__GI___libc_write (4 samples, 0.65%)</title><rect x="1.3072%" y="677" width="0.6536%" height="15" fill="rgb(232,197,30)" fg:x="8" fg:w="4"/><text x="1.5572%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.65%)</title><rect x="1.3072%" y="661" width="0.6536%" height="15" fill="rgb(210,204,4)" fg:x="8" fg:w="4"/><text x="1.5572%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.65%)</title><rect x="1.3072%" y="645" width="0.6536%" height="15" fill="rgb(210,204,4)" fg:x="8" fg:w="4"/><text x="1.5572%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.65%)</title><rect x="1.3072%" y="629" width="0.6536%" height="15" fill="rgb(210,204,4)" fg:x="8" fg:w="4"/><text x="1.5572%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.65%)</title><rect x="1.3072%" y="613" width="0.6536%" height="15" fill="rgb(210,204,4)" fg:x="8" fg:w="4"/><text x="1.5572%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.65%)</title><rect x="1.3072%" y="597" width="0.6536%" height="15" fill="rgb(210,204,4)" fg:x="8" fg:w="4"/><text x="1.5572%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.65%)</title><rect x="1.3072%" y="581" width="0.6536%" height="15" fill="rgb(210,204,4)" fg:x="8" fg:w="4"/><text x="1.5572%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="1.9608%" y="597" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="12" fg:w="1"/><text x="2.2108%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="1.9608%" y="581" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="12" fg:w="1"/><text x="2.2108%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.33%)</title><rect x="1.9608%" y="613" width="0.3268%" height="15" fill="rgb(210,204,4)" fg:x="12" fg:w="2"/><text x="2.2108%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.49%)</title><rect x="1.9608%" y="629" width="0.4902%" height="15" fill="rgb(210,204,4)" fg:x="12" fg:w="3"/><text x="2.2108%" y="639.50"></text></g><g><title>&lt;termcolor::StandardStream as std::io::Write&gt;::write (8 samples, 1.31%)</title><rect x="1.3072%" y="885" width="1.3072%" height="15" fill="rgb(250,180,25)" fg:x="8" fg:w="8"/><text x="1.5572%" y="895.50"></text></g><g><title>&lt;termcolor::LossyStandardStream&lt;W&gt; as std::io::Write&gt;::write (8 samples, 1.31%)</title><rect x="1.3072%" y="869" width="1.3072%" height="15" fill="rgb(232,195,18)" fg:x="8" fg:w="8"/><text x="1.5572%" y="879.50"></text></g><g><title>&lt;termcolor::WriterInner&lt;W&gt; as std::io::Write&gt;::write (8 samples, 1.31%)</title><rect x="1.3072%" y="853" width="1.3072%" height="15" fill="rgb(206,183,32)" fg:x="8" fg:w="8"/><text x="1.5572%" y="863.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write (8 samples, 1.31%)</title><rect x="1.3072%" y="837" width="1.3072%" height="15" fill="rgb(215,142,33)" fg:x="8" fg:w="8"/><text x="1.5572%" y="847.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write (8 samples, 1.31%)</title><rect x="1.3072%" y="821" width="1.3072%" height="15" fill="rgb(232,39,45)" fg:x="8" fg:w="8"/><text x="1.5572%" y="831.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write (8 samples, 1.31%)</title><rect x="1.3072%" y="805" width="1.3072%" height="15" fill="rgb(216,85,2)" fg:x="8" fg:w="8"/><text x="1.5572%" y="815.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write (8 samples, 1.31%)</title><rect x="1.3072%" y="789" width="1.3072%" height="15" fill="rgb(226,48,36)" fg:x="8" fg:w="8"/><text x="1.5572%" y="799.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write (8 samples, 1.31%)</title><rect x="1.3072%" y="773" width="1.3072%" height="15" fill="rgb(237,90,14)" fg:x="8" fg:w="8"/><text x="1.5572%" y="783.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (4 samples, 0.65%)</title><rect x="1.9608%" y="757" width="0.6536%" height="15" fill="rgb(239,119,25)" fg:x="12" fg:w="4"/><text x="2.2108%" y="767.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (4 samples, 0.65%)</title><rect x="1.9608%" y="741" width="0.6536%" height="15" fill="rgb(236,163,16)" fg:x="12" fg:w="4"/><text x="2.2108%" y="751.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (4 samples, 0.65%)</title><rect x="1.9608%" y="725" width="0.6536%" height="15" fill="rgb(247,26,49)" fg:x="12" fg:w="4"/><text x="2.2108%" y="735.50"></text></g><g><title>__GI___libc_write (4 samples, 0.65%)</title><rect x="1.9608%" y="709" width="0.6536%" height="15" fill="rgb(232,197,30)" fg:x="12" fg:w="4"/><text x="2.2108%" y="719.50"></text></g><g><title>__GI___libc_write (4 samples, 0.65%)</title><rect x="1.9608%" y="693" width="0.6536%" height="15" fill="rgb(232,197,30)" fg:x="12" fg:w="4"/><text x="2.2108%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.65%)</title><rect x="1.9608%" y="677" width="0.6536%" height="15" fill="rgb(210,204,4)" fg:x="12" fg:w="4"/><text x="2.2108%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.65%)</title><rect x="1.9608%" y="661" width="0.6536%" height="15" fill="rgb(210,204,4)" fg:x="12" fg:w="4"/><text x="2.2108%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.65%)</title><rect x="1.9608%" y="645" width="0.6536%" height="15" fill="rgb(210,204,4)" fg:x="12" fg:w="4"/><text x="2.2108%" y="655.50"></text></g><g><title>std::io::Write::write_all (9 samples, 1.47%)</title><rect x="1.3072%" y="901" width="1.4706%" height="15" fill="rgb(251,145,9)" fg:x="8" fg:w="9"/><text x="1.5572%" y="911.50"></text></g><g><title>s4lib::data::line::LinePart::as_slice (1 samples, 0.16%)</title><rect x="2.7778%" y="901" width="0.1634%" height="15" fill="rgb(251,71,39)" fg:x="17" fg:w="1"/><text x="3.0278%" y="911.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write (2 samples, 0.33%)</title><rect x="2.9412%" y="725" width="0.3268%" height="15" fill="rgb(226,48,36)" fg:x="18" fg:w="2"/><text x="3.1912%" y="735.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write (2 samples, 0.33%)</title><rect x="2.9412%" y="709" width="0.3268%" height="15" fill="rgb(237,90,14)" fg:x="18" fg:w="2"/><text x="3.1912%" y="719.50"></text></g><g><title>std::sys_common::memchr::memrchr (2 samples, 0.33%)</title><rect x="2.9412%" y="693" width="0.3268%" height="15" fill="rgb(232,88,32)" fg:x="18" fg:w="2"/><text x="3.1912%" y="703.50"></text></g><g><title>std::sys::unix::memchr::memrchr (2 samples, 0.33%)</title><rect x="2.9412%" y="677" width="0.3268%" height="15" fill="rgb(223,76,45)" fg:x="18" fg:w="2"/><text x="3.1912%" y="687.50"></text></g><g><title>std::sys::unix::memchr::memrchr::memrchr_specific (2 samples, 0.33%)</title><rect x="2.9412%" y="661" width="0.3268%" height="15" fill="rgb(241,110,16)" fg:x="18" fg:w="2"/><text x="3.1912%" y="671.50"></text></g><g><title>__memrchr_evex (2 samples, 0.33%)</title><rect x="2.9412%" y="645" width="0.3268%" height="15" fill="rgb(249,31,17)" fg:x="18" fg:w="2"/><text x="3.1912%" y="655.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.49%)</title><rect x="2.9412%" y="821" width="0.4902%" height="15" fill="rgb(251,145,9)" fg:x="18" fg:w="3"/><text x="3.1912%" y="831.50"></text></g><g><title>&lt;termcolor::Ansi&lt;W&gt; as std::io::Write&gt;::write (3 samples, 0.49%)</title><rect x="2.9412%" y="805" width="0.4902%" height="15" fill="rgb(207,158,40)" fg:x="18" fg:w="3"/><text x="3.1912%" y="815.50"></text></g><g><title>&lt;termcolor::IoStandardStream as std::io::Write&gt;::write (3 samples, 0.49%)</title><rect x="2.9412%" y="789" width="0.4902%" height="15" fill="rgb(227,89,5)" fg:x="18" fg:w="3"/><text x="3.1912%" y="799.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write (3 samples, 0.49%)</title><rect x="2.9412%" y="773" width="0.4902%" height="15" fill="rgb(215,142,33)" fg:x="18" fg:w="3"/><text x="3.1912%" y="783.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write (3 samples, 0.49%)</title><rect x="2.9412%" y="757" width="0.4902%" height="15" fill="rgb(232,39,45)" fg:x="18" fg:w="3"/><text x="3.1912%" y="767.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write (3 samples, 0.49%)</title><rect x="2.9412%" y="741" width="0.4902%" height="15" fill="rgb(216,85,2)" fg:x="18" fg:w="3"/><text x="3.1912%" y="751.50"></text></g><g><title>termcolor::Ansi&lt;W&gt;::write_str (4 samples, 0.65%)</title><rect x="2.9412%" y="837" width="0.6536%" height="15" fill="rgb(232,27,51)" fg:x="18" fg:w="4"/><text x="3.1912%" y="847.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::is_empty (2 samples, 0.33%)</title><rect x="3.5948%" y="821" width="0.3268%" height="15" fill="rgb(217,58,11)" fg:x="22" fg:w="2"/><text x="3.8448%" y="831.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.49%)</title><rect x="3.5948%" y="837" width="0.4902%" height="15" fill="rgb(251,145,9)" fg:x="22" fg:w="3"/><text x="3.8448%" y="847.50"></text></g><g><title>&lt;termcolor::Ansi&lt;W&gt; as std::io::Write&gt;::write (1 samples, 0.16%)</title><rect x="3.9216%" y="821" width="0.1634%" height="15" fill="rgb(207,158,40)" fg:x="24" fg:w="1"/><text x="4.1716%" y="831.50"></text></g><g><title>&lt;termcolor::IoStandardStream as std::io::Write&gt;::write (1 samples, 0.16%)</title><rect x="3.9216%" y="805" width="0.1634%" height="15" fill="rgb(227,89,5)" fg:x="24" fg:w="1"/><text x="4.1716%" y="815.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write (1 samples, 0.16%)</title><rect x="3.9216%" y="789" width="0.1634%" height="15" fill="rgb(215,142,33)" fg:x="24" fg:w="1"/><text x="4.1716%" y="799.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write (1 samples, 0.16%)</title><rect x="3.9216%" y="773" width="0.1634%" height="15" fill="rgb(232,39,45)" fg:x="24" fg:w="1"/><text x="4.1716%" y="783.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write (1 samples, 0.16%)</title><rect x="3.9216%" y="757" width="0.1634%" height="15" fill="rgb(216,85,2)" fg:x="24" fg:w="1"/><text x="4.1716%" y="767.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write (1 samples, 0.16%)</title><rect x="3.9216%" y="741" width="0.1634%" height="15" fill="rgb(226,48,36)" fg:x="24" fg:w="1"/><text x="4.1716%" y="751.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write (1 samples, 0.16%)</title><rect x="3.9216%" y="725" width="0.1634%" height="15" fill="rgb(237,90,14)" fg:x="24" fg:w="1"/><text x="4.1716%" y="735.50"></text></g><g><title>std::sys_common::memchr::memrchr (1 samples, 0.16%)</title><rect x="3.9216%" y="709" width="0.1634%" height="15" fill="rgb(232,88,32)" fg:x="24" fg:w="1"/><text x="4.1716%" y="719.50"></text></g><g><title>std::sys::unix::memchr::memrchr (1 samples, 0.16%)</title><rect x="3.9216%" y="693" width="0.1634%" height="15" fill="rgb(223,76,45)" fg:x="24" fg:w="1"/><text x="4.1716%" y="703.50"></text></g><g><title>std::sys::unix::memchr::memrchr::memrchr_specific (1 samples, 0.16%)</title><rect x="3.9216%" y="677" width="0.1634%" height="15" fill="rgb(241,110,16)" fg:x="24" fg:w="1"/><text x="4.1716%" y="687.50"></text></g><g><title>__memrchr_evex (1 samples, 0.16%)</title><rect x="3.9216%" y="661" width="0.1634%" height="15" fill="rgb(249,31,17)" fg:x="24" fg:w="1"/><text x="4.1716%" y="671.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write (1 samples, 0.16%)</title><rect x="4.0850%" y="725" width="0.1634%" height="15" fill="rgb(216,85,2)" fg:x="25" fg:w="1"/><text x="4.3350%" y="735.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write (1 samples, 0.16%)</title><rect x="4.0850%" y="709" width="0.1634%" height="15" fill="rgb(226,48,36)" fg:x="25" fg:w="1"/><text x="4.3350%" y="719.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write (1 samples, 0.16%)</title><rect x="4.0850%" y="693" width="0.1634%" height="15" fill="rgb(237,90,14)" fg:x="25" fg:w="1"/><text x="4.3350%" y="703.50"></text></g><g><title>std::sys_common::memchr::memrchr (1 samples, 0.16%)</title><rect x="4.0850%" y="677" width="0.1634%" height="15" fill="rgb(232,88,32)" fg:x="25" fg:w="1"/><text x="4.3350%" y="687.50"></text></g><g><title>std::sys::unix::memchr::memrchr (1 samples, 0.16%)</title><rect x="4.0850%" y="661" width="0.1634%" height="15" fill="rgb(223,76,45)" fg:x="25" fg:w="1"/><text x="4.3350%" y="671.50"></text></g><g><title>std::sys::unix::memchr::memrchr::memrchr_specific (1 samples, 0.16%)</title><rect x="4.0850%" y="645" width="0.1634%" height="15" fill="rgb(241,110,16)" fg:x="25" fg:w="1"/><text x="4.3350%" y="655.50"></text></g><g><title>__memrchr_evex (1 samples, 0.16%)</title><rect x="4.0850%" y="629" width="0.1634%" height="15" fill="rgb(249,31,17)" fg:x="25" fg:w="1"/><text x="4.3350%" y="639.50"></text></g><g><title>&lt;termcolor::WriterInner&lt;W&gt; as termcolor::WriteColor&gt;::set_color (9 samples, 1.47%)</title><rect x="2.9412%" y="869" width="1.4706%" height="15" fill="rgb(234,182,7)" fg:x="18" fg:w="9"/><text x="3.1912%" y="879.50"></text></g><g><title>&lt;termcolor::Ansi&lt;W&gt; as termcolor::WriteColor&gt;::set_color (9 samples, 1.47%)</title><rect x="2.9412%" y="853" width="1.4706%" height="15" fill="rgb(208,123,3)" fg:x="18" fg:w="9"/><text x="3.1912%" y="863.50"></text></g><g><title>&lt;termcolor::Ansi&lt;W&gt; as termcolor::WriteColor&gt;::reset (2 samples, 0.33%)</title><rect x="4.0850%" y="837" width="0.3268%" height="15" fill="rgb(226,70,2)" fg:x="25" fg:w="2"/><text x="4.3350%" y="847.50"></text></g><g><title>termcolor::Ansi&lt;W&gt;::write_str (2 samples, 0.33%)</title><rect x="4.0850%" y="821" width="0.3268%" height="15" fill="rgb(232,27,51)" fg:x="25" fg:w="2"/><text x="4.3350%" y="831.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.33%)</title><rect x="4.0850%" y="805" width="0.3268%" height="15" fill="rgb(251,145,9)" fg:x="25" fg:w="2"/><text x="4.3350%" y="815.50"></text></g><g><title>&lt;termcolor::Ansi&lt;W&gt; as std::io::Write&gt;::write (2 samples, 0.33%)</title><rect x="4.0850%" y="789" width="0.3268%" height="15" fill="rgb(207,158,40)" fg:x="25" fg:w="2"/><text x="4.3350%" y="799.50"></text></g><g><title>&lt;termcolor::IoStandardStream as std::io::Write&gt;::write (2 samples, 0.33%)</title><rect x="4.0850%" y="773" width="0.3268%" height="15" fill="rgb(227,89,5)" fg:x="25" fg:w="2"/><text x="4.3350%" y="783.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write (2 samples, 0.33%)</title><rect x="4.0850%" y="757" width="0.3268%" height="15" fill="rgb(215,142,33)" fg:x="25" fg:w="2"/><text x="4.3350%" y="767.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write (2 samples, 0.33%)</title><rect x="4.0850%" y="741" width="0.3268%" height="15" fill="rgb(232,39,45)" fg:x="25" fg:w="2"/><text x="4.3350%" y="751.50"></text></g><g><title>&lt;termcolor::StandardStream as termcolor::WriteColor&gt;::set_color (10 samples, 1.63%)</title><rect x="2.9412%" y="901" width="1.6340%" height="15" fill="rgb(217,221,27)" fg:x="18" fg:w="10"/><text x="3.1912%" y="911.50"></text></g><g><title>&lt;termcolor::LossyStandardStream&lt;W&gt; as termcolor::WriteColor&gt;::set_color (10 samples, 1.63%)</title><rect x="2.9412%" y="885" width="1.6340%" height="15" fill="rgb(244,124,31)" fg:x="18" fg:w="10"/><text x="3.1912%" y="895.50"></text></g><g><title>&lt;termcolor::LossyStandardStream&lt;W&gt; as std::io::Write&gt;::flush (1 samples, 0.16%)</title><rect x="4.5752%" y="885" width="0.1634%" height="15" fill="rgb(236,94,3)" fg:x="28" fg:w="1"/><text x="4.8252%" y="895.50"></text></g><g><title>&lt;termcolor::WriterInner&lt;W&gt; as std::io::Write&gt;::flush (1 samples, 0.16%)</title><rect x="4.5752%" y="869" width="0.1634%" height="15" fill="rgb(217,184,42)" fg:x="28" fg:w="1"/><text x="4.8252%" y="879.50"></text></g><g><title>&lt;termcolor::Ansi&lt;W&gt; as std::io::Write&gt;::flush (1 samples, 0.16%)</title><rect x="4.5752%" y="853" width="0.1634%" height="15" fill="rgb(238,107,1)" fg:x="28" fg:w="1"/><text x="4.8252%" y="863.50"></text></g><g><title>&lt;termcolor::IoStandardStream as std::io::Write&gt;::flush (1 samples, 0.16%)</title><rect x="4.5752%" y="837" width="0.1634%" height="15" fill="rgb(212,102,39)" fg:x="28" fg:w="1"/><text x="4.8252%" y="847.50"></text></g><g><title>&lt;termcolor::StandardStream as std::io::Write&gt;::flush (2 samples, 0.33%)</title><rect x="4.5752%" y="901" width="0.3268%" height="15" fill="rgb(214,129,27)" fg:x="28" fg:w="2"/><text x="4.8252%" y="911.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::flush (1 samples, 0.16%)</title><rect x="4.7386%" y="885" width="0.1634%" height="15" fill="rgb(244,108,51)" fg:x="29" fg:w="1"/><text x="4.9886%" y="895.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::flush (1 samples, 0.16%)</title><rect x="4.7386%" y="869" width="0.1634%" height="15" fill="rgb(224,207,51)" fg:x="29" fg:w="1"/><text x="4.9886%" y="879.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::flush (1 samples, 0.16%)</title><rect x="4.7386%" y="853" width="0.1634%" height="15" fill="rgb(213,149,3)" fg:x="29" fg:w="1"/><text x="4.9886%" y="863.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::flush (1 samples, 0.16%)</title><rect x="4.7386%" y="837" width="0.1634%" height="15" fill="rgb(212,213,13)" fg:x="29" fg:w="1"/><text x="4.9886%" y="847.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::flush (1 samples, 0.16%)</title><rect x="4.7386%" y="821" width="0.1634%" height="15" fill="rgb(231,193,47)" fg:x="29" fg:w="1"/><text x="4.9886%" y="831.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.16%)</title><rect x="4.7386%" y="805" width="0.1634%" height="15" fill="rgb(240,178,54)" fg:x="29" fg:w="1"/><text x="4.9886%" y="815.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (1 samples, 0.16%)</title><rect x="4.7386%" y="789" width="0.1634%" height="15" fill="rgb(239,119,25)" fg:x="29" fg:w="1"/><text x="4.9886%" y="799.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (1 samples, 0.16%)</title><rect x="4.7386%" y="773" width="0.1634%" height="15" fill="rgb(236,163,16)" fg:x="29" fg:w="1"/><text x="4.9886%" y="783.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.16%)</title><rect x="4.7386%" y="757" width="0.1634%" height="15" fill="rgb(247,26,49)" fg:x="29" fg:w="1"/><text x="4.9886%" y="767.50"></text></g><g><title>__GI___libc_write (1 samples, 0.16%)</title><rect x="4.7386%" y="741" width="0.1634%" height="15" fill="rgb(232,197,30)" fg:x="29" fg:w="1"/><text x="4.9886%" y="751.50"></text></g><g><title>__GI___libc_write (1 samples, 0.16%)</title><rect x="4.7386%" y="725" width="0.1634%" height="15" fill="rgb(232,197,30)" fg:x="29" fg:w="1"/><text x="4.9886%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="4.7386%" y="709" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="29" fg:w="1"/><text x="4.9886%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="4.7386%" y="693" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="29" fg:w="1"/><text x="4.9886%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="4.7386%" y="677" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="29" fg:w="1"/><text x="4.9886%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="4.7386%" y="661" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="29" fg:w="1"/><text x="4.9886%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="4.7386%" y="645" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="29" fg:w="1"/><text x="4.9886%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="4.7386%" y="629" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="29" fg:w="1"/><text x="4.9886%" y="639.50"></text></g><g><title>s4lib::printer::printers::PrinterLogMessage::print_sysline (24 samples, 3.92%)</title><rect x="1.3072%" y="933" width="3.9216%" height="15" fill="rgb(244,86,43)" fg:x="8" fg:w="24"/><text x="1.5572%" y="943.50">s4li..</text></g><g><title>s4lib::printer::printers::PrinterLogMessage::print_sysline_color (24 samples, 3.92%)</title><rect x="1.3072%" y="917" width="3.9216%" height="15" fill="rgb(253,154,21)" fg:x="8" fg:w="24"/><text x="1.5572%" y="927.50">s4li..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.33%)</title><rect x="4.9020%" y="901" width="0.3268%" height="15" fill="rgb(236,210,2)" fg:x="30" fg:w="2"/><text x="5.1520%" y="911.50"></text></g><g><title>crossbeam_channel::channel::read (2 samples, 0.33%)</title><rect x="5.2288%" y="901" width="0.3268%" height="15" fill="rgb(209,181,8)" fg:x="32" fg:w="2"/><text x="5.4788%" y="911.50"></text></g><g><title>__memmove_avx512_unaligned_erms (2 samples, 0.33%)</title><rect x="5.2288%" y="885" width="0.3268%" height="15" fill="rgb(217,126,36)" fg:x="32" fg:w="2"/><text x="5.4788%" y="895.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.16%)</title><rect x="5.5556%" y="901" width="0.1634%" height="15" fill="rgb(206,149,53)" fg:x="34" fg:w="1"/><text x="5.8056%" y="911.50"></text></g><g><title>crossbeam_channel::select::SelectedOperation::recv (4 samples, 0.65%)</title><rect x="5.2288%" y="917" width="0.6536%" height="15" fill="rgb(206,140,19)" fg:x="32" fg:w="4"/><text x="5.4788%" y="927.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="5.8824%" y="629" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="36" fg:w="1"/><text x="6.1324%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.33%)</title><rect x="5.8824%" y="709" width="0.3268%" height="15" fill="rgb(210,204,4)" fg:x="36" fg:w="2"/><text x="6.1324%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.33%)</title><rect x="5.8824%" y="693" width="0.3268%" height="15" fill="rgb(210,204,4)" fg:x="36" fg:w="2"/><text x="6.1324%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.33%)</title><rect x="5.8824%" y="677" width="0.3268%" height="15" fill="rgb(210,204,4)" fg:x="36" fg:w="2"/><text x="6.1324%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.33%)</title><rect x="5.8824%" y="661" width="0.3268%" height="15" fill="rgb(210,204,4)" fg:x="36" fg:w="2"/><text x="6.1324%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.33%)</title><rect x="5.8824%" y="645" width="0.3268%" height="15" fill="rgb(210,204,4)" fg:x="36" fg:w="2"/><text x="6.1324%" y="655.50"></text></g><g><title>std::thread::park (3 samples, 0.49%)</title><rect x="5.8824%" y="773" width="0.4902%" height="15" fill="rgb(253,209,8)" fg:x="36" fg:w="3"/><text x="6.1324%" y="783.50"></text></g><g><title>std::sys_common::thread_parker::futex::Parker::park (3 samples, 0.49%)</title><rect x="5.8824%" y="757" width="0.4902%" height="15" fill="rgb(252,86,25)" fg:x="36" fg:w="3"/><text x="6.1324%" y="767.50"></text></g><g><title>std::sys::unix::futex::futex_wait (3 samples, 0.49%)</title><rect x="5.8824%" y="741" width="0.4902%" height="15" fill="rgb(219,16,26)" fg:x="36" fg:w="3"/><text x="6.1324%" y="751.50"></text></g><g><title>syscall (3 samples, 0.49%)</title><rect x="5.8824%" y="725" width="0.4902%" height="15" fill="rgb(207,84,5)" fg:x="36" fg:w="3"/><text x="6.1324%" y="735.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (24 samples, 3.92%)</title><rect x="6.3725%" y="757" width="3.9216%" height="15" fill="rgb(242,61,0)" fg:x="39" fg:w="24"/><text x="6.6225%" y="767.50">core..</text></g><g><title>core::hint::spin_loop (24 samples, 3.92%)</title><rect x="6.3725%" y="741" width="3.9216%" height="15" fill="rgb(241,144,6)" fg:x="39" fg:w="24"/><text x="6.6225%" y="751.50">core..</text></g><g><title>core::core_arch::x86::sse2::_mm_pause (24 samples, 3.92%)</title><rect x="6.3725%" y="725" width="3.9216%" height="15" fill="rgb(213,129,2)" fg:x="39" fg:w="24"/><text x="6.6225%" y="735.50">core..</text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="10.2941%" y="677" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="63" fg:w="1"/><text x="10.5441%" y="687.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (26 samples, 4.25%)</title><rect x="6.3725%" y="773" width="4.2484%" height="15" fill="rgb(224,200,25)" fg:x="39" fg:w="26"/><text x="6.6225%" y="783.50">cross..</text></g><g><title>__GI___sched_yield (2 samples, 0.33%)</title><rect x="10.2941%" y="757" width="0.3268%" height="15" fill="rgb(225,197,10)" fg:x="63" fg:w="2"/><text x="10.5441%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.33%)</title><rect x="10.2941%" y="741" width="0.3268%" height="15" fill="rgb(210,204,4)" fg:x="63" fg:w="2"/><text x="10.5441%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.33%)</title><rect x="10.2941%" y="725" width="0.3268%" height="15" fill="rgb(210,204,4)" fg:x="63" fg:w="2"/><text x="10.5441%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.33%)</title><rect x="10.2941%" y="709" width="0.3268%" height="15" fill="rgb(210,204,4)" fg:x="63" fg:w="2"/><text x="10.5441%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.33%)</title><rect x="10.2941%" y="693" width="0.3268%" height="15" fill="rgb(210,204,4)" fg:x="63" fg:w="2"/><text x="10.5441%" y="703.50"></text></g><g><title>crossbeam_channel::context::Context::wait_until (30 samples, 4.90%)</title><rect x="5.8824%" y="789" width="4.9020%" height="15" fill="rgb(218,28,27)" fg:x="36" fg:w="30"/><text x="6.1324%" y="799.50">crossb..</text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.16%)</title><rect x="10.6209%" y="773" width="0.1634%" height="15" fill="rgb(210,59,24)" fg:x="65" fg:w="1"/><text x="10.8709%" y="783.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::inner (1 samples, 0.16%)</title><rect x="10.6209%" y="757" width="0.1634%" height="15" fill="rgb(232,202,24)" fg:x="65" fg:w="1"/><text x="10.8709%" y="767.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.16%)</title><rect x="10.6209%" y="741" width="0.1634%" height="15" fill="rgb(221,185,31)" fg:x="65" fg:w="1"/><text x="10.8709%" y="751.50"></text></g><g><title>&lt;crossbeam_channel::channel::Receiver&lt;T&gt; as crossbeam_channel::select::SelectHandle&gt;::unregister (1 samples, 0.16%)</title><rect x="10.7843%" y="789" width="0.1634%" height="15" fill="rgb(240,190,47)" fg:x="66" fg:w="1"/><text x="11.0343%" y="799.50"></text></g><g><title>&lt;crossbeam_channel::flavors::array::Receiver&lt;T&gt; as crossbeam_channel::select::SelectHandle&gt;::register (1 samples, 0.16%)</title><rect x="10.9477%" y="773" width="0.1634%" height="15" fill="rgb(249,116,40)" fg:x="67" fg:w="1"/><text x="11.1977%" y="783.50"></text></g><g><title>crossbeam_channel::waker::SyncWaker::register (1 samples, 0.16%)</title><rect x="10.9477%" y="757" width="0.1634%" height="15" fill="rgb(224,150,31)" fg:x="67" fg:w="1"/><text x="11.1977%" y="767.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.16%)</title><rect x="10.9477%" y="741" width="0.1634%" height="15" fill="rgb(234,45,50)" fg:x="67" fg:w="1"/><text x="11.1977%" y="751.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (1 samples, 0.16%)</title><rect x="10.9477%" y="725" width="0.1634%" height="15" fill="rgb(247,66,5)" fg:x="67" fg:w="1"/><text x="11.1977%" y="735.50"></text></g><g><title>&lt;crossbeam_channel::channel::Receiver&lt;T&gt; as crossbeam_channel::select::SelectHandle&gt;::register (2 samples, 0.33%)</title><rect x="10.9477%" y="789" width="0.3268%" height="15" fill="rgb(232,111,38)" fg:x="67" fg:w="2"/><text x="11.1977%" y="799.50"></text></g><g><title>&lt;crossbeam_channel::channel::Receiver&lt;T&gt; as crossbeam_channel::select::SelectHandle&gt;::accept (1 samples, 0.16%)</title><rect x="11.2745%" y="789" width="0.1634%" height="15" fill="rgb(231,180,15)" fg:x="69" fg:w="1"/><text x="11.5245%" y="799.50"></text></g><g><title>&lt;crossbeam_channel::flavors::array::Receiver&lt;T&gt; as crossbeam_channel::select::SelectHandle&gt;::accept (1 samples, 0.16%)</title><rect x="11.2745%" y="773" width="0.1634%" height="15" fill="rgb(241,147,36)" fg:x="69" fg:w="1"/><text x="11.5245%" y="783.50"></text></g><g><title>&lt;crossbeam_channel::flavors::array::Receiver&lt;T&gt; as crossbeam_channel::select::SelectHandle&gt;::try_select (1 samples, 0.16%)</title><rect x="11.2745%" y="757" width="0.1634%" height="15" fill="rgb(205,196,31)" fg:x="69" fg:w="1"/><text x="11.5245%" y="767.50"></text></g><g><title>crossbeam_channel::flavors::array::Channel&lt;T&gt;::start_recv (1 samples, 0.16%)</title><rect x="11.2745%" y="741" width="0.1634%" height="15" fill="rgb(249,64,9)" fg:x="69" fg:w="1"/><text x="11.5245%" y="751.50"></text></g><g><title>crossbeam_channel::context::Context::with (35 samples, 5.72%)</title><rect x="5.8824%" y="869" width="5.7190%" height="15" fill="rgb(249,203,42)" fg:x="36" fg:w="35"/><text x="6.1324%" y="879.50">crossbe..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (35 samples, 5.72%)</title><rect x="5.8824%" y="853" width="5.7190%" height="15" fill="rgb(235,136,14)" fg:x="36" fg:w="35"/><text x="6.1324%" y="863.50">std::th..</text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (35 samples, 5.72%)</title><rect x="5.8824%" y="837" width="5.7190%" height="15" fill="rgb(251,136,16)" fg:x="36" fg:w="35"/><text x="6.1324%" y="847.50">crossbe..</text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (35 samples, 5.72%)</title><rect x="5.8824%" y="821" width="5.7190%" height="15" fill="rgb(251,136,16)" fg:x="36" fg:w="35"/><text x="6.1324%" y="831.50">crossbe..</text></g><g><title>crossbeam_channel::select::run_select::{{closure}} (35 samples, 5.72%)</title><rect x="5.8824%" y="805" width="5.7190%" height="15" fill="rgb(241,20,29)" fg:x="36" fg:w="35"/><text x="6.1324%" y="815.50">crossbe..</text></g><g><title>&lt;crossbeam_channel::channel::Receiver&lt;T&gt; as crossbeam_channel::select::SelectHandle&gt;::try_select (1 samples, 0.16%)</title><rect x="11.6013%" y="869" width="0.1634%" height="15" fill="rgb(236,74,9)" fg:x="71" fg:w="1"/><text x="11.8513%" y="879.50"></text></g><g><title>&lt;crossbeam_channel::flavors::array::Receiver&lt;T&gt; as crossbeam_channel::select::SelectHandle&gt;::try_select (1 samples, 0.16%)</title><rect x="11.6013%" y="853" width="0.1634%" height="15" fill="rgb(205,196,31)" fg:x="71" fg:w="1"/><text x="11.8513%" y="863.50"></text></g><g><title>crossbeam_channel::flavors::array::Channel&lt;T&gt;::start_recv (1 samples, 0.16%)</title><rect x="11.6013%" y="837" width="0.1634%" height="15" fill="rgb(249,64,9)" fg:x="71" fg:w="1"/><text x="11.8513%" y="847.50"></text></g><g><title>crossbeam_channel::select::Select::select (37 samples, 6.05%)</title><rect x="5.8824%" y="917" width="6.0458%" height="15" fill="rgb(218,151,27)" fg:x="36" fg:w="37"/><text x="6.1324%" y="927.50">crossbea..</text></g><g><title>crossbeam_channel::select::select (37 samples, 6.05%)</title><rect x="5.8824%" y="901" width="6.0458%" height="15" fill="rgb(210,225,20)" fg:x="36" fg:w="37"/><text x="6.1324%" y="911.50">crossbea..</text></g><g><title>crossbeam_channel::select::run_select (37 samples, 6.05%)</title><rect x="5.8824%" y="885" width="6.0458%" height="15" fill="rgb(238,41,29)" fg:x="36" fg:w="37"/><text x="6.1324%" y="895.50">crossbea..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (1 samples, 0.16%)</title><rect x="11.9281%" y="917" width="0.1634%" height="15" fill="rgb(242,164,29)" fg:x="73" fg:w="1"/><text x="12.1781%" y="927.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1 samples, 0.16%)</title><rect x="11.9281%" y="901" width="0.1634%" height="15" fill="rgb(217,165,36)" fg:x="73" fg:w="1"/><text x="12.1781%" y="911.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1 samples, 0.16%)</title><rect x="11.9281%" y="885" width="0.1634%" height="15" fill="rgb(220,202,26)" fg:x="73" fg:w="1"/><text x="12.1781%" y="895.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1 samples, 0.16%)</title><rect x="11.9281%" y="869" width="0.1634%" height="15" fill="rgb(233,132,38)" fg:x="73" fg:w="1"/><text x="12.1781%" y="879.50"></text></g><g><title>s4::processing_loop::recv_many_chan (43 samples, 7.03%)</title><rect x="5.2288%" y="933" width="7.0261%" height="15" fill="rgb(253,70,6)" fg:x="32" fg:w="43"/><text x="5.4788%" y="943.50">s4::proce..</text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.16%)</title><rect x="12.0915%" y="917" width="0.1634%" height="15" fill="rgb(217,126,36)" fg:x="74" fg:w="1"/><text x="12.3415%" y="927.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove (1 samples, 0.16%)</title><rect x="12.2549%" y="933" width="0.1634%" height="15" fill="rgb(224,108,5)" fg:x="75" fg:w="1"/><text x="12.5049%" y="943.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove_entry (1 samples, 0.16%)</title><rect x="12.2549%" y="917" width="0.1634%" height="15" fill="rgb(245,136,18)" fg:x="75" fg:w="1"/><text x="12.5049%" y="927.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::remove_entry (1 samples, 0.16%)</title><rect x="12.2549%" y="901" width="0.1634%" height="15" fill="rgb(227,63,43)" fg:x="75" fg:w="1"/><text x="12.5049%" y="911.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::remove_kv (1 samples, 0.16%)</title><rect x="12.2549%" y="885" width="0.1634%" height="15" fill="rgb(211,181,27)" fg:x="75" fg:w="1"/><text x="12.5049%" y="895.50"></text></g><g><title>s4::processing_loop (70 samples, 11.44%)</title><rect x="1.1438%" y="949" width="11.4379%" height="15" fill="rgb(233,182,14)" fg:x="7" fg:w="70"/><text x="1.3938%" y="959.50">s4::processing_lo..</text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.16%)</title><rect x="12.4183%" y="933" width="0.1634%" height="15" fill="rgb(217,126,36)" fg:x="76" fg:w="1"/><text x="12.6683%" y="943.50"></text></g><g><title>s4::string_wdhms_to_duration (1 samples, 0.16%)</title><rect x="12.5817%" y="933" width="0.1634%" height="15" fill="rgb(237,135,26)" fg:x="77" fg:w="1"/><text x="12.8317%" y="943.50"></text></g><g><title>&lt;s4::REGEX_DUR_OFFSET as core::ops::deref::Deref&gt;::deref (1 samples, 0.16%)</title><rect x="12.5817%" y="917" width="0.1634%" height="15" fill="rgb(239,209,23)" fg:x="77" fg:w="1"/><text x="12.8317%" y="927.50"></text></g><g><title>&lt;s4::REGEX_DUR_OFFSET as core::ops::deref::Deref&gt;::deref::__stability (1 samples, 0.16%)</title><rect x="12.5817%" y="901" width="0.1634%" height="15" fill="rgb(223,204,38)" fg:x="77" fg:w="1"/><text x="12.8317%" y="911.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (1 samples, 0.16%)</title><rect x="12.5817%" y="885" width="0.1634%" height="15" fill="rgb(235,175,8)" fg:x="77" fg:w="1"/><text x="12.8317%" y="895.50"></text></g><g><title>std::sync::once::Once::call_once (1 samples, 0.16%)</title><rect x="12.5817%" y="869" width="0.1634%" height="15" fill="rgb(247,17,47)" fg:x="77" fg:w="1"/><text x="12.8317%" y="879.50"></text></g><g><title>std::sys_common::once::futex::Once::call (1 samples, 0.16%)</title><rect x="12.5817%" y="853" width="0.1634%" height="15" fill="rgb(246,168,49)" fg:x="77" fg:w="1"/><text x="12.8317%" y="863.50"></text></g><g><title>std::sync::once::Once::call_once::{{closure}} (1 samples, 0.16%)</title><rect x="12.5817%" y="837" width="0.1634%" height="15" fill="rgb(237,63,35)" fg:x="77" fg:w="1"/><text x="12.8317%" y="847.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}} (1 samples, 0.16%)</title><rect x="12.5817%" y="821" width="0.1634%" height="15" fill="rgb(238,7,51)" fg:x="77" fg:w="1"/><text x="12.8317%" y="831.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.16%)</title><rect x="12.5817%" y="805" width="0.1634%" height="15" fill="rgb(210,80,10)" fg:x="77" fg:w="1"/><text x="12.8317%" y="815.50"></text></g><g><title>&lt;s4::REGEX_DUR_OFFSET as core::ops::deref::Deref&gt;::deref::__static_ref_initialize (1 samples, 0.16%)</title><rect x="12.5817%" y="789" width="0.1634%" height="15" fill="rgb(216,114,7)" fg:x="77" fg:w="1"/><text x="12.8317%" y="799.50"></text></g><g><title>regex::regex::string::Regex::new (1 samples, 0.16%)</title><rect x="12.5817%" y="773" width="0.1634%" height="15" fill="rgb(239,163,48)" fg:x="77" fg:w="1"/><text x="12.8317%" y="783.50"></text></g><g><title>regex::builders::string::RegexBuilder::build (1 samples, 0.16%)</title><rect x="12.5817%" y="757" width="0.1634%" height="15" fill="rgb(234,198,23)" fg:x="77" fg:w="1"/><text x="12.8317%" y="767.50"></text></g><g><title>regex::builders::Builder::build_one_string (1 samples, 0.16%)</title><rect x="12.5817%" y="741" width="0.1634%" height="15" fill="rgb(254,213,31)" fg:x="77" fg:w="1"/><text x="12.8317%" y="751.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (1 samples, 0.16%)</title><rect x="12.5817%" y="725" width="0.1634%" height="15" fill="rgb(212,33,22)" fg:x="77" fg:w="1"/><text x="12.8317%" y="735.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many (1 samples, 0.16%)</title><rect x="12.5817%" y="709" width="0.1634%" height="15" fill="rgb(236,25,32)" fg:x="77" fg:w="1"/><text x="12.8317%" y="719.50"></text></g><g><title>regex_syntax::ast::parse::Parser::parse (1 samples, 0.16%)</title><rect x="12.5817%" y="693" width="0.1634%" height="15" fill="rgb(225,142,35)" fg:x="77" fg:w="1"/><text x="12.8317%" y="703.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse (1 samples, 0.16%)</title><rect x="12.5817%" y="677" width="0.1634%" height="15" fill="rgb(254,60,41)" fg:x="77" fg:w="1"/><text x="12.8317%" y="687.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_with_comments (1 samples, 0.16%)</title><rect x="12.5817%" y="661" width="0.1634%" height="15" fill="rgb(223,9,23)" fg:x="77" fg:w="1"/><text x="12.8317%" y="671.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_uncounted_repetition (1 samples, 0.16%)</title><rect x="12.5817%" y="645" width="0.1634%" height="15" fill="rgb(240,49,15)" fg:x="77" fg:w="1"/><text x="12.8317%" y="655.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (73 samples, 11.93%)</title><rect x="0.9804%" y="1093" width="11.9281%" height="15" fill="rgb(219,15,13)" fg:x="6" fg:w="73"/><text x="1.2304%" y="1103.50">std::rt::lang_star..</text></g><g><title>std::panic::catch_unwind (72 samples, 11.76%)</title><rect x="1.1438%" y="1077" width="11.7647%" height="15" fill="rgb(216,75,8)" fg:x="7" fg:w="72"/><text x="1.3938%" y="1087.50">std::panic::catch..</text></g><g><title>std::panicking::try (72 samples, 11.76%)</title><rect x="1.1438%" y="1061" width="11.7647%" height="15" fill="rgb(212,61,29)" fg:x="7" fg:w="72"/><text x="1.3938%" y="1071.50">std::panicking::t..</text></g><g><title>std::panicking::try::do_call (72 samples, 11.76%)</title><rect x="1.1438%" y="1045" width="11.7647%" height="15" fill="rgb(232,162,46)" fg:x="7" fg:w="72"/><text x="1.3938%" y="1055.50">std::panicking::t..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (72 samples, 11.76%)</title><rect x="1.1438%" y="1029" width="11.7647%" height="15" fill="rgb(212,73,0)" fg:x="7" fg:w="72"/><text x="1.3938%" y="1039.50">core::ops::functi..</text></g><g><title>std::rt::lang_start::{{closure}} (72 samples, 11.76%)</title><rect x="1.1438%" y="1013" width="11.7647%" height="15" fill="rgb(213,78,9)" fg:x="7" fg:w="72"/><text x="1.3938%" y="1023.50">std::rt::lang_sta..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (72 samples, 11.76%)</title><rect x="1.1438%" y="997" width="11.7647%" height="15" fill="rgb(210,88,34)" fg:x="7" fg:w="72"/><text x="1.3938%" y="1007.50">std::sys_common::..</text></g><g><title>core::ops::function::FnOnce::call_once (72 samples, 11.76%)</title><rect x="1.1438%" y="981" width="11.7647%" height="15" fill="rgb(210,80,10)" fg:x="7" fg:w="72"/><text x="1.3938%" y="991.50">core::ops::functi..</text></g><g><title>s4::main (72 samples, 11.76%)</title><rect x="1.1438%" y="965" width="11.7647%" height="15" fill="rgb(221,151,31)" fg:x="7" fg:w="72"/><text x="1.3938%" y="975.50">s4::main</text></g><g><title>s4::cli_process_args (2 samples, 0.33%)</title><rect x="12.5817%" y="949" width="0.3268%" height="15" fill="rgb(217,50,44)" fg:x="77" fg:w="2"/><text x="12.8317%" y="959.50"></text></g><g><title>clap_builder::derive::Parser::parse (1 samples, 0.16%)</title><rect x="12.7451%" y="933" width="0.1634%" height="15" fill="rgb(252,59,20)" fg:x="78" fg:w="1"/><text x="12.9951%" y="943.50"></text></g><g><title>clap_builder::builder::command::Command::get_matches (1 samples, 0.16%)</title><rect x="12.7451%" y="917" width="0.1634%" height="15" fill="rgb(222,72,24)" fg:x="78" fg:w="1"/><text x="12.9951%" y="927.50"></text></g><g><title>clap_builder::builder::command::Command::get_matches_from (1 samples, 0.16%)</title><rect x="12.7451%" y="901" width="0.1634%" height="15" fill="rgb(236,115,49)" fg:x="78" fg:w="1"/><text x="12.9951%" y="911.50"></text></g><g><title>clap_builder::builder::command::Command::try_get_matches_from_mut (1 samples, 0.16%)</title><rect x="12.7451%" y="885" width="0.1634%" height="15" fill="rgb(205,157,11)" fg:x="78" fg:w="1"/><text x="12.9951%" y="895.50"></text></g><g><title>clap_builder::builder::command::Command::_do_parse (1 samples, 0.16%)</title><rect x="12.7451%" y="869" width="0.1634%" height="15" fill="rgb(242,199,15)" fg:x="78" fg:w="1"/><text x="12.9951%" y="879.50"></text></g><g><title>clap_builder::parser::parser::Parser::get_matches_with (1 samples, 0.16%)</title><rect x="12.7451%" y="853" width="0.1634%" height="15" fill="rgb(214,35,29)" fg:x="78" fg:w="1"/><text x="12.9951%" y="863.50"></text></g><g><title>clap_builder::parser::parser::Parser::add_defaults (1 samples, 0.16%)</title><rect x="12.7451%" y="837" width="0.1634%" height="15" fill="rgb(212,38,29)" fg:x="78" fg:w="1"/><text x="12.9951%" y="847.50"></text></g><g><title>clap_builder::parser::parser::Parser::add_default_value (1 samples, 0.16%)</title><rect x="12.7451%" y="821" width="0.1634%" height="15" fill="rgb(212,181,46)" fg:x="78" fg:w="1"/><text x="12.9951%" y="831.50"></text></g><g><title>clap_builder::parser::parser::Parser::react (1 samples, 0.16%)</title><rect x="12.7451%" y="805" width="0.1634%" height="15" fill="rgb(237,49,38)" fg:x="78" fg:w="1"/><text x="12.9951%" y="815.50"></text></g><g><title>clap_builder::parser::parser::Parser::push_arg_values (1 samples, 0.16%)</title><rect x="12.7451%" y="789" width="0.1634%" height="15" fill="rgb(246,200,2)" fg:x="78" fg:w="1"/><text x="12.9951%" y="799.50"></text></g><g><title>clap_builder::builder::value_parser::ValueParser::parse_ref (1 samples, 0.16%)</title><rect x="12.7451%" y="773" width="0.1634%" height="15" fill="rgb(208,127,30)" fg:x="78" fg:w="1"/><text x="12.9951%" y="783.50"></text></g><g><title>&lt;P as clap_builder::builder::value_parser::AnyValueParser&gt;::parse_ref (1 samples, 0.16%)</title><rect x="12.7451%" y="757" width="0.1634%" height="15" fill="rgb(232,35,24)" fg:x="78" fg:w="1"/><text x="12.9951%" y="767.50"></text></g><g><title>&lt;F as clap_builder::builder::value_parser::TypedValueParser&gt;::parse_ref (1 samples, 0.16%)</title><rect x="12.7451%" y="741" width="0.1634%" height="15" fill="rgb(224,58,27)" fg:x="78" fg:w="1"/><text x="12.9951%" y="751.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.16%)</title><rect x="12.7451%" y="725" width="0.1634%" height="15" fill="rgb(235,49,44)" fg:x="78" fg:w="1"/><text x="12.9951%" y="735.50"></text></g><g><title>s4::cli_process_tz_offset (1 samples, 0.16%)</title><rect x="12.7451%" y="709" width="0.1634%" height="15" fill="rgb(205,188,12)" fg:x="78" fg:w="1"/><text x="12.9951%" y="719.50"></text></g><g><title>s4lib::data::datetime::datetime_parse_from_str_w_tz (1 samples, 0.16%)</title><rect x="12.7451%" y="693" width="0.1634%" height="15" fill="rgb(221,137,9)" fg:x="78" fg:w="1"/><text x="12.9951%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="12.7451%" y="677" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="78" fg:w="1"/><text x="12.9951%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="12.7451%" y="661" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="78" fg:w="1"/><text x="12.9951%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="12.7451%" y="645" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="78" fg:w="1"/><text x="12.9951%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="12.7451%" y="629" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="78" fg:w="1"/><text x="12.9951%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="12.7451%" y="613" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="78" fg:w="1"/><text x="12.9951%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="12.7451%" y="597" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="78" fg:w="1"/><text x="12.9951%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="12.7451%" y="581" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="78" fg:w="1"/><text x="12.9951%" y="591.50"></text></g><g><title>_start (80 samples, 13.07%)</title><rect x="0.0000%" y="1221" width="13.0719%" height="15" fill="rgb(210,219,27)" fg:x="0" fg:w="80"/><text x="0.2500%" y="1231.50">_start</text></g><g><title>__libc_start_main_impl (74 samples, 12.09%)</title><rect x="0.9804%" y="1205" width="12.0915%" height="15" fill="rgb(228,214,28)" fg:x="6" fg:w="74"/><text x="1.2304%" y="1215.50">__libc_start_main_..</text></g><g><title>__libc_start_call_main (74 samples, 12.09%)</title><rect x="0.9804%" y="1189" width="12.0915%" height="15" fill="rgb(249,173,1)" fg:x="6" fg:w="74"/><text x="1.2304%" y="1199.50">__libc_start_call_..</text></g><g><title>main (74 samples, 12.09%)</title><rect x="0.9804%" y="1173" width="12.0915%" height="15" fill="rgb(238,28,47)" fg:x="6" fg:w="74"/><text x="1.2304%" y="1183.50">main</text></g><g><title>std::rt::lang_start_internal (74 samples, 12.09%)</title><rect x="0.9804%" y="1157" width="12.0915%" height="15" fill="rgb(240,177,54)" fg:x="6" fg:w="74"/><text x="1.2304%" y="1167.50">std::rt::lang_star..</text></g><g><title>std::panic::catch_unwind (74 samples, 12.09%)</title><rect x="0.9804%" y="1141" width="12.0915%" height="15" fill="rgb(216,75,8)" fg:x="6" fg:w="74"/><text x="1.2304%" y="1151.50">std::panic::catch_..</text></g><g><title>std::panicking::try (74 samples, 12.09%)</title><rect x="0.9804%" y="1125" width="12.0915%" height="15" fill="rgb(212,61,29)" fg:x="6" fg:w="74"/><text x="1.2304%" y="1135.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (74 samples, 12.09%)</title><rect x="0.9804%" y="1109" width="12.0915%" height="15" fill="rgb(232,162,46)" fg:x="6" fg:w="74"/><text x="1.2304%" y="1119.50">std::panicking::tr..</text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.16%)</title><rect x="12.9085%" y="1093" width="0.1634%" height="15" fill="rgb(210,80,10)" fg:x="79" fg:w="1"/><text x="13.1585%" y="1103.50"></text></g><g><title>std::rt::cleanup (1 samples, 0.16%)</title><rect x="12.9085%" y="1077" width="0.1634%" height="15" fill="rgb(228,61,1)" fg:x="79" fg:w="1"/><text x="13.1585%" y="1087.50"></text></g><g><title>std::sync::once::Once::call_once (1 samples, 0.16%)</title><rect x="12.9085%" y="1061" width="0.1634%" height="15" fill="rgb(247,17,47)" fg:x="79" fg:w="1"/><text x="13.1585%" y="1071.50"></text></g><g><title>std::sys_common::once::futex::Once::call (1 samples, 0.16%)</title><rect x="12.9085%" y="1045" width="0.1634%" height="15" fill="rgb(246,168,49)" fg:x="79" fg:w="1"/><text x="13.1585%" y="1055.50"></text></g><g><title>std::sync::once::Once::call_once::{{closure}} (1 samples, 0.16%)</title><rect x="12.9085%" y="1029" width="0.1634%" height="15" fill="rgb(237,63,35)" fg:x="79" fg:w="1"/><text x="13.1585%" y="1039.50"></text></g><g><title>std::rt::cleanup::{{closure}} (1 samples, 0.16%)</title><rect x="12.9085%" y="1013" width="0.1634%" height="15" fill="rgb(226,111,48)" fg:x="79" fg:w="1"/><text x="13.1585%" y="1023.50"></text></g><g><title>std::io::stdio::cleanup (1 samples, 0.16%)</title><rect x="12.9085%" y="997" width="0.1634%" height="15" fill="rgb(250,23,0)" fg:x="79" fg:w="1"/><text x="13.1585%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys_common::remutex::ReentrantMutexGuard&lt;core::cell::RefCell&lt;std::io::buffered::linewriter::LineWriter&lt;std::io::stdio::StdoutRaw&gt;&gt;&gt;&gt; (1 samples, 0.16%)</title><rect x="12.9085%" y="981" width="0.1634%" height="15" fill="rgb(219,160,9)" fg:x="79" fg:w="1"/><text x="13.1585%" y="991.50"></text></g><g><title>&lt;std::sys_common::remutex::ReentrantMutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.16%)</title><rect x="12.9085%" y="965" width="0.1634%" height="15" fill="rgb(222,122,6)" fg:x="79" fg:w="1"/><text x="13.1585%" y="975.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (1 samples, 0.16%)</title><rect x="12.9085%" y="949" width="0.1634%" height="15" fill="rgb(220,179,46)" fg:x="79" fg:w="1"/><text x="13.1585%" y="959.50"></text></g><g><title>_dl_start_user (1 samples, 0.16%)</title><rect x="13.0719%" y="1221" width="0.1634%" height="15" fill="rgb(209,38,44)" fg:x="80" fg:w="1"/><text x="13.3219%" y="1231.50"></text></g><g><title>_dl_init (1 samples, 0.16%)</title><rect x="13.0719%" y="1205" width="0.1634%" height="15" fill="rgb(250,227,16)" fg:x="80" fg:w="1"/><text x="13.3219%" y="1215.50"></text></g><g><title>call_init (1 samples, 0.16%)</title><rect x="13.0719%" y="1189" width="0.1634%" height="15" fill="rgb(221,131,47)" fg:x="80" fg:w="1"/><text x="13.3219%" y="1199.50"></text></g><g><title>call_init (1 samples, 0.16%)</title><rect x="13.0719%" y="1173" width="0.1634%" height="15" fill="rgb(221,131,47)" fg:x="80" fg:w="1"/><text x="13.3219%" y="1183.50"></text></g><g><title>__init_misc (1 samples, 0.16%)</title><rect x="13.0719%" y="1157" width="0.1634%" height="15" fill="rgb(236,108,33)" fg:x="80" fg:w="1"/><text x="13.3219%" y="1167.50"></text></g><g><title>__strrchr_evex (1 samples, 0.16%)</title><rect x="13.0719%" y="1141" width="0.1634%" height="15" fill="rgb(241,62,28)" fg:x="80" fg:w="1"/><text x="13.3219%" y="1151.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="13.0719%" y="1125" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="80" fg:w="1"/><text x="13.3219%" y="1135.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="13.0719%" y="1109" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="80" fg:w="1"/><text x="13.3219%" y="1119.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="13.0719%" y="1093" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="80" fg:w="1"/><text x="13.3219%" y="1103.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="13.0719%" y="1077" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="80" fg:w="1"/><text x="13.3219%" y="1087.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="13.0719%" y="1061" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="80" fg:w="1"/><text x="13.3219%" y="1071.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="13.0719%" y="1045" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="80" fg:w="1"/><text x="13.3219%" y="1055.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="13.0719%" y="1029" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="80" fg:w="1"/><text x="13.3219%" y="1039.50"></text></g><g><title>__clone3 (1 samples, 0.16%)</title><rect x="13.2353%" y="1221" width="0.1634%" height="15" fill="rgb(252,169,8)" fg:x="81" fg:w="1"/><text x="13.4853%" y="1231.50"></text></g><g><title>start_thread (1 samples, 0.16%)</title><rect x="13.2353%" y="1205" width="0.1634%" height="15" fill="rgb(209,148,13)" fg:x="81" fg:w="1"/><text x="13.4853%" y="1215.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.16%)</title><rect x="13.2353%" y="1189" width="0.1634%" height="15" fill="rgb(215,36,0)" fg:x="81" fg:w="1"/><text x="13.4853%" y="1199.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.16%)</title><rect x="13.2353%" y="1173" width="0.1634%" height="15" fill="rgb(228,202,16)" fg:x="81" fg:w="1"/><text x="13.4853%" y="1183.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.16%)</title><rect x="13.2353%" y="1157" width="0.1634%" height="15" fill="rgb(228,202,16)" fg:x="81" fg:w="1"/><text x="13.4853%" y="1167.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.16%)</title><rect x="13.2353%" y="1141" width="0.1634%" height="15" fill="rgb(218,104,40)" fg:x="81" fg:w="1"/><text x="13.4853%" y="1151.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (1 samples, 0.16%)</title><rect x="13.2353%" y="1125" width="0.1634%" height="15" fill="rgb(249,4,49)" fg:x="81" fg:w="1"/><text x="13.4853%" y="1135.50"></text></g><g><title>std::sys::unix::thread::Thread::set_name (1 samples, 0.16%)</title><rect x="13.2353%" y="1109" width="0.1634%" height="15" fill="rgb(250,171,46)" fg:x="81" fg:w="1"/><text x="13.4853%" y="1119.50"></text></g><g><title>std::sys::unix::thread::truncate_cstr (1 samples, 0.16%)</title><rect x="13.2353%" y="1093" width="0.1634%" height="15" fill="rgb(248,147,23)" fg:x="81" fg:w="1"/><text x="13.4853%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.16%)</title><rect x="13.2353%" y="1077" width="0.1634%" height="15" fill="rgb(209,26,30)" fg:x="81" fg:w="1"/><text x="13.4853%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.16%)</title><rect x="13.2353%" y="1061" width="0.1634%" height="15" fill="rgb(229,121,46)" fg:x="81" fg:w="1"/><text x="13.4853%" y="1071.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.16%)</title><rect x="13.2353%" y="1045" width="0.1634%" height="15" fill="rgb(221,172,50)" fg:x="81" fg:w="1"/><text x="13.4853%" y="1055.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.16%)</title><rect x="13.2353%" y="1029" width="0.1634%" height="15" fill="rgb(216,42,52)" fg:x="81" fg:w="1"/><text x="13.4853%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.16%)</title><rect x="13.2353%" y="1013" width="0.1634%" height="15" fill="rgb(249,207,12)" fg:x="81" fg:w="1"/><text x="13.4853%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.16%)</title><rect x="13.2353%" y="997" width="0.1634%" height="15" fill="rgb(224,194,14)" fg:x="81" fg:w="1"/><text x="13.4853%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.16%)</title><rect x="13.2353%" y="981" width="0.1634%" height="15" fill="rgb(227,204,5)" fg:x="81" fg:w="1"/><text x="13.4853%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.16%)</title><rect x="13.2353%" y="965" width="0.1634%" height="15" fill="rgb(231,114,21)" fg:x="81" fg:w="1"/><text x="13.4853%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.16%)</title><rect x="13.2353%" y="949" width="0.1634%" height="15" fill="rgb(238,209,2)" fg:x="81" fg:w="1"/><text x="13.4853%" y="959.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.16%)</title><rect x="13.2353%" y="933" width="0.1634%" height="15" fill="rgb(253,135,41)" fg:x="81" fg:w="1"/><text x="13.4853%" y="943.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.16%)</title><rect x="13.2353%" y="917" width="0.1634%" height="15" fill="rgb(206,112,53)" fg:x="81" fg:w="1"/><text x="13.4853%" y="927.50"></text></g><g><title>tcache_init (1 samples, 0.16%)</title><rect x="13.2353%" y="901" width="0.1634%" height="15" fill="rgb(245,6,4)" fg:x="81" fg:w="1"/><text x="13.4853%" y="911.50"></text></g><g><title>tcache_init (1 samples, 0.16%)</title><rect x="13.2353%" y="885" width="0.1634%" height="15" fill="rgb(245,6,4)" fg:x="81" fg:w="1"/><text x="13.4853%" y="895.50"></text></g><g><title>arena_get2 (1 samples, 0.16%)</title><rect x="13.2353%" y="869" width="0.1634%" height="15" fill="rgb(215,227,22)" fg:x="81" fg:w="1"/><text x="13.4853%" y="879.50"></text></g><g><title>arena_get2 (1 samples, 0.16%)</title><rect x="13.2353%" y="853" width="0.1634%" height="15" fill="rgb(215,227,22)" fg:x="81" fg:w="1"/><text x="13.4853%" y="863.50"></text></g><g><title>_int_new_arena (1 samples, 0.16%)</title><rect x="13.2353%" y="837" width="0.1634%" height="15" fill="rgb(207,136,22)" fg:x="81" fg:w="1"/><text x="13.4853%" y="847.50"></text></g><g><title>new_heap (1 samples, 0.16%)</title><rect x="13.2353%" y="821" width="0.1634%" height="15" fill="rgb(205,205,9)" fg:x="81" fg:w="1"/><text x="13.4853%" y="831.50"></text></g><g><title>alloc_new_heap (1 samples, 0.16%)</title><rect x="13.2353%" y="805" width="0.1634%" height="15" fill="rgb(234,86,40)" fg:x="81" fg:w="1"/><text x="13.4853%" y="815.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.16%)</title><rect x="13.2353%" y="789" width="0.1634%" height="15" fill="rgb(216,161,14)" fg:x="81" fg:w="1"/><text x="13.4853%" y="799.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.16%)</title><rect x="13.2353%" y="773" width="0.1634%" height="15" fill="rgb(216,161,14)" fg:x="81" fg:w="1"/><text x="13.4853%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="13.2353%" y="757" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="81" fg:w="1"/><text x="13.4853%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="13.2353%" y="741" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="81" fg:w="1"/><text x="13.4853%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="13.2353%" y="725" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="81" fg:w="1"/><text x="13.4853%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="13.2353%" y="709" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="81" fg:w="1"/><text x="13.4853%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="13.2353%" y="693" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="81" fg:w="1"/><text x="13.4853%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="13.2353%" y="677" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="81" fg:w="1"/><text x="13.4853%" y="687.50"></text></g><g><title>regex_automata::meta::strategy::ReverseInner::new (1 samples, 0.16%)</title><rect x="13.3987%" y="917" width="0.1634%" height="15" fill="rgb(225,146,32)" fg:x="82" fg:w="1"/><text x="13.6487%" y="927.50"></text></g><g><title>regex_automata::meta::reverse_inner::extract (1 samples, 0.16%)</title><rect x="13.3987%" y="901" width="0.1634%" height="15" fill="rgb(209,78,45)" fg:x="82" fg:w="1"/><text x="13.6487%" y="911.50"></text></g><g><title>regex_automata::meta::reverse_inner::top_concat (1 samples, 0.16%)</title><rect x="13.3987%" y="885" width="0.1634%" height="15" fill="rgb(211,177,54)" fg:x="82" fg:w="1"/><text x="13.6487%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.16%)</title><rect x="13.3987%" y="869" width="0.1634%" height="15" fill="rgb(222,213,17)" fg:x="82" fg:w="1"/><text x="13.6487%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.16%)</title><rect x="13.3987%" y="853" width="0.1634%" height="15" fill="rgb(247,137,3)" fg:x="82" fg:w="1"/><text x="13.6487%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.16%)</title><rect x="13.3987%" y="837" width="0.1634%" height="15" fill="rgb(227,158,43)" fg:x="82" fg:w="1"/><text x="13.6487%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.16%)</title><rect x="13.3987%" y="821" width="0.1634%" height="15" fill="rgb(232,14,28)" fg:x="82" fg:w="1"/><text x="13.6487%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.16%)</title><rect x="13.3987%" y="805" width="0.1634%" height="15" fill="rgb(232,211,42)" fg:x="82" fg:w="1"/><text x="13.6487%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.16%)</title><rect x="13.3987%" y="789" width="0.1634%" height="15" fill="rgb(214,146,48)" fg:x="82" fg:w="1"/><text x="13.6487%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.16%)</title><rect x="13.3987%" y="773" width="0.1634%" height="15" fill="rgb(245,181,4)" fg:x="82" fg:w="1"/><text x="13.6487%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.16%)</title><rect x="13.3987%" y="757" width="0.1634%" height="15" fill="rgb(242,69,50)" fg:x="82" fg:w="1"/><text x="13.6487%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.16%)</title><rect x="13.3987%" y="741" width="0.1634%" height="15" fill="rgb(214,12,39)" fg:x="82" fg:w="1"/><text x="13.6487%" y="751.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.16%)</title><rect x="13.3987%" y="725" width="0.1634%" height="15" fill="rgb(253,112,1)" fg:x="82" fg:w="1"/><text x="13.6487%" y="735.50"></text></g><g><title>regex_automata::meta::reverse_inner::top_concat::{{closure}} (1 samples, 0.16%)</title><rect x="13.3987%" y="709" width="0.1634%" height="15" fill="rgb(215,49,37)" fg:x="82" fg:w="1"/><text x="13.6487%" y="719.50"></text></g><g><title>regex_automata::meta::reverse_inner::flatten (1 samples, 0.16%)</title><rect x="13.3987%" y="693" width="0.1634%" height="15" fill="rgb(250,32,35)" fg:x="82" fg:w="1"/><text x="13.6487%" y="703.50"></text></g><g><title>regex_automata::meta::reverse_inner::flatten (1 samples, 0.16%)</title><rect x="13.3987%" y="677" width="0.1634%" height="15" fill="rgb(250,32,35)" fg:x="82" fg:w="1"/><text x="13.6487%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.16%)</title><rect x="13.3987%" y="661" width="0.1634%" height="15" fill="rgb(222,213,17)" fg:x="82" fg:w="1"/><text x="13.6487%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.16%)</title><rect x="13.3987%" y="645" width="0.1634%" height="15" fill="rgb(247,137,3)" fg:x="82" fg:w="1"/><text x="13.6487%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.16%)</title><rect x="13.3987%" y="629" width="0.1634%" height="15" fill="rgb(227,158,43)" fg:x="82" fg:w="1"/><text x="13.6487%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.16%)</title><rect x="13.3987%" y="613" width="0.1634%" height="15" fill="rgb(232,14,28)" fg:x="82" fg:w="1"/><text x="13.6487%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.16%)</title><rect x="13.3987%" y="597" width="0.1634%" height="15" fill="rgb(232,211,42)" fg:x="82" fg:w="1"/><text x="13.6487%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.16%)</title><rect x="13.3987%" y="581" width="0.1634%" height="15" fill="rgb(214,146,48)" fg:x="82" fg:w="1"/><text x="13.6487%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.16%)</title><rect x="13.3987%" y="565" width="0.1634%" height="15" fill="rgb(245,181,4)" fg:x="82" fg:w="1"/><text x="13.6487%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.16%)</title><rect x="13.3987%" y="549" width="0.1634%" height="15" fill="rgb(242,69,50)" fg:x="82" fg:w="1"/><text x="13.6487%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.16%)</title><rect x="13.3987%" y="533" width="0.1634%" height="15" fill="rgb(214,12,39)" fg:x="82" fg:w="1"/><text x="13.6487%" y="543.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.16%)</title><rect x="13.3987%" y="517" width="0.1634%" height="15" fill="rgb(253,112,1)" fg:x="82" fg:w="1"/><text x="13.6487%" y="527.50"></text></g><g><title>regex_automata::meta::reverse_inner::flatten::{{closure}} (1 samples, 0.16%)</title><rect x="13.3987%" y="501" width="0.1634%" height="15" fill="rgb(239,98,19)" fg:x="82" fg:w="1"/><text x="13.6487%" y="511.50"></text></g><g><title>regex_automata::meta::reverse_inner::flatten (1 samples, 0.16%)</title><rect x="13.3987%" y="485" width="0.1634%" height="15" fill="rgb(250,32,35)" fg:x="82" fg:w="1"/><text x="13.6487%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.16%)</title><rect x="13.3987%" y="469" width="0.1634%" height="15" fill="rgb(222,213,17)" fg:x="82" fg:w="1"/><text x="13.6487%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.16%)</title><rect x="13.3987%" y="453" width="0.1634%" height="15" fill="rgb(247,137,3)" fg:x="82" fg:w="1"/><text x="13.6487%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.16%)</title><rect x="13.3987%" y="437" width="0.1634%" height="15" fill="rgb(227,158,43)" fg:x="82" fg:w="1"/><text x="13.6487%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.16%)</title><rect x="13.3987%" y="421" width="0.1634%" height="15" fill="rgb(232,14,28)" fg:x="82" fg:w="1"/><text x="13.6487%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.16%)</title><rect x="13.3987%" y="405" width="0.1634%" height="15" fill="rgb(232,211,42)" fg:x="82" fg:w="1"/><text x="13.6487%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.16%)</title><rect x="13.3987%" y="389" width="0.1634%" height="15" fill="rgb(214,146,48)" fg:x="82" fg:w="1"/><text x="13.6487%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.16%)</title><rect x="13.3987%" y="373" width="0.1634%" height="15" fill="rgb(245,181,4)" fg:x="82" fg:w="1"/><text x="13.6487%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.16%)</title><rect x="13.3987%" y="357" width="0.1634%" height="15" fill="rgb(242,69,50)" fg:x="82" fg:w="1"/><text x="13.6487%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.16%)</title><rect x="13.3987%" y="341" width="0.1634%" height="15" fill="rgb(214,12,39)" fg:x="82" fg:w="1"/><text x="13.6487%" y="351.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.16%)</title><rect x="13.3987%" y="325" width="0.1634%" height="15" fill="rgb(253,112,1)" fg:x="82" fg:w="1"/><text x="13.6487%" y="335.50"></text></g><g><title>regex_automata::meta::reverse_inner::flatten::{{closure}} (1 samples, 0.16%)</title><rect x="13.3987%" y="309" width="0.1634%" height="15" fill="rgb(239,98,19)" fg:x="82" fg:w="1"/><text x="13.6487%" y="319.50"></text></g><g><title>regex_automata::meta::reverse_inner::flatten (1 samples, 0.16%)</title><rect x="13.3987%" y="293" width="0.1634%" height="15" fill="rgb(250,32,35)" fg:x="82" fg:w="1"/><text x="13.6487%" y="303.50"></text></g><g><title>regex_automata::meta::reverse_inner::flatten (1 samples, 0.16%)</title><rect x="13.3987%" y="277" width="0.1634%" height="15" fill="rgb(250,32,35)" fg:x="82" fg:w="1"/><text x="13.6487%" y="287.50"></text></g><g><title>&lt;regex_syntax::hir::Class as core::clone::Clone&gt;::clone (1 samples, 0.16%)</title><rect x="13.3987%" y="261" width="0.1634%" height="15" fill="rgb(215,213,34)" fg:x="82" fg:w="1"/><text x="13.6487%" y="271.50"></text></g><g><title>&lt;regex_syntax::hir::ClassUnicode as core::clone::Clone&gt;::clone (1 samples, 0.16%)</title><rect x="13.3987%" y="245" width="0.1634%" height="15" fill="rgb(208,186,11)" fg:x="82" fg:w="1"/><text x="13.6487%" y="255.50"></text></g><g><title>&lt;regex_syntax::hir::interval::IntervalSet&lt;I&gt; as core::clone::Clone&gt;::clone (1 samples, 0.16%)</title><rect x="13.3987%" y="229" width="0.1634%" height="15" fill="rgb(233,66,45)" fg:x="82" fg:w="1"/><text x="13.6487%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.16%)</title><rect x="13.3987%" y="213" width="0.1634%" height="15" fill="rgb(239,104,10)" fg:x="82" fg:w="1"/><text x="13.6487%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.16%)</title><rect x="13.3987%" y="197" width="0.1634%" height="15" fill="rgb(229,121,46)" fg:x="82" fg:w="1"/><text x="13.6487%" y="207.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.16%)</title><rect x="13.3987%" y="181" width="0.1634%" height="15" fill="rgb(221,172,50)" fg:x="82" fg:w="1"/><text x="13.6487%" y="191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.16%)</title><rect x="13.3987%" y="165" width="0.1634%" height="15" fill="rgb(216,42,52)" fg:x="82" fg:w="1"/><text x="13.6487%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.16%)</title><rect x="13.3987%" y="149" width="0.1634%" height="15" fill="rgb(249,207,12)" fg:x="82" fg:w="1"/><text x="13.6487%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.16%)</title><rect x="13.3987%" y="133" width="0.1634%" height="15" fill="rgb(224,194,14)" fg:x="82" fg:w="1"/><text x="13.6487%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.16%)</title><rect x="13.3987%" y="117" width="0.1634%" height="15" fill="rgb(227,204,5)" fg:x="82" fg:w="1"/><text x="13.6487%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.16%)</title><rect x="13.3987%" y="101" width="0.1634%" height="15" fill="rgb(231,114,21)" fg:x="82" fg:w="1"/><text x="13.6487%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.16%)</title><rect x="13.3987%" y="85" width="0.1634%" height="15" fill="rgb(238,209,2)" fg:x="82" fg:w="1"/><text x="13.6487%" y="95.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.16%)</title><rect x="13.3987%" y="69" width="0.1634%" height="15" fill="rgb(253,135,41)" fg:x="82" fg:w="1"/><text x="13.6487%" y="79.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.16%)</title><rect x="13.3987%" y="53" width="0.1634%" height="15" fill="rgb(206,112,53)" fg:x="82" fg:w="1"/><text x="13.6487%" y="63.50"></text></g><g><title>_int_malloc (1 samples, 0.16%)</title><rect x="13.3987%" y="37" width="0.1634%" height="15" fill="rgb(222,219,51)" fg:x="82" fg:w="1"/><text x="13.6487%" y="47.50"></text></g><g><title>s4::cli_process_args (2 samples, 0.33%)</title><rect x="13.3987%" y="1205" width="0.3268%" height="15" fill="rgb(217,50,44)" fg:x="82" fg:w="2"/><text x="13.6487%" y="1215.50"></text></g><g><title>s4::string_wdhms_to_duration (2 samples, 0.33%)</title><rect x="13.3987%" y="1189" width="0.3268%" height="15" fill="rgb(237,135,26)" fg:x="82" fg:w="2"/><text x="13.6487%" y="1199.50"></text></g><g><title>&lt;s4::REGEX_DUR_OFFSET as core::ops::deref::Deref&gt;::deref (2 samples, 0.33%)</title><rect x="13.3987%" y="1173" width="0.3268%" height="15" fill="rgb(239,209,23)" fg:x="82" fg:w="2"/><text x="13.6487%" y="1183.50"></text></g><g><title>&lt;s4::REGEX_DUR_OFFSET as core::ops::deref::Deref&gt;::deref::__stability (2 samples, 0.33%)</title><rect x="13.3987%" y="1157" width="0.3268%" height="15" fill="rgb(223,204,38)" fg:x="82" fg:w="2"/><text x="13.6487%" y="1167.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (2 samples, 0.33%)</title><rect x="13.3987%" y="1141" width="0.3268%" height="15" fill="rgb(235,175,8)" fg:x="82" fg:w="2"/><text x="13.6487%" y="1151.50"></text></g><g><title>std::sync::once::Once::call_once (2 samples, 0.33%)</title><rect x="13.3987%" y="1125" width="0.3268%" height="15" fill="rgb(247,17,47)" fg:x="82" fg:w="2"/><text x="13.6487%" y="1135.50"></text></g><g><title>std::sys_common::once::futex::Once::call (2 samples, 0.33%)</title><rect x="13.3987%" y="1109" width="0.3268%" height="15" fill="rgb(246,168,49)" fg:x="82" fg:w="2"/><text x="13.6487%" y="1119.50"></text></g><g><title>std::sync::once::Once::call_once::{{closure}} (2 samples, 0.33%)</title><rect x="13.3987%" y="1093" width="0.3268%" height="15" fill="rgb(237,63,35)" fg:x="82" fg:w="2"/><text x="13.6487%" y="1103.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}} (2 samples, 0.33%)</title><rect x="13.3987%" y="1077" width="0.3268%" height="15" fill="rgb(238,7,51)" fg:x="82" fg:w="2"/><text x="13.6487%" y="1087.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2 samples, 0.33%)</title><rect x="13.3987%" y="1061" width="0.3268%" height="15" fill="rgb(210,80,10)" fg:x="82" fg:w="2"/><text x="13.6487%" y="1071.50"></text></g><g><title>&lt;s4::REGEX_DUR_OFFSET as core::ops::deref::Deref&gt;::deref::__static_ref_initialize (2 samples, 0.33%)</title><rect x="13.3987%" y="1045" width="0.3268%" height="15" fill="rgb(216,114,7)" fg:x="82" fg:w="2"/><text x="13.6487%" y="1055.50"></text></g><g><title>regex::regex::string::Regex::new (2 samples, 0.33%)</title><rect x="13.3987%" y="1029" width="0.3268%" height="15" fill="rgb(239,163,48)" fg:x="82" fg:w="2"/><text x="13.6487%" y="1039.50"></text></g><g><title>regex::builders::string::RegexBuilder::build (2 samples, 0.33%)</title><rect x="13.3987%" y="1013" width="0.3268%" height="15" fill="rgb(234,198,23)" fg:x="82" fg:w="2"/><text x="13.6487%" y="1023.50"></text></g><g><title>regex::builders::Builder::build_one_string (2 samples, 0.33%)</title><rect x="13.3987%" y="997" width="0.3268%" height="15" fill="rgb(254,213,31)" fg:x="82" fg:w="2"/><text x="13.6487%" y="1007.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (2 samples, 0.33%)</title><rect x="13.3987%" y="981" width="0.3268%" height="15" fill="rgb(212,33,22)" fg:x="82" fg:w="2"/><text x="13.6487%" y="991.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many (2 samples, 0.33%)</title><rect x="13.3987%" y="965" width="0.3268%" height="15" fill="rgb(236,25,32)" fg:x="82" fg:w="2"/><text x="13.6487%" y="975.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (2 samples, 0.33%)</title><rect x="13.3987%" y="949" width="0.3268%" height="15" fill="rgb(250,142,30)" fg:x="82" fg:w="2"/><text x="13.6487%" y="959.50"></text></g><g><title>regex_automata::meta::strategy::new (2 samples, 0.33%)</title><rect x="13.3987%" y="933" width="0.3268%" height="15" fill="rgb(243,171,22)" fg:x="82" fg:w="2"/><text x="13.6487%" y="943.50"></text></g><g><title>regex_automata::meta::strategy::Core::new (1 samples, 0.16%)</title><rect x="13.5621%" y="917" width="0.1634%" height="15" fill="rgb(222,69,27)" fg:x="83" fg:w="1"/><text x="13.8121%" y="927.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (1 samples, 0.16%)</title><rect x="13.5621%" y="901" width="0.1634%" height="15" fill="rgb(226,42,16)" fg:x="83" fg:w="1"/><text x="13.8121%" y="911.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (1 samples, 0.16%)</title><rect x="13.5621%" y="885" width="0.1634%" height="15" fill="rgb(242,129,17)" fg:x="83" fg:w="1"/><text x="13.8121%" y="895.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::build (1 samples, 0.16%)</title><rect x="13.5621%" y="869" width="0.1634%" height="15" fill="rgb(205,136,15)" fg:x="83" fg:w="1"/><text x="13.8121%" y="879.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::Inner::add (1 samples, 0.16%)</title><rect x="13.5621%" y="853" width="0.1634%" height="15" fill="rgb(212,0,0)" fg:x="83" fg:w="1"/><text x="13.8121%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.16%)</title><rect x="13.5621%" y="837" width="0.1634%" height="15" fill="rgb(241,229,15)" fg:x="83" fg:w="1"/><text x="13.8121%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.16%)</title><rect x="13.5621%" y="821" width="0.1634%" height="15" fill="rgb(254,103,39)" fg:x="83" fg:w="1"/><text x="13.8121%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.16%)</title><rect x="13.5621%" y="805" width="0.1634%" height="15" fill="rgb(254,53,35)" fg:x="83" fg:w="1"/><text x="13.8121%" y="815.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.16%)</title><rect x="13.5621%" y="789" width="0.1634%" height="15" fill="rgb(237,133,22)" fg:x="83" fg:w="1"/><text x="13.8121%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.16%)</title><rect x="13.5621%" y="773" width="0.1634%" height="15" fill="rgb(237,156,49)" fg:x="83" fg:w="1"/><text x="13.8121%" y="783.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.16%)</title><rect x="13.5621%" y="757" width="0.1634%" height="15" fill="rgb(214,150,36)" fg:x="83" fg:w="1"/><text x="13.8121%" y="767.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.16%)</title><rect x="13.5621%" y="741" width="0.1634%" height="15" fill="rgb(254,47,34)" fg:x="83" fg:w="1"/><text x="13.8121%" y="751.50"></text></g><g><title>__rust_realloc (1 samples, 0.16%)</title><rect x="13.5621%" y="725" width="0.1634%" height="15" fill="rgb(235,79,51)" fg:x="83" fg:w="1"/><text x="13.8121%" y="735.50"></text></g><g><title>regex_automata::meta::strategy::Core::new (1 samples, 0.16%)</title><rect x="13.7255%" y="1141" width="0.1634%" height="15" fill="rgb(222,69,27)" fg:x="84" fg:w="1"/><text x="13.9755%" y="1151.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (1 samples, 0.16%)</title><rect x="13.7255%" y="1125" width="0.1634%" height="15" fill="rgb(226,42,16)" fg:x="84" fg:w="1"/><text x="13.9755%" y="1135.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (1 samples, 0.16%)</title><rect x="13.7255%" y="1109" width="0.1634%" height="15" fill="rgb(242,129,17)" fg:x="84" fg:w="1"/><text x="13.9755%" y="1119.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (1 samples, 0.16%)</title><rect x="13.7255%" y="1093" width="0.1634%" height="15" fill="rgb(247,137,3)" fg:x="84" fg:w="1"/><text x="13.9755%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="13.7255%" y="1077" width="0.1634%" height="15" fill="rgb(214,109,53)" fg:x="84" fg:w="1"/><text x="13.9755%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.16%)</title><rect x="13.7255%" y="1061" width="0.1634%" height="15" fill="rgb(254,35,30)" fg:x="84" fg:w="1"/><text x="13.9755%" y="1071.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.16%)</title><rect x="13.7255%" y="1045" width="0.1634%" height="15" fill="rgb(226,169,23)" fg:x="84" fg:w="1"/><text x="13.9755%" y="1055.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile::{{closure}} (1 samples, 0.16%)</title><rect x="13.7255%" y="1029" width="0.1634%" height="15" fill="rgb(218,216,52)" fg:x="84" fg:w="1"/><text x="13.9755%" y="1039.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 0.16%)</title><rect x="13.7255%" y="1013" width="0.1634%" height="15" fill="rgb(235,200,16)" fg:x="84" fg:w="1"/><text x="13.9755%" y="1023.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.16%)</title><rect x="13.7255%" y="997" width="0.1634%" height="15" fill="rgb(213,34,18)" fg:x="84" fg:w="1"/><text x="13.9755%" y="1007.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (1 samples, 0.16%)</title><rect x="13.7255%" y="981" width="0.1634%" height="15" fill="rgb(210,105,37)" fg:x="84" fg:w="1"/><text x="13.9755%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="13.7255%" y="965" width="0.1634%" height="15" fill="rgb(214,109,53)" fg:x="84" fg:w="1"/><text x="13.9755%" y="975.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.16%)</title><rect x="13.7255%" y="949" width="0.1634%" height="15" fill="rgb(254,35,30)" fg:x="84" fg:w="1"/><text x="13.9755%" y="959.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.16%)</title><rect x="13.7255%" y="933" width="0.1634%" height="15" fill="rgb(226,169,23)" fg:x="84" fg:w="1"/><text x="13.9755%" y="943.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (1 samples, 0.16%)</title><rect x="13.7255%" y="917" width="0.1634%" height="15" fill="rgb(205,130,14)" fg:x="84" fg:w="1"/><text x="13.9755%" y="927.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_at_least (1 samples, 0.16%)</title><rect x="13.7255%" y="901" width="0.1634%" height="15" fill="rgb(238,57,7)" fg:x="84" fg:w="1"/><text x="13.9755%" y="911.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 0.16%)</title><rect x="13.7255%" y="885" width="0.1634%" height="15" fill="rgb(235,200,16)" fg:x="84" fg:w="1"/><text x="13.9755%" y="895.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.16%)</title><rect x="13.7255%" y="869" width="0.1634%" height="15" fill="rgb(213,34,18)" fg:x="84" fg:w="1"/><text x="13.9755%" y="879.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (1 samples, 0.16%)</title><rect x="13.7255%" y="853" width="0.1634%" height="15" fill="rgb(253,35,22)" fg:x="84" fg:w="1"/><text x="13.9755%" y="863.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (1 samples, 0.16%)</title><rect x="13.7255%" y="837" width="0.1634%" height="15" fill="rgb(247,137,3)" fg:x="84" fg:w="1"/><text x="13.9755%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="13.7255%" y="821" width="0.1634%" height="15" fill="rgb(214,109,53)" fg:x="84" fg:w="1"/><text x="13.9755%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.16%)</title><rect x="13.7255%" y="805" width="0.1634%" height="15" fill="rgb(254,35,30)" fg:x="84" fg:w="1"/><text x="13.9755%" y="815.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.16%)</title><rect x="13.7255%" y="789" width="0.1634%" height="15" fill="rgb(226,169,23)" fg:x="84" fg:w="1"/><text x="13.9755%" y="799.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice::{{closure}} (1 samples, 0.16%)</title><rect x="13.7255%" y="773" width="0.1634%" height="15" fill="rgb(223,145,12)" fg:x="84" fg:w="1"/><text x="13.9755%" y="783.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 0.16%)</title><rect x="13.7255%" y="757" width="0.1634%" height="15" fill="rgb(235,200,16)" fg:x="84" fg:w="1"/><text x="13.9755%" y="767.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.16%)</title><rect x="13.7255%" y="741" width="0.1634%" height="15" fill="rgb(213,34,18)" fg:x="84" fg:w="1"/><text x="13.9755%" y="751.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (1 samples, 0.16%)</title><rect x="13.7255%" y="725" width="0.1634%" height="15" fill="rgb(210,105,37)" fg:x="84" fg:w="1"/><text x="13.9755%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="13.7255%" y="709" width="0.1634%" height="15" fill="rgb(214,109,53)" fg:x="84" fg:w="1"/><text x="13.9755%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.16%)</title><rect x="13.7255%" y="693" width="0.1634%" height="15" fill="rgb(254,35,30)" fg:x="84" fg:w="1"/><text x="13.9755%" y="703.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.16%)</title><rect x="13.7255%" y="677" width="0.1634%" height="15" fill="rgb(226,169,23)" fg:x="84" fg:w="1"/><text x="13.9755%" y="687.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (1 samples, 0.16%)</title><rect x="13.7255%" y="661" width="0.1634%" height="15" fill="rgb(205,130,14)" fg:x="84" fg:w="1"/><text x="13.9755%" y="671.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_at_least (1 samples, 0.16%)</title><rect x="13.7255%" y="645" width="0.1634%" height="15" fill="rgb(238,57,7)" fg:x="84" fg:w="1"/><text x="13.9755%" y="655.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.16%)</title><rect x="13.7255%" y="629" width="0.1634%" height="15" fill="rgb(213,34,18)" fg:x="84" fg:w="1"/><text x="13.9755%" y="639.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class (1 samples, 0.16%)</title><rect x="13.7255%" y="613" width="0.1634%" height="15" fill="rgb(246,38,12)" fg:x="84" fg:w="1"/><text x="13.9755%" y="623.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::new (1 samples, 0.16%)</title><rect x="13.7255%" y="597" width="0.1634%" height="15" fill="rgb(211,200,20)" fg:x="84" fg:w="1"/><text x="13.9755%" y="607.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8State::clear (1 samples, 0.16%)</title><rect x="13.7255%" y="581" width="0.1634%" height="15" fill="rgb(241,127,0)" fg:x="84" fg:w="1"/><text x="13.9755%" y="591.50"></text></g><g><title>regex_automata::nfa::thompson::map::Utf8BoundedMap::clear (1 samples, 0.16%)</title><rect x="13.7255%" y="565" width="0.1634%" height="15" fill="rgb(207,86,25)" fg:x="84" fg:w="1"/><text x="13.9755%" y="575.50"></text></g><g><title>alloc::vec::from_elem (1 samples, 0.16%)</title><rect x="13.7255%" y="549" width="0.1634%" height="15" fill="rgb(208,109,54)" fg:x="84" fg:w="1"/><text x="13.9755%" y="559.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1 samples, 0.16%)</title><rect x="13.7255%" y="533" width="0.1634%" height="15" fill="rgb(228,177,24)" fg:x="84" fg:w="1"/><text x="13.9755%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (1 samples, 0.16%)</title><rect x="13.7255%" y="517" width="0.1634%" height="15" fill="rgb(216,52,5)" fg:x="84" fg:w="1"/><text x="13.9755%" y="527.50"></text></g><g><title>core::ptr::write (1 samples, 0.16%)</title><rect x="13.7255%" y="501" width="0.1634%" height="15" fill="rgb(209,143,44)" fg:x="84" fg:w="1"/><text x="13.9755%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="13.7255%" y="485" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="84" fg:w="1"/><text x="13.9755%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="13.7255%" y="469" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="84" fg:w="1"/><text x="13.9755%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="13.7255%" y="453" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="84" fg:w="1"/><text x="13.9755%" y="463.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (2 samples, 0.33%)</title><rect x="13.7255%" y="1205" width="0.3268%" height="15" fill="rgb(212,33,22)" fg:x="84" fg:w="2"/><text x="13.9755%" y="1215.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many (2 samples, 0.33%)</title><rect x="13.7255%" y="1189" width="0.3268%" height="15" fill="rgb(236,25,32)" fg:x="84" fg:w="2"/><text x="13.9755%" y="1199.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (2 samples, 0.33%)</title><rect x="13.7255%" y="1173" width="0.3268%" height="15" fill="rgb(250,142,30)" fg:x="84" fg:w="2"/><text x="13.9755%" y="1183.50"></text></g><g><title>regex_automata::meta::strategy::new (2 samples, 0.33%)</title><rect x="13.7255%" y="1157" width="0.3268%" height="15" fill="rgb(243,171,22)" fg:x="84" fg:w="2"/><text x="13.9755%" y="1167.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.16%)</title><rect x="13.8889%" y="1141" width="0.1634%" height="15" fill="rgb(225,8,7)" fg:x="85" fg:w="1"/><text x="14.1389%" y="1151.50"></text></g><g><title>regex_automata::meta::strategy::new::{{closure}} (1 samples, 0.16%)</title><rect x="13.8889%" y="1125" width="0.1634%" height="15" fill="rgb(238,100,15)" fg:x="85" fg:w="1"/><text x="14.1389%" y="1135.50"></text></g><g><title>regex_automata::util::prefilter::Prefilter::new (1 samples, 0.16%)</title><rect x="13.8889%" y="1109" width="0.1634%" height="15" fill="rgb(227,199,27)" fg:x="85" fg:w="1"/><text x="14.1389%" y="1119.50"></text></g><g><title>regex_automata::util::prefilter::Choice::new (1 samples, 0.16%)</title><rect x="13.8889%" y="1093" width="0.1634%" height="15" fill="rgb(243,64,33)" fg:x="85" fg:w="1"/><text x="14.1389%" y="1103.50"></text></g><g><title>regex_automata::util::prefilter::teddy::Teddy::new (1 samples, 0.16%)</title><rect x="13.8889%" y="1077" width="0.1634%" height="15" fill="rgb(207,155,0)" fg:x="85" fg:w="1"/><text x="14.1389%" y="1087.50"></text></g><g><title>aho_corasick::dfa::Builder::build (1 samples, 0.16%)</title><rect x="13.8889%" y="1061" width="0.1634%" height="15" fill="rgb(212,91,25)" fg:x="85" fg:w="1"/><text x="14.1389%" y="1071.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Builder::build (1 samples, 0.16%)</title><rect x="13.8889%" y="1045" width="0.1634%" height="15" fill="rgb(235,33,22)" fg:x="85" fg:w="1"/><text x="14.1389%" y="1055.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Compiler::compile (1 samples, 0.16%)</title><rect x="13.8889%" y="1029" width="0.1634%" height="15" fill="rgb(253,203,15)" fg:x="85" fg:w="1"/><text x="14.1389%" y="1039.50"></text></g><g><title>aho_corasick::util::alphabet::ByteClassSet::byte_classes (1 samples, 0.16%)</title><rect x="13.8889%" y="1013" width="0.1634%" height="15" fill="rgb(206,94,23)" fg:x="85" fg:w="1"/><text x="14.1389%" y="1023.50"></text></g><g><title>aho_corasick::util::alphabet::ByteSet::contains (1 samples, 0.16%)</title><rect x="13.8889%" y="997" width="0.1634%" height="15" fill="rgb(235,156,8)" fg:x="85" fg:w="1"/><text x="14.1389%" y="1007.50"></text></g><g><title>[unknown] (5 samples, 0.82%)</title><rect x="13.3987%" y="1221" width="0.8170%" height="15" fill="rgb(227,28,50)" fg:x="82" fg:w="5"/><text x="13.6487%" y="1231.50"></text></g><g><title>&lt;s4::CLI_Args as clap_builder::derive::Args&gt;::augment_args (1 samples, 0.16%)</title><rect x="14.0523%" y="1205" width="0.1634%" height="15" fill="rgb(230,145,47)" fg:x="86" fg:w="1"/><text x="14.3023%" y="1215.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.16%)</title><rect x="14.0523%" y="1189" width="0.1634%" height="15" fill="rgb(206,165,10)" fg:x="86" fg:w="1"/><text x="14.3023%" y="1199.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (1 samples, 0.16%)</title><rect x="14.0523%" y="1173" width="0.1634%" height="15" fill="rgb(213,107,40)" fg:x="86" fg:w="1"/><text x="14.3023%" y="1183.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (1 samples, 0.16%)</title><rect x="14.0523%" y="1157" width="0.1634%" height="15" fill="rgb(225,89,12)" fg:x="86" fg:w="1"/><text x="14.3023%" y="1167.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.16%)</title><rect x="14.0523%" y="1141" width="0.1634%" height="15" fill="rgb(223,143,22)" fg:x="86" fg:w="1"/><text x="14.3023%" y="1151.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.16%)</title><rect x="14.0523%" y="1125" width="0.1634%" height="15" fill="rgb(216,218,52)" fg:x="86" fg:w="1"/><text x="14.3023%" y="1135.50"></text></g><g><title>once_cell::imp::initialize_or_wait (1 samples, 0.16%)</title><rect x="14.0523%" y="1109" width="0.1634%" height="15" fill="rgb(247,128,5)" fg:x="86" fg:w="1"/><text x="14.3023%" y="1119.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.16%)</title><rect x="14.0523%" y="1093" width="0.1634%" height="15" fill="rgb(225,224,16)" fg:x="86" fg:w="1"/><text x="14.3023%" y="1103.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (1 samples, 0.16%)</title><rect x="14.0523%" y="1077" width="0.1634%" height="15" fill="rgb(237,110,11)" fg:x="86" fg:w="1"/><text x="14.3023%" y="1087.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (1 samples, 0.16%)</title><rect x="14.0523%" y="1061" width="0.1634%" height="15" fill="rgb(253,34,22)" fg:x="86" fg:w="1"/><text x="14.3023%" y="1071.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force::{{closure}} (1 samples, 0.16%)</title><rect x="14.0523%" y="1045" width="0.1634%" height="15" fill="rgb(211,30,54)" fg:x="86" fg:w="1"/><text x="14.3023%" y="1055.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.16%)</title><rect x="14.0523%" y="1029" width="0.1634%" height="15" fill="rgb(210,80,10)" fg:x="86" fg:w="1"/><text x="14.3023%" y="1039.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.16%)</title><rect x="14.0523%" y="1013" width="0.1634%" height="15" fill="rgb(210,80,10)" fg:x="86" fg:w="1"/><text x="14.3023%" y="1023.50"></text></g><g><title>&lt;s4::CLI_Args as clap_builder::derive::Args&gt;::augment_args::DEFAULT_VALUE::{{closure}} (1 samples, 0.16%)</title><rect x="14.0523%" y="997" width="0.1634%" height="15" fill="rgb(211,191,16)" fg:x="86" fg:w="1"/><text x="14.3023%" y="1007.50"></text></g><g><title>&lt;s4::LOCAL_NOW_OFFSET as core::ops::deref::Deref&gt;::deref (1 samples, 0.16%)</title><rect x="14.0523%" y="981" width="0.1634%" height="15" fill="rgb(224,211,37)" fg:x="86" fg:w="1"/><text x="14.3023%" y="991.50"></text></g><g><title>&lt;s4::LOCAL_NOW_OFFSET as core::ops::deref::Deref&gt;::deref::__stability (1 samples, 0.16%)</title><rect x="14.0523%" y="965" width="0.1634%" height="15" fill="rgb(214,139,35)" fg:x="86" fg:w="1"/><text x="14.3023%" y="975.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (1 samples, 0.16%)</title><rect x="14.0523%" y="949" width="0.1634%" height="15" fill="rgb(235,175,8)" fg:x="86" fg:w="1"/><text x="14.3023%" y="959.50"></text></g><g><title>std::sync::once::Once::call_once (1 samples, 0.16%)</title><rect x="14.0523%" y="933" width="0.1634%" height="15" fill="rgb(247,17,47)" fg:x="86" fg:w="1"/><text x="14.3023%" y="943.50"></text></g><g><title>std::sys_common::once::futex::Once::call (1 samples, 0.16%)</title><rect x="14.0523%" y="917" width="0.1634%" height="15" fill="rgb(246,168,49)" fg:x="86" fg:w="1"/><text x="14.3023%" y="927.50"></text></g><g><title>std::sync::once::Once::call_once::{{closure}} (1 samples, 0.16%)</title><rect x="14.0523%" y="901" width="0.1634%" height="15" fill="rgb(237,63,35)" fg:x="86" fg:w="1"/><text x="14.3023%" y="911.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}} (1 samples, 0.16%)</title><rect x="14.0523%" y="885" width="0.1634%" height="15" fill="rgb(238,7,51)" fg:x="86" fg:w="1"/><text x="14.3023%" y="895.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.16%)</title><rect x="14.0523%" y="869" width="0.1634%" height="15" fill="rgb(210,80,10)" fg:x="86" fg:w="1"/><text x="14.3023%" y="879.50"></text></g><g><title>&lt;s4::LOCAL_NOW_OFFSET as core::ops::deref::Deref&gt;::deref::__static_ref_initialize (1 samples, 0.16%)</title><rect x="14.0523%" y="853" width="0.1634%" height="15" fill="rgb(246,217,27)" fg:x="86" fg:w="1"/><text x="14.3023%" y="863.50"></text></g><g><title>&lt;s4::LOCAL_NOW as core::ops::deref::Deref&gt;::deref (1 samples, 0.16%)</title><rect x="14.0523%" y="837" width="0.1634%" height="15" fill="rgb(251,224,11)" fg:x="86" fg:w="1"/><text x="14.3023%" y="847.50"></text></g><g><title>&lt;s4::LOCAL_NOW as core::ops::deref::Deref&gt;::deref::__stability (1 samples, 0.16%)</title><rect x="14.0523%" y="821" width="0.1634%" height="15" fill="rgb(220,103,38)" fg:x="86" fg:w="1"/><text x="14.3023%" y="831.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (1 samples, 0.16%)</title><rect x="14.0523%" y="805" width="0.1634%" height="15" fill="rgb(235,175,8)" fg:x="86" fg:w="1"/><text x="14.3023%" y="815.50"></text></g><g><title>std::sync::once::Once::call_once (1 samples, 0.16%)</title><rect x="14.0523%" y="789" width="0.1634%" height="15" fill="rgb(247,17,47)" fg:x="86" fg:w="1"/><text x="14.3023%" y="799.50"></text></g><g><title>std::sys_common::once::futex::Once::call (1 samples, 0.16%)</title><rect x="14.0523%" y="773" width="0.1634%" height="15" fill="rgb(246,168,49)" fg:x="86" fg:w="1"/><text x="14.3023%" y="783.50"></text></g><g><title>std::sync::once::Once::call_once::{{closure}} (1 samples, 0.16%)</title><rect x="14.0523%" y="757" width="0.1634%" height="15" fill="rgb(237,63,35)" fg:x="86" fg:w="1"/><text x="14.3023%" y="767.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}} (1 samples, 0.16%)</title><rect x="14.0523%" y="741" width="0.1634%" height="15" fill="rgb(238,7,51)" fg:x="86" fg:w="1"/><text x="14.3023%" y="751.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.16%)</title><rect x="14.0523%" y="725" width="0.1634%" height="15" fill="rgb(210,80,10)" fg:x="86" fg:w="1"/><text x="14.3023%" y="735.50"></text></g><g><title>&lt;s4::LOCAL_NOW as core::ops::deref::Deref&gt;::deref::__static_ref_initialize (1 samples, 0.16%)</title><rect x="14.0523%" y="709" width="0.1634%" height="15" fill="rgb(241,128,21)" fg:x="86" fg:w="1"/><text x="14.3023%" y="719.50"></text></g><g><title>&lt;chrono::datetime::DateTime&lt;chrono::offset::local::Local&gt; as core::convert::From&lt;chrono::datetime::DateTime&lt;chrono::offset::utc::Utc&gt;&gt;&gt;::from (1 samples, 0.16%)</title><rect x="14.0523%" y="693" width="0.1634%" height="15" fill="rgb(252,121,40)" fg:x="86" fg:w="1"/><text x="14.3023%" y="703.50"></text></g><g><title>chrono::datetime::DateTime&lt;Tz&gt;::with_timezone (1 samples, 0.16%)</title><rect x="14.0523%" y="677" width="0.1634%" height="15" fill="rgb(249,199,23)" fg:x="86" fg:w="1"/><text x="14.3023%" y="687.50"></text></g><g><title>chrono::offset::TimeZone::from_utc_datetime (1 samples, 0.16%)</title><rect x="14.0523%" y="661" width="0.1634%" height="15" fill="rgb(254,6,10)" fg:x="86" fg:w="1"/><text x="14.3023%" y="671.50"></text></g><g><title>&lt;chrono::offset::local::Local as chrono::offset::TimeZone&gt;::offset_from_utc_datetime (1 samples, 0.16%)</title><rect x="14.0523%" y="645" width="0.1634%" height="15" fill="rgb(250,102,39)" fg:x="86" fg:w="1"/><text x="14.3023%" y="655.50"></text></g><g><title>chrono::offset::local::inner::offset_from_utc_datetime (1 samples, 0.16%)</title><rect x="14.0523%" y="629" width="0.1634%" height="15" fill="rgb(215,209,39)" fg:x="86" fg:w="1"/><text x="14.3023%" y="639.50"></text></g><g><title>chrono::offset::local::inner::offset (1 samples, 0.16%)</title><rect x="14.0523%" y="613" width="0.1634%" height="15" fill="rgb(209,2,12)" fg:x="86" fg:w="1"/><text x="14.3023%" y="623.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.16%)</title><rect x="14.0523%" y="597" width="0.1634%" height="15" fill="rgb(228,156,48)" fg:x="86" fg:w="1"/><text x="14.3023%" y="607.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.16%)</title><rect x="14.0523%" y="581" width="0.1634%" height="15" fill="rgb(235,136,14)" fg:x="86" fg:w="1"/><text x="14.3023%" y="591.50"></text></g><g><title>chrono::offset::local::inner::offset::{{closure}} (1 samples, 0.16%)</title><rect x="14.0523%" y="565" width="0.1634%" height="15" fill="rgb(205,20,21)" fg:x="86" fg:w="1"/><text x="14.3023%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.16%)</title><rect x="14.0523%" y="549" width="0.1634%" height="15" fill="rgb(223,226,32)" fg:x="86" fg:w="1"/><text x="14.3023%" y="559.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.16%)</title><rect x="14.0523%" y="533" width="0.1634%" height="15" fill="rgb(210,80,10)" fg:x="86" fg:w="1"/><text x="14.3023%" y="543.50"></text></g><g><title>&lt;chrono::offset::local::inner::Cache as core::default::Default&gt;::default (1 samples, 0.16%)</title><rect x="14.0523%" y="517" width="0.1634%" height="15" fill="rgb(206,98,42)" fg:x="86" fg:w="1"/><text x="14.3023%" y="527.50"></text></g><g><title>chrono::offset::local::inner::current_zone (1 samples, 0.16%)</title><rect x="14.0523%" y="501" width="0.1634%" height="15" fill="rgb(249,132,40)" fg:x="86" fg:w="1"/><text x="14.3023%" y="511.50"></text></g><g><title>chrono::offset::local::tz_info::timezone::TimeZone::local (1 samples, 0.16%)</title><rect x="14.0523%" y="485" width="0.1634%" height="15" fill="rgb(246,134,52)" fg:x="86" fg:w="1"/><text x="14.3023%" y="495.50"></text></g><g><title>chrono::offset::local::tz_info::timezone::TimeZone::from_posix_tz (1 samples, 0.16%)</title><rect x="14.0523%" y="469" width="0.1634%" height="15" fill="rgb(223,0,42)" fg:x="86" fg:w="1"/><text x="14.3023%" y="479.50"></text></g><g><title>std::fs::read (1 samples, 0.16%)</title><rect x="14.0523%" y="453" width="0.1634%" height="15" fill="rgb(251,229,13)" fg:x="86" fg:w="1"/><text x="14.3023%" y="463.50"></text></g><g><title>std::fs::read::inner (1 samples, 0.16%)</title><rect x="14.0523%" y="437" width="0.1634%" height="15" fill="rgb(209,156,5)" fg:x="86" fg:w="1"/><text x="14.3023%" y="447.50"></text></g><g><title>std::fs::File::open (1 samples, 0.16%)</title><rect x="14.0523%" y="421" width="0.1634%" height="15" fill="rgb(245,199,24)" fg:x="86" fg:w="1"/><text x="14.3023%" y="431.50"></text></g><g><title>std::fs::OpenOptions::open (1 samples, 0.16%)</title><rect x="14.0523%" y="405" width="0.1634%" height="15" fill="rgb(214,64,25)" fg:x="86" fg:w="1"/><text x="14.3023%" y="415.50"></text></g><g><title>std::fs::OpenOptions::_open (1 samples, 0.16%)</title><rect x="14.0523%" y="389" width="0.1634%" height="15" fill="rgb(226,1,37)" fg:x="86" fg:w="1"/><text x="14.3023%" y="399.50"></text></g><g><title>std::sys::unix::fs::File::open (1 samples, 0.16%)</title><rect x="14.0523%" y="373" width="0.1634%" height="15" fill="rgb(220,21,1)" fg:x="86" fg:w="1"/><text x="14.3023%" y="383.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (1 samples, 0.16%)</title><rect x="14.0523%" y="357" width="0.1634%" height="15" fill="rgb(226,122,51)" fg:x="86" fg:w="1"/><text x="14.3023%" y="367.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.16%)</title><rect x="14.0523%" y="341" width="0.1634%" height="15" fill="rgb(239,63,35)" fg:x="86" fg:w="1"/><text x="14.3023%" y="351.50"></text></g><g><title>std::sys::unix::fs::File::open::{{closure}} (1 samples, 0.16%)</title><rect x="14.0523%" y="325" width="0.1634%" height="15" fill="rgb(243,15,24)" fg:x="86" fg:w="1"/><text x="14.3023%" y="335.50"></text></g><g><title>std::sys::unix::fs::File::open_c (1 samples, 0.16%)</title><rect x="14.0523%" y="309" width="0.1634%" height="15" fill="rgb(253,73,50)" fg:x="86" fg:w="1"/><text x="14.3023%" y="319.50"></text></g><g><title>std::sys::unix::cvt_r (1 samples, 0.16%)</title><rect x="14.0523%" y="293" width="0.1634%" height="15" fill="rgb(247,2,44)" fg:x="86" fg:w="1"/><text x="14.3023%" y="303.50"></text></g><g><title>std::sys::unix::fs::File::open_c::{{closure}} (1 samples, 0.16%)</title><rect x="14.0523%" y="277" width="0.1634%" height="15" fill="rgb(251,72,33)" fg:x="86" fg:w="1"/><text x="14.3023%" y="287.50"></text></g><g><title>__libc_open64 (1 samples, 0.16%)</title><rect x="14.0523%" y="261" width="0.1634%" height="15" fill="rgb(225,39,31)" fg:x="86" fg:w="1"/><text x="14.3023%" y="271.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="14.0523%" y="245" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="86" fg:w="1"/><text x="14.3023%" y="255.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="14.0523%" y="229" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="86" fg:w="1"/><text x="14.3023%" y="239.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="14.0523%" y="213" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="86" fg:w="1"/><text x="14.3023%" y="223.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="14.0523%" y="197" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="86" fg:w="1"/><text x="14.3023%" y="207.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="14.0523%" y="181" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="86" fg:w="1"/><text x="14.3023%" y="191.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="14.0523%" y="165" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="86" fg:w="1"/><text x="14.3023%" y="175.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="14.0523%" y="149" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="86" fg:w="1"/><text x="14.3023%" y="159.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="14.2157%" y="1013" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="87" fg:w="1"/><text x="14.4657%" y="1023.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="14.2157%" y="997" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="87" fg:w="1"/><text x="14.4657%" y="1007.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.49%)</title><rect x="14.2157%" y="1029" width="0.4902%" height="15" fill="rgb(210,204,4)" fg:x="87" fg:w="3"/><text x="14.4657%" y="1039.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 1.14%)</title><rect x="14.2157%" y="1045" width="1.1438%" height="15" fill="rgb(210,204,4)" fg:x="87" fg:w="7"/><text x="14.4657%" y="1055.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 1.31%)</title><rect x="14.2157%" y="1061" width="1.3072%" height="15" fill="rgb(210,204,4)" fg:x="87" fg:w="8"/><text x="14.4657%" y="1071.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 1.80%)</title><rect x="14.2157%" y="1077" width="1.7974%" height="15" fill="rgb(210,204,4)" fg:x="87" fg:w="11"/><text x="14.4657%" y="1087.50">[..</text></g><g><title>[[kernel.kallsyms]] (13 samples, 2.12%)</title><rect x="14.2157%" y="1125" width="2.1242%" height="15" fill="rgb(210,204,4)" fg:x="87" fg:w="13"/><text x="14.4657%" y="1135.50">[..</text></g><g><title>[[kernel.kallsyms]] (13 samples, 2.12%)</title><rect x="14.2157%" y="1109" width="2.1242%" height="15" fill="rgb(210,204,4)" fg:x="87" fg:w="13"/><text x="14.4657%" y="1119.50">[..</text></g><g><title>[[kernel.kallsyms]] (13 samples, 2.12%)</title><rect x="14.2157%" y="1093" width="2.1242%" height="15" fill="rgb(210,204,4)" fg:x="87" fg:w="13"/><text x="14.4657%" y="1103.50">[..</text></g><g><title>[[kernel.kallsyms]] (14 samples, 2.29%)</title><rect x="14.2157%" y="1157" width="2.2876%" height="15" fill="rgb(210,204,4)" fg:x="87" fg:w="14"/><text x="14.4657%" y="1167.50">[..</text></g><g><title>[[kernel.kallsyms]] (14 samples, 2.29%)</title><rect x="14.2157%" y="1141" width="2.2876%" height="15" fill="rgb(210,204,4)" fg:x="87" fg:w="14"/><text x="14.4657%" y="1151.50">[..</text></g><g><title>[[kernel.kallsyms]] (24 samples, 3.92%)</title><rect x="14.2157%" y="1205" width="3.9216%" height="15" fill="rgb(210,204,4)" fg:x="87" fg:w="24"/><text x="14.4657%" y="1215.50">[[ke..</text></g><g><title>[[kernel.kallsyms]] (24 samples, 3.92%)</title><rect x="14.2157%" y="1189" width="3.9216%" height="15" fill="rgb(210,204,4)" fg:x="87" fg:w="24"/><text x="14.4657%" y="1199.50">[[ke..</text></g><g><title>[[kernel.kallsyms]] (24 samples, 3.92%)</title><rect x="14.2157%" y="1173" width="3.9216%" height="15" fill="rgb(210,204,4)" fg:x="87" fg:w="24"/><text x="14.4657%" y="1183.50">[[ke..</text></g><g><title>s4 (112 samples, 18.30%)</title><rect x="0.0000%" y="1237" width="18.3007%" height="15" fill="rgb(230,7,27)" fg:x="0" fg:w="112"/><text x="0.2500%" y="1247.50">s4</text></g><g><title>[[kernel.kallsyms]] (25 samples, 4.08%)</title><rect x="14.2157%" y="1221" width="4.0850%" height="15" fill="rgb(210,204,4)" fg:x="87" fg:w="25"/><text x="14.4657%" y="1231.50">[[ke..</text></g><g><title>perf-exec (13 samples, 2.12%)</title><rect x="18.3007%" y="1237" width="2.1242%" height="15" fill="rgb(250,111,27)" fg:x="112" fg:w="13"/><text x="18.5507%" y="1247.50">p..</text></g><g><title>[[kernel.kallsyms]] (13 samples, 2.12%)</title><rect x="18.3007%" y="1221" width="2.1242%" height="15" fill="rgb(210,204,4)" fg:x="112" fg:w="13"/><text x="18.5507%" y="1231.50">[..</text></g><g><title>[[kernel.kallsyms]] (13 samples, 2.12%)</title><rect x="18.3007%" y="1205" width="2.1242%" height="15" fill="rgb(210,204,4)" fg:x="112" fg:w="13"/><text x="18.5507%" y="1215.50">[..</text></g><g><title>[[kernel.kallsyms]] (13 samples, 2.12%)</title><rect x="18.3007%" y="1189" width="2.1242%" height="15" fill="rgb(210,204,4)" fg:x="112" fg:w="13"/><text x="18.5507%" y="1199.50">[..</text></g><g><title>[[kernel.kallsyms]] (13 samples, 2.12%)</title><rect x="18.3007%" y="1173" width="2.1242%" height="15" fill="rgb(210,204,4)" fg:x="112" fg:w="13"/><text x="18.5507%" y="1183.50">[..</text></g><g><title>[[kernel.kallsyms]] (13 samples, 2.12%)</title><rect x="18.3007%" y="1157" width="2.1242%" height="15" fill="rgb(210,204,4)" fg:x="112" fg:w="13"/><text x="18.5507%" y="1167.50">[..</text></g><g><title>[[kernel.kallsyms]] (13 samples, 2.12%)</title><rect x="18.3007%" y="1141" width="2.1242%" height="15" fill="rgb(210,204,4)" fg:x="112" fg:w="13"/><text x="18.5507%" y="1151.50">[..</text></g><g><title>[[kernel.kallsyms]] (13 samples, 2.12%)</title><rect x="18.3007%" y="1125" width="2.1242%" height="15" fill="rgb(210,204,4)" fg:x="112" fg:w="13"/><text x="18.5507%" y="1135.50">[..</text></g><g><title>[[kernel.kallsyms]] (13 samples, 2.12%)</title><rect x="18.3007%" y="1109" width="2.1242%" height="15" fill="rgb(210,204,4)" fg:x="112" fg:w="13"/><text x="18.5507%" y="1119.50">[..</text></g><g><title>[[kernel.kallsyms]] (13 samples, 2.12%)</title><rect x="18.3007%" y="1093" width="2.1242%" height="15" fill="rgb(210,204,4)" fg:x="112" fg:w="13"/><text x="18.5507%" y="1103.50">[..</text></g><g><title>&lt;regex_automata::meta::strategy::ReverseInner as regex_automata::meta::strategy::Strategy&gt;::create_cache (1 samples, 0.16%)</title><rect x="20.4248%" y="661" width="0.1634%" height="15" fill="rgb(245,40,36)" fg:x="125" fg:w="1"/><text x="20.6748%" y="671.50"></text></g><g><title>&lt;regex_automata::meta::strategy::Core as regex_automata::meta::strategy::Strategy&gt;::create_cache (1 samples, 0.16%)</title><rect x="20.4248%" y="645" width="0.1634%" height="15" fill="rgb(250,2,44)" fg:x="125" fg:w="1"/><text x="20.6748%" y="655.50"></text></g><g><title>regex_automata::meta::wrappers::Hybrid::create_cache (1 samples, 0.16%)</title><rect x="20.4248%" y="629" width="0.1634%" height="15" fill="rgb(221,96,53)" fg:x="125" fg:w="1"/><text x="20.6748%" y="639.50"></text></g><g><title>regex_automata::meta::wrappers::HybridCache::new (1 samples, 0.16%)</title><rect x="20.4248%" y="613" width="0.1634%" height="15" fill="rgb(228,162,6)" fg:x="125" fg:w="1"/><text x="20.6748%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.16%)</title><rect x="20.4248%" y="597" width="0.1634%" height="15" fill="rgb(254,35,30)" fg:x="125" fg:w="1"/><text x="20.6748%" y="607.50"></text></g><g><title>regex_automata::meta::wrappers::HybridCache::new::{{closure}} (1 samples, 0.16%)</title><rect x="20.4248%" y="581" width="0.1634%" height="15" fill="rgb(247,196,35)" fg:x="125" fg:w="1"/><text x="20.6748%" y="591.50"></text></g><g><title>regex_automata::hybrid::regex::Regex::create_cache (1 samples, 0.16%)</title><rect x="20.4248%" y="565" width="0.1634%" height="15" fill="rgb(224,197,49)" fg:x="125" fg:w="1"/><text x="20.6748%" y="575.50"></text></g><g><title>regex_automata::hybrid::regex::Cache::new (1 samples, 0.16%)</title><rect x="20.4248%" y="549" width="0.1634%" height="15" fill="rgb(245,87,50)" fg:x="125" fg:w="1"/><text x="20.6748%" y="559.50"></text></g><g><title>regex_automata::hybrid::dfa::Cache::new (1 samples, 0.16%)</title><rect x="20.4248%" y="533" width="0.1634%" height="15" fill="rgb(251,42,50)" fg:x="125" fg:w="1"/><text x="20.6748%" y="543.50"></text></g><g><title>regex_automata::util::sparse_set::SparseSets::new (1 samples, 0.16%)</title><rect x="20.4248%" y="517" width="0.1634%" height="15" fill="rgb(237,193,40)" fg:x="125" fg:w="1"/><text x="20.6748%" y="527.50"></text></g><g><title>regex_automata::util::sparse_set::SparseSet::new (1 samples, 0.16%)</title><rect x="20.4248%" y="501" width="0.1634%" height="15" fill="rgb(244,107,37)" fg:x="125" fg:w="1"/><text x="20.6748%" y="511.50"></text></g><g><title>regex_automata::util::sparse_set::SparseSet::resize (1 samples, 0.16%)</title><rect x="20.4248%" y="485" width="0.1634%" height="15" fill="rgb(219,206,13)" fg:x="125" fg:w="1"/><text x="20.6748%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (1 samples, 0.16%)</title><rect x="20.4248%" y="469" width="0.1634%" height="15" fill="rgb(249,199,35)" fg:x="125" fg:w="1"/><text x="20.6748%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (1 samples, 0.16%)</title><rect x="20.4248%" y="453" width="0.1634%" height="15" fill="rgb(216,52,5)" fg:x="125" fg:w="1"/><text x="20.6748%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.16%)</title><rect x="20.4248%" y="437" width="0.1634%" height="15" fill="rgb(212,159,3)" fg:x="125" fg:w="1"/><text x="20.6748%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.16%)</title><rect x="20.4248%" y="421" width="0.1634%" height="15" fill="rgb(231,142,39)" fg:x="125" fg:w="1"/><text x="20.6748%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.16%)</title><rect x="20.4248%" y="405" width="0.1634%" height="15" fill="rgb(249,2,22)" fg:x="125" fg:w="1"/><text x="20.6748%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.16%)</title><rect x="20.4248%" y="389" width="0.1634%" height="15" fill="rgb(254,53,35)" fg:x="125" fg:w="1"/><text x="20.6748%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.16%)</title><rect x="20.4248%" y="373" width="0.1634%" height="15" fill="rgb(237,133,22)" fg:x="125" fg:w="1"/><text x="20.6748%" y="383.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.16%)</title><rect x="20.4248%" y="357" width="0.1634%" height="15" fill="rgb(206,112,53)" fg:x="125" fg:w="1"/><text x="20.6748%" y="367.50"></text></g><g><title>tcache_get (1 samples, 0.16%)</title><rect x="20.4248%" y="341" width="0.1634%" height="15" fill="rgb(227,126,51)" fg:x="125" fg:w="1"/><text x="20.6748%" y="351.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="20.5882%" y="245" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="126" fg:w="1"/><text x="20.8382%" y="255.50"></text></g><g><title>regex_automata::util::sparse_set::SparseSet::resize (2 samples, 0.33%)</title><rect x="20.5882%" y="549" width="0.3268%" height="15" fill="rgb(219,206,13)" fg:x="126" fg:w="2"/><text x="20.8382%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (2 samples, 0.33%)</title><rect x="20.5882%" y="533" width="0.3268%" height="15" fill="rgb(249,199,35)" fg:x="126" fg:w="2"/><text x="20.8382%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (2 samples, 0.33%)</title><rect x="20.5882%" y="517" width="0.3268%" height="15" fill="rgb(216,52,5)" fg:x="126" fg:w="2"/><text x="20.8382%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.33%)</title><rect x="20.5882%" y="501" width="0.3268%" height="15" fill="rgb(212,159,3)" fg:x="126" fg:w="2"/><text x="20.8382%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.33%)</title><rect x="20.5882%" y="485" width="0.3268%" height="15" fill="rgb(231,142,39)" fg:x="126" fg:w="2"/><text x="20.8382%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.33%)</title><rect x="20.5882%" y="469" width="0.3268%" height="15" fill="rgb(249,2,22)" fg:x="126" fg:w="2"/><text x="20.8382%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.33%)</title><rect x="20.5882%" y="453" width="0.3268%" height="15" fill="rgb(254,53,35)" fg:x="126" fg:w="2"/><text x="20.8382%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.33%)</title><rect x="20.5882%" y="437" width="0.3268%" height="15" fill="rgb(237,133,22)" fg:x="126" fg:w="2"/><text x="20.8382%" y="447.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.33%)</title><rect x="20.5882%" y="421" width="0.3268%" height="15" fill="rgb(206,112,53)" fg:x="126" fg:w="2"/><text x="20.8382%" y="431.50"></text></g><g><title>_int_malloc (2 samples, 0.33%)</title><rect x="20.5882%" y="405" width="0.3268%" height="15" fill="rgb(222,219,51)" fg:x="126" fg:w="2"/><text x="20.8382%" y="415.50"></text></g><g><title>sysmalloc (2 samples, 0.33%)</title><rect x="20.5882%" y="389" width="0.3268%" height="15" fill="rgb(237,64,10)" fg:x="126" fg:w="2"/><text x="20.8382%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.33%)</title><rect x="20.5882%" y="373" width="0.3268%" height="15" fill="rgb(210,204,4)" fg:x="126" fg:w="2"/><text x="20.8382%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.33%)</title><rect x="20.5882%" y="357" width="0.3268%" height="15" fill="rgb(210,204,4)" fg:x="126" fg:w="2"/><text x="20.8382%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.33%)</title><rect x="20.5882%" y="341" width="0.3268%" height="15" fill="rgb(210,204,4)" fg:x="126" fg:w="2"/><text x="20.8382%" y="351.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.33%)</title><rect x="20.5882%" y="325" width="0.3268%" height="15" fill="rgb(210,204,4)" fg:x="126" fg:w="2"/><text x="20.8382%" y="335.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.33%)</title><rect x="20.5882%" y="309" width="0.3268%" height="15" fill="rgb(210,204,4)" fg:x="126" fg:w="2"/><text x="20.8382%" y="319.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.33%)</title><rect x="20.5882%" y="293" width="0.3268%" height="15" fill="rgb(210,204,4)" fg:x="126" fg:w="2"/><text x="20.8382%" y="303.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.33%)</title><rect x="20.5882%" y="277" width="0.3268%" height="15" fill="rgb(210,204,4)" fg:x="126" fg:w="2"/><text x="20.8382%" y="287.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.33%)</title><rect x="20.5882%" y="261" width="0.3268%" height="15" fill="rgb(210,204,4)" fg:x="126" fg:w="2"/><text x="20.8382%" y="271.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.49%)</title><rect x="20.9150%" y="469" width="0.4902%" height="15" fill="rgb(210,204,4)" fg:x="128" fg:w="3"/><text x="21.1650%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.49%)</title><rect x="20.9150%" y="453" width="0.4902%" height="15" fill="rgb(210,204,4)" fg:x="128" fg:w="3"/><text x="21.1650%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.49%)</title><rect x="20.9150%" y="437" width="0.4902%" height="15" fill="rgb(210,204,4)" fg:x="128" fg:w="3"/><text x="21.1650%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.49%)</title><rect x="20.9150%" y="421" width="0.4902%" height="15" fill="rgb(210,204,4)" fg:x="128" fg:w="3"/><text x="21.1650%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.49%)</title><rect x="20.9150%" y="405" width="0.4902%" height="15" fill="rgb(210,204,4)" fg:x="128" fg:w="3"/><text x="21.1650%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.49%)</title><rect x="20.9150%" y="389" width="0.4902%" height="15" fill="rgb(210,204,4)" fg:x="128" fg:w="3"/><text x="21.1650%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.49%)</title><rect x="20.9150%" y="373" width="0.4902%" height="15" fill="rgb(210,204,4)" fg:x="128" fg:w="3"/><text x="21.1650%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.49%)</title><rect x="20.9150%" y="357" width="0.4902%" height="15" fill="rgb(210,204,4)" fg:x="128" fg:w="3"/><text x="21.1650%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.49%)</title><rect x="20.9150%" y="341" width="0.4902%" height="15" fill="rgb(210,204,4)" fg:x="128" fg:w="3"/><text x="21.1650%" y="351.50"></text></g><g><title>core::ptr::write (6 samples, 0.98%)</title><rect x="20.9150%" y="501" width="0.9804%" height="15" fill="rgb(209,143,44)" fg:x="128" fg:w="6"/><text x="21.1650%" y="511.50"></text></g><g><title>__memset_avx512_unaligned_erms (6 samples, 0.98%)</title><rect x="20.9150%" y="485" width="0.9804%" height="15" fill="rgb(240,145,53)" fg:x="128" fg:w="6"/><text x="21.1650%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="21.8954%" y="245" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="134" fg:w="1"/><text x="22.1454%" y="255.50"></text></g><g><title>sysmalloc (2 samples, 0.33%)</title><rect x="21.8954%" y="389" width="0.3268%" height="15" fill="rgb(237,64,10)" fg:x="134" fg:w="2"/><text x="22.1454%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.33%)</title><rect x="21.8954%" y="373" width="0.3268%" height="15" fill="rgb(210,204,4)" fg:x="134" fg:w="2"/><text x="22.1454%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.33%)</title><rect x="21.8954%" y="357" width="0.3268%" height="15" fill="rgb(210,204,4)" fg:x="134" fg:w="2"/><text x="22.1454%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.33%)</title><rect x="21.8954%" y="341" width="0.3268%" height="15" fill="rgb(210,204,4)" fg:x="134" fg:w="2"/><text x="22.1454%" y="351.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.33%)</title><rect x="21.8954%" y="325" width="0.3268%" height="15" fill="rgb(210,204,4)" fg:x="134" fg:w="2"/><text x="22.1454%" y="335.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.33%)</title><rect x="21.8954%" y="309" width="0.3268%" height="15" fill="rgb(210,204,4)" fg:x="134" fg:w="2"/><text x="22.1454%" y="319.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.33%)</title><rect x="21.8954%" y="293" width="0.3268%" height="15" fill="rgb(210,204,4)" fg:x="134" fg:w="2"/><text x="22.1454%" y="303.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.33%)</title><rect x="21.8954%" y="277" width="0.3268%" height="15" fill="rgb(210,204,4)" fg:x="134" fg:w="2"/><text x="22.1454%" y="287.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.33%)</title><rect x="21.8954%" y="261" width="0.3268%" height="15" fill="rgb(210,204,4)" fg:x="134" fg:w="2"/><text x="22.1454%" y="271.50"></text></g><g><title>regex::regex::bytes::Regex::captures (12 samples, 1.96%)</title><rect x="20.4248%" y="821" width="1.9608%" height="15" fill="rgb(233,29,12)" fg:x="125" fg:w="12"/><text x="20.6748%" y="831.50">r..</text></g><g><title>regex::regex::bytes::Regex::captures_at (12 samples, 1.96%)</title><rect x="20.4248%" y="805" width="1.9608%" height="15" fill="rgb(207,96,18)" fg:x="125" fg:w="12"/><text x="20.6748%" y="815.50">r..</text></g><g><title>regex_automata::meta::regex::Regex::captures (12 samples, 1.96%)</title><rect x="20.4248%" y="789" width="1.9608%" height="15" fill="rgb(219,198,6)" fg:x="125" fg:w="12"/><text x="20.6748%" y="799.50">r..</text></g><g><title>regex_automata::meta::regex::Regex::search_captures (12 samples, 1.96%)</title><rect x="20.4248%" y="773" width="1.9608%" height="15" fill="rgb(212,211,21)" fg:x="125" fg:w="12"/><text x="20.6748%" y="783.50">r..</text></g><g><title>regex_automata::meta::regex::Regex::search_slots (12 samples, 1.96%)</title><rect x="20.4248%" y="757" width="1.9608%" height="15" fill="rgb(243,12,43)" fg:x="125" fg:w="12"/><text x="20.6748%" y="767.50">r..</text></g><g><title>regex_automata::util::pool::Pool&lt;T,F&gt;::get (12 samples, 1.96%)</title><rect x="20.4248%" y="741" width="1.9608%" height="15" fill="rgb(210,26,34)" fg:x="125" fg:w="12"/><text x="20.6748%" y="751.50">r..</text></g><g><title>regex_automata::util::pool::inner::Pool&lt;T,F&gt;::get (12 samples, 1.96%)</title><rect x="20.4248%" y="725" width="1.9608%" height="15" fill="rgb(245,192,35)" fg:x="125" fg:w="12"/><text x="20.6748%" y="735.50">r..</text></g><g><title>regex_automata::util::pool::inner::Pool&lt;T,F&gt;::get_slow (12 samples, 1.96%)</title><rect x="20.4248%" y="709" width="1.9608%" height="15" fill="rgb(239,82,48)" fg:x="125" fg:w="12"/><text x="20.6748%" y="719.50">r..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (12 samples, 1.96%)</title><rect x="20.4248%" y="693" width="1.9608%" height="15" fill="rgb(249,36,21)" fg:x="125" fg:w="12"/><text x="20.6748%" y="703.50">&lt;..</text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir::{{closure}} (12 samples, 1.96%)</title><rect x="20.4248%" y="677" width="1.9608%" height="15" fill="rgb(234,153,14)" fg:x="125" fg:w="12"/><text x="20.6748%" y="687.50">r..</text></g><g><title>&lt;regex_automata::meta::strategy::Core as regex_automata::meta::strategy::Strategy&gt;::create_cache (11 samples, 1.80%)</title><rect x="20.5882%" y="661" width="1.7974%" height="15" fill="rgb(250,2,44)" fg:x="126" fg:w="11"/><text x="20.8382%" y="671.50">&lt;..</text></g><g><title>regex_automata::meta::wrappers::PikeVM::create_cache (11 samples, 1.80%)</title><rect x="20.5882%" y="645" width="1.7974%" height="15" fill="rgb(217,147,1)" fg:x="126" fg:w="11"/><text x="20.8382%" y="655.50">r..</text></g><g><title>regex_automata::meta::wrappers::PikeVMCache::new (11 samples, 1.80%)</title><rect x="20.5882%" y="629" width="1.7974%" height="15" fill="rgb(211,6,33)" fg:x="126" fg:w="11"/><text x="20.8382%" y="639.50">r..</text></g><g><title>regex_automata::nfa::thompson::pikevm::PikeVM::create_cache (11 samples, 1.80%)</title><rect x="20.5882%" y="613" width="1.7974%" height="15" fill="rgb(211,33,34)" fg:x="126" fg:w="11"/><text x="20.8382%" y="623.50">r..</text></g><g><title>regex_automata::nfa::thompson::pikevm::Cache::new (11 samples, 1.80%)</title><rect x="20.5882%" y="597" width="1.7974%" height="15" fill="rgb(244,199,14)" fg:x="126" fg:w="11"/><text x="20.8382%" y="607.50">r..</text></g><g><title>regex_automata::nfa::thompson::pikevm::ActiveStates::new (11 samples, 1.80%)</title><rect x="20.5882%" y="581" width="1.7974%" height="15" fill="rgb(220,13,3)" fg:x="126" fg:w="11"/><text x="20.8382%" y="591.50">r..</text></g><g><title>regex_automata::nfa::thompson::pikevm::ActiveStates::reset (11 samples, 1.80%)</title><rect x="20.5882%" y="565" width="1.7974%" height="15" fill="rgb(243,194,33)" fg:x="126" fg:w="11"/><text x="20.8382%" y="575.50">r..</text></g><g><title>regex_automata::nfa::thompson::pikevm::SlotTable::reset (9 samples, 1.47%)</title><rect x="20.9150%" y="549" width="1.4706%" height="15" fill="rgb(226,221,20)" fg:x="128" fg:w="9"/><text x="21.1650%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (9 samples, 1.47%)</title><rect x="20.9150%" y="533" width="1.4706%" height="15" fill="rgb(249,199,35)" fg:x="128" fg:w="9"/><text x="21.1650%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (9 samples, 1.47%)</title><rect x="20.9150%" y="517" width="1.4706%" height="15" fill="rgb(216,52,5)" fg:x="128" fg:w="9"/><text x="21.1650%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.49%)</title><rect x="21.8954%" y="501" width="0.4902%" height="15" fill="rgb(212,159,3)" fg:x="134" fg:w="3"/><text x="22.1454%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.49%)</title><rect x="21.8954%" y="485" width="0.4902%" height="15" fill="rgb(231,142,39)" fg:x="134" fg:w="3"/><text x="22.1454%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.49%)</title><rect x="21.8954%" y="469" width="0.4902%" height="15" fill="rgb(249,2,22)" fg:x="134" fg:w="3"/><text x="22.1454%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.49%)</title><rect x="21.8954%" y="453" width="0.4902%" height="15" fill="rgb(254,53,35)" fg:x="134" fg:w="3"/><text x="22.1454%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.49%)</title><rect x="21.8954%" y="437" width="0.4902%" height="15" fill="rgb(237,133,22)" fg:x="134" fg:w="3"/><text x="22.1454%" y="447.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.49%)</title><rect x="21.8954%" y="421" width="0.4902%" height="15" fill="rgb(206,112,53)" fg:x="134" fg:w="3"/><text x="22.1454%" y="431.50"></text></g><g><title>_int_malloc (3 samples, 0.49%)</title><rect x="21.8954%" y="405" width="0.4902%" height="15" fill="rgb(222,219,51)" fg:x="134" fg:w="3"/><text x="22.1454%" y="415.50"></text></g><g><title>malloc_consolidate (2 samples, 0.33%)</title><rect x="22.3856%" y="149" width="0.3268%" height="15" fill="rgb(228,194,39)" fg:x="137" fg:w="2"/><text x="22.6356%" y="159.50"></text></g><g><title>regex::builders::bytes::RegexBuilder::new (3 samples, 0.49%)</title><rect x="22.3856%" y="661" width="0.4902%" height="15" fill="rgb(246,66,5)" fg:x="137" fg:w="3"/><text x="22.6356%" y="671.50"></text></g><g><title>regex::builders::Builder::new (3 samples, 0.49%)</title><rect x="22.3856%" y="645" width="0.4902%" height="15" fill="rgb(223,120,31)" fg:x="137" fg:w="3"/><text x="22.6356%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (3 samples, 0.49%)</title><rect x="22.3856%" y="629" width="0.4902%" height="15" fill="rgb(205,186,49)" fg:x="137" fg:w="3"/><text x="22.6356%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.49%)</title><rect x="22.3856%" y="613" width="0.4902%" height="15" fill="rgb(232,211,42)" fg:x="137" fg:w="3"/><text x="22.6356%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (3 samples, 0.49%)</title><rect x="22.3856%" y="597" width="0.4902%" height="15" fill="rgb(214,146,48)" fg:x="137" fg:w="3"/><text x="22.6356%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.49%)</title><rect x="22.3856%" y="581" width="0.4902%" height="15" fill="rgb(245,181,4)" fg:x="137" fg:w="3"/><text x="22.6356%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.49%)</title><rect x="22.3856%" y="565" width="0.4902%" height="15" fill="rgb(242,69,50)" fg:x="137" fg:w="3"/><text x="22.6356%" y="575.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.49%)</title><rect x="22.3856%" y="549" width="0.4902%" height="15" fill="rgb(238,117,12)" fg:x="137" fg:w="3"/><text x="22.6356%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::by_ref_sized::ByRefSized&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.49%)</title><rect x="22.3856%" y="533" width="0.4902%" height="15" fill="rgb(217,183,5)" fg:x="137" fg:w="3"/><text x="22.6356%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.49%)</title><rect x="22.3856%" y="517" width="0.4902%" height="15" fill="rgb(223,137,46)" fg:x="137" fg:w="3"/><text x="22.6356%" y="527.50"></text></g><g><title>&lt;core::const_closure::ConstFnMutClosure&lt;&amp;mut A,Function&gt; as core::ops::function::FnMut&lt;ClosureArguments&gt;&gt;::call_mut (3 samples, 0.49%)</title><rect x="22.3856%" y="501" width="0.4902%" height="15" fill="rgb(206,27,14)" fg:x="137" fg:w="3"/><text x="22.6356%" y="511.50"></text></g><g><title>core::ops::function::Fn::call (3 samples, 0.49%)</title><rect x="22.3856%" y="485" width="0.4902%" height="15" fill="rgb(235,49,44)" fg:x="137" fg:w="3"/><text x="22.6356%" y="495.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_2_imp (3 samples, 0.49%)</title><rect x="22.3856%" y="469" width="0.4902%" height="15" fill="rgb(252,20,41)" fg:x="137" fg:w="3"/><text x="22.6356%" y="479.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (3 samples, 0.49%)</title><rect x="22.3856%" y="453" width="0.4902%" height="15" fill="rgb(226,146,40)" fg:x="137" fg:w="3"/><text x="22.6356%" y="463.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3 samples, 0.49%)</title><rect x="22.3856%" y="437" width="0.4902%" height="15" fill="rgb(253,112,1)" fg:x="137" fg:w="3"/><text x="22.6356%" y="447.50"></text></g><g><title>regex::builders::Builder::new::{{closure}} (3 samples, 0.49%)</title><rect x="22.3856%" y="421" width="0.4902%" height="15" fill="rgb(240,154,24)" fg:x="137" fg:w="3"/><text x="22.6356%" y="431.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (3 samples, 0.49%)</title><rect x="22.3856%" y="405" width="0.4902%" height="15" fill="rgb(212,135,46)" fg:x="137" fg:w="3"/><text x="22.6356%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (3 samples, 0.49%)</title><rect x="22.3856%" y="389" width="0.4902%" height="15" fill="rgb(229,24,43)" fg:x="137" fg:w="3"/><text x="22.6356%" y="399.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (3 samples, 0.49%)</title><rect x="22.3856%" y="373" width="0.4902%" height="15" fill="rgb(240,68,32)" fg:x="137" fg:w="3"/><text x="22.6356%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (3 samples, 0.49%)</title><rect x="22.3856%" y="357" width="0.4902%" height="15" fill="rgb(212,75,49)" fg:x="137" fg:w="3"/><text x="22.6356%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.49%)</title><rect x="22.3856%" y="341" width="0.4902%" height="15" fill="rgb(209,26,30)" fg:x="137" fg:w="3"/><text x="22.6356%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.49%)</title><rect x="22.3856%" y="325" width="0.4902%" height="15" fill="rgb(229,121,46)" fg:x="137" fg:w="3"/><text x="22.6356%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.49%)</title><rect x="22.3856%" y="309" width="0.4902%" height="15" fill="rgb(221,172,50)" fg:x="137" fg:w="3"/><text x="22.6356%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.49%)</title><rect x="22.3856%" y="293" width="0.4902%" height="15" fill="rgb(216,42,52)" fg:x="137" fg:w="3"/><text x="22.6356%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.49%)</title><rect x="22.3856%" y="277" width="0.4902%" height="15" fill="rgb(249,207,12)" fg:x="137" fg:w="3"/><text x="22.6356%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.49%)</title><rect x="22.3856%" y="261" width="0.4902%" height="15" fill="rgb(224,194,14)" fg:x="137" fg:w="3"/><text x="22.6356%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.49%)</title><rect x="22.3856%" y="245" width="0.4902%" height="15" fill="rgb(227,204,5)" fg:x="137" fg:w="3"/><text x="22.6356%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.49%)</title><rect x="22.3856%" y="229" width="0.4902%" height="15" fill="rgb(231,114,21)" fg:x="137" fg:w="3"/><text x="22.6356%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.49%)</title><rect x="22.3856%" y="213" width="0.4902%" height="15" fill="rgb(238,209,2)" fg:x="137" fg:w="3"/><text x="22.6356%" y="223.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.49%)</title><rect x="22.3856%" y="197" width="0.4902%" height="15" fill="rgb(253,135,41)" fg:x="137" fg:w="3"/><text x="22.6356%" y="207.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.49%)</title><rect x="22.3856%" y="181" width="0.4902%" height="15" fill="rgb(206,112,53)" fg:x="137" fg:w="3"/><text x="22.6356%" y="191.50"></text></g><g><title>_int_malloc (3 samples, 0.49%)</title><rect x="22.3856%" y="165" width="0.4902%" height="15" fill="rgb(222,219,51)" fg:x="137" fg:w="3"/><text x="22.6356%" y="175.50"></text></g><g><title>regex_syntax::hir::translate::TranslatorBuilder::build (1 samples, 0.16%)</title><rect x="22.8758%" y="597" width="0.1634%" height="15" fill="rgb(226,152,38)" fg:x="140" fg:w="1"/><text x="23.1258%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.16%)</title><rect x="23.0392%" y="405" width="0.1634%" height="15" fill="rgb(214,20,35)" fg:x="141" fg:w="1"/><text x="23.2892%" y="415.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.16%)</title><rect x="23.0392%" y="389" width="0.1634%" height="15" fill="rgb(217,126,36)" fg:x="141" fg:w="1"/><text x="23.2892%" y="399.50"></text></g><g><title>regex_syntax::hir::ClassUnicode::union (2 samples, 0.33%)</title><rect x="23.0392%" y="485" width="0.3268%" height="15" fill="rgb(248,214,6)" fg:x="141" fg:w="2"/><text x="23.2892%" y="495.50"></text></g><g><title>regex_syntax::hir::interval::IntervalSet&lt;I&gt;::union (2 samples, 0.33%)</title><rect x="23.0392%" y="469" width="0.3268%" height="15" fill="rgb(248,161,48)" fg:x="141" fg:w="2"/><text x="23.2892%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (2 samples, 0.33%)</title><rect x="23.0392%" y="453" width="0.3268%" height="15" fill="rgb(226,167,9)" fg:x="141" fg:w="2"/><text x="23.2892%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.33%)</title><rect x="23.0392%" y="437" width="0.3268%" height="15" fill="rgb(224,207,30)" fg:x="141" fg:w="2"/><text x="23.2892%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.33%)</title><rect x="23.0392%" y="421" width="0.3268%" height="15" fill="rgb(251,49,54)" fg:x="141" fg:w="2"/><text x="23.2892%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.16%)</title><rect x="23.2026%" y="405" width="0.1634%" height="15" fill="rgb(212,159,3)" fg:x="142" fg:w="1"/><text x="23.4526%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.16%)</title><rect x="23.2026%" y="389" width="0.1634%" height="15" fill="rgb(231,142,39)" fg:x="142" fg:w="1"/><text x="23.4526%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.16%)</title><rect x="23.2026%" y="373" width="0.1634%" height="15" fill="rgb(249,2,22)" fg:x="142" fg:w="1"/><text x="23.4526%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.16%)</title><rect x="23.2026%" y="357" width="0.1634%" height="15" fill="rgb(254,53,35)" fg:x="142" fg:w="1"/><text x="23.4526%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.16%)</title><rect x="23.2026%" y="341" width="0.1634%" height="15" fill="rgb(237,133,22)" fg:x="142" fg:w="1"/><text x="23.4526%" y="351.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.16%)</title><rect x="23.2026%" y="325" width="0.1634%" height="15" fill="rgb(206,149,53)" fg:x="142" fg:w="1"/><text x="23.4526%" y="335.50"></text></g><g><title>regex_syntax::ast::visitor::HeapVisitor::induct (3 samples, 0.49%)</title><rect x="23.0392%" y="549" width="0.4902%" height="15" fill="rgb(220,131,54)" fg:x="141" fg:w="3"/><text x="23.2892%" y="559.50"></text></g><g><title>regex_syntax::ast::visitor::HeapVisitor::visit_class (3 samples, 0.49%)</title><rect x="23.0392%" y="533" width="0.4902%" height="15" fill="rgb(253,26,45)" fg:x="141" fg:w="3"/><text x="23.2892%" y="543.50"></text></g><g><title>regex_syntax::ast::visitor::HeapVisitor::visit_class_post (3 samples, 0.49%)</title><rect x="23.0392%" y="517" width="0.4902%" height="15" fill="rgb(236,134,51)" fg:x="141" fg:w="3"/><text x="23.2892%" y="527.50"></text></g><g><title>&lt;regex_syntax::hir::translate::TranslatorI as regex_syntax::ast::visitor::Visitor&gt;::visit_class_set_item_post (3 samples, 0.49%)</title><rect x="23.0392%" y="501" width="0.4902%" height="15" fill="rgb(209,145,6)" fg:x="141" fg:w="3"/><text x="23.2892%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.16%)</title><rect x="23.5294%" y="549" width="0.1634%" height="15" fill="rgb(241,229,15)" fg:x="144" fg:w="1"/><text x="23.7794%" y="559.50"></text></g><g><title>regex_syntax::hir::translate::TranslatorI::push (1 samples, 0.16%)</title><rect x="23.6928%" y="533" width="0.1634%" height="15" fill="rgb(222,136,12)" fg:x="145" fg:w="1"/><text x="23.9428%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.16%)</title><rect x="23.6928%" y="517" width="0.1634%" height="15" fill="rgb(241,229,15)" fg:x="145" fg:w="1"/><text x="23.9428%" y="527.50"></text></g><g><title>core::ptr::write (1 samples, 0.16%)</title><rect x="23.6928%" y="501" width="0.1634%" height="15" fill="rgb(209,143,44)" fg:x="145" fg:w="1"/><text x="23.9428%" y="511.50"></text></g><g><title>&lt;regex_syntax::hir::translate::TranslatorI as regex_syntax::ast::visitor::Visitor&gt;::visit_pre (2 samples, 0.33%)</title><rect x="23.6928%" y="549" width="0.3268%" height="15" fill="rgb(210,165,12)" fg:x="145" fg:w="2"/><text x="23.9428%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.16%)</title><rect x="24.0196%" y="517" width="0.1634%" height="15" fill="rgb(241,229,15)" fg:x="147" fg:w="1"/><text x="24.2696%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.16%)</title><rect x="24.0196%" y="501" width="0.1634%" height="15" fill="rgb(254,103,39)" fg:x="147" fg:w="1"/><text x="24.2696%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.16%)</title><rect x="24.0196%" y="485" width="0.1634%" height="15" fill="rgb(254,53,35)" fg:x="147" fg:w="1"/><text x="24.2696%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.16%)</title><rect x="24.0196%" y="469" width="0.1634%" height="15" fill="rgb(237,133,22)" fg:x="147" fg:w="1"/><text x="24.2696%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.16%)</title><rect x="24.0196%" y="453" width="0.1634%" height="15" fill="rgb(237,156,49)" fg:x="147" fg:w="1"/><text x="24.2696%" y="463.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.16%)</title><rect x="24.0196%" y="437" width="0.1634%" height="15" fill="rgb(214,150,36)" fg:x="147" fg:w="1"/><text x="24.2696%" y="447.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.16%)</title><rect x="24.0196%" y="421" width="0.1634%" height="15" fill="rgb(254,47,34)" fg:x="147" fg:w="1"/><text x="24.2696%" y="431.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.16%)</title><rect x="24.0196%" y="405" width="0.1634%" height="15" fill="rgb(254,73,4)" fg:x="147" fg:w="1"/><text x="24.2696%" y="415.50"></text></g><g><title>_int_realloc (1 samples, 0.16%)</title><rect x="24.0196%" y="389" width="0.1634%" height="15" fill="rgb(231,75,41)" fg:x="147" fg:w="1"/><text x="24.2696%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.16%)</title><rect x="24.1830%" y="469" width="0.1634%" height="15" fill="rgb(248,74,39)" fg:x="148" fg:w="1"/><text x="24.4330%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.16%)</title><rect x="24.1830%" y="453" width="0.1634%" height="15" fill="rgb(239,196,40)" fg:x="148" fg:w="1"/><text x="24.4330%" y="463.50"></text></g><g><title>regex_syntax::hir::translate::TranslatorI::push_char (3 samples, 0.49%)</title><rect x="24.0196%" y="533" width="0.4902%" height="15" fill="rgb(208,83,35)" fg:x="147" fg:w="3"/><text x="24.2696%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.33%)</title><rect x="24.1830%" y="517" width="0.3268%" height="15" fill="rgb(243,52,34)" fg:x="148" fg:w="2"/><text x="24.4330%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.33%)</title><rect x="24.1830%" y="501" width="0.3268%" height="15" fill="rgb(224,207,30)" fg:x="148" fg:w="2"/><text x="24.4330%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.33%)</title><rect x="24.1830%" y="485" width="0.3268%" height="15" fill="rgb(251,49,54)" fg:x="148" fg:w="2"/><text x="24.4330%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.16%)</title><rect x="24.3464%" y="469" width="0.1634%" height="15" fill="rgb(212,159,3)" fg:x="149" fg:w="1"/><text x="24.5964%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.16%)</title><rect x="24.3464%" y="453" width="0.1634%" height="15" fill="rgb(231,142,39)" fg:x="149" fg:w="1"/><text x="24.5964%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.16%)</title><rect x="24.3464%" y="437" width="0.1634%" height="15" fill="rgb(249,2,22)" fg:x="149" fg:w="1"/><text x="24.5964%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.16%)</title><rect x="24.3464%" y="421" width="0.1634%" height="15" fill="rgb(254,53,35)" fg:x="149" fg:w="1"/><text x="24.5964%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.16%)</title><rect x="24.3464%" y="405" width="0.1634%" height="15" fill="rgb(237,133,22)" fg:x="149" fg:w="1"/><text x="24.5964%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.16%)</title><rect x="24.3464%" y="389" width="0.1634%" height="15" fill="rgb(237,156,49)" fg:x="149" fg:w="1"/><text x="24.5964%" y="399.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.16%)</title><rect x="24.3464%" y="373" width="0.1634%" height="15" fill="rgb(214,150,36)" fg:x="149" fg:w="1"/><text x="24.5964%" y="383.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.16%)</title><rect x="24.3464%" y="357" width="0.1634%" height="15" fill="rgb(254,47,34)" fg:x="149" fg:w="1"/><text x="24.5964%" y="367.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.16%)</title><rect x="24.3464%" y="341" width="0.1634%" height="15" fill="rgb(254,73,4)" fg:x="149" fg:w="1"/><text x="24.5964%" y="351.50"></text></g><g><title>regex_syntax::hir::translate::TranslatorI::push (3 samples, 0.49%)</title><rect x="24.5098%" y="533" width="0.4902%" height="15" fill="rgb(222,136,12)" fg:x="150" fg:w="3"/><text x="24.7598%" y="543.50"></text></g><g><title>core::str::validations::run_utf8_validation (1 samples, 0.16%)</title><rect x="25.0000%" y="469" width="0.1634%" height="15" fill="rgb(240,23,14)" fg:x="153" fg:w="1"/><text x="25.2500%" y="479.50"></text></g><g><title>regex_syntax::hir::Properties::literal (2 samples, 0.33%)</title><rect x="25.0000%" y="501" width="0.3268%" height="15" fill="rgb(224,191,39)" fg:x="153" fg:w="2"/><text x="25.2500%" y="511.50"></text></g><g><title>core::str::converts::from_utf8 (2 samples, 0.33%)</title><rect x="25.0000%" y="485" width="0.3268%" height="15" fill="rgb(248,147,30)" fg:x="153" fg:w="2"/><text x="25.2500%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::shrink_to_fit (1 samples, 0.16%)</title><rect x="25.3268%" y="453" width="0.1634%" height="15" fill="rgb(242,210,14)" fg:x="155" fg:w="1"/><text x="25.5768%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::shrink_to_fit (1 samples, 0.16%)</title><rect x="25.3268%" y="437" width="0.1634%" height="15" fill="rgb(226,51,15)" fg:x="155" fg:w="1"/><text x="25.5768%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::shrink (1 samples, 0.16%)</title><rect x="25.3268%" y="421" width="0.1634%" height="15" fill="rgb(220,229,0)" fg:x="155" fg:w="1"/><text x="25.5768%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::shrink (1 samples, 0.16%)</title><rect x="25.3268%" y="405" width="0.1634%" height="15" fill="rgb(225,20,48)" fg:x="155" fg:w="1"/><text x="25.5768%" y="415.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.16%)</title><rect x="25.3268%" y="389" width="0.1634%" height="15" fill="rgb(254,47,34)" fg:x="155" fg:w="1"/><text x="25.5768%" y="399.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.16%)</title><rect x="25.3268%" y="373" width="0.1634%" height="15" fill="rgb(254,73,4)" fg:x="155" fg:w="1"/><text x="25.5768%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (2 samples, 0.33%)</title><rect x="25.3268%" y="469" width="0.3268%" height="15" fill="rgb(241,79,3)" fg:x="155" fg:w="2"/><text x="25.5768%" y="479.50"></text></g><g><title>regex_syntax::hir::translate::TranslatorI::pop_concat_expr (5 samples, 0.82%)</title><rect x="25.0000%" y="533" width="0.8170%" height="15" fill="rgb(213,98,0)" fg:x="153" fg:w="5"/><text x="25.2500%" y="543.50"></text></g><g><title>regex_syntax::hir::Hir::literal (5 samples, 0.82%)</title><rect x="25.0000%" y="517" width="0.8170%" height="15" fill="rgb(248,43,17)" fg:x="153" fg:w="5"/><text x="25.2500%" y="527.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.49%)</title><rect x="25.3268%" y="501" width="0.4902%" height="15" fill="rgb(249,58,20)" fg:x="155" fg:w="3"/><text x="25.5768%" y="511.50"></text></g><g><title>alloc::vec::&lt;impl core::convert::From&lt;alloc::vec::Vec&lt;T,A&gt;&gt; for alloc::boxed::Box&lt;[T],A&gt;&gt;::from (3 samples, 0.49%)</title><rect x="25.3268%" y="485" width="0.4902%" height="15" fill="rgb(222,176,43)" fg:x="155" fg:w="3"/><text x="25.5768%" y="495.50"></text></g><g><title>regex_syntax::hir::translate::TranslatorI::pop (1 samples, 0.16%)</title><rect x="25.8170%" y="517" width="0.1634%" height="15" fill="rgb(251,64,13)" fg:x="158" fg:w="1"/><text x="26.0670%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (1 samples, 0.16%)</title><rect x="25.8170%" y="501" width="0.1634%" height="15" fill="rgb(216,0,40)" fg:x="158" fg:w="1"/><text x="26.0670%" y="511.50"></text></g><g><title>regex_syntax::hir::translate::TranslatorI::pop_alt_expr (2 samples, 0.33%)</title><rect x="25.8170%" y="533" width="0.3268%" height="15" fill="rgb(240,162,44)" fg:x="158" fg:w="2"/><text x="26.0670%" y="543.50"></text></g><g><title>regex_syntax::hir::Hir::literal (1 samples, 0.16%)</title><rect x="25.9804%" y="517" width="0.1634%" height="15" fill="rgb(248,43,17)" fg:x="159" fg:w="1"/><text x="26.2304%" y="527.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.16%)</title><rect x="25.9804%" y="501" width="0.1634%" height="15" fill="rgb(249,58,20)" fg:x="159" fg:w="1"/><text x="26.2304%" y="511.50"></text></g><g><title>alloc::vec::&lt;impl core::convert::From&lt;alloc::vec::Vec&lt;T,A&gt;&gt; for alloc::boxed::Box&lt;[T],A&gt;&gt;::from (1 samples, 0.16%)</title><rect x="25.9804%" y="485" width="0.1634%" height="15" fill="rgb(222,176,43)" fg:x="159" fg:w="1"/><text x="26.2304%" y="495.50"></text></g><g><title>regex_syntax::hir::translate::TranslatorI::hir_repetition (1 samples, 0.16%)</title><rect x="26.1438%" y="533" width="0.1634%" height="15" fill="rgb(233,35,28)" fg:x="160" fg:w="1"/><text x="26.3938%" y="543.50"></text></g><g><title>regex_syntax::hir::Hir::repetition (1 samples, 0.16%)</title><rect x="26.1438%" y="517" width="0.1634%" height="15" fill="rgb(252,214,35)" fg:x="160" fg:w="1"/><text x="26.3938%" y="527.50"></text></g><g><title>regex_syntax::hir::Properties::repetition (1 samples, 0.16%)</title><rect x="26.1438%" y="501" width="0.1634%" height="15" fill="rgb(239,200,41)" fg:x="160" fg:w="1"/><text x="26.3938%" y="511.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.16%)</title><rect x="26.1438%" y="485" width="0.1634%" height="15" fill="rgb(209,114,30)" fg:x="160" fg:w="1"/><text x="26.3938%" y="495.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.16%)</title><rect x="26.1438%" y="469" width="0.1634%" height="15" fill="rgb(248,129,10)" fg:x="160" fg:w="1"/><text x="26.3938%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.16%)</title><rect x="26.1438%" y="453" width="0.1634%" height="15" fill="rgb(231,114,21)" fg:x="160" fg:w="1"/><text x="26.3938%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.16%)</title><rect x="26.1438%" y="437" width="0.1634%" height="15" fill="rgb(238,209,2)" fg:x="160" fg:w="1"/><text x="26.3938%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.16%)</title><rect x="26.1438%" y="421" width="0.1634%" height="15" fill="rgb(253,135,41)" fg:x="160" fg:w="1"/><text x="26.3938%" y="431.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.16%)</title><rect x="26.1438%" y="405" width="0.1634%" height="15" fill="rgb(206,112,53)" fg:x="160" fg:w="1"/><text x="26.3938%" y="415.50"></text></g><g><title>_int_malloc (1 samples, 0.16%)</title><rect x="26.1438%" y="389" width="0.1634%" height="15" fill="rgb(222,219,51)" fg:x="160" fg:w="1"/><text x="26.3938%" y="399.50"></text></g><g><title>regex_syntax::hir::translate::TranslatorI::hir_capture (1 samples, 0.16%)</title><rect x="26.3072%" y="533" width="0.1634%" height="15" fill="rgb(220,63,4)" fg:x="161" fg:w="1"/><text x="26.5572%" y="543.50"></text></g><g><title>regex_syntax::hir::Hir::capture (1 samples, 0.16%)</title><rect x="26.3072%" y="517" width="0.1634%" height="15" fill="rgb(205,88,31)" fg:x="161" fg:w="1"/><text x="26.5572%" y="527.50"></text></g><g><title>regex_syntax::hir::Properties::capture (1 samples, 0.16%)</title><rect x="26.3072%" y="501" width="0.1634%" height="15" fill="rgb(230,202,9)" fg:x="161" fg:w="1"/><text x="26.5572%" y="511.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.16%)</title><rect x="26.3072%" y="485" width="0.1634%" height="15" fill="rgb(209,114,30)" fg:x="161" fg:w="1"/><text x="26.5572%" y="495.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.16%)</title><rect x="26.3072%" y="469" width="0.1634%" height="15" fill="rgb(248,129,10)" fg:x="161" fg:w="1"/><text x="26.5572%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.16%)</title><rect x="26.3072%" y="453" width="0.1634%" height="15" fill="rgb(231,114,21)" fg:x="161" fg:w="1"/><text x="26.5572%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.16%)</title><rect x="26.3072%" y="437" width="0.1634%" height="15" fill="rgb(238,209,2)" fg:x="161" fg:w="1"/><text x="26.5572%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.16%)</title><rect x="26.3072%" y="421" width="0.1634%" height="15" fill="rgb(253,135,41)" fg:x="161" fg:w="1"/><text x="26.5572%" y="431.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.16%)</title><rect x="26.3072%" y="405" width="0.1634%" height="15" fill="rgb(206,112,53)" fg:x="161" fg:w="1"/><text x="26.5572%" y="415.50"></text></g><g><title>_int_malloc (1 samples, 0.16%)</title><rect x="26.3072%" y="389" width="0.1634%" height="15" fill="rgb(222,219,51)" fg:x="161" fg:w="1"/><text x="26.5572%" y="399.50"></text></g><g><title>alloc_perturb (1 samples, 0.16%)</title><rect x="26.3072%" y="373" width="0.1634%" height="15" fill="rgb(238,207,2)" fg:x="161" fg:w="1"/><text x="26.5572%" y="383.50"></text></g><g><title>regex_syntax::hir::ClassUnicode::try_case_fold_simple (1 samples, 0.16%)</title><rect x="26.4706%" y="517" width="0.1634%" height="15" fill="rgb(225,146,29)" fg:x="162" fg:w="1"/><text x="26.7206%" y="527.50"></text></g><g><title>regex_syntax::hir::interval::IntervalSet&lt;I&gt;::case_fold_simple (1 samples, 0.16%)</title><rect x="26.4706%" y="501" width="0.1634%" height="15" fill="rgb(211,184,23)" fg:x="162" fg:w="1"/><text x="26.7206%" y="511.50"></text></g><g><title>&lt;regex_syntax::hir::ClassUnicodeRange as regex_syntax::hir::interval::Interval&gt;::case_fold_simple (1 samples, 0.16%)</title><rect x="26.4706%" y="485" width="0.1634%" height="15" fill="rgb(242,212,29)" fg:x="162" fg:w="1"/><text x="26.7206%" y="495.50"></text></g><g><title>regex_syntax::unicode::SimpleCaseFolder::mapping (1 samples, 0.16%)</title><rect x="26.4706%" y="469" width="0.1634%" height="15" fill="rgb(229,228,3)" fg:x="162" fg:w="1"/><text x="26.7206%" y="479.50"></text></g><g><title>regex_syntax::unicode::SimpleCaseFolder::get (1 samples, 0.16%)</title><rect x="26.4706%" y="453" width="0.1634%" height="15" fill="rgb(212,127,22)" fg:x="162" fg:w="1"/><text x="26.7206%" y="463.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by_key (1 samples, 0.16%)</title><rect x="26.4706%" y="437" width="0.1634%" height="15" fill="rgb(219,159,10)" fg:x="162" fg:w="1"/><text x="26.7206%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.16%)</title><rect x="26.4706%" y="421" width="0.1634%" height="15" fill="rgb(252,87,43)" fg:x="162" fg:w="1"/><text x="26.7206%" y="431.50"></text></g><g><title>regex_syntax::hir::translate::TranslatorI::case_fold_char (2 samples, 0.33%)</title><rect x="26.4706%" y="533" width="0.3268%" height="15" fill="rgb(240,41,22)" fg:x="162" fg:w="2"/><text x="26.7206%" y="543.50"></text></g><g><title>regex_syntax::hir::ClassUnicode::new (1 samples, 0.16%)</title><rect x="26.6340%" y="517" width="0.1634%" height="15" fill="rgb(214,194,28)" fg:x="163" fg:w="1"/><text x="26.8840%" y="527.50"></text></g><g><title>regex_syntax::hir::interval::IntervalSet&lt;I&gt;::new (1 samples, 0.16%)</title><rect x="26.6340%" y="501" width="0.1634%" height="15" fill="rgb(226,60,27)" fg:x="163" fg:w="1"/><text x="26.8840%" y="511.50"></text></g><g><title>regex_syntax::hir::interval::IntervalSet&lt;I&gt;::canonicalize (1 samples, 0.16%)</title><rect x="26.6340%" y="485" width="0.1634%" height="15" fill="rgb(250,125,54)" fg:x="163" fg:w="1"/><text x="26.8840%" y="495.50"></text></g><g><title>regex_syntax::hir::translate::TranslatorI::ast_literal_to_scalar (1 samples, 0.16%)</title><rect x="26.7974%" y="533" width="0.1634%" height="15" fill="rgb(232,105,7)" fg:x="164" fg:w="1"/><text x="27.0474%" y="543.50"></text></g><g><title>regex_syntax::hir::Hir::literal (1 samples, 0.16%)</title><rect x="26.9608%" y="517" width="0.1634%" height="15" fill="rgb(248,43,17)" fg:x="165" fg:w="1"/><text x="27.2108%" y="527.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.16%)</title><rect x="26.9608%" y="501" width="0.1634%" height="15" fill="rgb(249,58,20)" fg:x="165" fg:w="1"/><text x="27.2108%" y="511.50"></text></g><g><title>alloc::vec::&lt;impl core::convert::From&lt;alloc::vec::Vec&lt;T,A&gt;&gt; for alloc::boxed::Box&lt;[T],A&gt;&gt;::from (1 samples, 0.16%)</title><rect x="26.9608%" y="485" width="0.1634%" height="15" fill="rgb(222,176,43)" fg:x="165" fg:w="1"/><text x="27.2108%" y="495.50"></text></g><g><title>regex_syntax::hir::Properties::empty (1 samples, 0.16%)</title><rect x="27.1242%" y="501" width="0.1634%" height="15" fill="rgb(222,71,35)" fg:x="166" fg:w="1"/><text x="27.3742%" y="511.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.16%)</title><rect x="27.1242%" y="485" width="0.1634%" height="15" fill="rgb(209,114,30)" fg:x="166" fg:w="1"/><text x="27.3742%" y="495.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.16%)</title><rect x="27.1242%" y="469" width="0.1634%" height="15" fill="rgb(248,129,10)" fg:x="166" fg:w="1"/><text x="27.3742%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.16%)</title><rect x="27.1242%" y="453" width="0.1634%" height="15" fill="rgb(231,114,21)" fg:x="166" fg:w="1"/><text x="27.3742%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.16%)</title><rect x="27.1242%" y="437" width="0.1634%" height="15" fill="rgb(238,209,2)" fg:x="166" fg:w="1"/><text x="27.3742%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.16%)</title><rect x="27.1242%" y="421" width="0.1634%" height="15" fill="rgb(253,135,41)" fg:x="166" fg:w="1"/><text x="27.3742%" y="431.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.16%)</title><rect x="27.1242%" y="405" width="0.1634%" height="15" fill="rgb(206,112,53)" fg:x="166" fg:w="1"/><text x="27.3742%" y="415.50"></text></g><g><title>_int_malloc (1 samples, 0.16%)</title><rect x="27.1242%" y="389" width="0.1634%" height="15" fill="rgb(222,219,51)" fg:x="166" fg:w="1"/><text x="27.3742%" y="399.50"></text></g><g><title>regex_syntax::hir::Hir::into_parts (2 samples, 0.33%)</title><rect x="27.1242%" y="517" width="0.3268%" height="15" fill="rgb(217,98,50)" fg:x="166" fg:w="2"/><text x="27.3742%" y="527.50"></text></g><g><title>core::mem::replace (1 samples, 0.16%)</title><rect x="27.2876%" y="501" width="0.1634%" height="15" fill="rgb(240,40,18)" fg:x="167" fg:w="1"/><text x="27.5376%" y="511.50"></text></g><g><title>core::ptr::read (1 samples, 0.16%)</title><rect x="27.2876%" y="485" width="0.1634%" height="15" fill="rgb(222,157,29)" fg:x="167" fg:w="1"/><text x="27.5376%" y="495.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (1 samples, 0.16%)</title><rect x="27.2876%" y="469" width="0.1634%" height="15" fill="rgb(234,151,54)" fg:x="167" fg:w="1"/><text x="27.5376%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::hir::Properties&gt; (1 samples, 0.16%)</title><rect x="27.4510%" y="517" width="0.1634%" height="15" fill="rgb(249,111,12)" fg:x="168" fg:w="1"/><text x="27.7010%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;regex_syntax::hir::PropertiesI&gt;&gt; (1 samples, 0.16%)</title><rect x="27.4510%" y="501" width="0.1634%" height="15" fill="rgb(237,14,7)" fg:x="168" fg:w="1"/><text x="27.7010%" y="511.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.16%)</title><rect x="27.4510%" y="485" width="0.1634%" height="15" fill="rgb(241,6,19)" fg:x="168" fg:w="1"/><text x="27.7010%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.16%)</title><rect x="27.4510%" y="469" width="0.1634%" height="15" fill="rgb(238,77,31)" fg:x="168" fg:w="1"/><text x="27.7010%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.16%)</title><rect x="27.4510%" y="453" width="0.1634%" height="15" fill="rgb(227,15,28)" fg:x="168" fg:w="1"/><text x="27.7010%" y="463.50"></text></g><g><title>__GI___libc_free (1 samples, 0.16%)</title><rect x="27.4510%" y="437" width="0.1634%" height="15" fill="rgb(247,8,17)" fg:x="168" fg:w="1"/><text x="27.7010%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;regex_syntax::hir::Hir&gt;&gt; (1 samples, 0.16%)</title><rect x="27.6144%" y="501" width="0.1634%" height="15" fill="rgb(244,42,48)" fg:x="169" fg:w="1"/><text x="27.8644%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.16%)</title><rect x="27.6144%" y="485" width="0.1634%" height="15" fill="rgb(213,128,22)" fg:x="169" fg:w="1"/><text x="27.8644%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.16%)</title><rect x="27.6144%" y="469" width="0.1634%" height="15" fill="rgb(238,77,31)" fg:x="169" fg:w="1"/><text x="27.8644%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.16%)</title><rect x="27.6144%" y="453" width="0.1634%" height="15" fill="rgb(227,15,28)" fg:x="169" fg:w="1"/><text x="27.8644%" y="463.50"></text></g><g><title>__GI___libc_free (1 samples, 0.16%)</title><rect x="27.6144%" y="437" width="0.1634%" height="15" fill="rgb(247,8,17)" fg:x="169" fg:w="1"/><text x="27.8644%" y="447.50"></text></g><g><title>_int_free (1 samples, 0.16%)</title><rect x="27.6144%" y="421" width="0.1634%" height="15" fill="rgb(221,113,48)" fg:x="169" fg:w="1"/><text x="27.8644%" y="431.50"></text></g><g><title>tcache_put (1 samples, 0.16%)</title><rect x="27.6144%" y="405" width="0.1634%" height="15" fill="rgb(227,177,28)" fg:x="169" fg:w="1"/><text x="27.8644%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_syntax::hir::Hir&gt;&gt; (2 samples, 0.33%)</title><rect x="27.6144%" y="517" width="0.3268%" height="15" fill="rgb(206,118,12)" fg:x="169" fg:w="2"/><text x="27.8644%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.16%)</title><rect x="27.7778%" y="501" width="0.1634%" height="15" fill="rgb(249,14,2)" fg:x="170" fg:w="1"/><text x="28.0278%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[regex_syntax::hir::Hir]&gt; (1 samples, 0.16%)</title><rect x="27.7778%" y="485" width="0.1634%" height="15" fill="rgb(240,58,42)" fg:x="170" fg:w="1"/><text x="28.0278%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[u8]&gt;&gt; (1 samples, 0.16%)</title><rect x="27.9412%" y="517" width="0.1634%" height="15" fill="rgb(219,194,9)" fg:x="171" fg:w="1"/><text x="28.1912%" y="527.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.16%)</title><rect x="27.9412%" y="501" width="0.1634%" height="15" fill="rgb(241,6,19)" fg:x="171" fg:w="1"/><text x="28.1912%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.16%)</title><rect x="27.9412%" y="485" width="0.1634%" height="15" fill="rgb(238,77,31)" fg:x="171" fg:w="1"/><text x="28.1912%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.16%)</title><rect x="28.1046%" y="517" width="0.1634%" height="15" fill="rgb(212,186,21)" fg:x="172" fg:w="1"/><text x="28.3546%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (1 samples, 0.16%)</title><rect x="28.2680%" y="517" width="0.1634%" height="15" fill="rgb(206,153,2)" fg:x="173" fg:w="1"/><text x="28.5180%" y="527.50"></text></g><g><title>core::mem::replace (1 samples, 0.16%)</title><rect x="28.2680%" y="501" width="0.1634%" height="15" fill="rgb(240,40,18)" fg:x="173" fg:w="1"/><text x="28.5180%" y="511.50"></text></g><g><title>core::ptr::write (2 samples, 0.33%)</title><rect x="28.4314%" y="501" width="0.3268%" height="15" fill="rgb(209,143,44)" fg:x="174" fg:w="2"/><text x="28.6814%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.49%)</title><rect x="28.4314%" y="517" width="0.4902%" height="15" fill="rgb(241,229,15)" fg:x="174" fg:w="3"/><text x="28.6814%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.16%)</title><rect x="28.7582%" y="501" width="0.1634%" height="15" fill="rgb(254,103,39)" fg:x="176" fg:w="1"/><text x="29.0082%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.16%)</title><rect x="28.7582%" y="485" width="0.1634%" height="15" fill="rgb(254,53,35)" fg:x="176" fg:w="1"/><text x="29.0082%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.16%)</title><rect x="28.7582%" y="469" width="0.1634%" height="15" fill="rgb(237,133,22)" fg:x="176" fg:w="1"/><text x="29.0082%" y="479.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.16%)</title><rect x="28.7582%" y="453" width="0.1634%" height="15" fill="rgb(206,149,53)" fg:x="176" fg:w="1"/><text x="29.0082%" y="463.50"></text></g><g><title>regex_syntax::hir::Hir::concat (13 samples, 2.12%)</title><rect x="26.9608%" y="533" width="2.1242%" height="15" fill="rgb(228,76,42)" fg:x="165" fg:w="13"/><text x="27.2108%" y="543.50">r..</text></g><g><title>__GI___libc_free (1 samples, 0.16%)</title><rect x="28.9216%" y="517" width="0.1634%" height="15" fill="rgb(247,8,17)" fg:x="177" fg:w="1"/><text x="29.1716%" y="527.50"></text></g><g><title>regex_syntax::hir::Hir::class (1 samples, 0.16%)</title><rect x="29.0850%" y="533" width="0.1634%" height="15" fill="rgb(241,125,31)" fg:x="178" fg:w="1"/><text x="29.3350%" y="543.50"></text></g><g><title>regex_syntax::hir::Class::literal (1 samples, 0.16%)</title><rect x="29.0850%" y="517" width="0.1634%" height="15" fill="rgb(246,44,31)" fg:x="178" fg:w="1"/><text x="29.3350%" y="527.50"></text></g><g><title>regex_syntax::hir::ClassUnicode::literal (1 samples, 0.16%)</title><rect x="29.0850%" y="501" width="0.1634%" height="15" fill="rgb(225,27,13)" fg:x="178" fg:w="1"/><text x="29.3350%" y="511.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1 samples, 0.16%)</title><rect x="29.0850%" y="485" width="0.1634%" height="15" fill="rgb(249,76,35)" fg:x="178" fg:w="1"/><text x="29.3350%" y="495.50"></text></g><g><title>&lt;&amp;mut T as core::fmt::Display&gt;::fmt (1 samples, 0.16%)</title><rect x="29.0850%" y="469" width="0.1634%" height="15" fill="rgb(220,2,4)" fg:x="178" fg:w="1"/><text x="29.3350%" y="479.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (1 samples, 0.16%)</title><rect x="29.0850%" y="453" width="0.1634%" height="15" fill="rgb(224,75,7)" fg:x="178" fg:w="1"/><text x="29.3350%" y="463.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_add (1 samples, 0.16%)</title><rect x="29.2484%" y="485" width="0.1634%" height="15" fill="rgb(233,89,52)" fg:x="179" fg:w="1"/><text x="29.4984%" y="495.50"></text></g><g><title>regex_syntax::hir::Properties::alternation (3 samples, 0.49%)</title><rect x="29.2484%" y="517" width="0.4902%" height="15" fill="rgb(214,136,5)" fg:x="179" fg:w="3"/><text x="29.4984%" y="527.50"></text></g><g><title>regex_syntax::hir::Properties::union (3 samples, 0.49%)</title><rect x="29.2484%" y="501" width="0.4902%" height="15" fill="rgb(229,61,24)" fg:x="179" fg:w="3"/><text x="29.4984%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::hir::Hir&gt; (1 samples, 0.16%)</title><rect x="29.7386%" y="501" width="0.1634%" height="15" fill="rgb(244,216,7)" fg:x="182" fg:w="1"/><text x="29.9886%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::hir::HirKind&gt; (1 samples, 0.16%)</title><rect x="29.7386%" y="485" width="0.1634%" height="15" fill="rgb(230,85,32)" fg:x="182" fg:w="1"/><text x="29.9886%" y="495.50"></text></g><g><title>regex_syntax::hir::Hir::into_parts (2 samples, 0.33%)</title><rect x="29.7386%" y="517" width="0.3268%" height="15" fill="rgb(217,98,50)" fg:x="182" fg:w="2"/><text x="29.9886%" y="527.50"></text></g><g><title>core::mem::replace (1 samples, 0.16%)</title><rect x="29.9020%" y="501" width="0.1634%" height="15" fill="rgb(240,40,18)" fg:x="183" fg:w="1"/><text x="30.1520%" y="511.50"></text></g><g><title>core::ptr::read (1 samples, 0.16%)</title><rect x="29.9020%" y="485" width="0.1634%" height="15" fill="rgb(222,157,29)" fg:x="183" fg:w="1"/><text x="30.1520%" y="495.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (1 samples, 0.16%)</title><rect x="29.9020%" y="469" width="0.1634%" height="15" fill="rgb(234,151,54)" fg:x="183" fg:w="1"/><text x="30.1520%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.16%)</title><rect x="30.0654%" y="517" width="0.1634%" height="15" fill="rgb(241,229,15)" fg:x="184" fg:w="1"/><text x="30.3154%" y="527.50"></text></g><g><title>core::ptr::write (1 samples, 0.16%)</title><rect x="30.0654%" y="501" width="0.1634%" height="15" fill="rgb(209,143,44)" fg:x="184" fg:w="1"/><text x="30.3154%" y="511.50"></text></g><g><title>regex_syntax::hir::Hir::alternation (7 samples, 1.14%)</title><rect x="29.2484%" y="533" width="1.1438%" height="15" fill="rgb(206,114,23)" fg:x="179" fg:w="7"/><text x="29.4984%" y="543.50"></text></g><g><title>__GI___libc_free (1 samples, 0.16%)</title><rect x="30.2288%" y="517" width="0.1634%" height="15" fill="rgb(247,8,17)" fg:x="185" fg:w="1"/><text x="30.4788%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (1 samples, 0.16%)</title><rect x="30.3922%" y="533" width="0.1634%" height="15" fill="rgb(253,41,52)" fg:x="186" fg:w="1"/><text x="30.6422%" y="543.50"></text></g><g><title>core::ptr::write (1 samples, 0.16%)</title><rect x="30.5556%" y="517" width="0.1634%" height="15" fill="rgb(209,143,44)" fg:x="187" fg:w="1"/><text x="30.8056%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.16%)</title><rect x="30.7190%" y="469" width="0.1634%" height="15" fill="rgb(237,156,49)" fg:x="188" fg:w="1"/><text x="30.9690%" y="479.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.16%)</title><rect x="30.7190%" y="453" width="0.1634%" height="15" fill="rgb(214,150,36)" fg:x="188" fg:w="1"/><text x="30.9690%" y="463.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.16%)</title><rect x="30.7190%" y="437" width="0.1634%" height="15" fill="rgb(254,47,34)" fg:x="188" fg:w="1"/><text x="30.9690%" y="447.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.16%)</title><rect x="30.7190%" y="421" width="0.1634%" height="15" fill="rgb(254,73,4)" fg:x="188" fg:w="1"/><text x="30.9690%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.49%)</title><rect x="30.5556%" y="533" width="0.4902%" height="15" fill="rgb(241,229,15)" fg:x="187" fg:w="3"/><text x="30.8056%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.33%)</title><rect x="30.7190%" y="517" width="0.3268%" height="15" fill="rgb(254,103,39)" fg:x="188" fg:w="2"/><text x="30.9690%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.33%)</title><rect x="30.7190%" y="501" width="0.3268%" height="15" fill="rgb(254,53,35)" fg:x="188" fg:w="2"/><text x="30.9690%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.33%)</title><rect x="30.7190%" y="485" width="0.3268%" height="15" fill="rgb(237,133,22)" fg:x="188" fg:w="2"/><text x="30.9690%" y="495.50"></text></g><g><title>&lt;regex_syntax::hir::translate::TranslatorI as regex_syntax::ast::visitor::Visitor&gt;::visit_post (50 samples, 8.17%)</title><rect x="24.0196%" y="549" width="8.1699%" height="15" fill="rgb(207,12,29)" fg:x="147" fg:w="50"/><text x="24.2696%" y="559.50">&lt;regex_synt..</text></g><g><title>&lt;regex_syntax::hir::translate::TranslatorI as regex_syntax::ast::visitor::Visitor&gt;::visit_alternation_in (2 samples, 0.33%)</title><rect x="32.1895%" y="549" width="0.3268%" height="15" fill="rgb(208,41,30)" fg:x="197" fg:w="2"/><text x="32.4395%" y="559.50"></text></g><g><title>regex_syntax::hir::translate::TranslatorI::push (2 samples, 0.33%)</title><rect x="32.1895%" y="533" width="0.3268%" height="15" fill="rgb(222,136,12)" fg:x="197" fg:w="2"/><text x="32.4395%" y="543.50"></text></g><g><title>regex_syntax::hir::translate::Translator::translate (62 samples, 10.13%)</title><rect x="23.0392%" y="597" width="10.1307%" height="15" fill="rgb(212,73,14)" fg:x="141" fg:w="62"/><text x="23.2892%" y="607.50">regex_syntax::h..</text></g><g><title>regex_syntax::ast::visitor::visit (62 samples, 10.13%)</title><rect x="23.0392%" y="581" width="10.1307%" height="15" fill="rgb(209,184,21)" fg:x="141" fg:w="62"/><text x="23.2892%" y="591.50">regex_syntax::a..</text></g><g><title>regex_syntax::ast::visitor::HeapVisitor::visit (62 samples, 10.13%)</title><rect x="23.0392%" y="565" width="10.1307%" height="15" fill="rgb(253,224,17)" fg:x="141" fg:w="62"/><text x="23.2892%" y="575.50">regex_syntax::a..</text></g><g><title>regex_syntax::ast::visitor::HeapVisitor::pop (1 samples, 0.16%)</title><rect x="33.1699%" y="517" width="0.1634%" height="15" fill="rgb(228,68,26)" fg:x="203" fg:w="1"/><text x="33.4199%" y="527.50"></text></g><g><title>regex_syntax::ast::visitor::visit (4 samples, 0.65%)</title><rect x="33.1699%" y="549" width="0.6536%" height="15" fill="rgb(209,184,21)" fg:x="203" fg:w="4"/><text x="33.4199%" y="559.50"></text></g><g><title>regex_syntax::ast::visitor::HeapVisitor::visit (4 samples, 0.65%)</title><rect x="33.1699%" y="533" width="0.6536%" height="15" fill="rgb(253,224,17)" fg:x="203" fg:w="4"/><text x="33.4199%" y="543.50"></text></g><g><title>&lt;regex_syntax::ast::parse::NestLimiter&lt;P&gt; as regex_syntax::ast::visitor::Visitor&gt;::visit_pre (3 samples, 0.49%)</title><rect x="33.3333%" y="517" width="0.4902%" height="15" fill="rgb(220,157,37)" fg:x="204" fg:w="3"/><text x="33.5833%" y="527.50"></text></g><g><title>arena_for_chunk (1 samples, 0.16%)</title><rect x="33.8235%" y="421" width="0.1634%" height="15" fill="rgb(234,26,42)" fg:x="207" fg:w="1"/><text x="34.0735%" y="431.50"></text></g><g><title>arena_for_chunk (1 samples, 0.16%)</title><rect x="33.8235%" y="405" width="0.1634%" height="15" fill="rgb(234,26,42)" fg:x="207" fg:w="1"/><text x="34.0735%" y="415.50"></text></g><g><title>heap_for_ptr (1 samples, 0.16%)</title><rect x="33.8235%" y="389" width="0.1634%" height="15" fill="rgb(232,140,25)" fg:x="207" fg:w="1"/><text x="34.0735%" y="399.50"></text></g><g><title>tcache_put (2 samples, 0.33%)</title><rect x="33.9869%" y="405" width="0.3268%" height="15" fill="rgb(227,177,28)" fg:x="208" fg:w="2"/><text x="34.2369%" y="415.50"></text></g><g><title>_int_malloc (4 samples, 0.65%)</title><rect x="33.9869%" y="421" width="0.6536%" height="15" fill="rgb(222,219,51)" fg:x="208" fg:w="4"/><text x="34.2369%" y="431.50"></text></g><g><title>regex_syntax::ast::parse::Primitive::into_ast (6 samples, 0.98%)</title><rect x="33.8235%" y="549" width="0.9804%" height="15" fill="rgb(225,212,2)" fg:x="207" fg:w="6"/><text x="34.0735%" y="559.50"></text></g><g><title>regex_syntax::ast::Ast::literal (6 samples, 0.98%)</title><rect x="33.8235%" y="533" width="0.9804%" height="15" fill="rgb(212,66,23)" fg:x="207" fg:w="6"/><text x="34.0735%" y="543.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (6 samples, 0.98%)</title><rect x="33.8235%" y="517" width="0.9804%" height="15" fill="rgb(209,114,30)" fg:x="207" fg:w="6"/><text x="34.0735%" y="527.50"></text></g><g><title>alloc::alloc::exchange_malloc (6 samples, 0.98%)</title><rect x="33.8235%" y="501" width="0.9804%" height="15" fill="rgb(248,129,10)" fg:x="207" fg:w="6"/><text x="34.0735%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.98%)</title><rect x="33.8235%" y="485" width="0.9804%" height="15" fill="rgb(231,114,21)" fg:x="207" fg:w="6"/><text x="34.0735%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.98%)</title><rect x="33.8235%" y="469" width="0.9804%" height="15" fill="rgb(238,209,2)" fg:x="207" fg:w="6"/><text x="34.0735%" y="479.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.98%)</title><rect x="33.8235%" y="453" width="0.9804%" height="15" fill="rgb(253,135,41)" fg:x="207" fg:w="6"/><text x="34.0735%" y="463.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.98%)</title><rect x="33.8235%" y="437" width="0.9804%" height="15" fill="rgb(206,112,53)" fg:x="207" fg:w="6"/><text x="34.0735%" y="447.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::push_group (1 samples, 0.16%)</title><rect x="34.8039%" y="549" width="0.1634%" height="15" fill="rgb(218,85,47)" fg:x="213" fg:w="1"/><text x="35.0539%" y="559.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_group (1 samples, 0.16%)</title><rect x="34.8039%" y="533" width="0.1634%" height="15" fill="rgb(237,110,47)" fg:x="213" fg:w="1"/><text x="35.0539%" y="543.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_capture_name (1 samples, 0.16%)</title><rect x="34.8039%" y="517" width="0.1634%" height="15" fill="rgb(241,170,13)" fg:x="213" fg:w="1"/><text x="35.0539%" y="527.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::add_capture_name (1 samples, 0.16%)</title><rect x="34.8039%" y="501" width="0.1634%" height="15" fill="rgb(244,6,43)" fg:x="213" fg:w="1"/><text x="35.0539%" y="511.50"></text></g><g><title>&lt;regex_syntax::ast::CaptureName as core::clone::Clone&gt;::clone (1 samples, 0.16%)</title><rect x="34.8039%" y="485" width="0.1634%" height="15" fill="rgb(221,215,29)" fg:x="213" fg:w="1"/><text x="35.0539%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.16%)</title><rect x="34.8039%" y="469" width="0.1634%" height="15" fill="rgb(251,65,42)" fg:x="213" fg:w="1"/><text x="35.0539%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.16%)</title><rect x="34.8039%" y="453" width="0.1634%" height="15" fill="rgb(239,104,10)" fg:x="213" fg:w="1"/><text x="35.0539%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.16%)</title><rect x="34.8039%" y="437" width="0.1634%" height="15" fill="rgb(229,121,46)" fg:x="213" fg:w="1"/><text x="35.0539%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.16%)</title><rect x="34.8039%" y="421" width="0.1634%" height="15" fill="rgb(221,172,50)" fg:x="213" fg:w="1"/><text x="35.0539%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.16%)</title><rect x="34.8039%" y="405" width="0.1634%" height="15" fill="rgb(216,42,52)" fg:x="213" fg:w="1"/><text x="35.0539%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.16%)</title><rect x="34.8039%" y="389" width="0.1634%" height="15" fill="rgb(222,107,1)" fg:x="213" fg:w="1"/><text x="35.0539%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.16%)</title><rect x="34.8039%" y="373" width="0.1634%" height="15" fill="rgb(214,20,35)" fg:x="213" fg:w="1"/><text x="35.0539%" y="383.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.16%)</title><rect x="34.8039%" y="357" width="0.1634%" height="15" fill="rgb(217,126,36)" fg:x="213" fg:w="1"/><text x="35.0539%" y="367.50"></text></g><g><title>regex_syntax::ast::Concat::into_ast (1 samples, 0.16%)</title><rect x="34.9673%" y="517" width="0.1634%" height="15" fill="rgb(210,199,15)" fg:x="214" fg:w="1"/><text x="35.2173%" y="527.50"></text></g><g><title>regex_syntax::ast::Ast::concat (1 samples, 0.16%)</title><rect x="34.9673%" y="501" width="0.1634%" height="15" fill="rgb(251,13,11)" fg:x="214" fg:w="1"/><text x="35.2173%" y="511.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::push_or_add_alternation (2 samples, 0.33%)</title><rect x="34.9673%" y="533" width="0.3268%" height="15" fill="rgb(210,56,29)" fg:x="214" fg:w="2"/><text x="35.2173%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.16%)</title><rect x="35.1307%" y="517" width="0.1634%" height="15" fill="rgb(241,229,15)" fg:x="215" fg:w="1"/><text x="35.3807%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.16%)</title><rect x="35.1307%" y="501" width="0.1634%" height="15" fill="rgb(254,103,39)" fg:x="215" fg:w="1"/><text x="35.3807%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.16%)</title><rect x="35.1307%" y="485" width="0.1634%" height="15" fill="rgb(254,53,35)" fg:x="215" fg:w="1"/><text x="35.3807%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.16%)</title><rect x="35.1307%" y="469" width="0.1634%" height="15" fill="rgb(237,133,22)" fg:x="215" fg:w="1"/><text x="35.3807%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.16%)</title><rect x="35.1307%" y="453" width="0.1634%" height="15" fill="rgb(237,156,49)" fg:x="215" fg:w="1"/><text x="35.3807%" y="463.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.16%)</title><rect x="35.1307%" y="437" width="0.1634%" height="15" fill="rgb(214,150,36)" fg:x="215" fg:w="1"/><text x="35.3807%" y="447.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.16%)</title><rect x="35.1307%" y="421" width="0.1634%" height="15" fill="rgb(254,47,34)" fg:x="215" fg:w="1"/><text x="35.3807%" y="431.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.16%)</title><rect x="35.1307%" y="405" width="0.1634%" height="15" fill="rgb(254,73,4)" fg:x="215" fg:w="1"/><text x="35.3807%" y="415.50"></text></g><g><title>_int_realloc (1 samples, 0.16%)</title><rect x="35.1307%" y="389" width="0.1634%" height="15" fill="rgb(231,75,41)" fg:x="215" fg:w="1"/><text x="35.3807%" y="399.50"></text></g><g><title>_int_malloc (1 samples, 0.16%)</title><rect x="35.1307%" y="373" width="0.1634%" height="15" fill="rgb(222,219,51)" fg:x="215" fg:w="1"/><text x="35.3807%" y="383.50"></text></g><g><title>malloc_consolidate (1 samples, 0.16%)</title><rect x="35.1307%" y="357" width="0.1634%" height="15" fill="rgb(228,194,39)" fg:x="215" fg:w="1"/><text x="35.3807%" y="367.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::bump (1 samples, 0.16%)</title><rect x="35.2941%" y="533" width="0.1634%" height="15" fill="rgb(207,165,29)" fg:x="216" fg:w="1"/><text x="35.5441%" y="543.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::len_utf8 (1 samples, 0.16%)</title><rect x="35.2941%" y="517" width="0.1634%" height="15" fill="rgb(244,74,29)" fg:x="216" fg:w="1"/><text x="35.5441%" y="527.50"></text></g><g><title>core::char::methods::len_utf8 (1 samples, 0.16%)</title><rect x="35.2941%" y="501" width="0.1634%" height="15" fill="rgb(227,73,10)" fg:x="216" fg:w="1"/><text x="35.5441%" y="511.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::push_alternate (8 samples, 1.31%)</title><rect x="34.9673%" y="549" width="1.3072%" height="15" fill="rgb(224,168,6)" fg:x="214" fg:w="8"/><text x="35.2173%" y="559.50"></text></g><g><title>_int_malloc (1 samples, 0.16%)</title><rect x="36.2745%" y="389" width="0.1634%" height="15" fill="rgb(222,219,51)" fg:x="222" fg:w="1"/><text x="36.5245%" y="399.50"></text></g><g><title>tcache_put (1 samples, 0.16%)</title><rect x="36.2745%" y="373" width="0.1634%" height="15" fill="rgb(227,177,28)" fg:x="222" fg:w="1"/><text x="36.5245%" y="383.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::pop_group (2 samples, 0.33%)</title><rect x="36.2745%" y="549" width="0.3268%" height="15" fill="rgb(241,166,1)" fg:x="222" fg:w="2"/><text x="36.5245%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.33%)</title><rect x="36.2745%" y="533" width="0.3268%" height="15" fill="rgb(241,229,15)" fg:x="222" fg:w="2"/><text x="36.5245%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.33%)</title><rect x="36.2745%" y="517" width="0.3268%" height="15" fill="rgb(254,103,39)" fg:x="222" fg:w="2"/><text x="36.5245%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.33%)</title><rect x="36.2745%" y="501" width="0.3268%" height="15" fill="rgb(254,53,35)" fg:x="222" fg:w="2"/><text x="36.5245%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.33%)</title><rect x="36.2745%" y="485" width="0.3268%" height="15" fill="rgb(237,133,22)" fg:x="222" fg:w="2"/><text x="36.5245%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.33%)</title><rect x="36.2745%" y="469" width="0.3268%" height="15" fill="rgb(237,156,49)" fg:x="222" fg:w="2"/><text x="36.5245%" y="479.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.33%)</title><rect x="36.2745%" y="453" width="0.3268%" height="15" fill="rgb(214,150,36)" fg:x="222" fg:w="2"/><text x="36.5245%" y="463.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.33%)</title><rect x="36.2745%" y="437" width="0.3268%" height="15" fill="rgb(254,47,34)" fg:x="222" fg:w="2"/><text x="36.5245%" y="447.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.33%)</title><rect x="36.2745%" y="421" width="0.3268%" height="15" fill="rgb(254,73,4)" fg:x="222" fg:w="2"/><text x="36.5245%" y="431.50"></text></g><g><title>_int_realloc (2 samples, 0.33%)</title><rect x="36.2745%" y="405" width="0.3268%" height="15" fill="rgb(231,75,41)" fg:x="222" fg:w="2"/><text x="36.5245%" y="415.50"></text></g><g><title>_int_free (1 samples, 0.16%)</title><rect x="36.4379%" y="389" width="0.1634%" height="15" fill="rgb(221,113,48)" fg:x="223" fg:w="1"/><text x="36.6879%" y="399.50"></text></g><g><title>unlink_chunk (1 samples, 0.16%)</title><rect x="36.6013%" y="421" width="0.1634%" height="15" fill="rgb(223,20,30)" fg:x="224" fg:w="1"/><text x="36.8513%" y="431.50"></text></g><g><title>unlink_chunk (1 samples, 0.16%)</title><rect x="36.7647%" y="405" width="0.1634%" height="15" fill="rgb(223,20,30)" fg:x="225" fg:w="1"/><text x="37.0147%" y="415.50"></text></g><g><title>malloc_consolidate (2 samples, 0.33%)</title><rect x="36.7647%" y="421" width="0.3268%" height="15" fill="rgb(228,194,39)" fg:x="225" fg:w="2"/><text x="37.0147%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.65%)</title><rect x="36.6013%" y="517" width="0.6536%" height="15" fill="rgb(241,229,15)" fg:x="224" fg:w="4"/><text x="36.8513%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.65%)</title><rect x="36.6013%" y="501" width="0.6536%" height="15" fill="rgb(254,103,39)" fg:x="224" fg:w="4"/><text x="36.8513%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.65%)</title><rect x="36.6013%" y="485" width="0.6536%" height="15" fill="rgb(254,53,35)" fg:x="224" fg:w="4"/><text x="36.8513%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.65%)</title><rect x="36.6013%" y="469" width="0.6536%" height="15" fill="rgb(237,133,22)" fg:x="224" fg:w="4"/><text x="36.8513%" y="479.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.65%)</title><rect x="36.6013%" y="453" width="0.6536%" height="15" fill="rgb(206,112,53)" fg:x="224" fg:w="4"/><text x="36.8513%" y="463.50"></text></g><g><title>_int_malloc (4 samples, 0.65%)</title><rect x="36.6013%" y="437" width="0.6536%" height="15" fill="rgb(222,219,51)" fg:x="224" fg:w="4"/><text x="36.8513%" y="447.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::push_class_open (6 samples, 0.98%)</title><rect x="36.6013%" y="533" width="0.9804%" height="15" fill="rgb(208,186,32)" fg:x="224" fg:w="6"/><text x="36.8513%" y="543.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::pop_class (1 samples, 0.16%)</title><rect x="37.5817%" y="533" width="0.1634%" height="15" fill="rgb(251,70,0)" fg:x="230" fg:w="1"/><text x="37.8317%" y="543.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.16%)</title><rect x="37.5817%" y="517" width="0.1634%" height="15" fill="rgb(217,126,36)" fg:x="230" fg:w="1"/><text x="37.8317%" y="527.50"></text></g><g><title>regex_syntax::ast::parse::Primitive::into_class_set_item (1 samples, 0.16%)</title><rect x="37.7451%" y="517" width="0.1634%" height="15" fill="rgb(224,37,43)" fg:x="231" fg:w="1"/><text x="37.9951%" y="527.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_set_class_range (2 samples, 0.33%)</title><rect x="37.7451%" y="533" width="0.3268%" height="15" fill="rgb(251,182,26)" fg:x="231" fg:w="2"/><text x="37.9951%" y="543.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_escape (1 samples, 0.16%)</title><rect x="37.9085%" y="517" width="0.1634%" height="15" fill="rgb(223,67,34)" fg:x="232" fg:w="1"/><text x="38.1585%" y="527.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::char (1 samples, 0.16%)</title><rect x="37.9085%" y="501" width="0.1634%" height="15" fill="rgb(206,73,47)" fg:x="232" fg:w="1"/><text x="38.1585%" y="511.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::char_at (1 samples, 0.16%)</title><rect x="37.9085%" y="485" width="0.1634%" height="15" fill="rgb(220,224,36)" fg:x="232" fg:w="1"/><text x="38.1585%" y="495.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (1 samples, 0.16%)</title><rect x="37.9085%" y="469" width="0.1634%" height="15" fill="rgb(248,180,43)" fg:x="232" fg:w="1"/><text x="38.1585%" y="479.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (1 samples, 0.16%)</title><rect x="37.9085%" y="453" width="0.1634%" height="15" fill="rgb(235,73,17)" fg:x="232" fg:w="1"/><text x="38.1585%" y="463.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (1 samples, 0.16%)</title><rect x="37.9085%" y="437" width="0.1634%" height="15" fill="rgb(227,45,20)" fg:x="232" fg:w="1"/><text x="38.1585%" y="447.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (1 samples, 0.16%)</title><rect x="37.9085%" y="421" width="0.1634%" height="15" fill="rgb(236,115,17)" fg:x="232" fg:w="1"/><text x="38.1585%" y="431.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::maybe_parse_ascii_class (1 samples, 0.16%)</title><rect x="38.0719%" y="533" width="0.1634%" height="15" fill="rgb(215,29,15)" fg:x="233" fg:w="1"/><text x="38.3219%" y="543.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::bump (1 samples, 0.16%)</title><rect x="38.0719%" y="517" width="0.1634%" height="15" fill="rgb(207,165,29)" fg:x="233" fg:w="1"/><text x="38.3219%" y="527.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::char (1 samples, 0.16%)</title><rect x="38.0719%" y="501" width="0.1634%" height="15" fill="rgb(206,73,47)" fg:x="233" fg:w="1"/><text x="38.3219%" y="511.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::char_at (1 samples, 0.16%)</title><rect x="38.0719%" y="485" width="0.1634%" height="15" fill="rgb(220,224,36)" fg:x="233" fg:w="1"/><text x="38.3219%" y="495.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (1 samples, 0.16%)</title><rect x="38.0719%" y="469" width="0.1634%" height="15" fill="rgb(248,180,43)" fg:x="233" fg:w="1"/><text x="38.3219%" y="479.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (1 samples, 0.16%)</title><rect x="38.0719%" y="453" width="0.1634%" height="15" fill="rgb(235,73,17)" fg:x="233" fg:w="1"/><text x="38.3219%" y="463.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (1 samples, 0.16%)</title><rect x="38.0719%" y="437" width="0.1634%" height="15" fill="rgb(227,45,20)" fg:x="233" fg:w="1"/><text x="38.3219%" y="447.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (1 samples, 0.16%)</title><rect x="38.0719%" y="421" width="0.1634%" height="15" fill="rgb(236,115,17)" fg:x="233" fg:w="1"/><text x="38.3219%" y="431.50"></text></g><g><title>regex_syntax::ast::ClassSetUnion::push (1 samples, 0.16%)</title><rect x="38.2353%" y="533" width="0.1634%" height="15" fill="rgb(213,104,13)" fg:x="234" fg:w="1"/><text x="38.4853%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.16%)</title><rect x="38.2353%" y="517" width="0.1634%" height="15" fill="rgb(241,229,15)" fg:x="234" fg:w="1"/><text x="38.4853%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.16%)</title><rect x="38.2353%" y="501" width="0.1634%" height="15" fill="rgb(254,103,39)" fg:x="234" fg:w="1"/><text x="38.4853%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.16%)</title><rect x="38.2353%" y="485" width="0.1634%" height="15" fill="rgb(254,53,35)" fg:x="234" fg:w="1"/><text x="38.4853%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.16%)</title><rect x="38.2353%" y="469" width="0.1634%" height="15" fill="rgb(237,133,22)" fg:x="234" fg:w="1"/><text x="38.4853%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.16%)</title><rect x="38.2353%" y="453" width="0.1634%" height="15" fill="rgb(237,156,49)" fg:x="234" fg:w="1"/><text x="38.4853%" y="463.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.16%)</title><rect x="38.2353%" y="437" width="0.1634%" height="15" fill="rgb(214,150,36)" fg:x="234" fg:w="1"/><text x="38.4853%" y="447.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.16%)</title><rect x="38.2353%" y="421" width="0.1634%" height="15" fill="rgb(254,47,34)" fg:x="234" fg:w="1"/><text x="38.4853%" y="431.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.16%)</title><rect x="38.2353%" y="405" width="0.1634%" height="15" fill="rgb(254,73,4)" fg:x="234" fg:w="1"/><text x="38.4853%" y="415.50"></text></g><g><title>_int_realloc (1 samples, 0.16%)</title><rect x="38.2353%" y="389" width="0.1634%" height="15" fill="rgb(231,75,41)" fg:x="234" fg:w="1"/><text x="38.4853%" y="399.50"></text></g><g><title>_int_malloc (1 samples, 0.16%)</title><rect x="38.2353%" y="373" width="0.1634%" height="15" fill="rgb(222,219,51)" fg:x="234" fg:w="1"/><text x="38.4853%" y="383.50"></text></g><g><title>malloc_consolidate (1 samples, 0.16%)</title><rect x="38.2353%" y="357" width="0.1634%" height="15" fill="rgb(228,194,39)" fg:x="234" fg:w="1"/><text x="38.4853%" y="367.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_set_class (12 samples, 1.96%)</title><rect x="36.6013%" y="549" width="1.9608%" height="15" fill="rgb(248,118,21)" fg:x="224" fg:w="12"/><text x="36.8513%" y="559.50">r..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.16%)</title><rect x="38.3987%" y="533" width="0.1634%" height="15" fill="rgb(245,132,34)" fg:x="235" fg:w="1"/><text x="38.6487%" y="543.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::char (1 samples, 0.16%)</title><rect x="38.5621%" y="533" width="0.1634%" height="15" fill="rgb(206,73,47)" fg:x="236" fg:w="1"/><text x="38.8121%" y="543.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::bump (2 samples, 0.33%)</title><rect x="38.7255%" y="533" width="0.3268%" height="15" fill="rgb(207,165,29)" fg:x="237" fg:w="2"/><text x="38.9755%" y="543.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::is_eof (2 samples, 0.33%)</title><rect x="38.7255%" y="517" width="0.3268%" height="15" fill="rgb(215,65,50)" fg:x="237" fg:w="2"/><text x="38.9755%" y="527.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_primitive (7 samples, 1.14%)</title><rect x="38.5621%" y="549" width="1.1438%" height="15" fill="rgb(214,58,42)" fg:x="236" fg:w="7"/><text x="38.8121%" y="559.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.49%)</title><rect x="39.7059%" y="485" width="0.4902%" height="15" fill="rgb(206,112,53)" fg:x="243" fg:w="3"/><text x="39.9559%" y="495.50"></text></g><g><title>_int_malloc (3 samples, 0.49%)</title><rect x="39.7059%" y="469" width="0.4902%" height="15" fill="rgb(222,219,51)" fg:x="243" fg:w="3"/><text x="39.9559%" y="479.50"></text></g><g><title>_int_malloc (1 samples, 0.16%)</title><rect x="40.1961%" y="405" width="0.1634%" height="15" fill="rgb(222,219,51)" fg:x="246" fg:w="1"/><text x="40.4461%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.82%)</title><rect x="39.7059%" y="549" width="0.8170%" height="15" fill="rgb(241,229,15)" fg:x="243" fg:w="5"/><text x="39.9559%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (5 samples, 0.82%)</title><rect x="39.7059%" y="533" width="0.8170%" height="15" fill="rgb(254,103,39)" fg:x="243" fg:w="5"/><text x="39.9559%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.82%)</title><rect x="39.7059%" y="517" width="0.8170%" height="15" fill="rgb(254,53,35)" fg:x="243" fg:w="5"/><text x="39.9559%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.82%)</title><rect x="39.7059%" y="501" width="0.8170%" height="15" fill="rgb(237,133,22)" fg:x="243" fg:w="5"/><text x="39.9559%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.33%)</title><rect x="40.1961%" y="485" width="0.3268%" height="15" fill="rgb(237,156,49)" fg:x="246" fg:w="2"/><text x="40.4461%" y="495.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.33%)</title><rect x="40.1961%" y="469" width="0.3268%" height="15" fill="rgb(214,150,36)" fg:x="246" fg:w="2"/><text x="40.4461%" y="479.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.33%)</title><rect x="40.1961%" y="453" width="0.3268%" height="15" fill="rgb(254,47,34)" fg:x="246" fg:w="2"/><text x="40.4461%" y="463.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.33%)</title><rect x="40.1961%" y="437" width="0.3268%" height="15" fill="rgb(254,73,4)" fg:x="246" fg:w="2"/><text x="40.4461%" y="447.50"></text></g><g><title>_int_realloc (2 samples, 0.33%)</title><rect x="40.1961%" y="421" width="0.3268%" height="15" fill="rgb(231,75,41)" fg:x="246" fg:w="2"/><text x="40.4461%" y="431.50"></text></g><g><title>_int_free (1 samples, 0.16%)</title><rect x="40.3595%" y="405" width="0.1634%" height="15" fill="rgb(221,113,48)" fg:x="247" fg:w="1"/><text x="40.6095%" y="415.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.65%)</title><rect x="40.5229%" y="549" width="0.6536%" height="15" fill="rgb(245,132,34)" fg:x="248" fg:w="4"/><text x="40.7729%" y="559.50"></text></g><g><title>regex_syntax::ast::parse::Parser::parse (50 samples, 8.17%)</title><rect x="33.1699%" y="597" width="8.1699%" height="15" fill="rgb(225,142,35)" fg:x="203" fg:w="50"/><text x="33.4199%" y="607.50">regex_synta..</text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse (50 samples, 8.17%)</title><rect x="33.1699%" y="581" width="8.1699%" height="15" fill="rgb(254,60,41)" fg:x="203" fg:w="50"/><text x="33.4199%" y="591.50">regex_synta..</text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_with_comments (50 samples, 8.17%)</title><rect x="33.1699%" y="565" width="8.1699%" height="15" fill="rgb(223,9,23)" fg:x="203" fg:w="50"/><text x="33.4199%" y="575.50">regex_synta..</text></g><g><title>regex_automata::util::pool::inner::Pool&lt;T,F&gt;::new (1 samples, 0.16%)</title><rect x="41.3399%" y="565" width="0.1634%" height="15" fill="rgb(211,137,1)" fg:x="253" fg:w="1"/><text x="41.5899%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.16%)</title><rect x="41.3399%" y="549" width="0.1634%" height="15" fill="rgb(253,154,22)" fg:x="253" fg:w="1"/><text x="41.5899%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.16%)</title><rect x="41.3399%" y="533" width="0.1634%" height="15" fill="rgb(249,207,12)" fg:x="253" fg:w="1"/><text x="41.5899%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.16%)</title><rect x="41.3399%" y="517" width="0.1634%" height="15" fill="rgb(224,194,14)" fg:x="253" fg:w="1"/><text x="41.5899%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.16%)</title><rect x="41.3399%" y="501" width="0.1634%" height="15" fill="rgb(227,204,5)" fg:x="253" fg:w="1"/><text x="41.5899%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.16%)</title><rect x="41.3399%" y="485" width="0.1634%" height="15" fill="rgb(231,114,21)" fg:x="253" fg:w="1"/><text x="41.5899%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.16%)</title><rect x="41.3399%" y="469" width="0.1634%" height="15" fill="rgb(238,209,2)" fg:x="253" fg:w="1"/><text x="41.5899%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.16%)</title><rect x="41.3399%" y="453" width="0.1634%" height="15" fill="rgb(253,135,41)" fg:x="253" fg:w="1"/><text x="41.5899%" y="463.50"></text></g><g><title>__rdl_alloc (1 samples, 0.16%)</title><rect x="41.3399%" y="437" width="0.1634%" height="15" fill="rgb(241,201,43)" fg:x="253" fg:w="1"/><text x="41.5899%" y="447.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.16%)</title><rect x="41.3399%" y="421" width="0.1634%" height="15" fill="rgb(221,138,53)" fg:x="253" fg:w="1"/><text x="41.5899%" y="431.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (1 samples, 0.16%)</title><rect x="41.3399%" y="405" width="0.1634%" height="15" fill="rgb(242,5,51)" fg:x="253" fg:w="1"/><text x="41.5899%" y="415.50"></text></g><g><title>__posix_memalign (1 samples, 0.16%)</title><rect x="41.3399%" y="389" width="0.1634%" height="15" fill="rgb(233,116,13)" fg:x="253" fg:w="1"/><text x="41.5899%" y="399.50"></text></g><g><title>__posix_memalign (1 samples, 0.16%)</title><rect x="41.3399%" y="373" width="0.1634%" height="15" fill="rgb(233,116,13)" fg:x="253" fg:w="1"/><text x="41.5899%" y="383.50"></text></g><g><title>_mid_memalign (1 samples, 0.16%)</title><rect x="41.3399%" y="357" width="0.1634%" height="15" fill="rgb(205,227,42)" fg:x="253" fg:w="1"/><text x="41.5899%" y="367.50"></text></g><g><title>_int_memalign (1 samples, 0.16%)</title><rect x="41.3399%" y="341" width="0.1634%" height="15" fill="rgb(210,120,21)" fg:x="253" fg:w="1"/><text x="41.5899%" y="351.50"></text></g><g><title>_int_free (1 samples, 0.16%)</title><rect x="41.3399%" y="325" width="0.1634%" height="15" fill="rgb(221,113,48)" fg:x="253" fg:w="1"/><text x="41.5899%" y="335.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (2 samples, 0.33%)</title><rect x="41.3399%" y="597" width="0.3268%" height="15" fill="rgb(250,142,30)" fg:x="253" fg:w="2"/><text x="41.5899%" y="607.50"></text></g><g><title>regex_automata::util::pool::Pool&lt;T,F&gt;::new (2 samples, 0.33%)</title><rect x="41.3399%" y="581" width="0.3268%" height="15" fill="rgb(219,204,23)" fg:x="253" fg:w="2"/><text x="41.5899%" y="591.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.16%)</title><rect x="41.5033%" y="565" width="0.1634%" height="15" fill="rgb(209,114,30)" fg:x="254" fg:w="1"/><text x="41.7533%" y="575.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.16%)</title><rect x="41.5033%" y="549" width="0.1634%" height="15" fill="rgb(248,129,10)" fg:x="254" fg:w="1"/><text x="41.7533%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.16%)</title><rect x="41.5033%" y="533" width="0.1634%" height="15" fill="rgb(231,114,21)" fg:x="254" fg:w="1"/><text x="41.7533%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.16%)</title><rect x="41.5033%" y="517" width="0.1634%" height="15" fill="rgb(238,209,2)" fg:x="254" fg:w="1"/><text x="41.7533%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.16%)</title><rect x="41.5033%" y="501" width="0.1634%" height="15" fill="rgb(253,135,41)" fg:x="254" fg:w="1"/><text x="41.7533%" y="511.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.16%)</title><rect x="41.5033%" y="485" width="0.1634%" height="15" fill="rgb(206,112,53)" fg:x="254" fg:w="1"/><text x="41.7533%" y="495.50"></text></g><g><title>_int_malloc (1 samples, 0.16%)</title><rect x="41.5033%" y="469" width="0.1634%" height="15" fill="rgb(222,219,51)" fg:x="254" fg:w="1"/><text x="41.7533%" y="479.50"></text></g><g><title>malloc_consolidate (1 samples, 0.16%)</title><rect x="41.5033%" y="453" width="0.1634%" height="15" fill="rgb(228,194,39)" fg:x="254" fg:w="1"/><text x="41.7533%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::hir::Properties&gt; (1 samples, 0.16%)</title><rect x="41.6667%" y="501" width="0.1634%" height="15" fill="rgb(249,111,12)" fg:x="255" fg:w="1"/><text x="41.9167%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;regex_syntax::hir::PropertiesI&gt;&gt; (1 samples, 0.16%)</title><rect x="41.6667%" y="485" width="0.1634%" height="15" fill="rgb(237,14,7)" fg:x="255" fg:w="1"/><text x="41.9167%" y="495.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.16%)</title><rect x="41.6667%" y="469" width="0.1634%" height="15" fill="rgb(241,6,19)" fg:x="255" fg:w="1"/><text x="41.9167%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.16%)</title><rect x="41.6667%" y="453" width="0.1634%" height="15" fill="rgb(238,77,31)" fg:x="255" fg:w="1"/><text x="41.9167%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.16%)</title><rect x="41.6667%" y="437" width="0.1634%" height="15" fill="rgb(227,15,28)" fg:x="255" fg:w="1"/><text x="41.9167%" y="447.50"></text></g><g><title>__GI___libc_free (1 samples, 0.16%)</title><rect x="41.6667%" y="421" width="0.1634%" height="15" fill="rgb(247,8,17)" fg:x="255" fg:w="1"/><text x="41.9167%" y="431.50"></text></g><g><title>_int_free (1 samples, 0.16%)</title><rect x="41.6667%" y="405" width="0.1634%" height="15" fill="rgb(221,113,48)" fg:x="255" fg:w="1"/><text x="41.9167%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::hir::Hir&gt; (3 samples, 0.49%)</title><rect x="41.6667%" y="517" width="0.4902%" height="15" fill="rgb(244,216,7)" fg:x="255" fg:w="3"/><text x="41.9167%" y="527.50"></text></g><g><title>__GI___libc_free (2 samples, 0.33%)</title><rect x="41.8301%" y="501" width="0.3268%" height="15" fill="rgb(247,8,17)" fg:x="256" fg:w="2"/><text x="42.0801%" y="511.50"></text></g><g><title>_int_free (2 samples, 0.33%)</title><rect x="41.8301%" y="485" width="0.3268%" height="15" fill="rgb(221,113,48)" fg:x="256" fg:w="2"/><text x="42.0801%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_syntax::hir::Hir&gt;&gt; (3 samples, 0.49%)</title><rect x="42.1569%" y="517" width="0.4902%" height="15" fill="rgb(206,118,12)" fg:x="258" fg:w="3"/><text x="42.4069%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;regex_syntax::hir::Hir&gt;&gt; (3 samples, 0.49%)</title><rect x="42.1569%" y="501" width="0.4902%" height="15" fill="rgb(244,42,48)" fg:x="258" fg:w="3"/><text x="42.4069%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.49%)</title><rect x="42.1569%" y="485" width="0.4902%" height="15" fill="rgb(213,128,22)" fg:x="258" fg:w="3"/><text x="42.4069%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.49%)</title><rect x="42.1569%" y="469" width="0.4902%" height="15" fill="rgb(238,77,31)" fg:x="258" fg:w="3"/><text x="42.4069%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.49%)</title><rect x="42.1569%" y="453" width="0.4902%" height="15" fill="rgb(227,15,28)" fg:x="258" fg:w="3"/><text x="42.4069%" y="463.50"></text></g><g><title>__GI___libc_free (3 samples, 0.49%)</title><rect x="42.1569%" y="437" width="0.4902%" height="15" fill="rgb(247,8,17)" fg:x="258" fg:w="3"/><text x="42.4069%" y="447.50"></text></g><g><title>_int_free (3 samples, 0.49%)</title><rect x="42.1569%" y="421" width="0.4902%" height="15" fill="rgb(221,113,48)" fg:x="258" fg:w="3"/><text x="42.4069%" y="431.50"></text></g><g><title>malloc_consolidate (3 samples, 0.49%)</title><rect x="42.1569%" y="405" width="0.4902%" height="15" fill="rgb(228,194,39)" fg:x="258" fg:w="3"/><text x="42.4069%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_syntax::hir::Hir&gt;&gt; (7 samples, 1.14%)</title><rect x="41.6667%" y="597" width="1.1438%" height="15" fill="rgb(206,118,12)" fg:x="255" fg:w="7"/><text x="41.9167%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 1.14%)</title><rect x="41.6667%" y="581" width="1.1438%" height="15" fill="rgb(249,14,2)" fg:x="255" fg:w="7"/><text x="41.9167%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;[regex_syntax::hir::Hir]&gt; (7 samples, 1.14%)</title><rect x="41.6667%" y="565" width="1.1438%" height="15" fill="rgb(240,58,42)" fg:x="255" fg:w="7"/><text x="41.9167%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::hir::Hir&gt; (7 samples, 1.14%)</title><rect x="41.6667%" y="549" width="1.1438%" height="15" fill="rgb(244,216,7)" fg:x="255" fg:w="7"/><text x="41.9167%" y="559.50"></text></g><g><title>&lt;regex_syntax::hir::Hir as core::ops::drop::Drop&gt;::drop (7 samples, 1.14%)</title><rect x="41.6667%" y="533" width="1.1438%" height="15" fill="rgb(251,195,49)" fg:x="255" fg:w="7"/><text x="41.9167%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.16%)</title><rect x="42.6471%" y="517" width="0.1634%" height="15" fill="rgb(205,186,49)" fg:x="261" fg:w="1"/><text x="42.8971%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.16%)</title><rect x="42.6471%" y="501" width="0.1634%" height="15" fill="rgb(232,211,42)" fg:x="261" fg:w="1"/><text x="42.8971%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.16%)</title><rect x="42.6471%" y="485" width="0.1634%" height="15" fill="rgb(214,146,48)" fg:x="261" fg:w="1"/><text x="42.8971%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.16%)</title><rect x="42.6471%" y="469" width="0.1634%" height="15" fill="rgb(212,159,3)" fg:x="261" fg:w="1"/><text x="42.8971%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.16%)</title><rect x="42.6471%" y="453" width="0.1634%" height="15" fill="rgb(231,142,39)" fg:x="261" fg:w="1"/><text x="42.8971%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.16%)</title><rect x="42.6471%" y="437" width="0.1634%" height="15" fill="rgb(249,2,22)" fg:x="261" fg:w="1"/><text x="42.8971%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.16%)</title><rect x="42.6471%" y="421" width="0.1634%" height="15" fill="rgb(254,53,35)" fg:x="261" fg:w="1"/><text x="42.8971%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.16%)</title><rect x="42.6471%" y="405" width="0.1634%" height="15" fill="rgb(237,133,22)" fg:x="261" fg:w="1"/><text x="42.8971%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.16%)</title><rect x="42.6471%" y="389" width="0.1634%" height="15" fill="rgb(237,156,49)" fg:x="261" fg:w="1"/><text x="42.8971%" y="399.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.16%)</title><rect x="42.6471%" y="373" width="0.1634%" height="15" fill="rgb(214,150,36)" fg:x="261" fg:w="1"/><text x="42.8971%" y="383.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.16%)</title><rect x="42.6471%" y="357" width="0.1634%" height="15" fill="rgb(254,47,34)" fg:x="261" fg:w="1"/><text x="42.8971%" y="367.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.16%)</title><rect x="42.6471%" y="341" width="0.1634%" height="15" fill="rgb(254,73,4)" fg:x="261" fg:w="1"/><text x="42.8971%" y="351.50"></text></g><g><title>_int_realloc (1 samples, 0.16%)</title><rect x="42.6471%" y="325" width="0.1634%" height="15" fill="rgb(231,75,41)" fg:x="261" fg:w="1"/><text x="42.8971%" y="335.50"></text></g><g><title>_int_malloc (1 samples, 0.16%)</title><rect x="42.6471%" y="309" width="0.1634%" height="15" fill="rgb(222,219,51)" fg:x="261" fg:w="1"/><text x="42.8971%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;regex_syntax::ast::Repetition&gt;&gt; (1 samples, 0.16%)</title><rect x="42.8105%" y="501" width="0.1634%" height="15" fill="rgb(241,66,35)" fg:x="262" fg:w="1"/><text x="43.0605%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::ast::Repetition&gt; (1 samples, 0.16%)</title><rect x="42.8105%" y="485" width="0.1634%" height="15" fill="rgb(207,154,4)" fg:x="262" fg:w="1"/><text x="43.0605%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;regex_syntax::ast::Ast&gt;&gt; (1 samples, 0.16%)</title><rect x="42.8105%" y="469" width="0.1634%" height="15" fill="rgb(240,145,9)" fg:x="262" fg:w="1"/><text x="43.0605%" y="479.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.16%)</title><rect x="42.8105%" y="453" width="0.1634%" height="15" fill="rgb(241,6,19)" fg:x="262" fg:w="1"/><text x="43.0605%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.16%)</title><rect x="42.8105%" y="437" width="0.1634%" height="15" fill="rgb(238,77,31)" fg:x="262" fg:w="1"/><text x="43.0605%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.16%)</title><rect x="42.8105%" y="421" width="0.1634%" height="15" fill="rgb(227,15,28)" fg:x="262" fg:w="1"/><text x="43.0605%" y="431.50"></text></g><g><title>__GI___libc_free (1 samples, 0.16%)</title><rect x="42.8105%" y="405" width="0.1634%" height="15" fill="rgb(247,8,17)" fg:x="262" fg:w="1"/><text x="43.0605%" y="415.50"></text></g><g><title>_int_free (1 samples, 0.16%)</title><rect x="42.8105%" y="389" width="0.1634%" height="15" fill="rgb(221,113,48)" fg:x="262" fg:w="1"/><text x="43.0605%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;regex_syntax::ast::Group&gt;&gt; (1 samples, 0.16%)</title><rect x="42.9739%" y="501" width="0.1634%" height="15" fill="rgb(239,46,17)" fg:x="263" fg:w="1"/><text x="43.2239%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::ast::Group&gt; (1 samples, 0.16%)</title><rect x="42.9739%" y="485" width="0.1634%" height="15" fill="rgb(214,122,26)" fg:x="263" fg:w="1"/><text x="43.2239%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;regex_syntax::ast::Ast&gt;&gt; (1 samples, 0.16%)</title><rect x="42.9739%" y="469" width="0.1634%" height="15" fill="rgb(240,145,9)" fg:x="263" fg:w="1"/><text x="43.2239%" y="479.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.16%)</title><rect x="42.9739%" y="453" width="0.1634%" height="15" fill="rgb(241,6,19)" fg:x="263" fg:w="1"/><text x="43.2239%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.16%)</title><rect x="42.9739%" y="437" width="0.1634%" height="15" fill="rgb(238,77,31)" fg:x="263" fg:w="1"/><text x="43.2239%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.16%)</title><rect x="42.9739%" y="421" width="0.1634%" height="15" fill="rgb(227,15,28)" fg:x="263" fg:w="1"/><text x="43.2239%" y="431.50"></text></g><g><title>__GI___libc_free (1 samples, 0.16%)</title><rect x="42.9739%" y="405" width="0.1634%" height="15" fill="rgb(247,8,17)" fg:x="263" fg:w="1"/><text x="43.2239%" y="415.50"></text></g><g><title>arena_for_chunk (1 samples, 0.16%)</title><rect x="42.9739%" y="389" width="0.1634%" height="15" fill="rgb(234,26,42)" fg:x="263" fg:w="1"/><text x="43.2239%" y="399.50"></text></g><g><title>arena_for_chunk (1 samples, 0.16%)</title><rect x="42.9739%" y="373" width="0.1634%" height="15" fill="rgb(234,26,42)" fg:x="263" fg:w="1"/><text x="43.2239%" y="383.50"></text></g><g><title>heap_for_ptr (1 samples, 0.16%)</title><rect x="42.9739%" y="357" width="0.1634%" height="15" fill="rgb(232,140,25)" fg:x="263" fg:w="1"/><text x="43.2239%" y="367.50"></text></g><g><title>__GI___libc_free (1 samples, 0.16%)</title><rect x="43.1373%" y="501" width="0.1634%" height="15" fill="rgb(247,8,17)" fg:x="264" fg:w="1"/><text x="43.3873%" y="511.50"></text></g><g><title>_int_free (1 samples, 0.16%)</title><rect x="43.1373%" y="485" width="0.1634%" height="15" fill="rgb(221,113,48)" fg:x="264" fg:w="1"/><text x="43.3873%" y="495.50"></text></g><g><title>&lt;regex_syntax::ast::Ast as core::ops::drop::Drop&gt;::drop (1 samples, 0.16%)</title><rect x="43.3007%" y="501" width="0.1634%" height="15" fill="rgb(238,18,15)" fg:x="265" fg:w="1"/><text x="43.5507%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::ast::Ast&gt; (8 samples, 1.31%)</title><rect x="42.8105%" y="517" width="1.3072%" height="15" fill="rgb(216,180,24)" fg:x="262" fg:w="8"/><text x="43.0605%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (1 samples, 0.16%)</title><rect x="44.1176%" y="453" width="0.1634%" height="15" fill="rgb(219,39,7)" fg:x="270" fg:w="1"/><text x="44.3676%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 0.16%)</title><rect x="44.1176%" y="437" width="0.1634%" height="15" fill="rgb(228,217,33)" fg:x="270" fg:w="1"/><text x="44.3676%" y="447.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.16%)</title><rect x="44.2810%" y="453" width="0.1634%" height="15" fill="rgb(217,126,36)" fg:x="271" fg:w="1"/><text x="44.5310%" y="463.50"></text></g><g><title>unlink_chunk (1 samples, 0.16%)</title><rect x="44.4444%" y="213" width="0.1634%" height="15" fill="rgb(223,20,30)" fg:x="272" fg:w="1"/><text x="44.6944%" y="223.50"></text></g><g><title>malloc_consolidate (4 samples, 0.65%)</title><rect x="44.4444%" y="229" width="0.6536%" height="15" fill="rgb(228,194,39)" fg:x="272" fg:w="4"/><text x="44.6944%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;regex_syntax::ast::ClassBracketed&gt;&gt; (8 samples, 1.31%)</title><rect x="44.1176%" y="517" width="1.3072%" height="15" fill="rgb(216,49,34)" fg:x="270" fg:w="8"/><text x="44.3676%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::ast::ClassBracketed&gt; (8 samples, 1.31%)</title><rect x="44.1176%" y="501" width="1.3072%" height="15" fill="rgb(233,178,20)" fg:x="270" fg:w="8"/><text x="44.3676%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::ast::ClassSet&gt; (8 samples, 1.31%)</title><rect x="44.1176%" y="485" width="1.3072%" height="15" fill="rgb(218,161,37)" fg:x="270" fg:w="8"/><text x="44.3676%" y="495.50"></text></g><g><title>&lt;regex_syntax::ast::ClassSet as core::ops::drop::Drop&gt;::drop (8 samples, 1.31%)</title><rect x="44.1176%" y="469" width="1.3072%" height="15" fill="rgb(227,212,36)" fg:x="270" fg:w="8"/><text x="44.3676%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (6 samples, 0.98%)</title><rect x="44.4444%" y="453" width="0.9804%" height="15" fill="rgb(205,186,49)" fg:x="272" fg:w="6"/><text x="44.6944%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (6 samples, 0.98%)</title><rect x="44.4444%" y="437" width="0.9804%" height="15" fill="rgb(232,211,42)" fg:x="272" fg:w="6"/><text x="44.6944%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (6 samples, 0.98%)</title><rect x="44.4444%" y="421" width="0.9804%" height="15" fill="rgb(214,146,48)" fg:x="272" fg:w="6"/><text x="44.6944%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (6 samples, 0.98%)</title><rect x="44.4444%" y="405" width="0.9804%" height="15" fill="rgb(212,159,3)" fg:x="272" fg:w="6"/><text x="44.6944%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.98%)</title><rect x="44.4444%" y="389" width="0.9804%" height="15" fill="rgb(231,142,39)" fg:x="272" fg:w="6"/><text x="44.6944%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.98%)</title><rect x="44.4444%" y="373" width="0.9804%" height="15" fill="rgb(249,2,22)" fg:x="272" fg:w="6"/><text x="44.6944%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.98%)</title><rect x="44.4444%" y="357" width="0.9804%" height="15" fill="rgb(254,53,35)" fg:x="272" fg:w="6"/><text x="44.6944%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.98%)</title><rect x="44.4444%" y="341" width="0.9804%" height="15" fill="rgb(237,133,22)" fg:x="272" fg:w="6"/><text x="44.6944%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (6 samples, 0.98%)</title><rect x="44.4444%" y="325" width="0.9804%" height="15" fill="rgb(237,156,49)" fg:x="272" fg:w="6"/><text x="44.6944%" y="335.50"></text></g><g><title>alloc::alloc::Global::grow_impl (6 samples, 0.98%)</title><rect x="44.4444%" y="309" width="0.9804%" height="15" fill="rgb(214,150,36)" fg:x="272" fg:w="6"/><text x="44.6944%" y="319.50"></text></g><g><title>alloc::alloc::realloc (6 samples, 0.98%)</title><rect x="44.4444%" y="293" width="0.9804%" height="15" fill="rgb(254,47,34)" fg:x="272" fg:w="6"/><text x="44.6944%" y="303.50"></text></g><g><title>__GI___libc_realloc (6 samples, 0.98%)</title><rect x="44.4444%" y="277" width="0.9804%" height="15" fill="rgb(254,73,4)" fg:x="272" fg:w="6"/><text x="44.6944%" y="287.50"></text></g><g><title>_int_realloc (6 samples, 0.98%)</title><rect x="44.4444%" y="261" width="0.9804%" height="15" fill="rgb(231,75,41)" fg:x="272" fg:w="6"/><text x="44.6944%" y="271.50"></text></g><g><title>_int_malloc (6 samples, 0.98%)</title><rect x="44.4444%" y="245" width="0.9804%" height="15" fill="rgb(222,219,51)" fg:x="272" fg:w="6"/><text x="44.6944%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (1 samples, 0.16%)</title><rect x="45.4248%" y="517" width="0.1634%" height="15" fill="rgb(219,39,7)" fg:x="278" fg:w="1"/><text x="45.6748%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 0.16%)</title><rect x="45.4248%" y="501" width="0.1634%" height="15" fill="rgb(228,217,33)" fg:x="278" fg:w="1"/><text x="45.6748%" y="511.50"></text></g><g><title>_int_free (5 samples, 0.82%)</title><rect x="45.5882%" y="501" width="0.8170%" height="15" fill="rgb(221,113,48)" fg:x="279" fg:w="5"/><text x="45.8382%" y="511.50"></text></g><g><title>__GI___libc_free (7 samples, 1.14%)</title><rect x="45.5882%" y="517" width="1.1438%" height="15" fill="rgb(247,8,17)" fg:x="279" fg:w="7"/><text x="45.8382%" y="527.50"></text></g><g><title>unlink_chunk (1 samples, 0.16%)</title><rect x="46.7320%" y="277" width="0.1634%" height="15" fill="rgb(223,20,30)" fg:x="286" fg:w="1"/><text x="46.9820%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (3 samples, 0.49%)</title><rect x="46.7320%" y="485" width="0.4902%" height="15" fill="rgb(214,146,48)" fg:x="286" fg:w="3"/><text x="46.9820%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.49%)</title><rect x="46.7320%" y="469" width="0.4902%" height="15" fill="rgb(212,159,3)" fg:x="286" fg:w="3"/><text x="46.9820%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.49%)</title><rect x="46.7320%" y="453" width="0.4902%" height="15" fill="rgb(231,142,39)" fg:x="286" fg:w="3"/><text x="46.9820%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.49%)</title><rect x="46.7320%" y="437" width="0.4902%" height="15" fill="rgb(249,2,22)" fg:x="286" fg:w="3"/><text x="46.9820%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.49%)</title><rect x="46.7320%" y="421" width="0.4902%" height="15" fill="rgb(254,53,35)" fg:x="286" fg:w="3"/><text x="46.9820%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.49%)</title><rect x="46.7320%" y="405" width="0.4902%" height="15" fill="rgb(237,133,22)" fg:x="286" fg:w="3"/><text x="46.9820%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.49%)</title><rect x="46.7320%" y="389" width="0.4902%" height="15" fill="rgb(237,156,49)" fg:x="286" fg:w="3"/><text x="46.9820%" y="399.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.49%)</title><rect x="46.7320%" y="373" width="0.4902%" height="15" fill="rgb(214,150,36)" fg:x="286" fg:w="3"/><text x="46.9820%" y="383.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.49%)</title><rect x="46.7320%" y="357" width="0.4902%" height="15" fill="rgb(254,47,34)" fg:x="286" fg:w="3"/><text x="46.9820%" y="367.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.49%)</title><rect x="46.7320%" y="341" width="0.4902%" height="15" fill="rgb(254,73,4)" fg:x="286" fg:w="3"/><text x="46.9820%" y="351.50"></text></g><g><title>_int_realloc (3 samples, 0.49%)</title><rect x="46.7320%" y="325" width="0.4902%" height="15" fill="rgb(231,75,41)" fg:x="286" fg:w="3"/><text x="46.9820%" y="335.50"></text></g><g><title>_int_malloc (3 samples, 0.49%)</title><rect x="46.7320%" y="309" width="0.4902%" height="15" fill="rgb(222,219,51)" fg:x="286" fg:w="3"/><text x="46.9820%" y="319.50"></text></g><g><title>malloc_consolidate (3 samples, 0.49%)</title><rect x="46.7320%" y="293" width="0.4902%" height="15" fill="rgb(228,194,39)" fg:x="286" fg:w="3"/><text x="46.9820%" y="303.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (150 samples, 24.51%)</title><rect x="22.8758%" y="629" width="24.5098%" height="15" fill="rgb(212,33,22)" fg:x="140" fg:w="150"/><text x="23.1258%" y="639.50">regex_automata::meta::regex::Builder::b..</text></g><g><title>regex_automata::meta::regex::Builder::build_many (150 samples, 24.51%)</title><rect x="22.8758%" y="613" width="24.5098%" height="15" fill="rgb(236,25,32)" fg:x="140" fg:w="150"/><text x="23.1258%" y="623.50">regex_automata::meta::regex::Builder::b..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_syntax::ast::Ast&gt;&gt; (28 samples, 4.58%)</title><rect x="42.8105%" y="597" width="4.5752%" height="15" fill="rgb(234,216,45)" fg:x="262" fg:w="28"/><text x="43.0605%" y="607.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 4.58%)</title><rect x="42.8105%" y="581" width="4.5752%" height="15" fill="rgb(249,14,2)" fg:x="262" fg:w="28"/><text x="43.0605%" y="591.50">&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;[regex_syntax::ast::Ast]&gt; (28 samples, 4.58%)</title><rect x="42.8105%" y="565" width="4.5752%" height="15" fill="rgb(216,112,18)" fg:x="262" fg:w="28"/><text x="43.0605%" y="575.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::ast::Ast&gt; (28 samples, 4.58%)</title><rect x="42.8105%" y="549" width="4.5752%" height="15" fill="rgb(216,180,24)" fg:x="262" fg:w="28"/><text x="43.0605%" y="559.50">core:..</text></g><g><title>&lt;regex_syntax::ast::Ast as core::ops::drop::Drop&gt;::drop (28 samples, 4.58%)</title><rect x="42.8105%" y="533" width="4.5752%" height="15" fill="rgb(238,18,15)" fg:x="262" fg:w="28"/><text x="43.0605%" y="543.50">&lt;rege..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (4 samples, 0.65%)</title><rect x="46.7320%" y="517" width="0.6536%" height="15" fill="rgb(205,186,49)" fg:x="286" fg:w="4"/><text x="46.9820%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.65%)</title><rect x="46.7320%" y="501" width="0.6536%" height="15" fill="rgb(232,211,42)" fg:x="286" fg:w="4"/><text x="46.9820%" y="511.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_datetime_in_line (166 samples, 27.12%)</title><rect x="20.4248%" y="853" width="27.1242%" height="15" fill="rgb(212,53,9)" fg:x="125" fg:w="166"/><text x="20.6748%" y="863.50">s4lib::readers::syslinereader::SyslineReade..</text></g><g><title>s4lib::data::datetime::bytes_to_regex_to_datetime (166 samples, 27.12%)</title><rect x="20.4248%" y="837" width="27.1242%" height="15" fill="rgb(252,84,36)" fg:x="125" fg:w="166"/><text x="20.6748%" y="847.50">s4lib::data::datetime::bytes_to_regex_to_da..</text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref (154 samples, 25.16%)</title><rect x="22.3856%" y="821" width="25.1634%" height="15" fill="rgb(217,15,43)" fg:x="137" fg:w="154"/><text x="22.6356%" y="831.50">&lt;s4lib::data::datetime::DATETIME_PARSE_D..</text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref::__stability (154 samples, 25.16%)</title><rect x="22.3856%" y="805" width="25.1634%" height="15" fill="rgb(239,165,48)" fg:x="137" fg:w="154"/><text x="22.6356%" y="815.50">&lt;s4lib::data::datetime::DATETIME_PARSE_D..</text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (154 samples, 25.16%)</title><rect x="22.3856%" y="789" width="25.1634%" height="15" fill="rgb(235,175,8)" fg:x="137" fg:w="154"/><text x="22.6356%" y="799.50">lazy_static::lazy::Lazy&lt;T&gt;::get</text></g><g><title>std::sync::once::Once::call_once (154 samples, 25.16%)</title><rect x="22.3856%" y="773" width="25.1634%" height="15" fill="rgb(247,17,47)" fg:x="137" fg:w="154"/><text x="22.6356%" y="783.50">std::sync::once::Once::call_once</text></g><g><title>std::sys_common::once::futex::Once::call (154 samples, 25.16%)</title><rect x="22.3856%" y="757" width="25.1634%" height="15" fill="rgb(246,168,49)" fg:x="137" fg:w="154"/><text x="22.6356%" y="767.50">std::sys_common::once::futex::Once::call</text></g><g><title>std::sync::once::Once::call_once::{{closure}} (154 samples, 25.16%)</title><rect x="22.3856%" y="741" width="25.1634%" height="15" fill="rgb(237,63,35)" fg:x="137" fg:w="154"/><text x="22.6356%" y="751.50">std::sync::once::Once::call_once::{{clos..</text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}} (154 samples, 25.16%)</title><rect x="22.3856%" y="725" width="25.1634%" height="15" fill="rgb(238,7,51)" fg:x="137" fg:w="154"/><text x="22.6356%" y="735.50">lazy_static::lazy::Lazy&lt;T&gt;::get::{{closu..</text></g><g><title>core::ops::function::FnOnce::call_once (154 samples, 25.16%)</title><rect x="22.3856%" y="709" width="25.1634%" height="15" fill="rgb(210,80,10)" fg:x="137" fg:w="154"/><text x="22.6356%" y="719.50">core::ops::function::FnOnce::call_once</text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref::__static_ref_initialize (154 samples, 25.16%)</title><rect x="22.3856%" y="693" width="25.1634%" height="15" fill="rgb(205,24,29)" fg:x="137" fg:w="154"/><text x="22.6356%" y="703.50">&lt;s4lib::data::datetime::DATETIME_PARSE_D..</text></g><g><title>regex::regex::bytes::Regex::new (154 samples, 25.16%)</title><rect x="22.3856%" y="677" width="25.1634%" height="15" fill="rgb(246,224,25)" fg:x="137" fg:w="154"/><text x="22.6356%" y="687.50">regex::regex::bytes::Regex::new</text></g><g><title>regex::builders::bytes::RegexBuilder::build (151 samples, 24.67%)</title><rect x="22.8758%" y="661" width="24.6732%" height="15" fill="rgb(236,76,51)" fg:x="140" fg:w="151"/><text x="23.1258%" y="671.50">regex::builders::bytes::RegexBuilder::b..</text></g><g><title>regex::builders::Builder::build_one_bytes (151 samples, 24.67%)</title><rect x="22.8758%" y="645" width="24.6732%" height="15" fill="rgb(233,102,7)" fg:x="140" fg:w="151"/><text x="23.1258%" y="655.50">regex::builders::Builder::build_one_byt..</text></g><g><title>&lt;alloc::sync::Arc&lt;str&gt; as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.16%)</title><rect x="47.3856%" y="629" width="0.1634%" height="15" fill="rgb(236,118,46)" fg:x="290" fg:w="1"/><text x="47.6356%" y="639.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (1 samples, 0.16%)</title><rect x="47.3856%" y="613" width="0.1634%" height="15" fill="rgb(253,73,13)" fg:x="290" fg:w="1"/><text x="47.6356%" y="623.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;[T]&gt; as alloc::sync::ArcFromSlice&lt;T&gt;&gt;::from_slice (1 samples, 0.16%)</title><rect x="47.3856%" y="597" width="0.1634%" height="15" fill="rgb(232,64,3)" fg:x="290" fg:w="1"/><text x="47.6356%" y="607.50"></text></g><g><title>alloc::sync::Arc&lt;[T]&gt;::copy_from_slice (1 samples, 0.16%)</title><rect x="47.3856%" y="581" width="0.1634%" height="15" fill="rgb(234,137,46)" fg:x="290" fg:w="1"/><text x="47.6356%" y="591.50"></text></g><g><title>alloc::sync::Arc&lt;[T]&gt;::allocate_for_slice (1 samples, 0.16%)</title><rect x="47.3856%" y="565" width="0.1634%" height="15" fill="rgb(235,214,27)" fg:x="290" fg:w="1"/><text x="47.6356%" y="575.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::allocate_for_layout (1 samples, 0.16%)</title><rect x="47.3856%" y="549" width="0.1634%" height="15" fill="rgb(231,79,31)" fg:x="290" fg:w="1"/><text x="47.6356%" y="559.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::try_allocate_for_layout (1 samples, 0.16%)</title><rect x="47.3856%" y="533" width="0.1634%" height="15" fill="rgb(205,80,28)" fg:x="290" fg:w="1"/><text x="47.6356%" y="543.50"></text></g><g><title>alloc::sync::Arc&lt;[T]&gt;::allocate_for_slice::{{closure}} (1 samples, 0.16%)</title><rect x="47.3856%" y="517" width="0.1634%" height="15" fill="rgb(222,14,7)" fg:x="290" fg:w="1"/><text x="47.6356%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.16%)</title><rect x="47.3856%" y="501" width="0.1634%" height="15" fill="rgb(231,114,21)" fg:x="290" fg:w="1"/><text x="47.6356%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.16%)</title><rect x="47.3856%" y="485" width="0.1634%" height="15" fill="rgb(238,209,2)" fg:x="290" fg:w="1"/><text x="47.6356%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.16%)</title><rect x="47.3856%" y="469" width="0.1634%" height="15" fill="rgb(253,135,41)" fg:x="290" fg:w="1"/><text x="47.6356%" y="479.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.16%)</title><rect x="47.3856%" y="453" width="0.1634%" height="15" fill="rgb(206,112,53)" fg:x="290" fg:w="1"/><text x="47.6356%" y="463.50"></text></g><g><title>_int_malloc (1 samples, 0.16%)</title><rect x="47.3856%" y="437" width="0.1634%" height="15" fill="rgb(222,219,51)" fg:x="290" fg:w="1"/><text x="47.6356%" y="447.50"></text></g><g><title>unlink_chunk (1 samples, 0.16%)</title><rect x="47.3856%" y="421" width="0.1634%" height="15" fill="rgb(223,20,30)" fg:x="290" fg:w="1"/><text x="47.6356%" y="431.50"></text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::blockzero_analysis_syslines (167 samples, 27.29%)</title><rect x="20.4248%" y="933" width="27.2876%" height="15" fill="rgb(208,15,47)" fg:x="125" fg:w="167"/><text x="20.6748%" y="943.50">s4lib::readers::syslogprocessor::SyslogProce..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_sysline_in_block (167 samples, 27.29%)</title><rect x="20.4248%" y="917" width="27.2876%" height="15" fill="rgb(243,65,52)" fg:x="125" fg:w="167"/><text x="20.6748%" y="927.50">s4lib::readers::syslinereader::SyslineReader..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_sysline_in_block_year (167 samples, 27.29%)</title><rect x="20.4248%" y="901" width="27.2876%" height="15" fill="rgb(253,177,51)" fg:x="125" fg:w="167"/><text x="20.6748%" y="911.50">s4lib::readers::syslinereader::SyslineReader..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::parse_datetime_in_line_cached (167 samples, 27.29%)</title><rect x="20.4248%" y="885" width="27.2876%" height="15" fill="rgb(231,75,50)" fg:x="125" fg:w="167"/><text x="20.6748%" y="895.50">s4lib::readers::syslinereader::SyslineReader..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::parse_datetime_in_line (167 samples, 27.29%)</title><rect x="20.4248%" y="869" width="27.2876%" height="15" fill="rgb(234,54,15)" fg:x="125" fg:w="167"/><text x="20.6748%" y="879.50">s4lib::readers::syslinereader::SyslineReader..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::dt_patterns_update (1 samples, 0.16%)</title><rect x="47.5490%" y="853" width="0.1634%" height="15" fill="rgb(237,63,36)" fg:x="291" fg:w="1"/><text x="47.7990%" y="863.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::dt_patterns_indexes_refresh (1 samples, 0.16%)</title><rect x="47.5490%" y="837" width="0.1634%" height="15" fill="rgb(235,123,2)" fg:x="291" fg:w="1"/><text x="47.7990%" y="847.50"></text></g><g><title>itertools::Itertools::sorted_by (1 samples, 0.16%)</title><rect x="47.5490%" y="821" width="0.1634%" height="15" fill="rgb(225,164,23)" fg:x="291" fg:w="1"/><text x="47.7990%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by (1 samples, 0.16%)</title><rect x="47.5490%" y="805" width="0.1634%" height="15" fill="rgb(250,31,35)" fg:x="291" fg:w="1"/><text x="47.7990%" y="815.50"></text></g><g><title>alloc::slice::merge_sort (1 samples, 0.16%)</title><rect x="47.5490%" y="789" width="0.1634%" height="15" fill="rgb(250,151,13)" fg:x="291" fg:w="1"/><text x="47.7990%" y="799.50"></text></g><g><title>alloc::slice::merge (1 samples, 0.16%)</title><rect x="47.5490%" y="773" width="0.1634%" height="15" fill="rgb(210,27,32)" fg:x="291" fg:w="1"/><text x="47.7990%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.16%)</title><rect x="47.5490%" y="757" width="0.1634%" height="15" fill="rgb(214,20,35)" fg:x="291" fg:w="1"/><text x="47.7990%" y="767.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.16%)</title><rect x="47.5490%" y="741" width="0.1634%" height="15" fill="rgb(217,126,36)" fg:x="291" fg:w="1"/><text x="47.7990%" y="751.50"></text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::process_stage1_blockzero_analysis (168 samples, 27.45%)</title><rect x="20.4248%" y="965" width="27.4510%" height="15" fill="rgb(214,107,3)" fg:x="125" fg:w="168"/><text x="20.6748%" y="975.50">s4lib::readers::syslogprocessor::SyslogProce..</text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::blockzero_analysis (168 samples, 27.45%)</title><rect x="20.4248%" y="949" width="27.4510%" height="15" fill="rgb(228,176,28)" fg:x="125" fg:w="168"/><text x="20.6748%" y="959.50">s4lib::readers::syslogprocessor::SyslogProce..</text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::blockzero_analysis_bytes (1 samples, 0.16%)</title><rect x="47.7124%" y="933" width="0.1634%" height="15" fill="rgb(216,128,3)" fg:x="292" fg:w="1"/><text x="47.9624%" y="943.50"></text></g><g><title>s4lib::readers::blockreader::BlockReader::read_block (1 samples, 0.16%)</title><rect x="47.7124%" y="917" width="0.1634%" height="15" fill="rgb(226,163,28)" fg:x="292" fg:w="1"/><text x="47.9624%" y="927.50"></text></g><g><title>s4lib::readers::blockreader::BlockReader::read_block_FileGz (1 samples, 0.16%)</title><rect x="47.7124%" y="901" width="0.1634%" height="15" fill="rgb(228,92,5)" fg:x="292" fg:w="1"/><text x="47.9624%" y="911.50"></text></g><g><title>&lt;flate2::gz::read::GzDecoder&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.16%)</title><rect x="47.7124%" y="885" width="0.1634%" height="15" fill="rgb(235,171,44)" fg:x="292" fg:w="1"/><text x="47.9624%" y="895.50"></text></g><g><title>&lt;flate2::gz::bufread::GzDecoder&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.16%)</title><rect x="47.7124%" y="869" width="0.1634%" height="15" fill="rgb(225,64,27)" fg:x="292" fg:w="1"/><text x="47.9624%" y="879.50"></text></g><g><title>&lt;flate2::crc::CrcReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.16%)</title><rect x="47.7124%" y="853" width="0.1634%" height="15" fill="rgb(246,215,19)" fg:x="292" fg:w="1"/><text x="47.9624%" y="863.50"></text></g><g><title>&lt;flate2::deflate::bufread::DeflateDecoder&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.16%)</title><rect x="47.7124%" y="837" width="0.1634%" height="15" fill="rgb(208,217,13)" fg:x="292" fg:w="1"/><text x="47.9624%" y="847.50"></text></g><g><title>flate2::zio::read (1 samples, 0.16%)</title><rect x="47.7124%" y="821" width="0.1634%" height="15" fill="rgb(223,11,11)" fg:x="292" fg:w="1"/><text x="47.9624%" y="831.50"></text></g><g><title>&lt;flate2::ffi::rust::Inflate as flate2::ffi::InflateBackend&gt;::decompress (1 samples, 0.16%)</title><rect x="47.7124%" y="805" width="0.1634%" height="15" fill="rgb(229,135,15)" fg:x="292" fg:w="1"/><text x="47.9624%" y="815.50"></text></g><g><title>miniz_oxide::inflate::stream::inflate (1 samples, 0.16%)</title><rect x="47.7124%" y="789" width="0.1634%" height="15" fill="rgb(251,102,38)" fg:x="292" fg:w="1"/><text x="47.9624%" y="799.50"></text></g><g><title>miniz_oxide::inflate::stream::inflate_loop (1 samples, 0.16%)</title><rect x="47.7124%" y="773" width="0.1634%" height="15" fill="rgb(248,182,40)" fg:x="292" fg:w="1"/><text x="47.9624%" y="783.50"></text></g><g><title>miniz_oxide::inflate::core::decompress (1 samples, 0.16%)</title><rect x="47.7124%" y="757" width="0.1634%" height="15" fill="rgb(248,154,7)" fg:x="292" fg:w="1"/><text x="47.9624%" y="767.50"></text></g><g><title>miniz_oxide::inflate::core::decompress_fast (1 samples, 0.16%)</title><rect x="47.7124%" y="741" width="0.1634%" height="15" fill="rgb(241,55,25)" fg:x="292" fg:w="1"/><text x="47.9624%" y="751.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.16%)</title><rect x="47.8758%" y="725" width="0.1634%" height="15" fill="rgb(206,112,53)" fg:x="293" fg:w="1"/><text x="48.1258%" y="735.50"></text></g><g><title>_int_malloc (1 samples, 0.16%)</title><rect x="47.8758%" y="709" width="0.1634%" height="15" fill="rgb(222,219,51)" fg:x="293" fg:w="1"/><text x="48.1258%" y="719.50"></text></g><g><title>s4lib::data::line::Line::get_boxptrs (2 samples, 0.33%)</title><rect x="47.8758%" y="837" width="0.3268%" height="15" fill="rgb(211,81,2)" fg:x="293" fg:w="2"/><text x="48.1258%" y="847.50"></text></g><g><title>s4lib::data::line::LinePart::block_boxptr_ab (2 samples, 0.33%)</title><rect x="47.8758%" y="821" width="0.3268%" height="15" fill="rgb(217,228,51)" fg:x="293" fg:w="2"/><text x="48.1258%" y="831.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.33%)</title><rect x="47.8758%" y="805" width="0.3268%" height="15" fill="rgb(209,114,30)" fg:x="293" fg:w="2"/><text x="48.1258%" y="815.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.33%)</title><rect x="47.8758%" y="789" width="0.3268%" height="15" fill="rgb(248,129,10)" fg:x="293" fg:w="2"/><text x="48.1258%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.33%)</title><rect x="47.8758%" y="773" width="0.3268%" height="15" fill="rgb(231,114,21)" fg:x="293" fg:w="2"/><text x="48.1258%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.33%)</title><rect x="47.8758%" y="757" width="0.3268%" height="15" fill="rgb(238,209,2)" fg:x="293" fg:w="2"/><text x="48.1258%" y="767.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.33%)</title><rect x="47.8758%" y="741" width="0.3268%" height="15" fill="rgb(253,135,41)" fg:x="293" fg:w="2"/><text x="48.1258%" y="751.50"></text></g><g><title>chrono::naive::date::NaiveDate::checked_add_signed (1 samples, 0.16%)</title><rect x="48.2026%" y="693" width="0.1634%" height="15" fill="rgb(246,229,39)" fg:x="295" fg:w="1"/><text x="48.4526%" y="703.50"></text></g><g><title>chrono::naive::date::NaiveDate::add_days (1 samples, 0.16%)</title><rect x="48.2026%" y="677" width="0.1634%" height="15" fill="rgb(234,211,4)" fg:x="295" fg:w="1"/><text x="48.4526%" y="687.50"></text></g><g><title>chrono::offset::TimeZone::from_local_datetime (2 samples, 0.33%)</title><rect x="48.2026%" y="805" width="0.3268%" height="15" fill="rgb(244,75,24)" fg:x="295" fg:w="2"/><text x="48.4526%" y="815.50"></text></g><g><title>chrono::offset::LocalResult&lt;T&gt;::map (2 samples, 0.33%)</title><rect x="48.2026%" y="789" width="0.3268%" height="15" fill="rgb(224,169,52)" fg:x="295" fg:w="2"/><text x="48.4526%" y="799.50"></text></g><g><title>chrono::offset::TimeZone::from_local_datetime::{{closure}} (2 samples, 0.33%)</title><rect x="48.2026%" y="773" width="0.3268%" height="15" fill="rgb(212,118,1)" fg:x="295" fg:w="2"/><text x="48.4526%" y="783.50"></text></g><g><title>chrono::offset::fixed::&lt;impl core::ops::arith::Sub&lt;chrono::offset::fixed::FixedOffset&gt; for chrono::naive::datetime::NaiveDateTime&gt;::sub (2 samples, 0.33%)</title><rect x="48.2026%" y="757" width="0.3268%" height="15" fill="rgb(253,9,6)" fg:x="295" fg:w="2"/><text x="48.4526%" y="767.50"></text></g><g><title>chrono::offset::fixed::add_with_leapsecond (2 samples, 0.33%)</title><rect x="48.2026%" y="741" width="0.3268%" height="15" fill="rgb(232,33,4)" fg:x="295" fg:w="2"/><text x="48.4526%" y="751.50"></text></g><g><title>&lt;chrono::naive::datetime::NaiveDateTime as core::ops::arith::Add&lt;chrono::duration::Duration&gt;&gt;::add (2 samples, 0.33%)</title><rect x="48.2026%" y="725" width="0.3268%" height="15" fill="rgb(218,14,38)" fg:x="295" fg:w="2"/><text x="48.4526%" y="735.50"></text></g><g><title>chrono::naive::datetime::NaiveDateTime::checked_add_signed (2 samples, 0.33%)</title><rect x="48.2026%" y="709" width="0.3268%" height="15" fill="rgb(230,97,7)" fg:x="295" fg:w="2"/><text x="48.4526%" y="719.50"></text></g><g><title>chrono::offset::LocalResult&lt;T&gt;::earliest (1 samples, 0.16%)</title><rect x="48.5294%" y="805" width="0.1634%" height="15" fill="rgb(210,86,45)" fg:x="297" fg:w="1"/><text x="48.7794%" y="815.50"></text></g><g><title>s4lib::data::datetime::datetime_parse_from_str (7 samples, 1.14%)</title><rect x="48.2026%" y="821" width="1.1438%" height="15" fill="rgb(242,206,13)" fg:x="295" fg:w="7"/><text x="48.4526%" y="831.50"></text></g><g><title>chrono::naive::datetime::NaiveDateTime::parse_from_str (4 samples, 0.65%)</title><rect x="48.6928%" y="805" width="0.6536%" height="15" fill="rgb(217,43,10)" fg:x="298" fg:w="4"/><text x="48.9428%" y="815.50"></text></g><g><title>chrono::format::parse::parse (4 samples, 0.65%)</title><rect x="48.6928%" y="789" width="0.6536%" height="15" fill="rgb(248,184,2)" fg:x="298" fg:w="4"/><text x="48.9428%" y="799.50"></text></g><g><title>chrono::format::parse::parse_internal (4 samples, 0.65%)</title><rect x="48.6928%" y="773" width="0.6536%" height="15" fill="rgb(254,10,23)" fg:x="298" fg:w="4"/><text x="48.9428%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.16%)</title><rect x="49.3464%" y="709" width="0.1634%" height="15" fill="rgb(230,119,31)" fg:x="302" fg:w="1"/><text x="49.5964%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.16%)</title><rect x="49.3464%" y="693" width="0.1634%" height="15" fill="rgb(252,63,32)" fg:x="302" fg:w="1"/><text x="49.5964%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.16%)</title><rect x="49.3464%" y="677" width="0.1634%" height="15" fill="rgb(248,7,52)" fg:x="302" fg:w="1"/><text x="49.5964%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 0.16%)</title><rect x="49.3464%" y="661" width="0.1634%" height="15" fill="rgb(208,119,11)" fg:x="302" fg:w="1"/><text x="49.5964%" y="671.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.16%)</title><rect x="49.3464%" y="645" width="0.1634%" height="15" fill="rgb(218,185,12)" fg:x="302" fg:w="1"/><text x="49.5964%" y="655.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.16%)</title><rect x="49.3464%" y="629" width="0.1634%" height="15" fill="rgb(254,162,47)" fg:x="302" fg:w="1"/><text x="49.5964%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.16%)</title><rect x="49.3464%" y="613" width="0.1634%" height="15" fill="rgb(242,44,7)" fg:x="302" fg:w="1"/><text x="49.5964%" y="623.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.16%)</title><rect x="49.3464%" y="597" width="0.1634%" height="15" fill="rgb(216,62,21)" fg:x="302" fg:w="1"/><text x="49.5964%" y="607.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.16%)</title><rect x="49.3464%" y="581" width="0.1634%" height="15" fill="rgb(221,225,42)" fg:x="302" fg:w="1"/><text x="49.5964%" y="591.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.33%)</title><rect x="49.3464%" y="757" width="0.3268%" height="15" fill="rgb(218,89,21)" fg:x="302" fg:w="2"/><text x="49.5964%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.33%)</title><rect x="49.3464%" y="741" width="0.3268%" height="15" fill="rgb(207,60,33)" fg:x="302" fg:w="2"/><text x="49.5964%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.33%)</title><rect x="49.3464%" y="725" width="0.3268%" height="15" fill="rgb(207,224,35)" fg:x="302" fg:w="2"/><text x="49.5964%" y="735.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.16%)</title><rect x="49.5098%" y="709" width="0.1634%" height="15" fill="rgb(241,1,29)" fg:x="303" fg:w="1"/><text x="49.7598%" y="719.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.16%)</title><rect x="49.5098%" y="693" width="0.1634%" height="15" fill="rgb(222,198,6)" fg:x="303" fg:w="1"/><text x="49.7598%" y="703.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="49.5098%" y="677" width="0.1634%" height="15" fill="rgb(218,214,24)" fg:x="303" fg:w="1"/><text x="49.7598%" y="687.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="49.5098%" y="661" width="0.1634%" height="15" fill="rgb(230,187,21)" fg:x="303" fg:w="1"/><text x="49.7598%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="49.5098%" y="645" width="0.1634%" height="15" fill="rgb(244,191,49)" fg:x="303" fg:w="1"/><text x="49.7598%" y="655.50"></text></g><g><title>regex::regex::bytes::Captures::name (3 samples, 0.49%)</title><rect x="49.3464%" y="805" width="0.4902%" height="15" fill="rgb(227,58,29)" fg:x="302" fg:w="3"/><text x="49.5964%" y="815.50"></text></g><g><title>regex_automata::util::captures::Captures::get_group_by_name (3 samples, 0.49%)</title><rect x="49.3464%" y="789" width="0.4902%" height="15" fill="rgb(243,115,33)" fg:x="302" fg:w="3"/><text x="49.5964%" y="799.50"></text></g><g><title>regex_automata::util::captures::GroupInfo::to_index (3 samples, 0.49%)</title><rect x="49.3464%" y="773" width="0.4902%" height="15" fill="rgb(250,225,43)" fg:x="302" fg:w="3"/><text x="49.5964%" y="783.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.16%)</title><rect x="49.6732%" y="757" width="0.1634%" height="15" fill="rgb(248,37,28)" fg:x="304" fg:w="1"/><text x="49.9232%" y="767.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.16%)</title><rect x="49.6732%" y="741" width="0.1634%" height="15" fill="rgb(254,216,37)" fg:x="304" fg:w="1"/><text x="49.9232%" y="751.50"></text></g><g><title>s4lib::data::datetime::captures_to_buffer_bytes (4 samples, 0.65%)</title><rect x="49.3464%" y="821" width="0.6536%" height="15" fill="rgb(241,188,28)" fg:x="302" fg:w="4"/><text x="49.5964%" y="831.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.16%)</title><rect x="49.8366%" y="805" width="0.1634%" height="15" fill="rgb(217,126,36)" fg:x="305" fg:w="1"/><text x="50.0866%" y="815.50"></text></g><g><title>regex_automata::nfa::thompson::backtrack::BoundedBacktracker::try_search_slots_imp (1 samples, 0.16%)</title><rect x="50.0000%" y="677" width="0.1634%" height="15" fill="rgb(254,24,16)" fg:x="306" fg:w="1"/><text x="50.2500%" y="687.50"></text></g><g><title>regex_automata::nfa::thompson::backtrack::BoundedBacktracker::search_imp (1 samples, 0.16%)</title><rect x="50.0000%" y="661" width="0.1634%" height="15" fill="rgb(207,186,34)" fg:x="306" fg:w="1"/><text x="50.2500%" y="671.50"></text></g><g><title>regex_automata::nfa::thompson::backtrack::BoundedBacktracker::backtrack (1 samples, 0.16%)</title><rect x="50.0000%" y="645" width="0.1634%" height="15" fill="rgb(240,43,20)" fg:x="306" fg:w="1"/><text x="50.2500%" y="655.50"></text></g><g><title>regex_automata::nfa::thompson::backtrack::BoundedBacktracker::step (1 samples, 0.16%)</title><rect x="50.0000%" y="629" width="0.1634%" height="15" fill="rgb(236,64,1)" fg:x="306" fg:w="1"/><text x="50.2500%" y="639.50"></text></g><g><title>regex_automata::nfa::thompson::backtrack::Visited::insert (1 samples, 0.16%)</title><rect x="50.0000%" y="613" width="0.1634%" height="15" fill="rgb(230,207,22)" fg:x="306" fg:w="1"/><text x="50.2500%" y="623.50"></text></g><g><title>regex_automata::nfa::thompson::backtrack::BoundedBacktracker::try_search_slots (2 samples, 0.33%)</title><rect x="50.0000%" y="693" width="0.3268%" height="15" fill="rgb(223,178,39)" fg:x="306" fg:w="2"/><text x="50.2500%" y="703.50"></text></g><g><title>s4lib::data::datetime::bytes_to_regex_to_datetime (14 samples, 2.29%)</title><rect x="48.2026%" y="837" width="2.2876%" height="15" fill="rgb(252,84,36)" fg:x="295" fg:w="14"/><text x="48.4526%" y="847.50">s..</text></g><g><title>regex::regex::bytes::Regex::captures (3 samples, 0.49%)</title><rect x="50.0000%" y="821" width="0.4902%" height="15" fill="rgb(233,29,12)" fg:x="306" fg:w="3"/><text x="50.2500%" y="831.50"></text></g><g><title>regex::regex::bytes::Regex::captures_at (3 samples, 0.49%)</title><rect x="50.0000%" y="805" width="0.4902%" height="15" fill="rgb(207,96,18)" fg:x="306" fg:w="3"/><text x="50.2500%" y="815.50"></text></g><g><title>regex_automata::meta::regex::Regex::captures (3 samples, 0.49%)</title><rect x="50.0000%" y="789" width="0.4902%" height="15" fill="rgb(219,198,6)" fg:x="306" fg:w="3"/><text x="50.2500%" y="799.50"></text></g><g><title>regex_automata::meta::regex::Regex::search_captures (3 samples, 0.49%)</title><rect x="50.0000%" y="773" width="0.4902%" height="15" fill="rgb(212,211,21)" fg:x="306" fg:w="3"/><text x="50.2500%" y="783.50"></text></g><g><title>regex_automata::meta::regex::Regex::search_slots (3 samples, 0.49%)</title><rect x="50.0000%" y="757" width="0.4902%" height="15" fill="rgb(243,12,43)" fg:x="306" fg:w="3"/><text x="50.2500%" y="767.50"></text></g><g><title>&lt;regex_automata::meta::strategy::Core as regex_automata::meta::strategy::Strategy&gt;::search_slots (3 samples, 0.49%)</title><rect x="50.0000%" y="741" width="0.4902%" height="15" fill="rgb(221,222,32)" fg:x="306" fg:w="3"/><text x="50.2500%" y="751.50"></text></g><g><title>regex_automata::meta::strategy::Core::search_slots_nofail (3 samples, 0.49%)</title><rect x="50.0000%" y="725" width="0.4902%" height="15" fill="rgb(248,164,40)" fg:x="306" fg:w="3"/><text x="50.2500%" y="735.50"></text></g><g><title>regex_automata::meta::wrappers::BoundedBacktrackerEngine::search_slots (3 samples, 0.49%)</title><rect x="50.0000%" y="709" width="0.4902%" height="15" fill="rgb(224,210,15)" fg:x="306" fg:w="3"/><text x="50.2500%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.16%)</title><rect x="50.3268%" y="693" width="0.1634%" height="15" fill="rgb(212,186,21)" fg:x="308" fg:w="1"/><text x="50.5768%" y="703.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_datetime_in_line (17 samples, 2.78%)</title><rect x="47.8758%" y="853" width="2.7778%" height="15" fill="rgb(212,53,9)" fg:x="293" fg:w="17"/><text x="48.1258%" y="863.50">s4..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.16%)</title><rect x="50.6536%" y="805" width="0.1634%" height="15" fill="rgb(232,14,28)" fg:x="310" fg:w="1"/><text x="50.9036%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.16%)</title><rect x="50.6536%" y="789" width="0.1634%" height="15" fill="rgb(253,154,22)" fg:x="310" fg:w="1"/><text x="50.9036%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.16%)</title><rect x="50.6536%" y="773" width="0.1634%" height="15" fill="rgb(249,207,12)" fg:x="310" fg:w="1"/><text x="50.9036%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.16%)</title><rect x="50.6536%" y="757" width="0.1634%" height="15" fill="rgb(224,194,14)" fg:x="310" fg:w="1"/><text x="50.9036%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.16%)</title><rect x="50.6536%" y="741" width="0.1634%" height="15" fill="rgb(227,204,5)" fg:x="310" fg:w="1"/><text x="50.9036%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.16%)</title><rect x="50.6536%" y="725" width="0.1634%" height="15" fill="rgb(231,114,21)" fg:x="310" fg:w="1"/><text x="50.9036%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.16%)</title><rect x="50.6536%" y="709" width="0.1634%" height="15" fill="rgb(238,209,2)" fg:x="310" fg:w="1"/><text x="50.9036%" y="719.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.16%)</title><rect x="50.6536%" y="693" width="0.1634%" height="15" fill="rgb(253,135,41)" fg:x="310" fg:w="1"/><text x="50.9036%" y="703.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.16%)</title><rect x="50.6536%" y="677" width="0.1634%" height="15" fill="rgb(206,112,53)" fg:x="310" fg:w="1"/><text x="50.9036%" y="687.50"></text></g><g><title>_int_malloc (1 samples, 0.16%)</title><rect x="50.6536%" y="661" width="0.1634%" height="15" fill="rgb(222,219,51)" fg:x="310" fg:w="1"/><text x="50.9036%" y="671.50"></text></g><g><title>itertools::Itertools::sorted_by (5 samples, 0.82%)</title><rect x="50.6536%" y="853" width="0.8170%" height="15" fill="rgb(225,164,23)" fg:x="310" fg:w="5"/><text x="50.9036%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5 samples, 0.82%)</title><rect x="50.6536%" y="837" width="0.8170%" height="15" fill="rgb(247,137,3)" fg:x="310" fg:w="5"/><text x="50.9036%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.82%)</title><rect x="50.6536%" y="821" width="0.8170%" height="15" fill="rgb(227,158,43)" fg:x="310" fg:w="5"/><text x="50.9036%" y="831.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::parse_datetime_in_line (23 samples, 3.76%)</title><rect x="47.8758%" y="869" width="3.7582%" height="15" fill="rgb(234,54,15)" fg:x="293" fg:w="23"/><text x="48.1258%" y="879.50">s4li..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (1 samples, 0.16%)</title><rect x="51.4706%" y="853" width="0.1634%" height="15" fill="rgb(226,167,9)" fg:x="315" fg:w="1"/><text x="51.7206%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (1 samples, 0.16%)</title><rect x="51.4706%" y="837" width="0.1634%" height="15" fill="rgb(231,42,29)" fg:x="315" fg:w="1"/><text x="51.7206%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.16%)</title><rect x="51.4706%" y="821" width="0.1634%" height="15" fill="rgb(232,211,42)" fg:x="315" fg:w="1"/><text x="51.7206%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.16%)</title><rect x="51.4706%" y="805" width="0.1634%" height="15" fill="rgb(214,146,48)" fg:x="315" fg:w="1"/><text x="51.7206%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.16%)</title><rect x="51.4706%" y="789" width="0.1634%" height="15" fill="rgb(212,159,3)" fg:x="315" fg:w="1"/><text x="51.7206%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.16%)</title><rect x="51.4706%" y="773" width="0.1634%" height="15" fill="rgb(231,142,39)" fg:x="315" fg:w="1"/><text x="51.7206%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.16%)</title><rect x="51.4706%" y="757" width="0.1634%" height="15" fill="rgb(249,2,22)" fg:x="315" fg:w="1"/><text x="51.7206%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.16%)</title><rect x="51.4706%" y="741" width="0.1634%" height="15" fill="rgb(254,53,35)" fg:x="315" fg:w="1"/><text x="51.7206%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.16%)</title><rect x="51.4706%" y="725" width="0.1634%" height="15" fill="rgb(237,133,22)" fg:x="315" fg:w="1"/><text x="51.7206%" y="735.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.16%)</title><rect x="51.4706%" y="709" width="0.1634%" height="15" fill="rgb(206,149,53)" fg:x="315" fg:w="1"/><text x="51.7206%" y="719.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::parse_datetime_in_line_cached (24 samples, 3.92%)</title><rect x="47.8758%" y="885" width="3.9216%" height="15" fill="rgb(231,75,50)" fg:x="293" fg:w="24"/><text x="48.1258%" y="895.50">s4li..</text></g><g><title>lru::LruCache&lt;K,V,S&gt;::get (1 samples, 0.16%)</title><rect x="51.6340%" y="869" width="0.1634%" height="15" fill="rgb(207,105,41)" fg:x="316" fg:w="1"/><text x="51.8840%" y="879.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (1 samples, 0.16%)</title><rect x="51.6340%" y="853" width="0.1634%" height="15" fill="rgb(207,58,42)" fg:x="316" fg:w="1"/><text x="51.8840%" y="863.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (1 samples, 0.16%)</title><rect x="51.6340%" y="837" width="0.1634%" height="15" fill="rgb(243,133,17)" fg:x="316" fg:w="1"/><text x="51.8840%" y="847.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.16%)</title><rect x="51.6340%" y="821" width="0.1634%" height="15" fill="rgb(241,1,29)" fg:x="316" fg:w="1"/><text x="51.8840%" y="831.50"></text></g><g><title>&lt;lru::KeyWrapper&lt;K&gt; as core::hash::Hash&gt;::hash (1 samples, 0.16%)</title><rect x="51.6340%" y="805" width="0.1634%" height="15" fill="rgb(223,41,5)" fg:x="316" fg:w="1"/><text x="51.8840%" y="815.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (1 samples, 0.16%)</title><rect x="51.6340%" y="789" width="0.1634%" height="15" fill="rgb(213,18,30)" fg:x="316" fg:w="1"/><text x="51.8840%" y="799.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (1 samples, 0.16%)</title><rect x="51.6340%" y="773" width="0.1634%" height="15" fill="rgb(228,200,49)" fg:x="316" fg:w="1"/><text x="51.8840%" y="783.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1 samples, 0.16%)</title><rect x="51.6340%" y="757" width="0.1634%" height="15" fill="rgb(243,175,12)" fg:x="316" fg:w="1"/><text x="51.8840%" y="767.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.16%)</title><rect x="51.6340%" y="741" width="0.1634%" height="15" fill="rgb(253,180,14)" fg:x="316" fg:w="1"/><text x="51.8840%" y="751.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree_for_bifurcation (1 samples, 0.16%)</title><rect x="51.7974%" y="805" width="0.1634%" height="15" fill="rgb(224,149,14)" fg:x="317" fg:w="1"/><text x="52.0474%" y="815.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_upper_bound_index (1 samples, 0.16%)</title><rect x="51.7974%" y="789" width="0.1634%" height="15" fill="rgb(221,199,33)" fg:x="317" fg:w="1"/><text x="52.0474%" y="799.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1 samples, 0.16%)</title><rect x="51.7974%" y="773" width="0.1634%" height="15" fill="rgb(233,132,38)" fg:x="317" fg:w="1"/><text x="52.0474%" y="783.50"></text></g><g><title>&lt;rangemap::range_wrapper::RangeStartWrapper&lt;T&gt; as core::cmp::Ord&gt;::cmp (3 samples, 0.49%)</title><rect x="51.9608%" y="757" width="0.4902%" height="15" fill="rgb(213,83,29)" fg:x="318" fg:w="3"/><text x="52.2108%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (3 samples, 0.49%)</title><rect x="51.9608%" y="741" width="0.4902%" height="15" fill="rgb(231,0,6)" fg:x="318" fg:w="3"/><text x="52.2108%" y="751.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::range_search (6 samples, 0.98%)</title><rect x="51.7974%" y="837" width="0.9804%" height="15" fill="rgb(231,205,12)" fg:x="317" fg:w="6"/><text x="52.0474%" y="847.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::find_leaf_edges_spanning_range (6 samples, 0.98%)</title><rect x="51.7974%" y="821" width="0.9804%" height="15" fill="rgb(254,228,40)" fg:x="317" fg:w="6"/><text x="52.0474%" y="831.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::find_upper_bound_edge (5 samples, 0.82%)</title><rect x="51.9608%" y="805" width="0.8170%" height="15" fill="rgb(233,228,1)" fg:x="318" fg:w="5"/><text x="52.2108%" y="815.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_upper_bound_index (5 samples, 0.82%)</title><rect x="51.9608%" y="789" width="0.8170%" height="15" fill="rgb(221,199,33)" fg:x="318" fg:w="5"/><text x="52.2108%" y="799.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (5 samples, 0.82%)</title><rect x="51.9608%" y="773" width="0.8170%" height="15" fill="rgb(233,132,38)" fg:x="318" fg:w="5"/><text x="52.2108%" y="783.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::insert_sysline (7 samples, 1.14%)</title><rect x="51.7974%" y="885" width="1.1438%" height="15" fill="rgb(207,59,0)" fg:x="317" fg:w="7"/><text x="52.0474%" y="895.50"></text></g><g><title>rangemap::map::RangeMap&lt;K,V&gt;::insert (7 samples, 1.14%)</title><rect x="51.7974%" y="869" width="1.1438%" height="15" fill="rgb(216,177,54)" fg:x="317" fg:w="7"/><text x="52.0474%" y="879.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::range (7 samples, 1.14%)</title><rect x="51.7974%" y="853" width="1.1438%" height="15" fill="rgb(253,189,7)" fg:x="317" fg:w="7"/><text x="52.0474%" y="863.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::check_store (1 samples, 0.16%)</title><rect x="52.9412%" y="885" width="0.1634%" height="15" fill="rgb(240,122,8)" fg:x="324" fg:w="1"/><text x="53.1912%" y="895.50"></text></g><g><title>lru::LruCache&lt;K,V,S&gt;::get (1 samples, 0.16%)</title><rect x="52.9412%" y="869" width="0.1634%" height="15" fill="rgb(207,105,41)" fg:x="324" fg:w="1"/><text x="53.1912%" y="879.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (1 samples, 0.16%)</title><rect x="52.9412%" y="853" width="0.1634%" height="15" fill="rgb(207,58,42)" fg:x="324" fg:w="1"/><text x="53.1912%" y="863.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (1 samples, 0.16%)</title><rect x="52.9412%" y="837" width="0.1634%" height="15" fill="rgb(243,133,17)" fg:x="324" fg:w="1"/><text x="53.1912%" y="847.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.16%)</title><rect x="52.9412%" y="821" width="0.1634%" height="15" fill="rgb(241,1,29)" fg:x="324" fg:w="1"/><text x="53.1912%" y="831.50"></text></g><g><title>&lt;lru::KeyWrapper&lt;K&gt; as core::hash::Hash&gt;::hash (1 samples, 0.16%)</title><rect x="52.9412%" y="805" width="0.1634%" height="15" fill="rgb(223,41,5)" fg:x="324" fg:w="1"/><text x="53.1912%" y="815.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (1 samples, 0.16%)</title><rect x="52.9412%" y="789" width="0.1634%" height="15" fill="rgb(213,18,30)" fg:x="324" fg:w="1"/><text x="53.1912%" y="799.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (1 samples, 0.16%)</title><rect x="52.9412%" y="773" width="0.1634%" height="15" fill="rgb(228,200,49)" fg:x="324" fg:w="1"/><text x="53.1912%" y="783.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1 samples, 0.16%)</title><rect x="52.9412%" y="757" width="0.1634%" height="15" fill="rgb(243,175,12)" fg:x="324" fg:w="1"/><text x="53.1912%" y="767.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.16%)</title><rect x="52.9412%" y="741" width="0.1634%" height="15" fill="rgb(253,180,14)" fg:x="324" fg:w="1"/><text x="53.1912%" y="751.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.16%)</title><rect x="52.9412%" y="725" width="0.1634%" height="15" fill="rgb(250,179,17)" fg:x="324" fg:w="1"/><text x="53.1912%" y="735.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.16%)</title><rect x="53.1046%" y="821" width="0.1634%" height="15" fill="rgb(231,80,37)" fg:x="325" fg:w="1"/><text x="53.3546%" y="831.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.33%)</title><rect x="53.1046%" y="837" width="0.3268%" height="15" fill="rgb(217,123,23)" fg:x="325" fg:w="2"/><text x="53.3546%" y="847.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (1 samples, 0.16%)</title><rect x="53.4314%" y="837" width="0.1634%" height="15" fill="rgb(219,192,38)" fg:x="327" fg:w="1"/><text x="53.6814%" y="847.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1 samples, 0.16%)</title><rect x="53.4314%" y="821" width="0.1634%" height="15" fill="rgb(217,165,36)" fg:x="327" fg:w="1"/><text x="53.6814%" y="831.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1 samples, 0.16%)</title><rect x="53.4314%" y="805" width="0.1634%" height="15" fill="rgb(220,202,26)" fg:x="327" fg:w="1"/><text x="53.6814%" y="815.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1 samples, 0.16%)</title><rect x="53.4314%" y="789" width="0.1634%" height="15" fill="rgb(233,132,38)" fg:x="327" fg:w="1"/><text x="53.6814%" y="799.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (1 samples, 0.16%)</title><rect x="53.4314%" y="773" width="0.1634%" height="15" fill="rgb(231,0,6)" fg:x="327" fg:w="1"/><text x="53.6814%" y="783.50"></text></g><g><title>s4lib::readers::linereader::LineReader::insert_line (4 samples, 0.65%)</title><rect x="53.1046%" y="869" width="0.6536%" height="15" fill="rgb(244,220,49)" fg:x="325" fg:w="4"/><text x="53.3546%" y="879.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.65%)</title><rect x="53.1046%" y="853" width="0.6536%" height="15" fill="rgb(213,87,31)" fg:x="325" fg:w="4"/><text x="53.3546%" y="863.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_lower_bound_index (1 samples, 0.16%)</title><rect x="53.7582%" y="789" width="0.1634%" height="15" fill="rgb(234,13,12)" fg:x="329" fg:w="1"/><text x="54.0082%" y="799.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1 samples, 0.16%)</title><rect x="53.7582%" y="773" width="0.1634%" height="15" fill="rgb(233,132,38)" fg:x="329" fg:w="1"/><text x="54.0082%" y="783.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::range_search (2 samples, 0.33%)</title><rect x="53.7582%" y="837" width="0.3268%" height="15" fill="rgb(231,205,12)" fg:x="329" fg:w="2"/><text x="54.0082%" y="847.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::find_leaf_edges_spanning_range (2 samples, 0.33%)</title><rect x="53.7582%" y="821" width="0.3268%" height="15" fill="rgb(254,228,40)" fg:x="329" fg:w="2"/><text x="54.0082%" y="831.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree_for_bifurcation (2 samples, 0.33%)</title><rect x="53.7582%" y="805" width="0.3268%" height="15" fill="rgb(224,149,14)" fg:x="329" fg:w="2"/><text x="54.0082%" y="815.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::range (3 samples, 0.49%)</title><rect x="53.7582%" y="853" width="0.4902%" height="15" fill="rgb(253,189,7)" fg:x="329" fg:w="3"/><text x="54.0082%" y="863.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (1 samples, 0.16%)</title><rect x="54.2484%" y="789" width="0.1634%" height="15" fill="rgb(231,0,6)" fg:x="332" fg:w="1"/><text x="54.4984%" y="799.50"></text></g><g><title>s4lib::readers::linereader::LineReader::get_linep (5 samples, 0.82%)</title><rect x="53.7582%" y="869" width="0.8170%" height="15" fill="rgb(238,59,24)" fg:x="329" fg:w="5"/><text x="54.0082%" y="879.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (2 samples, 0.33%)</title><rect x="54.2484%" y="853" width="0.3268%" height="15" fill="rgb(242,164,29)" fg:x="332" fg:w="2"/><text x="54.4984%" y="863.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (2 samples, 0.33%)</title><rect x="54.2484%" y="837" width="0.3268%" height="15" fill="rgb(217,165,36)" fg:x="332" fg:w="2"/><text x="54.4984%" y="847.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (2 samples, 0.33%)</title><rect x="54.2484%" y="821" width="0.3268%" height="15" fill="rgb(220,202,26)" fg:x="332" fg:w="2"/><text x="54.4984%" y="831.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (2 samples, 0.33%)</title><rect x="54.2484%" y="805" width="0.3268%" height="15" fill="rgb(233,132,38)" fg:x="332" fg:w="2"/><text x="54.4984%" y="815.50"></text></g><g><title>s4lib::readers::linereader::LineReader::filesz (1 samples, 0.16%)</title><rect x="54.5752%" y="869" width="0.1634%" height="15" fill="rgb(239,189,46)" fg:x="334" fg:w="1"/><text x="54.8252%" y="879.50"></text></g><g><title>s4lib::readers::blockreader::BlockReader::filesz (1 samples, 0.16%)</title><rect x="54.5752%" y="853" width="0.1634%" height="15" fill="rgb(228,225,28)" fg:x="334" fg:w="1"/><text x="54.8252%" y="863.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (1 samples, 0.16%)</title><rect x="54.7386%" y="741" width="0.1634%" height="15" fill="rgb(231,0,6)" fg:x="335" fg:w="1"/><text x="54.9886%" y="751.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_lower_bound_index (2 samples, 0.33%)</title><rect x="54.7386%" y="773" width="0.3268%" height="15" fill="rgb(234,13,12)" fg:x="335" fg:w="2"/><text x="54.9886%" y="783.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (2 samples, 0.33%)</title><rect x="54.7386%" y="757" width="0.3268%" height="15" fill="rgb(233,132,38)" fg:x="335" fg:w="2"/><text x="54.9886%" y="767.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::range_search (3 samples, 0.49%)</title><rect x="54.7386%" y="821" width="0.4902%" height="15" fill="rgb(231,205,12)" fg:x="335" fg:w="3"/><text x="54.9886%" y="831.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::find_leaf_edges_spanning_range (3 samples, 0.49%)</title><rect x="54.7386%" y="805" width="0.4902%" height="15" fill="rgb(254,228,40)" fg:x="335" fg:w="3"/><text x="54.9886%" y="815.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree_for_bifurcation (3 samples, 0.49%)</title><rect x="54.7386%" y="789" width="0.4902%" height="15" fill="rgb(224,149,14)" fg:x="335" fg:w="3"/><text x="54.9886%" y="799.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::descend (1 samples, 0.16%)</title><rect x="55.0654%" y="773" width="0.1634%" height="15" fill="rgb(248,159,27)" fg:x="337" fg:w="1"/><text x="55.3154%" y="783.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (1 samples, 0.16%)</title><rect x="55.0654%" y="757" width="0.1634%" height="15" fill="rgb(232,132,36)" fg:x="337" fg:w="1"/><text x="55.3154%" y="767.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (1 samples, 0.16%)</title><rect x="55.0654%" y="741" width="0.1634%" height="15" fill="rgb(243,160,27)" fg:x="337" fg:w="1"/><text x="55.3154%" y="751.50"></text></g><g><title>core::ptr::read (1 samples, 0.16%)</title><rect x="55.0654%" y="725" width="0.1634%" height="15" fill="rgb(222,157,29)" fg:x="337" fg:w="1"/><text x="55.3154%" y="735.50"></text></g><g><title>s4lib::readers::linereader::LineReader::get_linep (5 samples, 0.82%)</title><rect x="54.7386%" y="853" width="0.8170%" height="15" fill="rgb(238,59,24)" fg:x="335" fg:w="5"/><text x="54.9886%" y="863.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::range (5 samples, 0.82%)</title><rect x="54.7386%" y="837" width="0.8170%" height="15" fill="rgb(253,189,7)" fg:x="335" fg:w="5"/><text x="54.9886%" y="847.50"></text></g><g><title>s4lib::readers::linereader::LineReader::check_store (6 samples, 0.98%)</title><rect x="54.7386%" y="869" width="0.9804%" height="15" fill="rgb(215,197,25)" fg:x="335" fg:w="6"/><text x="54.9886%" y="879.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (1 samples, 0.16%)</title><rect x="55.5556%" y="853" width="0.1634%" height="15" fill="rgb(222,9,43)" fg:x="340" fg:w="1"/><text x="55.8056%" y="863.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (1 samples, 0.16%)</title><rect x="55.5556%" y="837" width="0.1634%" height="15" fill="rgb(242,164,29)" fg:x="340" fg:w="1"/><text x="55.8056%" y="847.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1 samples, 0.16%)</title><rect x="55.5556%" y="821" width="0.1634%" height="15" fill="rgb(217,165,36)" fg:x="340" fg:w="1"/><text x="55.8056%" y="831.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1 samples, 0.16%)</title><rect x="55.5556%" y="805" width="0.1634%" height="15" fill="rgb(220,202,26)" fg:x="340" fg:w="1"/><text x="55.8056%" y="815.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1 samples, 0.16%)</title><rect x="55.5556%" y="789" width="0.1634%" height="15" fill="rgb(233,132,38)" fg:x="340" fg:w="1"/><text x="55.8056%" y="799.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (1 samples, 0.16%)</title><rect x="55.5556%" y="773" width="0.1634%" height="15" fill="rgb(231,0,6)" fg:x="340" fg:w="1"/><text x="55.8056%" y="783.50"></text></g><g><title>crc32fast::Hasher::update (1 samples, 0.16%)</title><rect x="55.7190%" y="789" width="0.1634%" height="15" fill="rgb(242,188,16)" fg:x="341" fg:w="1"/><text x="55.9690%" y="799.50"></text></g><g><title>crc32fast::specialized::pclmulqdq::State::update (1 samples, 0.16%)</title><rect x="55.7190%" y="773" width="0.1634%" height="15" fill="rgb(254,119,5)" fg:x="341" fg:w="1"/><text x="55.9690%" y="783.50"></text></g><g><title>crc32fast::specialized::pclmulqdq::calculate (1 samples, 0.16%)</title><rect x="55.7190%" y="757" width="0.1634%" height="15" fill="rgb(208,156,27)" fg:x="341" fg:w="1"/><text x="55.9690%" y="767.50"></text></g><g><title>crc32fast::specialized::pclmulqdq::reduce128 (1 samples, 0.16%)</title><rect x="55.7190%" y="741" width="0.1634%" height="15" fill="rgb(222,180,33)" fg:x="341" fg:w="1"/><text x="55.9690%" y="751.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_xor_si128 (1 samples, 0.16%)</title><rect x="55.7190%" y="725" width="0.1634%" height="15" fill="rgb(207,96,45)" fg:x="341" fg:w="1"/><text x="55.9690%" y="735.50"></text></g><g><title>miniz_oxide::inflate::core::transfer (10 samples, 1.63%)</title><rect x="55.8824%" y="677" width="1.6340%" height="15" fill="rgb(245,196,31)" fg:x="342" fg:w="10"/><text x="56.1324%" y="687.50"></text></g><g><title>&lt;flate2::gz::read::GzDecoder&lt;R&gt; as std::io::Read&gt;::read (12 samples, 1.96%)</title><rect x="55.7190%" y="837" width="1.9608%" height="15" fill="rgb(235,171,44)" fg:x="341" fg:w="12"/><text x="55.9690%" y="847.50">&lt;..</text></g><g><title>&lt;flate2::gz::bufread::GzDecoder&lt;R&gt; as std::io::Read&gt;::read (12 samples, 1.96%)</title><rect x="55.7190%" y="821" width="1.9608%" height="15" fill="rgb(225,64,27)" fg:x="341" fg:w="12"/><text x="55.9690%" y="831.50">&lt;..</text></g><g><title>&lt;flate2::crc::CrcReader&lt;R&gt; as std::io::Read&gt;::read (12 samples, 1.96%)</title><rect x="55.7190%" y="805" width="1.9608%" height="15" fill="rgb(246,215,19)" fg:x="341" fg:w="12"/><text x="55.9690%" y="815.50">&lt;..</text></g><g><title>&lt;flate2::deflate::bufread::DeflateDecoder&lt;R&gt; as std::io::Read&gt;::read (11 samples, 1.80%)</title><rect x="55.8824%" y="789" width="1.7974%" height="15" fill="rgb(208,217,13)" fg:x="342" fg:w="11"/><text x="56.1324%" y="799.50">&lt;..</text></g><g><title>flate2::zio::read (11 samples, 1.80%)</title><rect x="55.8824%" y="773" width="1.7974%" height="15" fill="rgb(223,11,11)" fg:x="342" fg:w="11"/><text x="56.1324%" y="783.50">f..</text></g><g><title>&lt;flate2::ffi::rust::Inflate as flate2::ffi::InflateBackend&gt;::decompress (11 samples, 1.80%)</title><rect x="55.8824%" y="757" width="1.7974%" height="15" fill="rgb(229,135,15)" fg:x="342" fg:w="11"/><text x="56.1324%" y="767.50">&lt;..</text></g><g><title>miniz_oxide::inflate::stream::inflate (11 samples, 1.80%)</title><rect x="55.8824%" y="741" width="1.7974%" height="15" fill="rgb(251,102,38)" fg:x="342" fg:w="11"/><text x="56.1324%" y="751.50">m..</text></g><g><title>miniz_oxide::inflate::stream::inflate_loop (11 samples, 1.80%)</title><rect x="55.8824%" y="725" width="1.7974%" height="15" fill="rgb(248,182,40)" fg:x="342" fg:w="11"/><text x="56.1324%" y="735.50">m..</text></g><g><title>miniz_oxide::inflate::core::decompress (11 samples, 1.80%)</title><rect x="55.8824%" y="709" width="1.7974%" height="15" fill="rgb(248,154,7)" fg:x="342" fg:w="11"/><text x="56.1324%" y="719.50">m..</text></g><g><title>miniz_oxide::inflate::core::decompress_fast (11 samples, 1.80%)</title><rect x="55.8824%" y="693" width="1.7974%" height="15" fill="rgb(241,55,25)" fg:x="342" fg:w="11"/><text x="56.1324%" y="703.50">m..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="57.6797%" y="837" width="0.1634%" height="15" fill="rgb(223,170,3)" fg:x="353" fg:w="1"/><text x="57.9297%" y="847.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="57.6797%" y="821" width="0.1634%" height="15" fill="rgb(236,210,2)" fg:x="353" fg:w="1"/><text x="57.9297%" y="831.50"></text></g><g><title>s4lib::readers::blockreader::BlockReader::read_block (16 samples, 2.61%)</title><rect x="55.7190%" y="869" width="2.6144%" height="15" fill="rgb(226,163,28)" fg:x="341" fg:w="16"/><text x="55.9690%" y="879.50">s4..</text></g><g><title>s4lib::readers::blockreader::BlockReader::read_block_FileGz (16 samples, 2.61%)</title><rect x="55.7190%" y="853" width="2.6144%" height="15" fill="rgb(228,92,5)" fg:x="341" fg:w="16"/><text x="55.9690%" y="863.50">s4..</text></g><g><title>checked_request2size (1 samples, 0.16%)</title><rect x="58.3333%" y="709" width="0.1634%" height="15" fill="rgb(236,198,42)" fg:x="357" fg:w="1"/><text x="58.5833%" y="719.50"></text></g><g><title>s4lib::data::line::Line::new (2 samples, 0.33%)</title><rect x="58.3333%" y="869" width="0.3268%" height="15" fill="rgb(249,127,27)" fg:x="357" fg:w="2"/><text x="58.5833%" y="879.50"></text></g><g><title>&lt;s4lib::data::line::Line as core::default::Default&gt;::default (2 samples, 0.33%)</title><rect x="58.3333%" y="853" width="0.3268%" height="15" fill="rgb(214,47,30)" fg:x="357" fg:w="2"/><text x="58.5833%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.33%)</title><rect x="58.3333%" y="837" width="0.3268%" height="15" fill="rgb(253,154,22)" fg:x="357" fg:w="2"/><text x="58.5833%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.33%)</title><rect x="58.3333%" y="821" width="0.3268%" height="15" fill="rgb(249,207,12)" fg:x="357" fg:w="2"/><text x="58.5833%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.33%)</title><rect x="58.3333%" y="805" width="0.3268%" height="15" fill="rgb(224,194,14)" fg:x="357" fg:w="2"/><text x="58.5833%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.33%)</title><rect x="58.3333%" y="789" width="0.3268%" height="15" fill="rgb(227,204,5)" fg:x="357" fg:w="2"/><text x="58.5833%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.33%)</title><rect x="58.3333%" y="773" width="0.3268%" height="15" fill="rgb(231,114,21)" fg:x="357" fg:w="2"/><text x="58.5833%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.33%)</title><rect x="58.3333%" y="757" width="0.3268%" height="15" fill="rgb(238,209,2)" fg:x="357" fg:w="2"/><text x="58.5833%" y="767.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.33%)</title><rect x="58.3333%" y="741" width="0.3268%" height="15" fill="rgb(253,135,41)" fg:x="357" fg:w="2"/><text x="58.5833%" y="751.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.33%)</title><rect x="58.3333%" y="725" width="0.3268%" height="15" fill="rgb(206,112,53)" fg:x="357" fg:w="2"/><text x="58.5833%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (1 samples, 0.16%)</title><rect x="58.6601%" y="789" width="0.1634%" height="15" fill="rgb(231,0,6)" fg:x="359" fg:w="1"/><text x="58.9101%" y="799.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (2 samples, 0.33%)</title><rect x="58.6601%" y="869" width="0.3268%" height="15" fill="rgb(222,9,43)" fg:x="359" fg:w="2"/><text x="58.9101%" y="879.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (2 samples, 0.33%)</title><rect x="58.6601%" y="853" width="0.3268%" height="15" fill="rgb(242,164,29)" fg:x="359" fg:w="2"/><text x="58.9101%" y="863.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (2 samples, 0.33%)</title><rect x="58.6601%" y="837" width="0.3268%" height="15" fill="rgb(217,165,36)" fg:x="359" fg:w="2"/><text x="58.9101%" y="847.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (2 samples, 0.33%)</title><rect x="58.6601%" y="821" width="0.3268%" height="15" fill="rgb(220,202,26)" fg:x="359" fg:w="2"/><text x="58.9101%" y="831.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (2 samples, 0.33%)</title><rect x="58.6601%" y="805" width="0.3268%" height="15" fill="rgb(233,132,38)" fg:x="359" fg:w="2"/><text x="58.9101%" y="815.50"></text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::find_sysline_between_datetime_filters (76 samples, 12.42%)</title><rect x="47.8758%" y="965" width="12.4183%" height="15" fill="rgb(205,32,8)" fg:x="293" fg:w="76"/><text x="48.1258%" y="975.50">s4lib::readers::sys..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_sysline_between_datetime_filters (76 samples, 12.42%)</title><rect x="47.8758%" y="949" width="12.4183%" height="15" fill="rgb(241,74,20)" fg:x="293" fg:w="76"/><text x="48.1258%" y="959.50">s4lib::readers::sys..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_sysline_at_datetime_filter_binary_search (76 samples, 12.42%)</title><rect x="47.8758%" y="933" width="12.4183%" height="15" fill="rgb(206,70,45)" fg:x="293" fg:w="76"/><text x="48.1258%" y="943.50">s4lib::readers::sys..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_sysline (76 samples, 12.42%)</title><rect x="47.8758%" y="917" width="12.4183%" height="15" fill="rgb(223,164,31)" fg:x="293" fg:w="76"/><text x="48.1258%" y="927.50">s4lib::readers::sys..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_sysline_year (76 samples, 12.42%)</title><rect x="47.8758%" y="901" width="12.4183%" height="15" fill="rgb(234,169,18)" fg:x="293" fg:w="76"/><text x="48.1258%" y="911.50">s4lib::readers::sys..</text></g><g><title>s4lib::readers::linereader::LineReader::find_line (44 samples, 7.19%)</title><rect x="53.1046%" y="885" width="7.1895%" height="15" fill="rgb(238,98,28)" fg:x="325" fg:w="44"/><text x="53.3546%" y="895.50">s4lib::rea..</text></g><g><title>alloc::sync::Arc&lt;T&gt;::try_unwrap (2 samples, 0.33%)</title><rect x="60.2941%" y="869" width="0.3268%" height="15" fill="rgb(221,73,3)" fg:x="369" fg:w="2"/><text x="60.5441%" y="879.50"></text></g><g><title>s4lib::readers::linereader::LineReader::drop_lines (3 samples, 0.49%)</title><rect x="60.2941%" y="901" width="0.4902%" height="15" fill="rgb(214,84,44)" fg:x="369" fg:w="3"/><text x="60.5441%" y="911.50"></text></g><g><title>s4lib::readers::linereader::LineReader::drop_line (3 samples, 0.49%)</title><rect x="60.2941%" y="885" width="0.4902%" height="15" fill="rgb(246,194,20)" fg:x="369" fg:w="3"/><text x="60.5441%" y="895.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove (1 samples, 0.16%)</title><rect x="60.6209%" y="869" width="0.1634%" height="15" fill="rgb(224,108,5)" fg:x="371" fg:w="1"/><text x="60.8709%" y="879.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove_entry (1 samples, 0.16%)</title><rect x="60.6209%" y="853" width="0.1634%" height="15" fill="rgb(245,136,18)" fg:x="371" fg:w="1"/><text x="60.8709%" y="863.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::remove_entry (1 samples, 0.16%)</title><rect x="60.6209%" y="837" width="0.1634%" height="15" fill="rgb(227,63,43)" fg:x="371" fg:w="1"/><text x="60.8709%" y="847.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::remove_kv (1 samples, 0.16%)</title><rect x="60.6209%" y="821" width="0.1634%" height="15" fill="rgb(211,181,27)" fg:x="371" fg:w="1"/><text x="60.8709%" y="831.50"></text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::drop_data_try (4 samples, 0.65%)</title><rect x="60.2941%" y="965" width="0.6536%" height="15" fill="rgb(244,39,16)" fg:x="369" fg:w="4"/><text x="60.5441%" y="975.50"></text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::drop_data (4 samples, 0.65%)</title><rect x="60.2941%" y="949" width="0.6536%" height="15" fill="rgb(215,155,30)" fg:x="369" fg:w="4"/><text x="60.5441%" y="959.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::drop_data (4 samples, 0.65%)</title><rect x="60.2941%" y="933" width="0.6536%" height="15" fill="rgb(244,67,10)" fg:x="369" fg:w="4"/><text x="60.5441%" y="943.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::drop_sysline (4 samples, 0.65%)</title><rect x="60.2941%" y="917" width="0.6536%" height="15" fill="rgb(224,6,32)" fg:x="369" fg:w="4"/><text x="60.5441%" y="927.50"></text></g><g><title>lru::LruCache&lt;K,V,S&gt;::pop (1 samples, 0.16%)</title><rect x="60.7843%" y="901" width="0.1634%" height="15" fill="rgb(238,169,40)" fg:x="372" fg:w="1"/><text x="61.0343%" y="911.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.16%)</title><rect x="60.9477%" y="885" width="0.1634%" height="15" fill="rgb(234,45,50)" fg:x="373" fg:w="1"/><text x="61.1977%" y="895.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (1 samples, 0.16%)</title><rect x="60.9477%" y="869" width="0.1634%" height="15" fill="rgb(247,66,5)" fg:x="373" fg:w="1"/><text x="61.1977%" y="879.50"></text></g><g><title>__clone3 (250 samples, 40.85%)</title><rect x="20.4248%" y="1221" width="40.8497%" height="15" fill="rgb(252,169,8)" fg:x="125" fg:w="250"/><text x="20.6748%" y="1231.50">__clone3</text></g><g><title>start_thread (250 samples, 40.85%)</title><rect x="20.4248%" y="1205" width="40.8497%" height="15" fill="rgb(209,148,13)" fg:x="125" fg:w="250"/><text x="20.6748%" y="1215.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (250 samples, 40.85%)</title><rect x="20.4248%" y="1189" width="40.8497%" height="15" fill="rgb(215,36,0)" fg:x="125" fg:w="250"/><text x="20.6748%" y="1199.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (250 samples, 40.85%)</title><rect x="20.4248%" y="1173" width="40.8497%" height="15" fill="rgb(228,202,16)" fg:x="125" fg:w="250"/><text x="20.6748%" y="1183.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (250 samples, 40.85%)</title><rect x="20.4248%" y="1157" width="40.8497%" height="15" fill="rgb(228,202,16)" fg:x="125" fg:w="250"/><text x="20.6748%" y="1167.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (250 samples, 40.85%)</title><rect x="20.4248%" y="1141" width="40.8497%" height="15" fill="rgb(218,104,40)" fg:x="125" fg:w="250"/><text x="20.6748%" y="1151.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (250 samples, 40.85%)</title><rect x="20.4248%" y="1125" width="40.8497%" height="15" fill="rgb(249,4,49)" fg:x="125" fg:w="250"/><text x="20.6748%" y="1135.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>std::panic::catch_unwind (250 samples, 40.85%)</title><rect x="20.4248%" y="1109" width="40.8497%" height="15" fill="rgb(216,75,8)" fg:x="125" fg:w="250"/><text x="20.6748%" y="1119.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (250 samples, 40.85%)</title><rect x="20.4248%" y="1093" width="40.8497%" height="15" fill="rgb(212,61,29)" fg:x="125" fg:w="250"/><text x="20.6748%" y="1103.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (250 samples, 40.85%)</title><rect x="20.4248%" y="1077" width="40.8497%" height="15" fill="rgb(232,162,46)" fg:x="125" fg:w="250"/><text x="20.6748%" y="1087.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (250 samples, 40.85%)</title><rect x="20.4248%" y="1061" width="40.8497%" height="15" fill="rgb(230,83,13)" fg:x="125" fg:w="250"/><text x="20.6748%" y="1071.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::functi..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (250 samples, 40.85%)</title><rect x="20.4248%" y="1045" width="40.8497%" height="15" fill="rgb(214,132,49)" fg:x="125" fg:w="250"/><text x="20.6748%" y="1055.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (250 samples, 40.85%)</title><rect x="20.4248%" y="1029" width="40.8497%" height="15" fill="rgb(210,88,34)" fg:x="125" fg:w="250"/><text x="20.6748%" y="1039.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>s4::processing_loop::{{closure}} (250 samples, 40.85%)</title><rect x="20.4248%" y="1013" width="40.8497%" height="15" fill="rgb(245,19,23)" fg:x="125" fg:w="250"/><text x="20.6748%" y="1023.50">s4::processing_loop::{{closure}}</text></g><g><title>s4::exec_fileprocessor_thread (250 samples, 40.85%)</title><rect x="20.4248%" y="997" width="40.8497%" height="15" fill="rgb(245,49,27)" fg:x="125" fg:w="250"/><text x="20.6748%" y="1007.50">s4::exec_fileprocessor_thread</text></g><g><title>s4::exec_syslogprocessor (250 samples, 40.85%)</title><rect x="20.4248%" y="981" width="40.8497%" height="15" fill="rgb(229,116,34)" fg:x="125" fg:w="250"/><text x="20.6748%" y="991.50">s4::exec_syslogprocessor</text></g><g><title>s4::chan_send (2 samples, 0.33%)</title><rect x="60.9477%" y="965" width="0.3268%" height="15" fill="rgb(244,11,25)" fg:x="373" fg:w="2"/><text x="61.1977%" y="975.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (2 samples, 0.33%)</title><rect x="60.9477%" y="949" width="0.3268%" height="15" fill="rgb(211,156,23)" fg:x="373" fg:w="2"/><text x="61.1977%" y="959.50"></text></g><g><title>crossbeam_channel::flavors::array::Channel&lt;T&gt;::send (2 samples, 0.33%)</title><rect x="60.9477%" y="933" width="0.3268%" height="15" fill="rgb(239,129,18)" fg:x="373" fg:w="2"/><text x="61.1977%" y="943.50"></text></g><g><title>crossbeam_channel::flavors::array::Channel&lt;T&gt;::write (2 samples, 0.33%)</title><rect x="60.9477%" y="917" width="0.3268%" height="15" fill="rgb(217,57,9)" fg:x="373" fg:w="2"/><text x="61.1977%" y="927.50"></text></g><g><title>crossbeam_channel::waker::SyncWaker::notify (2 samples, 0.33%)</title><rect x="60.9477%" y="901" width="0.3268%" height="15" fill="rgb(222,105,38)" fg:x="373" fg:w="2"/><text x="61.1977%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;crossbeam_channel::waker::Waker&gt;&gt; (1 samples, 0.16%)</title><rect x="61.1111%" y="885" width="0.1634%" height="15" fill="rgb(247,227,24)" fg:x="374" fg:w="1"/><text x="61.3611%" y="895.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.16%)</title><rect x="61.1111%" y="869" width="0.1634%" height="15" fill="rgb(212,177,19)" fg:x="374" fg:w="1"/><text x="61.3611%" y="879.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (1 samples, 0.16%)</title><rect x="61.1111%" y="853" width="0.1634%" height="15" fill="rgb(220,179,46)" fg:x="374" fg:w="1"/><text x="61.3611%" y="863.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (1 samples, 0.16%)</title><rect x="61.2745%" y="741" width="0.1634%" height="15" fill="rgb(210,105,37)" fg:x="375" fg:w="1"/><text x="61.5245%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="61.2745%" y="725" width="0.1634%" height="15" fill="rgb(214,109,53)" fg:x="375" fg:w="1"/><text x="61.5245%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.16%)</title><rect x="61.2745%" y="709" width="0.1634%" height="15" fill="rgb(254,35,30)" fg:x="375" fg:w="1"/><text x="61.5245%" y="719.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.16%)</title><rect x="61.2745%" y="693" width="0.1634%" height="15" fill="rgb(226,169,23)" fg:x="375" fg:w="1"/><text x="61.5245%" y="703.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (1 samples, 0.16%)</title><rect x="61.2745%" y="677" width="0.1634%" height="15" fill="rgb(205,130,14)" fg:x="375" fg:w="1"/><text x="61.5245%" y="687.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.16%)</title><rect x="61.2745%" y="661" width="0.1634%" height="15" fill="rgb(213,34,18)" fg:x="375" fg:w="1"/><text x="61.5245%" y="671.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class (1 samples, 0.16%)</title><rect x="61.2745%" y="645" width="0.1634%" height="15" fill="rgb(246,38,12)" fg:x="375" fg:w="1"/><text x="61.5245%" y="655.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::add_empty (1 samples, 0.16%)</title><rect x="61.2745%" y="629" width="0.1634%" height="15" fill="rgb(245,57,0)" fg:x="375" fg:w="1"/><text x="61.5245%" y="639.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add_empty (1 samples, 0.16%)</title><rect x="61.2745%" y="613" width="0.1634%" height="15" fill="rgb(233,49,21)" fg:x="375" fg:w="1"/><text x="61.5245%" y="623.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add (1 samples, 0.16%)</title><rect x="61.2745%" y="597" width="0.1634%" height="15" fill="rgb(253,91,29)" fg:x="375" fg:w="1"/><text x="61.5245%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.16%)</title><rect x="61.2745%" y="581" width="0.1634%" height="15" fill="rgb(241,229,15)" fg:x="375" fg:w="1"/><text x="61.5245%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_automata::nfa::thompson::nfa::Transition&gt;&gt; (1 samples, 0.16%)</title><rect x="61.4379%" y="709" width="0.1634%" height="15" fill="rgb(207,29,6)" fg:x="376" fg:w="1"/><text x="61.6879%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;regex_automata::nfa::thompson::nfa::Transition&gt;&gt; (1 samples, 0.16%)</title><rect x="61.4379%" y="693" width="0.1634%" height="15" fill="rgb(228,146,49)" fg:x="376" fg:w="1"/><text x="61.6879%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.16%)</title><rect x="61.4379%" y="677" width="0.1634%" height="15" fill="rgb(213,128,22)" fg:x="376" fg:w="1"/><text x="61.6879%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.16%)</title><rect x="61.4379%" y="661" width="0.1634%" height="15" fill="rgb(238,77,31)" fg:x="376" fg:w="1"/><text x="61.6879%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.16%)</title><rect x="61.4379%" y="645" width="0.1634%" height="15" fill="rgb(227,15,28)" fg:x="376" fg:w="1"/><text x="61.6879%" y="655.50"></text></g><g><title>__GI___libc_free (1 samples, 0.16%)</title><rect x="61.4379%" y="629" width="0.1634%" height="15" fill="rgb(247,8,17)" fg:x="376" fg:w="1"/><text x="61.6879%" y="639.50"></text></g><g><title>_int_free (1 samples, 0.16%)</title><rect x="61.4379%" y="613" width="0.1634%" height="15" fill="rgb(221,113,48)" fg:x="376" fg:w="1"/><text x="61.6879%" y="623.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::compile (2 samples, 0.33%)</title><rect x="61.4379%" y="725" width="0.3268%" height="15" fill="rgb(233,39,2)" fg:x="376" fg:w="2"/><text x="61.6879%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.16%)</title><rect x="61.6013%" y="709" width="0.1634%" height="15" fill="rgb(241,229,15)" fg:x="377" fg:w="1"/><text x="61.8513%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.16%)</title><rect x="61.6013%" y="693" width="0.1634%" height="15" fill="rgb(254,103,39)" fg:x="377" fg:w="1"/><text x="61.8513%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.16%)</title><rect x="61.6013%" y="677" width="0.1634%" height="15" fill="rgb(254,53,35)" fg:x="377" fg:w="1"/><text x="61.8513%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.16%)</title><rect x="61.6013%" y="661" width="0.1634%" height="15" fill="rgb(237,133,22)" fg:x="377" fg:w="1"/><text x="61.8513%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.16%)</title><rect x="61.6013%" y="645" width="0.1634%" height="15" fill="rgb(237,156,49)" fg:x="377" fg:w="1"/><text x="61.8513%" y="655.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.16%)</title><rect x="61.6013%" y="629" width="0.1634%" height="15" fill="rgb(214,150,36)" fg:x="377" fg:w="1"/><text x="61.8513%" y="639.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.16%)</title><rect x="61.6013%" y="613" width="0.1634%" height="15" fill="rgb(254,47,34)" fg:x="377" fg:w="1"/><text x="61.8513%" y="623.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.16%)</title><rect x="61.6013%" y="597" width="0.1634%" height="15" fill="rgb(254,73,4)" fg:x="377" fg:w="1"/><text x="61.8513%" y="607.50"></text></g><g><title>_int_realloc (1 samples, 0.16%)</title><rect x="61.6013%" y="581" width="0.1634%" height="15" fill="rgb(231,75,41)" fg:x="377" fg:w="1"/><text x="61.8513%" y="591.50"></text></g><g><title>_int_free (1 samples, 0.16%)</title><rect x="61.6013%" y="565" width="0.1634%" height="15" fill="rgb(221,113,48)" fg:x="377" fg:w="1"/><text x="61.8513%" y="575.50"></text></g><g><title>unlink_chunk (1 samples, 0.16%)</title><rect x="61.7647%" y="517" width="0.1634%" height="15" fill="rgb(223,20,30)" fg:x="378" fg:w="1"/><text x="62.0147%" y="527.50"></text></g><g><title>malloc_consolidate (2 samples, 0.33%)</title><rect x="61.7647%" y="533" width="0.3268%" height="15" fill="rgb(228,194,39)" fg:x="378" fg:w="2"/><text x="62.0147%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.98%)</title><rect x="61.2745%" y="837" width="0.9804%" height="15" fill="rgb(214,109,53)" fg:x="375" fg:w="6"/><text x="61.5245%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6 samples, 0.98%)</title><rect x="61.2745%" y="821" width="0.9804%" height="15" fill="rgb(254,35,30)" fg:x="375" fg:w="6"/><text x="61.5245%" y="831.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (6 samples, 0.98%)</title><rect x="61.2745%" y="805" width="0.9804%" height="15" fill="rgb(226,169,23)" fg:x="375" fg:w="6"/><text x="61.5245%" y="815.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (6 samples, 0.98%)</title><rect x="61.2745%" y="789" width="0.9804%" height="15" fill="rgb(205,130,14)" fg:x="375" fg:w="6"/><text x="61.5245%" y="799.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (6 samples, 0.98%)</title><rect x="61.2745%" y="773" width="0.9804%" height="15" fill="rgb(235,200,16)" fg:x="375" fg:w="6"/><text x="61.5245%" y="783.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (6 samples, 0.98%)</title><rect x="61.2745%" y="757" width="0.9804%" height="15" fill="rgb(213,34,18)" fg:x="375" fg:w="6"/><text x="61.5245%" y="767.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (5 samples, 0.82%)</title><rect x="61.4379%" y="741" width="0.8170%" height="15" fill="rgb(253,35,22)" fg:x="376" fg:w="5"/><text x="61.6879%" y="751.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::add (3 samples, 0.49%)</title><rect x="61.7647%" y="725" width="0.4902%" height="15" fill="rgb(247,201,32)" fg:x="378" fg:w="3"/><text x="62.0147%" y="735.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::get_or_add_state (3 samples, 0.49%)</title><rect x="61.7647%" y="709" width="0.4902%" height="15" fill="rgb(249,22,31)" fg:x="378" fg:w="3"/><text x="62.0147%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.49%)</title><rect x="61.7647%" y="693" width="0.4902%" height="15" fill="rgb(241,229,15)" fg:x="378" fg:w="3"/><text x="62.0147%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.49%)</title><rect x="61.7647%" y="677" width="0.4902%" height="15" fill="rgb(254,103,39)" fg:x="378" fg:w="3"/><text x="62.0147%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.49%)</title><rect x="61.7647%" y="661" width="0.4902%" height="15" fill="rgb(254,53,35)" fg:x="378" fg:w="3"/><text x="62.0147%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.49%)</title><rect x="61.7647%" y="645" width="0.4902%" height="15" fill="rgb(237,133,22)" fg:x="378" fg:w="3"/><text x="62.0147%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.49%)</title><rect x="61.7647%" y="629" width="0.4902%" height="15" fill="rgb(237,156,49)" fg:x="378" fg:w="3"/><text x="62.0147%" y="639.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.49%)</title><rect x="61.7647%" y="613" width="0.4902%" height="15" fill="rgb(214,150,36)" fg:x="378" fg:w="3"/><text x="62.0147%" y="623.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.49%)</title><rect x="61.7647%" y="597" width="0.4902%" height="15" fill="rgb(254,47,34)" fg:x="378" fg:w="3"/><text x="62.0147%" y="607.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.49%)</title><rect x="61.7647%" y="581" width="0.4902%" height="15" fill="rgb(254,73,4)" fg:x="378" fg:w="3"/><text x="62.0147%" y="591.50"></text></g><g><title>_int_realloc (3 samples, 0.49%)</title><rect x="61.7647%" y="565" width="0.4902%" height="15" fill="rgb(231,75,41)" fg:x="378" fg:w="3"/><text x="62.0147%" y="575.50"></text></g><g><title>_int_malloc (3 samples, 0.49%)</title><rect x="61.7647%" y="549" width="0.4902%" height="15" fill="rgb(222,219,51)" fg:x="378" fg:w="3"/><text x="62.0147%" y="559.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::add_empty (1 samples, 0.16%)</title><rect x="62.2549%" y="629" width="0.1634%" height="15" fill="rgb(245,57,0)" fg:x="381" fg:w="1"/><text x="62.5049%" y="639.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add_empty (1 samples, 0.16%)</title><rect x="62.2549%" y="613" width="0.1634%" height="15" fill="rgb(233,49,21)" fg:x="381" fg:w="1"/><text x="62.5049%" y="623.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add (1 samples, 0.16%)</title><rect x="62.2549%" y="597" width="0.1634%" height="15" fill="rgb(253,91,29)" fg:x="381" fg:w="1"/><text x="62.5049%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.16%)</title><rect x="62.2549%" y="581" width="0.1634%" height="15" fill="rgb(241,229,15)" fg:x="381" fg:w="1"/><text x="62.5049%" y="591.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (2 samples, 0.33%)</title><rect x="62.2549%" y="741" width="0.3268%" height="15" fill="rgb(210,105,37)" fg:x="381" fg:w="2"/><text x="62.5049%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (2 samples, 0.33%)</title><rect x="62.2549%" y="725" width="0.3268%" height="15" fill="rgb(222,94,14)" fg:x="381" fg:w="2"/><text x="62.5049%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.33%)</title><rect x="62.2549%" y="709" width="0.3268%" height="15" fill="rgb(254,35,30)" fg:x="381" fg:w="2"/><text x="62.5049%" y="719.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.33%)</title><rect x="62.2549%" y="693" width="0.3268%" height="15" fill="rgb(226,169,23)" fg:x="381" fg:w="2"/><text x="62.5049%" y="703.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (2 samples, 0.33%)</title><rect x="62.2549%" y="677" width="0.3268%" height="15" fill="rgb(205,130,14)" fg:x="381" fg:w="2"/><text x="62.5049%" y="687.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (2 samples, 0.33%)</title><rect x="62.2549%" y="661" width="0.3268%" height="15" fill="rgb(213,34,18)" fg:x="381" fg:w="2"/><text x="62.5049%" y="671.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class (2 samples, 0.33%)</title><rect x="62.2549%" y="645" width="0.3268%" height="15" fill="rgb(246,38,12)" fg:x="381" fg:w="2"/><text x="62.5049%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.16%)</title><rect x="62.4183%" y="629" width="0.1634%" height="15" fill="rgb(253,154,22)" fg:x="382" fg:w="1"/><text x="62.6683%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.16%)</title><rect x="62.4183%" y="613" width="0.1634%" height="15" fill="rgb(249,207,12)" fg:x="382" fg:w="1"/><text x="62.6683%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.16%)</title><rect x="62.4183%" y="597" width="0.1634%" height="15" fill="rgb(224,194,14)" fg:x="382" fg:w="1"/><text x="62.6683%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.16%)</title><rect x="62.4183%" y="581" width="0.1634%" height="15" fill="rgb(227,204,5)" fg:x="382" fg:w="1"/><text x="62.6683%" y="591.50"></text></g><g><title>_int_malloc (1 samples, 0.16%)</title><rect x="62.5817%" y="629" width="0.1634%" height="15" fill="rgb(222,219,51)" fg:x="383" fg:w="1"/><text x="62.8317%" y="639.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.33%)</title><rect x="62.5817%" y="645" width="0.3268%" height="15" fill="rgb(206,112,53)" fg:x="383" fg:w="2"/><text x="62.8317%" y="655.50"></text></g><g><title>std::sys_common::once::futex::Once::call (11 samples, 1.80%)</title><rect x="61.2745%" y="1205" width="1.7974%" height="15" fill="rgb(246,168,49)" fg:x="375" fg:w="11"/><text x="61.5245%" y="1215.50">s..</text></g><g><title>std::sync::once::Once::call_once::{{closure}} (11 samples, 1.80%)</title><rect x="61.2745%" y="1189" width="1.7974%" height="15" fill="rgb(237,63,35)" fg:x="375" fg:w="11"/><text x="61.5245%" y="1199.50">s..</text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}} (11 samples, 1.80%)</title><rect x="61.2745%" y="1173" width="1.7974%" height="15" fill="rgb(238,7,51)" fg:x="375" fg:w="11"/><text x="61.5245%" y="1183.50">l..</text></g><g><title>core::ops::function::FnOnce::call_once (11 samples, 1.80%)</title><rect x="61.2745%" y="1157" width="1.7974%" height="15" fill="rgb(210,80,10)" fg:x="375" fg:w="11"/><text x="61.5245%" y="1167.50">c..</text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref::__static_ref_initialize (11 samples, 1.80%)</title><rect x="61.2745%" y="1141" width="1.7974%" height="15" fill="rgb(205,24,29)" fg:x="375" fg:w="11"/><text x="61.5245%" y="1151.50">&lt;..</text></g><g><title>regex::regex::bytes::Regex::new (11 samples, 1.80%)</title><rect x="61.2745%" y="1125" width="1.7974%" height="15" fill="rgb(246,224,25)" fg:x="375" fg:w="11"/><text x="61.5245%" y="1135.50">r..</text></g><g><title>regex::builders::bytes::RegexBuilder::build (11 samples, 1.80%)</title><rect x="61.2745%" y="1109" width="1.7974%" height="15" fill="rgb(236,76,51)" fg:x="375" fg:w="11"/><text x="61.5245%" y="1119.50">r..</text></g><g><title>regex::builders::Builder::build_one_bytes (11 samples, 1.80%)</title><rect x="61.2745%" y="1093" width="1.7974%" height="15" fill="rgb(233,102,7)" fg:x="375" fg:w="11"/><text x="61.5245%" y="1103.50">r..</text></g><g><title>regex_automata::meta::regex::Builder::build (11 samples, 1.80%)</title><rect x="61.2745%" y="1077" width="1.7974%" height="15" fill="rgb(212,33,22)" fg:x="375" fg:w="11"/><text x="61.5245%" y="1087.50">r..</text></g><g><title>regex_automata::meta::regex::Builder::build_many (11 samples, 1.80%)</title><rect x="61.2745%" y="1061" width="1.7974%" height="15" fill="rgb(236,25,32)" fg:x="375" fg:w="11"/><text x="61.5245%" y="1071.50">r..</text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (11 samples, 1.80%)</title><rect x="61.2745%" y="1045" width="1.7974%" height="15" fill="rgb(250,142,30)" fg:x="375" fg:w="11"/><text x="61.5245%" y="1055.50">r..</text></g><g><title>regex_automata::meta::strategy::new (11 samples, 1.80%)</title><rect x="61.2745%" y="1029" width="1.7974%" height="15" fill="rgb(243,171,22)" fg:x="375" fg:w="11"/><text x="61.5245%" y="1039.50">r..</text></g><g><title>regex_automata::meta::strategy::Core::new (11 samples, 1.80%)</title><rect x="61.2745%" y="1013" width="1.7974%" height="15" fill="rgb(222,69,27)" fg:x="375" fg:w="11"/><text x="61.5245%" y="1023.50">r..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (11 samples, 1.80%)</title><rect x="61.2745%" y="997" width="1.7974%" height="15" fill="rgb(226,42,16)" fg:x="375" fg:w="11"/><text x="61.5245%" y="1007.50">r..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (11 samples, 1.80%)</title><rect x="61.2745%" y="981" width="1.7974%" height="15" fill="rgb(242,129,17)" fg:x="375" fg:w="11"/><text x="61.5245%" y="991.50">r..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (11 samples, 1.80%)</title><rect x="61.2745%" y="965" width="1.7974%" height="15" fill="rgb(247,137,3)" fg:x="375" fg:w="11"/><text x="61.5245%" y="975.50">r..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 1.80%)</title><rect x="61.2745%" y="949" width="1.7974%" height="15" fill="rgb(214,109,53)" fg:x="375" fg:w="11"/><text x="61.5245%" y="959.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::map (11 samples, 1.80%)</title><rect x="61.2745%" y="933" width="1.7974%" height="15" fill="rgb(254,35,30)" fg:x="375" fg:w="11"/><text x="61.5245%" y="943.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (11 samples, 1.80%)</title><rect x="61.2745%" y="917" width="1.7974%" height="15" fill="rgb(226,169,23)" fg:x="375" fg:w="11"/><text x="61.5245%" y="927.50">c..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile::{{closure}} (11 samples, 1.80%)</title><rect x="61.2745%" y="901" width="1.7974%" height="15" fill="rgb(218,216,52)" fg:x="375" fg:w="11"/><text x="61.5245%" y="911.50">r..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (11 samples, 1.80%)</title><rect x="61.2745%" y="885" width="1.7974%" height="15" fill="rgb(235,200,16)" fg:x="375" fg:w="11"/><text x="61.5245%" y="895.50">r..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (11 samples, 1.80%)</title><rect x="61.2745%" y="869" width="1.7974%" height="15" fill="rgb(213,34,18)" fg:x="375" fg:w="11"/><text x="61.5245%" y="879.50">r..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (11 samples, 1.80%)</title><rect x="61.2745%" y="853" width="1.7974%" height="15" fill="rgb(210,105,37)" fg:x="375" fg:w="11"/><text x="61.5245%" y="863.50">r..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (5 samples, 0.82%)</title><rect x="62.2549%" y="837" width="0.8170%" height="15" fill="rgb(222,94,14)" fg:x="381" fg:w="5"/><text x="62.5049%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.82%)</title><rect x="62.2549%" y="821" width="0.8170%" height="15" fill="rgb(254,35,30)" fg:x="381" fg:w="5"/><text x="62.5049%" y="831.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (5 samples, 0.82%)</title><rect x="62.2549%" y="805" width="0.8170%" height="15" fill="rgb(226,169,23)" fg:x="381" fg:w="5"/><text x="62.5049%" y="815.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (5 samples, 0.82%)</title><rect x="62.2549%" y="789" width="0.8170%" height="15" fill="rgb(205,130,14)" fg:x="381" fg:w="5"/><text x="62.5049%" y="799.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (5 samples, 0.82%)</title><rect x="62.2549%" y="773" width="0.8170%" height="15" fill="rgb(235,200,16)" fg:x="381" fg:w="5"/><text x="62.5049%" y="783.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (5 samples, 0.82%)</title><rect x="62.2549%" y="757" width="0.8170%" height="15" fill="rgb(213,34,18)" fg:x="381" fg:w="5"/><text x="62.5049%" y="767.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (3 samples, 0.49%)</title><rect x="62.5817%" y="741" width="0.4902%" height="15" fill="rgb(253,35,22)" fg:x="383" fg:w="3"/><text x="62.8317%" y="751.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::compile (3 samples, 0.49%)</title><rect x="62.5817%" y="725" width="0.4902%" height="15" fill="rgb(233,39,2)" fg:x="383" fg:w="3"/><text x="62.8317%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.49%)</title><rect x="62.5817%" y="709" width="0.4902%" height="15" fill="rgb(241,229,15)" fg:x="383" fg:w="3"/><text x="62.8317%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.49%)</title><rect x="62.5817%" y="693" width="0.4902%" height="15" fill="rgb(254,103,39)" fg:x="383" fg:w="3"/><text x="62.8317%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.49%)</title><rect x="62.5817%" y="677" width="0.4902%" height="15" fill="rgb(254,53,35)" fg:x="383" fg:w="3"/><text x="62.8317%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.49%)</title><rect x="62.5817%" y="661" width="0.4902%" height="15" fill="rgb(237,133,22)" fg:x="383" fg:w="3"/><text x="62.8317%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.16%)</title><rect x="62.9085%" y="645" width="0.1634%" height="15" fill="rgb(237,156,49)" fg:x="385" fg:w="1"/><text x="63.1585%" y="655.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.16%)</title><rect x="62.9085%" y="629" width="0.1634%" height="15" fill="rgb(214,150,36)" fg:x="385" fg:w="1"/><text x="63.1585%" y="639.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.16%)</title><rect x="62.9085%" y="613" width="0.1634%" height="15" fill="rgb(254,47,34)" fg:x="385" fg:w="1"/><text x="63.1585%" y="623.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.16%)</title><rect x="62.9085%" y="597" width="0.1634%" height="15" fill="rgb(254,73,4)" fg:x="385" fg:w="1"/><text x="63.1585%" y="607.50"></text></g><g><title>regex_automata::meta::strategy::ReverseSuffix::new (1 samples, 0.16%)</title><rect x="63.0719%" y="805" width="0.1634%" height="15" fill="rgb(210,64,50)" fg:x="386" fg:w="1"/><text x="63.3219%" y="815.50"></text></g><g><title>regex_automata::util::prefilter::suffixes (1 samples, 0.16%)</title><rect x="63.0719%" y="789" width="0.1634%" height="15" fill="rgb(229,215,53)" fg:x="386" fg:w="1"/><text x="63.3219%" y="799.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::extract (1 samples, 0.16%)</title><rect x="63.0719%" y="773" width="0.1634%" height="15" fill="rgb(242,28,8)" fg:x="386" fg:w="1"/><text x="63.3219%" y="783.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::extract_concat (1 samples, 0.16%)</title><rect x="63.0719%" y="757" width="0.1634%" height="15" fill="rgb(215,217,42)" fg:x="386" fg:w="1"/><text x="63.3219%" y="767.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::extract (1 samples, 0.16%)</title><rect x="63.0719%" y="741" width="0.1634%" height="15" fill="rgb(242,28,8)" fg:x="386" fg:w="1"/><text x="63.3219%" y="751.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::extract_concat (1 samples, 0.16%)</title><rect x="63.0719%" y="725" width="0.1634%" height="15" fill="rgb(215,217,42)" fg:x="386" fg:w="1"/><text x="63.3219%" y="735.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::cross (1 samples, 0.16%)</title><rect x="63.0719%" y="709" width="0.1634%" height="15" fill="rgb(248,169,31)" fg:x="386" fg:w="1"/><text x="63.3219%" y="719.50"></text></g><g><title>regex_syntax::hir::literal::Seq::cross_reverse (1 samples, 0.16%)</title><rect x="63.0719%" y="693" width="0.1634%" height="15" fill="rgb(231,193,12)" fg:x="386" fg:w="1"/><text x="63.3219%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.16%)</title><rect x="63.0719%" y="677" width="0.1634%" height="15" fill="rgb(253,154,22)" fg:x="386" fg:w="1"/><text x="63.3219%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.16%)</title><rect x="63.0719%" y="661" width="0.1634%" height="15" fill="rgb(249,207,12)" fg:x="386" fg:w="1"/><text x="63.3219%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.16%)</title><rect x="63.0719%" y="645" width="0.1634%" height="15" fill="rgb(224,194,14)" fg:x="386" fg:w="1"/><text x="63.3219%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.16%)</title><rect x="63.0719%" y="629" width="0.1634%" height="15" fill="rgb(227,204,5)" fg:x="386" fg:w="1"/><text x="63.3219%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.16%)</title><rect x="63.0719%" y="613" width="0.1634%" height="15" fill="rgb(231,114,21)" fg:x="386" fg:w="1"/><text x="63.3219%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.16%)</title><rect x="63.0719%" y="597" width="0.1634%" height="15" fill="rgb(238,209,2)" fg:x="386" fg:w="1"/><text x="63.3219%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.16%)</title><rect x="63.0719%" y="581" width="0.1634%" height="15" fill="rgb(253,135,41)" fg:x="386" fg:w="1"/><text x="63.3219%" y="591.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.16%)</title><rect x="63.0719%" y="565" width="0.1634%" height="15" fill="rgb(206,112,53)" fg:x="386" fg:w="1"/><text x="63.3219%" y="575.50"></text></g><g><title>_int_malloc (1 samples, 0.16%)</title><rect x="63.0719%" y="549" width="0.1634%" height="15" fill="rgb(222,219,51)" fg:x="386" fg:w="1"/><text x="63.3219%" y="559.50"></text></g><g><title>malloc_consolidate (1 samples, 0.16%)</title><rect x="63.0719%" y="533" width="0.1634%" height="15" fill="rgb(228,194,39)" fg:x="386" fg:w="1"/><text x="63.3219%" y="543.50"></text></g><g><title>unlink_chunk (1 samples, 0.16%)</title><rect x="63.0719%" y="517" width="0.1634%" height="15" fill="rgb(223,20,30)" fg:x="386" fg:w="1"/><text x="63.3219%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::util::captures::GroupInfoInner&gt; (1 samples, 0.16%)</title><rect x="63.2353%" y="661" width="0.1634%" height="15" fill="rgb(209,108,14)" fg:x="387" fg:w="1"/><text x="63.4853%" y="671.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::Inner::set_captures (2 samples, 0.33%)</title><rect x="63.2353%" y="741" width="0.3268%" height="15" fill="rgb(254,224,34)" fg:x="387" fg:w="2"/><text x="63.4853%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::util::captures::GroupInfo&gt; (2 samples, 0.33%)</title><rect x="63.2353%" y="725" width="0.3268%" height="15" fill="rgb(232,182,23)" fg:x="387" fg:w="2"/><text x="63.4853%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;regex_automata::util::captures::GroupInfoInner&gt;&gt; (2 samples, 0.33%)</title><rect x="63.2353%" y="709" width="0.3268%" height="15" fill="rgb(236,30,13)" fg:x="387" fg:w="2"/><text x="63.4853%" y="719.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.33%)</title><rect x="63.2353%" y="693" width="0.3268%" height="15" fill="rgb(220,153,15)" fg:x="387" fg:w="2"/><text x="63.4853%" y="703.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.33%)</title><rect x="63.2353%" y="677" width="0.3268%" height="15" fill="rgb(225,73,9)" fg:x="387" fg:w="2"/><text x="63.4853%" y="687.50"></text></g><g><title>core::mem::drop (1 samples, 0.16%)</title><rect x="63.3987%" y="661" width="0.1634%" height="15" fill="rgb(253,152,51)" fg:x="388" fg:w="1"/><text x="63.6487%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;regex_automata::util::captures::GroupInfoInner&gt;&gt; (1 samples, 0.16%)</title><rect x="63.3987%" y="645" width="0.1634%" height="15" fill="rgb(218,191,15)" fg:x="388" fg:w="1"/><text x="63.6487%" y="655.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.16%)</title><rect x="63.3987%" y="629" width="0.1634%" height="15" fill="rgb(205,138,54)" fg:x="388" fg:w="1"/><text x="63.6487%" y="639.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="63.5621%" y="709" width="0.1634%" height="15" fill="rgb(242,38,10)" fg:x="389" fg:w="1"/><text x="63.8121%" y="719.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::Inner::remap (2 samples, 0.33%)</title><rect x="63.5621%" y="741" width="0.3268%" height="15" fill="rgb(232,176,30)" fg:x="389" fg:w="2"/><text x="63.8121%" y="751.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::State::remap (2 samples, 0.33%)</title><rect x="63.5621%" y="725" width="0.3268%" height="15" fill="rgb(206,94,36)" fg:x="389" fg:w="2"/><text x="63.8121%" y="735.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::Inner::add (2 samples, 0.33%)</title><rect x="63.8889%" y="741" width="0.3268%" height="15" fill="rgb(212,0,0)" fg:x="391" fg:w="2"/><text x="64.1389%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_automata::util::primitives::StateID&gt;&gt; (1 samples, 0.16%)</title><rect x="64.2157%" y="741" width="0.1634%" height="15" fill="rgb(245,116,20)" fg:x="393" fg:w="1"/><text x="64.4657%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;regex_automata::util::primitives::StateID&gt;&gt; (1 samples, 0.16%)</title><rect x="64.2157%" y="725" width="0.1634%" height="15" fill="rgb(230,69,45)" fg:x="393" fg:w="1"/><text x="64.4657%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.16%)</title><rect x="64.2157%" y="709" width="0.1634%" height="15" fill="rgb(213,128,22)" fg:x="393" fg:w="1"/><text x="64.4657%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.16%)</title><rect x="64.2157%" y="693" width="0.1634%" height="15" fill="rgb(238,77,31)" fg:x="393" fg:w="1"/><text x="64.4657%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.16%)</title><rect x="64.2157%" y="677" width="0.1634%" height="15" fill="rgb(227,15,28)" fg:x="393" fg:w="1"/><text x="64.4657%" y="687.50"></text></g><g><title>__GI___libc_free (1 samples, 0.16%)</title><rect x="64.2157%" y="661" width="0.1634%" height="15" fill="rgb(247,8,17)" fg:x="393" fg:w="1"/><text x="64.4657%" y="671.50"></text></g><g><title>_int_free (1 samples, 0.16%)</title><rect x="64.2157%" y="645" width="0.1634%" height="15" fill="rgb(221,113,48)" fg:x="393" fg:w="1"/><text x="64.4657%" y="655.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.16%)</title><rect x="64.3791%" y="677" width="0.1634%" height="15" fill="rgb(222,107,1)" fg:x="394" fg:w="1"/><text x="64.6291%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.16%)</title><rect x="64.3791%" y="661" width="0.1634%" height="15" fill="rgb(214,20,35)" fg:x="394" fg:w="1"/><text x="64.6291%" y="671.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.16%)</title><rect x="64.3791%" y="645" width="0.1634%" height="15" fill="rgb(217,126,36)" fg:x="394" fg:w="1"/><text x="64.6291%" y="655.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.33%)</title><rect x="64.5425%" y="581" width="0.3268%" height="15" fill="rgb(206,112,53)" fg:x="395" fg:w="2"/><text x="64.7925%" y="591.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.49%)</title><rect x="64.5425%" y="597" width="0.4902%" height="15" fill="rgb(253,135,41)" fg:x="395" fg:w="3"/><text x="64.7925%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (5 samples, 0.82%)</title><rect x="64.3791%" y="741" width="0.8170%" height="15" fill="rgb(209,26,30)" fg:x="394" fg:w="5"/><text x="64.6291%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.82%)</title><rect x="64.3791%" y="725" width="0.8170%" height="15" fill="rgb(229,121,46)" fg:x="394" fg:w="5"/><text x="64.6291%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.82%)</title><rect x="64.3791%" y="709" width="0.8170%" height="15" fill="rgb(221,172,50)" fg:x="394" fg:w="5"/><text x="64.6291%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.82%)</title><rect x="64.3791%" y="693" width="0.8170%" height="15" fill="rgb(216,42,52)" fg:x="394" fg:w="5"/><text x="64.6291%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.65%)</title><rect x="64.5425%" y="677" width="0.6536%" height="15" fill="rgb(249,207,12)" fg:x="395" fg:w="4"/><text x="64.7925%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.65%)</title><rect x="64.5425%" y="661" width="0.6536%" height="15" fill="rgb(224,194,14)" fg:x="395" fg:w="4"/><text x="64.7925%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.65%)</title><rect x="64.5425%" y="645" width="0.6536%" height="15" fill="rgb(227,204,5)" fg:x="395" fg:w="4"/><text x="64.7925%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.65%)</title><rect x="64.5425%" y="629" width="0.6536%" height="15" fill="rgb(231,114,21)" fg:x="395" fg:w="4"/><text x="64.7925%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.65%)</title><rect x="64.5425%" y="613" width="0.6536%" height="15" fill="rgb(238,209,2)" fg:x="395" fg:w="4"/><text x="64.7925%" y="623.50"></text></g><g><title>&lt;regex_automata::util::primitives::WithStateIDIter&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="65.1961%" y="741" width="0.1634%" height="15" fill="rgb(239,208,29)" fg:x="399" fg:w="1"/><text x="65.4461%" y="751.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="65.1961%" y="725" width="0.1634%" height="15" fill="rgb(236,210,2)" fg:x="399" fg:w="1"/><text x="65.4461%" y="735.50"></text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::process_stage1_blockzero_analysis (15 samples, 2.45%)</title><rect x="63.0719%" y="1205" width="2.4510%" height="15" fill="rgb(214,107,3)" fg:x="386" fg:w="15"/><text x="63.3219%" y="1215.50">s4..</text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::blockzero_analysis (15 samples, 2.45%)</title><rect x="63.0719%" y="1189" width="2.4510%" height="15" fill="rgb(228,176,28)" fg:x="386" fg:w="15"/><text x="63.3219%" y="1199.50">s4..</text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::blockzero_analysis_syslines (15 samples, 2.45%)</title><rect x="63.0719%" y="1173" width="2.4510%" height="15" fill="rgb(208,15,47)" fg:x="386" fg:w="15"/><text x="63.3219%" y="1183.50">s4..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_sysline_in_block (15 samples, 2.45%)</title><rect x="63.0719%" y="1157" width="2.4510%" height="15" fill="rgb(243,65,52)" fg:x="386" fg:w="15"/><text x="63.3219%" y="1167.50">s4..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_sysline_in_block_year (15 samples, 2.45%)</title><rect x="63.0719%" y="1141" width="2.4510%" height="15" fill="rgb(253,177,51)" fg:x="386" fg:w="15"/><text x="63.3219%" y="1151.50">s4..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::parse_datetime_in_line_cached (15 samples, 2.45%)</title><rect x="63.0719%" y="1125" width="2.4510%" height="15" fill="rgb(231,75,50)" fg:x="386" fg:w="15"/><text x="63.3219%" y="1135.50">s4..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::parse_datetime_in_line (15 samples, 2.45%)</title><rect x="63.0719%" y="1109" width="2.4510%" height="15" fill="rgb(234,54,15)" fg:x="386" fg:w="15"/><text x="63.3219%" y="1119.50">s4..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_datetime_in_line (15 samples, 2.45%)</title><rect x="63.0719%" y="1093" width="2.4510%" height="15" fill="rgb(212,53,9)" fg:x="386" fg:w="15"/><text x="63.3219%" y="1103.50">s4..</text></g><g><title>s4lib::data::datetime::bytes_to_regex_to_datetime (15 samples, 2.45%)</title><rect x="63.0719%" y="1077" width="2.4510%" height="15" fill="rgb(252,84,36)" fg:x="386" fg:w="15"/><text x="63.3219%" y="1087.50">s4..</text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref (15 samples, 2.45%)</title><rect x="63.0719%" y="1061" width="2.4510%" height="15" fill="rgb(217,15,43)" fg:x="386" fg:w="15"/><text x="63.3219%" y="1071.50">&lt;s..</text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref::__stability (15 samples, 2.45%)</title><rect x="63.0719%" y="1045" width="2.4510%" height="15" fill="rgb(239,165,48)" fg:x="386" fg:w="15"/><text x="63.3219%" y="1055.50">&lt;s..</text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (15 samples, 2.45%)</title><rect x="63.0719%" y="1029" width="2.4510%" height="15" fill="rgb(235,175,8)" fg:x="386" fg:w="15"/><text x="63.3219%" y="1039.50">la..</text></g><g><title>std::sync::once::Once::call_once (15 samples, 2.45%)</title><rect x="63.0719%" y="1013" width="2.4510%" height="15" fill="rgb(247,17,47)" fg:x="386" fg:w="15"/><text x="63.3219%" y="1023.50">st..</text></g><g><title>std::sys_common::once::futex::Once::call (15 samples, 2.45%)</title><rect x="63.0719%" y="997" width="2.4510%" height="15" fill="rgb(246,168,49)" fg:x="386" fg:w="15"/><text x="63.3219%" y="1007.50">st..</text></g><g><title>std::sync::once::Once::call_once::{{closure}} (15 samples, 2.45%)</title><rect x="63.0719%" y="981" width="2.4510%" height="15" fill="rgb(237,63,35)" fg:x="386" fg:w="15"/><text x="63.3219%" y="991.50">st..</text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}} (15 samples, 2.45%)</title><rect x="63.0719%" y="965" width="2.4510%" height="15" fill="rgb(238,7,51)" fg:x="386" fg:w="15"/><text x="63.3219%" y="975.50">la..</text></g><g><title>core::ops::function::FnOnce::call_once (15 samples, 2.45%)</title><rect x="63.0719%" y="949" width="2.4510%" height="15" fill="rgb(210,80,10)" fg:x="386" fg:w="15"/><text x="63.3219%" y="959.50">co..</text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref::__static_ref_initialize (15 samples, 2.45%)</title><rect x="63.0719%" y="933" width="2.4510%" height="15" fill="rgb(205,24,29)" fg:x="386" fg:w="15"/><text x="63.3219%" y="943.50">&lt;s..</text></g><g><title>regex::regex::bytes::Regex::new (15 samples, 2.45%)</title><rect x="63.0719%" y="917" width="2.4510%" height="15" fill="rgb(246,224,25)" fg:x="386" fg:w="15"/><text x="63.3219%" y="927.50">re..</text></g><g><title>regex::builders::bytes::RegexBuilder::build (15 samples, 2.45%)</title><rect x="63.0719%" y="901" width="2.4510%" height="15" fill="rgb(236,76,51)" fg:x="386" fg:w="15"/><text x="63.3219%" y="911.50">re..</text></g><g><title>regex::builders::Builder::build_one_bytes (15 samples, 2.45%)</title><rect x="63.0719%" y="885" width="2.4510%" height="15" fill="rgb(233,102,7)" fg:x="386" fg:w="15"/><text x="63.3219%" y="895.50">re..</text></g><g><title>regex_automata::meta::regex::Builder::build (15 samples, 2.45%)</title><rect x="63.0719%" y="869" width="2.4510%" height="15" fill="rgb(212,33,22)" fg:x="386" fg:w="15"/><text x="63.3219%" y="879.50">re..</text></g><g><title>regex_automata::meta::regex::Builder::build_many (15 samples, 2.45%)</title><rect x="63.0719%" y="853" width="2.4510%" height="15" fill="rgb(236,25,32)" fg:x="386" fg:w="15"/><text x="63.3219%" y="863.50">re..</text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (15 samples, 2.45%)</title><rect x="63.0719%" y="837" width="2.4510%" height="15" fill="rgb(250,142,30)" fg:x="386" fg:w="15"/><text x="63.3219%" y="847.50">re..</text></g><g><title>regex_automata::meta::strategy::new (15 samples, 2.45%)</title><rect x="63.0719%" y="821" width="2.4510%" height="15" fill="rgb(243,171,22)" fg:x="386" fg:w="15"/><text x="63.3219%" y="831.50">re..</text></g><g><title>regex_automata::meta::strategy::Core::new (14 samples, 2.29%)</title><rect x="63.2353%" y="805" width="2.2876%" height="15" fill="rgb(222,69,27)" fg:x="387" fg:w="14"/><text x="63.4853%" y="815.50">r..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (14 samples, 2.29%)</title><rect x="63.2353%" y="789" width="2.2876%" height="15" fill="rgb(226,42,16)" fg:x="387" fg:w="14"/><text x="63.4853%" y="799.50">r..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (14 samples, 2.29%)</title><rect x="63.2353%" y="773" width="2.2876%" height="15" fill="rgb(242,129,17)" fg:x="387" fg:w="14"/><text x="63.4853%" y="783.50">r..</text></g><g><title>regex_automata::nfa::thompson::builder::Builder::build (14 samples, 2.29%)</title><rect x="63.2353%" y="757" width="2.2876%" height="15" fill="rgb(205,136,15)" fg:x="387" fg:w="14"/><text x="63.4853%" y="767.50">r..</text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by_key (1 samples, 0.16%)</title><rect x="65.5229%" y="725" width="0.1634%" height="15" fill="rgb(219,159,10)" fg:x="401" fg:w="1"/><text x="65.7729%" y="735.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.16%)</title><rect x="65.5229%" y="709" width="0.1634%" height="15" fill="rgb(252,87,43)" fg:x="401" fg:w="1"/><text x="65.7729%" y="719.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.16%)</title><rect x="65.6863%" y="629" width="0.1634%" height="15" fill="rgb(206,149,53)" fg:x="402" fg:w="1"/><text x="65.9363%" y="639.50"></text></g><g><title>regex_automata::meta::strategy::ReverseInner::new (3 samples, 0.49%)</title><rect x="65.5229%" y="885" width="0.4902%" height="15" fill="rgb(225,146,32)" fg:x="401" fg:w="3"/><text x="65.7729%" y="895.50"></text></g><g><title>regex_automata::meta::reverse_inner::extract (3 samples, 0.49%)</title><rect x="65.5229%" y="869" width="0.4902%" height="15" fill="rgb(209,78,45)" fg:x="401" fg:w="3"/><text x="65.7729%" y="879.50"></text></g><g><title>regex_automata::meta::reverse_inner::prefilter (3 samples, 0.49%)</title><rect x="65.5229%" y="853" width="0.4902%" height="15" fill="rgb(221,50,42)" fg:x="401" fg:w="3"/><text x="65.7729%" y="863.50"></text></g><g><title>regex_syntax::hir::literal::Seq::optimize_for_prefix_by_preference (3 samples, 0.49%)</title><rect x="65.5229%" y="837" width="0.4902%" height="15" fill="rgb(206,179,34)" fg:x="401" fg:w="3"/><text x="65.7729%" y="847.50"></text></g><g><title>regex_syntax::hir::literal::Seq::optimize_by_preference (3 samples, 0.49%)</title><rect x="65.5229%" y="821" width="0.4902%" height="15" fill="rgb(208,121,1)" fg:x="401" fg:w="3"/><text x="65.7729%" y="831.50"></text></g><g><title>regex_syntax::hir::literal::PreferenceTrie::minimize (3 samples, 0.49%)</title><rect x="65.5229%" y="805" width="0.4902%" height="15" fill="rgb(240,28,15)" fg:x="401" fg:w="3"/><text x="65.7729%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut (3 samples, 0.49%)</title><rect x="65.5229%" y="789" width="0.4902%" height="15" fill="rgb(208,159,28)" fg:x="401" fg:w="3"/><text x="65.7729%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut::process_loop (3 samples, 0.49%)</title><rect x="65.5229%" y="773" width="0.4902%" height="15" fill="rgb(227,228,3)" fg:x="401" fg:w="3"/><text x="65.7729%" y="783.50"></text></g><g><title>regex_syntax::hir::literal::PreferenceTrie::minimize::{{closure}} (3 samples, 0.49%)</title><rect x="65.5229%" y="757" width="0.4902%" height="15" fill="rgb(234,110,33)" fg:x="401" fg:w="3"/><text x="65.7729%" y="767.50"></text></g><g><title>regex_syntax::hir::literal::PreferenceTrie::insert (3 samples, 0.49%)</title><rect x="65.5229%" y="741" width="0.4902%" height="15" fill="rgb(208,38,45)" fg:x="401" fg:w="3"/><text x="65.7729%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (2 samples, 0.33%)</title><rect x="65.6863%" y="725" width="0.3268%" height="15" fill="rgb(222,129,7)" fg:x="402" fg:w="2"/><text x="65.9363%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.33%)</title><rect x="65.6863%" y="709" width="0.3268%" height="15" fill="rgb(212,159,3)" fg:x="402" fg:w="2"/><text x="65.9363%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.33%)</title><rect x="65.6863%" y="693" width="0.3268%" height="15" fill="rgb(231,142,39)" fg:x="402" fg:w="2"/><text x="65.9363%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.33%)</title><rect x="65.6863%" y="677" width="0.3268%" height="15" fill="rgb(249,2,22)" fg:x="402" fg:w="2"/><text x="65.9363%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.33%)</title><rect x="65.6863%" y="661" width="0.3268%" height="15" fill="rgb(254,53,35)" fg:x="402" fg:w="2"/><text x="65.9363%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.33%)</title><rect x="65.6863%" y="645" width="0.3268%" height="15" fill="rgb(237,133,22)" fg:x="402" fg:w="2"/><text x="65.9363%" y="655.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.16%)</title><rect x="65.8497%" y="629" width="0.1634%" height="15" fill="rgb(206,112,53)" fg:x="403" fg:w="1"/><text x="66.0997%" y="639.50"></text></g><g><title>_int_malloc (1 samples, 0.16%)</title><rect x="65.8497%" y="613" width="0.1634%" height="15" fill="rgb(222,219,51)" fg:x="403" fg:w="1"/><text x="66.0997%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.16%)</title><rect x="66.0131%" y="805" width="0.1634%" height="15" fill="rgb(241,229,15)" fg:x="404" fg:w="1"/><text x="66.2631%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.16%)</title><rect x="66.0131%" y="789" width="0.1634%" height="15" fill="rgb(254,103,39)" fg:x="404" fg:w="1"/><text x="66.2631%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.16%)</title><rect x="66.0131%" y="773" width="0.1634%" height="15" fill="rgb(254,53,35)" fg:x="404" fg:w="1"/><text x="66.2631%" y="783.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.16%)</title><rect x="66.0131%" y="757" width="0.1634%" height="15" fill="rgb(237,133,22)" fg:x="404" fg:w="1"/><text x="66.2631%" y="767.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.16%)</title><rect x="66.0131%" y="741" width="0.1634%" height="15" fill="rgb(206,112,53)" fg:x="404" fg:w="1"/><text x="66.2631%" y="751.50"></text></g><g><title>_int_malloc (1 samples, 0.16%)</title><rect x="66.0131%" y="725" width="0.1634%" height="15" fill="rgb(222,219,51)" fg:x="404" fg:w="1"/><text x="66.2631%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (1 samples, 0.16%)</title><rect x="66.1765%" y="805" width="0.1634%" height="15" fill="rgb(216,0,40)" fg:x="405" fg:w="1"/><text x="66.4265%" y="815.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::parse_datetime_in_line_cached (6 samples, 0.98%)</title><rect x="65.5229%" y="1205" width="0.9804%" height="15" fill="rgb(231,75,50)" fg:x="401" fg:w="6"/><text x="65.7729%" y="1215.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::parse_datetime_in_line (6 samples, 0.98%)</title><rect x="65.5229%" y="1189" width="0.9804%" height="15" fill="rgb(234,54,15)" fg:x="401" fg:w="6"/><text x="65.7729%" y="1199.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_datetime_in_line (6 samples, 0.98%)</title><rect x="65.5229%" y="1173" width="0.9804%" height="15" fill="rgb(212,53,9)" fg:x="401" fg:w="6"/><text x="65.7729%" y="1183.50"></text></g><g><title>s4lib::data::datetime::bytes_to_regex_to_datetime (6 samples, 0.98%)</title><rect x="65.5229%" y="1157" width="0.9804%" height="15" fill="rgb(252,84,36)" fg:x="401" fg:w="6"/><text x="65.7729%" y="1167.50"></text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref (6 samples, 0.98%)</title><rect x="65.5229%" y="1141" width="0.9804%" height="15" fill="rgb(217,15,43)" fg:x="401" fg:w="6"/><text x="65.7729%" y="1151.50"></text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref::__stability (6 samples, 0.98%)</title><rect x="65.5229%" y="1125" width="0.9804%" height="15" fill="rgb(239,165,48)" fg:x="401" fg:w="6"/><text x="65.7729%" y="1135.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (6 samples, 0.98%)</title><rect x="65.5229%" y="1109" width="0.9804%" height="15" fill="rgb(235,175,8)" fg:x="401" fg:w="6"/><text x="65.7729%" y="1119.50"></text></g><g><title>std::sync::once::Once::call_once (6 samples, 0.98%)</title><rect x="65.5229%" y="1093" width="0.9804%" height="15" fill="rgb(247,17,47)" fg:x="401" fg:w="6"/><text x="65.7729%" y="1103.50"></text></g><g><title>std::sys_common::once::futex::Once::call (6 samples, 0.98%)</title><rect x="65.5229%" y="1077" width="0.9804%" height="15" fill="rgb(246,168,49)" fg:x="401" fg:w="6"/><text x="65.7729%" y="1087.50"></text></g><g><title>std::sync::once::Once::call_once::{{closure}} (6 samples, 0.98%)</title><rect x="65.5229%" y="1061" width="0.9804%" height="15" fill="rgb(237,63,35)" fg:x="401" fg:w="6"/><text x="65.7729%" y="1071.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}} (6 samples, 0.98%)</title><rect x="65.5229%" y="1045" width="0.9804%" height="15" fill="rgb(238,7,51)" fg:x="401" fg:w="6"/><text x="65.7729%" y="1055.50"></text></g><g><title>core::ops::function::FnOnce::call_once (6 samples, 0.98%)</title><rect x="65.5229%" y="1029" width="0.9804%" height="15" fill="rgb(210,80,10)" fg:x="401" fg:w="6"/><text x="65.7729%" y="1039.50"></text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref::__static_ref_initialize (6 samples, 0.98%)</title><rect x="65.5229%" y="1013" width="0.9804%" height="15" fill="rgb(205,24,29)" fg:x="401" fg:w="6"/><text x="65.7729%" y="1023.50"></text></g><g><title>regex::regex::bytes::Regex::new (6 samples, 0.98%)</title><rect x="65.5229%" y="997" width="0.9804%" height="15" fill="rgb(246,224,25)" fg:x="401" fg:w="6"/><text x="65.7729%" y="1007.50"></text></g><g><title>regex::builders::bytes::RegexBuilder::build (6 samples, 0.98%)</title><rect x="65.5229%" y="981" width="0.9804%" height="15" fill="rgb(236,76,51)" fg:x="401" fg:w="6"/><text x="65.7729%" y="991.50"></text></g><g><title>regex::builders::Builder::build_one_bytes (6 samples, 0.98%)</title><rect x="65.5229%" y="965" width="0.9804%" height="15" fill="rgb(233,102,7)" fg:x="401" fg:w="6"/><text x="65.7729%" y="975.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (6 samples, 0.98%)</title><rect x="65.5229%" y="949" width="0.9804%" height="15" fill="rgb(212,33,22)" fg:x="401" fg:w="6"/><text x="65.7729%" y="959.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many (6 samples, 0.98%)</title><rect x="65.5229%" y="933" width="0.9804%" height="15" fill="rgb(236,25,32)" fg:x="401" fg:w="6"/><text x="65.7729%" y="943.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (6 samples, 0.98%)</title><rect x="65.5229%" y="917" width="0.9804%" height="15" fill="rgb(250,142,30)" fg:x="401" fg:w="6"/><text x="65.7729%" y="927.50"></text></g><g><title>regex_automata::meta::strategy::new (6 samples, 0.98%)</title><rect x="65.5229%" y="901" width="0.9804%" height="15" fill="rgb(243,171,22)" fg:x="401" fg:w="6"/><text x="65.7729%" y="911.50"></text></g><g><title>regex_automata::meta::strategy::Core::new (3 samples, 0.49%)</title><rect x="66.0131%" y="885" width="0.4902%" height="15" fill="rgb(222,69,27)" fg:x="404" fg:w="3"/><text x="66.2631%" y="895.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (3 samples, 0.49%)</title><rect x="66.0131%" y="869" width="0.4902%" height="15" fill="rgb(226,42,16)" fg:x="404" fg:w="3"/><text x="66.2631%" y="879.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (3 samples, 0.49%)</title><rect x="66.0131%" y="853" width="0.4902%" height="15" fill="rgb(242,129,17)" fg:x="404" fg:w="3"/><text x="66.2631%" y="863.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::build (3 samples, 0.49%)</title><rect x="66.0131%" y="837" width="0.4902%" height="15" fill="rgb(205,136,15)" fg:x="404" fg:w="3"/><text x="66.2631%" y="847.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::Inner::into_nfa (3 samples, 0.49%)</title><rect x="66.0131%" y="821" width="0.4902%" height="15" fill="rgb(253,86,8)" fg:x="404" fg:w="3"/><text x="66.2631%" y="831.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (1 samples, 0.16%)</title><rect x="66.3399%" y="805" width="0.1634%" height="15" fill="rgb(221,10,3)" fg:x="406" fg:w="1"/><text x="66.5899%" y="815.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.16%)</title><rect x="66.3399%" y="789" width="0.1634%" height="15" fill="rgb(217,126,36)" fg:x="406" fg:w="1"/><text x="66.5899%" y="799.50"></text></g><g><title>regex_automata::util::captures::GroupInfoInner::add_explicit_group (1 samples, 0.16%)</title><rect x="66.5033%" y="773" width="0.1634%" height="15" fill="rgb(232,40,15)" fg:x="407" fg:w="1"/><text x="66.7533%" y="783.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;str&gt; as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.16%)</title><rect x="66.5033%" y="757" width="0.1634%" height="15" fill="rgb(236,118,46)" fg:x="407" fg:w="1"/><text x="66.7533%" y="767.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (1 samples, 0.16%)</title><rect x="66.5033%" y="741" width="0.1634%" height="15" fill="rgb(253,73,13)" fg:x="407" fg:w="1"/><text x="66.7533%" y="751.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;[T]&gt; as alloc::sync::ArcFromSlice&lt;T&gt;&gt;::from_slice (1 samples, 0.16%)</title><rect x="66.5033%" y="725" width="0.1634%" height="15" fill="rgb(232,64,3)" fg:x="407" fg:w="1"/><text x="66.7533%" y="735.50"></text></g><g><title>alloc::sync::Arc&lt;[T]&gt;::copy_from_slice (1 samples, 0.16%)</title><rect x="66.5033%" y="709" width="0.1634%" height="15" fill="rgb(234,137,46)" fg:x="407" fg:w="1"/><text x="66.7533%" y="719.50"></text></g><g><title>alloc::sync::Arc&lt;[T]&gt;::allocate_for_slice (1 samples, 0.16%)</title><rect x="66.5033%" y="693" width="0.1634%" height="15" fill="rgb(235,214,27)" fg:x="407" fg:w="1"/><text x="66.7533%" y="703.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::allocate_for_layout (1 samples, 0.16%)</title><rect x="66.5033%" y="677" width="0.1634%" height="15" fill="rgb(231,79,31)" fg:x="407" fg:w="1"/><text x="66.7533%" y="687.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::try_allocate_for_layout (1 samples, 0.16%)</title><rect x="66.5033%" y="661" width="0.1634%" height="15" fill="rgb(205,80,28)" fg:x="407" fg:w="1"/><text x="66.7533%" y="671.50"></text></g><g><title>core::ptr::write (1 samples, 0.16%)</title><rect x="66.5033%" y="645" width="0.1634%" height="15" fill="rgb(209,143,44)" fg:x="407" fg:w="1"/><text x="66.7533%" y="655.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::Inner::set_captures (2 samples, 0.33%)</title><rect x="66.5033%" y="805" width="0.3268%" height="15" fill="rgb(254,224,34)" fg:x="407" fg:w="2"/><text x="66.7533%" y="815.50"></text></g><g><title>regex_automata::util::captures::GroupInfo::new (2 samples, 0.33%)</title><rect x="66.5033%" y="789" width="0.3268%" height="15" fill="rgb(209,86,2)" fg:x="407" fg:w="2"/><text x="66.7533%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (1 samples, 0.16%)</title><rect x="66.8301%" y="805" width="0.1634%" height="15" fill="rgb(249,199,35)" fg:x="409" fg:w="1"/><text x="67.0801%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (1 samples, 0.16%)</title><rect x="66.8301%" y="789" width="0.1634%" height="15" fill="rgb(216,52,5)" fg:x="409" fg:w="1"/><text x="67.0801%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.16%)</title><rect x="66.8301%" y="773" width="0.1634%" height="15" fill="rgb(212,159,3)" fg:x="409" fg:w="1"/><text x="67.0801%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.16%)</title><rect x="66.8301%" y="757" width="0.1634%" height="15" fill="rgb(231,142,39)" fg:x="409" fg:w="1"/><text x="67.0801%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.16%)</title><rect x="66.8301%" y="741" width="0.1634%" height="15" fill="rgb(249,2,22)" fg:x="409" fg:w="1"/><text x="67.0801%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.16%)</title><rect x="66.8301%" y="725" width="0.1634%" height="15" fill="rgb(254,53,35)" fg:x="409" fg:w="1"/><text x="67.0801%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.16%)</title><rect x="66.8301%" y="709" width="0.1634%" height="15" fill="rgb(237,133,22)" fg:x="409" fg:w="1"/><text x="67.0801%" y="719.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.16%)</title><rect x="66.8301%" y="693" width="0.1634%" height="15" fill="rgb(206,112,53)" fg:x="409" fg:w="1"/><text x="67.0801%" y="703.50"></text></g><g><title>_int_malloc (1 samples, 0.16%)</title><rect x="66.8301%" y="677" width="0.1634%" height="15" fill="rgb(222,219,51)" fg:x="409" fg:w="1"/><text x="67.0801%" y="687.50"></text></g><g><title>malloc_consolidate (1 samples, 0.16%)</title><rect x="66.8301%" y="661" width="0.1634%" height="15" fill="rgb(228,194,39)" fg:x="409" fg:w="1"/><text x="67.0801%" y="671.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_sysline_in_block_year (4 samples, 0.65%)</title><rect x="66.5033%" y="1205" width="0.6536%" height="15" fill="rgb(253,177,51)" fg:x="407" fg:w="4"/><text x="66.7533%" y="1215.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::parse_datetime_in_line_cached (4 samples, 0.65%)</title><rect x="66.5033%" y="1189" width="0.6536%" height="15" fill="rgb(231,75,50)" fg:x="407" fg:w="4"/><text x="66.7533%" y="1199.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::parse_datetime_in_line (4 samples, 0.65%)</title><rect x="66.5033%" y="1173" width="0.6536%" height="15" fill="rgb(234,54,15)" fg:x="407" fg:w="4"/><text x="66.7533%" y="1183.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_datetime_in_line (4 samples, 0.65%)</title><rect x="66.5033%" y="1157" width="0.6536%" height="15" fill="rgb(212,53,9)" fg:x="407" fg:w="4"/><text x="66.7533%" y="1167.50"></text></g><g><title>s4lib::data::datetime::bytes_to_regex_to_datetime (4 samples, 0.65%)</title><rect x="66.5033%" y="1141" width="0.6536%" height="15" fill="rgb(252,84,36)" fg:x="407" fg:w="4"/><text x="66.7533%" y="1151.50"></text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref (4 samples, 0.65%)</title><rect x="66.5033%" y="1125" width="0.6536%" height="15" fill="rgb(217,15,43)" fg:x="407" fg:w="4"/><text x="66.7533%" y="1135.50"></text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref::__stability (4 samples, 0.65%)</title><rect x="66.5033%" y="1109" width="0.6536%" height="15" fill="rgb(239,165,48)" fg:x="407" fg:w="4"/><text x="66.7533%" y="1119.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (4 samples, 0.65%)</title><rect x="66.5033%" y="1093" width="0.6536%" height="15" fill="rgb(235,175,8)" fg:x="407" fg:w="4"/><text x="66.7533%" y="1103.50"></text></g><g><title>std::sync::once::Once::call_once (4 samples, 0.65%)</title><rect x="66.5033%" y="1077" width="0.6536%" height="15" fill="rgb(247,17,47)" fg:x="407" fg:w="4"/><text x="66.7533%" y="1087.50"></text></g><g><title>std::sys_common::once::futex::Once::call (4 samples, 0.65%)</title><rect x="66.5033%" y="1061" width="0.6536%" height="15" fill="rgb(246,168,49)" fg:x="407" fg:w="4"/><text x="66.7533%" y="1071.50"></text></g><g><title>std::sync::once::Once::call_once::{{closure}} (4 samples, 0.65%)</title><rect x="66.5033%" y="1045" width="0.6536%" height="15" fill="rgb(237,63,35)" fg:x="407" fg:w="4"/><text x="66.7533%" y="1055.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}} (4 samples, 0.65%)</title><rect x="66.5033%" y="1029" width="0.6536%" height="15" fill="rgb(238,7,51)" fg:x="407" fg:w="4"/><text x="66.7533%" y="1039.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4 samples, 0.65%)</title><rect x="66.5033%" y="1013" width="0.6536%" height="15" fill="rgb(210,80,10)" fg:x="407" fg:w="4"/><text x="66.7533%" y="1023.50"></text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref::__static_ref_initialize (4 samples, 0.65%)</title><rect x="66.5033%" y="997" width="0.6536%" height="15" fill="rgb(205,24,29)" fg:x="407" fg:w="4"/><text x="66.7533%" y="1007.50"></text></g><g><title>regex::regex::bytes::Regex::new (4 samples, 0.65%)</title><rect x="66.5033%" y="981" width="0.6536%" height="15" fill="rgb(246,224,25)" fg:x="407" fg:w="4"/><text x="66.7533%" y="991.50"></text></g><g><title>regex::builders::bytes::RegexBuilder::build (4 samples, 0.65%)</title><rect x="66.5033%" y="965" width="0.6536%" height="15" fill="rgb(236,76,51)" fg:x="407" fg:w="4"/><text x="66.7533%" y="975.50"></text></g><g><title>regex::builders::Builder::build_one_bytes (4 samples, 0.65%)</title><rect x="66.5033%" y="949" width="0.6536%" height="15" fill="rgb(233,102,7)" fg:x="407" fg:w="4"/><text x="66.7533%" y="959.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (4 samples, 0.65%)</title><rect x="66.5033%" y="933" width="0.6536%" height="15" fill="rgb(212,33,22)" fg:x="407" fg:w="4"/><text x="66.7533%" y="943.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many (4 samples, 0.65%)</title><rect x="66.5033%" y="917" width="0.6536%" height="15" fill="rgb(236,25,32)" fg:x="407" fg:w="4"/><text x="66.7533%" y="927.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (4 samples, 0.65%)</title><rect x="66.5033%" y="901" width="0.6536%" height="15" fill="rgb(250,142,30)" fg:x="407" fg:w="4"/><text x="66.7533%" y="911.50"></text></g><g><title>regex_automata::meta::strategy::new (4 samples, 0.65%)</title><rect x="66.5033%" y="885" width="0.6536%" height="15" fill="rgb(243,171,22)" fg:x="407" fg:w="4"/><text x="66.7533%" y="895.50"></text></g><g><title>regex_automata::meta::strategy::Core::new (4 samples, 0.65%)</title><rect x="66.5033%" y="869" width="0.6536%" height="15" fill="rgb(222,69,27)" fg:x="407" fg:w="4"/><text x="66.7533%" y="879.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (4 samples, 0.65%)</title><rect x="66.5033%" y="853" width="0.6536%" height="15" fill="rgb(226,42,16)" fg:x="407" fg:w="4"/><text x="66.7533%" y="863.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (4 samples, 0.65%)</title><rect x="66.5033%" y="837" width="0.6536%" height="15" fill="rgb(242,129,17)" fg:x="407" fg:w="4"/><text x="66.7533%" y="847.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::build (4 samples, 0.65%)</title><rect x="66.5033%" y="821" width="0.6536%" height="15" fill="rgb(205,136,15)" fg:x="407" fg:w="4"/><text x="66.7533%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.16%)</title><rect x="66.9935%" y="805" width="0.1634%" height="15" fill="rgb(209,26,30)" fg:x="410" fg:w="1"/><text x="67.2435%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.16%)</title><rect x="66.9935%" y="789" width="0.1634%" height="15" fill="rgb(229,121,46)" fg:x="410" fg:w="1"/><text x="67.2435%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.16%)</title><rect x="66.9935%" y="773" width="0.1634%" height="15" fill="rgb(221,172,50)" fg:x="410" fg:w="1"/><text x="67.2435%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.16%)</title><rect x="66.9935%" y="757" width="0.1634%" height="15" fill="rgb(216,42,52)" fg:x="410" fg:w="1"/><text x="67.2435%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.16%)</title><rect x="66.9935%" y="741" width="0.1634%" height="15" fill="rgb(249,207,12)" fg:x="410" fg:w="1"/><text x="67.2435%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.16%)</title><rect x="66.9935%" y="725" width="0.1634%" height="15" fill="rgb(224,194,14)" fg:x="410" fg:w="1"/><text x="67.2435%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.16%)</title><rect x="66.9935%" y="709" width="0.1634%" height="15" fill="rgb(227,204,5)" fg:x="410" fg:w="1"/><text x="67.2435%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.16%)</title><rect x="66.9935%" y="693" width="0.1634%" height="15" fill="rgb(231,114,21)" fg:x="410" fg:w="1"/><text x="67.2435%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.16%)</title><rect x="66.9935%" y="677" width="0.1634%" height="15" fill="rgb(238,209,2)" fg:x="410" fg:w="1"/><text x="67.2435%" y="687.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.16%)</title><rect x="66.9935%" y="661" width="0.1634%" height="15" fill="rgb(253,135,41)" fg:x="410" fg:w="1"/><text x="67.2435%" y="671.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.16%)</title><rect x="66.9935%" y="645" width="0.1634%" height="15" fill="rgb(206,112,53)" fg:x="410" fg:w="1"/><text x="67.2435%" y="655.50"></text></g><g><title>_int_malloc (1 samples, 0.16%)</title><rect x="66.9935%" y="629" width="0.1634%" height="15" fill="rgb(222,219,51)" fg:x="410" fg:w="1"/><text x="67.2435%" y="639.50"></text></g><g><title>unlink_chunk (1 samples, 0.16%)</title><rect x="66.9935%" y="613" width="0.1634%" height="15" fill="rgb(223,20,30)" fg:x="410" fg:w="1"/><text x="67.2435%" y="623.50"></text></g><g><title>regex_automata::meta::strategy::ReverseInner::new (1 samples, 0.16%)</title><rect x="67.1569%" y="917" width="0.1634%" height="15" fill="rgb(225,146,32)" fg:x="411" fg:w="1"/><text x="67.4069%" y="927.50"></text></g><g><title>regex_automata::meta::reverse_inner::extract (1 samples, 0.16%)</title><rect x="67.1569%" y="901" width="0.1634%" height="15" fill="rgb(209,78,45)" fg:x="411" fg:w="1"/><text x="67.4069%" y="911.50"></text></g><g><title>regex_automata::meta::reverse_inner::prefilter (1 samples, 0.16%)</title><rect x="67.1569%" y="885" width="0.1634%" height="15" fill="rgb(221,50,42)" fg:x="411" fg:w="1"/><text x="67.4069%" y="895.50"></text></g><g><title>regex_syntax::hir::literal::Seq::optimize_for_prefix_by_preference (1 samples, 0.16%)</title><rect x="67.1569%" y="869" width="0.1634%" height="15" fill="rgb(206,179,34)" fg:x="411" fg:w="1"/><text x="67.4069%" y="879.50"></text></g><g><title>regex_syntax::hir::literal::Seq::optimize_by_preference (1 samples, 0.16%)</title><rect x="67.1569%" y="853" width="0.1634%" height="15" fill="rgb(208,121,1)" fg:x="411" fg:w="1"/><text x="67.4069%" y="863.50"></text></g><g><title>regex_syntax::hir::literal::PreferenceTrie::minimize (1 samples, 0.16%)</title><rect x="67.1569%" y="837" width="0.1634%" height="15" fill="rgb(240,28,15)" fg:x="411" fg:w="1"/><text x="67.4069%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut (1 samples, 0.16%)</title><rect x="67.1569%" y="821" width="0.1634%" height="15" fill="rgb(208,159,28)" fg:x="411" fg:w="1"/><text x="67.4069%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut::process_loop (1 samples, 0.16%)</title><rect x="67.1569%" y="805" width="0.1634%" height="15" fill="rgb(227,228,3)" fg:x="411" fg:w="1"/><text x="67.4069%" y="815.50"></text></g><g><title>regex_syntax::hir::literal::PreferenceTrie::minimize::{{closure}} (1 samples, 0.16%)</title><rect x="67.1569%" y="789" width="0.1634%" height="15" fill="rgb(234,110,33)" fg:x="411" fg:w="1"/><text x="67.4069%" y="799.50"></text></g><g><title>regex_syntax::hir::literal::PreferenceTrie::insert (1 samples, 0.16%)</title><rect x="67.1569%" y="773" width="0.1634%" height="15" fill="rgb(208,38,45)" fg:x="411" fg:w="1"/><text x="67.4069%" y="783.50"></text></g><g><title>regex_syntax::hir::literal::PreferenceTrie::create_state (1 samples, 0.16%)</title><rect x="67.1569%" y="757" width="0.1634%" height="15" fill="rgb(224,202,5)" fg:x="411" fg:w="1"/><text x="67.4069%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.16%)</title><rect x="67.1569%" y="741" width="0.1634%" height="15" fill="rgb(241,229,15)" fg:x="411" fg:w="1"/><text x="67.4069%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.16%)</title><rect x="67.1569%" y="725" width="0.1634%" height="15" fill="rgb(254,103,39)" fg:x="411" fg:w="1"/><text x="67.4069%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.16%)</title><rect x="67.1569%" y="709" width="0.1634%" height="15" fill="rgb(254,53,35)" fg:x="411" fg:w="1"/><text x="67.4069%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.16%)</title><rect x="67.1569%" y="693" width="0.1634%" height="15" fill="rgb(237,133,22)" fg:x="411" fg:w="1"/><text x="67.4069%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.16%)</title><rect x="67.1569%" y="677" width="0.1634%" height="15" fill="rgb(237,156,49)" fg:x="411" fg:w="1"/><text x="67.4069%" y="687.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.16%)</title><rect x="67.1569%" y="661" width="0.1634%" height="15" fill="rgb(214,150,36)" fg:x="411" fg:w="1"/><text x="67.4069%" y="671.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.16%)</title><rect x="67.1569%" y="645" width="0.1634%" height="15" fill="rgb(254,47,34)" fg:x="411" fg:w="1"/><text x="67.4069%" y="655.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.16%)</title><rect x="67.1569%" y="629" width="0.1634%" height="15" fill="rgb(254,73,4)" fg:x="411" fg:w="1"/><text x="67.4069%" y="639.50"></text></g><g><title>_int_realloc (1 samples, 0.16%)</title><rect x="67.1569%" y="613" width="0.1634%" height="15" fill="rgb(231,75,41)" fg:x="411" fg:w="1"/><text x="67.4069%" y="623.50"></text></g><g><title>_int_malloc (1 samples, 0.16%)</title><rect x="67.1569%" y="597" width="0.1634%" height="15" fill="rgb(222,219,51)" fg:x="411" fg:w="1"/><text x="67.4069%" y="607.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by_key::{{closure}} (1 samples, 0.16%)</title><rect x="67.3203%" y="565" width="0.1634%" height="15" fill="rgb(217,124,17)" fg:x="412" fg:w="1"/><text x="67.5703%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u8&gt;::cmp (1 samples, 0.16%)</title><rect x="67.3203%" y="549" width="0.1634%" height="15" fill="rgb(206,19,29)" fg:x="412" fg:w="1"/><text x="67.5703%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by_key (3 samples, 0.49%)</title><rect x="67.3203%" y="597" width="0.4902%" height="15" fill="rgb(219,159,10)" fg:x="412" fg:w="3"/><text x="67.5703%" y="607.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (3 samples, 0.49%)</title><rect x="67.3203%" y="581" width="0.4902%" height="15" fill="rgb(252,87,43)" fg:x="412" fg:w="3"/><text x="67.5703%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.16%)</title><rect x="67.8105%" y="597" width="0.1634%" height="15" fill="rgb(241,229,15)" fg:x="415" fg:w="1"/><text x="68.0605%" y="607.50"></text></g><g><title>core::ptr::write (1 samples, 0.16%)</title><rect x="67.8105%" y="581" width="0.1634%" height="15" fill="rgb(209,143,44)" fg:x="415" fg:w="1"/><text x="68.0605%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (1 samples, 0.16%)</title><rect x="67.9739%" y="597" width="0.1634%" height="15" fill="rgb(222,129,7)" fg:x="416" fg:w="1"/><text x="68.2239%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.16%)</title><rect x="67.9739%" y="581" width="0.1634%" height="15" fill="rgb(212,159,3)" fg:x="416" fg:w="1"/><text x="68.2239%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.16%)</title><rect x="67.9739%" y="565" width="0.1634%" height="15" fill="rgb(231,142,39)" fg:x="416" fg:w="1"/><text x="68.2239%" y="575.50"></text></g><g><title>&lt;regex_automata::nfa::thompson::literal_trie::State as core::default::Default&gt;::default (1 samples, 0.16%)</title><rect x="68.1373%" y="597" width="0.1634%" height="15" fill="rgb(208,73,9)" fg:x="417" fg:w="1"/><text x="68.3873%" y="607.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::get_or_add_state (7 samples, 1.14%)</title><rect x="67.3203%" y="613" width="1.1438%" height="15" fill="rgb(249,22,31)" fg:x="412" fg:w="7"/><text x="67.5703%" y="623.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::add (8 samples, 1.31%)</title><rect x="67.3203%" y="629" width="1.3072%" height="15" fill="rgb(247,201,32)" fg:x="412" fg:w="8"/><text x="67.5703%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_automata::nfa::thompson::literal_trie::Transition&gt;&gt; (1 samples, 0.16%)</title><rect x="68.6275%" y="549" width="0.1634%" height="15" fill="rgb(242,32,21)" fg:x="420" fg:w="1"/><text x="68.8775%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;regex_automata::nfa::thompson::literal_trie::Transition&gt;&gt; (1 samples, 0.16%)</title><rect x="68.6275%" y="533" width="0.1634%" height="15" fill="rgb(216,209,43)" fg:x="420" fg:w="1"/><text x="68.8775%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.16%)</title><rect x="68.6275%" y="517" width="0.1634%" height="15" fill="rgb(213,128,22)" fg:x="420" fg:w="1"/><text x="68.8775%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.16%)</title><rect x="68.6275%" y="501" width="0.1634%" height="15" fill="rgb(238,77,31)" fg:x="420" fg:w="1"/><text x="68.8775%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.16%)</title><rect x="68.6275%" y="485" width="0.1634%" height="15" fill="rgb(227,15,28)" fg:x="420" fg:w="1"/><text x="68.8775%" y="495.50"></text></g><g><title>__GI___libc_free (1 samples, 0.16%)</title><rect x="68.6275%" y="469" width="0.1634%" height="15" fill="rgb(247,8,17)" fg:x="420" fg:w="1"/><text x="68.8775%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 1.63%)</title><rect x="67.3203%" y="741" width="1.6340%" height="15" fill="rgb(214,109,53)" fg:x="412" fg:w="10"/><text x="67.5703%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (10 samples, 1.63%)</title><rect x="67.3203%" y="725" width="1.6340%" height="15" fill="rgb(254,35,30)" fg:x="412" fg:w="10"/><text x="67.5703%" y="735.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (10 samples, 1.63%)</title><rect x="67.3203%" y="709" width="1.6340%" height="15" fill="rgb(226,169,23)" fg:x="412" fg:w="10"/><text x="67.5703%" y="719.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (10 samples, 1.63%)</title><rect x="67.3203%" y="693" width="1.6340%" height="15" fill="rgb(205,130,14)" fg:x="412" fg:w="10"/><text x="67.5703%" y="703.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (10 samples, 1.63%)</title><rect x="67.3203%" y="677" width="1.6340%" height="15" fill="rgb(235,200,16)" fg:x="412" fg:w="10"/><text x="67.5703%" y="687.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (10 samples, 1.63%)</title><rect x="67.3203%" y="661" width="1.6340%" height="15" fill="rgb(213,34,18)" fg:x="412" fg:w="10"/><text x="67.5703%" y="671.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (10 samples, 1.63%)</title><rect x="67.3203%" y="645" width="1.6340%" height="15" fill="rgb(253,35,22)" fg:x="412" fg:w="10"/><text x="67.5703%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::literal_trie::LiteralTrie&gt; (2 samples, 0.33%)</title><rect x="68.6275%" y="629" width="0.3268%" height="15" fill="rgb(244,70,29)" fg:x="420" fg:w="2"/><text x="68.8775%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_automata::nfa::thompson::literal_trie::State&gt;&gt; (2 samples, 0.33%)</title><rect x="68.6275%" y="613" width="0.3268%" height="15" fill="rgb(227,19,7)" fg:x="420" fg:w="2"/><text x="68.8775%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.33%)</title><rect x="68.6275%" y="597" width="0.3268%" height="15" fill="rgb(249,14,2)" fg:x="420" fg:w="2"/><text x="68.8775%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;[regex_automata::nfa::thompson::literal_trie::State]&gt; (2 samples, 0.33%)</title><rect x="68.6275%" y="581" width="0.3268%" height="15" fill="rgb(241,61,51)" fg:x="420" fg:w="2"/><text x="68.8775%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::literal_trie::State&gt; (2 samples, 0.33%)</title><rect x="68.6275%" y="565" width="0.3268%" height="15" fill="rgb(245,189,53)" fg:x="420" fg:w="2"/><text x="68.8775%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt; (1 samples, 0.16%)</title><rect x="68.7908%" y="549" width="0.1634%" height="15" fill="rgb(213,102,40)" fg:x="421" fg:w="1"/><text x="69.0408%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize)&gt;&gt; (1 samples, 0.16%)</title><rect x="68.7908%" y="533" width="0.1634%" height="15" fill="rgb(243,139,46)" fg:x="421" fg:w="1"/><text x="69.0408%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.16%)</title><rect x="68.7908%" y="517" width="0.1634%" height="15" fill="rgb(213,128,22)" fg:x="421" fg:w="1"/><text x="69.0408%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.16%)</title><rect x="68.7908%" y="501" width="0.1634%" height="15" fill="rgb(238,77,31)" fg:x="421" fg:w="1"/><text x="69.0408%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.16%)</title><rect x="68.7908%" y="485" width="0.1634%" height="15" fill="rgb(227,15,28)" fg:x="421" fg:w="1"/><text x="69.0408%" y="495.50"></text></g><g><title>__GI___libc_free (1 samples, 0.16%)</title><rect x="68.7908%" y="469" width="0.1634%" height="15" fill="rgb(247,8,17)" fg:x="421" fg:w="1"/><text x="69.0408%" y="479.50"></text></g><g><title>regex_automata::util::primitives::&lt;impl core::ops::index::IndexMut&lt;regex_automata::util::primitives::StateID&gt; for alloc::vec::Vec&lt;T&gt;&gt;::index_mut (1 samples, 0.16%)</title><rect x="68.9542%" y="613" width="0.1634%" height="15" fill="rgb(239,213,26)" fg:x="422" fg:w="1"/><text x="69.2042%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.16%)</title><rect x="68.9542%" y="597" width="0.1634%" height="15" fill="rgb(218,6,47)" fg:x="422" fg:w="1"/><text x="69.2042%" y="607.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.16%)</title><rect x="68.9542%" y="581" width="0.1634%" height="15" fill="rgb(228,30,25)" fg:x="422" fg:w="1"/><text x="69.2042%" y="591.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.16%)</title><rect x="68.9542%" y="565" width="0.1634%" height="15" fill="rgb(215,184,34)" fg:x="422" fg:w="1"/><text x="69.2042%" y="575.50"></text></g><g><title>regex_automata::util::primitives::&lt;impl core::ops::index::Index&lt;regex_automata::util::primitives::StateID&gt; for alloc::vec::Vec&lt;T&gt;&gt;::index (1 samples, 0.16%)</title><rect x="69.1176%" y="597" width="0.1634%" height="15" fill="rgb(228,13,3)" fg:x="423" fg:w="1"/><text x="69.3676%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="69.2810%" y="565" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="424" fg:w="1"/><text x="69.5310%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="69.2810%" y="549" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="424" fg:w="1"/><text x="69.5310%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="69.2810%" y="533" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="424" fg:w="1"/><text x="69.5310%" y="543.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::get_or_add_state (5 samples, 0.82%)</title><rect x="69.1176%" y="613" width="0.8170%" height="15" fill="rgb(249,22,31)" fg:x="423" fg:w="5"/><text x="69.3676%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.65%)</title><rect x="69.2810%" y="597" width="0.6536%" height="15" fill="rgb(241,229,15)" fg:x="424" fg:w="4"/><text x="69.5310%" y="607.50"></text></g><g><title>core::ptr::write (4 samples, 0.65%)</title><rect x="69.2810%" y="581" width="0.6536%" height="15" fill="rgb(209,143,44)" fg:x="424" fg:w="4"/><text x="69.5310%" y="591.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::add (7 samples, 1.14%)</title><rect x="68.9542%" y="629" width="1.1438%" height="15" fill="rgb(247,201,32)" fg:x="422" fg:w="7"/><text x="69.2042%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.16%)</title><rect x="70.0980%" y="501" width="0.1634%" height="15" fill="rgb(253,185,17)" fg:x="429" fg:w="1"/><text x="70.3480%" y="511.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.16%)</title><rect x="70.0980%" y="485" width="0.1634%" height="15" fill="rgb(228,159,29)" fg:x="429" fg:w="1"/><text x="70.3480%" y="495.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.16%)</title><rect x="70.0980%" y="469" width="0.1634%" height="15" fill="rgb(252,20,51)" fg:x="429" fg:w="1"/><text x="70.3480%" y="479.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (20 samples, 3.27%)</title><rect x="67.3203%" y="901" width="3.2680%" height="15" fill="rgb(226,42,16)" fg:x="412" fg:w="20"/><text x="67.5703%" y="911.50">reg..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (20 samples, 3.27%)</title><rect x="67.3203%" y="885" width="3.2680%" height="15" fill="rgb(242,129,17)" fg:x="412" fg:w="20"/><text x="67.5703%" y="895.50">reg..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (20 samples, 3.27%)</title><rect x="67.3203%" y="869" width="3.2680%" height="15" fill="rgb(247,137,3)" fg:x="412" fg:w="20"/><text x="67.5703%" y="879.50">reg..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 3.27%)</title><rect x="67.3203%" y="853" width="3.2680%" height="15" fill="rgb(214,109,53)" fg:x="412" fg:w="20"/><text x="67.5703%" y="863.50">&lt;co..</text></g><g><title>core::option::Option&lt;T&gt;::map (20 samples, 3.27%)</title><rect x="67.3203%" y="837" width="3.2680%" height="15" fill="rgb(254,35,30)" fg:x="412" fg:w="20"/><text x="67.5703%" y="847.50">cor..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (20 samples, 3.27%)</title><rect x="67.3203%" y="821" width="3.2680%" height="15" fill="rgb(226,169,23)" fg:x="412" fg:w="20"/><text x="67.5703%" y="831.50">cor..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile::{{closure}} (20 samples, 3.27%)</title><rect x="67.3203%" y="805" width="3.2680%" height="15" fill="rgb(218,216,52)" fg:x="412" fg:w="20"/><text x="67.5703%" y="815.50">reg..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (20 samples, 3.27%)</title><rect x="67.3203%" y="789" width="3.2680%" height="15" fill="rgb(235,200,16)" fg:x="412" fg:w="20"/><text x="67.5703%" y="799.50">reg..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (20 samples, 3.27%)</title><rect x="67.3203%" y="773" width="3.2680%" height="15" fill="rgb(213,34,18)" fg:x="412" fg:w="20"/><text x="67.5703%" y="783.50">reg..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (20 samples, 3.27%)</title><rect x="67.3203%" y="757" width="3.2680%" height="15" fill="rgb(210,105,37)" fg:x="412" fg:w="20"/><text x="67.5703%" y="767.50">reg..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (10 samples, 1.63%)</title><rect x="68.9542%" y="741" width="1.6340%" height="15" fill="rgb(222,94,14)" fg:x="422" fg:w="10"/><text x="69.2042%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (10 samples, 1.63%)</title><rect x="68.9542%" y="725" width="1.6340%" height="15" fill="rgb(254,35,30)" fg:x="422" fg:w="10"/><text x="69.2042%" y="735.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (10 samples, 1.63%)</title><rect x="68.9542%" y="709" width="1.6340%" height="15" fill="rgb(226,169,23)" fg:x="422" fg:w="10"/><text x="69.2042%" y="719.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (10 samples, 1.63%)</title><rect x="68.9542%" y="693" width="1.6340%" height="15" fill="rgb(205,130,14)" fg:x="422" fg:w="10"/><text x="69.2042%" y="703.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (10 samples, 1.63%)</title><rect x="68.9542%" y="677" width="1.6340%" height="15" fill="rgb(235,200,16)" fg:x="422" fg:w="10"/><text x="69.2042%" y="687.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (10 samples, 1.63%)</title><rect x="68.9542%" y="661" width="1.6340%" height="15" fill="rgb(213,34,18)" fg:x="422" fg:w="10"/><text x="69.2042%" y="671.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (10 samples, 1.63%)</title><rect x="68.9542%" y="645" width="1.6340%" height="15" fill="rgb(253,35,22)" fg:x="422" fg:w="10"/><text x="69.2042%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::literal_trie::LiteralTrie&gt; (3 samples, 0.49%)</title><rect x="70.0980%" y="629" width="0.4902%" height="15" fill="rgb(244,70,29)" fg:x="429" fg:w="3"/><text x="70.3480%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_automata::nfa::thompson::literal_trie::State&gt;&gt; (3 samples, 0.49%)</title><rect x="70.0980%" y="613" width="0.4902%" height="15" fill="rgb(227,19,7)" fg:x="429" fg:w="3"/><text x="70.3480%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.49%)</title><rect x="70.0980%" y="597" width="0.4902%" height="15" fill="rgb(249,14,2)" fg:x="429" fg:w="3"/><text x="70.3480%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;[regex_automata::nfa::thompson::literal_trie::State]&gt; (3 samples, 0.49%)</title><rect x="70.0980%" y="581" width="0.4902%" height="15" fill="rgb(241,61,51)" fg:x="429" fg:w="3"/><text x="70.3480%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::literal_trie::State&gt; (3 samples, 0.49%)</title><rect x="70.0980%" y="565" width="0.4902%" height="15" fill="rgb(245,189,53)" fg:x="429" fg:w="3"/><text x="70.3480%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_automata::nfa::thompson::literal_trie::Transition&gt;&gt; (3 samples, 0.49%)</title><rect x="70.0980%" y="549" width="0.4902%" height="15" fill="rgb(242,32,21)" fg:x="429" fg:w="3"/><text x="70.3480%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;regex_automata::nfa::thompson::literal_trie::Transition&gt;&gt; (3 samples, 0.49%)</title><rect x="70.0980%" y="533" width="0.4902%" height="15" fill="rgb(216,209,43)" fg:x="429" fg:w="3"/><text x="70.3480%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.49%)</title><rect x="70.0980%" y="517" width="0.4902%" height="15" fill="rgb(213,128,22)" fg:x="429" fg:w="3"/><text x="70.3480%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.33%)</title><rect x="70.2614%" y="501" width="0.3268%" height="15" fill="rgb(238,77,31)" fg:x="430" fg:w="2"/><text x="70.5114%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.33%)</title><rect x="70.2614%" y="485" width="0.3268%" height="15" fill="rgb(227,15,28)" fg:x="430" fg:w="2"/><text x="70.5114%" y="495.50"></text></g><g><title>__GI___libc_free (2 samples, 0.33%)</title><rect x="70.2614%" y="469" width="0.3268%" height="15" fill="rgb(247,8,17)" fg:x="430" fg:w="2"/><text x="70.5114%" y="479.50"></text></g><g><title>_int_free (2 samples, 0.33%)</title><rect x="70.2614%" y="453" width="0.3268%" height="15" fill="rgb(221,113,48)" fg:x="430" fg:w="2"/><text x="70.5114%" y="463.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::NFA::byte_classes (1 samples, 0.16%)</title><rect x="70.5882%" y="837" width="0.1634%" height="15" fill="rgb(249,200,29)" fg:x="432" fg:w="1"/><text x="70.8382%" y="847.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.16%)</title><rect x="70.5882%" y="821" width="0.1634%" height="15" fill="rgb(210,59,24)" fg:x="432" fg:w="1"/><text x="70.8382%" y="831.50"></text></g><g><title>regex_automata::dfa::onepass::InternalBuilder::new (2 samples, 0.33%)</title><rect x="70.5882%" y="853" width="0.3268%" height="15" fill="rgb(239,182,22)" fg:x="432" fg:w="2"/><text x="70.8382%" y="863.50"></text></g><g><title>alloc::vec::from_elem (1 samples, 0.16%)</title><rect x="70.7516%" y="837" width="0.1634%" height="15" fill="rgb(208,109,54)" fg:x="433" fg:w="1"/><text x="71.0016%" y="847.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1 samples, 0.16%)</title><rect x="70.7516%" y="821" width="0.1634%" height="15" fill="rgb(228,177,24)" fg:x="433" fg:w="1"/><text x="71.0016%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.16%)</title><rect x="70.7516%" y="805" width="0.1634%" height="15" fill="rgb(249,207,12)" fg:x="433" fg:w="1"/><text x="71.0016%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.16%)</title><rect x="70.7516%" y="789" width="0.1634%" height="15" fill="rgb(224,194,14)" fg:x="433" fg:w="1"/><text x="71.0016%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.16%)</title><rect x="70.7516%" y="773" width="0.1634%" height="15" fill="rgb(227,204,5)" fg:x="433" fg:w="1"/><text x="71.0016%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.16%)</title><rect x="70.7516%" y="757" width="0.1634%" height="15" fill="rgb(231,114,21)" fg:x="433" fg:w="1"/><text x="71.0016%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.16%)</title><rect x="70.7516%" y="741" width="0.1634%" height="15" fill="rgb(238,209,2)" fg:x="433" fg:w="1"/><text x="71.0016%" y="751.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.16%)</title><rect x="70.7516%" y="725" width="0.1634%" height="15" fill="rgb(253,135,41)" fg:x="433" fg:w="1"/><text x="71.0016%" y="735.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.16%)</title><rect x="70.7516%" y="709" width="0.1634%" height="15" fill="rgb(206,112,53)" fg:x="433" fg:w="1"/><text x="71.0016%" y="719.50"></text></g><g><title>_int_malloc (1 samples, 0.16%)</title><rect x="70.7516%" y="693" width="0.1634%" height="15" fill="rgb(222,219,51)" fg:x="433" fg:w="1"/><text x="71.0016%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.16%)</title><rect x="70.9150%" y="741" width="0.1634%" height="15" fill="rgb(212,159,3)" fg:x="434" fg:w="1"/><text x="71.1650%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.16%)</title><rect x="70.9150%" y="725" width="0.1634%" height="15" fill="rgb(231,142,39)" fg:x="434" fg:w="1"/><text x="71.1650%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.16%)</title><rect x="70.9150%" y="709" width="0.1634%" height="15" fill="rgb(238,95,12)" fg:x="434" fg:w="1"/><text x="71.1650%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (1 samples, 0.16%)</title><rect x="70.9150%" y="693" width="0.1634%" height="15" fill="rgb(219,191,19)" fg:x="434" fg:w="1"/><text x="71.1650%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.33%)</title><rect x="71.0784%" y="565" width="0.3268%" height="15" fill="rgb(210,204,4)" fg:x="435" fg:w="2"/><text x="71.3284%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.33%)</title><rect x="71.0784%" y="549" width="0.3268%" height="15" fill="rgb(210,204,4)" fg:x="435" fg:w="2"/><text x="71.3284%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.33%)</title><rect x="71.0784%" y="533" width="0.3268%" height="15" fill="rgb(210,204,4)" fg:x="435" fg:w="2"/><text x="71.3284%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.33%)</title><rect x="71.0784%" y="517" width="0.3268%" height="15" fill="rgb(210,204,4)" fg:x="435" fg:w="2"/><text x="71.3284%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.49%)</title><rect x="71.0784%" y="597" width="0.4902%" height="15" fill="rgb(210,204,4)" fg:x="435" fg:w="3"/><text x="71.3284%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.49%)</title><rect x="71.0784%" y="581" width="0.4902%" height="15" fill="rgb(210,204,4)" fg:x="435" fg:w="3"/><text x="71.3284%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.65%)</title><rect x="71.0784%" y="645" width="0.6536%" height="15" fill="rgb(210,204,4)" fg:x="435" fg:w="4"/><text x="71.3284%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.65%)</title><rect x="71.0784%" y="629" width="0.6536%" height="15" fill="rgb(210,204,4)" fg:x="435" fg:w="4"/><text x="71.3284%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.65%)</title><rect x="71.0784%" y="613" width="0.6536%" height="15" fill="rgb(210,204,4)" fg:x="435" fg:w="4"/><text x="71.3284%" y="623.50"></text></g><g><title>regex_automata::dfa::onepass::InternalBuilder::add_dfa_state_for_nfa_state (7 samples, 1.14%)</title><rect x="70.9150%" y="821" width="1.1438%" height="15" fill="rgb(226,222,5)" fg:x="434" fg:w="7"/><text x="71.1650%" y="831.50"></text></g><g><title>regex_automata::dfa::onepass::InternalBuilder::add_empty_state (7 samples, 1.14%)</title><rect x="70.9150%" y="805" width="1.1438%" height="15" fill="rgb(249,155,54)" fg:x="434" fg:w="7"/><text x="71.1650%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (7 samples, 1.14%)</title><rect x="70.9150%" y="789" width="1.1438%" height="15" fill="rgb(205,186,49)" fg:x="434" fg:w="7"/><text x="71.1650%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (7 samples, 1.14%)</title><rect x="70.9150%" y="773" width="1.1438%" height="15" fill="rgb(232,211,42)" fg:x="434" fg:w="7"/><text x="71.1650%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (7 samples, 1.14%)</title><rect x="70.9150%" y="757" width="1.1438%" height="15" fill="rgb(214,146,48)" fg:x="434" fg:w="7"/><text x="71.1650%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (6 samples, 0.98%)</title><rect x="71.0784%" y="741" width="0.9804%" height="15" fill="rgb(242,133,26)" fg:x="435" fg:w="6"/><text x="71.3284%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.98%)</title><rect x="71.0784%" y="725" width="0.9804%" height="15" fill="rgb(223,137,46)" fg:x="435" fg:w="6"/><text x="71.3284%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each::check::{{closure}} (6 samples, 0.98%)</title><rect x="71.0784%" y="709" width="0.9804%" height="15" fill="rgb(234,154,36)" fg:x="435" fg:w="6"/><text x="71.3284%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::{{closure}} (6 samples, 0.98%)</title><rect x="71.0784%" y="693" width="0.9804%" height="15" fill="rgb(221,227,48)" fg:x="435" fg:w="6"/><text x="71.3284%" y="703.50"></text></g><g><title>core::ptr::write (6 samples, 0.98%)</title><rect x="71.0784%" y="677" width="0.9804%" height="15" fill="rgb(209,143,44)" fg:x="435" fg:w="6"/><text x="71.3284%" y="687.50"></text></g><g><title>__memset_avx512_unaligned_erms (6 samples, 0.98%)</title><rect x="71.0784%" y="661" width="0.9804%" height="15" fill="rgb(240,145,53)" fg:x="435" fg:w="6"/><text x="71.3284%" y="671.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_datetime_in_line (31 samples, 5.07%)</title><rect x="67.1569%" y="1205" width="5.0654%" height="15" fill="rgb(212,53,9)" fg:x="411" fg:w="31"/><text x="67.4069%" y="1215.50">s4lib:..</text></g><g><title>s4lib::data::datetime::bytes_to_regex_to_datetime (31 samples, 5.07%)</title><rect x="67.1569%" y="1189" width="5.0654%" height="15" fill="rgb(252,84,36)" fg:x="411" fg:w="31"/><text x="67.4069%" y="1199.50">s4lib:..</text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref (31 samples, 5.07%)</title><rect x="67.1569%" y="1173" width="5.0654%" height="15" fill="rgb(217,15,43)" fg:x="411" fg:w="31"/><text x="67.4069%" y="1183.50">&lt;s4lib..</text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref::__stability (31 samples, 5.07%)</title><rect x="67.1569%" y="1157" width="5.0654%" height="15" fill="rgb(239,165,48)" fg:x="411" fg:w="31"/><text x="67.4069%" y="1167.50">&lt;s4lib..</text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (31 samples, 5.07%)</title><rect x="67.1569%" y="1141" width="5.0654%" height="15" fill="rgb(235,175,8)" fg:x="411" fg:w="31"/><text x="67.4069%" y="1151.50">lazy_s..</text></g><g><title>std::sync::once::Once::call_once (31 samples, 5.07%)</title><rect x="67.1569%" y="1125" width="5.0654%" height="15" fill="rgb(247,17,47)" fg:x="411" fg:w="31"/><text x="67.4069%" y="1135.50">std::s..</text></g><g><title>std::sys_common::once::futex::Once::call (31 samples, 5.07%)</title><rect x="67.1569%" y="1109" width="5.0654%" height="15" fill="rgb(246,168,49)" fg:x="411" fg:w="31"/><text x="67.4069%" y="1119.50">std::s..</text></g><g><title>std::sync::once::Once::call_once::{{closure}} (31 samples, 5.07%)</title><rect x="67.1569%" y="1093" width="5.0654%" height="15" fill="rgb(237,63,35)" fg:x="411" fg:w="31"/><text x="67.4069%" y="1103.50">std::s..</text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}} (31 samples, 5.07%)</title><rect x="67.1569%" y="1077" width="5.0654%" height="15" fill="rgb(238,7,51)" fg:x="411" fg:w="31"/><text x="67.4069%" y="1087.50">lazy_s..</text></g><g><title>core::ops::function::FnOnce::call_once (31 samples, 5.07%)</title><rect x="67.1569%" y="1061" width="5.0654%" height="15" fill="rgb(210,80,10)" fg:x="411" fg:w="31"/><text x="67.4069%" y="1071.50">core::..</text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref::__static_ref_initialize (31 samples, 5.07%)</title><rect x="67.1569%" y="1045" width="5.0654%" height="15" fill="rgb(205,24,29)" fg:x="411" fg:w="31"/><text x="67.4069%" y="1055.50">&lt;s4lib..</text></g><g><title>regex::regex::bytes::Regex::new (31 samples, 5.07%)</title><rect x="67.1569%" y="1029" width="5.0654%" height="15" fill="rgb(246,224,25)" fg:x="411" fg:w="31"/><text x="67.4069%" y="1039.50">regex:..</text></g><g><title>regex::builders::bytes::RegexBuilder::build (31 samples, 5.07%)</title><rect x="67.1569%" y="1013" width="5.0654%" height="15" fill="rgb(236,76,51)" fg:x="411" fg:w="31"/><text x="67.4069%" y="1023.50">regex:..</text></g><g><title>regex::builders::Builder::build_one_bytes (31 samples, 5.07%)</title><rect x="67.1569%" y="997" width="5.0654%" height="15" fill="rgb(233,102,7)" fg:x="411" fg:w="31"/><text x="67.4069%" y="1007.50">regex:..</text></g><g><title>regex_automata::meta::regex::Builder::build (31 samples, 5.07%)</title><rect x="67.1569%" y="981" width="5.0654%" height="15" fill="rgb(212,33,22)" fg:x="411" fg:w="31"/><text x="67.4069%" y="991.50">regex_..</text></g><g><title>regex_automata::meta::regex::Builder::build_many (31 samples, 5.07%)</title><rect x="67.1569%" y="965" width="5.0654%" height="15" fill="rgb(236,25,32)" fg:x="411" fg:w="31"/><text x="67.4069%" y="975.50">regex_..</text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (31 samples, 5.07%)</title><rect x="67.1569%" y="949" width="5.0654%" height="15" fill="rgb(250,142,30)" fg:x="411" fg:w="31"/><text x="67.4069%" y="959.50">regex_..</text></g><g><title>regex_automata::meta::strategy::new (31 samples, 5.07%)</title><rect x="67.1569%" y="933" width="5.0654%" height="15" fill="rgb(243,171,22)" fg:x="411" fg:w="31"/><text x="67.4069%" y="943.50">regex_..</text></g><g><title>regex_automata::meta::strategy::Core::new (30 samples, 4.90%)</title><rect x="67.3203%" y="917" width="4.9020%" height="15" fill="rgb(222,69,27)" fg:x="412" fg:w="30"/><text x="67.5703%" y="927.50">regex_..</text></g><g><title>regex_automata::meta::wrappers::OnePass::new (10 samples, 1.63%)</title><rect x="70.5882%" y="901" width="1.6340%" height="15" fill="rgb(235,224,47)" fg:x="432" fg:w="10"/><text x="70.8382%" y="911.50"></text></g><g><title>regex_automata::meta::wrappers::OnePassEngine::new (10 samples, 1.63%)</title><rect x="70.5882%" y="885" width="1.6340%" height="15" fill="rgb(247,185,25)" fg:x="432" fg:w="10"/><text x="70.8382%" y="895.50"></text></g><g><title>regex_automata::dfa::onepass::Builder::build_from_nfa (10 samples, 1.63%)</title><rect x="70.5882%" y="869" width="1.6340%" height="15" fill="rgb(209,62,19)" fg:x="432" fg:w="10"/><text x="70.8382%" y="879.50"></text></g><g><title>regex_automata::dfa::onepass::InternalBuilder::build (8 samples, 1.31%)</title><rect x="70.9150%" y="853" width="1.3072%" height="15" fill="rgb(206,107,24)" fg:x="434" fg:w="8"/><text x="71.1650%" y="863.50"></text></g><g><title>regex_automata::dfa::onepass::InternalBuilder::compile_transition (8 samples, 1.31%)</title><rect x="70.9150%" y="837" width="1.3072%" height="15" fill="rgb(230,62,50)" fg:x="434" fg:w="8"/><text x="71.1650%" y="847.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.16%)</title><rect x="72.0588%" y="821" width="0.1634%" height="15" fill="rgb(245,132,34)" fg:x="441" fg:w="1"/><text x="72.3088%" y="831.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add_union (1 samples, 0.16%)</title><rect x="72.2222%" y="629" width="0.1634%" height="15" fill="rgb(247,38,8)" fg:x="442" fg:w="1"/><text x="72.4722%" y="639.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add (1 samples, 0.16%)</title><rect x="72.2222%" y="613" width="0.1634%" height="15" fill="rgb(253,91,29)" fg:x="442" fg:w="1"/><text x="72.4722%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.16%)</title><rect x="72.2222%" y="597" width="0.1634%" height="15" fill="rgb(241,229,15)" fg:x="442" fg:w="1"/><text x="72.4722%" y="607.50"></text></g><g><title>core::ptr::write (1 samples, 0.16%)</title><rect x="72.2222%" y="581" width="0.1634%" height="15" fill="rgb(209,143,44)" fg:x="442" fg:w="1"/><text x="72.4722%" y="591.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add_sparse (1 samples, 0.16%)</title><rect x="72.3856%" y="629" width="0.1634%" height="15" fill="rgb(233,153,44)" fg:x="443" fg:w="1"/><text x="72.6356%" y="639.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add (1 samples, 0.16%)</title><rect x="72.3856%" y="613" width="0.1634%" height="15" fill="rgb(253,91,29)" fg:x="443" fg:w="1"/><text x="72.6356%" y="623.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add_range (1 samples, 0.16%)</title><rect x="72.5490%" y="629" width="0.1634%" height="15" fill="rgb(245,83,34)" fg:x="444" fg:w="1"/><text x="72.7990%" y="639.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add (1 samples, 0.16%)</title><rect x="72.5490%" y="613" width="0.1634%" height="15" fill="rgb(253,91,29)" fg:x="444" fg:w="1"/><text x="72.7990%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.16%)</title><rect x="72.5490%" y="597" width="0.1634%" height="15" fill="rgb(241,229,15)" fg:x="444" fg:w="1"/><text x="72.7990%" y="607.50"></text></g><g><title>core::ptr::write (1 samples, 0.16%)</title><rect x="72.5490%" y="581" width="0.1634%" height="15" fill="rgb(209,143,44)" fg:x="444" fg:w="1"/><text x="72.7990%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="72.5490%" y="565" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="444" fg:w="1"/><text x="72.7990%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="72.5490%" y="549" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="444" fg:w="1"/><text x="72.7990%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="72.5490%" y="533" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="444" fg:w="1"/><text x="72.7990%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="72.5490%" y="517" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="444" fg:w="1"/><text x="72.7990%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="72.5490%" y="501" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="444" fg:w="1"/><text x="72.7990%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="72.5490%" y="485" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="444" fg:w="1"/><text x="72.7990%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="72.5490%" y="469" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="444" fg:w="1"/><text x="72.7990%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="72.5490%" y="453" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="444" fg:w="1"/><text x="72.7990%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="72.5490%" y="437" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="444" fg:w="1"/><text x="72.7990%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_automata::nfa::thompson::nfa::Transition&gt;&gt; (1 samples, 0.16%)</title><rect x="72.7124%" y="629" width="0.1634%" height="15" fill="rgb(207,29,6)" fg:x="445" fg:w="1"/><text x="72.9624%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;regex_automata::nfa::thompson::nfa::Transition&gt;&gt; (1 samples, 0.16%)</title><rect x="72.7124%" y="613" width="0.1634%" height="15" fill="rgb(228,146,49)" fg:x="445" fg:w="1"/><text x="72.9624%" y="623.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.16%)</title><rect x="72.7124%" y="597" width="0.1634%" height="15" fill="rgb(213,128,22)" fg:x="445" fg:w="1"/><text x="72.9624%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.16%)</title><rect x="72.7124%" y="581" width="0.1634%" height="15" fill="rgb(238,77,31)" fg:x="445" fg:w="1"/><text x="72.9624%" y="591.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.16%)</title><rect x="72.7124%" y="565" width="0.1634%" height="15" fill="rgb(227,15,28)" fg:x="445" fg:w="1"/><text x="72.9624%" y="575.50"></text></g><g><title>__GI___libc_free (1 samples, 0.16%)</title><rect x="72.7124%" y="549" width="0.1634%" height="15" fill="rgb(247,8,17)" fg:x="445" fg:w="1"/><text x="72.9624%" y="559.50"></text></g><g><title>arena_for_chunk (1 samples, 0.16%)</title><rect x="72.7124%" y="533" width="0.1634%" height="15" fill="rgb(234,26,42)" fg:x="445" fg:w="1"/><text x="72.9624%" y="543.50"></text></g><g><title>arena_for_chunk (1 samples, 0.16%)</title><rect x="72.7124%" y="517" width="0.1634%" height="15" fill="rgb(234,26,42)" fg:x="445" fg:w="1"/><text x="72.9624%" y="527.50"></text></g><g><title>heap_for_ptr (1 samples, 0.16%)</title><rect x="72.7124%" y="501" width="0.1634%" height="15" fill="rgb(232,140,25)" fg:x="445" fg:w="1"/><text x="72.9624%" y="511.50"></text></g><g><title>core::ptr::write (1 samples, 0.16%)</title><rect x="72.8758%" y="613" width="0.1634%" height="15" fill="rgb(209,143,44)" fg:x="446" fg:w="1"/><text x="73.1258%" y="623.50"></text></g><g><title>core::cmp::max (1 samples, 0.16%)</title><rect x="73.0392%" y="581" width="0.1634%" height="15" fill="rgb(230,43,15)" fg:x="447" fg:w="1"/><text x="73.2892%" y="591.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.16%)</title><rect x="73.0392%" y="565" width="0.1634%" height="15" fill="rgb(238,229,26)" fg:x="447" fg:w="1"/><text x="73.2892%" y="575.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (2 samples, 0.33%)</title><rect x="73.2026%" y="565" width="0.3268%" height="15" fill="rgb(206,149,53)" fg:x="448" fg:w="2"/><text x="73.4526%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.65%)</title><rect x="73.0392%" y="613" width="0.6536%" height="15" fill="rgb(254,103,39)" fg:x="447" fg:w="4"/><text x="73.2892%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.65%)</title><rect x="73.0392%" y="597" width="0.6536%" height="15" fill="rgb(254,53,35)" fg:x="447" fg:w="4"/><text x="73.2892%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.49%)</title><rect x="73.2026%" y="581" width="0.4902%" height="15" fill="rgb(237,133,22)" fg:x="448" fg:w="3"/><text x="73.4526%" y="591.50"></text></g><g><title>__rust_alloc (1 samples, 0.16%)</title><rect x="73.5294%" y="565" width="0.1634%" height="15" fill="rgb(243,191,43)" fg:x="450" fg:w="1"/><text x="73.7794%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6 samples, 0.98%)</title><rect x="72.8758%" y="629" width="0.9804%" height="15" fill="rgb(241,229,15)" fg:x="446" fg:w="6"/><text x="73.1258%" y="639.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::compile (13 samples, 2.12%)</title><rect x="72.2222%" y="645" width="2.1242%" height="15" fill="rgb(233,39,2)" fg:x="442" fg:w="13"/><text x="72.4722%" y="655.50">r..</text></g><g><title>regex_automata::nfa::thompson::literal_trie::State::add_match (2 samples, 0.33%)</title><rect x="74.3464%" y="629" width="0.3268%" height="15" fill="rgb(206,206,41)" fg:x="455" fg:w="2"/><text x="74.5964%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.33%)</title><rect x="74.3464%" y="613" width="0.3268%" height="15" fill="rgb(241,229,15)" fg:x="455" fg:w="2"/><text x="74.5964%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.33%)</title><rect x="74.3464%" y="597" width="0.3268%" height="15" fill="rgb(254,103,39)" fg:x="455" fg:w="2"/><text x="74.5964%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.33%)</title><rect x="74.3464%" y="581" width="0.3268%" height="15" fill="rgb(254,53,35)" fg:x="455" fg:w="2"/><text x="74.5964%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.33%)</title><rect x="74.3464%" y="565" width="0.3268%" height="15" fill="rgb(237,133,22)" fg:x="455" fg:w="2"/><text x="74.5964%" y="575.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.33%)</title><rect x="74.3464%" y="549" width="0.3268%" height="15" fill="rgb(206,112,53)" fg:x="455" fg:w="2"/><text x="74.5964%" y="559.50"></text></g><g><title>_int_malloc (2 samples, 0.33%)</title><rect x="74.3464%" y="533" width="0.3268%" height="15" fill="rgb(222,219,51)" fg:x="455" fg:w="2"/><text x="74.5964%" y="543.50"></text></g><g><title>_int_malloc (1 samples, 0.16%)</title><rect x="74.6732%" y="501" width="0.1634%" height="15" fill="rgb(222,219,51)" fg:x="457" fg:w="1"/><text x="74.9232%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.33%)</title><rect x="74.6732%" y="533" width="0.3268%" height="15" fill="rgb(237,133,22)" fg:x="457" fg:w="2"/><text x="74.9232%" y="543.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.33%)</title><rect x="74.6732%" y="517" width="0.3268%" height="15" fill="rgb(206,112,53)" fg:x="457" fg:w="2"/><text x="74.9232%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 2.94%)</title><rect x="72.2222%" y="757" width="2.9412%" height="15" fill="rgb(214,109,53)" fg:x="442" fg:w="18"/><text x="72.4722%" y="767.50">&lt;c..</text></g><g><title>core::option::Option&lt;T&gt;::map (18 samples, 2.94%)</title><rect x="72.2222%" y="741" width="2.9412%" height="15" fill="rgb(254,35,30)" fg:x="442" fg:w="18"/><text x="72.4722%" y="751.50">co..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (18 samples, 2.94%)</title><rect x="72.2222%" y="725" width="2.9412%" height="15" fill="rgb(226,169,23)" fg:x="442" fg:w="18"/><text x="72.4722%" y="735.50">co..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (18 samples, 2.94%)</title><rect x="72.2222%" y="709" width="2.9412%" height="15" fill="rgb(205,130,14)" fg:x="442" fg:w="18"/><text x="72.4722%" y="719.50">re..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (18 samples, 2.94%)</title><rect x="72.2222%" y="693" width="2.9412%" height="15" fill="rgb(235,200,16)" fg:x="442" fg:w="18"/><text x="72.4722%" y="703.50">re..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (18 samples, 2.94%)</title><rect x="72.2222%" y="677" width="2.9412%" height="15" fill="rgb(213,34,18)" fg:x="442" fg:w="18"/><text x="72.4722%" y="687.50">re..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (18 samples, 2.94%)</title><rect x="72.2222%" y="661" width="2.9412%" height="15" fill="rgb(253,35,22)" fg:x="442" fg:w="18"/><text x="72.4722%" y="671.50">re..</text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::add (5 samples, 0.82%)</title><rect x="74.3464%" y="645" width="0.8170%" height="15" fill="rgb(247,201,32)" fg:x="455" fg:w="5"/><text x="74.5964%" y="655.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::get_or_add_state (3 samples, 0.49%)</title><rect x="74.6732%" y="629" width="0.4902%" height="15" fill="rgb(249,22,31)" fg:x="457" fg:w="3"/><text x="74.9232%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (3 samples, 0.49%)</title><rect x="74.6732%" y="613" width="0.4902%" height="15" fill="rgb(222,129,7)" fg:x="457" fg:w="3"/><text x="74.9232%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.49%)</title><rect x="74.6732%" y="597" width="0.4902%" height="15" fill="rgb(212,159,3)" fg:x="457" fg:w="3"/><text x="74.9232%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.49%)</title><rect x="74.6732%" y="581" width="0.4902%" height="15" fill="rgb(231,142,39)" fg:x="457" fg:w="3"/><text x="74.9232%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.49%)</title><rect x="74.6732%" y="565" width="0.4902%" height="15" fill="rgb(249,2,22)" fg:x="457" fg:w="3"/><text x="74.9232%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.49%)</title><rect x="74.6732%" y="549" width="0.4902%" height="15" fill="rgb(254,53,35)" fg:x="457" fg:w="3"/><text x="74.9232%" y="559.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.16%)</title><rect x="75.0000%" y="533" width="0.1634%" height="15" fill="rgb(245,132,34)" fg:x="459" fg:w="1"/><text x="75.2500%" y="543.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::add_empty (1 samples, 0.16%)</title><rect x="75.1634%" y="629" width="0.1634%" height="15" fill="rgb(245,57,0)" fg:x="460" fg:w="1"/><text x="75.4134%" y="639.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add_empty (1 samples, 0.16%)</title><rect x="75.1634%" y="613" width="0.1634%" height="15" fill="rgb(233,49,21)" fg:x="460" fg:w="1"/><text x="75.4134%" y="623.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add (1 samples, 0.16%)</title><rect x="75.1634%" y="597" width="0.1634%" height="15" fill="rgb(253,91,29)" fg:x="460" fg:w="1"/><text x="75.4134%" y="607.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_bounded (2 samples, 0.33%)</title><rect x="75.1634%" y="677" width="0.3268%" height="15" fill="rgb(214,135,45)" fg:x="460" fg:w="2"/><text x="75.4134%" y="687.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (2 samples, 0.33%)</title><rect x="75.1634%" y="661" width="0.3268%" height="15" fill="rgb(213,34,18)" fg:x="460" fg:w="2"/><text x="75.4134%" y="671.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class (2 samples, 0.33%)</title><rect x="75.1634%" y="645" width="0.3268%" height="15" fill="rgb(246,38,12)" fg:x="460" fg:w="2"/><text x="75.4134%" y="655.50"></text></g><g><title>regex_automata::util::primitives::&lt;impl core::ops::index::Index&lt;regex_automata::util::primitives::StateID&gt; for alloc::vec::Vec&lt;T&gt;&gt;::index (1 samples, 0.16%)</title><rect x="75.4902%" y="629" width="0.1634%" height="15" fill="rgb(228,13,3)" fg:x="462" fg:w="1"/><text x="75.7402%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.16%)</title><rect x="75.4902%" y="613" width="0.1634%" height="15" fill="rgb(215,149,39)" fg:x="462" fg:w="1"/><text x="75.7402%" y="623.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.16%)</title><rect x="75.4902%" y="597" width="0.1634%" height="15" fill="rgb(250,51,46)" fg:x="462" fg:w="1"/><text x="75.7402%" y="607.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.16%)</title><rect x="75.4902%" y="581" width="0.1634%" height="15" fill="rgb(254,116,45)" fg:x="462" fg:w="1"/><text x="75.7402%" y="591.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add_union (1 samples, 0.16%)</title><rect x="75.6536%" y="629" width="0.1634%" height="15" fill="rgb(247,38,8)" fg:x="463" fg:w="1"/><text x="75.9036%" y="639.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add (1 samples, 0.16%)</title><rect x="75.6536%" y="613" width="0.1634%" height="15" fill="rgb(253,91,29)" fg:x="463" fg:w="1"/><text x="75.9036%" y="623.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add_sparse (1 samples, 0.16%)</title><rect x="75.8170%" y="629" width="0.1634%" height="15" fill="rgb(233,153,44)" fg:x="464" fg:w="1"/><text x="76.0670%" y="639.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add (1 samples, 0.16%)</title><rect x="75.8170%" y="613" width="0.1634%" height="15" fill="rgb(253,91,29)" fg:x="464" fg:w="1"/><text x="76.0670%" y="623.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add_range (1 samples, 0.16%)</title><rect x="75.9804%" y="629" width="0.1634%" height="15" fill="rgb(245,83,34)" fg:x="465" fg:w="1"/><text x="76.2304%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.16%)</title><rect x="76.1438%" y="613" width="0.1634%" height="15" fill="rgb(230,126,2)" fg:x="466" fg:w="1"/><text x="76.3938%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.16%)</title><rect x="76.1438%" y="597" width="0.1634%" height="15" fill="rgb(220,216,49)" fg:x="466" fg:w="1"/><text x="76.3938%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.16%)</title><rect x="76.3072%" y="597" width="0.1634%" height="15" fill="rgb(254,53,35)" fg:x="467" fg:w="1"/><text x="76.5572%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.16%)</title><rect x="76.3072%" y="581" width="0.1634%" height="15" fill="rgb(237,133,22)" fg:x="467" fg:w="1"/><text x="76.5572%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.49%)</title><rect x="76.1438%" y="629" width="0.4902%" height="15" fill="rgb(241,229,15)" fg:x="466" fg:w="3"/><text x="76.3938%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.33%)</title><rect x="76.3072%" y="613" width="0.3268%" height="15" fill="rgb(254,103,39)" fg:x="467" fg:w="2"/><text x="76.5572%" y="623.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.33%)</title><rect x="76.6340%" y="629" width="0.3268%" height="15" fill="rgb(236,210,2)" fg:x="469" fg:w="2"/><text x="76.8840%" y="639.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::compile (14 samples, 2.29%)</title><rect x="75.4902%" y="645" width="2.2876%" height="15" fill="rgb(233,39,2)" fg:x="462" fg:w="14"/><text x="75.7402%" y="655.50">r..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.16%)</title><rect x="77.7778%" y="549" width="0.1634%" height="15" fill="rgb(206,149,53)" fg:x="476" fg:w="1"/><text x="78.0278%" y="559.50"></text></g><g><title>__rdl_alloc (1 samples, 0.16%)</title><rect x="77.9412%" y="549" width="0.1634%" height="15" fill="rgb(241,201,43)" fg:x="477" fg:w="1"/><text x="78.1912%" y="559.50"></text></g><g><title>checked_request2size (1 samples, 0.16%)</title><rect x="78.1046%" y="533" width="0.1634%" height="15" fill="rgb(236,198,42)" fg:x="478" fg:w="1"/><text x="78.3546%" y="543.50"></text></g><g><title>_int_malloc (3 samples, 0.49%)</title><rect x="78.2680%" y="533" width="0.4902%" height="15" fill="rgb(222,219,51)" fg:x="479" fg:w="3"/><text x="78.5180%" y="543.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::State::add_match (7 samples, 1.14%)</title><rect x="77.7778%" y="629" width="1.1438%" height="15" fill="rgb(206,206,41)" fg:x="476" fg:w="7"/><text x="78.0278%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (7 samples, 1.14%)</title><rect x="77.7778%" y="613" width="1.1438%" height="15" fill="rgb(241,229,15)" fg:x="476" fg:w="7"/><text x="78.0278%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (7 samples, 1.14%)</title><rect x="77.7778%" y="597" width="1.1438%" height="15" fill="rgb(254,103,39)" fg:x="476" fg:w="7"/><text x="78.0278%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 1.14%)</title><rect x="77.7778%" y="581" width="1.1438%" height="15" fill="rgb(254,53,35)" fg:x="476" fg:w="7"/><text x="78.0278%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 1.14%)</title><rect x="77.7778%" y="565" width="1.1438%" height="15" fill="rgb(237,133,22)" fg:x="476" fg:w="7"/><text x="78.0278%" y="575.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.82%)</title><rect x="78.1046%" y="549" width="0.8170%" height="15" fill="rgb(206,112,53)" fg:x="478" fg:w="5"/><text x="78.3546%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.16%)</title><rect x="78.9216%" y="613" width="0.1634%" height="15" fill="rgb(241,229,15)" fg:x="483" fg:w="1"/><text x="79.1716%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.16%)</title><rect x="78.9216%" y="597" width="0.1634%" height="15" fill="rgb(254,103,39)" fg:x="483" fg:w="1"/><text x="79.1716%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.16%)</title><rect x="78.9216%" y="581" width="0.1634%" height="15" fill="rgb(254,53,35)" fg:x="483" fg:w="1"/><text x="79.1716%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.16%)</title><rect x="78.9216%" y="565" width="0.1634%" height="15" fill="rgb(237,133,22)" fg:x="483" fg:w="1"/><text x="79.1716%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.16%)</title><rect x="78.9216%" y="549" width="0.1634%" height="15" fill="rgb(237,156,49)" fg:x="483" fg:w="1"/><text x="79.1716%" y="559.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.16%)</title><rect x="78.9216%" y="533" width="0.1634%" height="15" fill="rgb(214,150,36)" fg:x="483" fg:w="1"/><text x="79.1716%" y="543.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.16%)</title><rect x="78.9216%" y="517" width="0.1634%" height="15" fill="rgb(254,47,34)" fg:x="483" fg:w="1"/><text x="79.1716%" y="527.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.16%)</title><rect x="78.9216%" y="501" width="0.1634%" height="15" fill="rgb(254,73,4)" fg:x="483" fg:w="1"/><text x="79.1716%" y="511.50"></text></g><g><title>_int_realloc (1 samples, 0.16%)</title><rect x="78.9216%" y="485" width="0.1634%" height="15" fill="rgb(231,75,41)" fg:x="483" fg:w="1"/><text x="79.1716%" y="495.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.16%)</title><rect x="78.9216%" y="469" width="0.1634%" height="15" fill="rgb(217,126,36)" fg:x="483" fg:w="1"/><text x="79.1716%" y="479.50"></text></g><g><title>_int_malloc (1 samples, 0.16%)</title><rect x="79.0850%" y="501" width="0.1634%" height="15" fill="rgb(222,219,51)" fg:x="484" fg:w="1"/><text x="79.3350%" y="511.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::add (10 samples, 1.63%)</title><rect x="77.7778%" y="645" width="1.6340%" height="15" fill="rgb(247,201,32)" fg:x="476" fg:w="10"/><text x="78.0278%" y="655.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::get_or_add_state (3 samples, 0.49%)</title><rect x="78.9216%" y="629" width="0.4902%" height="15" fill="rgb(249,22,31)" fg:x="483" fg:w="3"/><text x="79.1716%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (2 samples, 0.33%)</title><rect x="79.0850%" y="613" width="0.3268%" height="15" fill="rgb(222,129,7)" fg:x="484" fg:w="2"/><text x="79.3350%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.33%)</title><rect x="79.0850%" y="597" width="0.3268%" height="15" fill="rgb(212,159,3)" fg:x="484" fg:w="2"/><text x="79.3350%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.33%)</title><rect x="79.0850%" y="581" width="0.3268%" height="15" fill="rgb(231,142,39)" fg:x="484" fg:w="2"/><text x="79.3350%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.33%)</title><rect x="79.0850%" y="565" width="0.3268%" height="15" fill="rgb(249,2,22)" fg:x="484" fg:w="2"/><text x="79.3350%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.33%)</title><rect x="79.0850%" y="549" width="0.3268%" height="15" fill="rgb(254,53,35)" fg:x="484" fg:w="2"/><text x="79.3350%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.33%)</title><rect x="79.0850%" y="533" width="0.3268%" height="15" fill="rgb(237,133,22)" fg:x="484" fg:w="2"/><text x="79.3350%" y="543.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.33%)</title><rect x="79.0850%" y="517" width="0.3268%" height="15" fill="rgb(206,112,53)" fg:x="484" fg:w="2"/><text x="79.3350%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_automata::nfa::thompson::literal_trie::Transition&gt;&gt; (3 samples, 0.49%)</title><rect x="79.4118%" y="565" width="0.4902%" height="15" fill="rgb(242,32,21)" fg:x="486" fg:w="3"/><text x="79.6618%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;regex_automata::nfa::thompson::literal_trie::Transition&gt;&gt; (3 samples, 0.49%)</title><rect x="79.4118%" y="549" width="0.4902%" height="15" fill="rgb(216,209,43)" fg:x="486" fg:w="3"/><text x="79.6618%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.49%)</title><rect x="79.4118%" y="533" width="0.4902%" height="15" fill="rgb(213,128,22)" fg:x="486" fg:w="3"/><text x="79.6618%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.49%)</title><rect x="79.4118%" y="517" width="0.4902%" height="15" fill="rgb(238,77,31)" fg:x="486" fg:w="3"/><text x="79.6618%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.49%)</title><rect x="79.4118%" y="501" width="0.4902%" height="15" fill="rgb(227,15,28)" fg:x="486" fg:w="3"/><text x="79.6618%" y="511.50"></text></g><g><title>__GI___libc_free (3 samples, 0.49%)</title><rect x="79.4118%" y="485" width="0.4902%" height="15" fill="rgb(247,8,17)" fg:x="486" fg:w="3"/><text x="79.6618%" y="495.50"></text></g><g><title>_int_free (3 samples, 0.49%)</title><rect x="79.4118%" y="469" width="0.4902%" height="15" fill="rgb(221,113,48)" fg:x="486" fg:w="3"/><text x="79.6618%" y="479.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (49 samples, 8.01%)</title><rect x="72.2222%" y="917" width="8.0065%" height="15" fill="rgb(226,42,16)" fg:x="442" fg:w="49"/><text x="72.4722%" y="927.50">regex_autom..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (49 samples, 8.01%)</title><rect x="72.2222%" y="901" width="8.0065%" height="15" fill="rgb(242,129,17)" fg:x="442" fg:w="49"/><text x="72.4722%" y="911.50">regex_autom..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (49 samples, 8.01%)</title><rect x="72.2222%" y="885" width="8.0065%" height="15" fill="rgb(247,137,3)" fg:x="442" fg:w="49"/><text x="72.4722%" y="895.50">regex_autom..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (49 samples, 8.01%)</title><rect x="72.2222%" y="869" width="8.0065%" height="15" fill="rgb(214,109,53)" fg:x="442" fg:w="49"/><text x="72.4722%" y="879.50">&lt;core::iter..</text></g><g><title>core::option::Option&lt;T&gt;::map (49 samples, 8.01%)</title><rect x="72.2222%" y="853" width="8.0065%" height="15" fill="rgb(254,35,30)" fg:x="442" fg:w="49"/><text x="72.4722%" y="863.50">core::optio..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (49 samples, 8.01%)</title><rect x="72.2222%" y="837" width="8.0065%" height="15" fill="rgb(226,169,23)" fg:x="442" fg:w="49"/><text x="72.4722%" y="847.50">core::ops::..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile::{{closure}} (49 samples, 8.01%)</title><rect x="72.2222%" y="821" width="8.0065%" height="15" fill="rgb(218,216,52)" fg:x="442" fg:w="49"/><text x="72.4722%" y="831.50">regex_autom..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (49 samples, 8.01%)</title><rect x="72.2222%" y="805" width="8.0065%" height="15" fill="rgb(235,200,16)" fg:x="442" fg:w="49"/><text x="72.4722%" y="815.50">regex_autom..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (49 samples, 8.01%)</title><rect x="72.2222%" y="789" width="8.0065%" height="15" fill="rgb(213,34,18)" fg:x="442" fg:w="49"/><text x="72.4722%" y="799.50">regex_autom..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (49 samples, 8.01%)</title><rect x="72.2222%" y="773" width="8.0065%" height="15" fill="rgb(210,105,37)" fg:x="442" fg:w="49"/><text x="72.4722%" y="783.50">regex_autom..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (31 samples, 5.07%)</title><rect x="75.1634%" y="757" width="5.0654%" height="15" fill="rgb(222,94,14)" fg:x="460" fg:w="31"/><text x="75.4134%" y="767.50">&lt;core:..</text></g><g><title>core::option::Option&lt;T&gt;::map (31 samples, 5.07%)</title><rect x="75.1634%" y="741" width="5.0654%" height="15" fill="rgb(254,35,30)" fg:x="460" fg:w="31"/><text x="75.4134%" y="751.50">core::..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (31 samples, 5.07%)</title><rect x="75.1634%" y="725" width="5.0654%" height="15" fill="rgb(226,169,23)" fg:x="460" fg:w="31"/><text x="75.4134%" y="735.50">core::..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (31 samples, 5.07%)</title><rect x="75.1634%" y="709" width="5.0654%" height="15" fill="rgb(205,130,14)" fg:x="460" fg:w="31"/><text x="75.4134%" y="719.50">regex_..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (31 samples, 5.07%)</title><rect x="75.1634%" y="693" width="5.0654%" height="15" fill="rgb(235,200,16)" fg:x="460" fg:w="31"/><text x="75.4134%" y="703.50">regex_..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (29 samples, 4.74%)</title><rect x="75.4902%" y="677" width="4.7386%" height="15" fill="rgb(213,34,18)" fg:x="462" fg:w="29"/><text x="75.7402%" y="687.50">regex_..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (29 samples, 4.74%)</title><rect x="75.4902%" y="661" width="4.7386%" height="15" fill="rgb(253,35,22)" fg:x="462" fg:w="29"/><text x="75.7402%" y="671.50">regex_..</text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::literal_trie::LiteralTrie&gt; (5 samples, 0.82%)</title><rect x="79.4118%" y="645" width="0.8170%" height="15" fill="rgb(244,70,29)" fg:x="486" fg:w="5"/><text x="79.6618%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_automata::nfa::thompson::literal_trie::State&gt;&gt; (5 samples, 0.82%)</title><rect x="79.4118%" y="629" width="0.8170%" height="15" fill="rgb(227,19,7)" fg:x="486" fg:w="5"/><text x="79.6618%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.82%)</title><rect x="79.4118%" y="613" width="0.8170%" height="15" fill="rgb(249,14,2)" fg:x="486" fg:w="5"/><text x="79.6618%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;[regex_automata::nfa::thompson::literal_trie::State]&gt; (5 samples, 0.82%)</title><rect x="79.4118%" y="597" width="0.8170%" height="15" fill="rgb(241,61,51)" fg:x="486" fg:w="5"/><text x="79.6618%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::literal_trie::State&gt; (5 samples, 0.82%)</title><rect x="79.4118%" y="581" width="0.8170%" height="15" fill="rgb(245,189,53)" fg:x="486" fg:w="5"/><text x="79.6618%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt; (2 samples, 0.33%)</title><rect x="79.9020%" y="565" width="0.3268%" height="15" fill="rgb(213,102,40)" fg:x="489" fg:w="2"/><text x="80.1520%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize)&gt;&gt; (2 samples, 0.33%)</title><rect x="79.9020%" y="549" width="0.3268%" height="15" fill="rgb(243,139,46)" fg:x="489" fg:w="2"/><text x="80.1520%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.33%)</title><rect x="79.9020%" y="533" width="0.3268%" height="15" fill="rgb(213,128,22)" fg:x="489" fg:w="2"/><text x="80.1520%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.33%)</title><rect x="79.9020%" y="517" width="0.3268%" height="15" fill="rgb(238,77,31)" fg:x="489" fg:w="2"/><text x="80.1520%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.33%)</title><rect x="79.9020%" y="501" width="0.3268%" height="15" fill="rgb(227,15,28)" fg:x="489" fg:w="2"/><text x="80.1520%" y="511.50"></text></g><g><title>__GI___libc_free (2 samples, 0.33%)</title><rect x="79.9020%" y="485" width="0.3268%" height="15" fill="rgb(247,8,17)" fg:x="489" fg:w="2"/><text x="80.1520%" y="495.50"></text></g><g><title>_int_free (2 samples, 0.33%)</title><rect x="79.9020%" y="469" width="0.3268%" height="15" fill="rgb(221,113,48)" fg:x="489" fg:w="2"/><text x="80.1520%" y="479.50"></text></g><g><title>regex_automata::dfa::onepass::Transition::set_state_id (2 samples, 0.33%)</title><rect x="80.2288%" y="789" width="0.3268%" height="15" fill="rgb(215,47,0)" fg:x="491" fg:w="2"/><text x="80.4788%" y="799.50"></text></g><g><title>regex_automata::dfa::onepass::Transition::new (2 samples, 0.33%)</title><rect x="80.2288%" y="773" width="0.3268%" height="15" fill="rgb(253,131,4)" fg:x="491" fg:w="2"/><text x="80.4788%" y="783.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.16%)</title><rect x="80.5556%" y="757" width="0.1634%" height="15" fill="rgb(232,29,30)" fg:x="493" fg:w="1"/><text x="80.8056%" y="767.50"></text></g><g><title>regex_automata::dfa::onepass::InternalBuilder::shuffle_states (4 samples, 0.65%)</title><rect x="80.2288%" y="853" width="0.6536%" height="15" fill="rgb(235,45,9)" fg:x="491" fg:w="4"/><text x="80.4788%" y="863.50"></text></g><g><title>regex_automata::dfa::remapper::Remapper::remap (4 samples, 0.65%)</title><rect x="80.2288%" y="837" width="0.6536%" height="15" fill="rgb(246,37,46)" fg:x="491" fg:w="4"/><text x="80.4788%" y="847.50"></text></g><g><title>regex_automata::dfa::remapper::onepass::&lt;impl regex_automata::dfa::remapper::Remappable for regex_automata::dfa::onepass::DFA&gt;::remap (4 samples, 0.65%)</title><rect x="80.2288%" y="821" width="0.6536%" height="15" fill="rgb(220,104,28)" fg:x="491" fg:w="4"/><text x="80.4788%" y="831.50"></text></g><g><title>regex_automata::dfa::onepass::DFA::remap (4 samples, 0.65%)</title><rect x="80.2288%" y="805" width="0.6536%" height="15" fill="rgb(220,12,22)" fg:x="491" fg:w="4"/><text x="80.4788%" y="815.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.33%)</title><rect x="80.5556%" y="789" width="0.3268%" height="15" fill="rgb(246,165,53)" fg:x="493" fg:w="2"/><text x="80.8056%" y="799.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.33%)</title><rect x="80.5556%" y="773" width="0.3268%" height="15" fill="rgb(226,134,37)" fg:x="493" fg:w="2"/><text x="80.8056%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="80.8824%" y="501" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="495" fg:w="1"/><text x="81.1324%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="80.8824%" y="485" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="495" fg:w="1"/><text x="81.1324%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="80.8824%" y="469" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="495" fg:w="1"/><text x="81.1324%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="80.8824%" y="453" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="495" fg:w="1"/><text x="81.1324%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.33%)</title><rect x="80.8824%" y="581" width="0.3268%" height="15" fill="rgb(210,204,4)" fg:x="495" fg:w="2"/><text x="81.1324%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.33%)</title><rect x="80.8824%" y="565" width="0.3268%" height="15" fill="rgb(210,204,4)" fg:x="495" fg:w="2"/><text x="81.1324%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.33%)</title><rect x="80.8824%" y="549" width="0.3268%" height="15" fill="rgb(210,204,4)" fg:x="495" fg:w="2"/><text x="81.1324%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.33%)</title><rect x="80.8824%" y="533" width="0.3268%" height="15" fill="rgb(210,204,4)" fg:x="495" fg:w="2"/><text x="81.1324%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.33%)</title><rect x="80.8824%" y="517" width="0.3268%" height="15" fill="rgb(210,204,4)" fg:x="495" fg:w="2"/><text x="81.1324%" y="527.50"></text></g><g><title>__memmove_avx512_unaligned_erms (3 samples, 0.49%)</title><rect x="80.8824%" y="597" width="0.4902%" height="15" fill="rgb(217,126,36)" fg:x="495" fg:w="3"/><text x="81.1324%" y="607.50"></text></g><g><title>s4lib::data::datetime::bytes_to_regex_to_datetime (57 samples, 9.31%)</title><rect x="72.2222%" y="1205" width="9.3137%" height="15" fill="rgb(252,84,36)" fg:x="442" fg:w="57"/><text x="72.4722%" y="1215.50">s4lib::data::..</text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref (57 samples, 9.31%)</title><rect x="72.2222%" y="1189" width="9.3137%" height="15" fill="rgb(217,15,43)" fg:x="442" fg:w="57"/><text x="72.4722%" y="1199.50">&lt;s4lib::data:..</text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref::__stability (57 samples, 9.31%)</title><rect x="72.2222%" y="1173" width="9.3137%" height="15" fill="rgb(239,165,48)" fg:x="442" fg:w="57"/><text x="72.4722%" y="1183.50">&lt;s4lib::data:..</text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (57 samples, 9.31%)</title><rect x="72.2222%" y="1157" width="9.3137%" height="15" fill="rgb(235,175,8)" fg:x="442" fg:w="57"/><text x="72.4722%" y="1167.50">lazy_static::..</text></g><g><title>std::sync::once::Once::call_once (57 samples, 9.31%)</title><rect x="72.2222%" y="1141" width="9.3137%" height="15" fill="rgb(247,17,47)" fg:x="442" fg:w="57"/><text x="72.4722%" y="1151.50">std::sync::on..</text></g><g><title>std::sys_common::once::futex::Once::call (57 samples, 9.31%)</title><rect x="72.2222%" y="1125" width="9.3137%" height="15" fill="rgb(246,168,49)" fg:x="442" fg:w="57"/><text x="72.4722%" y="1135.50">std::sys_comm..</text></g><g><title>std::sync::once::Once::call_once::{{closure}} (57 samples, 9.31%)</title><rect x="72.2222%" y="1109" width="9.3137%" height="15" fill="rgb(237,63,35)" fg:x="442" fg:w="57"/><text x="72.4722%" y="1119.50">std::sync::on..</text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}} (57 samples, 9.31%)</title><rect x="72.2222%" y="1093" width="9.3137%" height="15" fill="rgb(238,7,51)" fg:x="442" fg:w="57"/><text x="72.4722%" y="1103.50">lazy_static::..</text></g><g><title>core::ops::function::FnOnce::call_once (57 samples, 9.31%)</title><rect x="72.2222%" y="1077" width="9.3137%" height="15" fill="rgb(210,80,10)" fg:x="442" fg:w="57"/><text x="72.4722%" y="1087.50">core::ops::fu..</text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref::__static_ref_initialize (57 samples, 9.31%)</title><rect x="72.2222%" y="1061" width="9.3137%" height="15" fill="rgb(205,24,29)" fg:x="442" fg:w="57"/><text x="72.4722%" y="1071.50">&lt;s4lib::data:..</text></g><g><title>regex::regex::bytes::Regex::new (57 samples, 9.31%)</title><rect x="72.2222%" y="1045" width="9.3137%" height="15" fill="rgb(246,224,25)" fg:x="442" fg:w="57"/><text x="72.4722%" y="1055.50">regex::regex:..</text></g><g><title>regex::builders::bytes::RegexBuilder::build (57 samples, 9.31%)</title><rect x="72.2222%" y="1029" width="9.3137%" height="15" fill="rgb(236,76,51)" fg:x="442" fg:w="57"/><text x="72.4722%" y="1039.50">regex::builde..</text></g><g><title>regex::builders::Builder::build_one_bytes (57 samples, 9.31%)</title><rect x="72.2222%" y="1013" width="9.3137%" height="15" fill="rgb(233,102,7)" fg:x="442" fg:w="57"/><text x="72.4722%" y="1023.50">regex::builde..</text></g><g><title>regex_automata::meta::regex::Builder::build (57 samples, 9.31%)</title><rect x="72.2222%" y="997" width="9.3137%" height="15" fill="rgb(212,33,22)" fg:x="442" fg:w="57"/><text x="72.4722%" y="1007.50">regex_automat..</text></g><g><title>regex_automata::meta::regex::Builder::build_many (57 samples, 9.31%)</title><rect x="72.2222%" y="981" width="9.3137%" height="15" fill="rgb(236,25,32)" fg:x="442" fg:w="57"/><text x="72.4722%" y="991.50">regex_automat..</text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (57 samples, 9.31%)</title><rect x="72.2222%" y="965" width="9.3137%" height="15" fill="rgb(250,142,30)" fg:x="442" fg:w="57"/><text x="72.4722%" y="975.50">regex_automat..</text></g><g><title>regex_automata::meta::strategy::new (57 samples, 9.31%)</title><rect x="72.2222%" y="949" width="9.3137%" height="15" fill="rgb(243,171,22)" fg:x="442" fg:w="57"/><text x="72.4722%" y="959.50">regex_automat..</text></g><g><title>regex_automata::meta::strategy::Core::new (57 samples, 9.31%)</title><rect x="72.2222%" y="933" width="9.3137%" height="15" fill="rgb(222,69,27)" fg:x="442" fg:w="57"/><text x="72.4722%" y="943.50">regex_automat..</text></g><g><title>regex_automata::meta::wrappers::OnePass::new (8 samples, 1.31%)</title><rect x="80.2288%" y="917" width="1.3072%" height="15" fill="rgb(235,224,47)" fg:x="491" fg:w="8"/><text x="80.4788%" y="927.50"></text></g><g><title>regex_automata::meta::wrappers::OnePassEngine::new (8 samples, 1.31%)</title><rect x="80.2288%" y="901" width="1.3072%" height="15" fill="rgb(247,185,25)" fg:x="491" fg:w="8"/><text x="80.4788%" y="911.50"></text></g><g><title>regex_automata::dfa::onepass::Builder::build_from_nfa (8 samples, 1.31%)</title><rect x="80.2288%" y="885" width="1.3072%" height="15" fill="rgb(209,62,19)" fg:x="491" fg:w="8"/><text x="80.4788%" y="895.50"></text></g><g><title>regex_automata::dfa::onepass::InternalBuilder::build (8 samples, 1.31%)</title><rect x="80.2288%" y="869" width="1.3072%" height="15" fill="rgb(206,107,24)" fg:x="491" fg:w="8"/><text x="80.4788%" y="879.50"></text></g><g><title>regex_automata::dfa::onepass::InternalBuilder::compile_transition (4 samples, 0.65%)</title><rect x="80.8824%" y="853" width="0.6536%" height="15" fill="rgb(230,62,50)" fg:x="495" fg:w="4"/><text x="81.1324%" y="863.50"></text></g><g><title>regex_automata::dfa::onepass::InternalBuilder::add_dfa_state_for_nfa_state (4 samples, 0.65%)</title><rect x="80.8824%" y="837" width="0.6536%" height="15" fill="rgb(226,222,5)" fg:x="495" fg:w="4"/><text x="81.1324%" y="847.50"></text></g><g><title>regex_automata::dfa::onepass::InternalBuilder::add_empty_state (4 samples, 0.65%)</title><rect x="80.8824%" y="821" width="0.6536%" height="15" fill="rgb(249,155,54)" fg:x="495" fg:w="4"/><text x="81.1324%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (4 samples, 0.65%)</title><rect x="80.8824%" y="805" width="0.6536%" height="15" fill="rgb(205,186,49)" fg:x="495" fg:w="4"/><text x="81.1324%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.65%)</title><rect x="80.8824%" y="789" width="0.6536%" height="15" fill="rgb(232,211,42)" fg:x="495" fg:w="4"/><text x="81.1324%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (4 samples, 0.65%)</title><rect x="80.8824%" y="773" width="0.6536%" height="15" fill="rgb(214,146,48)" fg:x="495" fg:w="4"/><text x="81.1324%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.65%)</title><rect x="80.8824%" y="757" width="0.6536%" height="15" fill="rgb(212,159,3)" fg:x="495" fg:w="4"/><text x="81.1324%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.65%)</title><rect x="80.8824%" y="741" width="0.6536%" height="15" fill="rgb(231,142,39)" fg:x="495" fg:w="4"/><text x="81.1324%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.65%)</title><rect x="80.8824%" y="725" width="0.6536%" height="15" fill="rgb(249,2,22)" fg:x="495" fg:w="4"/><text x="81.1324%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.65%)</title><rect x="80.8824%" y="709" width="0.6536%" height="15" fill="rgb(254,53,35)" fg:x="495" fg:w="4"/><text x="81.1324%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.65%)</title><rect x="80.8824%" y="693" width="0.6536%" height="15" fill="rgb(237,133,22)" fg:x="495" fg:w="4"/><text x="81.1324%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.65%)</title><rect x="80.8824%" y="677" width="0.6536%" height="15" fill="rgb(237,156,49)" fg:x="495" fg:w="4"/><text x="81.1324%" y="687.50"></text></g><g><title>alloc::alloc::Global::grow_impl (4 samples, 0.65%)</title><rect x="80.8824%" y="661" width="0.6536%" height="15" fill="rgb(214,150,36)" fg:x="495" fg:w="4"/><text x="81.1324%" y="671.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 0.65%)</title><rect x="80.8824%" y="645" width="0.6536%" height="15" fill="rgb(254,47,34)" fg:x="495" fg:w="4"/><text x="81.1324%" y="655.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.65%)</title><rect x="80.8824%" y="629" width="0.6536%" height="15" fill="rgb(254,73,4)" fg:x="495" fg:w="4"/><text x="81.1324%" y="639.50"></text></g><g><title>_int_realloc (4 samples, 0.65%)</title><rect x="80.8824%" y="613" width="0.6536%" height="15" fill="rgb(231,75,41)" fg:x="495" fg:w="4"/><text x="81.1324%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="81.3725%" y="597" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="498" fg:w="1"/><text x="81.6225%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="81.3725%" y="581" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="498" fg:w="1"/><text x="81.6225%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="81.3725%" y="565" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="498" fg:w="1"/><text x="81.6225%" y="575.50"></text></g><g><title>regex_syntax::hir::literal::Seq::union (1 samples, 0.16%)</title><rect x="81.5359%" y="757" width="0.1634%" height="15" fill="rgb(226,117,51)" fg:x="499" fg:w="1"/><text x="81.7859%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.16%)</title><rect x="81.5359%" y="741" width="0.1634%" height="15" fill="rgb(205,186,49)" fg:x="499" fg:w="1"/><text x="81.7859%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.16%)</title><rect x="81.5359%" y="725" width="0.1634%" height="15" fill="rgb(232,211,42)" fg:x="499" fg:w="1"/><text x="81.7859%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.16%)</title><rect x="81.5359%" y="709" width="0.1634%" height="15" fill="rgb(214,146,48)" fg:x="499" fg:w="1"/><text x="81.7859%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.16%)</title><rect x="81.5359%" y="693" width="0.1634%" height="15" fill="rgb(245,181,4)" fg:x="499" fg:w="1"/><text x="81.7859%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.16%)</title><rect x="81.5359%" y="677" width="0.1634%" height="15" fill="rgb(214,12,39)" fg:x="499" fg:w="1"/><text x="81.7859%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.16%)</title><rect x="81.5359%" y="661" width="0.1634%" height="15" fill="rgb(245,36,31)" fg:x="499" fg:w="1"/><text x="81.7859%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::{{closure}} (1 samples, 0.16%)</title><rect x="81.5359%" y="645" width="0.1634%" height="15" fill="rgb(221,227,48)" fg:x="499" fg:w="1"/><text x="81.7859%" y="655.50"></text></g><g><title>core::ptr::write (1 samples, 0.16%)</title><rect x="81.5359%" y="629" width="0.1634%" height="15" fill="rgb(209,143,44)" fg:x="499" fg:w="1"/><text x="81.7859%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::hir::literal::PreferenceTrie&gt; (1 samples, 0.16%)</title><rect x="81.6993%" y="709" width="0.1634%" height="15" fill="rgb(243,13,0)" fg:x="500" fg:w="1"/><text x="81.9493%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_syntax::hir::literal::State&gt;&gt; (1 samples, 0.16%)</title><rect x="81.6993%" y="693" width="0.1634%" height="15" fill="rgb(211,187,6)" fg:x="500" fg:w="1"/><text x="81.9493%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.16%)</title><rect x="81.6993%" y="677" width="0.1634%" height="15" fill="rgb(249,14,2)" fg:x="500" fg:w="1"/><text x="81.9493%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;[regex_syntax::hir::literal::State]&gt; (1 samples, 0.16%)</title><rect x="81.6993%" y="661" width="0.1634%" height="15" fill="rgb(239,118,26)" fg:x="500" fg:w="1"/><text x="81.9493%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::hir::literal::State&gt; (1 samples, 0.16%)</title><rect x="81.6993%" y="645" width="0.1634%" height="15" fill="rgb(242,57,11)" fg:x="500" fg:w="1"/><text x="81.9493%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(u8,usize)&gt;&gt; (1 samples, 0.16%)</title><rect x="81.6993%" y="629" width="0.1634%" height="15" fill="rgb(237,59,10)" fg:x="500" fg:w="1"/><text x="81.9493%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(u8,usize)&gt;&gt; (1 samples, 0.16%)</title><rect x="81.6993%" y="613" width="0.1634%" height="15" fill="rgb(231,76,38)" fg:x="500" fg:w="1"/><text x="81.9493%" y="623.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.16%)</title><rect x="81.6993%" y="597" width="0.1634%" height="15" fill="rgb(213,128,22)" fg:x="500" fg:w="1"/><text x="81.9493%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.16%)</title><rect x="81.6993%" y="581" width="0.1634%" height="15" fill="rgb(238,77,31)" fg:x="500" fg:w="1"/><text x="81.9493%" y="591.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.16%)</title><rect x="81.6993%" y="565" width="0.1634%" height="15" fill="rgb(227,15,28)" fg:x="500" fg:w="1"/><text x="81.9493%" y="575.50"></text></g><g><title>__GI___libc_free (1 samples, 0.16%)</title><rect x="81.6993%" y="549" width="0.1634%" height="15" fill="rgb(247,8,17)" fg:x="500" fg:w="1"/><text x="81.9493%" y="559.50"></text></g><g><title>regex_syntax::hir::literal::PreferenceTrie::create_state (2 samples, 0.33%)</title><rect x="81.8627%" y="645" width="0.3268%" height="15" fill="rgb(224,202,5)" fg:x="501" fg:w="2"/><text x="82.1127%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.33%)</title><rect x="81.8627%" y="629" width="0.3268%" height="15" fill="rgb(241,229,15)" fg:x="501" fg:w="2"/><text x="82.1127%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.33%)</title><rect x="81.8627%" y="613" width="0.3268%" height="15" fill="rgb(254,103,39)" fg:x="501" fg:w="2"/><text x="82.1127%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.33%)</title><rect x="81.8627%" y="597" width="0.3268%" height="15" fill="rgb(254,53,35)" fg:x="501" fg:w="2"/><text x="82.1127%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.33%)</title><rect x="81.8627%" y="581" width="0.3268%" height="15" fill="rgb(237,133,22)" fg:x="501" fg:w="2"/><text x="82.1127%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.33%)</title><rect x="81.8627%" y="565" width="0.3268%" height="15" fill="rgb(237,156,49)" fg:x="501" fg:w="2"/><text x="82.1127%" y="575.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.33%)</title><rect x="81.8627%" y="549" width="0.3268%" height="15" fill="rgb(214,150,36)" fg:x="501" fg:w="2"/><text x="82.1127%" y="559.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.33%)</title><rect x="81.8627%" y="533" width="0.3268%" height="15" fill="rgb(254,47,34)" fg:x="501" fg:w="2"/><text x="82.1127%" y="543.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.33%)</title><rect x="81.8627%" y="517" width="0.3268%" height="15" fill="rgb(254,73,4)" fg:x="501" fg:w="2"/><text x="82.1127%" y="527.50"></text></g><g><title>_int_realloc (2 samples, 0.33%)</title><rect x="81.8627%" y="501" width="0.3268%" height="15" fill="rgb(231,75,41)" fg:x="501" fg:w="2"/><text x="82.1127%" y="511.50"></text></g><g><title>_int_malloc (2 samples, 0.33%)</title><rect x="81.8627%" y="485" width="0.3268%" height="15" fill="rgb(222,219,51)" fg:x="501" fg:w="2"/><text x="82.1127%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by_key (1 samples, 0.16%)</title><rect x="82.1895%" y="645" width="0.1634%" height="15" fill="rgb(219,159,10)" fg:x="503" fg:w="1"/><text x="82.4395%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.16%)</title><rect x="82.1895%" y="629" width="0.1634%" height="15" fill="rgb(252,87,43)" fg:x="503" fg:w="1"/><text x="82.4395%" y="639.50"></text></g><g><title>__rdl_alloc (1 samples, 0.16%)</title><rect x="82.3529%" y="549" width="0.1634%" height="15" fill="rgb(241,201,43)" fg:x="504" fg:w="1"/><text x="82.6029%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.49%)</title><rect x="82.3529%" y="565" width="0.4902%" height="15" fill="rgb(237,133,22)" fg:x="504" fg:w="3"/><text x="82.6029%" y="575.50"></text></g><g><title>regex_syntax::hir::literal::Seq::optimize_for_prefix_by_preference (8 samples, 1.31%)</title><rect x="81.6993%" y="757" width="1.3072%" height="15" fill="rgb(206,179,34)" fg:x="500" fg:w="8"/><text x="81.9493%" y="767.50"></text></g><g><title>regex_syntax::hir::literal::Seq::optimize_by_preference (8 samples, 1.31%)</title><rect x="81.6993%" y="741" width="1.3072%" height="15" fill="rgb(208,121,1)" fg:x="500" fg:w="8"/><text x="81.9493%" y="751.50"></text></g><g><title>regex_syntax::hir::literal::PreferenceTrie::minimize (8 samples, 1.31%)</title><rect x="81.6993%" y="725" width="1.3072%" height="15" fill="rgb(240,28,15)" fg:x="500" fg:w="8"/><text x="81.9493%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut (7 samples, 1.14%)</title><rect x="81.8627%" y="709" width="1.1438%" height="15" fill="rgb(208,159,28)" fg:x="501" fg:w="7"/><text x="82.1127%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut::process_loop (7 samples, 1.14%)</title><rect x="81.8627%" y="693" width="1.1438%" height="15" fill="rgb(227,228,3)" fg:x="501" fg:w="7"/><text x="82.1127%" y="703.50"></text></g><g><title>regex_syntax::hir::literal::PreferenceTrie::minimize::{{closure}} (7 samples, 1.14%)</title><rect x="81.8627%" y="677" width="1.1438%" height="15" fill="rgb(234,110,33)" fg:x="501" fg:w="7"/><text x="82.1127%" y="687.50"></text></g><g><title>regex_syntax::hir::literal::PreferenceTrie::insert (7 samples, 1.14%)</title><rect x="81.8627%" y="661" width="1.1438%" height="15" fill="rgb(208,38,45)" fg:x="501" fg:w="7"/><text x="82.1127%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (4 samples, 0.65%)</title><rect x="82.3529%" y="645" width="0.6536%" height="15" fill="rgb(222,129,7)" fg:x="504" fg:w="4"/><text x="82.6029%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.65%)</title><rect x="82.3529%" y="629" width="0.6536%" height="15" fill="rgb(212,159,3)" fg:x="504" fg:w="4"/><text x="82.6029%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.65%)</title><rect x="82.3529%" y="613" width="0.6536%" height="15" fill="rgb(231,142,39)" fg:x="504" fg:w="4"/><text x="82.6029%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.65%)</title><rect x="82.3529%" y="597" width="0.6536%" height="15" fill="rgb(249,2,22)" fg:x="504" fg:w="4"/><text x="82.6029%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.65%)</title><rect x="82.3529%" y="581" width="0.6536%" height="15" fill="rgb(254,53,35)" fg:x="504" fg:w="4"/><text x="82.6029%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.16%)</title><rect x="82.8431%" y="565" width="0.1634%" height="15" fill="rgb(253,185,17)" fg:x="507" fg:w="1"/><text x="83.0931%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (1 samples, 0.16%)</title><rect x="83.0065%" y="613" width="0.1634%" height="15" fill="rgb(220,44,45)" fg:x="508" fg:w="1"/><text x="83.2565%" y="623.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::ne (1 samples, 0.16%)</title><rect x="83.0065%" y="597" width="0.1634%" height="15" fill="rgb(241,62,31)" fg:x="508" fg:w="1"/><text x="83.2565%" y="607.50"></text></g><g><title>core::slice::cmp::SlicePartialEq::not_equal (1 samples, 0.16%)</title><rect x="83.0065%" y="581" width="0.1634%" height="15" fill="rgb(226,12,20)" fg:x="508" fg:w="1"/><text x="83.2565%" y="591.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.16%)</title><rect x="83.0065%" y="565" width="0.1634%" height="15" fill="rgb(221,225,42)" fg:x="508" fg:w="1"/><text x="83.2565%" y="575.50"></text></g><g><title>__memcmp_evex_movbe (1 samples, 0.16%)</title><rect x="83.0065%" y="549" width="0.1634%" height="15" fill="rgb(253,103,40)" fg:x="508" fg:w="1"/><text x="83.2565%" y="559.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::union (2 samples, 0.33%)</title><rect x="83.0065%" y="693" width="0.3268%" height="15" fill="rgb(253,75,3)" fg:x="508" fg:w="2"/><text x="83.2565%" y="703.50"></text></g><g><title>regex_syntax::hir::literal::Seq::union (2 samples, 0.33%)</title><rect x="83.0065%" y="677" width="0.3268%" height="15" fill="rgb(226,117,51)" fg:x="508" fg:w="2"/><text x="83.2565%" y="687.50"></text></g><g><title>regex_syntax::hir::literal::Seq::dedup (2 samples, 0.33%)</title><rect x="83.0065%" y="661" width="0.3268%" height="15" fill="rgb(244,184,3)" fg:x="508" fg:w="2"/><text x="83.2565%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::dedup_by (2 samples, 0.33%)</title><rect x="83.0065%" y="645" width="0.3268%" height="15" fill="rgb(212,107,25)" fg:x="508" fg:w="2"/><text x="83.2565%" y="655.50"></text></g><g><title>regex_syntax::hir::literal::Seq::dedup::{{closure}} (2 samples, 0.33%)</title><rect x="83.0065%" y="629" width="0.3268%" height="15" fill="rgb(224,159,7)" fg:x="508" fg:w="2"/><text x="83.2565%" y="639.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::extract (3 samples, 0.49%)</title><rect x="83.0065%" y="725" width="0.4902%" height="15" fill="rgb(242,28,8)" fg:x="508" fg:w="3"/><text x="83.2565%" y="735.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::extract_alternation (3 samples, 0.49%)</title><rect x="83.0065%" y="709" width="0.4902%" height="15" fill="rgb(236,31,24)" fg:x="508" fg:w="3"/><text x="83.2565%" y="719.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::extract (1 samples, 0.16%)</title><rect x="83.3333%" y="693" width="0.1634%" height="15" fill="rgb(242,28,8)" fg:x="510" fg:w="1"/><text x="83.5833%" y="703.50"></text></g><g><title>regex_syntax::hir::literal::Seq::cross_preamble (1 samples, 0.16%)</title><rect x="83.4967%" y="693" width="0.1634%" height="15" fill="rgb(252,186,13)" fg:x="511" fg:w="1"/><text x="83.7467%" y="703.50"></text></g><g><title>regex_syntax::hir::literal::Seq::make_inexact (1 samples, 0.16%)</title><rect x="83.4967%" y="677" width="0.1634%" height="15" fill="rgb(211,32,10)" fg:x="511" fg:w="1"/><text x="83.7467%" y="687.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="83.4967%" y="661" width="0.1634%" height="15" fill="rgb(242,38,10)" fg:x="511" fg:w="1"/><text x="83.7467%" y="671.50"></text></g><g><title>regex_automata::util::prefilter::prefixes (14 samples, 2.29%)</title><rect x="81.5359%" y="773" width="2.2876%" height="15" fill="rgb(209,67,19)" fg:x="499" fg:w="14"/><text x="81.7859%" y="783.50">r..</text></g><g><title>regex_syntax::hir::literal::Extractor::extract (5 samples, 0.82%)</title><rect x="83.0065%" y="757" width="0.8170%" height="15" fill="rgb(242,28,8)" fg:x="508" fg:w="5"/><text x="83.2565%" y="767.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::extract_concat (5 samples, 0.82%)</title><rect x="83.0065%" y="741" width="0.8170%" height="15" fill="rgb(215,217,42)" fg:x="508" fg:w="5"/><text x="83.2565%" y="751.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::cross (2 samples, 0.33%)</title><rect x="83.4967%" y="725" width="0.3268%" height="15" fill="rgb(248,169,31)" fg:x="511" fg:w="2"/><text x="83.7467%" y="735.50"></text></g><g><title>regex_syntax::hir::literal::Seq::cross_forward (2 samples, 0.33%)</title><rect x="83.4967%" y="709" width="0.3268%" height="15" fill="rgb(228,175,28)" fg:x="511" fg:w="2"/><text x="83.7467%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.16%)</title><rect x="83.6601%" y="693" width="0.1634%" height="15" fill="rgb(253,154,22)" fg:x="512" fg:w="1"/><text x="83.9101%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.16%)</title><rect x="83.6601%" y="677" width="0.1634%" height="15" fill="rgb(249,207,12)" fg:x="512" fg:w="1"/><text x="83.9101%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.16%)</title><rect x="83.6601%" y="661" width="0.1634%" height="15" fill="rgb(224,194,14)" fg:x="512" fg:w="1"/><text x="83.9101%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.16%)</title><rect x="83.6601%" y="645" width="0.1634%" height="15" fill="rgb(227,204,5)" fg:x="512" fg:w="1"/><text x="83.9101%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.16%)</title><rect x="83.6601%" y="629" width="0.1634%" height="15" fill="rgb(231,114,21)" fg:x="512" fg:w="1"/><text x="83.9101%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.16%)</title><rect x="83.6601%" y="613" width="0.1634%" height="15" fill="rgb(238,209,2)" fg:x="512" fg:w="1"/><text x="83.9101%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.16%)</title><rect x="83.6601%" y="597" width="0.1634%" height="15" fill="rgb(253,135,41)" fg:x="512" fg:w="1"/><text x="83.9101%" y="607.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.16%)</title><rect x="83.6601%" y="581" width="0.1634%" height="15" fill="rgb(206,112,53)" fg:x="512" fg:w="1"/><text x="83.9101%" y="591.50"></text></g><g><title>_int_malloc (1 samples, 0.16%)</title><rect x="83.6601%" y="565" width="0.1634%" height="15" fill="rgb(222,219,51)" fg:x="512" fg:w="1"/><text x="83.9101%" y="575.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::extract_concat (1 samples, 0.16%)</title><rect x="83.8235%" y="693" width="0.1634%" height="15" fill="rgb(215,217,42)" fg:x="513" fg:w="1"/><text x="84.0735%" y="703.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::cross (1 samples, 0.16%)</title><rect x="83.8235%" y="677" width="0.1634%" height="15" fill="rgb(248,169,31)" fg:x="513" fg:w="1"/><text x="84.0735%" y="687.50"></text></g><g><title>regex_syntax::hir::literal::Seq::cross_reverse (1 samples, 0.16%)</title><rect x="83.8235%" y="661" width="0.1634%" height="15" fill="rgb(231,193,12)" fg:x="513" fg:w="1"/><text x="84.0735%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.16%)</title><rect x="83.8235%" y="645" width="0.1634%" height="15" fill="rgb(241,229,15)" fg:x="513" fg:w="1"/><text x="84.0735%" y="655.50"></text></g><g><title>core::ptr::write (1 samples, 0.16%)</title><rect x="83.8235%" y="629" width="0.1634%" height="15" fill="rgb(209,143,44)" fg:x="513" fg:w="1"/><text x="84.0735%" y="639.50"></text></g><g><title>regex_automata::meta::strategy::ReverseSuffix::new (2 samples, 0.33%)</title><rect x="83.8235%" y="773" width="0.3268%" height="15" fill="rgb(210,64,50)" fg:x="513" fg:w="2"/><text x="84.0735%" y="783.50"></text></g><g><title>regex_automata::util::prefilter::suffixes (2 samples, 0.33%)</title><rect x="83.8235%" y="757" width="0.3268%" height="15" fill="rgb(229,215,53)" fg:x="513" fg:w="2"/><text x="84.0735%" y="767.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::extract (2 samples, 0.33%)</title><rect x="83.8235%" y="741" width="0.3268%" height="15" fill="rgb(242,28,8)" fg:x="513" fg:w="2"/><text x="84.0735%" y="751.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::extract_concat (2 samples, 0.33%)</title><rect x="83.8235%" y="725" width="0.3268%" height="15" fill="rgb(215,217,42)" fg:x="513" fg:w="2"/><text x="84.0735%" y="735.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::extract (2 samples, 0.33%)</title><rect x="83.8235%" y="709" width="0.3268%" height="15" fill="rgb(242,28,8)" fg:x="513" fg:w="2"/><text x="84.0735%" y="719.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::extract_alternation (1 samples, 0.16%)</title><rect x="83.9869%" y="693" width="0.1634%" height="15" fill="rgb(236,31,24)" fg:x="514" fg:w="1"/><text x="84.2369%" y="703.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::union (1 samples, 0.16%)</title><rect x="83.9869%" y="677" width="0.1634%" height="15" fill="rgb(253,75,3)" fg:x="514" fg:w="1"/><text x="84.2369%" y="687.50"></text></g><g><title>regex_syntax::hir::literal::Seq::union (1 samples, 0.16%)</title><rect x="83.9869%" y="661" width="0.1634%" height="15" fill="rgb(226,117,51)" fg:x="514" fg:w="1"/><text x="84.2369%" y="671.50"></text></g><g><title>regex_syntax::hir::literal::Seq::dedup (1 samples, 0.16%)</title><rect x="83.9869%" y="645" width="0.1634%" height="15" fill="rgb(244,184,3)" fg:x="514" fg:w="1"/><text x="84.2369%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::dedup_by (1 samples, 0.16%)</title><rect x="83.9869%" y="629" width="0.1634%" height="15" fill="rgb(212,107,25)" fg:x="514" fg:w="1"/><text x="84.2369%" y="639.50"></text></g><g><title>regex_syntax::hir::literal::Seq::dedup::{{closure}} (1 samples, 0.16%)</title><rect x="83.9869%" y="613" width="0.1634%" height="15" fill="rgb(224,159,7)" fg:x="514" fg:w="1"/><text x="84.2369%" y="623.50"></text></g><g><title>regex_syntax::hir::literal::Literal::as_bytes (1 samples, 0.16%)</title><rect x="83.9869%" y="597" width="0.1634%" height="15" fill="rgb(248,132,49)" fg:x="514" fg:w="1"/><text x="84.2369%" y="607.50"></text></g><g><title>regex_syntax::hir::Hir::concat (1 samples, 0.16%)</title><rect x="84.1503%" y="533" width="0.1634%" height="15" fill="rgb(228,76,42)" fg:x="515" fg:w="1"/><text x="84.4003%" y="543.50"></text></g><g><title>regex_syntax::hir::Hir::into_parts (1 samples, 0.16%)</title><rect x="84.1503%" y="517" width="0.1634%" height="15" fill="rgb(217,98,50)" fg:x="515" fg:w="1"/><text x="84.4003%" y="527.50"></text></g><g><title>regex_syntax::hir::Properties::empty (1 samples, 0.16%)</title><rect x="84.1503%" y="501" width="0.1634%" height="15" fill="rgb(222,71,35)" fg:x="515" fg:w="1"/><text x="84.4003%" y="511.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.16%)</title><rect x="84.1503%" y="485" width="0.1634%" height="15" fill="rgb(209,114,30)" fg:x="515" fg:w="1"/><text x="84.4003%" y="495.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.16%)</title><rect x="84.1503%" y="469" width="0.1634%" height="15" fill="rgb(248,129,10)" fg:x="515" fg:w="1"/><text x="84.4003%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.16%)</title><rect x="84.1503%" y="453" width="0.1634%" height="15" fill="rgb(231,114,21)" fg:x="515" fg:w="1"/><text x="84.4003%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.16%)</title><rect x="84.1503%" y="437" width="0.1634%" height="15" fill="rgb(238,209,2)" fg:x="515" fg:w="1"/><text x="84.4003%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.16%)</title><rect x="84.1503%" y="421" width="0.1634%" height="15" fill="rgb(253,135,41)" fg:x="515" fg:w="1"/><text x="84.4003%" y="431.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.16%)</title><rect x="84.1503%" y="405" width="0.1634%" height="15" fill="rgb(206,112,53)" fg:x="515" fg:w="1"/><text x="84.4003%" y="415.50"></text></g><g><title>regex_automata::meta::reverse_inner::top_concat::{{closure}} (2 samples, 0.33%)</title><rect x="84.1503%" y="565" width="0.3268%" height="15" fill="rgb(215,49,37)" fg:x="515" fg:w="2"/><text x="84.4003%" y="575.50"></text></g><g><title>regex_automata::meta::reverse_inner::flatten (2 samples, 0.33%)</title><rect x="84.1503%" y="549" width="0.3268%" height="15" fill="rgb(250,32,35)" fg:x="515" fg:w="2"/><text x="84.4003%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.16%)</title><rect x="84.3137%" y="533" width="0.1634%" height="15" fill="rgb(222,213,17)" fg:x="516" fg:w="1"/><text x="84.5637%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.16%)</title><rect x="84.3137%" y="517" width="0.1634%" height="15" fill="rgb(247,137,3)" fg:x="516" fg:w="1"/><text x="84.5637%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.16%)</title><rect x="84.3137%" y="501" width="0.1634%" height="15" fill="rgb(227,158,43)" fg:x="516" fg:w="1"/><text x="84.5637%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.16%)</title><rect x="84.3137%" y="485" width="0.1634%" height="15" fill="rgb(232,14,28)" fg:x="516" fg:w="1"/><text x="84.5637%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.16%)</title><rect x="84.3137%" y="469" width="0.1634%" height="15" fill="rgb(232,211,42)" fg:x="516" fg:w="1"/><text x="84.5637%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.16%)</title><rect x="84.3137%" y="453" width="0.1634%" height="15" fill="rgb(214,146,48)" fg:x="516" fg:w="1"/><text x="84.5637%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.16%)</title><rect x="84.3137%" y="437" width="0.1634%" height="15" fill="rgb(245,181,4)" fg:x="516" fg:w="1"/><text x="84.5637%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.16%)</title><rect x="84.3137%" y="421" width="0.1634%" height="15" fill="rgb(242,69,50)" fg:x="516" fg:w="1"/><text x="84.5637%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.16%)</title><rect x="84.3137%" y="405" width="0.1634%" height="15" fill="rgb(214,12,39)" fg:x="516" fg:w="1"/><text x="84.5637%" y="415.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.16%)</title><rect x="84.3137%" y="389" width="0.1634%" height="15" fill="rgb(253,112,1)" fg:x="516" fg:w="1"/><text x="84.5637%" y="399.50"></text></g><g><title>regex_automata::meta::reverse_inner::flatten::{{closure}} (1 samples, 0.16%)</title><rect x="84.3137%" y="373" width="0.1634%" height="15" fill="rgb(239,98,19)" fg:x="516" fg:w="1"/><text x="84.5637%" y="383.50"></text></g><g><title>regex_automata::meta::reverse_inner::flatten (1 samples, 0.16%)</title><rect x="84.3137%" y="357" width="0.1634%" height="15" fill="rgb(250,32,35)" fg:x="516" fg:w="1"/><text x="84.5637%" y="367.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T],A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.16%)</title><rect x="84.3137%" y="341" width="0.1634%" height="15" fill="rgb(225,79,12)" fg:x="516" fg:w="1"/><text x="84.5637%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.16%)</title><rect x="84.3137%" y="325" width="0.1634%" height="15" fill="rgb(229,121,46)" fg:x="516" fg:w="1"/><text x="84.5637%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.16%)</title><rect x="84.3137%" y="309" width="0.1634%" height="15" fill="rgb(221,172,50)" fg:x="516" fg:w="1"/><text x="84.5637%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.16%)</title><rect x="84.3137%" y="293" width="0.1634%" height="15" fill="rgb(216,42,52)" fg:x="516" fg:w="1"/><text x="84.5637%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.16%)</title><rect x="84.3137%" y="277" width="0.1634%" height="15" fill="rgb(249,207,12)" fg:x="516" fg:w="1"/><text x="84.5637%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.16%)</title><rect x="84.3137%" y="261" width="0.1634%" height="15" fill="rgb(224,194,14)" fg:x="516" fg:w="1"/><text x="84.5637%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.16%)</title><rect x="84.3137%" y="245" width="0.1634%" height="15" fill="rgb(227,204,5)" fg:x="516" fg:w="1"/><text x="84.5637%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.16%)</title><rect x="84.3137%" y="229" width="0.1634%" height="15" fill="rgb(231,114,21)" fg:x="516" fg:w="1"/><text x="84.5637%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.16%)</title><rect x="84.3137%" y="213" width="0.1634%" height="15" fill="rgb(238,209,2)" fg:x="516" fg:w="1"/><text x="84.5637%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.16%)</title><rect x="84.3137%" y="197" width="0.1634%" height="15" fill="rgb(253,135,41)" fg:x="516" fg:w="1"/><text x="84.5637%" y="207.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.16%)</title><rect x="84.3137%" y="181" width="0.1634%" height="15" fill="rgb(206,112,53)" fg:x="516" fg:w="1"/><text x="84.5637%" y="191.50"></text></g><g><title>regex_automata::meta::strategy::ReverseInner::new (3 samples, 0.49%)</title><rect x="84.1503%" y="773" width="0.4902%" height="15" fill="rgb(225,146,32)" fg:x="515" fg:w="3"/><text x="84.4003%" y="783.50"></text></g><g><title>regex_automata::meta::reverse_inner::extract (3 samples, 0.49%)</title><rect x="84.1503%" y="757" width="0.4902%" height="15" fill="rgb(209,78,45)" fg:x="515" fg:w="3"/><text x="84.4003%" y="767.50"></text></g><g><title>regex_automata::meta::reverse_inner::top_concat (3 samples, 0.49%)</title><rect x="84.1503%" y="741" width="0.4902%" height="15" fill="rgb(211,177,54)" fg:x="515" fg:w="3"/><text x="84.4003%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.49%)</title><rect x="84.1503%" y="725" width="0.4902%" height="15" fill="rgb(222,213,17)" fg:x="515" fg:w="3"/><text x="84.4003%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.49%)</title><rect x="84.1503%" y="709" width="0.4902%" height="15" fill="rgb(247,137,3)" fg:x="515" fg:w="3"/><text x="84.4003%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.49%)</title><rect x="84.1503%" y="693" width="0.4902%" height="15" fill="rgb(227,158,43)" fg:x="515" fg:w="3"/><text x="84.4003%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.49%)</title><rect x="84.1503%" y="677" width="0.4902%" height="15" fill="rgb(232,14,28)" fg:x="515" fg:w="3"/><text x="84.4003%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.49%)</title><rect x="84.1503%" y="661" width="0.4902%" height="15" fill="rgb(232,211,42)" fg:x="515" fg:w="3"/><text x="84.4003%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (3 samples, 0.49%)</title><rect x="84.1503%" y="645" width="0.4902%" height="15" fill="rgb(214,146,48)" fg:x="515" fg:w="3"/><text x="84.4003%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.49%)</title><rect x="84.1503%" y="629" width="0.4902%" height="15" fill="rgb(245,181,4)" fg:x="515" fg:w="3"/><text x="84.4003%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.49%)</title><rect x="84.1503%" y="613" width="0.4902%" height="15" fill="rgb(242,69,50)" fg:x="515" fg:w="3"/><text x="84.4003%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.49%)</title><rect x="84.1503%" y="597" width="0.4902%" height="15" fill="rgb(214,12,39)" fg:x="515" fg:w="3"/><text x="84.4003%" y="607.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3 samples, 0.49%)</title><rect x="84.1503%" y="581" width="0.4902%" height="15" fill="rgb(253,112,1)" fg:x="515" fg:w="3"/><text x="84.4003%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.16%)</title><rect x="84.4771%" y="565" width="0.1634%" height="15" fill="rgb(245,36,31)" fg:x="517" fg:w="1"/><text x="84.7271%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::{{closure}} (1 samples, 0.16%)</title><rect x="84.4771%" y="549" width="0.1634%" height="15" fill="rgb(221,227,48)" fg:x="517" fg:w="1"/><text x="84.7271%" y="559.50"></text></g><g><title>core::ptr::write (1 samples, 0.16%)</title><rect x="84.4771%" y="533" width="0.1634%" height="15" fill="rgb(209,143,44)" fg:x="517" fg:w="1"/><text x="84.7271%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;regex_automata::nfa::thompson::range_trie::RangeTrie&gt;&gt; (1 samples, 0.16%)</title><rect x="84.6405%" y="741" width="0.1634%" height="15" fill="rgb(215,44,46)" fg:x="518" fg:w="1"/><text x="84.8905%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;regex_automata::nfa::thompson::range_trie::RangeTrie&gt;&gt; (1 samples, 0.16%)</title><rect x="84.6405%" y="725" width="0.1634%" height="15" fill="rgb(243,91,48)" fg:x="518" fg:w="1"/><text x="84.8905%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::range_trie::RangeTrie&gt; (1 samples, 0.16%)</title><rect x="84.6405%" y="709" width="0.1634%" height="15" fill="rgb(233,99,35)" fg:x="518" fg:w="1"/><text x="84.8905%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_automata::nfa::thompson::range_trie::State&gt;&gt; (1 samples, 0.16%)</title><rect x="84.6405%" y="693" width="0.1634%" height="15" fill="rgb(231,148,46)" fg:x="518" fg:w="1"/><text x="84.8905%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;regex_automata::nfa::thompson::range_trie::State&gt;&gt; (1 samples, 0.16%)</title><rect x="84.6405%" y="677" width="0.1634%" height="15" fill="rgb(241,122,2)" fg:x="518" fg:w="1"/><text x="84.8905%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.16%)</title><rect x="84.6405%" y="661" width="0.1634%" height="15" fill="rgb(213,128,22)" fg:x="518" fg:w="1"/><text x="84.8905%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.16%)</title><rect x="84.6405%" y="645" width="0.1634%" height="15" fill="rgb(238,77,31)" fg:x="518" fg:w="1"/><text x="84.8905%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.16%)</title><rect x="84.6405%" y="629" width="0.1634%" height="15" fill="rgb(227,15,28)" fg:x="518" fg:w="1"/><text x="84.8905%" y="639.50"></text></g><g><title>__GI___libc_free (1 samples, 0.16%)</title><rect x="84.6405%" y="613" width="0.1634%" height="15" fill="rgb(247,8,17)" fg:x="518" fg:w="1"/><text x="84.8905%" y="623.50"></text></g><g><title>_int_free (1 samples, 0.16%)</title><rect x="84.6405%" y="597" width="0.1634%" height="15" fill="rgb(221,113,48)" fg:x="518" fg:w="1"/><text x="84.8905%" y="607.50"></text></g><g><title>unlink_chunk (1 samples, 0.16%)</title><rect x="84.8039%" y="549" width="0.1634%" height="15" fill="rgb(223,20,30)" fg:x="519" fg:w="1"/><text x="85.0539%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;regex_automata::nfa::thompson::map::Utf8BoundedEntry&gt;&gt; (3 samples, 0.49%)</title><rect x="84.8039%" y="661" width="0.4902%" height="15" fill="rgb(209,15,40)" fg:x="519" fg:w="3"/><text x="85.0539%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.49%)</title><rect x="84.8039%" y="645" width="0.4902%" height="15" fill="rgb(213,128,22)" fg:x="519" fg:w="3"/><text x="85.0539%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.49%)</title><rect x="84.8039%" y="629" width="0.4902%" height="15" fill="rgb(238,77,31)" fg:x="519" fg:w="3"/><text x="85.0539%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.49%)</title><rect x="84.8039%" y="613" width="0.4902%" height="15" fill="rgb(227,15,28)" fg:x="519" fg:w="3"/><text x="85.0539%" y="623.50"></text></g><g><title>__GI___libc_free (3 samples, 0.49%)</title><rect x="84.8039%" y="597" width="0.4902%" height="15" fill="rgb(247,8,17)" fg:x="519" fg:w="3"/><text x="85.0539%" y="607.50"></text></g><g><title>_int_free (3 samples, 0.49%)</title><rect x="84.8039%" y="581" width="0.4902%" height="15" fill="rgb(221,113,48)" fg:x="519" fg:w="3"/><text x="85.0539%" y="591.50"></text></g><g><title>malloc_consolidate (3 samples, 0.49%)</title><rect x="84.8039%" y="565" width="0.4902%" height="15" fill="rgb(228,194,39)" fg:x="519" fg:w="3"/><text x="85.0539%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;regex_automata::nfa::thompson::compiler::Utf8State&gt;&gt; (6 samples, 0.98%)</title><rect x="84.8039%" y="741" width="0.9804%" height="15" fill="rgb(247,24,16)" fg:x="519" fg:w="6"/><text x="85.0539%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;regex_automata::nfa::thompson::compiler::Utf8State&gt;&gt; (6 samples, 0.98%)</title><rect x="84.8039%" y="725" width="0.9804%" height="15" fill="rgb(239,113,24)" fg:x="519" fg:w="6"/><text x="85.0539%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::compiler::Utf8State&gt; (6 samples, 0.98%)</title><rect x="84.8039%" y="709" width="0.9804%" height="15" fill="rgb(250,143,15)" fg:x="519" fg:w="6"/><text x="85.0539%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::map::Utf8BoundedMap&gt; (6 samples, 0.98%)</title><rect x="84.8039%" y="693" width="0.9804%" height="15" fill="rgb(224,100,47)" fg:x="519" fg:w="6"/><text x="85.0539%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_automata::nfa::thompson::map::Utf8BoundedEntry&gt;&gt; (6 samples, 0.98%)</title><rect x="84.8039%" y="677" width="0.9804%" height="15" fill="rgb(219,69,19)" fg:x="519" fg:w="6"/><text x="85.0539%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.49%)</title><rect x="85.2941%" y="661" width="0.4902%" height="15" fill="rgb(249,14,2)" fg:x="522" fg:w="3"/><text x="85.5441%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;[regex_automata::nfa::thompson::map::Utf8BoundedEntry]&gt; (3 samples, 0.49%)</title><rect x="85.2941%" y="645" width="0.4902%" height="15" fill="rgb(228,140,11)" fg:x="522" fg:w="3"/><text x="85.5441%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::map::Utf8BoundedEntry&gt; (3 samples, 0.49%)</title><rect x="85.2941%" y="629" width="0.4902%" height="15" fill="rgb(247,188,9)" fg:x="522" fg:w="3"/><text x="85.5441%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_automata::nfa::thompson::nfa::Transition&gt;&gt; (3 samples, 0.49%)</title><rect x="85.2941%" y="613" width="0.4902%" height="15" fill="rgb(207,29,6)" fg:x="522" fg:w="3"/><text x="85.5441%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;regex_automata::nfa::thompson::nfa::Transition&gt;&gt; (3 samples, 0.49%)</title><rect x="85.2941%" y="597" width="0.4902%" height="15" fill="rgb(228,146,49)" fg:x="522" fg:w="3"/><text x="85.5441%" y="607.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.49%)</title><rect x="85.2941%" y="581" width="0.4902%" height="15" fill="rgb(213,128,22)" fg:x="522" fg:w="3"/><text x="85.5441%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (3 samples, 0.49%)</title><rect x="85.2941%" y="565" width="0.4902%" height="15" fill="rgb(253,185,17)" fg:x="522" fg:w="3"/><text x="85.5441%" y="575.50"></text></g><g><title>unlink_chunk (1 samples, 0.16%)</title><rect x="85.7843%" y="565" width="0.1634%" height="15" fill="rgb(223,20,30)" fg:x="525" fg:w="1"/><text x="86.0343%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;regex_automata::nfa::thompson::builder::State&gt;&gt; (2 samples, 0.33%)</title><rect x="85.7843%" y="677" width="0.3268%" height="15" fill="rgb(253,22,30)" fg:x="525" fg:w="2"/><text x="86.0343%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.33%)</title><rect x="85.7843%" y="661" width="0.3268%" height="15" fill="rgb(213,128,22)" fg:x="525" fg:w="2"/><text x="86.0343%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.33%)</title><rect x="85.7843%" y="645" width="0.3268%" height="15" fill="rgb(238,77,31)" fg:x="525" fg:w="2"/><text x="86.0343%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.33%)</title><rect x="85.7843%" y="629" width="0.3268%" height="15" fill="rgb(227,15,28)" fg:x="525" fg:w="2"/><text x="86.0343%" y="639.50"></text></g><g><title>__GI___libc_free (2 samples, 0.33%)</title><rect x="85.7843%" y="613" width="0.3268%" height="15" fill="rgb(247,8,17)" fg:x="525" fg:w="2"/><text x="86.0343%" y="623.50"></text></g><g><title>_int_free (2 samples, 0.33%)</title><rect x="85.7843%" y="597" width="0.3268%" height="15" fill="rgb(221,113,48)" fg:x="525" fg:w="2"/><text x="86.0343%" y="607.50"></text></g><g><title>malloc_consolidate (2 samples, 0.33%)</title><rect x="85.7843%" y="581" width="0.3268%" height="15" fill="rgb(228,194,39)" fg:x="525" fg:w="2"/><text x="86.0343%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_automata::nfa::thompson::nfa::Transition&gt;&gt; (1 samples, 0.16%)</title><rect x="86.1111%" y="629" width="0.1634%" height="15" fill="rgb(207,29,6)" fg:x="527" fg:w="1"/><text x="86.3611%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;regex_automata::nfa::thompson::nfa::Transition&gt;&gt; (1 samples, 0.16%)</title><rect x="86.1111%" y="613" width="0.1634%" height="15" fill="rgb(228,146,49)" fg:x="527" fg:w="1"/><text x="86.3611%" y="623.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.16%)</title><rect x="86.1111%" y="597" width="0.1634%" height="15" fill="rgb(213,128,22)" fg:x="527" fg:w="1"/><text x="86.3611%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.16%)</title><rect x="86.1111%" y="581" width="0.1634%" height="15" fill="rgb(253,185,17)" fg:x="527" fg:w="1"/><text x="86.3611%" y="591.50"></text></g><g><title>arena_for_chunk (1 samples, 0.16%)</title><rect x="86.2745%" y="613" width="0.1634%" height="15" fill="rgb(234,26,42)" fg:x="528" fg:w="1"/><text x="86.5245%" y="623.50"></text></g><g><title>arena_for_chunk (1 samples, 0.16%)</title><rect x="86.2745%" y="597" width="0.1634%" height="15" fill="rgb(234,26,42)" fg:x="528" fg:w="1"/><text x="86.5245%" y="607.50"></text></g><g><title>heap_for_ptr (1 samples, 0.16%)</title><rect x="86.2745%" y="581" width="0.1634%" height="15" fill="rgb(232,140,25)" fg:x="528" fg:w="1"/><text x="86.5245%" y="591.50"></text></g><g><title>__GI___libc_free (3 samples, 0.49%)</title><rect x="86.2745%" y="629" width="0.4902%" height="15" fill="rgb(247,8,17)" fg:x="528" fg:w="3"/><text x="86.5245%" y="639.50"></text></g><g><title>_int_free (2 samples, 0.33%)</title><rect x="86.4379%" y="613" width="0.3268%" height="15" fill="rgb(221,113,48)" fg:x="529" fg:w="2"/><text x="86.6879%" y="623.50"></text></g><g><title>regex_automata::meta::strategy::Core::new (15 samples, 2.45%)</title><rect x="84.6405%" y="773" width="2.4510%" height="15" fill="rgb(222,69,27)" fg:x="518" fg:w="15"/><text x="84.8905%" y="783.50">re..</text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::compiler::Compiler&gt; (15 samples, 2.45%)</title><rect x="84.6405%" y="757" width="2.4510%" height="15" fill="rgb(213,189,36)" fg:x="518" fg:w="15"/><text x="84.8905%" y="767.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;regex_automata::nfa::thompson::builder::Builder&gt;&gt; (8 samples, 1.31%)</title><rect x="85.7843%" y="741" width="1.3072%" height="15" fill="rgb(234,58,54)" fg:x="525" fg:w="8"/><text x="86.0343%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;regex_automata::nfa::thompson::builder::Builder&gt;&gt; (8 samples, 1.31%)</title><rect x="85.7843%" y="725" width="1.3072%" height="15" fill="rgb(211,168,54)" fg:x="525" fg:w="8"/><text x="86.0343%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::builder::Builder&gt; (8 samples, 1.31%)</title><rect x="85.7843%" y="709" width="1.3072%" height="15" fill="rgb(236,9,46)" fg:x="525" fg:w="8"/><text x="86.0343%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_automata::nfa::thompson::builder::State&gt;&gt; (8 samples, 1.31%)</title><rect x="85.7843%" y="693" width="1.3072%" height="15" fill="rgb(209,117,28)" fg:x="525" fg:w="8"/><text x="86.0343%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.98%)</title><rect x="86.1111%" y="677" width="0.9804%" height="15" fill="rgb(249,14,2)" fg:x="527" fg:w="6"/><text x="86.3611%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;[regex_automata::nfa::thompson::builder::State]&gt; (6 samples, 0.98%)</title><rect x="86.1111%" y="661" width="0.9804%" height="15" fill="rgb(227,197,38)" fg:x="527" fg:w="6"/><text x="86.3611%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::builder::State&gt; (6 samples, 0.98%)</title><rect x="86.1111%" y="645" width="0.9804%" height="15" fill="rgb(207,220,38)" fg:x="527" fg:w="6"/><text x="86.3611%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.33%)</title><rect x="86.7647%" y="629" width="0.3268%" height="15" fill="rgb(213,128,22)" fg:x="531" fg:w="2"/><text x="87.0147%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.33%)</title><rect x="86.7647%" y="613" width="0.3268%" height="15" fill="rgb(253,185,17)" fg:x="531" fg:w="2"/><text x="87.0147%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.16%)</title><rect x="87.0915%" y="773" width="0.1634%" height="15" fill="rgb(225,8,7)" fg:x="533" fg:w="1"/><text x="87.3415%" y="783.50"></text></g><g><title>regex_automata::meta::strategy::new::{{closure}} (1 samples, 0.16%)</title><rect x="87.0915%" y="757" width="0.1634%" height="15" fill="rgb(238,100,15)" fg:x="533" fg:w="1"/><text x="87.3415%" y="767.50"></text></g><g><title>regex_automata::util::prefilter::Prefilter::new (1 samples, 0.16%)</title><rect x="87.0915%" y="741" width="0.1634%" height="15" fill="rgb(227,199,27)" fg:x="533" fg:w="1"/><text x="87.3415%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.16%)</title><rect x="87.0915%" y="725" width="0.1634%" height="15" fill="rgb(225,8,7)" fg:x="533" fg:w="1"/><text x="87.3415%" y="735.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.16%)</title><rect x="87.0915%" y="709" width="0.1634%" height="15" fill="rgb(210,80,10)" fg:x="533" fg:w="1"/><text x="87.3415%" y="719.50"></text></g><g><title>regex_automata::util::prefilter::Prefilter::from_choice (1 samples, 0.16%)</title><rect x="87.0915%" y="693" width="0.1634%" height="15" fill="rgb(237,103,18)" fg:x="533" fg:w="1"/><text x="87.3415%" y="703.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;P&gt; as regex_automata::util::prefilter::PrefilterI&gt;::is_fast (1 samples, 0.16%)</title><rect x="87.0915%" y="677" width="0.1634%" height="15" fill="rgb(234,223,43)" fg:x="533" fg:w="1"/><text x="87.3415%" y="687.50"></text></g><g><title>&lt;regex_automata::util::prefilter::teddy::Teddy as regex_automata::util::prefilter::PrefilterI&gt;::is_fast (1 samples, 0.16%)</title><rect x="87.0915%" y="661" width="0.1634%" height="15" fill="rgb(221,106,49)" fg:x="533" fg:w="1"/><text x="87.3415%" y="671.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (1 samples, 0.16%)</title><rect x="87.2549%" y="773" width="0.1634%" height="15" fill="rgb(221,10,3)" fg:x="534" fg:w="1"/><text x="87.5049%" y="783.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.16%)</title><rect x="87.2549%" y="757" width="0.1634%" height="15" fill="rgb(209,114,30)" fg:x="534" fg:w="1"/><text x="87.5049%" y="767.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.16%)</title><rect x="87.2549%" y="741" width="0.1634%" height="15" fill="rgb(248,129,10)" fg:x="534" fg:w="1"/><text x="87.5049%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.16%)</title><rect x="87.2549%" y="725" width="0.1634%" height="15" fill="rgb(231,114,21)" fg:x="534" fg:w="1"/><text x="87.5049%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.16%)</title><rect x="87.2549%" y="709" width="0.1634%" height="15" fill="rgb(238,209,2)" fg:x="534" fg:w="1"/><text x="87.5049%" y="719.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.16%)</title><rect x="87.2549%" y="693" width="0.1634%" height="15" fill="rgb(253,135,41)" fg:x="534" fg:w="1"/><text x="87.5049%" y="703.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.16%)</title><rect x="87.2549%" y="677" width="0.1634%" height="15" fill="rgb(206,112,53)" fg:x="534" fg:w="1"/><text x="87.5049%" y="687.50"></text></g><g><title>_int_malloc (1 samples, 0.16%)</title><rect x="87.2549%" y="661" width="0.1634%" height="15" fill="rgb(222,219,51)" fg:x="534" fg:w="1"/><text x="87.5049%" y="671.50"></text></g><g><title>malloc_consolidate (1 samples, 0.16%)</title><rect x="87.2549%" y="645" width="0.1634%" height="15" fill="rgb(228,194,39)" fg:x="534" fg:w="1"/><text x="87.5049%" y="655.50"></text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::process_stage1_blockzero_analysis (37 samples, 6.05%)</title><rect x="81.5359%" y="1173" width="6.0458%" height="15" fill="rgb(214,107,3)" fg:x="499" fg:w="37"/><text x="81.7859%" y="1183.50">s4lib::r..</text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::blockzero_analysis (37 samples, 6.05%)</title><rect x="81.5359%" y="1157" width="6.0458%" height="15" fill="rgb(228,176,28)" fg:x="499" fg:w="37"/><text x="81.7859%" y="1167.50">s4lib::r..</text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::blockzero_analysis_syslines (37 samples, 6.05%)</title><rect x="81.5359%" y="1141" width="6.0458%" height="15" fill="rgb(208,15,47)" fg:x="499" fg:w="37"/><text x="81.7859%" y="1151.50">s4lib::r..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_sysline_in_block (37 samples, 6.05%)</title><rect x="81.5359%" y="1125" width="6.0458%" height="15" fill="rgb(243,65,52)" fg:x="499" fg:w="37"/><text x="81.7859%" y="1135.50">s4lib::r..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_sysline_in_block_year (37 samples, 6.05%)</title><rect x="81.5359%" y="1109" width="6.0458%" height="15" fill="rgb(253,177,51)" fg:x="499" fg:w="37"/><text x="81.7859%" y="1119.50">s4lib::r..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::parse_datetime_in_line_cached (37 samples, 6.05%)</title><rect x="81.5359%" y="1093" width="6.0458%" height="15" fill="rgb(231,75,50)" fg:x="499" fg:w="37"/><text x="81.7859%" y="1103.50">s4lib::r..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::parse_datetime_in_line (37 samples, 6.05%)</title><rect x="81.5359%" y="1077" width="6.0458%" height="15" fill="rgb(234,54,15)" fg:x="499" fg:w="37"/><text x="81.7859%" y="1087.50">s4lib::r..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_datetime_in_line (37 samples, 6.05%)</title><rect x="81.5359%" y="1061" width="6.0458%" height="15" fill="rgb(212,53,9)" fg:x="499" fg:w="37"/><text x="81.7859%" y="1071.50">s4lib::r..</text></g><g><title>s4lib::data::datetime::bytes_to_regex_to_datetime (37 samples, 6.05%)</title><rect x="81.5359%" y="1045" width="6.0458%" height="15" fill="rgb(252,84,36)" fg:x="499" fg:w="37"/><text x="81.7859%" y="1055.50">s4lib::d..</text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref (37 samples, 6.05%)</title><rect x="81.5359%" y="1029" width="6.0458%" height="15" fill="rgb(217,15,43)" fg:x="499" fg:w="37"/><text x="81.7859%" y="1039.50">&lt;s4lib::..</text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref::__stability (37 samples, 6.05%)</title><rect x="81.5359%" y="1013" width="6.0458%" height="15" fill="rgb(239,165,48)" fg:x="499" fg:w="37"/><text x="81.7859%" y="1023.50">&lt;s4lib::..</text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (37 samples, 6.05%)</title><rect x="81.5359%" y="997" width="6.0458%" height="15" fill="rgb(235,175,8)" fg:x="499" fg:w="37"/><text x="81.7859%" y="1007.50">lazy_sta..</text></g><g><title>std::sync::once::Once::call_once (37 samples, 6.05%)</title><rect x="81.5359%" y="981" width="6.0458%" height="15" fill="rgb(247,17,47)" fg:x="499" fg:w="37"/><text x="81.7859%" y="991.50">std::syn..</text></g><g><title>std::sys_common::once::futex::Once::call (37 samples, 6.05%)</title><rect x="81.5359%" y="965" width="6.0458%" height="15" fill="rgb(246,168,49)" fg:x="499" fg:w="37"/><text x="81.7859%" y="975.50">std::sys..</text></g><g><title>std::sync::once::Once::call_once::{{closure}} (37 samples, 6.05%)</title><rect x="81.5359%" y="949" width="6.0458%" height="15" fill="rgb(237,63,35)" fg:x="499" fg:w="37"/><text x="81.7859%" y="959.50">std::syn..</text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}} (37 samples, 6.05%)</title><rect x="81.5359%" y="933" width="6.0458%" height="15" fill="rgb(238,7,51)" fg:x="499" fg:w="37"/><text x="81.7859%" y="943.50">lazy_sta..</text></g><g><title>core::ops::function::FnOnce::call_once (37 samples, 6.05%)</title><rect x="81.5359%" y="917" width="6.0458%" height="15" fill="rgb(210,80,10)" fg:x="499" fg:w="37"/><text x="81.7859%" y="927.50">core::op..</text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref::__static_ref_initialize (37 samples, 6.05%)</title><rect x="81.5359%" y="901" width="6.0458%" height="15" fill="rgb(205,24,29)" fg:x="499" fg:w="37"/><text x="81.7859%" y="911.50">&lt;s4lib::..</text></g><g><title>regex::regex::bytes::Regex::new (37 samples, 6.05%)</title><rect x="81.5359%" y="885" width="6.0458%" height="15" fill="rgb(246,224,25)" fg:x="499" fg:w="37"/><text x="81.7859%" y="895.50">regex::r..</text></g><g><title>regex::builders::bytes::RegexBuilder::build (37 samples, 6.05%)</title><rect x="81.5359%" y="869" width="6.0458%" height="15" fill="rgb(236,76,51)" fg:x="499" fg:w="37"/><text x="81.7859%" y="879.50">regex::b..</text></g><g><title>regex::builders::Builder::build_one_bytes (37 samples, 6.05%)</title><rect x="81.5359%" y="853" width="6.0458%" height="15" fill="rgb(233,102,7)" fg:x="499" fg:w="37"/><text x="81.7859%" y="863.50">regex::b..</text></g><g><title>regex_automata::meta::regex::Builder::build (37 samples, 6.05%)</title><rect x="81.5359%" y="837" width="6.0458%" height="15" fill="rgb(212,33,22)" fg:x="499" fg:w="37"/><text x="81.7859%" y="847.50">regex_au..</text></g><g><title>regex_automata::meta::regex::Builder::build_many (37 samples, 6.05%)</title><rect x="81.5359%" y="821" width="6.0458%" height="15" fill="rgb(236,25,32)" fg:x="499" fg:w="37"/><text x="81.7859%" y="831.50">regex_au..</text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (37 samples, 6.05%)</title><rect x="81.5359%" y="805" width="6.0458%" height="15" fill="rgb(250,142,30)" fg:x="499" fg:w="37"/><text x="81.7859%" y="815.50">regex_au..</text></g><g><title>regex_automata::meta::strategy::new (37 samples, 6.05%)</title><rect x="81.5359%" y="789" width="6.0458%" height="15" fill="rgb(243,171,22)" fg:x="499" fg:w="37"/><text x="81.7859%" y="799.50">regex_au..</text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.16%)</title><rect x="87.4183%" y="773" width="0.1634%" height="15" fill="rgb(217,126,36)" fg:x="535" fg:w="1"/><text x="87.6683%" y="783.50"></text></g><g><title>s4::exec_fileprocessor_thread (38 samples, 6.21%)</title><rect x="81.5359%" y="1205" width="6.2092%" height="15" fill="rgb(245,49,27)" fg:x="499" fg:w="38"/><text x="81.7859%" y="1215.50">s4::exec..</text></g><g><title>s4::exec_syslogprocessor (38 samples, 6.21%)</title><rect x="81.5359%" y="1189" width="6.2092%" height="15" fill="rgb(229,116,34)" fg:x="499" fg:w="38"/><text x="81.7859%" y="1199.50">s4::exec..</text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::new (1 samples, 0.16%)</title><rect x="87.5817%" y="1173" width="0.1634%" height="15" fill="rgb(223,11,33)" fg:x="536" fg:w="1"/><text x="87.8317%" y="1183.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::new (1 samples, 0.16%)</title><rect x="87.5817%" y="1157" width="0.1634%" height="15" fill="rgb(247,92,42)" fg:x="536" fg:w="1"/><text x="87.8317%" y="1167.50"></text></g><g><title>s4lib::readers::linereader::LineReader::new (1 samples, 0.16%)</title><rect x="87.5817%" y="1141" width="0.1634%" height="15" fill="rgb(243,188,25)" fg:x="536" fg:w="1"/><text x="87.8317%" y="1151.50"></text></g><g><title>s4lib::readers::blockreader::BlockReader::new (1 samples, 0.16%)</title><rect x="87.5817%" y="1125" width="0.1634%" height="15" fill="rgb(233,2,13)" fg:x="536" fg:w="1"/><text x="87.8317%" y="1135.50"></text></g><g><title>flate2::gz::read::GzDecoder&lt;R&gt;::new (1 samples, 0.16%)</title><rect x="87.5817%" y="1109" width="0.1634%" height="15" fill="rgb(212,149,39)" fg:x="536" fg:w="1"/><text x="87.8317%" y="1119.50"></text></g><g><title>flate2::gz::bufread::GzDecoder&lt;R&gt;::new (1 samples, 0.16%)</title><rect x="87.5817%" y="1093" width="0.1634%" height="15" fill="rgb(235,95,31)" fg:x="536" fg:w="1"/><text x="87.8317%" y="1103.50"></text></g><g><title>flate2::gz::GzHeaderParser::parse (1 samples, 0.16%)</title><rect x="87.5817%" y="1077" width="0.1634%" height="15" fill="rgb(210,56,8)" fg:x="536" fg:w="1"/><text x="87.8317%" y="1087.50"></text></g><g><title>flate2::gz::read_into (1 samples, 0.16%)</title><rect x="87.5817%" y="1061" width="0.1634%" height="15" fill="rgb(245,75,48)" fg:x="536" fg:w="1"/><text x="87.8317%" y="1071.50"></text></g><g><title>&lt;flate2::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.16%)</title><rect x="87.5817%" y="1045" width="0.1634%" height="15" fill="rgb(206,216,24)" fg:x="536" fg:w="1"/><text x="87.8317%" y="1055.50"></text></g><g><title>&lt;flate2::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (1 samples, 0.16%)</title><rect x="87.5817%" y="1029" width="0.1634%" height="15" fill="rgb(252,127,17)" fg:x="536" fg:w="1"/><text x="87.8317%" y="1039.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (1 samples, 0.16%)</title><rect x="87.5817%" y="1013" width="0.1634%" height="15" fill="rgb(223,30,9)" fg:x="536" fg:w="1"/><text x="87.8317%" y="1023.50"></text></g><g><title>std::sys::unix::fs::File::read (1 samples, 0.16%)</title><rect x="87.5817%" y="997" width="0.1634%" height="15" fill="rgb(223,132,44)" fg:x="536" fg:w="1"/><text x="87.8317%" y="1007.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (1 samples, 0.16%)</title><rect x="87.5817%" y="981" width="0.1634%" height="15" fill="rgb(243,148,0)" fg:x="536" fg:w="1"/><text x="87.8317%" y="991.50"></text></g><g><title>__GI___libc_read (1 samples, 0.16%)</title><rect x="87.5817%" y="965" width="0.1634%" height="15" fill="rgb(206,204,24)" fg:x="536" fg:w="1"/><text x="87.8317%" y="975.50"></text></g><g><title>__GI___libc_read (1 samples, 0.16%)</title><rect x="87.5817%" y="949" width="0.1634%" height="15" fill="rgb(206,204,24)" fg:x="536" fg:w="1"/><text x="87.8317%" y="959.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="87.5817%" y="933" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="536" fg:w="1"/><text x="87.8317%" y="943.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="87.5817%" y="917" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="536" fg:w="1"/><text x="87.8317%" y="927.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="87.5817%" y="901" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="536" fg:w="1"/><text x="87.8317%" y="911.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="87.5817%" y="885" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="536" fg:w="1"/><text x="87.8317%" y="895.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="87.5817%" y="869" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="536" fg:w="1"/><text x="87.8317%" y="879.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="87.5817%" y="853" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="536" fg:w="1"/><text x="87.8317%" y="863.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="87.5817%" y="837" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="536" fg:w="1"/><text x="87.8317%" y="847.50"></text></g><g><title>aho_corasick::packed::api::Builder::build (1 samples, 0.16%)</title><rect x="87.7451%" y="1061" width="0.1634%" height="15" fill="rgb(245,1,41)" fg:x="537" fg:w="1"/><text x="87.9951%" y="1071.50"></text></g><g><title>aho_corasick::packed::api::Builder::build_teddy (1 samples, 0.16%)</title><rect x="87.7451%" y="1045" width="0.1634%" height="15" fill="rgb(225,159,12)" fg:x="537" fg:w="1"/><text x="87.9951%" y="1055.50"></text></g><g><title>aho_corasick::packed::teddy::builder::Builder::build (1 samples, 0.16%)</title><rect x="87.7451%" y="1029" width="0.1634%" height="15" fill="rgb(235,121,30)" fg:x="537" fg:w="1"/><text x="87.9951%" y="1039.50"></text></g><g><title>aho_corasick::packed::teddy::builder::Builder::build_imp (1 samples, 0.16%)</title><rect x="87.7451%" y="1013" width="0.1634%" height="15" fill="rgb(237,147,11)" fg:x="537" fg:w="1"/><text x="87.9951%" y="1023.50"></text></g><g><title>aho_corasick::packed::teddy::builder::x86_64::FatAVX2&lt;3_usize&gt;::new (1 samples, 0.16%)</title><rect x="87.7451%" y="997" width="0.1634%" height="15" fill="rgb(226,175,4)" fg:x="537" fg:w="1"/><text x="87.9951%" y="1007.50"></text></g><g><title>aho_corasick::packed::teddy::builder::x86_64::FatAVX2&lt;3_usize&gt;::new_unchecked (1 samples, 0.16%)</title><rect x="87.7451%" y="981" width="0.1634%" height="15" fill="rgb(208,2,1)" fg:x="537" fg:w="1"/><text x="87.9951%" y="991.50"></text></g><g><title>aho_corasick::packed::teddy::generic::Fat&lt;V,_&gt;::new (1 samples, 0.16%)</title><rect x="87.7451%" y="965" width="0.1634%" height="15" fill="rgb(246,12,28)" fg:x="537" fg:w="1"/><text x="87.9951%" y="975.50"></text></g><g><title>aho_corasick::packed::teddy::generic::Teddy&lt;_&gt;::new (1 samples, 0.16%)</title><rect x="87.7451%" y="949" width="0.1634%" height="15" fill="rgb(246,138,28)" fg:x="537" fg:w="1"/><text x="87.9951%" y="959.50"></text></g><g><title>aho_corasick::packed::pattern::Pattern::low_nybbles (1 samples, 0.16%)</title><rect x="87.7451%" y="933" width="0.1634%" height="15" fill="rgb(224,30,36)" fg:x="537" fg:w="1"/><text x="87.9951%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (1 samples, 0.16%)</title><rect x="87.7451%" y="917" width="0.1634%" height="15" fill="rgb(241,79,3)" fg:x="537" fg:w="1"/><text x="87.9951%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::shrink_to_fit (1 samples, 0.16%)</title><rect x="87.7451%" y="901" width="0.1634%" height="15" fill="rgb(242,210,14)" fg:x="537" fg:w="1"/><text x="87.9951%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.16%)</title><rect x="87.9085%" y="981" width="0.1634%" height="15" fill="rgb(239,104,10)" fg:x="538" fg:w="1"/><text x="88.1585%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.16%)</title><rect x="87.9085%" y="965" width="0.1634%" height="15" fill="rgb(229,121,46)" fg:x="538" fg:w="1"/><text x="88.1585%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.16%)</title><rect x="87.9085%" y="949" width="0.1634%" height="15" fill="rgb(221,172,50)" fg:x="538" fg:w="1"/><text x="88.1585%" y="959.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.16%)</title><rect x="87.9085%" y="933" width="0.1634%" height="15" fill="rgb(216,42,52)" fg:x="538" fg:w="1"/><text x="88.1585%" y="943.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.16%)</title><rect x="87.9085%" y="917" width="0.1634%" height="15" fill="rgb(222,107,1)" fg:x="538" fg:w="1"/><text x="88.1585%" y="927.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.16%)</title><rect x="87.9085%" y="901" width="0.1634%" height="15" fill="rgb(214,20,35)" fg:x="538" fg:w="1"/><text x="88.1585%" y="911.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.16%)</title><rect x="87.9085%" y="885" width="0.1634%" height="15" fill="rgb(217,126,36)" fg:x="538" fg:w="1"/><text x="88.1585%" y="895.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Compiler::shuffle (2 samples, 0.33%)</title><rect x="87.9085%" y="1013" width="0.3268%" height="15" fill="rgb(236,25,7)" fg:x="538" fg:w="2"/><text x="88.1585%" y="1023.50"></text></g><g><title>aho_corasick::util::remapper::Remapper::remap (2 samples, 0.33%)</title><rect x="87.9085%" y="997" width="0.3268%" height="15" fill="rgb(226,227,45)" fg:x="538" fg:w="2"/><text x="88.1585%" y="1007.50"></text></g><g><title>&lt;aho_corasick::nfa::noncontiguous::NFA as aho_corasick::util::remapper::Remappable&gt;::remap (1 samples, 0.16%)</title><rect x="88.0719%" y="981" width="0.1634%" height="15" fill="rgb(226,108,34)" fg:x="539" fg:w="1"/><text x="88.3219%" y="991.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::NFA::remap (1 samples, 0.16%)</title><rect x="88.0719%" y="965" width="0.1634%" height="15" fill="rgb(254,74,25)" fg:x="539" fg:w="1"/><text x="88.3219%" y="975.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Compiler::init_unanchored_start_state (2 samples, 0.33%)</title><rect x="88.2353%" y="1013" width="0.3268%" height="15" fill="rgb(218,74,0)" fg:x="540" fg:w="2"/><text x="88.4853%" y="1023.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::NFA::init_full_state (2 samples, 0.33%)</title><rect x="88.2353%" y="997" width="0.3268%" height="15" fill="rgb(245,136,4)" fg:x="540" fg:w="2"/><text x="88.4853%" y="1007.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::NFA::alloc_transition (2 samples, 0.33%)</title><rect x="88.2353%" y="981" width="0.3268%" height="15" fill="rgb(232,168,37)" fg:x="540" fg:w="2"/><text x="88.4853%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.33%)</title><rect x="88.2353%" y="965" width="0.3268%" height="15" fill="rgb(241,229,15)" fg:x="540" fg:w="2"/><text x="88.4853%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.33%)</title><rect x="88.2353%" y="949" width="0.3268%" height="15" fill="rgb(254,103,39)" fg:x="540" fg:w="2"/><text x="88.4853%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.33%)</title><rect x="88.2353%" y="933" width="0.3268%" height="15" fill="rgb(254,53,35)" fg:x="540" fg:w="2"/><text x="88.4853%" y="943.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.33%)</title><rect x="88.2353%" y="917" width="0.3268%" height="15" fill="rgb(237,133,22)" fg:x="540" fg:w="2"/><text x="88.4853%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.33%)</title><rect x="88.2353%" y="901" width="0.3268%" height="15" fill="rgb(237,156,49)" fg:x="540" fg:w="2"/><text x="88.4853%" y="911.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.33%)</title><rect x="88.2353%" y="885" width="0.3268%" height="15" fill="rgb(214,150,36)" fg:x="540" fg:w="2"/><text x="88.4853%" y="895.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.33%)</title><rect x="88.2353%" y="869" width="0.3268%" height="15" fill="rgb(254,47,34)" fg:x="540" fg:w="2"/><text x="88.4853%" y="879.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.33%)</title><rect x="88.2353%" y="853" width="0.3268%" height="15" fill="rgb(254,73,4)" fg:x="540" fg:w="2"/><text x="88.4853%" y="863.50"></text></g><g><title>_int_realloc (2 samples, 0.33%)</title><rect x="88.2353%" y="837" width="0.3268%" height="15" fill="rgb(231,75,41)" fg:x="540" fg:w="2"/><text x="88.4853%" y="847.50"></text></g><g><title>_int_malloc (2 samples, 0.33%)</title><rect x="88.2353%" y="821" width="0.3268%" height="15" fill="rgb(222,219,51)" fg:x="540" fg:w="2"/><text x="88.4853%" y="831.50"></text></g><g><title>malloc_consolidate (2 samples, 0.33%)</title><rect x="88.2353%" y="805" width="0.3268%" height="15" fill="rgb(228,194,39)" fg:x="540" fg:w="2"/><text x="88.4853%" y="815.50"></text></g><g><title>regex_automata::util::prefilter::teddy::Teddy::new (6 samples, 0.98%)</title><rect x="87.7451%" y="1077" width="0.9804%" height="15" fill="rgb(207,155,0)" fg:x="537" fg:w="6"/><text x="87.9951%" y="1087.50"></text></g><g><title>aho_corasick::dfa::Builder::build (5 samples, 0.82%)</title><rect x="87.9085%" y="1061" width="0.8170%" height="15" fill="rgb(212,91,25)" fg:x="538" fg:w="5"/><text x="88.1585%" y="1071.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Builder::build (5 samples, 0.82%)</title><rect x="87.9085%" y="1045" width="0.8170%" height="15" fill="rgb(235,33,22)" fg:x="538" fg:w="5"/><text x="88.1585%" y="1055.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Compiler::compile (5 samples, 0.82%)</title><rect x="87.9085%" y="1029" width="0.8170%" height="15" fill="rgb(253,203,15)" fg:x="538" fg:w="5"/><text x="88.1585%" y="1039.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Compiler::build_trie (1 samples, 0.16%)</title><rect x="88.5621%" y="1013" width="0.1634%" height="15" fill="rgb(206,127,45)" fg:x="542" fg:w="1"/><text x="88.8121%" y="1023.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::NFA::follow_transition (1 samples, 0.16%)</title><rect x="88.5621%" y="997" width="0.1634%" height="15" fill="rgb(245,172,39)" fg:x="542" fg:w="1"/><text x="88.8121%" y="1007.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::NFA::follow_transition_sparse (1 samples, 0.16%)</title><rect x="88.5621%" y="981" width="0.1634%" height="15" fill="rgb(231,136,53)" fg:x="542" fg:w="1"/><text x="88.8121%" y="991.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Compiler::shuffle (1 samples, 0.16%)</title><rect x="88.7255%" y="1013" width="0.1634%" height="15" fill="rgb(236,25,7)" fg:x="543" fg:w="1"/><text x="88.9755%" y="1023.50"></text></g><g><title>aho_corasick::util::remapper::Remapper::remap (1 samples, 0.16%)</title><rect x="88.7255%" y="997" width="0.1634%" height="15" fill="rgb(226,227,45)" fg:x="543" fg:w="1"/><text x="88.9755%" y="1007.50"></text></g><g><title>&lt;aho_corasick::nfa::noncontiguous::NFA as aho_corasick::util::remapper::Remappable&gt;::remap (1 samples, 0.16%)</title><rect x="88.7255%" y="981" width="0.1634%" height="15" fill="rgb(226,108,34)" fg:x="543" fg:w="1"/><text x="88.9755%" y="991.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::NFA::remap (1 samples, 0.16%)</title><rect x="88.7255%" y="965" width="0.1634%" height="15" fill="rgb(254,74,25)" fg:x="543" fg:w="1"/><text x="88.9755%" y="975.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Compiler::densify (1 samples, 0.16%)</title><rect x="88.8889%" y="1013" width="0.1634%" height="15" fill="rgb(238,72,18)" fg:x="544" fg:w="1"/><text x="89.1389%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.16%)</title><rect x="88.8889%" y="997" width="0.1634%" height="15" fill="rgb(218,6,47)" fg:x="544" fg:w="1"/><text x="89.1389%" y="1007.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.16%)</title><rect x="88.8889%" y="981" width="0.1634%" height="15" fill="rgb(228,30,25)" fg:x="544" fg:w="1"/><text x="89.1389%" y="991.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.16%)</title><rect x="88.8889%" y="965" width="0.1634%" height="15" fill="rgb(215,184,34)" fg:x="544" fg:w="1"/><text x="89.1389%" y="975.50"></text></g><g><title>regex_automata::meta::strategy::ReverseInner::new (9 samples, 1.47%)</title><rect x="87.7451%" y="1189" width="1.4706%" height="15" fill="rgb(225,146,32)" fg:x="537" fg:w="9"/><text x="87.9951%" y="1199.50"></text></g><g><title>regex_automata::meta::reverse_inner::extract (9 samples, 1.47%)</title><rect x="87.7451%" y="1173" width="1.4706%" height="15" fill="rgb(209,78,45)" fg:x="537" fg:w="9"/><text x="87.9951%" y="1183.50"></text></g><g><title>regex_automata::meta::reverse_inner::prefilter (9 samples, 1.47%)</title><rect x="87.7451%" y="1157" width="1.4706%" height="15" fill="rgb(221,50,42)" fg:x="537" fg:w="9"/><text x="87.9951%" y="1167.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (9 samples, 1.47%)</title><rect x="87.7451%" y="1141" width="1.4706%" height="15" fill="rgb(225,8,7)" fg:x="537" fg:w="9"/><text x="87.9951%" y="1151.50"></text></g><g><title>regex_automata::meta::reverse_inner::prefilter::{{closure}} (9 samples, 1.47%)</title><rect x="87.7451%" y="1125" width="1.4706%" height="15" fill="rgb(234,195,1)" fg:x="537" fg:w="9"/><text x="87.9951%" y="1135.50"></text></g><g><title>regex_automata::util::prefilter::Prefilter::new (9 samples, 1.47%)</title><rect x="87.7451%" y="1109" width="1.4706%" height="15" fill="rgb(227,199,27)" fg:x="537" fg:w="9"/><text x="87.9951%" y="1119.50"></text></g><g><title>regex_automata::util::prefilter::Choice::new (9 samples, 1.47%)</title><rect x="87.7451%" y="1093" width="1.4706%" height="15" fill="rgb(243,64,33)" fg:x="537" fg:w="9"/><text x="87.9951%" y="1103.50"></text></g><g><title>regex_automata::util::prefilter::aho_corasick::AhoCorasick::new (3 samples, 0.49%)</title><rect x="88.7255%" y="1077" width="0.4902%" height="15" fill="rgb(212,202,50)" fg:x="543" fg:w="3"/><text x="88.9755%" y="1087.50"></text></g><g><title>aho_corasick::ahocorasick::AhoCorasickBuilder::build (3 samples, 0.49%)</title><rect x="88.7255%" y="1061" width="0.4902%" height="15" fill="rgb(223,55,42)" fg:x="543" fg:w="3"/><text x="88.9755%" y="1071.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Builder::build (3 samples, 0.49%)</title><rect x="88.7255%" y="1045" width="0.4902%" height="15" fill="rgb(235,33,22)" fg:x="543" fg:w="3"/><text x="88.9755%" y="1055.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Compiler::compile (3 samples, 0.49%)</title><rect x="88.7255%" y="1029" width="0.4902%" height="15" fill="rgb(253,203,15)" fg:x="543" fg:w="3"/><text x="88.9755%" y="1039.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Compiler::build_trie (1 samples, 0.16%)</title><rect x="89.0523%" y="1013" width="0.1634%" height="15" fill="rgb(206,127,45)" fg:x="545" fg:w="1"/><text x="89.3023%" y="1023.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::NFA::add_transition (1 samples, 0.16%)</title><rect x="89.0523%" y="997" width="0.1634%" height="15" fill="rgb(213,191,43)" fg:x="545" fg:w="1"/><text x="89.3023%" y="1007.50"></text></g><g><title>regex_automata::meta::strategy::new (10 samples, 1.63%)</title><rect x="87.7451%" y="1205" width="1.6340%" height="15" fill="rgb(243,171,22)" fg:x="537" fg:w="10"/><text x="87.9951%" y="1215.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.16%)</title><rect x="89.2157%" y="1189" width="0.1634%" height="15" fill="rgb(225,8,7)" fg:x="546" fg:w="1"/><text x="89.4657%" y="1199.50"></text></g><g><title>regex_automata::meta::strategy::new::{{closure}} (1 samples, 0.16%)</title><rect x="89.2157%" y="1173" width="0.1634%" height="15" fill="rgb(238,100,15)" fg:x="546" fg:w="1"/><text x="89.4657%" y="1183.50"></text></g><g><title>regex_automata::util::prefilter::Prefilter::new (1 samples, 0.16%)</title><rect x="89.2157%" y="1157" width="0.1634%" height="15" fill="rgb(227,199,27)" fg:x="546" fg:w="1"/><text x="89.4657%" y="1167.50"></text></g><g><title>regex_automata::util::prefilter::Choice::new (1 samples, 0.16%)</title><rect x="89.2157%" y="1141" width="0.1634%" height="15" fill="rgb(243,64,33)" fg:x="546" fg:w="1"/><text x="89.4657%" y="1151.50"></text></g><g><title>regex_automata::util::prefilter::teddy::Teddy::new (1 samples, 0.16%)</title><rect x="89.2157%" y="1125" width="0.1634%" height="15" fill="rgb(207,155,0)" fg:x="546" fg:w="1"/><text x="89.4657%" y="1135.50"></text></g><g><title>aho_corasick::dfa::Builder::build (1 samples, 0.16%)</title><rect x="89.2157%" y="1109" width="0.1634%" height="15" fill="rgb(212,91,25)" fg:x="546" fg:w="1"/><text x="89.4657%" y="1119.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Builder::build (1 samples, 0.16%)</title><rect x="89.2157%" y="1093" width="0.1634%" height="15" fill="rgb(235,33,22)" fg:x="546" fg:w="1"/><text x="89.4657%" y="1103.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Compiler::compile (1 samples, 0.16%)</title><rect x="89.2157%" y="1077" width="0.1634%" height="15" fill="rgb(253,203,15)" fg:x="546" fg:w="1"/><text x="89.4657%" y="1087.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Compiler::shuffle (1 samples, 0.16%)</title><rect x="89.2157%" y="1061" width="0.1634%" height="15" fill="rgb(236,25,7)" fg:x="546" fg:w="1"/><text x="89.4657%" y="1071.50"></text></g><g><title>aho_corasick::util::remapper::Remapper::remap (1 samples, 0.16%)</title><rect x="89.2157%" y="1045" width="0.1634%" height="15" fill="rgb(226,227,45)" fg:x="546" fg:w="1"/><text x="89.4657%" y="1055.50"></text></g><g><title>&lt;aho_corasick::nfa::noncontiguous::NFA as aho_corasick::util::remapper::Remappable&gt;::remap (1 samples, 0.16%)</title><rect x="89.2157%" y="1029" width="0.1634%" height="15" fill="rgb(226,108,34)" fg:x="546" fg:w="1"/><text x="89.4657%" y="1039.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::NFA::remap (1 samples, 0.16%)</title><rect x="89.2157%" y="1013" width="0.1634%" height="15" fill="rgb(254,74,25)" fg:x="546" fg:w="1"/><text x="89.4657%" y="1023.50"></text></g><g><title>aho_corasick::dfa::Builder::finish_build_one_start::{{closure}} (2 samples, 0.33%)</title><rect x="89.3791%" y="933" width="0.3268%" height="15" fill="rgb(251,205,26)" fg:x="547" fg:w="2"/><text x="89.6291%" y="943.50"></text></g><g><title>regex_automata::util::prefilter::teddy::Teddy::new (3 samples, 0.49%)</title><rect x="89.3791%" y="1029" width="0.4902%" height="15" fill="rgb(207,155,0)" fg:x="547" fg:w="3"/><text x="89.6291%" y="1039.50"></text></g><g><title>aho_corasick::dfa::Builder::build (3 samples, 0.49%)</title><rect x="89.3791%" y="1013" width="0.4902%" height="15" fill="rgb(212,91,25)" fg:x="547" fg:w="3"/><text x="89.6291%" y="1023.50"></text></g><g><title>aho_corasick::dfa::Builder::build_from_noncontiguous (3 samples, 0.49%)</title><rect x="89.3791%" y="997" width="0.4902%" height="15" fill="rgb(231,220,22)" fg:x="547" fg:w="3"/><text x="89.6291%" y="1007.50"></text></g><g><title>aho_corasick::dfa::Builder::finish_build_one_start (3 samples, 0.49%)</title><rect x="89.3791%" y="981" width="0.4902%" height="15" fill="rgb(242,31,54)" fg:x="547" fg:w="3"/><text x="89.6291%" y="991.50"></text></g><g><title>aho_corasick::dfa::sparse_iter (3 samples, 0.49%)</title><rect x="89.3791%" y="965" width="0.4902%" height="15" fill="rgb(223,225,36)" fg:x="547" fg:w="3"/><text x="89.6291%" y="975.50"></text></g><g><title>aho_corasick::dfa::Builder::finish_build_one_start::{{closure}} (3 samples, 0.49%)</title><rect x="89.3791%" y="949" width="0.4902%" height="15" fill="rgb(251,205,26)" fg:x="547" fg:w="3"/><text x="89.6291%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.16%)</title><rect x="89.7059%" y="933" width="0.1634%" height="15" fill="rgb(218,6,47)" fg:x="549" fg:w="1"/><text x="89.9559%" y="943.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.16%)</title><rect x="89.7059%" y="917" width="0.1634%" height="15" fill="rgb(228,30,25)" fg:x="549" fg:w="1"/><text x="89.9559%" y="927.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.16%)</title><rect x="89.7059%" y="901" width="0.1634%" height="15" fill="rgb(215,184,34)" fg:x="549" fg:w="1"/><text x="89.9559%" y="911.50"></text></g><g><title>regex_automata::meta::strategy::ReverseInner::new (4 samples, 0.65%)</title><rect x="89.3791%" y="1141" width="0.6536%" height="15" fill="rgb(225,146,32)" fg:x="547" fg:w="4"/><text x="89.6291%" y="1151.50"></text></g><g><title>regex_automata::meta::reverse_inner::extract (4 samples, 0.65%)</title><rect x="89.3791%" y="1125" width="0.6536%" height="15" fill="rgb(209,78,45)" fg:x="547" fg:w="4"/><text x="89.6291%" y="1135.50"></text></g><g><title>regex_automata::meta::reverse_inner::prefilter (4 samples, 0.65%)</title><rect x="89.3791%" y="1109" width="0.6536%" height="15" fill="rgb(221,50,42)" fg:x="547" fg:w="4"/><text x="89.6291%" y="1119.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (4 samples, 0.65%)</title><rect x="89.3791%" y="1093" width="0.6536%" height="15" fill="rgb(225,8,7)" fg:x="547" fg:w="4"/><text x="89.6291%" y="1103.50"></text></g><g><title>regex_automata::meta::reverse_inner::prefilter::{{closure}} (4 samples, 0.65%)</title><rect x="89.3791%" y="1077" width="0.6536%" height="15" fill="rgb(234,195,1)" fg:x="547" fg:w="4"/><text x="89.6291%" y="1087.50"></text></g><g><title>regex_automata::util::prefilter::Prefilter::new (4 samples, 0.65%)</title><rect x="89.3791%" y="1061" width="0.6536%" height="15" fill="rgb(227,199,27)" fg:x="547" fg:w="4"/><text x="89.6291%" y="1071.50"></text></g><g><title>regex_automata::util::prefilter::Choice::new (4 samples, 0.65%)</title><rect x="89.3791%" y="1045" width="0.6536%" height="15" fill="rgb(243,64,33)" fg:x="547" fg:w="4"/><text x="89.6291%" y="1055.50"></text></g><g><title>regex_automata::util::prefilter::aho_corasick::AhoCorasick::new (1 samples, 0.16%)</title><rect x="89.8693%" y="1029" width="0.1634%" height="15" fill="rgb(212,202,50)" fg:x="550" fg:w="1"/><text x="90.1193%" y="1039.50"></text></g><g><title>aho_corasick::ahocorasick::AhoCorasickBuilder::build (1 samples, 0.16%)</title><rect x="89.8693%" y="1013" width="0.1634%" height="15" fill="rgb(223,55,42)" fg:x="550" fg:w="1"/><text x="90.1193%" y="1023.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (1 samples, 0.16%)</title><rect x="89.8693%" y="997" width="0.1634%" height="15" fill="rgb(221,10,3)" fg:x="550" fg:w="1"/><text x="90.1193%" y="1007.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class (1 samples, 0.16%)</title><rect x="90.0327%" y="757" width="0.1634%" height="15" fill="rgb(246,38,12)" fg:x="551" fg:w="1"/><text x="90.2827%" y="767.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::new (1 samples, 0.16%)</title><rect x="90.0327%" y="741" width="0.1634%" height="15" fill="rgb(211,200,20)" fg:x="551" fg:w="1"/><text x="90.2827%" y="751.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8State::clear (1 samples, 0.16%)</title><rect x="90.0327%" y="725" width="0.1634%" height="15" fill="rgb(241,127,0)" fg:x="551" fg:w="1"/><text x="90.2827%" y="735.50"></text></g><g><title>regex_automata::nfa::thompson::map::Utf8BoundedMap::clear (1 samples, 0.16%)</title><rect x="90.0327%" y="709" width="0.1634%" height="15" fill="rgb(207,86,25)" fg:x="551" fg:w="1"/><text x="90.2827%" y="719.50"></text></g><g><title>alloc::vec::from_elem (1 samples, 0.16%)</title><rect x="90.0327%" y="693" width="0.1634%" height="15" fill="rgb(208,109,54)" fg:x="551" fg:w="1"/><text x="90.2827%" y="703.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1 samples, 0.16%)</title><rect x="90.0327%" y="677" width="0.1634%" height="15" fill="rgb(228,177,24)" fg:x="551" fg:w="1"/><text x="90.2827%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.16%)</title><rect x="90.0327%" y="661" width="0.1634%" height="15" fill="rgb(249,207,12)" fg:x="551" fg:w="1"/><text x="90.2827%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.16%)</title><rect x="90.0327%" y="645" width="0.1634%" height="15" fill="rgb(224,194,14)" fg:x="551" fg:w="1"/><text x="90.2827%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.16%)</title><rect x="90.0327%" y="629" width="0.1634%" height="15" fill="rgb(227,204,5)" fg:x="551" fg:w="1"/><text x="90.2827%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.16%)</title><rect x="90.0327%" y="613" width="0.1634%" height="15" fill="rgb(231,114,21)" fg:x="551" fg:w="1"/><text x="90.2827%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.16%)</title><rect x="90.0327%" y="597" width="0.1634%" height="15" fill="rgb(238,209,2)" fg:x="551" fg:w="1"/><text x="90.2827%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.16%)</title><rect x="90.0327%" y="581" width="0.1634%" height="15" fill="rgb(253,135,41)" fg:x="551" fg:w="1"/><text x="90.2827%" y="591.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.16%)</title><rect x="90.0327%" y="565" width="0.1634%" height="15" fill="rgb(206,112,53)" fg:x="551" fg:w="1"/><text x="90.2827%" y="575.50"></text></g><g><title>_int_malloc (1 samples, 0.16%)</title><rect x="90.0327%" y="549" width="0.1634%" height="15" fill="rgb(222,219,51)" fg:x="551" fg:w="1"/><text x="90.2827%" y="559.50"></text></g><g><title>sysmalloc (1 samples, 0.16%)</title><rect x="90.0327%" y="533" width="0.1634%" height="15" fill="rgb(237,64,10)" fg:x="551" fg:w="1"/><text x="90.2827%" y="543.50"></text></g><g><title>grow_heap (1 samples, 0.16%)</title><rect x="90.0327%" y="517" width="0.1634%" height="15" fill="rgb(231,135,3)" fg:x="551" fg:w="1"/><text x="90.2827%" y="527.50"></text></g><g><title>__GI___mprotect (1 samples, 0.16%)</title><rect x="90.0327%" y="501" width="0.1634%" height="15" fill="rgb(209,155,30)" fg:x="551" fg:w="1"/><text x="90.2827%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="90.0327%" y="485" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="551" fg:w="1"/><text x="90.2827%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="90.0327%" y="469" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="551" fg:w="1"/><text x="90.2827%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="90.0327%" y="453" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="551" fg:w="1"/><text x="90.2827%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="90.0327%" y="437" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="551" fg:w="1"/><text x="90.2827%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="90.0327%" y="421" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="551" fg:w="1"/><text x="90.2827%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="90.0327%" y="405" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="551" fg:w="1"/><text x="90.2827%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="90.0327%" y="389" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="551" fg:w="1"/><text x="90.2827%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="90.0327%" y="373" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="551" fg:w="1"/><text x="90.2827%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="90.0327%" y="357" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="551" fg:w="1"/><text x="90.2827%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="90.0327%" y="341" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="551" fg:w="1"/><text x="90.2827%" y="351.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="90.0327%" y="325" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="551" fg:w="1"/><text x="90.2827%" y="335.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="90.0327%" y="309" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="551" fg:w="1"/><text x="90.2827%" y="319.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="90.0327%" y="293" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="551" fg:w="1"/><text x="90.2827%" y="303.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="90.1961%" y="405" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="552" fg:w="1"/><text x="90.4461%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.33%)</title><rect x="90.1961%" y="453" width="0.3268%" height="15" fill="rgb(210,204,4)" fg:x="552" fg:w="2"/><text x="90.4461%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.33%)</title><rect x="90.1961%" y="437" width="0.3268%" height="15" fill="rgb(210,204,4)" fg:x="552" fg:w="2"/><text x="90.4461%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.33%)</title><rect x="90.1961%" y="421" width="0.3268%" height="15" fill="rgb(210,204,4)" fg:x="552" fg:w="2"/><text x="90.4461%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.49%)</title><rect x="90.1961%" y="533" width="0.4902%" height="15" fill="rgb(210,204,4)" fg:x="552" fg:w="3"/><text x="90.4461%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.49%)</title><rect x="90.1961%" y="517" width="0.4902%" height="15" fill="rgb(210,204,4)" fg:x="552" fg:w="3"/><text x="90.4461%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.49%)</title><rect x="90.1961%" y="501" width="0.4902%" height="15" fill="rgb(210,204,4)" fg:x="552" fg:w="3"/><text x="90.4461%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.49%)</title><rect x="90.1961%" y="485" width="0.4902%" height="15" fill="rgb(210,204,4)" fg:x="552" fg:w="3"/><text x="90.4461%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.49%)</title><rect x="90.1961%" y="469" width="0.4902%" height="15" fill="rgb(210,204,4)" fg:x="552" fg:w="3"/><text x="90.4461%" y="479.50"></text></g><g><title>core::ptr::write (4 samples, 0.65%)</title><rect x="90.1961%" y="549" width="0.6536%" height="15" fill="rgb(209,143,44)" fg:x="552" fg:w="4"/><text x="90.4461%" y="559.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.16%)</title><rect x="90.8497%" y="549" width="0.1634%" height="15" fill="rgb(246,165,53)" fg:x="556" fg:w="1"/><text x="91.0997%" y="559.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.16%)</title><rect x="90.8497%" y="533" width="0.1634%" height="15" fill="rgb(226,134,37)" fg:x="556" fg:w="1"/><text x="91.0997%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.16%)</title><rect x="90.8497%" y="517" width="0.1634%" height="15" fill="rgb(232,29,30)" fg:x="556" fg:w="1"/><text x="91.0997%" y="527.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::new (7 samples, 1.14%)</title><rect x="90.1961%" y="645" width="1.1438%" height="15" fill="rgb(211,200,20)" fg:x="552" fg:w="7"/><text x="90.4461%" y="655.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8State::clear (7 samples, 1.14%)</title><rect x="90.1961%" y="629" width="1.1438%" height="15" fill="rgb(241,127,0)" fg:x="552" fg:w="7"/><text x="90.4461%" y="639.50"></text></g><g><title>regex_automata::nfa::thompson::map::Utf8BoundedMap::clear (7 samples, 1.14%)</title><rect x="90.1961%" y="613" width="1.1438%" height="15" fill="rgb(207,86,25)" fg:x="552" fg:w="7"/><text x="90.4461%" y="623.50"></text></g><g><title>alloc::vec::from_elem (7 samples, 1.14%)</title><rect x="90.1961%" y="597" width="1.1438%" height="15" fill="rgb(208,109,54)" fg:x="552" fg:w="7"/><text x="90.4461%" y="607.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (7 samples, 1.14%)</title><rect x="90.1961%" y="581" width="1.1438%" height="15" fill="rgb(228,177,24)" fg:x="552" fg:w="7"/><text x="90.4461%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (7 samples, 1.14%)</title><rect x="90.1961%" y="565" width="1.1438%" height="15" fill="rgb(216,52,5)" fg:x="552" fg:w="7"/><text x="90.4461%" y="575.50"></text></g><g><title>&lt;alloc::vec::ExtendElement&lt;T&gt; as alloc::vec::ExtendWith&lt;T&gt;&gt;::next (2 samples, 0.33%)</title><rect x="91.0131%" y="549" width="0.3268%" height="15" fill="rgb(216,123,15)" fg:x="557" fg:w="2"/><text x="91.2631%" y="559.50"></text></g><g><title>&lt;regex_automata::nfa::thompson::map::Utf8BoundedEntry as core::clone::Clone&gt;::clone (2 samples, 0.33%)</title><rect x="91.0131%" y="533" width="0.3268%" height="15" fill="rgb(211,18,41)" fg:x="557" fg:w="2"/><text x="91.2631%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.33%)</title><rect x="91.0131%" y="517" width="0.3268%" height="15" fill="rgb(239,104,10)" fg:x="557" fg:w="2"/><text x="91.2631%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.33%)</title><rect x="91.0131%" y="501" width="0.3268%" height="15" fill="rgb(229,121,46)" fg:x="557" fg:w="2"/><text x="91.2631%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.33%)</title><rect x="91.0131%" y="485" width="0.3268%" height="15" fill="rgb(221,172,50)" fg:x="557" fg:w="2"/><text x="91.2631%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.33%)</title><rect x="91.0131%" y="469" width="0.3268%" height="15" fill="rgb(216,42,52)" fg:x="557" fg:w="2"/><text x="91.2631%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.33%)</title><rect x="91.0131%" y="453" width="0.3268%" height="15" fill="rgb(222,107,1)" fg:x="557" fg:w="2"/><text x="91.2631%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.33%)</title><rect x="91.0131%" y="437" width="0.3268%" height="15" fill="rgb(214,20,35)" fg:x="557" fg:w="2"/><text x="91.2631%" y="447.50"></text></g><g><title>__memmove_avx512_unaligned_erms (2 samples, 0.33%)</title><rect x="91.0131%" y="421" width="0.3268%" height="15" fill="rgb(217,126,36)" fg:x="557" fg:w="2"/><text x="91.2631%" y="431.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::add_empty (1 samples, 0.16%)</title><rect x="91.3399%" y="645" width="0.1634%" height="15" fill="rgb(245,57,0)" fg:x="559" fg:w="1"/><text x="91.5899%" y="655.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add_empty (1 samples, 0.16%)</title><rect x="91.3399%" y="629" width="0.1634%" height="15" fill="rgb(233,49,21)" fg:x="559" fg:w="1"/><text x="91.5899%" y="639.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add (1 samples, 0.16%)</title><rect x="91.3399%" y="613" width="0.1634%" height="15" fill="rgb(253,91,29)" fg:x="559" fg:w="1"/><text x="91.5899%" y="623.50"></text></g><g><title>regex_automata::meta::strategy::Core::new (10 samples, 1.63%)</title><rect x="90.0327%" y="1141" width="1.6340%" height="15" fill="rgb(222,69,27)" fg:x="551" fg:w="10"/><text x="90.2827%" y="1151.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (10 samples, 1.63%)</title><rect x="90.0327%" y="1125" width="1.6340%" height="15" fill="rgb(226,42,16)" fg:x="551" fg:w="10"/><text x="90.2827%" y="1135.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (10 samples, 1.63%)</title><rect x="90.0327%" y="1109" width="1.6340%" height="15" fill="rgb(242,129,17)" fg:x="551" fg:w="10"/><text x="90.2827%" y="1119.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (10 samples, 1.63%)</title><rect x="90.0327%" y="1093" width="1.6340%" height="15" fill="rgb(247,137,3)" fg:x="551" fg:w="10"/><text x="90.2827%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 1.63%)</title><rect x="90.0327%" y="1077" width="1.6340%" height="15" fill="rgb(214,109,53)" fg:x="551" fg:w="10"/><text x="90.2827%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (10 samples, 1.63%)</title><rect x="90.0327%" y="1061" width="1.6340%" height="15" fill="rgb(254,35,30)" fg:x="551" fg:w="10"/><text x="90.2827%" y="1071.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (10 samples, 1.63%)</title><rect x="90.0327%" y="1045" width="1.6340%" height="15" fill="rgb(226,169,23)" fg:x="551" fg:w="10"/><text x="90.2827%" y="1055.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile::{{closure}} (10 samples, 1.63%)</title><rect x="90.0327%" y="1029" width="1.6340%" height="15" fill="rgb(218,216,52)" fg:x="551" fg:w="10"/><text x="90.2827%" y="1039.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (10 samples, 1.63%)</title><rect x="90.0327%" y="1013" width="1.6340%" height="15" fill="rgb(235,200,16)" fg:x="551" fg:w="10"/><text x="90.2827%" y="1023.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (10 samples, 1.63%)</title><rect x="90.0327%" y="997" width="1.6340%" height="15" fill="rgb(213,34,18)" fg:x="551" fg:w="10"/><text x="90.2827%" y="1007.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (10 samples, 1.63%)</title><rect x="90.0327%" y="981" width="1.6340%" height="15" fill="rgb(210,105,37)" fg:x="551" fg:w="10"/><text x="90.2827%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 1.63%)</title><rect x="90.0327%" y="965" width="1.6340%" height="15" fill="rgb(214,109,53)" fg:x="551" fg:w="10"/><text x="90.2827%" y="975.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (10 samples, 1.63%)</title><rect x="90.0327%" y="949" width="1.6340%" height="15" fill="rgb(254,35,30)" fg:x="551" fg:w="10"/><text x="90.2827%" y="959.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (10 samples, 1.63%)</title><rect x="90.0327%" y="933" width="1.6340%" height="15" fill="rgb(226,169,23)" fg:x="551" fg:w="10"/><text x="90.2827%" y="943.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (10 samples, 1.63%)</title><rect x="90.0327%" y="917" width="1.6340%" height="15" fill="rgb(205,130,14)" fg:x="551" fg:w="10"/><text x="90.2827%" y="927.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (10 samples, 1.63%)</title><rect x="90.0327%" y="901" width="1.6340%" height="15" fill="rgb(235,200,16)" fg:x="551" fg:w="10"/><text x="90.2827%" y="911.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (10 samples, 1.63%)</title><rect x="90.0327%" y="885" width="1.6340%" height="15" fill="rgb(213,34,18)" fg:x="551" fg:w="10"/><text x="90.2827%" y="895.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (10 samples, 1.63%)</title><rect x="90.0327%" y="869" width="1.6340%" height="15" fill="rgb(253,35,22)" fg:x="551" fg:w="10"/><text x="90.2827%" y="879.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (10 samples, 1.63%)</title><rect x="90.0327%" y="853" width="1.6340%" height="15" fill="rgb(247,137,3)" fg:x="551" fg:w="10"/><text x="90.2827%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 1.63%)</title><rect x="90.0327%" y="837" width="1.6340%" height="15" fill="rgb(214,109,53)" fg:x="551" fg:w="10"/><text x="90.2827%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (10 samples, 1.63%)</title><rect x="90.0327%" y="821" width="1.6340%" height="15" fill="rgb(254,35,30)" fg:x="551" fg:w="10"/><text x="90.2827%" y="831.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (10 samples, 1.63%)</title><rect x="90.0327%" y="805" width="1.6340%" height="15" fill="rgb(226,169,23)" fg:x="551" fg:w="10"/><text x="90.2827%" y="815.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice::{{closure}} (10 samples, 1.63%)</title><rect x="90.0327%" y="789" width="1.6340%" height="15" fill="rgb(223,145,12)" fg:x="551" fg:w="10"/><text x="90.2827%" y="799.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (10 samples, 1.63%)</title><rect x="90.0327%" y="773" width="1.6340%" height="15" fill="rgb(213,34,18)" fg:x="551" fg:w="10"/><text x="90.2827%" y="783.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (9 samples, 1.47%)</title><rect x="90.1961%" y="757" width="1.4706%" height="15" fill="rgb(210,105,37)" fg:x="552" fg:w="9"/><text x="90.4461%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 1.47%)</title><rect x="90.1961%" y="741" width="1.4706%" height="15" fill="rgb(214,109,53)" fg:x="552" fg:w="9"/><text x="90.4461%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (9 samples, 1.47%)</title><rect x="90.1961%" y="725" width="1.4706%" height="15" fill="rgb(254,35,30)" fg:x="552" fg:w="9"/><text x="90.4461%" y="735.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (9 samples, 1.47%)</title><rect x="90.1961%" y="709" width="1.4706%" height="15" fill="rgb(226,169,23)" fg:x="552" fg:w="9"/><text x="90.4461%" y="719.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (9 samples, 1.47%)</title><rect x="90.1961%" y="693" width="1.4706%" height="15" fill="rgb(205,130,14)" fg:x="552" fg:w="9"/><text x="90.4461%" y="703.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (9 samples, 1.47%)</title><rect x="90.1961%" y="677" width="1.4706%" height="15" fill="rgb(213,34,18)" fg:x="552" fg:w="9"/><text x="90.4461%" y="687.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class (9 samples, 1.47%)</title><rect x="90.1961%" y="661" width="1.4706%" height="15" fill="rgb(246,38,12)" fg:x="552" fg:w="9"/><text x="90.4461%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.16%)</title><rect x="91.5033%" y="645" width="0.1634%" height="15" fill="rgb(253,154,22)" fg:x="560" fg:w="1"/><text x="91.7533%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.16%)</title><rect x="91.5033%" y="629" width="0.1634%" height="15" fill="rgb(249,207,12)" fg:x="560" fg:w="1"/><text x="91.7533%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.16%)</title><rect x="91.5033%" y="613" width="0.1634%" height="15" fill="rgb(224,194,14)" fg:x="560" fg:w="1"/><text x="91.7533%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.16%)</title><rect x="91.5033%" y="597" width="0.1634%" height="15" fill="rgb(227,204,5)" fg:x="560" fg:w="1"/><text x="91.7533%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.16%)</title><rect x="91.5033%" y="581" width="0.1634%" height="15" fill="rgb(231,114,21)" fg:x="560" fg:w="1"/><text x="91.7533%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.16%)</title><rect x="91.5033%" y="565" width="0.1634%" height="15" fill="rgb(238,209,2)" fg:x="560" fg:w="1"/><text x="91.7533%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.16%)</title><rect x="91.5033%" y="549" width="0.1634%" height="15" fill="rgb(253,135,41)" fg:x="560" fg:w="1"/><text x="91.7533%" y="559.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.16%)</title><rect x="91.5033%" y="533" width="0.1634%" height="15" fill="rgb(206,112,53)" fg:x="560" fg:w="1"/><text x="91.7533%" y="543.50"></text></g><g><title>_int_malloc (1 samples, 0.16%)</title><rect x="91.5033%" y="517" width="0.1634%" height="15" fill="rgb(222,219,51)" fg:x="560" fg:w="1"/><text x="91.7533%" y="527.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::NFA::follow_transition (1 samples, 0.16%)</title><rect x="91.6667%" y="997" width="0.1634%" height="15" fill="rgb(245,172,39)" fg:x="561" fg:w="1"/><text x="91.9167%" y="1007.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::NFA::follow_transition_sparse (1 samples, 0.16%)</title><rect x="91.6667%" y="981" width="0.1634%" height="15" fill="rgb(231,136,53)" fg:x="561" fg:w="1"/><text x="91.9167%" y="991.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (16 samples, 2.61%)</title><rect x="89.3791%" y="1205" width="2.6144%" height="15" fill="rgb(212,33,22)" fg:x="547" fg:w="16"/><text x="89.6291%" y="1215.50">re..</text></g><g><title>regex_automata::meta::regex::Builder::build_many (16 samples, 2.61%)</title><rect x="89.3791%" y="1189" width="2.6144%" height="15" fill="rgb(236,25,32)" fg:x="547" fg:w="16"/><text x="89.6291%" y="1199.50">re..</text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (16 samples, 2.61%)</title><rect x="89.3791%" y="1173" width="2.6144%" height="15" fill="rgb(250,142,30)" fg:x="547" fg:w="16"/><text x="89.6291%" y="1183.50">re..</text></g><g><title>regex_automata::meta::strategy::new (16 samples, 2.61%)</title><rect x="89.3791%" y="1157" width="2.6144%" height="15" fill="rgb(243,171,22)" fg:x="547" fg:w="16"/><text x="89.6291%" y="1167.50">re..</text></g><g><title>core::option::Option&lt;T&gt;::and_then (2 samples, 0.33%)</title><rect x="91.6667%" y="1141" width="0.3268%" height="15" fill="rgb(225,8,7)" fg:x="561" fg:w="2"/><text x="91.9167%" y="1151.50"></text></g><g><title>regex_automata::meta::strategy::new::{{closure}} (2 samples, 0.33%)</title><rect x="91.6667%" y="1125" width="0.3268%" height="15" fill="rgb(238,100,15)" fg:x="561" fg:w="2"/><text x="91.9167%" y="1135.50"></text></g><g><title>regex_automata::util::prefilter::Prefilter::new (2 samples, 0.33%)</title><rect x="91.6667%" y="1109" width="0.3268%" height="15" fill="rgb(227,199,27)" fg:x="561" fg:w="2"/><text x="91.9167%" y="1119.50"></text></g><g><title>regex_automata::util::prefilter::Choice::new (2 samples, 0.33%)</title><rect x="91.6667%" y="1093" width="0.3268%" height="15" fill="rgb(243,64,33)" fg:x="561" fg:w="2"/><text x="91.9167%" y="1103.50"></text></g><g><title>regex_automata::util::prefilter::teddy::Teddy::new (2 samples, 0.33%)</title><rect x="91.6667%" y="1077" width="0.3268%" height="15" fill="rgb(207,155,0)" fg:x="561" fg:w="2"/><text x="91.9167%" y="1087.50"></text></g><g><title>aho_corasick::dfa::Builder::build (2 samples, 0.33%)</title><rect x="91.6667%" y="1061" width="0.3268%" height="15" fill="rgb(212,91,25)" fg:x="561" fg:w="2"/><text x="91.9167%" y="1071.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Builder::build (2 samples, 0.33%)</title><rect x="91.6667%" y="1045" width="0.3268%" height="15" fill="rgb(235,33,22)" fg:x="561" fg:w="2"/><text x="91.9167%" y="1055.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Compiler::compile (2 samples, 0.33%)</title><rect x="91.6667%" y="1029" width="0.3268%" height="15" fill="rgb(253,203,15)" fg:x="561" fg:w="2"/><text x="91.9167%" y="1039.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Compiler::build_trie (2 samples, 0.33%)</title><rect x="91.6667%" y="1013" width="0.3268%" height="15" fill="rgb(206,127,45)" fg:x="561" fg:w="2"/><text x="91.9167%" y="1023.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::NFA::add_transition (1 samples, 0.16%)</title><rect x="91.8301%" y="997" width="0.1634%" height="15" fill="rgb(213,191,43)" fg:x="562" fg:w="1"/><text x="92.0801%" y="1007.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::compile (1 samples, 0.16%)</title><rect x="91.9935%" y="805" width="0.1634%" height="15" fill="rgb(233,39,2)" fg:x="563" fg:w="1"/><text x="92.2435%" y="815.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add_union (1 samples, 0.16%)</title><rect x="91.9935%" y="789" width="0.1634%" height="15" fill="rgb(247,38,8)" fg:x="563" fg:w="1"/><text x="92.2435%" y="799.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add (1 samples, 0.16%)</title><rect x="91.9935%" y="773" width="0.1634%" height="15" fill="rgb(253,91,29)" fg:x="563" fg:w="1"/><text x="92.2435%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.16%)</title><rect x="91.9935%" y="757" width="0.1634%" height="15" fill="rgb(241,229,15)" fg:x="563" fg:w="1"/><text x="92.2435%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.16%)</title><rect x="91.9935%" y="741" width="0.1634%" height="15" fill="rgb(254,103,39)" fg:x="563" fg:w="1"/><text x="92.2435%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.16%)</title><rect x="91.9935%" y="725" width="0.1634%" height="15" fill="rgb(254,53,35)" fg:x="563" fg:w="1"/><text x="92.2435%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.16%)</title><rect x="91.9935%" y="709" width="0.1634%" height="15" fill="rgb(237,133,22)" fg:x="563" fg:w="1"/><text x="92.2435%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.16%)</title><rect x="91.9935%" y="693" width="0.1634%" height="15" fill="rgb(237,156,49)" fg:x="563" fg:w="1"/><text x="92.2435%" y="703.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.16%)</title><rect x="91.9935%" y="677" width="0.1634%" height="15" fill="rgb(214,150,36)" fg:x="563" fg:w="1"/><text x="92.2435%" y="687.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.16%)</title><rect x="91.9935%" y="661" width="0.1634%" height="15" fill="rgb(254,47,34)" fg:x="563" fg:w="1"/><text x="92.2435%" y="671.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.16%)</title><rect x="91.9935%" y="645" width="0.1634%" height="15" fill="rgb(254,73,4)" fg:x="563" fg:w="1"/><text x="92.2435%" y="655.50"></text></g><g><title>_int_realloc (1 samples, 0.16%)</title><rect x="91.9935%" y="629" width="0.1634%" height="15" fill="rgb(231,75,41)" fg:x="563" fg:w="1"/><text x="92.2435%" y="639.50"></text></g><g><title>_int_malloc (1 samples, 0.16%)</title><rect x="91.9935%" y="613" width="0.1634%" height="15" fill="rgb(222,219,51)" fg:x="563" fg:w="1"/><text x="92.2435%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.33%)</title><rect x="91.9935%" y="917" width="0.3268%" height="15" fill="rgb(214,109,53)" fg:x="563" fg:w="2"/><text x="92.2435%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.33%)</title><rect x="91.9935%" y="901" width="0.3268%" height="15" fill="rgb(254,35,30)" fg:x="563" fg:w="2"/><text x="92.2435%" y="911.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.33%)</title><rect x="91.9935%" y="885" width="0.3268%" height="15" fill="rgb(226,169,23)" fg:x="563" fg:w="2"/><text x="92.2435%" y="895.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (2 samples, 0.33%)</title><rect x="91.9935%" y="869" width="0.3268%" height="15" fill="rgb(205,130,14)" fg:x="563" fg:w="2"/><text x="92.2435%" y="879.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (2 samples, 0.33%)</title><rect x="91.9935%" y="853" width="0.3268%" height="15" fill="rgb(235,200,16)" fg:x="563" fg:w="2"/><text x="92.2435%" y="863.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (2 samples, 0.33%)</title><rect x="91.9935%" y="837" width="0.3268%" height="15" fill="rgb(213,34,18)" fg:x="563" fg:w="2"/><text x="92.2435%" y="847.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (2 samples, 0.33%)</title><rect x="91.9935%" y="821" width="0.3268%" height="15" fill="rgb(253,35,22)" fg:x="563" fg:w="2"/><text x="92.2435%" y="831.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (1 samples, 0.16%)</title><rect x="92.1569%" y="805" width="0.1634%" height="15" fill="rgb(247,137,3)" fg:x="564" fg:w="1"/><text x="92.4069%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="92.1569%" y="789" width="0.1634%" height="15" fill="rgb(214,109,53)" fg:x="564" fg:w="1"/><text x="92.4069%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.16%)</title><rect x="92.1569%" y="773" width="0.1634%" height="15" fill="rgb(254,35,30)" fg:x="564" fg:w="1"/><text x="92.4069%" y="783.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.16%)</title><rect x="92.1569%" y="757" width="0.1634%" height="15" fill="rgb(226,169,23)" fg:x="564" fg:w="1"/><text x="92.4069%" y="767.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice::{{closure}} (1 samples, 0.16%)</title><rect x="92.1569%" y="741" width="0.1634%" height="15" fill="rgb(223,145,12)" fg:x="564" fg:w="1"/><text x="92.4069%" y="751.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.16%)</title><rect x="92.1569%" y="725" width="0.1634%" height="15" fill="rgb(213,34,18)" fg:x="564" fg:w="1"/><text x="92.4069%" y="735.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class (1 samples, 0.16%)</title><rect x="92.1569%" y="709" width="0.1634%" height="15" fill="rgb(246,38,12)" fg:x="564" fg:w="1"/><text x="92.4069%" y="719.50"></text></g><g><title>regex_automata::nfa::thompson::map::Utf8SuffixMap::clear (1 samples, 0.16%)</title><rect x="92.3203%" y="677" width="0.1634%" height="15" fill="rgb(236,113,3)" fg:x="565" fg:w="1"/><text x="92.5703%" y="687.50"></text></g><g><title>alloc::vec::from_elem (1 samples, 0.16%)</title><rect x="92.3203%" y="661" width="0.1634%" height="15" fill="rgb(208,109,54)" fg:x="565" fg:w="1"/><text x="92.5703%" y="671.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1 samples, 0.16%)</title><rect x="92.3203%" y="645" width="0.1634%" height="15" fill="rgb(228,177,24)" fg:x="565" fg:w="1"/><text x="92.5703%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (1 samples, 0.16%)</title><rect x="92.3203%" y="629" width="0.1634%" height="15" fill="rgb(216,52,5)" fg:x="565" fg:w="1"/><text x="92.5703%" y="639.50"></text></g><g><title>core::ptr::write (1 samples, 0.16%)</title><rect x="92.3203%" y="613" width="0.1634%" height="15" fill="rgb(209,143,44)" fg:x="565" fg:w="1"/><text x="92.5703%" y="623.50"></text></g><g><title>regex::regex::bytes::Regex::new (4 samples, 0.65%)</title><rect x="91.9935%" y="1205" width="0.6536%" height="15" fill="rgb(246,224,25)" fg:x="563" fg:w="4"/><text x="92.2435%" y="1215.50"></text></g><g><title>regex::builders::bytes::RegexBuilder::build (4 samples, 0.65%)</title><rect x="91.9935%" y="1189" width="0.6536%" height="15" fill="rgb(236,76,51)" fg:x="563" fg:w="4"/><text x="92.2435%" y="1199.50"></text></g><g><title>regex::builders::Builder::build_one_bytes (4 samples, 0.65%)</title><rect x="91.9935%" y="1173" width="0.6536%" height="15" fill="rgb(233,102,7)" fg:x="563" fg:w="4"/><text x="92.2435%" y="1183.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (4 samples, 0.65%)</title><rect x="91.9935%" y="1157" width="0.6536%" height="15" fill="rgb(212,33,22)" fg:x="563" fg:w="4"/><text x="92.2435%" y="1167.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many (4 samples, 0.65%)</title><rect x="91.9935%" y="1141" width="0.6536%" height="15" fill="rgb(236,25,32)" fg:x="563" fg:w="4"/><text x="92.2435%" y="1151.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (4 samples, 0.65%)</title><rect x="91.9935%" y="1125" width="0.6536%" height="15" fill="rgb(250,142,30)" fg:x="563" fg:w="4"/><text x="92.2435%" y="1135.50"></text></g><g><title>regex_automata::meta::strategy::new (4 samples, 0.65%)</title><rect x="91.9935%" y="1109" width="0.6536%" height="15" fill="rgb(243,171,22)" fg:x="563" fg:w="4"/><text x="92.2435%" y="1119.50"></text></g><g><title>regex_automata::meta::strategy::Core::new (4 samples, 0.65%)</title><rect x="91.9935%" y="1093" width="0.6536%" height="15" fill="rgb(222,69,27)" fg:x="563" fg:w="4"/><text x="92.2435%" y="1103.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (4 samples, 0.65%)</title><rect x="91.9935%" y="1077" width="0.6536%" height="15" fill="rgb(226,42,16)" fg:x="563" fg:w="4"/><text x="92.2435%" y="1087.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (4 samples, 0.65%)</title><rect x="91.9935%" y="1061" width="0.6536%" height="15" fill="rgb(242,129,17)" fg:x="563" fg:w="4"/><text x="92.2435%" y="1071.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (4 samples, 0.65%)</title><rect x="91.9935%" y="1045" width="0.6536%" height="15" fill="rgb(247,137,3)" fg:x="563" fg:w="4"/><text x="92.2435%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.65%)</title><rect x="91.9935%" y="1029" width="0.6536%" height="15" fill="rgb(214,109,53)" fg:x="563" fg:w="4"/><text x="92.2435%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.65%)</title><rect x="91.9935%" y="1013" width="0.6536%" height="15" fill="rgb(254,35,30)" fg:x="563" fg:w="4"/><text x="92.2435%" y="1023.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (4 samples, 0.65%)</title><rect x="91.9935%" y="997" width="0.6536%" height="15" fill="rgb(226,169,23)" fg:x="563" fg:w="4"/><text x="92.2435%" y="1007.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile::{{closure}} (4 samples, 0.65%)</title><rect x="91.9935%" y="981" width="0.6536%" height="15" fill="rgb(218,216,52)" fg:x="563" fg:w="4"/><text x="92.2435%" y="991.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (4 samples, 0.65%)</title><rect x="91.9935%" y="965" width="0.6536%" height="15" fill="rgb(235,200,16)" fg:x="563" fg:w="4"/><text x="92.2435%" y="975.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (4 samples, 0.65%)</title><rect x="91.9935%" y="949" width="0.6536%" height="15" fill="rgb(213,34,18)" fg:x="563" fg:w="4"/><text x="92.2435%" y="959.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (4 samples, 0.65%)</title><rect x="91.9935%" y="933" width="0.6536%" height="15" fill="rgb(210,105,37)" fg:x="563" fg:w="4"/><text x="92.2435%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (2 samples, 0.33%)</title><rect x="92.3203%" y="917" width="0.3268%" height="15" fill="rgb(222,94,14)" fg:x="565" fg:w="2"/><text x="92.5703%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.33%)</title><rect x="92.3203%" y="901" width="0.3268%" height="15" fill="rgb(254,35,30)" fg:x="565" fg:w="2"/><text x="92.5703%" y="911.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.33%)</title><rect x="92.3203%" y="885" width="0.3268%" height="15" fill="rgb(226,169,23)" fg:x="565" fg:w="2"/><text x="92.5703%" y="895.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (2 samples, 0.33%)</title><rect x="92.3203%" y="869" width="0.3268%" height="15" fill="rgb(205,130,14)" fg:x="565" fg:w="2"/><text x="92.5703%" y="879.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (2 samples, 0.33%)</title><rect x="92.3203%" y="853" width="0.3268%" height="15" fill="rgb(235,200,16)" fg:x="565" fg:w="2"/><text x="92.5703%" y="863.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (2 samples, 0.33%)</title><rect x="92.3203%" y="837" width="0.3268%" height="15" fill="rgb(213,34,18)" fg:x="565" fg:w="2"/><text x="92.5703%" y="847.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (2 samples, 0.33%)</title><rect x="92.3203%" y="821" width="0.3268%" height="15" fill="rgb(253,35,22)" fg:x="565" fg:w="2"/><text x="92.5703%" y="831.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (2 samples, 0.33%)</title><rect x="92.3203%" y="805" width="0.3268%" height="15" fill="rgb(247,137,3)" fg:x="565" fg:w="2"/><text x="92.5703%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.33%)</title><rect x="92.3203%" y="789" width="0.3268%" height="15" fill="rgb(214,109,53)" fg:x="565" fg:w="2"/><text x="92.5703%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.33%)</title><rect x="92.3203%" y="773" width="0.3268%" height="15" fill="rgb(254,35,30)" fg:x="565" fg:w="2"/><text x="92.5703%" y="783.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.33%)</title><rect x="92.3203%" y="757" width="0.3268%" height="15" fill="rgb(226,169,23)" fg:x="565" fg:w="2"/><text x="92.5703%" y="767.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice::{{closure}} (2 samples, 0.33%)</title><rect x="92.3203%" y="741" width="0.3268%" height="15" fill="rgb(223,145,12)" fg:x="565" fg:w="2"/><text x="92.5703%" y="751.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (2 samples, 0.33%)</title><rect x="92.3203%" y="725" width="0.3268%" height="15" fill="rgb(213,34,18)" fg:x="565" fg:w="2"/><text x="92.5703%" y="735.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class (2 samples, 0.33%)</title><rect x="92.3203%" y="709" width="0.3268%" height="15" fill="rgb(246,38,12)" fg:x="565" fg:w="2"/><text x="92.5703%" y="719.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class_reverse_with_suffix (2 samples, 0.33%)</title><rect x="92.3203%" y="693" width="0.3268%" height="15" fill="rgb(227,194,49)" fg:x="565" fg:w="2"/><text x="92.5703%" y="703.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.16%)</title><rect x="92.4837%" y="677" width="0.1634%" height="15" fill="rgb(213,225,19)" fg:x="566" fg:w="1"/><text x="92.7337%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.16%)</title><rect x="92.6471%" y="661" width="0.1634%" height="15" fill="rgb(249,207,12)" fg:x="567" fg:w="1"/><text x="92.8971%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.16%)</title><rect x="92.6471%" y="645" width="0.1634%" height="15" fill="rgb(224,194,14)" fg:x="567" fg:w="1"/><text x="92.8971%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.16%)</title><rect x="92.6471%" y="629" width="0.1634%" height="15" fill="rgb(227,204,5)" fg:x="567" fg:w="1"/><text x="92.8971%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.16%)</title><rect x="92.6471%" y="613" width="0.1634%" height="15" fill="rgb(231,114,21)" fg:x="567" fg:w="1"/><text x="92.8971%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.16%)</title><rect x="92.6471%" y="597" width="0.1634%" height="15" fill="rgb(238,209,2)" fg:x="567" fg:w="1"/><text x="92.8971%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.16%)</title><rect x="92.6471%" y="581" width="0.1634%" height="15" fill="rgb(253,135,41)" fg:x="567" fg:w="1"/><text x="92.8971%" y="591.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.16%)</title><rect x="92.6471%" y="565" width="0.1634%" height="15" fill="rgb(206,112,53)" fg:x="567" fg:w="1"/><text x="92.8971%" y="575.50"></text></g><g><title>_int_malloc (1 samples, 0.16%)</title><rect x="92.6471%" y="549" width="0.1634%" height="15" fill="rgb(222,219,51)" fg:x="567" fg:w="1"/><text x="92.8971%" y="559.50"></text></g><g><title>sysmalloc (1 samples, 0.16%)</title><rect x="92.6471%" y="533" width="0.1634%" height="15" fill="rgb(237,64,10)" fg:x="567" fg:w="1"/><text x="92.8971%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="92.6471%" y="517" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="567" fg:w="1"/><text x="92.8971%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="92.6471%" y="501" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="567" fg:w="1"/><text x="92.8971%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="92.6471%" y="485" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="567" fg:w="1"/><text x="92.8971%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="92.6471%" y="469" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="567" fg:w="1"/><text x="92.8971%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="92.6471%" y="453" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="567" fg:w="1"/><text x="92.8971%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="92.6471%" y="437" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="567" fg:w="1"/><text x="92.8971%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="92.6471%" y="421" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="567" fg:w="1"/><text x="92.8971%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.16%)</title><rect x="92.6471%" y="405" width="0.1634%" height="15" fill="rgb(210,204,4)" fg:x="567" fg:w="1"/><text x="92.8971%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.33%)</title><rect x="92.8105%" y="501" width="0.3268%" height="15" fill="rgb(210,204,4)" fg:x="568" fg:w="2"/><text x="93.0605%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.82%)</title><rect x="92.8105%" y="549" width="0.8170%" height="15" fill="rgb(210,204,4)" fg:x="568" fg:w="5"/><text x="93.0605%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.82%)</title><rect x="92.8105%" y="533" width="0.8170%" height="15" fill="rgb(210,204,4)" fg:x="568" fg:w="5"/><text x="93.0605%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.82%)</title><rect x="92.8105%" y="517" width="0.8170%" height="15" fill="rgb(210,204,4)" fg:x="568" fg:w="5"/><text x="93.0605%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.98%)</title><rect x="92.8105%" y="581" width="0.9804%" height="15" fill="rgb(210,204,4)" fg:x="568" fg:w="6"/><text x="93.0605%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.98%)</title><rect x="92.8105%" y="565" width="0.9804%" height="15" fill="rgb(210,204,4)" fg:x="568" fg:w="6"/><text x="93.0605%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 1.31%)</title><rect x="92.8105%" y="629" width="1.3072%" height="15" fill="rgb(210,204,4)" fg:x="568" fg:w="8"/><text x="93.0605%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 1.31%)</title><rect x="92.8105%" y="613" width="1.3072%" height="15" fill="rgb(210,204,4)" fg:x="568" fg:w="8"/><text x="93.0605%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 1.31%)</title><rect x="92.8105%" y="597" width="1.3072%" height="15" fill="rgb(210,204,4)" fg:x="568" fg:w="8"/><text x="93.0605%" y="607.50"></text></g><g><title>core::ptr::write (9 samples, 1.47%)</title><rect x="92.8105%" y="645" width="1.4706%" height="15" fill="rgb(209,143,44)" fg:x="568" fg:w="9"/><text x="93.0605%" y="655.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4 samples, 0.65%)</title><rect x="94.2810%" y="645" width="0.6536%" height="15" fill="rgb(246,165,53)" fg:x="577" fg:w="4"/><text x="94.5310%" y="655.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4 samples, 0.65%)</title><rect x="94.2810%" y="629" width="0.6536%" height="15" fill="rgb(226,134,37)" fg:x="577" fg:w="4"/><text x="94.5310%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (4 samples, 0.65%)</title><rect x="94.2810%" y="613" width="0.6536%" height="15" fill="rgb(232,29,30)" fg:x="577" fg:w="4"/><text x="94.5310%" y="623.50"></text></g><g><title>&lt;regex_automata::util::primitives::StateID as core::clone::Clone&gt;::clone (3 samples, 0.49%)</title><rect x="94.9346%" y="613" width="0.4902%" height="15" fill="rgb(234,185,22)" fg:x="581" fg:w="3"/><text x="95.1846%" y="623.50"></text></g><g><title>__memmove_avx512_unaligned_erms (2 samples, 0.33%)</title><rect x="95.4248%" y="517" width="0.3268%" height="15" fill="rgb(217,126,36)" fg:x="584" fg:w="2"/><text x="95.6748%" y="527.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (21 samples, 3.43%)</title><rect x="92.6471%" y="853" width="3.4314%" height="15" fill="rgb(210,105,37)" fg:x="567" fg:w="21"/><text x="92.8971%" y="863.50">reg..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 3.43%)</title><rect x="92.6471%" y="837" width="3.4314%" height="15" fill="rgb(214,109,53)" fg:x="567" fg:w="21"/><text x="92.8971%" y="847.50">&lt;co..</text></g><g><title>core::option::Option&lt;T&gt;::map (21 samples, 3.43%)</title><rect x="92.6471%" y="821" width="3.4314%" height="15" fill="rgb(254,35,30)" fg:x="567" fg:w="21"/><text x="92.8971%" y="831.50">cor..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (21 samples, 3.43%)</title><rect x="92.6471%" y="805" width="3.4314%" height="15" fill="rgb(226,169,23)" fg:x="567" fg:w="21"/><text x="92.8971%" y="815.50">cor..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (21 samples, 3.43%)</title><rect x="92.6471%" y="789" width="3.4314%" height="15" fill="rgb(205,130,14)" fg:x="567" fg:w="21"/><text x="92.8971%" y="799.50">reg..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (21 samples, 3.43%)</title><rect x="92.6471%" y="773" width="3.4314%" height="15" fill="rgb(213,34,18)" fg:x="567" fg:w="21"/><text x="92.8971%" y="783.50">reg..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class (21 samples, 3.43%)</title><rect x="92.6471%" y="757" width="3.4314%" height="15" fill="rgb(246,38,12)" fg:x="567" fg:w="21"/><text x="92.8971%" y="767.50">reg..</text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::new (21 samples, 3.43%)</title><rect x="92.6471%" y="741" width="3.4314%" height="15" fill="rgb(211,200,20)" fg:x="567" fg:w="21"/><text x="92.8971%" y="751.50">reg..</text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8State::clear (21 samples, 3.43%)</title><rect x="92.6471%" y="725" width="3.4314%" height="15" fill="rgb(241,127,0)" fg:x="567" fg:w="21"/><text x="92.8971%" y="735.50">reg..</text></g><g><title>regex_automata::nfa::thompson::map::Utf8BoundedMap::clear (21 samples, 3.43%)</title><rect x="92.6471%" y="709" width="3.4314%" height="15" fill="rgb(207,86,25)" fg:x="567" fg:w="21"/><text x="92.8971%" y="719.50">reg..</text></g><g><title>alloc::vec::from_elem (21 samples, 3.43%)</title><rect x="92.6471%" y="693" width="3.4314%" height="15" fill="rgb(208,109,54)" fg:x="567" fg:w="21"/><text x="92.8971%" y="703.50">all..</text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (21 samples, 3.43%)</title><rect x="92.6471%" y="677" width="3.4314%" height="15" fill="rgb(228,177,24)" fg:x="567" fg:w="21"/><text x="92.8971%" y="687.50">&lt;T ..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (20 samples, 3.27%)</title><rect x="92.8105%" y="661" width="3.2680%" height="15" fill="rgb(216,52,5)" fg:x="568" fg:w="20"/><text x="93.0605%" y="671.50">all..</text></g><g><title>&lt;alloc::vec::ExtendElement&lt;T&gt; as alloc::vec::ExtendWith&lt;T&gt;&gt;::next (7 samples, 1.14%)</title><rect x="94.9346%" y="645" width="1.1438%" height="15" fill="rgb(216,123,15)" fg:x="581" fg:w="7"/><text x="95.1846%" y="655.50"></text></g><g><title>&lt;regex_automata::nfa::thompson::map::Utf8BoundedEntry as core::clone::Clone&gt;::clone (7 samples, 1.14%)</title><rect x="94.9346%" y="629" width="1.1438%" height="15" fill="rgb(211,18,41)" fg:x="581" fg:w="7"/><text x="95.1846%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.65%)</title><rect x="95.4248%" y="613" width="0.6536%" height="15" fill="rgb(239,104,10)" fg:x="584" fg:w="4"/><text x="95.6748%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.65%)</title><rect x="95.4248%" y="597" width="0.6536%" height="15" fill="rgb(229,121,46)" fg:x="584" fg:w="4"/><text x="95.6748%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.65%)</title><rect x="95.4248%" y="581" width="0.6536%" height="15" fill="rgb(221,172,50)" fg:x="584" fg:w="4"/><text x="95.6748%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.65%)</title><rect x="95.4248%" y="565" width="0.6536%" height="15" fill="rgb(216,42,52)" fg:x="584" fg:w="4"/><text x="95.6748%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (4 samples, 0.65%)</title><rect x="95.4248%" y="549" width="0.6536%" height="15" fill="rgb(222,107,1)" fg:x="584" fg:w="4"/><text x="95.6748%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.65%)</title><rect x="95.4248%" y="533" width="0.6536%" height="15" fill="rgb(214,20,35)" fg:x="584" fg:w="4"/><text x="95.6748%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.82%)</title><rect x="96.0784%" y="485" width="0.8170%" height="15" fill="rgb(210,204,4)" fg:x="588" fg:w="5"/><text x="96.3284%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.98%)</title><rect x="96.0784%" y="565" width="0.9804%" height="15" fill="rgb(210,204,4)" fg:x="588" fg:w="6"/><text x="96.3284%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.98%)</title><rect x="96.0784%" y="549" width="0.9804%" height="15" fill="rgb(210,204,4)" fg:x="588" fg:w="6"/><text x="96.3284%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.98%)</title><rect x="96.0784%" y="533" width="0.9804%" height="15" fill="rgb(210,204,4)" fg:x="588" fg:w="6"/><text x="96.3284%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.98%)</title><rect x="96.0784%" y="517" width="0.9804%" height="15" fill="rgb(210,204,4)" fg:x="588" fg:w="6"/><text x="96.3284%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.98%)</title><rect x="96.0784%" y="501" width="0.9804%" height="15" fill="rgb(210,204,4)" fg:x="588" fg:w="6"/><text x="96.3284%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 1.14%)</title><rect x="96.0784%" y="613" width="1.1438%" height="15" fill="rgb(210,204,4)" fg:x="588" fg:w="7"/><text x="96.3284%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 1.14%)</title><rect x="96.0784%" y="597" width="1.1438%" height="15" fill="rgb(210,204,4)" fg:x="588" fg:w="7"/><text x="96.3284%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 1.14%)</title><rect x="96.0784%" y="581" width="1.1438%" height="15" fill="rgb(210,204,4)" fg:x="588" fg:w="7"/><text x="96.3284%" y="591.50"></text></g><g><title>core::ptr::write (9 samples, 1.47%)</title><rect x="96.0784%" y="629" width="1.4706%" height="15" fill="rgb(209,143,44)" fg:x="588" fg:w="9"/><text x="96.3284%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (3 samples, 0.49%)</title><rect x="97.5490%" y="597" width="0.4902%" height="15" fill="rgb(232,29,30)" fg:x="597" fg:w="3"/><text x="97.7990%" y="607.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4 samples, 0.65%)</title><rect x="97.5490%" y="629" width="0.6536%" height="15" fill="rgb(246,165,53)" fg:x="597" fg:w="4"/><text x="97.7990%" y="639.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4 samples, 0.65%)</title><rect x="97.5490%" y="613" width="0.6536%" height="15" fill="rgb(226,134,37)" fg:x="597" fg:w="4"/><text x="97.7990%" y="623.50"></text></g><g><title>&lt;regex_automata::util::primitives::StateID as core::clone::Clone&gt;::clone (1 samples, 0.16%)</title><rect x="98.2026%" y="597" width="0.1634%" height="15" fill="rgb(234,185,22)" fg:x="601" fg:w="1"/><text x="98.4526%" y="607.50"></text></g><g><title>__memmove_avx512_unaligned_erms (4 samples, 0.65%)</title><rect x="98.3660%" y="501" width="0.6536%" height="15" fill="rgb(217,126,36)" fg:x="602" fg:w="4"/><text x="98.6160%" y="511.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::new (19 samples, 3.10%)</title><rect x="96.0784%" y="725" width="3.1046%" height="15" fill="rgb(211,200,20)" fg:x="588" fg:w="19"/><text x="96.3284%" y="735.50">reg..</text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8State::clear (19 samples, 3.10%)</title><rect x="96.0784%" y="709" width="3.1046%" height="15" fill="rgb(241,127,0)" fg:x="588" fg:w="19"/><text x="96.3284%" y="719.50">reg..</text></g><g><title>regex_automata::nfa::thompson::map::Utf8BoundedMap::clear (19 samples, 3.10%)</title><rect x="96.0784%" y="693" width="3.1046%" height="15" fill="rgb(207,86,25)" fg:x="588" fg:w="19"/><text x="96.3284%" y="703.50">reg..</text></g><g><title>alloc::vec::from_elem (19 samples, 3.10%)</title><rect x="96.0784%" y="677" width="3.1046%" height="15" fill="rgb(208,109,54)" fg:x="588" fg:w="19"/><text x="96.3284%" y="687.50">all..</text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (19 samples, 3.10%)</title><rect x="96.0784%" y="661" width="3.1046%" height="15" fill="rgb(228,177,24)" fg:x="588" fg:w="19"/><text x="96.3284%" y="671.50">&lt;T ..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (19 samples, 3.10%)</title><rect x="96.0784%" y="645" width="3.1046%" height="15" fill="rgb(216,52,5)" fg:x="588" fg:w="19"/><text x="96.3284%" y="655.50">all..</text></g><g><title>&lt;alloc::vec::ExtendElement&lt;T&gt; as alloc::vec::ExtendWith&lt;T&gt;&gt;::next (6 samples, 0.98%)</title><rect x="98.2026%" y="629" width="0.9804%" height="15" fill="rgb(216,123,15)" fg:x="601" fg:w="6"/><text x="98.4526%" y="639.50"></text></g><g><title>&lt;regex_automata::nfa::thompson::map::Utf8BoundedEntry as core::clone::Clone&gt;::clone (6 samples, 0.98%)</title><rect x="98.2026%" y="613" width="0.9804%" height="15" fill="rgb(211,18,41)" fg:x="601" fg:w="6"/><text x="98.4526%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.82%)</title><rect x="98.3660%" y="597" width="0.8170%" height="15" fill="rgb(239,104,10)" fg:x="602" fg:w="5"/><text x="98.6160%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.82%)</title><rect x="98.3660%" y="581" width="0.8170%" height="15" fill="rgb(229,121,46)" fg:x="602" fg:w="5"/><text x="98.6160%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.82%)</title><rect x="98.3660%" y="565" width="0.8170%" height="15" fill="rgb(221,172,50)" fg:x="602" fg:w="5"/><text x="98.6160%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.82%)</title><rect x="98.3660%" y="549" width="0.8170%" height="15" fill="rgb(216,42,52)" fg:x="602" fg:w="5"/><text x="98.6160%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (5 samples, 0.82%)</title><rect x="98.3660%" y="533" width="0.8170%" height="15" fill="rgb(222,107,1)" fg:x="602" fg:w="5"/><text x="98.6160%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.82%)</title><rect x="98.3660%" y="517" width="0.8170%" height="15" fill="rgb(214,20,35)" fg:x="602" fg:w="5"/><text x="98.6160%" y="527.50"></text></g><g><title>regex_automata::meta::strategy::Core::new (42 samples, 6.86%)</title><rect x="92.6471%" y="1125" width="6.8627%" height="15" fill="rgb(222,69,27)" fg:x="567" fg:w="42"/><text x="92.8971%" y="1135.50">regex_aut..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (42 samples, 6.86%)</title><rect x="92.6471%" y="1109" width="6.8627%" height="15" fill="rgb(226,42,16)" fg:x="567" fg:w="42"/><text x="92.8971%" y="1119.50">regex_aut..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (42 samples, 6.86%)</title><rect x="92.6471%" y="1093" width="6.8627%" height="15" fill="rgb(242,129,17)" fg:x="567" fg:w="42"/><text x="92.8971%" y="1103.50">regex_aut..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (42 samples, 6.86%)</title><rect x="92.6471%" y="1077" width="6.8627%" height="15" fill="rgb(247,137,3)" fg:x="567" fg:w="42"/><text x="92.8971%" y="1087.50">regex_aut..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (42 samples, 6.86%)</title><rect x="92.6471%" y="1061" width="6.8627%" height="15" fill="rgb(214,109,53)" fg:x="567" fg:w="42"/><text x="92.8971%" y="1071.50">&lt;core::it..</text></g><g><title>core::option::Option&lt;T&gt;::map (42 samples, 6.86%)</title><rect x="92.6471%" y="1045" width="6.8627%" height="15" fill="rgb(254,35,30)" fg:x="567" fg:w="42"/><text x="92.8971%" y="1055.50">core::opt..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (42 samples, 6.86%)</title><rect x="92.6471%" y="1029" width="6.8627%" height="15" fill="rgb(226,169,23)" fg:x="567" fg:w="42"/><text x="92.8971%" y="1039.50">core::ops..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile::{{closure}} (42 samples, 6.86%)</title><rect x="92.6471%" y="1013" width="6.8627%" height="15" fill="rgb(218,216,52)" fg:x="567" fg:w="42"/><text x="92.8971%" y="1023.50">regex_aut..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (42 samples, 6.86%)</title><rect x="92.6471%" y="997" width="6.8627%" height="15" fill="rgb(235,200,16)" fg:x="567" fg:w="42"/><text x="92.8971%" y="1007.50">regex_aut..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (42 samples, 6.86%)</title><rect x="92.6471%" y="981" width="6.8627%" height="15" fill="rgb(213,34,18)" fg:x="567" fg:w="42"/><text x="92.8971%" y="991.50">regex_aut..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (42 samples, 6.86%)</title><rect x="92.6471%" y="965" width="6.8627%" height="15" fill="rgb(210,105,37)" fg:x="567" fg:w="42"/><text x="92.8971%" y="975.50">regex_aut..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (42 samples, 6.86%)</title><rect x="92.6471%" y="949" width="6.8627%" height="15" fill="rgb(214,109,53)" fg:x="567" fg:w="42"/><text x="92.8971%" y="959.50">&lt;core::it..</text></g><g><title>core::option::Option&lt;T&gt;::map (42 samples, 6.86%)</title><rect x="92.6471%" y="933" width="6.8627%" height="15" fill="rgb(254,35,30)" fg:x="567" fg:w="42"/><text x="92.8971%" y="943.50">core::opt..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (42 samples, 6.86%)</title><rect x="92.6471%" y="917" width="6.8627%" height="15" fill="rgb(226,169,23)" fg:x="567" fg:w="42"/><text x="92.8971%" y="927.50">core::ops..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (42 samples, 6.86%)</title><rect x="92.6471%" y="901" width="6.8627%" height="15" fill="rgb(205,130,14)" fg:x="567" fg:w="42"/><text x="92.8971%" y="911.50">regex_aut..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (42 samples, 6.86%)</title><rect x="92.6471%" y="885" width="6.8627%" height="15" fill="rgb(235,200,16)" fg:x="567" fg:w="42"/><text x="92.8971%" y="895.50">regex_aut..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (42 samples, 6.86%)</title><rect x="92.6471%" y="869" width="6.8627%" height="15" fill="rgb(213,34,18)" fg:x="567" fg:w="42"/><text x="92.8971%" y="879.50">regex_aut..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (21 samples, 3.43%)</title><rect x="96.0784%" y="853" width="3.4314%" height="15" fill="rgb(253,35,22)" fg:x="588" fg:w="21"/><text x="96.3284%" y="863.50">reg..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (21 samples, 3.43%)</title><rect x="96.0784%" y="837" width="3.4314%" height="15" fill="rgb(247,137,3)" fg:x="588" fg:w="21"/><text x="96.3284%" y="847.50">reg..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 3.43%)</title><rect x="96.0784%" y="821" width="3.4314%" height="15" fill="rgb(214,109,53)" fg:x="588" fg:w="21"/><text x="96.3284%" y="831.50">&lt;co..</text></g><g><title>core::option::Option&lt;T&gt;::map (21 samples, 3.43%)</title><rect x="96.0784%" y="805" width="3.4314%" height="15" fill="rgb(254,35,30)" fg:x="588" fg:w="21"/><text x="96.3284%" y="815.50">cor..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (21 samples, 3.43%)</title><rect x="96.0784%" y="789" width="3.4314%" height="15" fill="rgb(226,169,23)" fg:x="588" fg:w="21"/><text x="96.3284%" y="799.50">cor..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice::{{closure}} (21 samples, 3.43%)</title><rect x="96.0784%" y="773" width="3.4314%" height="15" fill="rgb(223,145,12)" fg:x="588" fg:w="21"/><text x="96.3284%" y="783.50">reg..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (21 samples, 3.43%)</title><rect x="96.0784%" y="757" width="3.4314%" height="15" fill="rgb(213,34,18)" fg:x="588" fg:w="21"/><text x="96.3284%" y="767.50">reg..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class (21 samples, 3.43%)</title><rect x="96.0784%" y="741" width="3.4314%" height="15" fill="rgb(246,38,12)" fg:x="588" fg:w="21"/><text x="96.3284%" y="751.50">reg..</text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::add (2 samples, 0.33%)</title><rect x="99.1830%" y="725" width="0.3268%" height="15" fill="rgb(254,207,53)" fg:x="607" fg:w="2"/><text x="99.4330%" y="735.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::compile_from (2 samples, 0.33%)</title><rect x="99.1830%" y="709" width="0.3268%" height="15" fill="rgb(235,97,10)" fg:x="607" fg:w="2"/><text x="99.4330%" y="719.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::pop_freeze (2 samples, 0.33%)</title><rect x="99.1830%" y="693" width="0.3268%" height="15" fill="rgb(210,186,8)" fg:x="607" fg:w="2"/><text x="99.4330%" y="703.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Node::set_last_transition (2 samples, 0.33%)</title><rect x="99.1830%" y="677" width="0.3268%" height="15" fill="rgb(240,190,47)" fg:x="607" fg:w="2"/><text x="99.4330%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (2 samples, 0.33%)</title><rect x="99.1830%" y="661" width="0.3268%" height="15" fill="rgb(206,153,2)" fg:x="607" fg:w="2"/><text x="99.4330%" y="671.50"></text></g><g><title>core::mem::replace (2 samples, 0.33%)</title><rect x="99.1830%" y="645" width="0.3268%" height="15" fill="rgb(240,40,18)" fg:x="607" fg:w="2"/><text x="99.4330%" y="655.50"></text></g><g><title>core::ptr::read (2 samples, 0.33%)</title><rect x="99.1830%" y="629" width="0.3268%" height="15" fill="rgb(222,157,29)" fg:x="607" fg:w="2"/><text x="99.4330%" y="639.50"></text></g><g><title>aho_corasick::dfa::sparse_iter (2 samples, 0.33%)</title><rect x="99.5098%" y="997" width="0.3268%" height="15" fill="rgb(223,225,36)" fg:x="609" fg:w="2"/><text x="99.7598%" y="1007.50"></text></g><g><title>aho_corasick::util::alphabet::ByteClasses::get (2 samples, 0.33%)</title><rect x="99.5098%" y="981" width="0.3268%" height="15" fill="rgb(251,98,47)" fg:x="609" fg:w="2"/><text x="99.7598%" y="991.50"></text></g><g><title>all (612 samples, 100%)</title><rect x="0.0000%" y="1253" width="100.0000%" height="15" fill="rgb(206,183,37)" fg:x="0" fg:w="612"/><text x="0.2500%" y="1263.50"></text></g><g><title>gen-1000-3-foob (487 samples, 79.58%)</title><rect x="20.4248%" y="1237" width="79.5752%" height="15" fill="rgb(214,224,18)" fg:x="125" fg:w="487"/><text x="20.6748%" y="1247.50">gen-1000-3-foob</text></g><g><title>[unknown] (237 samples, 38.73%)</title><rect x="61.2745%" y="1221" width="38.7255%" height="15" fill="rgb(227,28,50)" fg:x="375" fg:w="237"/><text x="61.5245%" y="1231.50">[unknown]</text></g><g><title>regex::builders::Builder::build_one_bytes (45 samples, 7.35%)</title><rect x="92.6471%" y="1205" width="7.3529%" height="15" fill="rgb(233,102,7)" fg:x="567" fg:w="45"/><text x="92.8971%" y="1215.50">regex::bui..</text></g><g><title>regex_automata::meta::regex::Builder::build (45 samples, 7.35%)</title><rect x="92.6471%" y="1189" width="7.3529%" height="15" fill="rgb(212,33,22)" fg:x="567" fg:w="45"/><text x="92.8971%" y="1199.50">regex_auto..</text></g><g><title>regex_automata::meta::regex::Builder::build_many (45 samples, 7.35%)</title><rect x="92.6471%" y="1173" width="7.3529%" height="15" fill="rgb(236,25,32)" fg:x="567" fg:w="45"/><text x="92.8971%" y="1183.50">regex_auto..</text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (45 samples, 7.35%)</title><rect x="92.6471%" y="1157" width="7.3529%" height="15" fill="rgb(250,142,30)" fg:x="567" fg:w="45"/><text x="92.8971%" y="1167.50">regex_auto..</text></g><g><title>regex_automata::meta::strategy::new (45 samples, 7.35%)</title><rect x="92.6471%" y="1141" width="7.3529%" height="15" fill="rgb(243,171,22)" fg:x="567" fg:w="45"/><text x="92.8971%" y="1151.50">regex_auto..</text></g><g><title>core::option::Option&lt;T&gt;::and_then (3 samples, 0.49%)</title><rect x="99.5098%" y="1125" width="0.4902%" height="15" fill="rgb(225,8,7)" fg:x="609" fg:w="3"/><text x="99.7598%" y="1135.50"></text></g><g><title>regex_automata::meta::strategy::new::{{closure}} (3 samples, 0.49%)</title><rect x="99.5098%" y="1109" width="0.4902%" height="15" fill="rgb(238,100,15)" fg:x="609" fg:w="3"/><text x="99.7598%" y="1119.50"></text></g><g><title>regex_automata::util::prefilter::Prefilter::new (3 samples, 0.49%)</title><rect x="99.5098%" y="1093" width="0.4902%" height="15" fill="rgb(227,199,27)" fg:x="609" fg:w="3"/><text x="99.7598%" y="1103.50"></text></g><g><title>regex_automata::util::prefilter::Choice::new (3 samples, 0.49%)</title><rect x="99.5098%" y="1077" width="0.4902%" height="15" fill="rgb(243,64,33)" fg:x="609" fg:w="3"/><text x="99.7598%" y="1087.50"></text></g><g><title>regex_automata::util::prefilter::teddy::Teddy::new (3 samples, 0.49%)</title><rect x="99.5098%" y="1061" width="0.4902%" height="15" fill="rgb(207,155,0)" fg:x="609" fg:w="3"/><text x="99.7598%" y="1071.50"></text></g><g><title>aho_corasick::dfa::Builder::build (3 samples, 0.49%)</title><rect x="99.5098%" y="1045" width="0.4902%" height="15" fill="rgb(212,91,25)" fg:x="609" fg:w="3"/><text x="99.7598%" y="1055.50"></text></g><g><title>aho_corasick::dfa::Builder::build_from_noncontiguous (3 samples, 0.49%)</title><rect x="99.5098%" y="1029" width="0.4902%" height="15" fill="rgb(231,220,22)" fg:x="609" fg:w="3"/><text x="99.7598%" y="1039.50"></text></g><g><title>aho_corasick::dfa::Builder::finish_build_one_start (3 samples, 0.49%)</title><rect x="99.5098%" y="1013" width="0.4902%" height="15" fill="rgb(242,31,54)" fg:x="609" fg:w="3"/><text x="99.7598%" y="1023.50"></text></g></svg></svg>