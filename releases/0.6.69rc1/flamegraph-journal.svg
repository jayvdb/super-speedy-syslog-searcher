<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="886" onload="init(evt)" viewBox="0 0 1200 886" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: super_speedy_syslog_searcher 0.6.68; git: 1f68039; -freq 9000; created 20240316T233540-0700--><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="886" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">super_speedy_syslog_searcher 0.6.68; git: 1f68039; -freq 9000; created 20240316T233540-0700;<br/> s4 ./logs/programs/journal/CentOS_7_system.journal</text><text id="details" fill="rgb(0,0,0)" x="10" y="869.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="869.00"> </text><svg id="frames" x="10" width="1180" total_samples="84"><g><title>dl_platform_init (1 samples, 1.19%)</title><rect x="0.0000%" y="741" width="1.1905%" height="15" fill="rgb(230,55,18)" fg:x="0" fg:w="1"/><text x="0.2500%" y="751.50"></text></g><g><title>init_cpu_features (1 samples, 1.19%)</title><rect x="0.0000%" y="725" width="1.1905%" height="15" fill="rgb(226,52,3)" fg:x="0" fg:w="1"/><text x="0.2500%" y="735.50"></text></g><g><title>dl_init_cacheinfo (1 samples, 1.19%)</title><rect x="0.0000%" y="709" width="1.1905%" height="15" fill="rgb(230,195,31)" fg:x="0" fg:w="1"/><text x="0.2500%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 2.38%)</title><rect x="1.1905%" y="581" width="2.3810%" height="15" fill="rgb(210,204,4)" fg:x="1" fg:w="2"/><text x="1.4405%" y="591.50">[[..</text></g><g><title>[[kernel.kallsyms]] (2 samples, 2.38%)</title><rect x="1.1905%" y="565" width="2.3810%" height="15" fill="rgb(210,204,4)" fg:x="1" fg:w="2"/><text x="1.4405%" y="575.50">[[..</text></g><g><title>[[kernel.kallsyms]] (2 samples, 2.38%)</title><rect x="1.1905%" y="549" width="2.3810%" height="15" fill="rgb(210,204,4)" fg:x="1" fg:w="2"/><text x="1.4405%" y="559.50">[[..</text></g><g><title>_dl_start (4 samples, 4.76%)</title><rect x="0.0000%" y="789" width="4.7619%" height="15" fill="rgb(214,13,30)" fg:x="0" fg:w="4"/><text x="0.2500%" y="799.50">_dl_st..</text></g><g><title>_dl_start_final (4 samples, 4.76%)</title><rect x="0.0000%" y="773" width="4.7619%" height="15" fill="rgb(222,52,46)" fg:x="0" fg:w="4"/><text x="0.2500%" y="783.50">_dl_st..</text></g><g><title>_dl_sysdep_start (4 samples, 4.76%)</title><rect x="0.0000%" y="757" width="4.7619%" height="15" fill="rgb(238,104,49)" fg:x="0" fg:w="4"/><text x="0.2500%" y="767.50">_dl_sy..</text></g><g><title>dl_main (3 samples, 3.57%)</title><rect x="1.1905%" y="741" width="3.5714%" height="15" fill="rgb(253,59,10)" fg:x="1" fg:w="3"/><text x="1.4405%" y="751.50">dl_m..</text></g><g><title>_dl_relocate_object (3 samples, 3.57%)</title><rect x="1.1905%" y="725" width="3.5714%" height="15" fill="rgb(244,75,35)" fg:x="1" fg:w="3"/><text x="1.4405%" y="735.50">_dl_..</text></g><g><title>elf_dynamic_do_Rela (3 samples, 3.57%)</title><rect x="1.1905%" y="709" width="3.5714%" height="15" fill="rgb(234,90,53)" fg:x="1" fg:w="3"/><text x="1.4405%" y="719.50">elf_..</text></g><g><title>elf_machine_rela_relative (3 samples, 3.57%)</title><rect x="1.1905%" y="693" width="3.5714%" height="15" fill="rgb(215,35,45)" fg:x="1" fg:w="3"/><text x="1.4405%" y="703.50">elf_..</text></g><g><title>[[kernel.kallsyms]] (3 samples, 3.57%)</title><rect x="1.1905%" y="677" width="3.5714%" height="15" fill="rgb(210,204,4)" fg:x="1" fg:w="3"/><text x="1.4405%" y="687.50">[[ke..</text></g><g><title>[[kernel.kallsyms]] (3 samples, 3.57%)</title><rect x="1.1905%" y="661" width="3.5714%" height="15" fill="rgb(210,204,4)" fg:x="1" fg:w="3"/><text x="1.4405%" y="671.50">[[ke..</text></g><g><title>[[kernel.kallsyms]] (3 samples, 3.57%)</title><rect x="1.1905%" y="645" width="3.5714%" height="15" fill="rgb(210,204,4)" fg:x="1" fg:w="3"/><text x="1.4405%" y="655.50">[[ke..</text></g><g><title>[[kernel.kallsyms]] (3 samples, 3.57%)</title><rect x="1.1905%" y="629" width="3.5714%" height="15" fill="rgb(210,204,4)" fg:x="1" fg:w="3"/><text x="1.4405%" y="639.50">[[ke..</text></g><g><title>[[kernel.kallsyms]] (3 samples, 3.57%)</title><rect x="1.1905%" y="613" width="3.5714%" height="15" fill="rgb(210,204,4)" fg:x="1" fg:w="3"/><text x="1.4405%" y="623.50">[[ke..</text></g><g><title>[[kernel.kallsyms]] (3 samples, 3.57%)</title><rect x="1.1905%" y="597" width="3.5714%" height="15" fill="rgb(210,204,4)" fg:x="1" fg:w="3"/><text x="1.4405%" y="607.50">[[ke..</text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="4.7619%" y="197" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="4" fg:w="1"/><text x="5.0119%" y="207.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="4.7619%" y="181" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="4" fg:w="1"/><text x="5.0119%" y="191.50"></text></g><g><title>std::io::Write::write_all (2 samples, 2.38%)</title><rect x="4.7619%" y="485" width="2.3810%" height="15" fill="rgb(251,145,9)" fg:x="4" fg:w="2"/><text x="5.0119%" y="495.50">st..</text></g><g><title>&lt;termcolor::StandardStream as std::io::Write&gt;::write (2 samples, 2.38%)</title><rect x="4.7619%" y="469" width="2.3810%" height="15" fill="rgb(250,180,25)" fg:x="4" fg:w="2"/><text x="5.0119%" y="479.50">&lt;t..</text></g><g><title>&lt;termcolor::LossyStandardStream&lt;W&gt; as std::io::Write&gt;::write (2 samples, 2.38%)</title><rect x="4.7619%" y="453" width="2.3810%" height="15" fill="rgb(232,195,18)" fg:x="4" fg:w="2"/><text x="5.0119%" y="463.50">&lt;t..</text></g><g><title>&lt;termcolor::WriterInner&lt;W&gt; as std::io::Write&gt;::write (2 samples, 2.38%)</title><rect x="4.7619%" y="437" width="2.3810%" height="15" fill="rgb(206,183,32)" fg:x="4" fg:w="2"/><text x="5.0119%" y="447.50">&lt;t..</text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write (2 samples, 2.38%)</title><rect x="4.7619%" y="421" width="2.3810%" height="15" fill="rgb(215,142,33)" fg:x="4" fg:w="2"/><text x="5.0119%" y="431.50">&lt;s..</text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write (2 samples, 2.38%)</title><rect x="4.7619%" y="405" width="2.3810%" height="15" fill="rgb(232,39,45)" fg:x="4" fg:w="2"/><text x="5.0119%" y="415.50">&lt;&amp;..</text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write (2 samples, 2.38%)</title><rect x="4.7619%" y="389" width="2.3810%" height="15" fill="rgb(216,85,2)" fg:x="4" fg:w="2"/><text x="5.0119%" y="399.50">&lt;s..</text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write (2 samples, 2.38%)</title><rect x="4.7619%" y="373" width="2.3810%" height="15" fill="rgb(226,48,36)" fg:x="4" fg:w="2"/><text x="5.0119%" y="383.50">&lt;s..</text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write (2 samples, 2.38%)</title><rect x="4.7619%" y="357" width="2.3810%" height="15" fill="rgb(237,90,14)" fg:x="4" fg:w="2"/><text x="5.0119%" y="367.50">&lt;s..</text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (2 samples, 2.38%)</title><rect x="4.7619%" y="341" width="2.3810%" height="15" fill="rgb(240,178,54)" fg:x="4" fg:w="2"/><text x="5.0119%" y="351.50">st..</text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (2 samples, 2.38%)</title><rect x="4.7619%" y="325" width="2.3810%" height="15" fill="rgb(239,119,25)" fg:x="4" fg:w="2"/><text x="5.0119%" y="335.50">&lt;s..</text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (2 samples, 2.38%)</title><rect x="4.7619%" y="309" width="2.3810%" height="15" fill="rgb(236,163,16)" fg:x="4" fg:w="2"/><text x="5.0119%" y="319.50">&lt;s..</text></g><g><title>std::sys::unix::fd::FileDesc::write (2 samples, 2.38%)</title><rect x="4.7619%" y="293" width="2.3810%" height="15" fill="rgb(247,26,49)" fg:x="4" fg:w="2"/><text x="5.0119%" y="303.50">st..</text></g><g><title>__GI___libc_write (2 samples, 2.38%)</title><rect x="4.7619%" y="277" width="2.3810%" height="15" fill="rgb(232,197,30)" fg:x="4" fg:w="2"/><text x="5.0119%" y="287.50">__..</text></g><g><title>__GI___libc_write (2 samples, 2.38%)</title><rect x="4.7619%" y="261" width="2.3810%" height="15" fill="rgb(232,197,30)" fg:x="4" fg:w="2"/><text x="5.0119%" y="271.50">__..</text></g><g><title>[[kernel.kallsyms]] (2 samples, 2.38%)</title><rect x="4.7619%" y="245" width="2.3810%" height="15" fill="rgb(210,204,4)" fg:x="4" fg:w="2"/><text x="5.0119%" y="255.50">[[..</text></g><g><title>[[kernel.kallsyms]] (2 samples, 2.38%)</title><rect x="4.7619%" y="229" width="2.3810%" height="15" fill="rgb(210,204,4)" fg:x="4" fg:w="2"/><text x="5.0119%" y="239.50">[[..</text></g><g><title>[[kernel.kallsyms]] (2 samples, 2.38%)</title><rect x="4.7619%" y="213" width="2.3810%" height="15" fill="rgb(210,204,4)" fg:x="4" fg:w="2"/><text x="5.0119%" y="223.50">[[..</text></g><g><title>termcolor::Ansi&lt;W&gt;::write_str (1 samples, 1.19%)</title><rect x="7.1429%" y="421" width="1.1905%" height="15" fill="rgb(232,27,51)" fg:x="6" fg:w="1"/><text x="7.3929%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 1.19%)</title><rect x="7.1429%" y="405" width="1.1905%" height="15" fill="rgb(251,145,9)" fg:x="6" fg:w="1"/><text x="7.3929%" y="415.50"></text></g><g><title>&lt;termcolor::Ansi&lt;W&gt; as std::io::Write&gt;::write (1 samples, 1.19%)</title><rect x="8.3333%" y="405" width="1.1905%" height="15" fill="rgb(207,158,40)" fg:x="7" fg:w="1"/><text x="8.5833%" y="415.50"></text></g><g><title>&lt;termcolor::IoStandardStream as std::io::Write&gt;::write (1 samples, 1.19%)</title><rect x="8.3333%" y="389" width="1.1905%" height="15" fill="rgb(227,89,5)" fg:x="7" fg:w="1"/><text x="8.5833%" y="399.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write (1 samples, 1.19%)</title><rect x="8.3333%" y="373" width="1.1905%" height="15" fill="rgb(215,142,33)" fg:x="7" fg:w="1"/><text x="8.5833%" y="383.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write (1 samples, 1.19%)</title><rect x="8.3333%" y="357" width="1.1905%" height="15" fill="rgb(232,39,45)" fg:x="7" fg:w="1"/><text x="8.5833%" y="367.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write (1 samples, 1.19%)</title><rect x="8.3333%" y="341" width="1.1905%" height="15" fill="rgb(216,85,2)" fg:x="7" fg:w="1"/><text x="8.5833%" y="351.50"></text></g><g><title>std::io::Write::write_all (2 samples, 2.38%)</title><rect x="8.3333%" y="421" width="2.3810%" height="15" fill="rgb(251,145,9)" fg:x="7" fg:w="2"/><text x="8.5833%" y="431.50">st..</text></g><g><title>&lt;termcolor::Ansi&lt;W&gt; as std::io::Write&gt;::write (1 samples, 1.19%)</title><rect x="10.7143%" y="373" width="1.1905%" height="15" fill="rgb(207,158,40)" fg:x="9" fg:w="1"/><text x="10.9643%" y="383.50"></text></g><g><title>&lt;termcolor::IoStandardStream as std::io::Write&gt;::write (1 samples, 1.19%)</title><rect x="10.7143%" y="357" width="1.1905%" height="15" fill="rgb(227,89,5)" fg:x="9" fg:w="1"/><text x="10.9643%" y="367.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write (1 samples, 1.19%)</title><rect x="10.7143%" y="341" width="1.1905%" height="15" fill="rgb(215,142,33)" fg:x="9" fg:w="1"/><text x="10.9643%" y="351.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write (1 samples, 1.19%)</title><rect x="10.7143%" y="325" width="1.1905%" height="15" fill="rgb(232,39,45)" fg:x="9" fg:w="1"/><text x="10.9643%" y="335.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write (1 samples, 1.19%)</title><rect x="10.7143%" y="309" width="1.1905%" height="15" fill="rgb(216,85,2)" fg:x="9" fg:w="1"/><text x="10.9643%" y="319.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write (1 samples, 1.19%)</title><rect x="10.7143%" y="293" width="1.1905%" height="15" fill="rgb(226,48,36)" fg:x="9" fg:w="1"/><text x="10.9643%" y="303.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write (1 samples, 1.19%)</title><rect x="10.7143%" y="277" width="1.1905%" height="15" fill="rgb(237,90,14)" fg:x="9" fg:w="1"/><text x="10.9643%" y="287.50"></text></g><g><title>std::sys_common::memchr::memrchr (1 samples, 1.19%)</title><rect x="10.7143%" y="261" width="1.1905%" height="15" fill="rgb(232,88,32)" fg:x="9" fg:w="1"/><text x="10.9643%" y="271.50"></text></g><g><title>std::sys::unix::memchr::memrchr (1 samples, 1.19%)</title><rect x="10.7143%" y="245" width="1.1905%" height="15" fill="rgb(223,76,45)" fg:x="9" fg:w="1"/><text x="10.9643%" y="255.50"></text></g><g><title>std::sys::unix::memchr::memrchr::memrchr_specific (1 samples, 1.19%)</title><rect x="10.7143%" y="229" width="1.1905%" height="15" fill="rgb(241,110,16)" fg:x="9" fg:w="1"/><text x="10.9643%" y="239.50"></text></g><g><title>__memrchr_evex (1 samples, 1.19%)</title><rect x="10.7143%" y="213" width="1.1905%" height="15" fill="rgb(249,31,17)" fg:x="9" fg:w="1"/><text x="10.9643%" y="223.50"></text></g><g><title>&lt;termcolor::StandardStream as termcolor::WriteColor&gt;::set_color (5 samples, 5.95%)</title><rect x="7.1429%" y="485" width="5.9524%" height="15" fill="rgb(217,221,27)" fg:x="6" fg:w="5"/><text x="7.3929%" y="495.50">&lt;termcol..</text></g><g><title>&lt;termcolor::LossyStandardStream&lt;W&gt; as termcolor::WriteColor&gt;::set_color (5 samples, 5.95%)</title><rect x="7.1429%" y="469" width="5.9524%" height="15" fill="rgb(244,124,31)" fg:x="6" fg:w="5"/><text x="7.3929%" y="479.50">&lt;termcol..</text></g><g><title>&lt;termcolor::WriterInner&lt;W&gt; as termcolor::WriteColor&gt;::set_color (5 samples, 5.95%)</title><rect x="7.1429%" y="453" width="5.9524%" height="15" fill="rgb(234,182,7)" fg:x="6" fg:w="5"/><text x="7.3929%" y="463.50">&lt;termcol..</text></g><g><title>&lt;termcolor::Ansi&lt;W&gt; as termcolor::WriteColor&gt;::set_color (5 samples, 5.95%)</title><rect x="7.1429%" y="437" width="5.9524%" height="15" fill="rgb(208,123,3)" fg:x="6" fg:w="5"/><text x="7.3929%" y="447.50">&lt;termcol..</text></g><g><title>&lt;termcolor::Ansi&lt;W&gt; as termcolor::WriteColor&gt;::reset (2 samples, 2.38%)</title><rect x="10.7143%" y="421" width="2.3810%" height="15" fill="rgb(226,70,2)" fg:x="9" fg:w="2"/><text x="10.9643%" y="431.50">&lt;t..</text></g><g><title>termcolor::Ansi&lt;W&gt;::write_str (2 samples, 2.38%)</title><rect x="10.7143%" y="405" width="2.3810%" height="15" fill="rgb(232,27,51)" fg:x="9" fg:w="2"/><text x="10.9643%" y="415.50">te..</text></g><g><title>std::io::Write::write_all (2 samples, 2.38%)</title><rect x="10.7143%" y="389" width="2.3810%" height="15" fill="rgb(251,145,9)" fg:x="9" fg:w="2"/><text x="10.9643%" y="399.50">st..</text></g><g><title>s4lib::printer::printers::PrinterLogMessage::print_journalentry (8 samples, 9.52%)</title><rect x="4.7619%" y="517" width="9.5238%" height="15" fill="rgb(209,13,35)" fg:x="4" fg:w="8"/><text x="5.0119%" y="527.50">s4lib::printer..</text></g><g><title>s4lib::printer::printers::PrinterLogMessage::print_journalentry_color (8 samples, 9.52%)</title><rect x="4.7619%" y="501" width="9.5238%" height="15" fill="rgb(248,209,52)" fg:x="4" fg:w="8"/><text x="5.0119%" y="511.50">s4lib::printer..</text></g><g><title>&lt;termcolor::StandardStream as std::io::Write&gt;::flush (1 samples, 1.19%)</title><rect x="13.0952%" y="485" width="1.1905%" height="15" fill="rgb(214,129,27)" fg:x="11" fg:w="1"/><text x="13.3452%" y="495.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::flush (1 samples, 1.19%)</title><rect x="13.0952%" y="469" width="1.1905%" height="15" fill="rgb(244,108,51)" fg:x="11" fg:w="1"/><text x="13.3452%" y="479.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::flush (1 samples, 1.19%)</title><rect x="13.0952%" y="453" width="1.1905%" height="15" fill="rgb(224,207,51)" fg:x="11" fg:w="1"/><text x="13.3452%" y="463.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::flush (1 samples, 1.19%)</title><rect x="13.0952%" y="437" width="1.1905%" height="15" fill="rgb(213,149,3)" fg:x="11" fg:w="1"/><text x="13.3452%" y="447.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::flush (1 samples, 1.19%)</title><rect x="13.0952%" y="421" width="1.1905%" height="15" fill="rgb(212,213,13)" fg:x="11" fg:w="1"/><text x="13.3452%" y="431.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::flush (1 samples, 1.19%)</title><rect x="13.0952%" y="405" width="1.1905%" height="15" fill="rgb(231,193,47)" fg:x="11" fg:w="1"/><text x="13.3452%" y="415.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (1 samples, 1.19%)</title><rect x="13.0952%" y="389" width="1.1905%" height="15" fill="rgb(240,178,54)" fg:x="11" fg:w="1"/><text x="13.3452%" y="399.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (1 samples, 1.19%)</title><rect x="13.0952%" y="373" width="1.1905%" height="15" fill="rgb(239,119,25)" fg:x="11" fg:w="1"/><text x="13.3452%" y="383.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (1 samples, 1.19%)</title><rect x="13.0952%" y="357" width="1.1905%" height="15" fill="rgb(236,163,16)" fg:x="11" fg:w="1"/><text x="13.3452%" y="367.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 1.19%)</title><rect x="13.0952%" y="341" width="1.1905%" height="15" fill="rgb(247,26,49)" fg:x="11" fg:w="1"/><text x="13.3452%" y="351.50"></text></g><g><title>__GI___libc_write (1 samples, 1.19%)</title><rect x="13.0952%" y="325" width="1.1905%" height="15" fill="rgb(232,197,30)" fg:x="11" fg:w="1"/><text x="13.3452%" y="335.50"></text></g><g><title>__GI___libc_write (1 samples, 1.19%)</title><rect x="13.0952%" y="309" width="1.1905%" height="15" fill="rgb(232,197,30)" fg:x="11" fg:w="1"/><text x="13.3452%" y="319.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="13.0952%" y="293" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="11" fg:w="1"/><text x="13.3452%" y="303.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="13.0952%" y="277" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="11" fg:w="1"/><text x="13.3452%" y="287.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="13.0952%" y="261" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="11" fg:w="1"/><text x="13.3452%" y="271.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="13.0952%" y="245" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="11" fg:w="1"/><text x="13.3452%" y="255.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="13.0952%" y="229" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="11" fg:w="1"/><text x="13.3452%" y="239.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="13.0952%" y="213" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="11" fg:w="1"/><text x="13.3452%" y="223.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="13.0952%" y="197" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="11" fg:w="1"/><text x="13.3452%" y="207.50"></text></g><g><title>_dl_relocate_object (1 samples, 1.19%)</title><rect x="14.2857%" y="277" width="1.1905%" height="15" fill="rgb(244,75,35)" fg:x="12" fg:w="1"/><text x="14.5357%" y="287.50"></text></g><g><title>elf_dynamic_do_Rela (1 samples, 1.19%)</title><rect x="14.2857%" y="261" width="1.1905%" height="15" fill="rgb(234,90,53)" fg:x="12" fg:w="1"/><text x="14.5357%" y="271.50"></text></g><g><title>elf_machine_rela (1 samples, 1.19%)</title><rect x="14.2857%" y="245" width="1.1905%" height="15" fill="rgb(245,116,15)" fg:x="12" fg:w="1"/><text x="14.5357%" y="255.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 1.19%)</title><rect x="14.2857%" y="229" width="1.1905%" height="15" fill="rgb(229,85,42)" fg:x="12" fg:w="1"/><text x="14.5357%" y="239.50"></text></g><g><title>do_lookup_x (1 samples, 1.19%)</title><rect x="14.2857%" y="213" width="1.1905%" height="15" fill="rgb(240,183,18)" fg:x="12" fg:w="1"/><text x="14.5357%" y="223.50"></text></g><g><title>_dl_map_object_deps (1 samples, 1.19%)</title><rect x="15.4762%" y="277" width="1.1905%" height="15" fill="rgb(208,68,2)" fg:x="13" fg:w="1"/><text x="15.7262%" y="287.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 1.19%)</title><rect x="15.4762%" y="261" width="1.1905%" height="15" fill="rgb(234,84,7)" fg:x="13" fg:w="1"/><text x="15.7262%" y="271.50"></text></g><g><title>openaux (1 samples, 1.19%)</title><rect x="15.4762%" y="245" width="1.1905%" height="15" fill="rgb(215,55,1)" fg:x="13" fg:w="1"/><text x="15.7262%" y="255.50"></text></g><g><title>_dl_map_object (1 samples, 1.19%)</title><rect x="15.4762%" y="229" width="1.1905%" height="15" fill="rgb(247,77,9)" fg:x="13" fg:w="1"/><text x="15.7262%" y="239.50"></text></g><g><title>open_verify (1 samples, 1.19%)</title><rect x="15.4762%" y="213" width="1.1905%" height="15" fill="rgb(212,82,39)" fg:x="13" fg:w="1"/><text x="15.7262%" y="223.50"></text></g><g><title>__GI___open64_nocancel (1 samples, 1.19%)</title><rect x="15.4762%" y="197" width="1.1905%" height="15" fill="rgb(216,127,2)" fg:x="13" fg:w="1"/><text x="15.7262%" y="207.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="15.4762%" y="181" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="13" fg:w="1"/><text x="15.7262%" y="191.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="15.4762%" y="165" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="13" fg:w="1"/><text x="15.7262%" y="175.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="15.4762%" y="149" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="13" fg:w="1"/><text x="15.7262%" y="159.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="15.4762%" y="133" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="13" fg:w="1"/><text x="15.7262%" y="143.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="15.4762%" y="117" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="13" fg:w="1"/><text x="15.7262%" y="127.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="15.4762%" y="101" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="13" fg:w="1"/><text x="15.7262%" y="111.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="15.4762%" y="85" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="13" fg:w="1"/><text x="15.7262%" y="95.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="15.4762%" y="69" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="13" fg:w="1"/><text x="15.7262%" y="79.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="15.4762%" y="53" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="13" fg:w="1"/><text x="15.7262%" y="63.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="15.4762%" y="37" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="13" fg:w="1"/><text x="15.7262%" y="47.50"></text></g><g><title>s4lib::libload::systemd_dlopen2::load_library_systemd (3 samples, 3.57%)</title><rect x="14.2857%" y="517" width="3.5714%" height="15" fill="rgb(209,147,6)" fg:x="12" fg:w="3"/><text x="14.5357%" y="527.50">s4li..</text></g><g><title>dlopen2::wrapper::container::Container&lt;T&gt;::load (3 samples, 3.57%)</title><rect x="14.2857%" y="501" width="3.5714%" height="15" fill="rgb(205,124,22)" fg:x="12" fg:w="3"/><text x="14.5357%" y="511.50">dlop..</text></g><g><title>dlopen2::raw::common::Library::open (3 samples, 3.57%)</title><rect x="14.2857%" y="485" width="3.5714%" height="15" fill="rgb(215,66,11)" fg:x="12" fg:w="3"/><text x="14.5357%" y="495.50">dlop..</text></g><g><title>dlopen2::raw::unix::open_lib (3 samples, 3.57%)</title><rect x="14.2857%" y="469" width="3.5714%" height="15" fill="rgb(253,38,37)" fg:x="12" fg:w="3"/><text x="14.5357%" y="479.50">dlop..</text></g><g><title>___dlopen (3 samples, 3.57%)</title><rect x="14.2857%" y="453" width="3.5714%" height="15" fill="rgb(233,57,20)" fg:x="12" fg:w="3"/><text x="14.5357%" y="463.50">___d..</text></g><g><title>dlopen_implementation (3 samples, 3.57%)</title><rect x="14.2857%" y="437" width="3.5714%" height="15" fill="rgb(205,110,16)" fg:x="12" fg:w="3"/><text x="14.5357%" y="447.50">dlop..</text></g><g><title>_dlerror_run (3 samples, 3.57%)</title><rect x="14.2857%" y="421" width="3.5714%" height="15" fill="rgb(208,58,37)" fg:x="12" fg:w="3"/><text x="14.5357%" y="431.50">_dle..</text></g><g><title>__GI__dl_catch_error (3 samples, 3.57%)</title><rect x="14.2857%" y="405" width="3.5714%" height="15" fill="rgb(216,170,53)" fg:x="12" fg:w="3"/><text x="14.5357%" y="415.50">__GI..</text></g><g><title>__GI__dl_catch_exception (3 samples, 3.57%)</title><rect x="14.2857%" y="389" width="3.5714%" height="15" fill="rgb(234,84,7)" fg:x="12" fg:w="3"/><text x="14.5357%" y="399.50">__GI..</text></g><g><title>dlopen_doit (3 samples, 3.57%)</title><rect x="14.2857%" y="373" width="3.5714%" height="15" fill="rgb(227,103,25)" fg:x="12" fg:w="3"/><text x="14.5357%" y="383.50">dlop..</text></g><g><title>_dl_open (3 samples, 3.57%)</title><rect x="14.2857%" y="357" width="3.5714%" height="15" fill="rgb(246,203,24)" fg:x="12" fg:w="3"/><text x="14.5357%" y="367.50">_dl_..</text></g><g><title>__GI__dl_catch_exception (3 samples, 3.57%)</title><rect x="14.2857%" y="341" width="3.5714%" height="15" fill="rgb(234,84,7)" fg:x="12" fg:w="3"/><text x="14.5357%" y="351.50">__GI..</text></g><g><title>dl_open_worker (3 samples, 3.57%)</title><rect x="14.2857%" y="325" width="3.5714%" height="15" fill="rgb(248,64,50)" fg:x="12" fg:w="3"/><text x="14.5357%" y="335.50">dl_o..</text></g><g><title>__GI__dl_catch_exception (3 samples, 3.57%)</title><rect x="14.2857%" y="309" width="3.5714%" height="15" fill="rgb(234,84,7)" fg:x="12" fg:w="3"/><text x="14.5357%" y="319.50">__GI..</text></g><g><title>dl_open_worker_begin (3 samples, 3.57%)</title><rect x="14.2857%" y="293" width="3.5714%" height="15" fill="rgb(243,153,31)" fg:x="12" fg:w="3"/><text x="14.5357%" y="303.50">dl_o..</text></g><g><title>_dl_check_map_versions (1 samples, 1.19%)</title><rect x="16.6667%" y="277" width="1.1905%" height="15" fill="rgb(209,88,44)" fg:x="14" fg:w="1"/><text x="16.9167%" y="287.50"></text></g><g><title>match_symbol (1 samples, 1.19%)</title><rect x="16.6667%" y="261" width="1.1905%" height="15" fill="rgb(224,49,10)" fg:x="14" fg:w="1"/><text x="16.9167%" y="271.50"></text></g><g><title>strcmp (1 samples, 1.19%)</title><rect x="16.6667%" y="245" width="1.1905%" height="15" fill="rgb(215,54,52)" fg:x="14" fg:w="1"/><text x="16.9167%" y="255.50"></text></g><g><title>crossbeam_channel::channel::read (1 samples, 1.19%)</title><rect x="17.8571%" y="485" width="1.1905%" height="15" fill="rgb(209,181,8)" fg:x="15" fg:w="1"/><text x="18.1071%" y="495.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 1.19%)</title><rect x="17.8571%" y="469" width="1.1905%" height="15" fill="rgb(217,126,36)" fg:x="15" fg:w="1"/><text x="18.1071%" y="479.50"></text></g><g><title>crossbeam_channel::select::SelectedOperation::recv (2 samples, 2.38%)</title><rect x="17.8571%" y="501" width="2.3810%" height="15" fill="rgb(206,140,19)" fg:x="15" fg:w="2"/><text x="18.1071%" y="511.50">cr..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 1.19%)</title><rect x="19.0476%" y="485" width="1.1905%" height="15" fill="rgb(206,149,53)" fg:x="16" fg:w="1"/><text x="19.2976%" y="495.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (5 samples, 5.95%)</title><rect x="20.2381%" y="341" width="5.9524%" height="15" fill="rgb(242,61,0)" fg:x="17" fg:w="5"/><text x="20.4881%" y="351.50">core::sy..</text></g><g><title>core::hint::spin_loop (5 samples, 5.95%)</title><rect x="20.2381%" y="325" width="5.9524%" height="15" fill="rgb(241,144,6)" fg:x="17" fg:w="5"/><text x="20.4881%" y="335.50">core::hi..</text></g><g><title>core::core_arch::x86::sse2::_mm_pause (5 samples, 5.95%)</title><rect x="20.2381%" y="309" width="5.9524%" height="15" fill="rgb(213,129,2)" fg:x="17" fg:w="5"/><text x="20.4881%" y="319.50">core::co..</text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="26.1905%" y="245" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="22" fg:w="1"/><text x="26.4405%" y="255.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="26.1905%" y="229" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="22" fg:w="1"/><text x="26.4405%" y="239.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="26.1905%" y="213" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="22" fg:w="1"/><text x="26.4405%" y="223.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="26.1905%" y="197" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="22" fg:w="1"/><text x="26.4405%" y="207.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (7 samples, 8.33%)</title><rect x="20.2381%" y="357" width="8.3333%" height="15" fill="rgb(224,200,25)" fg:x="17" fg:w="7"/><text x="20.4881%" y="367.50">crossbeam_ut..</text></g><g><title>__GI___sched_yield (2 samples, 2.38%)</title><rect x="26.1905%" y="341" width="2.3810%" height="15" fill="rgb(225,197,10)" fg:x="22" fg:w="2"/><text x="26.4405%" y="351.50">__..</text></g><g><title>[[kernel.kallsyms]] (2 samples, 2.38%)</title><rect x="26.1905%" y="325" width="2.3810%" height="15" fill="rgb(210,204,4)" fg:x="22" fg:w="2"/><text x="26.4405%" y="335.50">[[..</text></g><g><title>[[kernel.kallsyms]] (2 samples, 2.38%)</title><rect x="26.1905%" y="309" width="2.3810%" height="15" fill="rgb(210,204,4)" fg:x="22" fg:w="2"/><text x="26.4405%" y="319.50">[[..</text></g><g><title>[[kernel.kallsyms]] (2 samples, 2.38%)</title><rect x="26.1905%" y="293" width="2.3810%" height="15" fill="rgb(210,204,4)" fg:x="22" fg:w="2"/><text x="26.4405%" y="303.50">[[..</text></g><g><title>[[kernel.kallsyms]] (2 samples, 2.38%)</title><rect x="26.1905%" y="277" width="2.3810%" height="15" fill="rgb(210,204,4)" fg:x="22" fg:w="2"/><text x="26.4405%" y="287.50">[[..</text></g><g><title>[[kernel.kallsyms]] (2 samples, 2.38%)</title><rect x="26.1905%" y="261" width="2.3810%" height="15" fill="rgb(210,204,4)" fg:x="22" fg:w="2"/><text x="26.4405%" y="271.50">[[..</text></g><g><title>crossbeam_channel::context::Context::wait_until (8 samples, 9.52%)</title><rect x="20.2381%" y="373" width="9.5238%" height="15" fill="rgb(218,28,27)" fg:x="17" fg:w="8"/><text x="20.4881%" y="383.50">crossbeam_chan..</text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 1.19%)</title><rect x="28.5714%" y="357" width="1.1905%" height="15" fill="rgb(210,59,24)" fg:x="24" fg:w="1"/><text x="28.8214%" y="367.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::inner (1 samples, 1.19%)</title><rect x="28.5714%" y="341" width="1.1905%" height="15" fill="rgb(232,202,24)" fg:x="24" fg:w="1"/><text x="28.8214%" y="351.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 1.19%)</title><rect x="28.5714%" y="325" width="1.1905%" height="15" fill="rgb(221,185,31)" fg:x="24" fg:w="1"/><text x="28.8214%" y="335.50"></text></g><g><title>s4::processing_loop (23 samples, 27.38%)</title><rect x="4.7619%" y="533" width="27.3810%" height="15" fill="rgb(233,182,14)" fg:x="4" fg:w="23"/><text x="5.0119%" y="543.50">s4::processing_loop</text></g><g><title>s4::processing_loop::recv_many_chan (12 samples, 14.29%)</title><rect x="17.8571%" y="517" width="14.2857%" height="15" fill="rgb(253,70,6)" fg:x="15" fg:w="12"/><text x="18.1071%" y="527.50">s4::processing_loop::r..</text></g><g><title>crossbeam_channel::select::Select::select (10 samples, 11.90%)</title><rect x="20.2381%" y="501" width="11.9048%" height="15" fill="rgb(218,151,27)" fg:x="17" fg:w="10"/><text x="20.4881%" y="511.50">crossbeam_channel:..</text></g><g><title>crossbeam_channel::select::select (10 samples, 11.90%)</title><rect x="20.2381%" y="485" width="11.9048%" height="15" fill="rgb(210,225,20)" fg:x="17" fg:w="10"/><text x="20.4881%" y="495.50">crossbeam_channel:..</text></g><g><title>crossbeam_channel::select::run_select (10 samples, 11.90%)</title><rect x="20.2381%" y="469" width="11.9048%" height="15" fill="rgb(238,41,29)" fg:x="17" fg:w="10"/><text x="20.4881%" y="479.50">crossbeam_channel:..</text></g><g><title>crossbeam_channel::context::Context::with (10 samples, 11.90%)</title><rect x="20.2381%" y="453" width="11.9048%" height="15" fill="rgb(249,203,42)" fg:x="17" fg:w="10"/><text x="20.4881%" y="463.50">crossbeam_channel:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (10 samples, 11.90%)</title><rect x="20.2381%" y="437" width="11.9048%" height="15" fill="rgb(235,136,14)" fg:x="17" fg:w="10"/><text x="20.4881%" y="447.50">std::thread::local..</text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (10 samples, 11.90%)</title><rect x="20.2381%" y="421" width="11.9048%" height="15" fill="rgb(251,136,16)" fg:x="17" fg:w="10"/><text x="20.4881%" y="431.50">crossbeam_channel:..</text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (10 samples, 11.90%)</title><rect x="20.2381%" y="405" width="11.9048%" height="15" fill="rgb(251,136,16)" fg:x="17" fg:w="10"/><text x="20.4881%" y="415.50">crossbeam_channel:..</text></g><g><title>crossbeam_channel::select::run_select::{{closure}} (10 samples, 11.90%)</title><rect x="20.2381%" y="389" width="11.9048%" height="15" fill="rgb(241,20,29)" fg:x="17" fg:w="10"/><text x="20.4881%" y="399.50">crossbeam_channel:..</text></g><g><title>&lt;crossbeam_channel::channel::Receiver&lt;T&gt; as crossbeam_channel::select::SelectHandle&gt;::register (2 samples, 2.38%)</title><rect x="29.7619%" y="373" width="2.3810%" height="15" fill="rgb(232,111,38)" fg:x="25" fg:w="2"/><text x="30.0119%" y="383.50">&lt;c..</text></g><g><title>&lt;crossbeam_channel::flavors::array::Receiver&lt;T&gt; as crossbeam_channel::select::SelectHandle&gt;::register (2 samples, 2.38%)</title><rect x="29.7619%" y="357" width="2.3810%" height="15" fill="rgb(249,116,40)" fg:x="25" fg:w="2"/><text x="30.0119%" y="367.50">&lt;c..</text></g><g><title>crossbeam_channel::waker::SyncWaker::register (2 samples, 2.38%)</title><rect x="29.7619%" y="341" width="2.3810%" height="15" fill="rgb(224,150,31)" fg:x="25" fg:w="2"/><text x="30.0119%" y="351.50">cr..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (2 samples, 2.38%)</title><rect x="29.7619%" y="325" width="2.3810%" height="15" fill="rgb(234,45,50)" fg:x="25" fg:w="2"/><text x="30.0119%" y="335.50">st..</text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (2 samples, 2.38%)</title><rect x="29.7619%" y="309" width="2.3810%" height="15" fill="rgb(247,66,5)" fg:x="25" fg:w="2"/><text x="30.0119%" y="319.50">st..</text></g><g><title>std::rt::lang_start_internal (24 samples, 28.57%)</title><rect x="4.7619%" y="741" width="28.5714%" height="15" fill="rgb(240,177,54)" fg:x="4" fg:w="24"/><text x="5.0119%" y="751.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (24 samples, 28.57%)</title><rect x="4.7619%" y="725" width="28.5714%" height="15" fill="rgb(216,75,8)" fg:x="4" fg:w="24"/><text x="5.0119%" y="735.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (24 samples, 28.57%)</title><rect x="4.7619%" y="709" width="28.5714%" height="15" fill="rgb(212,61,29)" fg:x="4" fg:w="24"/><text x="5.0119%" y="719.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (24 samples, 28.57%)</title><rect x="4.7619%" y="693" width="28.5714%" height="15" fill="rgb(232,162,46)" fg:x="4" fg:w="24"/><text x="5.0119%" y="703.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (24 samples, 28.57%)</title><rect x="4.7619%" y="677" width="28.5714%" height="15" fill="rgb(219,15,13)" fg:x="4" fg:w="24"/><text x="5.0119%" y="687.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (24 samples, 28.57%)</title><rect x="4.7619%" y="661" width="28.5714%" height="15" fill="rgb(216,75,8)" fg:x="4" fg:w="24"/><text x="5.0119%" y="671.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (24 samples, 28.57%)</title><rect x="4.7619%" y="645" width="28.5714%" height="15" fill="rgb(212,61,29)" fg:x="4" fg:w="24"/><text x="5.0119%" y="655.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (24 samples, 28.57%)</title><rect x="4.7619%" y="629" width="28.5714%" height="15" fill="rgb(232,162,46)" fg:x="4" fg:w="24"/><text x="5.0119%" y="639.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (24 samples, 28.57%)</title><rect x="4.7619%" y="613" width="28.5714%" height="15" fill="rgb(212,73,0)" fg:x="4" fg:w="24"/><text x="5.0119%" y="623.50">core::ops::function::impls::&lt;impl core::ops::f..</text></g><g><title>std::rt::lang_start::{{closure}} (24 samples, 28.57%)</title><rect x="4.7619%" y="597" width="28.5714%" height="15" fill="rgb(213,78,9)" fg:x="4" fg:w="24"/><text x="5.0119%" y="607.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (24 samples, 28.57%)</title><rect x="4.7619%" y="581" width="28.5714%" height="15" fill="rgb(210,88,34)" fg:x="4" fg:w="24"/><text x="5.0119%" y="591.50">std::sys_common::backtrace::__rust_begin_short..</text></g><g><title>core::ops::function::FnOnce::call_once (24 samples, 28.57%)</title><rect x="4.7619%" y="565" width="28.5714%" height="15" fill="rgb(210,80,10)" fg:x="4" fg:w="24"/><text x="5.0119%" y="575.50">core::ops::function::FnOnce::call_once</text></g><g><title>s4::main (24 samples, 28.57%)</title><rect x="4.7619%" y="549" width="28.5714%" height="15" fill="rgb(221,151,31)" fg:x="4" fg:w="24"/><text x="5.0119%" y="559.50">s4::main</text></g><g><title>s4::cli_process_args (1 samples, 1.19%)</title><rect x="32.1429%" y="533" width="1.1905%" height="15" fill="rgb(217,50,44)" fg:x="27" fg:w="1"/><text x="32.3929%" y="543.50"></text></g><g><title>clap_builder::derive::Parser::parse (1 samples, 1.19%)</title><rect x="32.1429%" y="517" width="1.1905%" height="15" fill="rgb(252,59,20)" fg:x="27" fg:w="1"/><text x="32.3929%" y="527.50"></text></g><g><title>clap_builder::builder::command::Command::get_matches (1 samples, 1.19%)</title><rect x="32.1429%" y="501" width="1.1905%" height="15" fill="rgb(222,72,24)" fg:x="27" fg:w="1"/><text x="32.3929%" y="511.50"></text></g><g><title>clap_builder::builder::command::Command::get_matches_from (1 samples, 1.19%)</title><rect x="32.1429%" y="485" width="1.1905%" height="15" fill="rgb(236,115,49)" fg:x="27" fg:w="1"/><text x="32.3929%" y="495.50"></text></g><g><title>clap_builder::builder::command::Command::try_get_matches_from_mut (1 samples, 1.19%)</title><rect x="32.1429%" y="469" width="1.1905%" height="15" fill="rgb(205,157,11)" fg:x="27" fg:w="1"/><text x="32.3929%" y="479.50"></text></g><g><title>clap_builder::builder::command::Command::_do_parse (1 samples, 1.19%)</title><rect x="32.1429%" y="453" width="1.1905%" height="15" fill="rgb(242,199,15)" fg:x="27" fg:w="1"/><text x="32.3929%" y="463.50"></text></g><g><title>clap_builder::parser::parser::Parser::get_matches_with (1 samples, 1.19%)</title><rect x="32.1429%" y="437" width="1.1905%" height="15" fill="rgb(214,35,29)" fg:x="27" fg:w="1"/><text x="32.3929%" y="447.50"></text></g><g><title>clap_builder::parser::validator::Validator::validate (1 samples, 1.19%)</title><rect x="32.1429%" y="421" width="1.1905%" height="15" fill="rgb(237,18,31)" fg:x="27" fg:w="1"/><text x="32.3929%" y="431.50"></text></g><g><title>clap_builder::parser::validator::Validator::validate_required (1 samples, 1.19%)</title><rect x="32.1429%" y="405" width="1.1905%" height="15" fill="rgb(225,107,2)" fg:x="27" fg:w="1"/><text x="32.3929%" y="415.50"></text></g><g><title>clap_builder::parser::validator::Validator::gather_requires (1 samples, 1.19%)</title><rect x="32.1429%" y="389" width="1.1905%" height="15" fill="rgb(246,134,14)" fg:x="27" fg:w="1"/><text x="32.3929%" y="399.50"></text></g><g><title>clap_builder::builder::command::Command::unroll_arg_requires (1 samples, 1.19%)</title><rect x="32.1429%" y="373" width="1.1905%" height="15" fill="rgb(222,117,4)" fg:x="27" fg:w="1"/><text x="32.3929%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;clap_builder::util::id::Id&gt;&gt; (1 samples, 1.19%)</title><rect x="32.1429%" y="357" width="1.1905%" height="15" fill="rgb(206,73,8)" fg:x="27" fg:w="1"/><text x="32.3929%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;clap_builder::util::id::Id&gt;&gt; (1 samples, 1.19%)</title><rect x="32.1429%" y="341" width="1.1905%" height="15" fill="rgb(212,139,43)" fg:x="27" fg:w="1"/><text x="32.3929%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 1.19%)</title><rect x="32.1429%" y="325" width="1.1905%" height="15" fill="rgb(213,128,22)" fg:x="27" fg:w="1"/><text x="32.3929%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 1.19%)</title><rect x="32.1429%" y="309" width="1.1905%" height="15" fill="rgb(238,77,31)" fg:x="27" fg:w="1"/><text x="32.3929%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 1.19%)</title><rect x="32.1429%" y="293" width="1.1905%" height="15" fill="rgb(227,15,28)" fg:x="27" fg:w="1"/><text x="32.3929%" y="303.50"></text></g><g><title>__GI___libc_free (1 samples, 1.19%)</title><rect x="32.1429%" y="277" width="1.1905%" height="15" fill="rgb(247,8,17)" fg:x="27" fg:w="1"/><text x="32.3929%" y="287.50"></text></g><g><title>_start (29 samples, 34.52%)</title><rect x="0.0000%" y="805" width="34.5238%" height="15" fill="rgb(210,219,27)" fg:x="0" fg:w="29"/><text x="0.2500%" y="815.50">_start</text></g><g><title>__libc_start_main_impl (25 samples, 29.76%)</title><rect x="4.7619%" y="789" width="29.7619%" height="15" fill="rgb(228,214,28)" fg:x="4" fg:w="25"/><text x="5.0119%" y="799.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (25 samples, 29.76%)</title><rect x="4.7619%" y="773" width="29.7619%" height="15" fill="rgb(249,173,1)" fg:x="4" fg:w="25"/><text x="5.0119%" y="783.50">__libc_start_call_main</text></g><g><title>main (25 samples, 29.76%)</title><rect x="4.7619%" y="757" width="29.7619%" height="15" fill="rgb(238,28,47)" fg:x="4" fg:w="25"/><text x="5.0119%" y="767.50">main</text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="33.3333%" y="741" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="28" fg:w="1"/><text x="33.5833%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="33.3333%" y="725" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="28" fg:w="1"/><text x="33.5833%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="33.3333%" y="709" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="28" fg:w="1"/><text x="33.5833%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="33.3333%" y="693" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="28" fg:w="1"/><text x="33.5833%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="33.3333%" y="677" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="28" fg:w="1"/><text x="33.5833%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="33.3333%" y="661" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="28" fg:w="1"/><text x="33.5833%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="33.3333%" y="645" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="28" fg:w="1"/><text x="33.5833%" y="655.50"></text></g><g><title>__clone3 (1 samples, 1.19%)</title><rect x="34.5238%" y="805" width="1.1905%" height="15" fill="rgb(252,169,8)" fg:x="29" fg:w="1"/><text x="34.7738%" y="815.50"></text></g><g><title>start_thread (1 samples, 1.19%)</title><rect x="34.5238%" y="789" width="1.1905%" height="15" fill="rgb(209,148,13)" fg:x="29" fg:w="1"/><text x="34.7738%" y="799.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 1.19%)</title><rect x="34.5238%" y="773" width="1.1905%" height="15" fill="rgb(215,36,0)" fg:x="29" fg:w="1"/><text x="34.7738%" y="783.50"></text></g><g><title>std::sys::unix::stack_overflow::Handler::new (1 samples, 1.19%)</title><rect x="34.5238%" y="757" width="1.1905%" height="15" fill="rgb(218,173,48)" fg:x="29" fg:w="1"/><text x="34.7738%" y="767.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (1 samples, 1.19%)</title><rect x="34.5238%" y="741" width="1.1905%" height="15" fill="rgb(237,166,40)" fg:x="29" fg:w="1"/><text x="34.7738%" y="751.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (1 samples, 1.19%)</title><rect x="34.5238%" y="725" width="1.1905%" height="15" fill="rgb(223,116,29)" fg:x="29" fg:w="1"/><text x="34.7738%" y="735.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (1 samples, 1.19%)</title><rect x="34.5238%" y="709" width="1.1905%" height="15" fill="rgb(233,124,20)" fg:x="29" fg:w="1"/><text x="34.7738%" y="719.50"></text></g><g><title>__GI___mmap64 (1 samples, 1.19%)</title><rect x="34.5238%" y="693" width="1.1905%" height="15" fill="rgb(216,161,14)" fg:x="29" fg:w="1"/><text x="34.7738%" y="703.50"></text></g><g><title>__GI___mmap64 (1 samples, 1.19%)</title><rect x="34.5238%" y="677" width="1.1905%" height="15" fill="rgb(216,161,14)" fg:x="29" fg:w="1"/><text x="34.7738%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="34.5238%" y="661" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="29" fg:w="1"/><text x="34.7738%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="34.5238%" y="645" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="29" fg:w="1"/><text x="34.7738%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="34.5238%" y="629" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="29" fg:w="1"/><text x="34.7738%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="34.5238%" y="613" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="29" fg:w="1"/><text x="34.7738%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="34.5238%" y="597" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="29" fg:w="1"/><text x="34.7738%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="34.5238%" y="581" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="29" fg:w="1"/><text x="34.7738%" y="591.50"></text></g><g><title>s4::cli_process_args (1 samples, 1.19%)</title><rect x="35.7143%" y="789" width="1.1905%" height="15" fill="rgb(217,50,44)" fg:x="30" fg:w="1"/><text x="35.9643%" y="799.50"></text></g><g><title>clap_builder::derive::Parser::parse (1 samples, 1.19%)</title><rect x="35.7143%" y="773" width="1.1905%" height="15" fill="rgb(252,59,20)" fg:x="30" fg:w="1"/><text x="35.9643%" y="783.50"></text></g><g><title>&lt;s4::CLI_Args as clap_builder::derive::CommandFactory&gt;::command (1 samples, 1.19%)</title><rect x="35.7143%" y="757" width="1.1905%" height="15" fill="rgb(237,136,5)" fg:x="30" fg:w="1"/><text x="35.9643%" y="767.50"></text></g><g><title>&lt;s4::CLI_Args as clap_builder::derive::Args&gt;::augment_args (1 samples, 1.19%)</title><rect x="35.7143%" y="741" width="1.1905%" height="15" fill="rgb(230,145,47)" fg:x="30" fg:w="1"/><text x="35.9643%" y="751.50"></text></g><g><title>clap_builder::builder::arg::Arg::help (1 samples, 1.19%)</title><rect x="35.7143%" y="725" width="1.1905%" height="15" fill="rgb(242,39,3)" fg:x="30" fg:w="1"/><text x="35.9643%" y="735.50"></text></g><g><title>&lt;I as clap_builder::builder::resettable::IntoResettable&lt;clap_builder::builder::styled_str::StyledStr&gt;&gt;::into_resettable (1 samples, 1.19%)</title><rect x="35.7143%" y="709" width="1.1905%" height="15" fill="rgb(220,6,48)" fg:x="30" fg:w="1"/><text x="35.9643%" y="719.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 1.19%)</title><rect x="35.7143%" y="693" width="1.1905%" height="15" fill="rgb(249,58,20)" fg:x="30" fg:w="1"/><text x="35.9643%" y="703.50"></text></g><g><title>&lt;clap_builder::builder::styled_str::StyledStr as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 1.19%)</title><rect x="35.7143%" y="677" width="1.1905%" height="15" fill="rgb(225,153,53)" fg:x="30" fg:w="1"/><text x="35.9643%" y="687.50"></text></g><g><title>clap_builder::builder::styled_str::StyledStr::none (1 samples, 1.19%)</title><rect x="35.7143%" y="661" width="1.1905%" height="15" fill="rgb(239,74,50)" fg:x="30" fg:w="1"/><text x="35.9643%" y="671.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 1.19%)</title><rect x="35.7143%" y="645" width="1.1905%" height="15" fill="rgb(242,162,39)" fg:x="30" fg:w="1"/><text x="35.9643%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 1.19%)</title><rect x="35.7143%" y="629" width="1.1905%" height="15" fill="rgb(243,52,34)" fg:x="30" fg:w="1"/><text x="35.9643%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 1.19%)</title><rect x="35.7143%" y="613" width="1.1905%" height="15" fill="rgb(224,207,30)" fg:x="30" fg:w="1"/><text x="35.9643%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 1.19%)</title><rect x="35.7143%" y="597" width="1.1905%" height="15" fill="rgb(251,49,54)" fg:x="30" fg:w="1"/><text x="35.9643%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 1.19%)</title><rect x="35.7143%" y="581" width="1.1905%" height="15" fill="rgb(212,159,3)" fg:x="30" fg:w="1"/><text x="35.9643%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 1.19%)</title><rect x="35.7143%" y="565" width="1.1905%" height="15" fill="rgb(231,142,39)" fg:x="30" fg:w="1"/><text x="35.9643%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 1.19%)</title><rect x="35.7143%" y="549" width="1.1905%" height="15" fill="rgb(249,2,22)" fg:x="30" fg:w="1"/><text x="35.9643%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 1.19%)</title><rect x="35.7143%" y="533" width="1.1905%" height="15" fill="rgb(254,53,35)" fg:x="30" fg:w="1"/><text x="35.9643%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 1.19%)</title><rect x="35.7143%" y="517" width="1.1905%" height="15" fill="rgb(237,133,22)" fg:x="30" fg:w="1"/><text x="35.9643%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="35.7143%" y="501" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="30" fg:w="1"/><text x="35.9643%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="35.7143%" y="485" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="30" fg:w="1"/><text x="35.9643%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="35.7143%" y="469" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="30" fg:w="1"/><text x="35.9643%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="35.7143%" y="453" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="30" fg:w="1"/><text x="35.9643%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="35.7143%" y="437" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="30" fg:w="1"/><text x="35.9643%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="35.7143%" y="421" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="30" fg:w="1"/><text x="35.9643%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="35.7143%" y="405" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="30" fg:w="1"/><text x="35.9643%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="35.7143%" y="389" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="30" fg:w="1"/><text x="35.9643%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.19%)</title><rect x="36.9048%" y="549" width="1.1905%" height="15" fill="rgb(214,109,53)" fg:x="31" fg:w="1"/><text x="37.1548%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 1.19%)</title><rect x="36.9048%" y="533" width="1.1905%" height="15" fill="rgb(254,35,30)" fg:x="31" fg:w="1"/><text x="37.1548%" y="543.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 1.19%)</title><rect x="36.9048%" y="517" width="1.1905%" height="15" fill="rgb(226,169,23)" fg:x="31" fg:w="1"/><text x="37.1548%" y="527.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (1 samples, 1.19%)</title><rect x="36.9048%" y="501" width="1.1905%" height="15" fill="rgb(205,130,14)" fg:x="31" fg:w="1"/><text x="37.1548%" y="511.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_at_least (1 samples, 1.19%)</title><rect x="36.9048%" y="485" width="1.1905%" height="15" fill="rgb(238,57,7)" fg:x="31" fg:w="1"/><text x="37.1548%" y="495.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 1.19%)</title><rect x="36.9048%" y="469" width="1.1905%" height="15" fill="rgb(235,200,16)" fg:x="31" fg:w="1"/><text x="37.1548%" y="479.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 1.19%)</title><rect x="36.9048%" y="453" width="1.1905%" height="15" fill="rgb(213,34,18)" fg:x="31" fg:w="1"/><text x="37.1548%" y="463.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (1 samples, 1.19%)</title><rect x="36.9048%" y="437" width="1.1905%" height="15" fill="rgb(253,35,22)" fg:x="31" fg:w="1"/><text x="37.1548%" y="447.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (1 samples, 1.19%)</title><rect x="36.9048%" y="421" width="1.1905%" height="15" fill="rgb(247,137,3)" fg:x="31" fg:w="1"/><text x="37.1548%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.19%)</title><rect x="36.9048%" y="405" width="1.1905%" height="15" fill="rgb(214,109,53)" fg:x="31" fg:w="1"/><text x="37.1548%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 1.19%)</title><rect x="36.9048%" y="389" width="1.1905%" height="15" fill="rgb(254,35,30)" fg:x="31" fg:w="1"/><text x="37.1548%" y="399.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 1.19%)</title><rect x="36.9048%" y="373" width="1.1905%" height="15" fill="rgb(226,169,23)" fg:x="31" fg:w="1"/><text x="37.1548%" y="383.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice::{{closure}} (1 samples, 1.19%)</title><rect x="36.9048%" y="357" width="1.1905%" height="15" fill="rgb(223,145,12)" fg:x="31" fg:w="1"/><text x="37.1548%" y="367.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 1.19%)</title><rect x="36.9048%" y="341" width="1.1905%" height="15" fill="rgb(235,200,16)" fg:x="31" fg:w="1"/><text x="37.1548%" y="351.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 1.19%)</title><rect x="36.9048%" y="325" width="1.1905%" height="15" fill="rgb(213,34,18)" fg:x="31" fg:w="1"/><text x="37.1548%" y="335.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (1 samples, 1.19%)</title><rect x="36.9048%" y="309" width="1.1905%" height="15" fill="rgb(210,105,37)" fg:x="31" fg:w="1"/><text x="37.1548%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.19%)</title><rect x="36.9048%" y="293" width="1.1905%" height="15" fill="rgb(214,109,53)" fg:x="31" fg:w="1"/><text x="37.1548%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 1.19%)</title><rect x="36.9048%" y="277" width="1.1905%" height="15" fill="rgb(254,35,30)" fg:x="31" fg:w="1"/><text x="37.1548%" y="287.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 1.19%)</title><rect x="36.9048%" y="261" width="1.1905%" height="15" fill="rgb(226,169,23)" fg:x="31" fg:w="1"/><text x="37.1548%" y="271.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (1 samples, 1.19%)</title><rect x="36.9048%" y="245" width="1.1905%" height="15" fill="rgb(205,130,14)" fg:x="31" fg:w="1"/><text x="37.1548%" y="255.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_at_least (1 samples, 1.19%)</title><rect x="36.9048%" y="229" width="1.1905%" height="15" fill="rgb(238,57,7)" fg:x="31" fg:w="1"/><text x="37.1548%" y="239.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 1.19%)</title><rect x="36.9048%" y="213" width="1.1905%" height="15" fill="rgb(213,34,18)" fg:x="31" fg:w="1"/><text x="37.1548%" y="223.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class (1 samples, 1.19%)</title><rect x="36.9048%" y="197" width="1.1905%" height="15" fill="rgb(246,38,12)" fg:x="31" fg:w="1"/><text x="37.1548%" y="207.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::new (1 samples, 1.19%)</title><rect x="36.9048%" y="181" width="1.1905%" height="15" fill="rgb(211,200,20)" fg:x="31" fg:w="1"/><text x="37.1548%" y="191.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8State::clear (1 samples, 1.19%)</title><rect x="36.9048%" y="165" width="1.1905%" height="15" fill="rgb(241,127,0)" fg:x="31" fg:w="1"/><text x="37.1548%" y="175.50"></text></g><g><title>regex_automata::nfa::thompson::map::Utf8BoundedMap::clear (1 samples, 1.19%)</title><rect x="36.9048%" y="149" width="1.1905%" height="15" fill="rgb(207,86,25)" fg:x="31" fg:w="1"/><text x="37.1548%" y="159.50"></text></g><g><title>alloc::vec::from_elem (1 samples, 1.19%)</title><rect x="36.9048%" y="133" width="1.1905%" height="15" fill="rgb(208,109,54)" fg:x="31" fg:w="1"/><text x="37.1548%" y="143.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1 samples, 1.19%)</title><rect x="36.9048%" y="117" width="1.1905%" height="15" fill="rgb(228,177,24)" fg:x="31" fg:w="1"/><text x="37.1548%" y="127.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (1 samples, 1.19%)</title><rect x="36.9048%" y="101" width="1.1905%" height="15" fill="rgb(216,52,5)" fg:x="31" fg:w="1"/><text x="37.1548%" y="111.50"></text></g><g><title>&lt;alloc::vec::ExtendElement&lt;T&gt; as alloc::vec::ExtendWith&lt;T&gt;&gt;::next (1 samples, 1.19%)</title><rect x="36.9048%" y="85" width="1.1905%" height="15" fill="rgb(216,123,15)" fg:x="31" fg:w="1"/><text x="37.1548%" y="95.50"></text></g><g><title>&lt;regex_automata::nfa::thompson::map::Utf8BoundedEntry as core::clone::Clone&gt;::clone (1 samples, 1.19%)</title><rect x="36.9048%" y="69" width="1.1905%" height="15" fill="rgb(211,18,41)" fg:x="31" fg:w="1"/><text x="37.1548%" y="79.50"></text></g><g><title>&lt;regex_automata::util::primitives::StateID as core::clone::Clone&gt;::clone (1 samples, 1.19%)</title><rect x="36.9048%" y="53" width="1.1905%" height="15" fill="rgb(234,185,22)" fg:x="31" fg:w="1"/><text x="37.1548%" y="63.50"></text></g><g><title>regex_automata::meta::strategy::Core::new (2 samples, 2.38%)</title><rect x="36.9048%" y="725" width="2.3810%" height="15" fill="rgb(222,69,27)" fg:x="31" fg:w="2"/><text x="37.1548%" y="735.50">re..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (2 samples, 2.38%)</title><rect x="36.9048%" y="709" width="2.3810%" height="15" fill="rgb(226,42,16)" fg:x="31" fg:w="2"/><text x="37.1548%" y="719.50">re..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (2 samples, 2.38%)</title><rect x="36.9048%" y="693" width="2.3810%" height="15" fill="rgb(242,129,17)" fg:x="31" fg:w="2"/><text x="37.1548%" y="703.50">re..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (2 samples, 2.38%)</title><rect x="36.9048%" y="677" width="2.3810%" height="15" fill="rgb(247,137,3)" fg:x="31" fg:w="2"/><text x="37.1548%" y="687.50">re..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 2.38%)</title><rect x="36.9048%" y="661" width="2.3810%" height="15" fill="rgb(214,109,53)" fg:x="31" fg:w="2"/><text x="37.1548%" y="671.50">&lt;c..</text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 2.38%)</title><rect x="36.9048%" y="645" width="2.3810%" height="15" fill="rgb(254,35,30)" fg:x="31" fg:w="2"/><text x="37.1548%" y="655.50">co..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 2.38%)</title><rect x="36.9048%" y="629" width="2.3810%" height="15" fill="rgb(226,169,23)" fg:x="31" fg:w="2"/><text x="37.1548%" y="639.50">co..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile::{{closure}} (2 samples, 2.38%)</title><rect x="36.9048%" y="613" width="2.3810%" height="15" fill="rgb(218,216,52)" fg:x="31" fg:w="2"/><text x="37.1548%" y="623.50">re..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (2 samples, 2.38%)</title><rect x="36.9048%" y="597" width="2.3810%" height="15" fill="rgb(235,200,16)" fg:x="31" fg:w="2"/><text x="37.1548%" y="607.50">re..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (2 samples, 2.38%)</title><rect x="36.9048%" y="581" width="2.3810%" height="15" fill="rgb(213,34,18)" fg:x="31" fg:w="2"/><text x="37.1548%" y="591.50">re..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (2 samples, 2.38%)</title><rect x="36.9048%" y="565" width="2.3810%" height="15" fill="rgb(210,105,37)" fg:x="31" fg:w="2"/><text x="37.1548%" y="575.50">re..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 1.19%)</title><rect x="38.0952%" y="549" width="1.1905%" height="15" fill="rgb(222,94,14)" fg:x="32" fg:w="1"/><text x="38.3452%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 1.19%)</title><rect x="38.0952%" y="533" width="1.1905%" height="15" fill="rgb(254,35,30)" fg:x="32" fg:w="1"/><text x="38.3452%" y="543.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 1.19%)</title><rect x="38.0952%" y="517" width="1.1905%" height="15" fill="rgb(226,169,23)" fg:x="32" fg:w="1"/><text x="38.3452%" y="527.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (1 samples, 1.19%)</title><rect x="38.0952%" y="501" width="1.1905%" height="15" fill="rgb(205,130,14)" fg:x="32" fg:w="1"/><text x="38.3452%" y="511.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_at_least (1 samples, 1.19%)</title><rect x="38.0952%" y="485" width="1.1905%" height="15" fill="rgb(238,57,7)" fg:x="32" fg:w="1"/><text x="38.3452%" y="495.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 1.19%)</title><rect x="38.0952%" y="469" width="1.1905%" height="15" fill="rgb(235,200,16)" fg:x="32" fg:w="1"/><text x="38.3452%" y="479.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 1.19%)</title><rect x="38.0952%" y="453" width="1.1905%" height="15" fill="rgb(213,34,18)" fg:x="32" fg:w="1"/><text x="38.3452%" y="463.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (1 samples, 1.19%)</title><rect x="38.0952%" y="437" width="1.1905%" height="15" fill="rgb(253,35,22)" fg:x="32" fg:w="1"/><text x="38.3452%" y="447.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (1 samples, 1.19%)</title><rect x="38.0952%" y="421" width="1.1905%" height="15" fill="rgb(247,137,3)" fg:x="32" fg:w="1"/><text x="38.3452%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.19%)</title><rect x="38.0952%" y="405" width="1.1905%" height="15" fill="rgb(214,109,53)" fg:x="32" fg:w="1"/><text x="38.3452%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 1.19%)</title><rect x="38.0952%" y="389" width="1.1905%" height="15" fill="rgb(254,35,30)" fg:x="32" fg:w="1"/><text x="38.3452%" y="399.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 1.19%)</title><rect x="38.0952%" y="373" width="1.1905%" height="15" fill="rgb(226,169,23)" fg:x="32" fg:w="1"/><text x="38.3452%" y="383.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice::{{closure}} (1 samples, 1.19%)</title><rect x="38.0952%" y="357" width="1.1905%" height="15" fill="rgb(223,145,12)" fg:x="32" fg:w="1"/><text x="38.3452%" y="367.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 1.19%)</title><rect x="38.0952%" y="341" width="1.1905%" height="15" fill="rgb(235,200,16)" fg:x="32" fg:w="1"/><text x="38.3452%" y="351.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 1.19%)</title><rect x="38.0952%" y="325" width="1.1905%" height="15" fill="rgb(213,34,18)" fg:x="32" fg:w="1"/><text x="38.3452%" y="335.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (1 samples, 1.19%)</title><rect x="38.0952%" y="309" width="1.1905%" height="15" fill="rgb(210,105,37)" fg:x="32" fg:w="1"/><text x="38.3452%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 1.19%)</title><rect x="38.0952%" y="293" width="1.1905%" height="15" fill="rgb(222,94,14)" fg:x="32" fg:w="1"/><text x="38.3452%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 1.19%)</title><rect x="38.0952%" y="277" width="1.1905%" height="15" fill="rgb(254,35,30)" fg:x="32" fg:w="1"/><text x="38.3452%" y="287.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 1.19%)</title><rect x="38.0952%" y="261" width="1.1905%" height="15" fill="rgb(226,169,23)" fg:x="32" fg:w="1"/><text x="38.3452%" y="271.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (1 samples, 1.19%)</title><rect x="38.0952%" y="245" width="1.1905%" height="15" fill="rgb(205,130,14)" fg:x="32" fg:w="1"/><text x="38.3452%" y="255.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_at_least (1 samples, 1.19%)</title><rect x="38.0952%" y="229" width="1.1905%" height="15" fill="rgb(238,57,7)" fg:x="32" fg:w="1"/><text x="38.3452%" y="239.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 1.19%)</title><rect x="38.0952%" y="213" width="1.1905%" height="15" fill="rgb(213,34,18)" fg:x="32" fg:w="1"/><text x="38.3452%" y="223.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class (1 samples, 1.19%)</title><rect x="38.0952%" y="197" width="1.1905%" height="15" fill="rgb(246,38,12)" fg:x="32" fg:w="1"/><text x="38.3452%" y="207.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class_reverse_with_suffix (1 samples, 1.19%)</title><rect x="38.0952%" y="181" width="1.1905%" height="15" fill="rgb(227,194,49)" fg:x="32" fg:w="1"/><text x="38.3452%" y="191.50"></text></g><g><title>regex_syntax::utf8::Utf8Sequences::new (1 samples, 1.19%)</title><rect x="38.0952%" y="165" width="1.1905%" height="15" fill="rgb(233,119,6)" fg:x="32" fg:w="1"/><text x="38.3452%" y="175.50"></text></g><g><title>regex_syntax::utf8::Utf8Sequences::push (1 samples, 1.19%)</title><rect x="38.0952%" y="149" width="1.1905%" height="15" fill="rgb(233,91,1)" fg:x="32" fg:w="1"/><text x="38.3452%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 1.19%)</title><rect x="38.0952%" y="133" width="1.1905%" height="15" fill="rgb(241,229,15)" fg:x="32" fg:w="1"/><text x="38.3452%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 1.19%)</title><rect x="38.0952%" y="117" width="1.1905%" height="15" fill="rgb(254,103,39)" fg:x="32" fg:w="1"/><text x="38.3452%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 1.19%)</title><rect x="38.0952%" y="101" width="1.1905%" height="15" fill="rgb(254,53,35)" fg:x="32" fg:w="1"/><text x="38.3452%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 1.19%)</title><rect x="38.0952%" y="85" width="1.1905%" height="15" fill="rgb(237,133,22)" fg:x="32" fg:w="1"/><text x="38.3452%" y="95.50"></text></g><g><title>__rdl_alloc (1 samples, 1.19%)</title><rect x="38.0952%" y="69" width="1.1905%" height="15" fill="rgb(241,201,43)" fg:x="32" fg:w="1"/><text x="38.3452%" y="79.50"></text></g><g><title>[unknown] (4 samples, 4.76%)</title><rect x="35.7143%" y="805" width="4.7619%" height="15" fill="rgb(227,28,50)" fg:x="30" fg:w="4"/><text x="35.9643%" y="815.50">[unkno..</text></g><g><title>regex_automata::meta::regex::Builder::build (3 samples, 3.57%)</title><rect x="36.9048%" y="789" width="3.5714%" height="15" fill="rgb(212,33,22)" fg:x="31" fg:w="3"/><text x="37.1548%" y="799.50">rege..</text></g><g><title>regex_automata::meta::regex::Builder::build_many (3 samples, 3.57%)</title><rect x="36.9048%" y="773" width="3.5714%" height="15" fill="rgb(236,25,32)" fg:x="31" fg:w="3"/><text x="37.1548%" y="783.50">rege..</text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (3 samples, 3.57%)</title><rect x="36.9048%" y="757" width="3.5714%" height="15" fill="rgb(250,142,30)" fg:x="31" fg:w="3"/><text x="37.1548%" y="767.50">rege..</text></g><g><title>regex_automata::meta::strategy::new (3 samples, 3.57%)</title><rect x="36.9048%" y="741" width="3.5714%" height="15" fill="rgb(243,171,22)" fg:x="31" fg:w="3"/><text x="37.1548%" y="751.50">rege..</text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 1.19%)</title><rect x="39.2857%" y="725" width="1.1905%" height="15" fill="rgb(225,8,7)" fg:x="33" fg:w="1"/><text x="39.5357%" y="735.50"></text></g><g><title>regex_automata::meta::strategy::new::{{closure}} (1 samples, 1.19%)</title><rect x="39.2857%" y="709" width="1.1905%" height="15" fill="rgb(238,100,15)" fg:x="33" fg:w="1"/><text x="39.5357%" y="719.50"></text></g><g><title>regex_automata::util::prefilter::Prefilter::new (1 samples, 1.19%)</title><rect x="39.2857%" y="693" width="1.1905%" height="15" fill="rgb(227,199,27)" fg:x="33" fg:w="1"/><text x="39.5357%" y="703.50"></text></g><g><title>regex_automata::util::prefilter::Choice::new (1 samples, 1.19%)</title><rect x="39.2857%" y="677" width="1.1905%" height="15" fill="rgb(243,64,33)" fg:x="33" fg:w="1"/><text x="39.5357%" y="687.50"></text></g><g><title>regex_automata::util::prefilter::teddy::Teddy::new (1 samples, 1.19%)</title><rect x="39.2857%" y="661" width="1.1905%" height="15" fill="rgb(207,155,0)" fg:x="33" fg:w="1"/><text x="39.5357%" y="671.50"></text></g><g><title>aho_corasick::dfa::Builder::build (1 samples, 1.19%)</title><rect x="39.2857%" y="645" width="1.1905%" height="15" fill="rgb(212,91,25)" fg:x="33" fg:w="1"/><text x="39.5357%" y="655.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Builder::build (1 samples, 1.19%)</title><rect x="39.2857%" y="629" width="1.1905%" height="15" fill="rgb(235,33,22)" fg:x="33" fg:w="1"/><text x="39.5357%" y="639.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Compiler::compile (1 samples, 1.19%)</title><rect x="39.2857%" y="613" width="1.1905%" height="15" fill="rgb(253,203,15)" fg:x="33" fg:w="1"/><text x="39.5357%" y="623.50"></text></g><g><title>aho_corasick::util::alphabet::ByteClassSet::byte_classes (1 samples, 1.19%)</title><rect x="39.2857%" y="597" width="1.1905%" height="15" fill="rgb(206,94,23)" fg:x="33" fg:w="1"/><text x="39.5357%" y="607.50"></text></g><g><title>aho_corasick::util::alphabet::ByteSet::contains (1 samples, 1.19%)</title><rect x="39.2857%" y="581" width="1.1905%" height="15" fill="rgb(235,156,8)" fg:x="33" fg:w="1"/><text x="39.5357%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="40.4762%" y="661" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="34" fg:w="1"/><text x="40.7262%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="40.4762%" y="645" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="34" fg:w="1"/><text x="40.7262%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="40.4762%" y="629" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="34" fg:w="1"/><text x="40.7262%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="40.4762%" y="613" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="34" fg:w="1"/><text x="40.7262%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 2.38%)</title><rect x="40.4762%" y="709" width="2.3810%" height="15" fill="rgb(210,204,4)" fg:x="34" fg:w="2"/><text x="40.7262%" y="719.50">[[..</text></g><g><title>[[kernel.kallsyms]] (2 samples, 2.38%)</title><rect x="40.4762%" y="693" width="2.3810%" height="15" fill="rgb(210,204,4)" fg:x="34" fg:w="2"/><text x="40.7262%" y="703.50">[[..</text></g><g><title>[[kernel.kallsyms]] (2 samples, 2.38%)</title><rect x="40.4762%" y="677" width="2.3810%" height="15" fill="rgb(210,204,4)" fg:x="34" fg:w="2"/><text x="40.7262%" y="687.50">[[..</text></g><g><title>[[kernel.kallsyms]] (3 samples, 3.57%)</title><rect x="40.4762%" y="741" width="3.5714%" height="15" fill="rgb(210,204,4)" fg:x="34" fg:w="3"/><text x="40.7262%" y="751.50">[[ke..</text></g><g><title>[[kernel.kallsyms]] (3 samples, 3.57%)</title><rect x="40.4762%" y="725" width="3.5714%" height="15" fill="rgb(210,204,4)" fg:x="34" fg:w="3"/><text x="40.7262%" y="735.50">[[ke..</text></g><g><title>s4 (48 samples, 57.14%)</title><rect x="0.0000%" y="821" width="57.1429%" height="15" fill="rgb(230,7,27)" fg:x="0" fg:w="48"/><text x="0.2500%" y="831.50">s4</text></g><g><title>[[kernel.kallsyms]] (14 samples, 16.67%)</title><rect x="40.4762%" y="805" width="16.6667%" height="15" fill="rgb(210,204,4)" fg:x="34" fg:w="14"/><text x="40.7262%" y="815.50">[[kernel.kallsyms]]</text></g><g><title>[[kernel.kallsyms]] (14 samples, 16.67%)</title><rect x="40.4762%" y="789" width="16.6667%" height="15" fill="rgb(210,204,4)" fg:x="34" fg:w="14"/><text x="40.7262%" y="799.50">[[kernel.kallsyms]]</text></g><g><title>[[kernel.kallsyms]] (14 samples, 16.67%)</title><rect x="40.4762%" y="773" width="16.6667%" height="15" fill="rgb(210,204,4)" fg:x="34" fg:w="14"/><text x="40.7262%" y="783.50">[[kernel.kallsyms]]</text></g><g><title>[[kernel.kallsyms]] (14 samples, 16.67%)</title><rect x="40.4762%" y="757" width="16.6667%" height="15" fill="rgb(210,204,4)" fg:x="34" fg:w="14"/><text x="40.7262%" y="767.50">[[kernel.kallsyms]]</text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="57.1429%" y="677" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="48" fg:w="1"/><text x="57.3929%" y="687.50"></text></g><g><title>perf-exec (11 samples, 13.10%)</title><rect x="57.1429%" y="821" width="13.0952%" height="15" fill="rgb(250,111,27)" fg:x="48" fg:w="11"/><text x="57.3929%" y="831.50">perf-exec</text></g><g><title>[[kernel.kallsyms]] (11 samples, 13.10%)</title><rect x="57.1429%" y="805" width="13.0952%" height="15" fill="rgb(210,204,4)" fg:x="48" fg:w="11"/><text x="57.3929%" y="815.50">[[kernel.kallsyms]]</text></g><g><title>[[kernel.kallsyms]] (11 samples, 13.10%)</title><rect x="57.1429%" y="789" width="13.0952%" height="15" fill="rgb(210,204,4)" fg:x="48" fg:w="11"/><text x="57.3929%" y="799.50">[[kernel.kallsyms]]</text></g><g><title>[[kernel.kallsyms]] (11 samples, 13.10%)</title><rect x="57.1429%" y="773" width="13.0952%" height="15" fill="rgb(210,204,4)" fg:x="48" fg:w="11"/><text x="57.3929%" y="783.50">[[kernel.kallsyms]]</text></g><g><title>[[kernel.kallsyms]] (11 samples, 13.10%)</title><rect x="57.1429%" y="757" width="13.0952%" height="15" fill="rgb(210,204,4)" fg:x="48" fg:w="11"/><text x="57.3929%" y="767.50">[[kernel.kallsyms]]</text></g><g><title>[[kernel.kallsyms]] (11 samples, 13.10%)</title><rect x="57.1429%" y="741" width="13.0952%" height="15" fill="rgb(210,204,4)" fg:x="48" fg:w="11"/><text x="57.3929%" y="751.50">[[kernel.kallsyms]]</text></g><g><title>[[kernel.kallsyms]] (11 samples, 13.10%)</title><rect x="57.1429%" y="725" width="13.0952%" height="15" fill="rgb(210,204,4)" fg:x="48" fg:w="11"/><text x="57.3929%" y="735.50">[[kernel.kallsyms]]</text></g><g><title>[[kernel.kallsyms]] (11 samples, 13.10%)</title><rect x="57.1429%" y="709" width="13.0952%" height="15" fill="rgb(210,204,4)" fg:x="48" fg:w="11"/><text x="57.3929%" y="719.50">[[kernel.kallsyms]]</text></g><g><title>[[kernel.kallsyms]] (11 samples, 13.10%)</title><rect x="57.1429%" y="693" width="13.0952%" height="15" fill="rgb(210,204,4)" fg:x="48" fg:w="11"/><text x="57.3929%" y="703.50">[[kernel.kallsyms]]</text></g><g><title>core::fmt::Write::write_fmt (1 samples, 1.19%)</title><rect x="70.2381%" y="373" width="1.1905%" height="15" fill="rgb(223,4,50)" fg:x="59" fg:w="1"/><text x="70.4881%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 1.19%)</title><rect x="70.2381%" y="357" width="1.1905%" height="15" fill="rgb(248,210,20)" fg:x="59" fg:w="1"/><text x="70.4881%" y="367.50"></text></g><g><title>&lt;str as core::fmt::Debug&gt;::fmt (1 samples, 1.19%)</title><rect x="70.2381%" y="341" width="1.1905%" height="15" fill="rgb(215,221,20)" fg:x="59" fg:w="1"/><text x="70.4881%" y="351.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::escape_debug_ext (1 samples, 1.19%)</title><rect x="70.2381%" y="325" width="1.1905%" height="15" fill="rgb(208,192,15)" fg:x="59" fg:w="1"/><text x="70.4881%" y="335.50"></text></g><g><title>s4lib::readers::journalreader::JournalReader::Error_from_Errno (2 samples, 2.38%)</title><rect x="70.2381%" y="453" width="2.3810%" height="15" fill="rgb(229,197,29)" fg:x="59" fg:w="2"/><text x="70.4881%" y="463.50">s4..</text></g><g><title>alloc::fmt::format (2 samples, 2.38%)</title><rect x="70.2381%" y="437" width="2.3810%" height="15" fill="rgb(245,136,15)" fg:x="59" fg:w="2"/><text x="70.4881%" y="447.50">al..</text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (2 samples, 2.38%)</title><rect x="70.2381%" y="421" width="2.3810%" height="15" fill="rgb(229,150,16)" fg:x="59" fg:w="2"/><text x="70.4881%" y="431.50">co..</text></g><g><title>alloc::fmt::format::{{closure}} (2 samples, 2.38%)</title><rect x="70.2381%" y="405" width="2.3810%" height="15" fill="rgb(213,228,4)" fg:x="59" fg:w="2"/><text x="70.4881%" y="415.50">al..</text></g><g><title>alloc::fmt::format::format_inner (2 samples, 2.38%)</title><rect x="70.2381%" y="389" width="2.3810%" height="15" fill="rgb(225,219,39)" fg:x="59" fg:w="2"/><text x="70.4881%" y="399.50">al..</text></g><g><title>alloc::string::String::with_capacity (1 samples, 1.19%)</title><rect x="71.4286%" y="373" width="1.1905%" height="15" fill="rgb(237,184,44)" fg:x="60" fg:w="1"/><text x="71.6786%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 1.19%)</title><rect x="71.4286%" y="357" width="1.1905%" height="15" fill="rgb(253,154,22)" fg:x="60" fg:w="1"/><text x="71.6786%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 1.19%)</title><rect x="71.4286%" y="341" width="1.1905%" height="15" fill="rgb(249,207,12)" fg:x="60" fg:w="1"/><text x="71.6786%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 1.19%)</title><rect x="71.4286%" y="325" width="1.1905%" height="15" fill="rgb(224,194,14)" fg:x="60" fg:w="1"/><text x="71.6786%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 1.19%)</title><rect x="71.4286%" y="309" width="1.1905%" height="15" fill="rgb(227,204,5)" fg:x="60" fg:w="1"/><text x="71.6786%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 1.19%)</title><rect x="71.4286%" y="293" width="1.1905%" height="15" fill="rgb(231,114,21)" fg:x="60" fg:w="1"/><text x="71.6786%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 1.19%)</title><rect x="71.4286%" y="277" width="1.1905%" height="15" fill="rgb(238,209,2)" fg:x="60" fg:w="1"/><text x="71.6786%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 1.19%)</title><rect x="71.4286%" y="261" width="1.1905%" height="15" fill="rgb(253,135,41)" fg:x="60" fg:w="1"/><text x="71.6786%" y="271.50"></text></g><g><title>__GI___libc_malloc (1 samples, 1.19%)</title><rect x="71.4286%" y="245" width="1.1905%" height="15" fill="rgb(206,112,53)" fg:x="60" fg:w="1"/><text x="71.6786%" y="255.50"></text></g><g><title>_int_malloc (1 samples, 1.19%)</title><rect x="71.4286%" y="229" width="1.1905%" height="15" fill="rgb(222,219,51)" fg:x="60" fg:w="1"/><text x="71.6786%" y="239.50"></text></g><g><title>[libsystemd.so.0.32.0] (3 samples, 3.57%)</title><rect x="72.6190%" y="389" width="3.5714%" height="15" fill="rgb(211,164,11)" fg:x="61" fg:w="3"/><text x="72.8690%" y="399.50">[lib..</text></g><g><title>s4lib::readers::journalreader::JournalReader::get_source_realtime_timestamp (6 samples, 7.14%)</title><rect x="70.2381%" y="485" width="7.1429%" height="15" fill="rgb(230,163,17)" fg:x="59" fg:w="6"/><text x="70.4881%" y="495.50">s4lib::rea..</text></g><g><title>s4lib::readers::journalreader::JournalReader::call_sd_journal_get_data (6 samples, 7.14%)</title><rect x="70.2381%" y="469" width="7.1429%" height="15" fill="rgb(241,72,50)" fg:x="59" fg:w="6"/><text x="70.4881%" y="479.50">s4lib::rea..</text></g><g><title>s4lib::libload::systemd_dlopen2::SdJournalHApi::sd_journal_get_data (4 samples, 4.76%)</title><rect x="72.6190%" y="453" width="4.7619%" height="15" fill="rgb(207,192,43)" fg:x="61" fg:w="4"/><text x="72.8690%" y="463.50">s4lib:..</text></g><g><title>sd_journal_get_data (4 samples, 4.76%)</title><rect x="72.6190%" y="437" width="4.7619%" height="15" fill="rgb(223,156,7)" fg:x="61" fg:w="4"/><text x="72.8690%" y="447.50">sd_jou..</text></g><g><title>[libsystemd.so.0.32.0] (4 samples, 4.76%)</title><rect x="72.6190%" y="421" width="4.7619%" height="15" fill="rgb(211,164,11)" fg:x="61" fg:w="4"/><text x="72.8690%" y="431.50">[libsy..</text></g><g><title>[libsystemd.so.0.32.0] (4 samples, 4.76%)</title><rect x="72.6190%" y="405" width="4.7619%" height="15" fill="rgb(211,164,11)" fg:x="61" fg:w="4"/><text x="72.8690%" y="415.50">[libsy..</text></g><g><title>[libsystemd.so.0.32.0] (1 samples, 1.19%)</title><rect x="77.3810%" y="405" width="1.1905%" height="15" fill="rgb(211,164,11)" fg:x="65" fg:w="1"/><text x="77.6310%" y="415.50"></text></g><g><title>[libsystemd.so.0.32.0] (1 samples, 1.19%)</title><rect x="77.3810%" y="389" width="1.1905%" height="15" fill="rgb(211,164,11)" fg:x="65" fg:w="1"/><text x="77.6310%" y="399.50"></text></g><g><title>[libsystemd.so.0.32.0] (1 samples, 1.19%)</title><rect x="77.3810%" y="373" width="1.1905%" height="15" fill="rgb(211,164,11)" fg:x="65" fg:w="1"/><text x="77.6310%" y="383.50"></text></g><g><title>[libsystemd.so.0.32.0] (1 samples, 1.19%)</title><rect x="77.3810%" y="357" width="1.1905%" height="15" fill="rgb(211,164,11)" fg:x="65" fg:w="1"/><text x="77.6310%" y="367.50"></text></g><g><title>[libsystemd.so.0.32.0] (2 samples, 2.38%)</title><rect x="77.3810%" y="421" width="2.3810%" height="15" fill="rgb(211,164,11)" fg:x="65" fg:w="2"/><text x="77.6310%" y="431.50">[l..</text></g><g><title>s4lib::readers::journalreader::JournalReader::next_common (9 samples, 10.71%)</title><rect x="70.2381%" y="501" width="10.7143%" height="15" fill="rgb(253,190,43)" fg:x="59" fg:w="9"/><text x="70.4881%" y="511.50">s4lib::readers::..</text></g><g><title>s4lib::readers::journalreader::JournalReader::call_sd_journal_next (3 samples, 3.57%)</title><rect x="77.3810%" y="485" width="3.5714%" height="15" fill="rgb(221,125,48)" fg:x="65" fg:w="3"/><text x="77.6310%" y="495.50">s4li..</text></g><g><title>s4lib::libload::systemd_dlopen2::SdJournalHApi::sd_journal_next (3 samples, 3.57%)</title><rect x="77.3810%" y="469" width="3.5714%" height="15" fill="rgb(231,99,41)" fg:x="65" fg:w="3"/><text x="77.6310%" y="479.50">s4li..</text></g><g><title>[libsystemd.so.0.32.0] (3 samples, 3.57%)</title><rect x="77.3810%" y="453" width="3.5714%" height="15" fill="rgb(211,164,11)" fg:x="65" fg:w="3"/><text x="77.6310%" y="463.50">[lib..</text></g><g><title>[libsystemd.so.0.32.0] (3 samples, 3.57%)</title><rect x="77.3810%" y="437" width="3.5714%" height="15" fill="rgb(211,164,11)" fg:x="65" fg:w="3"/><text x="77.6310%" y="447.50">[lib..</text></g><g><title>[libsystemd.so.0.32.0] (3 samples, 3.57%)</title><rect x="80.9524%" y="405" width="3.5714%" height="15" fill="rgb(211,164,11)" fg:x="68" fg:w="3"/><text x="81.2024%" y="415.50">[lib..</text></g><g><title>[libsystemd.so.0.32.0] (5 samples, 5.95%)</title><rect x="80.9524%" y="421" width="5.9524%" height="15" fill="rgb(211,164,11)" fg:x="68" fg:w="5"/><text x="81.2024%" y="431.50">[libsyst..</text></g><g><title>s4lib::readers::journalreader::JournalReader::call_sd_journal_enumerate_available_data (7 samples, 8.33%)</title><rect x="80.9524%" y="501" width="8.3333%" height="15" fill="rgb(208,121,41)" fg:x="68" fg:w="7"/><text x="81.2024%" y="511.50">s4lib::reade..</text></g><g><title>s4lib::libload::systemd_dlopen2::SdJournalHApi::sd_journal_enumerate_available_data (7 samples, 8.33%)</title><rect x="80.9524%" y="485" width="8.3333%" height="15" fill="rgb(222,156,32)" fg:x="68" fg:w="7"/><text x="81.2024%" y="495.50">s4lib::liblo..</text></g><g><title>sd_journal_enumerate_available_data (7 samples, 8.33%)</title><rect x="80.9524%" y="469" width="8.3333%" height="15" fill="rgb(233,38,20)" fg:x="68" fg:w="7"/><text x="81.2024%" y="479.50">sd_journal_e..</text></g><g><title>sd_journal_enumerate_data (7 samples, 8.33%)</title><rect x="80.9524%" y="453" width="8.3333%" height="15" fill="rgb(253,48,41)" fg:x="68" fg:w="7"/><text x="81.2024%" y="463.50">sd_journal_e..</text></g><g><title>[libsystemd.so.0.32.0] (7 samples, 8.33%)</title><rect x="80.9524%" y="437" width="8.3333%" height="15" fill="rgb(211,164,11)" fg:x="68" fg:w="7"/><text x="81.2024%" y="447.50">[libsystemd...</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 1.19%)</title><rect x="89.2857%" y="501" width="1.1905%" height="15" fill="rgb(253,154,22)" fg:x="75" fg:w="1"/><text x="89.5357%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 1.19%)</title><rect x="89.2857%" y="485" width="1.1905%" height="15" fill="rgb(249,207,12)" fg:x="75" fg:w="1"/><text x="89.5357%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 1.19%)</title><rect x="89.2857%" y="469" width="1.1905%" height="15" fill="rgb(224,194,14)" fg:x="75" fg:w="1"/><text x="89.5357%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 1.19%)</title><rect x="89.2857%" y="453" width="1.1905%" height="15" fill="rgb(227,204,5)" fg:x="75" fg:w="1"/><text x="89.5357%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 1.19%)</title><rect x="89.2857%" y="437" width="1.1905%" height="15" fill="rgb(231,114,21)" fg:x="75" fg:w="1"/><text x="89.5357%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 1.19%)</title><rect x="89.2857%" y="421" width="1.1905%" height="15" fill="rgb(238,209,2)" fg:x="75" fg:w="1"/><text x="89.5357%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 1.19%)</title><rect x="89.2857%" y="405" width="1.1905%" height="15" fill="rgb(253,135,41)" fg:x="75" fg:w="1"/><text x="89.5357%" y="415.50"></text></g><g><title>__GI___libc_malloc (1 samples, 1.19%)</title><rect x="89.2857%" y="389" width="1.1905%" height="15" fill="rgb(206,112,53)" fg:x="75" fg:w="1"/><text x="89.5357%" y="399.50"></text></g><g><title>_int_malloc (1 samples, 1.19%)</title><rect x="89.2857%" y="373" width="1.1905%" height="15" fill="rgb(222,219,51)" fg:x="75" fg:w="1"/><text x="89.5357%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_first (1 samples, 1.19%)</title><rect x="90.4762%" y="437" width="1.1905%" height="15" fill="rgb(206,202,51)" fg:x="76" fg:w="1"/><text x="90.7262%" y="447.50"></text></g><g><title>s4lib::readers::journalreader::JournalReader::next (19 samples, 22.62%)</title><rect x="70.2381%" y="549" width="22.6190%" height="15" fill="rgb(245,150,34)" fg:x="59" fg:w="19"/><text x="70.4881%" y="559.50">s4lib::readers::journalreader::Journ..</text></g><g><title>s4lib::readers::journalreader::JournalReader::next_dispatch (19 samples, 22.62%)</title><rect x="70.2381%" y="533" width="22.6190%" height="15" fill="rgb(244,188,8)" fg:x="59" fg:w="19"/><text x="70.4881%" y="543.50">s4lib::readers::journalreader::Journ..</text></g><g><title>s4lib::readers::journalreader::JournalReader::next_short (19 samples, 22.62%)</title><rect x="70.2381%" y="517" width="22.6190%" height="15" fill="rgb(239,51,26)" fg:x="59" fg:w="19"/><text x="70.4881%" y="527.50">s4lib::readers::journalreader::Journ..</text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (2 samples, 2.38%)</title><rect x="90.4762%" y="501" width="2.3810%" height="15" fill="rgb(249,76,35)" fg:x="76" fg:w="2"/><text x="90.7262%" y="511.50">&lt;T..</text></g><g><title>&lt;chrono::format::formatting::DelayedFormat&lt;I&gt; as core::fmt::Display&gt;::fmt (2 samples, 2.38%)</title><rect x="90.4762%" y="485" width="2.3810%" height="15" fill="rgb(231,60,11)" fg:x="76" fg:w="2"/><text x="90.7262%" y="495.50">&lt;c..</text></g><g><title>chrono::format::formatting::format (2 samples, 2.38%)</title><rect x="90.4762%" y="469" width="2.3810%" height="15" fill="rgb(205,127,54)" fg:x="76" fg:w="2"/><text x="90.7262%" y="479.50">ch..</text></g><g><title>&lt;chrono::format::strftime::StrftimeItems as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 2.38%)</title><rect x="90.4762%" y="453" width="2.3810%" height="15" fill="rgb(244,120,2)" fg:x="76" fg:w="2"/><text x="90.7262%" y="463.50">&lt;c..</text></g><g><title>s4lib::readers::journalreader::JournalReader::new (1 samples, 1.19%)</title><rect x="92.8571%" y="549" width="1.1905%" height="15" fill="rgb(241,172,36)" fg:x="78" fg:w="1"/><text x="93.1071%" y="559.50"></text></g><g><title>s4lib::libload::systemd_dlopen2::SdJournalHApi::sd_journal_open_files (1 samples, 1.19%)</title><rect x="92.8571%" y="533" width="1.1905%" height="15" fill="rgb(253,109,49)" fg:x="78" fg:w="1"/><text x="93.1071%" y="543.50"></text></g><g><title>sd_journal_open_files (1 samples, 1.19%)</title><rect x="92.8571%" y="517" width="1.1905%" height="15" fill="rgb(235,107,21)" fg:x="78" fg:w="1"/><text x="93.1071%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="92.8571%" y="501" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="78" fg:w="1"/><text x="93.1071%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="92.8571%" y="485" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="78" fg:w="1"/><text x="93.1071%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="92.8571%" y="469" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="78" fg:w="1"/><text x="93.1071%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="92.8571%" y="453" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="78" fg:w="1"/><text x="93.1071%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="92.8571%" y="437" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="78" fg:w="1"/><text x="93.1071%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="92.8571%" y="421" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="78" fg:w="1"/><text x="93.1071%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="92.8571%" y="405" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="78" fg:w="1"/><text x="93.1071%" y="415.50"></text></g><g><title>crossbeam_channel::waker::Waker::try_select (1 samples, 1.19%)</title><rect x="94.0476%" y="469" width="1.1905%" height="15" fill="rgb(226,5,34)" fg:x="79" fg:w="1"/><text x="94.2976%" y="479.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (1 samples, 1.19%)</title><rect x="94.0476%" y="453" width="1.1905%" height="15" fill="rgb(232,40,12)" fg:x="79" fg:w="1"/><text x="94.2976%" y="463.50"></text></g><g><title>crossbeam_channel::waker::Waker::try_select::{{closure}} (1 samples, 1.19%)</title><rect x="94.0476%" y="437" width="1.1905%" height="15" fill="rgb(213,3,5)" fg:x="79" fg:w="1"/><text x="94.2976%" y="447.50"></text></g><g><title>crossbeam_channel::context::Context::unpark (1 samples, 1.19%)</title><rect x="94.0476%" y="421" width="1.1905%" height="15" fill="rgb(234,126,29)" fg:x="79" fg:w="1"/><text x="94.2976%" y="431.50"></text></g><g><title>std::thread::Thread::unpark (1 samples, 1.19%)</title><rect x="94.0476%" y="405" width="1.1905%" height="15" fill="rgb(211,180,25)" fg:x="79" fg:w="1"/><text x="94.2976%" y="415.50"></text></g><g><title>std::sys_common::thread_parker::futex::Parker::unpark (1 samples, 1.19%)</title><rect x="94.0476%" y="389" width="1.1905%" height="15" fill="rgb(226,145,31)" fg:x="79" fg:w="1"/><text x="94.2976%" y="399.50"></text></g><g><title>std::sys::unix::futex::futex_wake (1 samples, 1.19%)</title><rect x="94.0476%" y="373" width="1.1905%" height="15" fill="rgb(220,16,22)" fg:x="79" fg:w="1"/><text x="94.2976%" y="383.50"></text></g><g><title>syscall (1 samples, 1.19%)</title><rect x="94.0476%" y="357" width="1.1905%" height="15" fill="rgb(207,84,5)" fg:x="79" fg:w="1"/><text x="94.2976%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="94.0476%" y="341" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="79" fg:w="1"/><text x="94.2976%" y="351.50"></text></g><g><title>crossbeam_channel::flavors::array::Channel&lt;T&gt;::write (2 samples, 2.38%)</title><rect x="94.0476%" y="501" width="2.3810%" height="15" fill="rgb(217,57,9)" fg:x="79" fg:w="2"/><text x="94.2976%" y="511.50">cr..</text></g><g><title>crossbeam_channel::waker::SyncWaker::notify (2 samples, 2.38%)</title><rect x="94.0476%" y="485" width="2.3810%" height="15" fill="rgb(222,105,38)" fg:x="79" fg:w="2"/><text x="94.2976%" y="495.50">cr..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;crossbeam_channel::waker::Entry&gt;&gt; (1 samples, 1.19%)</title><rect x="95.2381%" y="469" width="1.1905%" height="15" fill="rgb(241,87,2)" fg:x="80" fg:w="1"/><text x="95.4881%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_channel::waker::Entry&gt; (1 samples, 1.19%)</title><rect x="95.2381%" y="453" width="1.1905%" height="15" fill="rgb(211,110,50)" fg:x="80" fg:w="1"/><text x="95.4881%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_channel::context::Context&gt; (1 samples, 1.19%)</title><rect x="95.2381%" y="437" width="1.1905%" height="15" fill="rgb(208,207,32)" fg:x="80" fg:w="1"/><text x="95.4881%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;crossbeam_channel::context::Inner&gt;&gt; (1 samples, 1.19%)</title><rect x="95.2381%" y="421" width="1.1905%" height="15" fill="rgb(212,156,49)" fg:x="80" fg:w="1"/><text x="95.4881%" y="431.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 1.19%)</title><rect x="95.2381%" y="405" width="1.1905%" height="15" fill="rgb(220,153,15)" fg:x="80" fg:w="1"/><text x="95.4881%" y="415.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (3 samples, 3.57%)</title><rect x="94.0476%" y="533" width="3.5714%" height="15" fill="rgb(211,156,23)" fg:x="79" fg:w="3"/><text x="94.2976%" y="543.50">cros..</text></g><g><title>crossbeam_channel::flavors::array::Channel&lt;T&gt;::send (3 samples, 3.57%)</title><rect x="94.0476%" y="517" width="3.5714%" height="15" fill="rgb(239,129,18)" fg:x="79" fg:w="3"/><text x="94.2976%" y="527.50">cros..</text></g><g><title>crossbeam_channel::context::Context::with (1 samples, 1.19%)</title><rect x="96.4286%" y="501" width="1.1905%" height="15" fill="rgb(249,203,42)" fg:x="81" fg:w="1"/><text x="96.6786%" y="511.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 1.19%)</title><rect x="96.4286%" y="485" width="1.1905%" height="15" fill="rgb(235,136,14)" fg:x="81" fg:w="1"/><text x="96.6786%" y="495.50"></text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (1 samples, 1.19%)</title><rect x="96.4286%" y="469" width="1.1905%" height="15" fill="rgb(251,136,16)" fg:x="81" fg:w="1"/><text x="96.6786%" y="479.50"></text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (1 samples, 1.19%)</title><rect x="96.4286%" y="453" width="1.1905%" height="15" fill="rgb(251,136,16)" fg:x="81" fg:w="1"/><text x="96.6786%" y="463.50"></text></g><g><title>crossbeam_channel::flavors::array::Channel&lt;T&gt;::send::{{closure}} (1 samples, 1.19%)</title><rect x="96.4286%" y="437" width="1.1905%" height="15" fill="rgb(249,130,37)" fg:x="81" fg:w="1"/><text x="96.6786%" y="447.50"></text></g><g><title>crossbeam_channel::context::Context::wait_until (1 samples, 1.19%)</title><rect x="96.4286%" y="421" width="1.1905%" height="15" fill="rgb(218,28,27)" fg:x="81" fg:w="1"/><text x="96.6786%" y="431.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 1.19%)</title><rect x="96.4286%" y="405" width="1.1905%" height="15" fill="rgb(210,59,24)" fg:x="81" fg:w="1"/><text x="96.6786%" y="415.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::inner (1 samples, 1.19%)</title><rect x="96.4286%" y="389" width="1.1905%" height="15" fill="rgb(232,202,24)" fg:x="81" fg:w="1"/><text x="96.6786%" y="399.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 1.19%)</title><rect x="96.4286%" y="373" width="1.1905%" height="15" fill="rgb(221,185,31)" fg:x="81" fg:w="1"/><text x="96.6786%" y="383.50"></text></g><g><title>__clone3 (24 samples, 28.57%)</title><rect x="70.2381%" y="805" width="28.5714%" height="15" fill="rgb(252,169,8)" fg:x="59" fg:w="24"/><text x="70.4881%" y="815.50">__clone3</text></g><g><title>start_thread (24 samples, 28.57%)</title><rect x="70.2381%" y="789" width="28.5714%" height="15" fill="rgb(209,148,13)" fg:x="59" fg:w="24"/><text x="70.4881%" y="799.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (24 samples, 28.57%)</title><rect x="70.2381%" y="773" width="28.5714%" height="15" fill="rgb(215,36,0)" fg:x="59" fg:w="24"/><text x="70.4881%" y="783.50">std::sys::unix::thread::Thread::new::thread_st..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (24 samples, 28.57%)</title><rect x="70.2381%" y="757" width="28.5714%" height="15" fill="rgb(228,202,16)" fg:x="59" fg:w="24"/><text x="70.4881%" y="767.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (24 samples, 28.57%)</title><rect x="70.2381%" y="741" width="28.5714%" height="15" fill="rgb(228,202,16)" fg:x="59" fg:w="24"/><text x="70.4881%" y="751.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (24 samples, 28.57%)</title><rect x="70.2381%" y="725" width="28.5714%" height="15" fill="rgb(218,104,40)" fg:x="59" fg:w="24"/><text x="70.4881%" y="735.50">core::ops::function::FnOnce::call_once{{vtable..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (24 samples, 28.57%)</title><rect x="70.2381%" y="709" width="28.5714%" height="15" fill="rgb(249,4,49)" fg:x="59" fg:w="24"/><text x="70.4881%" y="719.50">std::thread::Builder::spawn_unchecked_::{{clos..</text></g><g><title>std::panic::catch_unwind (24 samples, 28.57%)</title><rect x="70.2381%" y="693" width="28.5714%" height="15" fill="rgb(216,75,8)" fg:x="59" fg:w="24"/><text x="70.4881%" y="703.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (24 samples, 28.57%)</title><rect x="70.2381%" y="677" width="28.5714%" height="15" fill="rgb(212,61,29)" fg:x="59" fg:w="24"/><text x="70.4881%" y="687.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (24 samples, 28.57%)</title><rect x="70.2381%" y="661" width="28.5714%" height="15" fill="rgb(232,162,46)" fg:x="59" fg:w="24"/><text x="70.4881%" y="671.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (24 samples, 28.57%)</title><rect x="70.2381%" y="645" width="28.5714%" height="15" fill="rgb(230,83,13)" fg:x="59" fg:w="24"/><text x="70.4881%" y="655.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt;..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (24 samples, 28.57%)</title><rect x="70.2381%" y="629" width="28.5714%" height="15" fill="rgb(214,132,49)" fg:x="59" fg:w="24"/><text x="70.4881%" y="639.50">std::thread::Builder::spawn_unchecked_::{{clos..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (24 samples, 28.57%)</title><rect x="70.2381%" y="613" width="28.5714%" height="15" fill="rgb(210,88,34)" fg:x="59" fg:w="24"/><text x="70.4881%" y="623.50">std::sys_common::backtrace::__rust_begin_short..</text></g><g><title>s4::processing_loop::{{closure}} (24 samples, 28.57%)</title><rect x="70.2381%" y="597" width="28.5714%" height="15" fill="rgb(245,19,23)" fg:x="59" fg:w="24"/><text x="70.4881%" y="607.50">s4::processing_loop::{{closure}}</text></g><g><title>s4::exec_fileprocessor_thread (24 samples, 28.57%)</title><rect x="70.2381%" y="581" width="28.5714%" height="15" fill="rgb(245,49,27)" fg:x="59" fg:w="24"/><text x="70.4881%" y="591.50">s4::exec_fileprocessor_thread</text></g><g><title>s4::exec_journalprocessor (24 samples, 28.57%)</title><rect x="70.2381%" y="565" width="28.5714%" height="15" fill="rgb(241,41,34)" fg:x="59" fg:w="24"/><text x="70.4881%" y="575.50">s4::exec_journalprocessor</text></g><g><title>s4::chan_send (4 samples, 4.76%)</title><rect x="94.0476%" y="549" width="4.7619%" height="15" fill="rgb(244,11,25)" fg:x="79" fg:w="4"/><text x="94.2976%" y="559.50">s4::ch..</text></g><g><title>all (84 samples, 100%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(206,183,37)" fg:x="0" fg:w="84"/><text x="0.2500%" y="847.50"></text></g><g><title>CentOS_7_system (25 samples, 29.76%)</title><rect x="70.2381%" y="821" width="29.7619%" height="15" fill="rgb(214,184,26)" fg:x="59" fg:w="25"/><text x="70.4881%" y="831.50">CentOS_7_system</text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="98.8095%" y="805" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="83" fg:w="1"/><text x="99.0595%" y="815.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="98.8095%" y="789" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="83" fg:w="1"/><text x="99.0595%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="98.8095%" y="773" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="83" fg:w="1"/><text x="99.0595%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="98.8095%" y="757" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="83" fg:w="1"/><text x="99.0595%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="98.8095%" y="741" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="83" fg:w="1"/><text x="99.0595%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="98.8095%" y="725" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="83" fg:w="1"/><text x="99.0595%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="98.8095%" y="709" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="83" fg:w="1"/><text x="99.0595%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="98.8095%" y="693" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="83" fg:w="1"/><text x="99.0595%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="98.8095%" y="677" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="83" fg:w="1"/><text x="99.0595%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="98.8095%" y="661" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="83" fg:w="1"/><text x="99.0595%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="98.8095%" y="645" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="83" fg:w="1"/><text x="99.0595%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="98.8095%" y="629" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="83" fg:w="1"/><text x="99.0595%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="98.8095%" y="613" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="83" fg:w="1"/><text x="99.0595%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="98.8095%" y="597" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="83" fg:w="1"/><text x="99.0595%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="98.8095%" y="581" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="83" fg:w="1"/><text x="99.0595%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="98.8095%" y="565" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="83" fg:w="1"/><text x="99.0595%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="98.8095%" y="549" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="83" fg:w="1"/><text x="99.0595%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="98.8095%" y="533" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="83" fg:w="1"/><text x="99.0595%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 1.19%)</title><rect x="98.8095%" y="517" width="1.1905%" height="15" fill="rgb(210,204,4)" fg:x="83" fg:w="1"/><text x="99.0595%" y="527.50"></text></g></svg></svg>