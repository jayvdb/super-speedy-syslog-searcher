<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1206" onload="init(evt)" viewBox="0 0 1200 1206" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: super_speedy_syslog_searcher 0.6.68; git: 1f68039; -freq 9000; created 20240317T000017-0700--><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1206" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">super_speedy_syslog_searcher 0.6.68; git: 1f68039; -freq 9000; created 20240317T000017-0700<br/>; s4 ./logs/other/tests/gen-1000-3-foobar.log.xz</text><text id="details" fill="rgb(0,0,0)" x="10" y="1189.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1189.00"> </text><svg id="frames" x="10" width="1180" total_samples="650"><g><title>elf_get_dynamic_info (1 samples, 0.15%)</title><rect x="0.0000%" y="1045" width="0.1538%" height="15" fill="rgb(232,100,48)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1055.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="0.0000%" y="1029" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1039.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="0.0000%" y="1013" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1023.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="0.0000%" y="997" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1007.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="0.0000%" y="981" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="0" fg:w="1"/><text x="0.2500%" y="991.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="0.0000%" y="965" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="0" fg:w="1"/><text x="0.2500%" y="975.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="0.0000%" y="949" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="0" fg:w="1"/><text x="0.2500%" y="959.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="0.0000%" y="933" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="0" fg:w="1"/><text x="0.2500%" y="943.50"></text></g><g><title>elf_machine_rela_relative (1 samples, 0.15%)</title><rect x="0.1538%" y="1013" width="0.1538%" height="15" fill="rgb(215,35,45)" fg:x="1" fg:w="1"/><text x="0.4038%" y="1023.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="0.1538%" y="997" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="1" fg:w="1"/><text x="0.4038%" y="1007.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="0.1538%" y="981" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="1" fg:w="1"/><text x="0.4038%" y="991.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="0.1538%" y="965" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="1" fg:w="1"/><text x="0.4038%" y="975.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="0.1538%" y="949" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="1" fg:w="1"/><text x="0.4038%" y="959.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="0.1538%" y="933" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="1" fg:w="1"/><text x="0.4038%" y="943.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="0.1538%" y="917" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="1" fg:w="1"/><text x="0.4038%" y="927.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="0.1538%" y="901" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="1" fg:w="1"/><text x="0.4038%" y="911.50"></text></g><g><title>_dl_start (4 samples, 0.62%)</title><rect x="0.0000%" y="1109" width="0.6154%" height="15" fill="rgb(214,13,30)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1119.50"></text></g><g><title>_dl_start_final (4 samples, 0.62%)</title><rect x="0.0000%" y="1093" width="0.6154%" height="15" fill="rgb(222,52,46)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1103.50"></text></g><g><title>_dl_sysdep_start (4 samples, 0.62%)</title><rect x="0.0000%" y="1077" width="0.6154%" height="15" fill="rgb(238,104,49)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1087.50"></text></g><g><title>dl_main (4 samples, 0.62%)</title><rect x="0.0000%" y="1061" width="0.6154%" height="15" fill="rgb(253,59,10)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1071.50"></text></g><g><title>_dl_relocate_object (3 samples, 0.46%)</title><rect x="0.1538%" y="1045" width="0.4615%" height="15" fill="rgb(244,75,35)" fg:x="1" fg:w="3"/><text x="0.4038%" y="1055.50"></text></g><g><title>elf_dynamic_do_Rela (3 samples, 0.46%)</title><rect x="0.1538%" y="1029" width="0.4615%" height="15" fill="rgb(234,90,53)" fg:x="1" fg:w="3"/><text x="0.4038%" y="1039.50"></text></g><g><title>call_init (1 samples, 0.15%)</title><rect x="0.6154%" y="1093" width="0.1538%" height="15" fill="rgb(221,131,47)" fg:x="4" fg:w="1"/><text x="0.8654%" y="1103.50"></text></g><g><title>std::sys::unix::args::imp::ARGV_INIT_ARRAY::init_wrapper (1 samples, 0.15%)</title><rect x="0.6154%" y="1077" width="0.1538%" height="15" fill="rgb(228,11,49)" fg:x="4" fg:w="1"/><text x="0.8654%" y="1087.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="0.6154%" y="1061" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="4" fg:w="1"/><text x="0.8654%" y="1071.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="0.6154%" y="1045" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="4" fg:w="1"/><text x="0.8654%" y="1055.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="0.6154%" y="1029" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="4" fg:w="1"/><text x="0.8654%" y="1039.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="0.6154%" y="1013" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="4" fg:w="1"/><text x="0.8654%" y="1023.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="0.6154%" y="997" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="4" fg:w="1"/><text x="0.8654%" y="1007.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="0.6154%" y="981" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="4" fg:w="1"/><text x="0.8654%" y="991.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="0.6154%" y="965" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="4" fg:w="1"/><text x="0.8654%" y="975.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="0.6154%" y="949" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="4" fg:w="1"/><text x="0.8654%" y="959.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="0.6154%" y="933" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="4" fg:w="1"/><text x="0.8654%" y="943.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="0.6154%" y="917" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="4" fg:w="1"/><text x="0.8654%" y="927.50"></text></g><g><title>std::sys_common::memchr::memrchr (1 samples, 0.15%)</title><rect x="0.7692%" y="661" width="0.1538%" height="15" fill="rgb(232,88,32)" fg:x="5" fg:w="1"/><text x="1.0192%" y="671.50"></text></g><g><title>std::sys::unix::memchr::memrchr (1 samples, 0.15%)</title><rect x="0.7692%" y="645" width="0.1538%" height="15" fill="rgb(223,76,45)" fg:x="5" fg:w="1"/><text x="1.0192%" y="655.50"></text></g><g><title>std::sys::unix::memchr::memrchr::memrchr_specific (1 samples, 0.15%)</title><rect x="0.7692%" y="629" width="0.1538%" height="15" fill="rgb(241,110,16)" fg:x="5" fg:w="1"/><text x="1.0192%" y="639.50"></text></g><g><title>__memrchr_evex (1 samples, 0.15%)</title><rect x="0.7692%" y="613" width="0.1538%" height="15" fill="rgb(249,31,17)" fg:x="5" fg:w="1"/><text x="1.0192%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="0.9231%" y="469" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="6" fg:w="1"/><text x="1.1731%" y="479.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (2 samples, 0.31%)</title><rect x="0.9231%" y="661" width="0.3077%" height="15" fill="rgb(240,178,54)" fg:x="6" fg:w="2"/><text x="1.1731%" y="671.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (2 samples, 0.31%)</title><rect x="0.9231%" y="645" width="0.3077%" height="15" fill="rgb(239,119,25)" fg:x="6" fg:w="2"/><text x="1.1731%" y="655.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (2 samples, 0.31%)</title><rect x="0.9231%" y="629" width="0.3077%" height="15" fill="rgb(236,163,16)" fg:x="6" fg:w="2"/><text x="1.1731%" y="639.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (2 samples, 0.31%)</title><rect x="0.9231%" y="613" width="0.3077%" height="15" fill="rgb(247,26,49)" fg:x="6" fg:w="2"/><text x="1.1731%" y="623.50"></text></g><g><title>__GI___libc_write (2 samples, 0.31%)</title><rect x="0.9231%" y="597" width="0.3077%" height="15" fill="rgb(232,197,30)" fg:x="6" fg:w="2"/><text x="1.1731%" y="607.50"></text></g><g><title>__GI___libc_write (2 samples, 0.31%)</title><rect x="0.9231%" y="581" width="0.3077%" height="15" fill="rgb(232,197,30)" fg:x="6" fg:w="2"/><text x="1.1731%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.31%)</title><rect x="0.9231%" y="565" width="0.3077%" height="15" fill="rgb(210,204,4)" fg:x="6" fg:w="2"/><text x="1.1731%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.31%)</title><rect x="0.9231%" y="549" width="0.3077%" height="15" fill="rgb(210,204,4)" fg:x="6" fg:w="2"/><text x="1.1731%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.31%)</title><rect x="0.9231%" y="533" width="0.3077%" height="15" fill="rgb(210,204,4)" fg:x="6" fg:w="2"/><text x="1.1731%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.31%)</title><rect x="0.9231%" y="517" width="0.3077%" height="15" fill="rgb(210,204,4)" fg:x="6" fg:w="2"/><text x="1.1731%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.31%)</title><rect x="0.9231%" y="501" width="0.3077%" height="15" fill="rgb(210,204,4)" fg:x="6" fg:w="2"/><text x="1.1731%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.31%)</title><rect x="0.9231%" y="485" width="0.3077%" height="15" fill="rgb(210,204,4)" fg:x="6" fg:w="2"/><text x="1.1731%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.46%)</title><rect x="1.2308%" y="485" width="0.4615%" height="15" fill="rgb(210,204,4)" fg:x="8" fg:w="3"/><text x="1.4808%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.62%)</title><rect x="1.2308%" y="501" width="0.6154%" height="15" fill="rgb(210,204,4)" fg:x="8" fg:w="4"/><text x="1.4808%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.77%)</title><rect x="1.2308%" y="549" width="0.7692%" height="15" fill="rgb(210,204,4)" fg:x="8" fg:w="5"/><text x="1.4808%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.77%)</title><rect x="1.2308%" y="533" width="0.7692%" height="15" fill="rgb(210,204,4)" fg:x="8" fg:w="5"/><text x="1.4808%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.77%)</title><rect x="1.2308%" y="517" width="0.7692%" height="15" fill="rgb(210,204,4)" fg:x="8" fg:w="5"/><text x="1.4808%" y="527.50"></text></g><g><title>std::io::Write::write_all (9 samples, 1.38%)</title><rect x="0.7692%" y="805" width="1.3846%" height="15" fill="rgb(251,145,9)" fg:x="5" fg:w="9"/><text x="1.0192%" y="815.50"></text></g><g><title>&lt;termcolor::StandardStream as std::io::Write&gt;::write (9 samples, 1.38%)</title><rect x="0.7692%" y="789" width="1.3846%" height="15" fill="rgb(250,180,25)" fg:x="5" fg:w="9"/><text x="1.0192%" y="799.50"></text></g><g><title>&lt;termcolor::LossyStandardStream&lt;W&gt; as std::io::Write&gt;::write (9 samples, 1.38%)</title><rect x="0.7692%" y="773" width="1.3846%" height="15" fill="rgb(232,195,18)" fg:x="5" fg:w="9"/><text x="1.0192%" y="783.50"></text></g><g><title>&lt;termcolor::WriterInner&lt;W&gt; as std::io::Write&gt;::write (9 samples, 1.38%)</title><rect x="0.7692%" y="757" width="1.3846%" height="15" fill="rgb(206,183,32)" fg:x="5" fg:w="9"/><text x="1.0192%" y="767.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write (9 samples, 1.38%)</title><rect x="0.7692%" y="741" width="1.3846%" height="15" fill="rgb(215,142,33)" fg:x="5" fg:w="9"/><text x="1.0192%" y="751.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write (9 samples, 1.38%)</title><rect x="0.7692%" y="725" width="1.3846%" height="15" fill="rgb(232,39,45)" fg:x="5" fg:w="9"/><text x="1.0192%" y="735.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write (9 samples, 1.38%)</title><rect x="0.7692%" y="709" width="1.3846%" height="15" fill="rgb(216,85,2)" fg:x="5" fg:w="9"/><text x="1.0192%" y="719.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write (9 samples, 1.38%)</title><rect x="0.7692%" y="693" width="1.3846%" height="15" fill="rgb(226,48,36)" fg:x="5" fg:w="9"/><text x="1.0192%" y="703.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write (9 samples, 1.38%)</title><rect x="0.7692%" y="677" width="1.3846%" height="15" fill="rgb(237,90,14)" fg:x="5" fg:w="9"/><text x="1.0192%" y="687.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (6 samples, 0.92%)</title><rect x="1.2308%" y="661" width="0.9231%" height="15" fill="rgb(239,119,25)" fg:x="8" fg:w="6"/><text x="1.4808%" y="671.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (6 samples, 0.92%)</title><rect x="1.2308%" y="645" width="0.9231%" height="15" fill="rgb(236,163,16)" fg:x="8" fg:w="6"/><text x="1.4808%" y="655.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (6 samples, 0.92%)</title><rect x="1.2308%" y="629" width="0.9231%" height="15" fill="rgb(247,26,49)" fg:x="8" fg:w="6"/><text x="1.4808%" y="639.50"></text></g><g><title>__GI___libc_write (6 samples, 0.92%)</title><rect x="1.2308%" y="613" width="0.9231%" height="15" fill="rgb(232,197,30)" fg:x="8" fg:w="6"/><text x="1.4808%" y="623.50"></text></g><g><title>__GI___libc_write (6 samples, 0.92%)</title><rect x="1.2308%" y="597" width="0.9231%" height="15" fill="rgb(232,197,30)" fg:x="8" fg:w="6"/><text x="1.4808%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.92%)</title><rect x="1.2308%" y="581" width="0.9231%" height="15" fill="rgb(210,204,4)" fg:x="8" fg:w="6"/><text x="1.4808%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.92%)</title><rect x="1.2308%" y="565" width="0.9231%" height="15" fill="rgb(210,204,4)" fg:x="8" fg:w="6"/><text x="1.4808%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.15%)</title><rect x="2.1538%" y="789" width="0.1538%" height="15" fill="rgb(215,149,39)" fg:x="14" fg:w="1"/><text x="2.4038%" y="799.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.15%)</title><rect x="2.1538%" y="773" width="0.1538%" height="15" fill="rgb(250,51,46)" fg:x="14" fg:w="1"/><text x="2.4038%" y="783.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.15%)</title><rect x="2.1538%" y="757" width="0.1538%" height="15" fill="rgb(242,192,3)" fg:x="14" fg:w="1"/><text x="2.4038%" y="767.50"></text></g><g><title>s4lib::data::line::LinePart::as_slice (3 samples, 0.46%)</title><rect x="2.1538%" y="805" width="0.4615%" height="15" fill="rgb(251,71,39)" fg:x="14" fg:w="3"/><text x="2.4038%" y="815.50"></text></g><g><title>termcolor::Ansi&lt;W&gt;::write_str (1 samples, 0.15%)</title><rect x="2.6154%" y="741" width="0.1538%" height="15" fill="rgb(232,27,51)" fg:x="17" fg:w="1"/><text x="2.8654%" y="751.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.15%)</title><rect x="2.6154%" y="725" width="0.1538%" height="15" fill="rgb(251,145,9)" fg:x="17" fg:w="1"/><text x="2.8654%" y="735.50"></text></g><g><title>&lt;termcolor::Ansi&lt;W&gt; as std::io::Write&gt;::write (1 samples, 0.15%)</title><rect x="2.6154%" y="709" width="0.1538%" height="15" fill="rgb(207,158,40)" fg:x="17" fg:w="1"/><text x="2.8654%" y="719.50"></text></g><g><title>&lt;termcolor::IoStandardStream as std::io::Write&gt;::write (1 samples, 0.15%)</title><rect x="2.6154%" y="693" width="0.1538%" height="15" fill="rgb(227,89,5)" fg:x="17" fg:w="1"/><text x="2.8654%" y="703.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write (1 samples, 0.15%)</title><rect x="2.6154%" y="677" width="0.1538%" height="15" fill="rgb(215,142,33)" fg:x="17" fg:w="1"/><text x="2.8654%" y="687.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write (1 samples, 0.15%)</title><rect x="2.6154%" y="661" width="0.1538%" height="15" fill="rgb(232,39,45)" fg:x="17" fg:w="1"/><text x="2.8654%" y="671.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write (1 samples, 0.15%)</title><rect x="2.6154%" y="645" width="0.1538%" height="15" fill="rgb(216,85,2)" fg:x="17" fg:w="1"/><text x="2.8654%" y="655.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write (1 samples, 0.15%)</title><rect x="2.6154%" y="629" width="0.1538%" height="15" fill="rgb(226,48,36)" fg:x="17" fg:w="1"/><text x="2.8654%" y="639.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write (1 samples, 0.15%)</title><rect x="2.6154%" y="613" width="0.1538%" height="15" fill="rgb(237,90,14)" fg:x="17" fg:w="1"/><text x="2.8654%" y="623.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write (1 samples, 0.15%)</title><rect x="2.6154%" y="597" width="0.1538%" height="15" fill="rgb(250,14,31)" fg:x="17" fg:w="1"/><text x="2.8654%" y="607.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_to_buffer_unchecked (1 samples, 0.15%)</title><rect x="2.6154%" y="581" width="0.1538%" height="15" fill="rgb(208,120,32)" fg:x="17" fg:w="1"/><text x="2.8654%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="2.6154%" y="565" width="0.1538%" height="15" fill="rgb(214,20,35)" fg:x="17" fg:w="1"/><text x="2.8654%" y="575.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.15%)</title><rect x="2.6154%" y="549" width="0.1538%" height="15" fill="rgb(217,126,36)" fg:x="17" fg:w="1"/><text x="2.8654%" y="559.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.46%)</title><rect x="2.7692%" y="741" width="0.4615%" height="15" fill="rgb(251,145,9)" fg:x="18" fg:w="3"/><text x="3.0192%" y="751.50"></text></g><g><title>&lt;termcolor::Ansi&lt;W&gt; as std::io::Write&gt;::write (3 samples, 0.46%)</title><rect x="2.7692%" y="725" width="0.4615%" height="15" fill="rgb(207,158,40)" fg:x="18" fg:w="3"/><text x="3.0192%" y="735.50"></text></g><g><title>&lt;termcolor::IoStandardStream as std::io::Write&gt;::write (3 samples, 0.46%)</title><rect x="2.7692%" y="709" width="0.4615%" height="15" fill="rgb(227,89,5)" fg:x="18" fg:w="3"/><text x="3.0192%" y="719.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write (3 samples, 0.46%)</title><rect x="2.7692%" y="693" width="0.4615%" height="15" fill="rgb(215,142,33)" fg:x="18" fg:w="3"/><text x="3.0192%" y="703.50"></text></g><g><title>&lt;termcolor::StandardStream as termcolor::WriteColor&gt;::set_color (5 samples, 0.77%)</title><rect x="2.6154%" y="805" width="0.7692%" height="15" fill="rgb(217,221,27)" fg:x="17" fg:w="5"/><text x="2.8654%" y="815.50"></text></g><g><title>&lt;termcolor::LossyStandardStream&lt;W&gt; as termcolor::WriteColor&gt;::set_color (5 samples, 0.77%)</title><rect x="2.6154%" y="789" width="0.7692%" height="15" fill="rgb(244,124,31)" fg:x="17" fg:w="5"/><text x="2.8654%" y="799.50"></text></g><g><title>&lt;termcolor::WriterInner&lt;W&gt; as termcolor::WriteColor&gt;::set_color (5 samples, 0.77%)</title><rect x="2.6154%" y="773" width="0.7692%" height="15" fill="rgb(234,182,7)" fg:x="17" fg:w="5"/><text x="2.8654%" y="783.50"></text></g><g><title>&lt;termcolor::Ansi&lt;W&gt; as termcolor::WriteColor&gt;::set_color (5 samples, 0.77%)</title><rect x="2.6154%" y="757" width="0.7692%" height="15" fill="rgb(208,123,3)" fg:x="17" fg:w="5"/><text x="2.8654%" y="767.50"></text></g><g><title>&lt;termcolor::Ansi&lt;W&gt; as termcolor::WriteColor&gt;::reset (1 samples, 0.15%)</title><rect x="3.2308%" y="741" width="0.1538%" height="15" fill="rgb(226,70,2)" fg:x="21" fg:w="1"/><text x="3.4808%" y="751.50"></text></g><g><title>termcolor::Ansi&lt;W&gt;::write_str (1 samples, 0.15%)</title><rect x="3.2308%" y="725" width="0.1538%" height="15" fill="rgb(232,27,51)" fg:x="21" fg:w="1"/><text x="3.4808%" y="735.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.15%)</title><rect x="3.2308%" y="709" width="0.1538%" height="15" fill="rgb(251,145,9)" fg:x="21" fg:w="1"/><text x="3.4808%" y="719.50"></text></g><g><title>&lt;termcolor::Ansi&lt;W&gt; as std::io::Write&gt;::write (1 samples, 0.15%)</title><rect x="3.2308%" y="693" width="0.1538%" height="15" fill="rgb(207,158,40)" fg:x="21" fg:w="1"/><text x="3.4808%" y="703.50"></text></g><g><title>&lt;termcolor::IoStandardStream as std::io::Write&gt;::write (1 samples, 0.15%)</title><rect x="3.2308%" y="677" width="0.1538%" height="15" fill="rgb(227,89,5)" fg:x="21" fg:w="1"/><text x="3.4808%" y="687.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write (1 samples, 0.15%)</title><rect x="3.2308%" y="661" width="0.1538%" height="15" fill="rgb(215,142,33)" fg:x="21" fg:w="1"/><text x="3.4808%" y="671.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write (1 samples, 0.15%)</title><rect x="3.2308%" y="645" width="0.1538%" height="15" fill="rgb(232,39,45)" fg:x="21" fg:w="1"/><text x="3.4808%" y="655.50"></text></g><g><title>s4lib::printer::printers::PrinterLogMessage::print_sysline (18 samples, 2.77%)</title><rect x="0.7692%" y="837" width="2.7692%" height="15" fill="rgb(244,86,43)" fg:x="5" fg:w="18"/><text x="1.0192%" y="847.50">s4..</text></g><g><title>s4lib::printer::printers::PrinterLogMessage::print_sysline_color (18 samples, 2.77%)</title><rect x="0.7692%" y="821" width="2.7692%" height="15" fill="rgb(253,154,21)" fg:x="5" fg:w="18"/><text x="1.0192%" y="831.50">s4..</text></g><g><title>__memmove_avx512_unaligned_erms (3 samples, 0.46%)</title><rect x="3.5385%" y="789" width="0.4615%" height="15" fill="rgb(217,126,36)" fg:x="23" fg:w="3"/><text x="3.7885%" y="799.50"></text></g><g><title>crossbeam_channel::select::SelectedOperation::recv (4 samples, 0.62%)</title><rect x="3.5385%" y="821" width="0.6154%" height="15" fill="rgb(206,140,19)" fg:x="23" fg:w="4"/><text x="3.7885%" y="831.50"></text></g><g><title>crossbeam_channel::channel::read (4 samples, 0.62%)</title><rect x="3.5385%" y="805" width="0.6154%" height="15" fill="rgb(209,181,8)" fg:x="23" fg:w="4"/><text x="3.7885%" y="815.50"></text></g><g><title>std::sys_common::thread_parker::futex::Parker::park (2 samples, 0.31%)</title><rect x="4.1538%" y="661" width="0.3077%" height="15" fill="rgb(252,86,25)" fg:x="27" fg:w="2"/><text x="4.4038%" y="671.50"></text></g><g><title>std::sys::unix::futex::futex_wait (2 samples, 0.31%)</title><rect x="4.1538%" y="645" width="0.3077%" height="15" fill="rgb(219,16,26)" fg:x="27" fg:w="2"/><text x="4.4038%" y="655.50"></text></g><g><title>syscall (2 samples, 0.31%)</title><rect x="4.1538%" y="629" width="0.3077%" height="15" fill="rgb(207,84,5)" fg:x="27" fg:w="2"/><text x="4.4038%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.31%)</title><rect x="4.1538%" y="613" width="0.3077%" height="15" fill="rgb(210,204,4)" fg:x="27" fg:w="2"/><text x="4.4038%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.31%)</title><rect x="4.1538%" y="597" width="0.3077%" height="15" fill="rgb(210,204,4)" fg:x="27" fg:w="2"/><text x="4.4038%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.31%)</title><rect x="4.1538%" y="581" width="0.3077%" height="15" fill="rgb(210,204,4)" fg:x="27" fg:w="2"/><text x="4.4038%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.31%)</title><rect x="4.1538%" y="565" width="0.3077%" height="15" fill="rgb(210,204,4)" fg:x="27" fg:w="2"/><text x="4.4038%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.31%)</title><rect x="4.1538%" y="549" width="0.3077%" height="15" fill="rgb(210,204,4)" fg:x="27" fg:w="2"/><text x="4.4038%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.31%)</title><rect x="4.1538%" y="533" width="0.3077%" height="15" fill="rgb(210,204,4)" fg:x="27" fg:w="2"/><text x="4.4038%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.31%)</title><rect x="4.1538%" y="517" width="0.3077%" height="15" fill="rgb(210,204,4)" fg:x="27" fg:w="2"/><text x="4.4038%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.31%)</title><rect x="4.1538%" y="501" width="0.3077%" height="15" fill="rgb(210,204,4)" fg:x="27" fg:w="2"/><text x="4.4038%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.31%)</title><rect x="4.1538%" y="485" width="0.3077%" height="15" fill="rgb(210,204,4)" fg:x="27" fg:w="2"/><text x="4.4038%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.31%)</title><rect x="4.1538%" y="469" width="0.3077%" height="15" fill="rgb(210,204,4)" fg:x="27" fg:w="2"/><text x="4.4038%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.31%)</title><rect x="4.1538%" y="453" width="0.3077%" height="15" fill="rgb(210,204,4)" fg:x="27" fg:w="2"/><text x="4.4038%" y="463.50"></text></g><g><title>std::thread::park (3 samples, 0.46%)</title><rect x="4.1538%" y="677" width="0.4615%" height="15" fill="rgb(253,209,8)" fg:x="27" fg:w="3"/><text x="4.4038%" y="687.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (19 samples, 2.92%)</title><rect x="4.6154%" y="661" width="2.9231%" height="15" fill="rgb(242,61,0)" fg:x="30" fg:w="19"/><text x="4.8654%" y="671.50">co..</text></g><g><title>core::hint::spin_loop (19 samples, 2.92%)</title><rect x="4.6154%" y="645" width="2.9231%" height="15" fill="rgb(241,144,6)" fg:x="30" fg:w="19"/><text x="4.8654%" y="655.50">co..</text></g><g><title>core::core_arch::x86::sse2::_mm_pause (19 samples, 2.92%)</title><rect x="4.6154%" y="629" width="2.9231%" height="15" fill="rgb(213,129,2)" fg:x="30" fg:w="19"/><text x="4.8654%" y="639.50">co..</text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.31%)</title><rect x="7.5385%" y="581" width="0.3077%" height="15" fill="rgb(210,204,4)" fg:x="49" fg:w="2"/><text x="7.7885%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.62%)</title><rect x="7.5385%" y="597" width="0.6154%" height="15" fill="rgb(210,204,4)" fg:x="49" fg:w="4"/><text x="7.7885%" y="607.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (24 samples, 3.69%)</title><rect x="4.6154%" y="677" width="3.6923%" height="15" fill="rgb(224,200,25)" fg:x="30" fg:w="24"/><text x="4.8654%" y="687.50">cros..</text></g><g><title>__GI___sched_yield (5 samples, 0.77%)</title><rect x="7.5385%" y="661" width="0.7692%" height="15" fill="rgb(225,197,10)" fg:x="49" fg:w="5"/><text x="7.7885%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.77%)</title><rect x="7.5385%" y="645" width="0.7692%" height="15" fill="rgb(210,204,4)" fg:x="49" fg:w="5"/><text x="7.7885%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.77%)</title><rect x="7.5385%" y="629" width="0.7692%" height="15" fill="rgb(210,204,4)" fg:x="49" fg:w="5"/><text x="7.7885%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.77%)</title><rect x="7.5385%" y="613" width="0.7692%" height="15" fill="rgb(210,204,4)" fg:x="49" fg:w="5"/><text x="7.7885%" y="623.50"></text></g><g><title>crossbeam_channel::context::Context::wait_until (28 samples, 4.31%)</title><rect x="4.1538%" y="693" width="4.3077%" height="15" fill="rgb(218,28,27)" fg:x="27" fg:w="28"/><text x="4.4038%" y="703.50">cross..</text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.15%)</title><rect x="8.3077%" y="677" width="0.1538%" height="15" fill="rgb(210,59,24)" fg:x="54" fg:w="1"/><text x="8.5577%" y="687.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::inner (1 samples, 0.15%)</title><rect x="8.3077%" y="661" width="0.1538%" height="15" fill="rgb(232,202,24)" fg:x="54" fg:w="1"/><text x="8.5577%" y="671.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.15%)</title><rect x="8.3077%" y="645" width="0.1538%" height="15" fill="rgb(221,185,31)" fg:x="54" fg:w="1"/><text x="8.5577%" y="655.50"></text></g><g><title>crossbeam_channel::context::Context::with (29 samples, 4.46%)</title><rect x="4.1538%" y="773" width="4.4615%" height="15" fill="rgb(249,203,42)" fg:x="27" fg:w="29"/><text x="4.4038%" y="783.50">cross..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (29 samples, 4.46%)</title><rect x="4.1538%" y="757" width="4.4615%" height="15" fill="rgb(235,136,14)" fg:x="27" fg:w="29"/><text x="4.4038%" y="767.50">std::..</text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (29 samples, 4.46%)</title><rect x="4.1538%" y="741" width="4.4615%" height="15" fill="rgb(251,136,16)" fg:x="27" fg:w="29"/><text x="4.4038%" y="751.50">cross..</text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (29 samples, 4.46%)</title><rect x="4.1538%" y="725" width="4.4615%" height="15" fill="rgb(251,136,16)" fg:x="27" fg:w="29"/><text x="4.4038%" y="735.50">cross..</text></g><g><title>crossbeam_channel::select::run_select::{{closure}} (29 samples, 4.46%)</title><rect x="4.1538%" y="709" width="4.4615%" height="15" fill="rgb(241,20,29)" fg:x="27" fg:w="29"/><text x="4.4038%" y="719.50">cross..</text></g><g><title>&lt;crossbeam_channel::channel::Receiver&lt;T&gt; as crossbeam_channel::select::SelectHandle&gt;::unregister (1 samples, 0.15%)</title><rect x="8.4615%" y="693" width="0.1538%" height="15" fill="rgb(240,190,47)" fg:x="55" fg:w="1"/><text x="8.7115%" y="703.50"></text></g><g><title>&lt;crossbeam_channel::flavors::array::Receiver&lt;T&gt; as crossbeam_channel::select::SelectHandle&gt;::unregister (1 samples, 0.15%)</title><rect x="8.4615%" y="677" width="0.1538%" height="15" fill="rgb(227,116,52)" fg:x="55" fg:w="1"/><text x="8.7115%" y="687.50"></text></g><g><title>syscall (1 samples, 0.15%)</title><rect x="8.4615%" y="661" width="0.1538%" height="15" fill="rgb(207,84,5)" fg:x="55" fg:w="1"/><text x="8.7115%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="8.4615%" y="645" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="55" fg:w="1"/><text x="8.7115%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="8.4615%" y="629" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="55" fg:w="1"/><text x="8.7115%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="8.4615%" y="613" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="55" fg:w="1"/><text x="8.7115%" y="623.50"></text></g><g><title>&lt;crossbeam_channel::flavors::array::Receiver&lt;T&gt; as crossbeam_channel::select::SelectHandle&gt;::try_select (1 samples, 0.15%)</title><rect x="8.6154%" y="757" width="0.1538%" height="15" fill="rgb(205,196,31)" fg:x="56" fg:w="1"/><text x="8.8654%" y="767.50"></text></g><g><title>crossbeam_channel::flavors::array::Channel&lt;T&gt;::start_recv (1 samples, 0.15%)</title><rect x="8.6154%" y="741" width="0.1538%" height="15" fill="rgb(249,64,9)" fg:x="56" fg:w="1"/><text x="8.8654%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.15%)</title><rect x="8.6154%" y="725" width="0.1538%" height="15" fill="rgb(219,73,27)" fg:x="56" fg:w="1"/><text x="8.8654%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.15%)</title><rect x="8.6154%" y="709" width="0.1538%" height="15" fill="rgb(208,10,34)" fg:x="56" fg:w="1"/><text x="8.8654%" y="719.50"></text></g><g><title>crossbeam_channel::select::Select::select (31 samples, 4.77%)</title><rect x="4.1538%" y="821" width="4.7692%" height="15" fill="rgb(218,151,27)" fg:x="27" fg:w="31"/><text x="4.4038%" y="831.50">crossb..</text></g><g><title>crossbeam_channel::select::select (31 samples, 4.77%)</title><rect x="4.1538%" y="805" width="4.7692%" height="15" fill="rgb(210,225,20)" fg:x="27" fg:w="31"/><text x="4.4038%" y="815.50">crossb..</text></g><g><title>crossbeam_channel::select::run_select (31 samples, 4.77%)</title><rect x="4.1538%" y="789" width="4.7692%" height="15" fill="rgb(238,41,29)" fg:x="27" fg:w="31"/><text x="4.4038%" y="799.50">crossb..</text></g><g><title>&lt;crossbeam_channel::channel::Receiver&lt;T&gt; as crossbeam_channel::select::SelectHandle&gt;::try_select (2 samples, 0.31%)</title><rect x="8.6154%" y="773" width="0.3077%" height="15" fill="rgb(236,74,9)" fg:x="56" fg:w="2"/><text x="8.8654%" y="783.50"></text></g><g><title>&lt;crossbeam_channel::counter::Receiver&lt;C&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.15%)</title><rect x="8.7692%" y="757" width="0.1538%" height="15" fill="rgb(231,28,53)" fg:x="57" fg:w="1"/><text x="9.0192%" y="767.50"></text></g><g><title>s4::processing_loop::recv_many_chan (36 samples, 5.54%)</title><rect x="3.5385%" y="837" width="5.5385%" height="15" fill="rgb(253,70,6)" fg:x="23" fg:w="36"/><text x="3.7885%" y="847.50">s4::pro..</text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (1 samples, 0.15%)</title><rect x="9.0769%" y="773" width="0.1538%" height="15" fill="rgb(223,155,52)" fg:x="59" fg:w="1"/><text x="9.3269%" y="783.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove (3 samples, 0.46%)</title><rect x="9.0769%" y="837" width="0.4615%" height="15" fill="rgb(224,108,5)" fg:x="59" fg:w="3"/><text x="9.3269%" y="847.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove_entry (3 samples, 0.46%)</title><rect x="9.0769%" y="821" width="0.4615%" height="15" fill="rgb(245,136,18)" fg:x="59" fg:w="3"/><text x="9.3269%" y="831.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::remove_entry (3 samples, 0.46%)</title><rect x="9.0769%" y="805" width="0.4615%" height="15" fill="rgb(227,63,43)" fg:x="59" fg:w="3"/><text x="9.3269%" y="815.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::remove_kv (3 samples, 0.46%)</title><rect x="9.0769%" y="789" width="0.4615%" height="15" fill="rgb(211,181,27)" fg:x="59" fg:w="3"/><text x="9.3269%" y="799.50"></text></g><g><title>s4::processing_loop (58 samples, 8.92%)</title><rect x="0.7692%" y="853" width="8.9231%" height="15" fill="rgb(233,182,14)" fg:x="5" fg:w="58"/><text x="1.0192%" y="863.50">s4::processin..</text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.15%)</title><rect x="9.5385%" y="837" width="0.1538%" height="15" fill="rgb(217,126,36)" fg:x="62" fg:w="1"/><text x="9.7885%" y="847.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (59 samples, 9.08%)</title><rect x="0.7692%" y="997" width="9.0769%" height="15" fill="rgb(219,15,13)" fg:x="5" fg:w="59"/><text x="1.0192%" y="1007.50">std::rt::lang..</text></g><g><title>std::panic::catch_unwind (59 samples, 9.08%)</title><rect x="0.7692%" y="981" width="9.0769%" height="15" fill="rgb(216,75,8)" fg:x="5" fg:w="59"/><text x="1.0192%" y="991.50">std::panic::c..</text></g><g><title>std::panicking::try (59 samples, 9.08%)</title><rect x="0.7692%" y="965" width="9.0769%" height="15" fill="rgb(212,61,29)" fg:x="5" fg:w="59"/><text x="1.0192%" y="975.50">std::panickin..</text></g><g><title>std::panicking::try::do_call (59 samples, 9.08%)</title><rect x="0.7692%" y="949" width="9.0769%" height="15" fill="rgb(232,162,46)" fg:x="5" fg:w="59"/><text x="1.0192%" y="959.50">std::panickin..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (59 samples, 9.08%)</title><rect x="0.7692%" y="933" width="9.0769%" height="15" fill="rgb(212,73,0)" fg:x="5" fg:w="59"/><text x="1.0192%" y="943.50">core::ops::fu..</text></g><g><title>std::rt::lang_start::{{closure}} (59 samples, 9.08%)</title><rect x="0.7692%" y="917" width="9.0769%" height="15" fill="rgb(213,78,9)" fg:x="5" fg:w="59"/><text x="1.0192%" y="927.50">std::rt::lang..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (59 samples, 9.08%)</title><rect x="0.7692%" y="901" width="9.0769%" height="15" fill="rgb(210,88,34)" fg:x="5" fg:w="59"/><text x="1.0192%" y="911.50">std::sys_comm..</text></g><g><title>core::ops::function::FnOnce::call_once (59 samples, 9.08%)</title><rect x="0.7692%" y="885" width="9.0769%" height="15" fill="rgb(210,80,10)" fg:x="5" fg:w="59"/><text x="1.0192%" y="895.50">core::ops::fu..</text></g><g><title>s4::main (59 samples, 9.08%)</title><rect x="0.7692%" y="869" width="9.0769%" height="15" fill="rgb(221,151,31)" fg:x="5" fg:w="59"/><text x="1.0192%" y="879.50">s4::main</text></g><g><title>s4::cli_process_args (1 samples, 0.15%)</title><rect x="9.6923%" y="853" width="0.1538%" height="15" fill="rgb(217,50,44)" fg:x="63" fg:w="1"/><text x="9.9423%" y="863.50"></text></g><g><title>clap_builder::derive::Parser::parse (1 samples, 0.15%)</title><rect x="9.6923%" y="837" width="0.1538%" height="15" fill="rgb(252,59,20)" fg:x="63" fg:w="1"/><text x="9.9423%" y="847.50"></text></g><g><title>clap_builder::builder::command::Command::get_matches (1 samples, 0.15%)</title><rect x="9.6923%" y="821" width="0.1538%" height="15" fill="rgb(222,72,24)" fg:x="63" fg:w="1"/><text x="9.9423%" y="831.50"></text></g><g><title>clap_builder::builder::command::Command::get_matches_from (1 samples, 0.15%)</title><rect x="9.6923%" y="805" width="0.1538%" height="15" fill="rgb(236,115,49)" fg:x="63" fg:w="1"/><text x="9.9423%" y="815.50"></text></g><g><title>clap_builder::builder::command::Command::try_get_matches_from_mut (1 samples, 0.15%)</title><rect x="9.6923%" y="789" width="0.1538%" height="15" fill="rgb(205,157,11)" fg:x="63" fg:w="1"/><text x="9.9423%" y="799.50"></text></g><g><title>clap_builder::builder::command::Command::_do_parse (1 samples, 0.15%)</title><rect x="9.6923%" y="773" width="0.1538%" height="15" fill="rgb(242,199,15)" fg:x="63" fg:w="1"/><text x="9.9423%" y="783.50"></text></g><g><title>clap_builder::parser::parser::Parser::get_matches_with (1 samples, 0.15%)</title><rect x="9.6923%" y="757" width="0.1538%" height="15" fill="rgb(214,35,29)" fg:x="63" fg:w="1"/><text x="9.9423%" y="767.50"></text></g><g><title>clap_builder::parser::parser::Parser::add_defaults (1 samples, 0.15%)</title><rect x="9.6923%" y="741" width="0.1538%" height="15" fill="rgb(212,38,29)" fg:x="63" fg:w="1"/><text x="9.9423%" y="751.50"></text></g><g><title>clap_builder::parser::parser::Parser::add_default_value (1 samples, 0.15%)</title><rect x="9.6923%" y="725" width="0.1538%" height="15" fill="rgb(212,181,46)" fg:x="63" fg:w="1"/><text x="9.9423%" y="735.50"></text></g><g><title>clap_builder::parser::parser::Parser::react (1 samples, 0.15%)</title><rect x="9.6923%" y="709" width="0.1538%" height="15" fill="rgb(237,49,38)" fg:x="63" fg:w="1"/><text x="9.9423%" y="719.50"></text></g><g><title>clap_builder::parser::parser::Parser::push_arg_values (1 samples, 0.15%)</title><rect x="9.6923%" y="693" width="0.1538%" height="15" fill="rgb(246,200,2)" fg:x="63" fg:w="1"/><text x="9.9423%" y="703.50"></text></g><g><title>clap_builder::builder::value_parser::ValueParser::parse_ref (1 samples, 0.15%)</title><rect x="9.6923%" y="677" width="0.1538%" height="15" fill="rgb(208,127,30)" fg:x="63" fg:w="1"/><text x="9.9423%" y="687.50"></text></g><g><title>&lt;P as clap_builder::builder::value_parser::AnyValueParser&gt;::parse_ref (1 samples, 0.15%)</title><rect x="9.6923%" y="661" width="0.1538%" height="15" fill="rgb(232,35,24)" fg:x="63" fg:w="1"/><text x="9.9423%" y="671.50"></text></g><g><title>&lt;F as clap_builder::builder::value_parser::TypedValueParser&gt;::parse_ref (1 samples, 0.15%)</title><rect x="9.6923%" y="645" width="0.1538%" height="15" fill="rgb(224,58,27)" fg:x="63" fg:w="1"/><text x="9.9423%" y="655.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.15%)</title><rect x="9.6923%" y="629" width="0.1538%" height="15" fill="rgb(235,49,44)" fg:x="63" fg:w="1"/><text x="9.9423%" y="639.50"></text></g><g><title>s4::cli_parse_blocksz (1 samples, 0.15%)</title><rect x="9.6923%" y="613" width="0.1538%" height="15" fill="rgb(243,209,11)" fg:x="63" fg:w="1"/><text x="9.9423%" y="623.50"></text></g><g><title>s4::cli_process_blocksz (1 samples, 0.15%)</title><rect x="9.6923%" y="597" width="0.1538%" height="15" fill="rgb(210,185,15)" fg:x="63" fg:w="1"/><text x="9.9423%" y="607.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.15%)</title><rect x="9.6923%" y="581" width="0.1538%" height="15" fill="rgb(245,136,15)" fg:x="63" fg:w="1"/><text x="9.9423%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (1 samples, 0.15%)</title><rect x="9.6923%" y="565" width="0.1538%" height="15" fill="rgb(229,150,16)" fg:x="63" fg:w="1"/><text x="9.9423%" y="575.50"></text></g><g><title>alloc::fmt::format::{{closure}} (1 samples, 0.15%)</title><rect x="9.6923%" y="549" width="0.1538%" height="15" fill="rgb(213,228,4)" fg:x="63" fg:w="1"/><text x="9.9423%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.15%)</title><rect x="9.6923%" y="533" width="0.1538%" height="15" fill="rgb(225,219,39)" fg:x="63" fg:w="1"/><text x="9.9423%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.15%)</title><rect x="9.6923%" y="517" width="0.1538%" height="15" fill="rgb(223,4,50)" fg:x="63" fg:w="1"/><text x="9.9423%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.15%)</title><rect x="9.6923%" y="501" width="0.1538%" height="15" fill="rgb(248,210,20)" fg:x="63" fg:w="1"/><text x="9.9423%" y="511.50"></text></g><g><title>&lt;str as core::fmt::Debug&gt;::fmt (1 samples, 0.15%)</title><rect x="9.6923%" y="485" width="0.1538%" height="15" fill="rgb(215,221,20)" fg:x="63" fg:w="1"/><text x="9.9423%" y="495.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::escape_debug_ext (1 samples, 0.15%)</title><rect x="9.6923%" y="469" width="0.1538%" height="15" fill="rgb(208,192,15)" fg:x="63" fg:w="1"/><text x="9.9423%" y="479.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_grapheme_extended (1 samples, 0.15%)</title><rect x="9.6923%" y="453" width="0.1538%" height="15" fill="rgb(208,134,47)" fg:x="63" fg:w="1"/><text x="9.9423%" y="463.50"></text></g><g><title>core::unicode::unicode_data::grapheme_extend::lookup (1 samples, 0.15%)</title><rect x="9.6923%" y="437" width="0.1538%" height="15" fill="rgb(252,148,43)" fg:x="63" fg:w="1"/><text x="9.9423%" y="447.50"></text></g><g><title>core::unicode::unicode_data::skip_search (1 samples, 0.15%)</title><rect x="9.6923%" y="421" width="0.1538%" height="15" fill="rgb(229,179,25)" fg:x="63" fg:w="1"/><text x="9.9423%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by_key (1 samples, 0.15%)</title><rect x="9.6923%" y="405" width="0.1538%" height="15" fill="rgb(219,159,10)" fg:x="63" fg:w="1"/><text x="9.9423%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.15%)</title><rect x="9.6923%" y="389" width="0.1538%" height="15" fill="rgb(252,87,43)" fg:x="63" fg:w="1"/><text x="9.9423%" y="399.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by_key::{{closure}} (1 samples, 0.15%)</title><rect x="9.6923%" y="373" width="0.1538%" height="15" fill="rgb(217,124,17)" fg:x="63" fg:w="1"/><text x="9.9423%" y="383.50"></text></g><g><title>core::unicode::unicode_data::skip_search::{{closure}} (1 samples, 0.15%)</title><rect x="9.6923%" y="357" width="0.1538%" height="15" fill="rgb(224,118,23)" fg:x="63" fg:w="1"/><text x="9.9423%" y="367.50"></text></g><g><title>&lt;&amp;u32 as core::ops::bit::Shl&lt;i32&gt;&gt;::shl (1 samples, 0.15%)</title><rect x="9.6923%" y="341" width="0.1538%" height="15" fill="rgb(231,125,2)" fg:x="63" fg:w="1"/><text x="9.9423%" y="351.50"></text></g><g><title>&lt;u32 as core::ops::bit::Shl&lt;i32&gt;&gt;::shl (1 samples, 0.15%)</title><rect x="9.6923%" y="325" width="0.1538%" height="15" fill="rgb(245,190,36)" fg:x="63" fg:w="1"/><text x="9.9423%" y="335.50"></text></g><g><title>_start (65 samples, 10.00%)</title><rect x="0.0000%" y="1125" width="10.0000%" height="15" fill="rgb(210,219,27)" fg:x="0" fg:w="65"/><text x="0.2500%" y="1135.50">_start</text></g><g><title>__libc_start_main_impl (61 samples, 9.38%)</title><rect x="0.6154%" y="1109" width="9.3846%" height="15" fill="rgb(228,214,28)" fg:x="4" fg:w="61"/><text x="0.8654%" y="1119.50">__libc_start_..</text></g><g><title>__libc_start_call_main (60 samples, 9.23%)</title><rect x="0.7692%" y="1093" width="9.2308%" height="15" fill="rgb(249,173,1)" fg:x="5" fg:w="60"/><text x="1.0192%" y="1103.50">__libc_start_..</text></g><g><title>main (60 samples, 9.23%)</title><rect x="0.7692%" y="1077" width="9.2308%" height="15" fill="rgb(238,28,47)" fg:x="5" fg:w="60"/><text x="1.0192%" y="1087.50">main</text></g><g><title>std::rt::lang_start_internal (60 samples, 9.23%)</title><rect x="0.7692%" y="1061" width="9.2308%" height="15" fill="rgb(240,177,54)" fg:x="5" fg:w="60"/><text x="1.0192%" y="1071.50">std::rt::lang..</text></g><g><title>std::panic::catch_unwind (60 samples, 9.23%)</title><rect x="0.7692%" y="1045" width="9.2308%" height="15" fill="rgb(216,75,8)" fg:x="5" fg:w="60"/><text x="1.0192%" y="1055.50">std::panic::c..</text></g><g><title>std::panicking::try (60 samples, 9.23%)</title><rect x="0.7692%" y="1029" width="9.2308%" height="15" fill="rgb(212,61,29)" fg:x="5" fg:w="60"/><text x="1.0192%" y="1039.50">std::panickin..</text></g><g><title>std::panicking::try::do_call (60 samples, 9.23%)</title><rect x="0.7692%" y="1013" width="9.2308%" height="15" fill="rgb(232,162,46)" fg:x="5" fg:w="60"/><text x="1.0192%" y="1023.50">std::panickin..</text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.15%)</title><rect x="9.8462%" y="997" width="0.1538%" height="15" fill="rgb(210,80,10)" fg:x="64" fg:w="1"/><text x="10.0962%" y="1007.50"></text></g><g><title>std::rt::cleanup (1 samples, 0.15%)</title><rect x="9.8462%" y="981" width="0.1538%" height="15" fill="rgb(228,61,1)" fg:x="64" fg:w="1"/><text x="10.0962%" y="991.50"></text></g><g><title>std::sync::once::Once::call_once (1 samples, 0.15%)</title><rect x="9.8462%" y="965" width="0.1538%" height="15" fill="rgb(247,17,47)" fg:x="64" fg:w="1"/><text x="10.0962%" y="975.50"></text></g><g><title>std::sys_common::once::futex::Once::call (1 samples, 0.15%)</title><rect x="9.8462%" y="949" width="0.1538%" height="15" fill="rgb(246,168,49)" fg:x="64" fg:w="1"/><text x="10.0962%" y="959.50"></text></g><g><title>std::sync::once::Once::call_once::{{closure}} (1 samples, 0.15%)</title><rect x="9.8462%" y="933" width="0.1538%" height="15" fill="rgb(237,63,35)" fg:x="64" fg:w="1"/><text x="10.0962%" y="943.50"></text></g><g><title>std::rt::cleanup::{{closure}} (1 samples, 0.15%)</title><rect x="9.8462%" y="917" width="0.1538%" height="15" fill="rgb(226,111,48)" fg:x="64" fg:w="1"/><text x="10.0962%" y="927.50"></text></g><g><title>std::sys::unix::cleanup (1 samples, 0.15%)</title><rect x="9.8462%" y="901" width="0.1538%" height="15" fill="rgb(210,134,20)" fg:x="64" fg:w="1"/><text x="10.0962%" y="911.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::cleanup (1 samples, 0.15%)</title><rect x="9.8462%" y="885" width="0.1538%" height="15" fill="rgb(225,5,15)" fg:x="64" fg:w="1"/><text x="10.0962%" y="895.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::drop_handler (1 samples, 0.15%)</title><rect x="9.8462%" y="869" width="0.1538%" height="15" fill="rgb(229,197,28)" fg:x="64" fg:w="1"/><text x="10.0962%" y="879.50"></text></g><g><title>__GI___munmap (1 samples, 0.15%)</title><rect x="9.8462%" y="853" width="0.1538%" height="15" fill="rgb(214,177,17)" fg:x="64" fg:w="1"/><text x="10.0962%" y="863.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="9.8462%" y="837" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="64" fg:w="1"/><text x="10.0962%" y="847.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="9.8462%" y="821" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="64" fg:w="1"/><text x="10.0962%" y="831.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="9.8462%" y="805" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="64" fg:w="1"/><text x="10.0962%" y="815.50"></text></g><g><title>start_thread (1 samples, 0.15%)</title><rect x="10.0000%" y="1109" width="0.1538%" height="15" fill="rgb(209,148,13)" fg:x="65" fg:w="1"/><text x="10.2500%" y="1119.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.15%)</title><rect x="10.0000%" y="1093" width="0.1538%" height="15" fill="rgb(215,36,0)" fg:x="65" fg:w="1"/><text x="10.2500%" y="1103.50"></text></g><g><title>std::sys::unix::stack_overflow::Handler::new (1 samples, 0.15%)</title><rect x="10.0000%" y="1077" width="0.1538%" height="15" fill="rgb(218,173,48)" fg:x="65" fg:w="1"/><text x="10.2500%" y="1087.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (1 samples, 0.15%)</title><rect x="10.0000%" y="1061" width="0.1538%" height="15" fill="rgb(237,166,40)" fg:x="65" fg:w="1"/><text x="10.2500%" y="1071.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (1 samples, 0.15%)</title><rect x="10.0000%" y="1045" width="0.1538%" height="15" fill="rgb(223,116,29)" fg:x="65" fg:w="1"/><text x="10.2500%" y="1055.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (1 samples, 0.15%)</title><rect x="10.0000%" y="1029" width="0.1538%" height="15" fill="rgb(233,124,20)" fg:x="65" fg:w="1"/><text x="10.2500%" y="1039.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.15%)</title><rect x="10.0000%" y="1013" width="0.1538%" height="15" fill="rgb(216,161,14)" fg:x="65" fg:w="1"/><text x="10.2500%" y="1023.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.15%)</title><rect x="10.0000%" y="997" width="0.1538%" height="15" fill="rgb(216,161,14)" fg:x="65" fg:w="1"/><text x="10.2500%" y="1007.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="10.0000%" y="981" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="65" fg:w="1"/><text x="10.2500%" y="991.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="10.0000%" y="965" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="65" fg:w="1"/><text x="10.2500%" y="975.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="10.0000%" y="949" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="65" fg:w="1"/><text x="10.2500%" y="959.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="10.0000%" y="933" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="65" fg:w="1"/><text x="10.2500%" y="943.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="10.0000%" y="917" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="65" fg:w="1"/><text x="10.2500%" y="927.50"></text></g><g><title>__clone3 (2 samples, 0.31%)</title><rect x="10.0000%" y="1125" width="0.3077%" height="15" fill="rgb(252,169,8)" fg:x="65" fg:w="2"/><text x="10.2500%" y="1135.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="10.1538%" y="1109" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="66" fg:w="1"/><text x="10.4038%" y="1119.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="10.1538%" y="1093" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="66" fg:w="1"/><text x="10.4038%" y="1103.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="10.1538%" y="1077" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="66" fg:w="1"/><text x="10.4038%" y="1087.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="10.1538%" y="1061" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="66" fg:w="1"/><text x="10.4038%" y="1071.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="10.1538%" y="1045" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="66" fg:w="1"/><text x="10.4038%" y="1055.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="10.1538%" y="1029" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="66" fg:w="1"/><text x="10.4038%" y="1039.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="10.1538%" y="1013" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="66" fg:w="1"/><text x="10.4038%" y="1023.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="10.1538%" y="997" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="66" fg:w="1"/><text x="10.4038%" y="1007.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="10.1538%" y="981" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="66" fg:w="1"/><text x="10.4038%" y="991.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="10.1538%" y="965" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="66" fg:w="1"/><text x="10.4038%" y="975.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="10.1538%" y="949" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="66" fg:w="1"/><text x="10.4038%" y="959.50"></text></g><g><title>__GI___libc_write (1 samples, 0.15%)</title><rect x="10.3077%" y="1125" width="0.1538%" height="15" fill="rgb(232,197,30)" fg:x="67" fg:w="1"/><text x="10.5577%" y="1135.50"></text></g><g><title>__GI___libc_write (1 samples, 0.15%)</title><rect x="10.3077%" y="1109" width="0.1538%" height="15" fill="rgb(232,197,30)" fg:x="67" fg:w="1"/><text x="10.5577%" y="1119.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="10.3077%" y="1093" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="67" fg:w="1"/><text x="10.5577%" y="1103.50"></text></g><g><title>s4::string_wdhms_to_duration (1 samples, 0.15%)</title><rect x="10.4615%" y="1109" width="0.1538%" height="15" fill="rgb(237,135,26)" fg:x="68" fg:w="1"/><text x="10.7115%" y="1119.50"></text></g><g><title>&lt;s4::REGEX_DUR_OFFSET as core::ops::deref::Deref&gt;::deref (1 samples, 0.15%)</title><rect x="10.4615%" y="1093" width="0.1538%" height="15" fill="rgb(239,209,23)" fg:x="68" fg:w="1"/><text x="10.7115%" y="1103.50"></text></g><g><title>&lt;s4::REGEX_DUR_OFFSET as core::ops::deref::Deref&gt;::deref::__stability (1 samples, 0.15%)</title><rect x="10.4615%" y="1077" width="0.1538%" height="15" fill="rgb(223,204,38)" fg:x="68" fg:w="1"/><text x="10.7115%" y="1087.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (1 samples, 0.15%)</title><rect x="10.4615%" y="1061" width="0.1538%" height="15" fill="rgb(235,175,8)" fg:x="68" fg:w="1"/><text x="10.7115%" y="1071.50"></text></g><g><title>std::sync::once::Once::call_once (1 samples, 0.15%)</title><rect x="10.4615%" y="1045" width="0.1538%" height="15" fill="rgb(247,17,47)" fg:x="68" fg:w="1"/><text x="10.7115%" y="1055.50"></text></g><g><title>std::sys_common::once::futex::Once::call (1 samples, 0.15%)</title><rect x="10.4615%" y="1029" width="0.1538%" height="15" fill="rgb(246,168,49)" fg:x="68" fg:w="1"/><text x="10.7115%" y="1039.50"></text></g><g><title>std::sync::once::Once::call_once::{{closure}} (1 samples, 0.15%)</title><rect x="10.4615%" y="1013" width="0.1538%" height="15" fill="rgb(237,63,35)" fg:x="68" fg:w="1"/><text x="10.7115%" y="1023.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}} (1 samples, 0.15%)</title><rect x="10.4615%" y="997" width="0.1538%" height="15" fill="rgb(238,7,51)" fg:x="68" fg:w="1"/><text x="10.7115%" y="1007.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.15%)</title><rect x="10.4615%" y="981" width="0.1538%" height="15" fill="rgb(210,80,10)" fg:x="68" fg:w="1"/><text x="10.7115%" y="991.50"></text></g><g><title>&lt;s4::REGEX_DUR_OFFSET as core::ops::deref::Deref&gt;::deref::__static_ref_initialize (1 samples, 0.15%)</title><rect x="10.4615%" y="965" width="0.1538%" height="15" fill="rgb(216,114,7)" fg:x="68" fg:w="1"/><text x="10.7115%" y="975.50"></text></g><g><title>regex::regex::string::Regex::new (1 samples, 0.15%)</title><rect x="10.4615%" y="949" width="0.1538%" height="15" fill="rgb(239,163,48)" fg:x="68" fg:w="1"/><text x="10.7115%" y="959.50"></text></g><g><title>regex::builders::string::RegexBuilder::build (1 samples, 0.15%)</title><rect x="10.4615%" y="933" width="0.1538%" height="15" fill="rgb(234,198,23)" fg:x="68" fg:w="1"/><text x="10.7115%" y="943.50"></text></g><g><title>regex::builders::Builder::build_one_string (1 samples, 0.15%)</title><rect x="10.4615%" y="917" width="0.1538%" height="15" fill="rgb(254,213,31)" fg:x="68" fg:w="1"/><text x="10.7115%" y="927.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (1 samples, 0.15%)</title><rect x="10.4615%" y="901" width="0.1538%" height="15" fill="rgb(212,33,22)" fg:x="68" fg:w="1"/><text x="10.7115%" y="911.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many (1 samples, 0.15%)</title><rect x="10.4615%" y="885" width="0.1538%" height="15" fill="rgb(236,25,32)" fg:x="68" fg:w="1"/><text x="10.7115%" y="895.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (1 samples, 0.15%)</title><rect x="10.4615%" y="869" width="0.1538%" height="15" fill="rgb(250,142,30)" fg:x="68" fg:w="1"/><text x="10.7115%" y="879.50"></text></g><g><title>regex_automata::meta::strategy::new (1 samples, 0.15%)</title><rect x="10.4615%" y="853" width="0.1538%" height="15" fill="rgb(243,171,22)" fg:x="68" fg:w="1"/><text x="10.7115%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.15%)</title><rect x="10.4615%" y="837" width="0.1538%" height="15" fill="rgb(225,8,7)" fg:x="68" fg:w="1"/><text x="10.7115%" y="847.50"></text></g><g><title>regex_automata::meta::strategy::new::{{closure}} (1 samples, 0.15%)</title><rect x="10.4615%" y="821" width="0.1538%" height="15" fill="rgb(238,100,15)" fg:x="68" fg:w="1"/><text x="10.7115%" y="831.50"></text></g><g><title>regex_automata::util::prefilter::Prefilter::new (1 samples, 0.15%)</title><rect x="10.4615%" y="805" width="0.1538%" height="15" fill="rgb(227,199,27)" fg:x="68" fg:w="1"/><text x="10.7115%" y="815.50"></text></g><g><title>regex_automata::util::prefilter::Choice::new (1 samples, 0.15%)</title><rect x="10.4615%" y="789" width="0.1538%" height="15" fill="rgb(243,64,33)" fg:x="68" fg:w="1"/><text x="10.7115%" y="799.50"></text></g><g><title>regex_automata::util::prefilter::teddy::Teddy::new (1 samples, 0.15%)</title><rect x="10.4615%" y="773" width="0.1538%" height="15" fill="rgb(207,155,0)" fg:x="68" fg:w="1"/><text x="10.7115%" y="783.50"></text></g><g><title>aho_corasick::dfa::Builder::build (1 samples, 0.15%)</title><rect x="10.4615%" y="757" width="0.1538%" height="15" fill="rgb(212,91,25)" fg:x="68" fg:w="1"/><text x="10.7115%" y="767.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Builder::build (1 samples, 0.15%)</title><rect x="10.4615%" y="741" width="0.1538%" height="15" fill="rgb(235,33,22)" fg:x="68" fg:w="1"/><text x="10.7115%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="10.4615%" y="725" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="68" fg:w="1"/><text x="10.7115%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="10.4615%" y="709" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="68" fg:w="1"/><text x="10.7115%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="10.4615%" y="693" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="68" fg:w="1"/><text x="10.7115%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="10.4615%" y="677" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="68" fg:w="1"/><text x="10.7115%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="10.4615%" y="661" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="68" fg:w="1"/><text x="10.7115%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="10.4615%" y="645" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="68" fg:w="1"/><text x="10.7115%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="10.4615%" y="629" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="68" fg:w="1"/><text x="10.7115%" y="639.50"></text></g><g><title>s4::cli_process_args (1 samples, 0.15%)</title><rect x="10.6154%" y="1109" width="0.1538%" height="15" fill="rgb(217,50,44)" fg:x="69" fg:w="1"/><text x="10.8654%" y="1119.50"></text></g><g><title>clap_builder::derive::Parser::parse (1 samples, 0.15%)</title><rect x="10.6154%" y="1093" width="0.1538%" height="15" fill="rgb(252,59,20)" fg:x="69" fg:w="1"/><text x="10.8654%" y="1103.50"></text></g><g><title>&lt;s4::CLI_Args as clap_builder::derive::CommandFactory&gt;::command (1 samples, 0.15%)</title><rect x="10.6154%" y="1077" width="0.1538%" height="15" fill="rgb(237,136,5)" fg:x="69" fg:w="1"/><text x="10.8654%" y="1087.50"></text></g><g><title>&lt;s4::CLI_Args as clap_builder::derive::Args&gt;::augment_args (1 samples, 0.15%)</title><rect x="10.6154%" y="1061" width="0.1538%" height="15" fill="rgb(230,145,47)" fg:x="69" fg:w="1"/><text x="10.8654%" y="1071.50"></text></g><g><title>clap_builder::builder::arg::Arg::new (1 samples, 0.15%)</title><rect x="10.6154%" y="1045" width="0.1538%" height="15" fill="rgb(214,207,32)" fg:x="69" fg:w="1"/><text x="10.8654%" y="1055.50"></text></g><g><title>&lt;clap_builder::builder::arg::Arg as core::default::Default&gt;::default (1 samples, 0.15%)</title><rect x="10.6154%" y="1029" width="0.1538%" height="15" fill="rgb(233,139,54)" fg:x="69" fg:w="1"/><text x="10.8654%" y="1039.50"></text></g><g><title>&lt;clap_builder::builder::arg_settings::ArgFlags as core::default::Default&gt;::default (1 samples, 0.15%)</title><rect x="10.6154%" y="1013" width="0.1538%" height="15" fill="rgb(236,207,31)" fg:x="69" fg:w="1"/><text x="10.8654%" y="1023.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="10.6154%" y="997" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="69" fg:w="1"/><text x="10.8654%" y="1007.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="10.6154%" y="981" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="69" fg:w="1"/><text x="10.8654%" y="991.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="10.6154%" y="965" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="69" fg:w="1"/><text x="10.8654%" y="975.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="10.6154%" y="949" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="69" fg:w="1"/><text x="10.8654%" y="959.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="10.6154%" y="933" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="69" fg:w="1"/><text x="10.8654%" y="943.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="10.6154%" y="917" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="69" fg:w="1"/><text x="10.8654%" y="927.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="10.6154%" y="901" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="69" fg:w="1"/><text x="10.8654%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="10.7692%" y="869" width="0.1538%" height="15" fill="rgb(214,109,53)" fg:x="70" fg:w="1"/><text x="11.0192%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.15%)</title><rect x="10.7692%" y="853" width="0.1538%" height="15" fill="rgb(254,35,30)" fg:x="70" fg:w="1"/><text x="11.0192%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.15%)</title><rect x="10.7692%" y="837" width="0.1538%" height="15" fill="rgb(226,169,23)" fg:x="70" fg:w="1"/><text x="11.0192%" y="847.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (1 samples, 0.15%)</title><rect x="10.7692%" y="821" width="0.1538%" height="15" fill="rgb(205,130,14)" fg:x="70" fg:w="1"/><text x="11.0192%" y="831.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_at_least (1 samples, 0.15%)</title><rect x="10.7692%" y="805" width="0.1538%" height="15" fill="rgb(238,57,7)" fg:x="70" fg:w="1"/><text x="11.0192%" y="815.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 0.15%)</title><rect x="10.7692%" y="789" width="0.1538%" height="15" fill="rgb(235,200,16)" fg:x="70" fg:w="1"/><text x="11.0192%" y="799.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.15%)</title><rect x="10.7692%" y="773" width="0.1538%" height="15" fill="rgb(213,34,18)" fg:x="70" fg:w="1"/><text x="11.0192%" y="783.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (1 samples, 0.15%)</title><rect x="10.7692%" y="757" width="0.1538%" height="15" fill="rgb(253,35,22)" fg:x="70" fg:w="1"/><text x="11.0192%" y="767.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (1 samples, 0.15%)</title><rect x="10.7692%" y="741" width="0.1538%" height="15" fill="rgb(247,137,3)" fg:x="70" fg:w="1"/><text x="11.0192%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="10.7692%" y="725" width="0.1538%" height="15" fill="rgb(214,109,53)" fg:x="70" fg:w="1"/><text x="11.0192%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.15%)</title><rect x="10.7692%" y="709" width="0.1538%" height="15" fill="rgb(254,35,30)" fg:x="70" fg:w="1"/><text x="11.0192%" y="719.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.15%)</title><rect x="10.7692%" y="693" width="0.1538%" height="15" fill="rgb(226,169,23)" fg:x="70" fg:w="1"/><text x="11.0192%" y="703.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice::{{closure}} (1 samples, 0.15%)</title><rect x="10.7692%" y="677" width="0.1538%" height="15" fill="rgb(223,145,12)" fg:x="70" fg:w="1"/><text x="11.0192%" y="687.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 0.15%)</title><rect x="10.7692%" y="661" width="0.1538%" height="15" fill="rgb(235,200,16)" fg:x="70" fg:w="1"/><text x="11.0192%" y="671.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.15%)</title><rect x="10.7692%" y="645" width="0.1538%" height="15" fill="rgb(213,34,18)" fg:x="70" fg:w="1"/><text x="11.0192%" y="655.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (1 samples, 0.15%)</title><rect x="10.7692%" y="629" width="0.1538%" height="15" fill="rgb(210,105,37)" fg:x="70" fg:w="1"/><text x="11.0192%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="10.7692%" y="613" width="0.1538%" height="15" fill="rgb(214,109,53)" fg:x="70" fg:w="1"/><text x="11.0192%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.15%)</title><rect x="10.7692%" y="597" width="0.1538%" height="15" fill="rgb(254,35,30)" fg:x="70" fg:w="1"/><text x="11.0192%" y="607.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.15%)</title><rect x="10.7692%" y="581" width="0.1538%" height="15" fill="rgb(226,169,23)" fg:x="70" fg:w="1"/><text x="11.0192%" y="591.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (1 samples, 0.15%)</title><rect x="10.7692%" y="565" width="0.1538%" height="15" fill="rgb(205,130,14)" fg:x="70" fg:w="1"/><text x="11.0192%" y="575.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_at_least (1 samples, 0.15%)</title><rect x="10.7692%" y="549" width="0.1538%" height="15" fill="rgb(238,57,7)" fg:x="70" fg:w="1"/><text x="11.0192%" y="559.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.15%)</title><rect x="10.7692%" y="533" width="0.1538%" height="15" fill="rgb(213,34,18)" fg:x="70" fg:w="1"/><text x="11.0192%" y="543.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class (1 samples, 0.15%)</title><rect x="10.7692%" y="517" width="0.1538%" height="15" fill="rgb(246,38,12)" fg:x="70" fg:w="1"/><text x="11.0192%" y="527.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::new (1 samples, 0.15%)</title><rect x="10.7692%" y="501" width="0.1538%" height="15" fill="rgb(211,200,20)" fg:x="70" fg:w="1"/><text x="11.0192%" y="511.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8State::clear (1 samples, 0.15%)</title><rect x="10.7692%" y="485" width="0.1538%" height="15" fill="rgb(241,127,0)" fg:x="70" fg:w="1"/><text x="11.0192%" y="495.50"></text></g><g><title>regex_automata::nfa::thompson::map::Utf8BoundedMap::clear (1 samples, 0.15%)</title><rect x="10.7692%" y="469" width="0.1538%" height="15" fill="rgb(207,86,25)" fg:x="70" fg:w="1"/><text x="11.0192%" y="479.50"></text></g><g><title>alloc::vec::from_elem (1 samples, 0.15%)</title><rect x="10.7692%" y="453" width="0.1538%" height="15" fill="rgb(208,109,54)" fg:x="70" fg:w="1"/><text x="11.0192%" y="463.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1 samples, 0.15%)</title><rect x="10.7692%" y="437" width="0.1538%" height="15" fill="rgb(228,177,24)" fg:x="70" fg:w="1"/><text x="11.0192%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (1 samples, 0.15%)</title><rect x="10.7692%" y="421" width="0.1538%" height="15" fill="rgb(216,52,5)" fg:x="70" fg:w="1"/><text x="11.0192%" y="431.50"></text></g><g><title>core::ptr::write (1 samples, 0.15%)</title><rect x="10.7692%" y="405" width="0.1538%" height="15" fill="rgb(209,143,44)" fg:x="70" fg:w="1"/><text x="11.0192%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="10.7692%" y="389" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="70" fg:w="1"/><text x="11.0192%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="10.7692%" y="373" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="70" fg:w="1"/><text x="11.0192%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="10.7692%" y="357" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="70" fg:w="1"/><text x="11.0192%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="10.7692%" y="341" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="70" fg:w="1"/><text x="11.0192%" y="351.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="10.7692%" y="325" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="70" fg:w="1"/><text x="11.0192%" y="335.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="10.7692%" y="309" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="70" fg:w="1"/><text x="11.0192%" y="319.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="10.7692%" y="293" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="70" fg:w="1"/><text x="11.0192%" y="303.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="10.7692%" y="277" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="70" fg:w="1"/><text x="11.0192%" y="287.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="10.7692%" y="261" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="70" fg:w="1"/><text x="11.0192%" y="271.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (2 samples, 0.31%)</title><rect x="10.7692%" y="1109" width="0.3077%" height="15" fill="rgb(212,33,22)" fg:x="70" fg:w="2"/><text x="11.0192%" y="1119.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many (2 samples, 0.31%)</title><rect x="10.7692%" y="1093" width="0.3077%" height="15" fill="rgb(236,25,32)" fg:x="70" fg:w="2"/><text x="11.0192%" y="1103.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (2 samples, 0.31%)</title><rect x="10.7692%" y="1077" width="0.3077%" height="15" fill="rgb(250,142,30)" fg:x="70" fg:w="2"/><text x="11.0192%" y="1087.50"></text></g><g><title>regex_automata::meta::strategy::new (2 samples, 0.31%)</title><rect x="10.7692%" y="1061" width="0.3077%" height="15" fill="rgb(243,171,22)" fg:x="70" fg:w="2"/><text x="11.0192%" y="1071.50"></text></g><g><title>regex_automata::meta::strategy::Core::new (2 samples, 0.31%)</title><rect x="10.7692%" y="1045" width="0.3077%" height="15" fill="rgb(222,69,27)" fg:x="70" fg:w="2"/><text x="11.0192%" y="1055.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (2 samples, 0.31%)</title><rect x="10.7692%" y="1029" width="0.3077%" height="15" fill="rgb(226,42,16)" fg:x="70" fg:w="2"/><text x="11.0192%" y="1039.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (2 samples, 0.31%)</title><rect x="10.7692%" y="1013" width="0.3077%" height="15" fill="rgb(242,129,17)" fg:x="70" fg:w="2"/><text x="11.0192%" y="1023.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (2 samples, 0.31%)</title><rect x="10.7692%" y="997" width="0.3077%" height="15" fill="rgb(247,137,3)" fg:x="70" fg:w="2"/><text x="11.0192%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.31%)</title><rect x="10.7692%" y="981" width="0.3077%" height="15" fill="rgb(214,109,53)" fg:x="70" fg:w="2"/><text x="11.0192%" y="991.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.31%)</title><rect x="10.7692%" y="965" width="0.3077%" height="15" fill="rgb(254,35,30)" fg:x="70" fg:w="2"/><text x="11.0192%" y="975.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.31%)</title><rect x="10.7692%" y="949" width="0.3077%" height="15" fill="rgb(226,169,23)" fg:x="70" fg:w="2"/><text x="11.0192%" y="959.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile::{{closure}} (2 samples, 0.31%)</title><rect x="10.7692%" y="933" width="0.3077%" height="15" fill="rgb(218,216,52)" fg:x="70" fg:w="2"/><text x="11.0192%" y="943.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (2 samples, 0.31%)</title><rect x="10.7692%" y="917" width="0.3077%" height="15" fill="rgb(235,200,16)" fg:x="70" fg:w="2"/><text x="11.0192%" y="927.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (2 samples, 0.31%)</title><rect x="10.7692%" y="901" width="0.3077%" height="15" fill="rgb(213,34,18)" fg:x="70" fg:w="2"/><text x="11.0192%" y="911.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (2 samples, 0.31%)</title><rect x="10.7692%" y="885" width="0.3077%" height="15" fill="rgb(210,105,37)" fg:x="70" fg:w="2"/><text x="11.0192%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 0.15%)</title><rect x="10.9231%" y="869" width="0.1538%" height="15" fill="rgb(222,94,14)" fg:x="71" fg:w="1"/><text x="11.1731%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.15%)</title><rect x="10.9231%" y="853" width="0.1538%" height="15" fill="rgb(254,35,30)" fg:x="71" fg:w="1"/><text x="11.1731%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.15%)</title><rect x="10.9231%" y="837" width="0.1538%" height="15" fill="rgb(226,169,23)" fg:x="71" fg:w="1"/><text x="11.1731%" y="847.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (1 samples, 0.15%)</title><rect x="10.9231%" y="821" width="0.1538%" height="15" fill="rgb(205,130,14)" fg:x="71" fg:w="1"/><text x="11.1731%" y="831.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_at_least (1 samples, 0.15%)</title><rect x="10.9231%" y="805" width="0.1538%" height="15" fill="rgb(238,57,7)" fg:x="71" fg:w="1"/><text x="11.1731%" y="815.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 0.15%)</title><rect x="10.9231%" y="789" width="0.1538%" height="15" fill="rgb(235,200,16)" fg:x="71" fg:w="1"/><text x="11.1731%" y="799.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.15%)</title><rect x="10.9231%" y="773" width="0.1538%" height="15" fill="rgb(213,34,18)" fg:x="71" fg:w="1"/><text x="11.1731%" y="783.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (1 samples, 0.15%)</title><rect x="10.9231%" y="757" width="0.1538%" height="15" fill="rgb(253,35,22)" fg:x="71" fg:w="1"/><text x="11.1731%" y="767.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (1 samples, 0.15%)</title><rect x="10.9231%" y="741" width="0.1538%" height="15" fill="rgb(247,137,3)" fg:x="71" fg:w="1"/><text x="11.1731%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="10.9231%" y="725" width="0.1538%" height="15" fill="rgb(214,109,53)" fg:x="71" fg:w="1"/><text x="11.1731%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.15%)</title><rect x="10.9231%" y="709" width="0.1538%" height="15" fill="rgb(254,35,30)" fg:x="71" fg:w="1"/><text x="11.1731%" y="719.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.15%)</title><rect x="10.9231%" y="693" width="0.1538%" height="15" fill="rgb(226,169,23)" fg:x="71" fg:w="1"/><text x="11.1731%" y="703.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice::{{closure}} (1 samples, 0.15%)</title><rect x="10.9231%" y="677" width="0.1538%" height="15" fill="rgb(223,145,12)" fg:x="71" fg:w="1"/><text x="11.1731%" y="687.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 0.15%)</title><rect x="10.9231%" y="661" width="0.1538%" height="15" fill="rgb(235,200,16)" fg:x="71" fg:w="1"/><text x="11.1731%" y="671.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.15%)</title><rect x="10.9231%" y="645" width="0.1538%" height="15" fill="rgb(213,34,18)" fg:x="71" fg:w="1"/><text x="11.1731%" y="655.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (1 samples, 0.15%)</title><rect x="10.9231%" y="629" width="0.1538%" height="15" fill="rgb(210,105,37)" fg:x="71" fg:w="1"/><text x="11.1731%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 0.15%)</title><rect x="10.9231%" y="613" width="0.1538%" height="15" fill="rgb(222,94,14)" fg:x="71" fg:w="1"/><text x="11.1731%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.15%)</title><rect x="10.9231%" y="597" width="0.1538%" height="15" fill="rgb(254,35,30)" fg:x="71" fg:w="1"/><text x="11.1731%" y="607.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.15%)</title><rect x="10.9231%" y="581" width="0.1538%" height="15" fill="rgb(226,169,23)" fg:x="71" fg:w="1"/><text x="11.1731%" y="591.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (1 samples, 0.15%)</title><rect x="10.9231%" y="565" width="0.1538%" height="15" fill="rgb(205,130,14)" fg:x="71" fg:w="1"/><text x="11.1731%" y="575.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_at_least (1 samples, 0.15%)</title><rect x="10.9231%" y="549" width="0.1538%" height="15" fill="rgb(238,57,7)" fg:x="71" fg:w="1"/><text x="11.1731%" y="559.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.15%)</title><rect x="10.9231%" y="533" width="0.1538%" height="15" fill="rgb(213,34,18)" fg:x="71" fg:w="1"/><text x="11.1731%" y="543.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class (1 samples, 0.15%)</title><rect x="10.9231%" y="517" width="0.1538%" height="15" fill="rgb(246,38,12)" fg:x="71" fg:w="1"/><text x="11.1731%" y="527.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class_reverse_with_suffix (1 samples, 0.15%)</title><rect x="10.9231%" y="501" width="0.1538%" height="15" fill="rgb(227,194,49)" fg:x="71" fg:w="1"/><text x="11.1731%" y="511.50"></text></g><g><title>regex_syntax::utf8::Utf8Sequences::new (1 samples, 0.15%)</title><rect x="10.9231%" y="485" width="0.1538%" height="15" fill="rgb(233,119,6)" fg:x="71" fg:w="1"/><text x="11.1731%" y="495.50"></text></g><g><title>regex_syntax::utf8::Utf8Sequences::push (1 samples, 0.15%)</title><rect x="10.9231%" y="469" width="0.1538%" height="15" fill="rgb(233,91,1)" fg:x="71" fg:w="1"/><text x="11.1731%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.15%)</title><rect x="10.9231%" y="453" width="0.1538%" height="15" fill="rgb(241,229,15)" fg:x="71" fg:w="1"/><text x="11.1731%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.15%)</title><rect x="10.9231%" y="437" width="0.1538%" height="15" fill="rgb(254,103,39)" fg:x="71" fg:w="1"/><text x="11.1731%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.15%)</title><rect x="10.9231%" y="421" width="0.1538%" height="15" fill="rgb(254,53,35)" fg:x="71" fg:w="1"/><text x="11.1731%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.15%)</title><rect x="10.9231%" y="405" width="0.1538%" height="15" fill="rgb(237,133,22)" fg:x="71" fg:w="1"/><text x="11.1731%" y="415.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="10.9231%" y="389" width="0.1538%" height="15" fill="rgb(206,112,53)" fg:x="71" fg:w="1"/><text x="11.1731%" y="399.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="10.4615%" y="1125" width="0.9231%" height="15" fill="rgb(227,28,50)" fg:x="68" fg:w="6"/><text x="10.7115%" y="1135.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write (2 samples, 0.31%)</title><rect x="11.0769%" y="1109" width="0.3077%" height="15" fill="rgb(232,39,45)" fg:x="72" fg:w="2"/><text x="11.3269%" y="1119.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write (2 samples, 0.31%)</title><rect x="11.0769%" y="1093" width="0.3077%" height="15" fill="rgb(216,85,2)" fg:x="72" fg:w="2"/><text x="11.3269%" y="1103.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write (2 samples, 0.31%)</title><rect x="11.0769%" y="1077" width="0.3077%" height="15" fill="rgb(226,48,36)" fg:x="72" fg:w="2"/><text x="11.3269%" y="1087.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write (2 samples, 0.31%)</title><rect x="11.0769%" y="1061" width="0.3077%" height="15" fill="rgb(237,90,14)" fg:x="72" fg:w="2"/><text x="11.3269%" y="1071.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write (2 samples, 0.31%)</title><rect x="11.0769%" y="1045" width="0.3077%" height="15" fill="rgb(250,14,31)" fg:x="72" fg:w="2"/><text x="11.3269%" y="1055.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_to_buffer_unchecked (2 samples, 0.31%)</title><rect x="11.0769%" y="1029" width="0.3077%" height="15" fill="rgb(208,120,32)" fg:x="72" fg:w="2"/><text x="11.3269%" y="1039.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.31%)</title><rect x="11.0769%" y="1013" width="0.3077%" height="15" fill="rgb(214,20,35)" fg:x="72" fg:w="2"/><text x="11.3269%" y="1023.50"></text></g><g><title>__GI___libc_write (2 samples, 0.31%)</title><rect x="11.0769%" y="997" width="0.3077%" height="15" fill="rgb(232,197,30)" fg:x="72" fg:w="2"/><text x="11.3269%" y="1007.50"></text></g><g><title>__GI___libc_write (2 samples, 0.31%)</title><rect x="11.0769%" y="981" width="0.3077%" height="15" fill="rgb(232,197,30)" fg:x="72" fg:w="2"/><text x="11.3269%" y="991.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.31%)</title><rect x="11.0769%" y="965" width="0.3077%" height="15" fill="rgb(210,204,4)" fg:x="72" fg:w="2"/><text x="11.3269%" y="975.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.31%)</title><rect x="11.3846%" y="933" width="0.3077%" height="15" fill="rgb(210,204,4)" fg:x="74" fg:w="2"/><text x="11.6346%" y="943.50"></text></g><g><title>[[kernel.kallsyms]] (9 samples, 1.38%)</title><rect x="11.3846%" y="949" width="1.3846%" height="15" fill="rgb(210,204,4)" fg:x="74" fg:w="9"/><text x="11.6346%" y="959.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 1.69%)</title><rect x="11.3846%" y="965" width="1.6923%" height="15" fill="rgb(210,204,4)" fg:x="74" fg:w="11"/><text x="11.6346%" y="975.50"></text></g><g><title>[[kernel.kallsyms]] (12 samples, 1.85%)</title><rect x="11.3846%" y="981" width="1.8462%" height="15" fill="rgb(210,204,4)" fg:x="74" fg:w="12"/><text x="11.6346%" y="991.50">[..</text></g><g><title>[[kernel.kallsyms]] (17 samples, 2.62%)</title><rect x="11.3846%" y="1029" width="2.6154%" height="15" fill="rgb(210,204,4)" fg:x="74" fg:w="17"/><text x="11.6346%" y="1039.50">[[..</text></g><g><title>[[kernel.kallsyms]] (17 samples, 2.62%)</title><rect x="11.3846%" y="1013" width="2.6154%" height="15" fill="rgb(210,204,4)" fg:x="74" fg:w="17"/><text x="11.6346%" y="1023.50">[[..</text></g><g><title>[[kernel.kallsyms]] (17 samples, 2.62%)</title><rect x="11.3846%" y="997" width="2.6154%" height="15" fill="rgb(210,204,4)" fg:x="74" fg:w="17"/><text x="11.6346%" y="1007.50">[[..</text></g><g><title>[[kernel.kallsyms]] (19 samples, 2.92%)</title><rect x="11.3846%" y="1045" width="2.9231%" height="15" fill="rgb(210,204,4)" fg:x="74" fg:w="19"/><text x="11.6346%" y="1055.50">[[..</text></g><g><title>s4 (104 samples, 16.00%)</title><rect x="0.0000%" y="1141" width="16.0000%" height="15" fill="rgb(230,7,27)" fg:x="0" fg:w="104"/><text x="0.2500%" y="1151.50">s4</text></g><g><title>[[kernel.kallsyms]] (30 samples, 4.62%)</title><rect x="11.3846%" y="1125" width="4.6154%" height="15" fill="rgb(210,204,4)" fg:x="74" fg:w="30"/><text x="11.6346%" y="1135.50">[[ker..</text></g><g><title>[[kernel.kallsyms]] (30 samples, 4.62%)</title><rect x="11.3846%" y="1109" width="4.6154%" height="15" fill="rgb(210,204,4)" fg:x="74" fg:w="30"/><text x="11.6346%" y="1119.50">[[ker..</text></g><g><title>[[kernel.kallsyms]] (30 samples, 4.62%)</title><rect x="11.3846%" y="1093" width="4.6154%" height="15" fill="rgb(210,204,4)" fg:x="74" fg:w="30"/><text x="11.6346%" y="1103.50">[[ker..</text></g><g><title>[[kernel.kallsyms]] (30 samples, 4.62%)</title><rect x="11.3846%" y="1077" width="4.6154%" height="15" fill="rgb(210,204,4)" fg:x="74" fg:w="30"/><text x="11.6346%" y="1087.50">[[ker..</text></g><g><title>[[kernel.kallsyms]] (30 samples, 4.62%)</title><rect x="11.3846%" y="1061" width="4.6154%" height="15" fill="rgb(210,204,4)" fg:x="74" fg:w="30"/><text x="11.6346%" y="1071.50">[[ker..</text></g><g><title>perf-exec (10 samples, 1.54%)</title><rect x="16.0000%" y="1141" width="1.5385%" height="15" fill="rgb(250,111,27)" fg:x="104" fg:w="10"/><text x="16.2500%" y="1151.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 1.54%)</title><rect x="16.0000%" y="1125" width="1.5385%" height="15" fill="rgb(210,204,4)" fg:x="104" fg:w="10"/><text x="16.2500%" y="1135.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 1.54%)</title><rect x="16.0000%" y="1109" width="1.5385%" height="15" fill="rgb(210,204,4)" fg:x="104" fg:w="10"/><text x="16.2500%" y="1119.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 1.54%)</title><rect x="16.0000%" y="1093" width="1.5385%" height="15" fill="rgb(210,204,4)" fg:x="104" fg:w="10"/><text x="16.2500%" y="1103.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 1.54%)</title><rect x="16.0000%" y="1077" width="1.5385%" height="15" fill="rgb(210,204,4)" fg:x="104" fg:w="10"/><text x="16.2500%" y="1087.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 1.54%)</title><rect x="16.0000%" y="1061" width="1.5385%" height="15" fill="rgb(210,204,4)" fg:x="104" fg:w="10"/><text x="16.2500%" y="1071.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 1.54%)</title><rect x="16.0000%" y="1045" width="1.5385%" height="15" fill="rgb(210,204,4)" fg:x="104" fg:w="10"/><text x="16.2500%" y="1055.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 1.54%)</title><rect x="16.0000%" y="1029" width="1.5385%" height="15" fill="rgb(210,204,4)" fg:x="104" fg:w="10"/><text x="16.2500%" y="1039.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 1.54%)</title><rect x="16.0000%" y="1013" width="1.5385%" height="15" fill="rgb(210,204,4)" fg:x="104" fg:w="10"/><text x="16.2500%" y="1023.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 1.54%)</title><rect x="16.0000%" y="997" width="1.5385%" height="15" fill="rgb(210,204,4)" fg:x="104" fg:w="10"/><text x="16.2500%" y="1007.50"></text></g><g><title>&lt;regex_automata::meta::strategy::ReverseInner as regex_automata::meta::strategy::Strategy&gt;::create_cache (1 samples, 0.15%)</title><rect x="17.5385%" y="565" width="0.1538%" height="15" fill="rgb(245,40,36)" fg:x="114" fg:w="1"/><text x="17.7885%" y="575.50"></text></g><g><title>regex_automata::meta::wrappers::ReverseHybrid::create_cache (1 samples, 0.15%)</title><rect x="17.5385%" y="549" width="0.1538%" height="15" fill="rgb(252,206,16)" fg:x="114" fg:w="1"/><text x="17.7885%" y="559.50"></text></g><g><title>regex_automata::meta::wrappers::ReverseHybridCache::new (1 samples, 0.15%)</title><rect x="17.5385%" y="533" width="0.1538%" height="15" fill="rgb(244,152,5)" fg:x="114" fg:w="1"/><text x="17.7885%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.15%)</title><rect x="17.5385%" y="517" width="0.1538%" height="15" fill="rgb(254,35,30)" fg:x="114" fg:w="1"/><text x="17.7885%" y="527.50"></text></g><g><title>regex_automata::meta::wrappers::ReverseHybridCache::new::{{closure}} (1 samples, 0.15%)</title><rect x="17.5385%" y="501" width="0.1538%" height="15" fill="rgb(236,68,36)" fg:x="114" fg:w="1"/><text x="17.7885%" y="511.50"></text></g><g><title>regex_automata::hybrid::dfa::DFA::create_cache (1 samples, 0.15%)</title><rect x="17.5385%" y="485" width="0.1538%" height="15" fill="rgb(220,131,10)" fg:x="114" fg:w="1"/><text x="17.7885%" y="495.50"></text></g><g><title>regex_automata::hybrid::dfa::Cache::new (1 samples, 0.15%)</title><rect x="17.5385%" y="469" width="0.1538%" height="15" fill="rgb(251,42,50)" fg:x="114" fg:w="1"/><text x="17.7885%" y="479.50"></text></g><g><title>regex_automata::hybrid::dfa::Lazy::init_cache (1 samples, 0.15%)</title><rect x="17.5385%" y="453" width="0.1538%" height="15" fill="rgb(226,99,9)" fg:x="114" fg:w="1"/><text x="17.7885%" y="463.50"></text></g><g><title>regex_automata::hybrid::dfa::Lazy::add_state (1 samples, 0.15%)</title><rect x="17.5385%" y="437" width="0.1538%" height="15" fill="rgb(237,112,10)" fg:x="114" fg:w="1"/><text x="17.7885%" y="447.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.15%)</title><rect x="17.5385%" y="421" width="0.1538%" height="15" fill="rgb(237,8,32)" fg:x="114" fg:w="1"/><text x="17.7885%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.15%)</title><rect x="17.5385%" y="405" width="0.1538%" height="15" fill="rgb(228,156,5)" fg:x="114" fg:w="1"/><text x="17.7885%" y="415.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.15%)</title><rect x="17.5385%" y="389" width="0.1538%" height="15" fill="rgb(221,125,3)" fg:x="114" fg:w="1"/><text x="17.7885%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.15%)</title><rect x="17.5385%" y="373" width="0.1538%" height="15" fill="rgb(222,198,6)" fg:x="114" fg:w="1"/><text x="17.7885%" y="383.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.15%)</title><rect x="17.5385%" y="357" width="0.1538%" height="15" fill="rgb(212,33,36)" fg:x="114" fg:w="1"/><text x="17.7885%" y="367.50"></text></g><g><title>&lt;regex_automata::util::determinize::state::State as core::hash::Hash&gt;::hash (1 samples, 0.15%)</title><rect x="17.5385%" y="341" width="0.1538%" height="15" fill="rgb(216,130,26)" fg:x="114" fg:w="1"/><text x="17.7885%" y="351.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::hash::Hash&gt;::hash (1 samples, 0.15%)</title><rect x="17.5385%" y="325" width="0.1538%" height="15" fill="rgb(222,28,54)" fg:x="114" fg:w="1"/><text x="17.7885%" y="335.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.15%)</title><rect x="17.5385%" y="309" width="0.1538%" height="15" fill="rgb(213,6,49)" fg:x="114" fg:w="1"/><text x="17.7885%" y="319.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (1 samples, 0.15%)</title><rect x="17.5385%" y="293" width="0.1538%" height="15" fill="rgb(245,225,13)" fg:x="114" fg:w="1"/><text x="17.7885%" y="303.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.15%)</title><rect x="17.5385%" y="277" width="0.1538%" height="15" fill="rgb(253,26,19)" fg:x="114" fg:w="1"/><text x="17.7885%" y="287.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.15%)</title><rect x="17.5385%" y="261" width="0.1538%" height="15" fill="rgb(206,186,51)" fg:x="114" fg:w="1"/><text x="17.7885%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.15%)</title><rect x="17.5385%" y="245" width="0.1538%" height="15" fill="rgb(236,225,40)" fg:x="114" fg:w="1"/><text x="17.7885%" y="255.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="17.6923%" y="245" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="115" fg:w="1"/><text x="17.9423%" y="255.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.46%)</title><rect x="17.6923%" y="261" width="0.4615%" height="15" fill="rgb(210,204,4)" fg:x="115" fg:w="3"/><text x="17.9423%" y="271.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.62%)</title><rect x="17.6923%" y="325" width="0.6154%" height="15" fill="rgb(210,204,4)" fg:x="115" fg:w="4"/><text x="17.9423%" y="335.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.62%)</title><rect x="17.6923%" y="309" width="0.6154%" height="15" fill="rgb(210,204,4)" fg:x="115" fg:w="4"/><text x="17.9423%" y="319.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.62%)</title><rect x="17.6923%" y="293" width="0.6154%" height="15" fill="rgb(210,204,4)" fg:x="115" fg:w="4"/><text x="17.9423%" y="303.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.62%)</title><rect x="17.6923%" y="277" width="0.6154%" height="15" fill="rgb(210,204,4)" fg:x="115" fg:w="4"/><text x="17.9423%" y="287.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.92%)</title><rect x="17.6923%" y="373" width="0.9231%" height="15" fill="rgb(210,204,4)" fg:x="115" fg:w="6"/><text x="17.9423%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.92%)</title><rect x="17.6923%" y="357" width="0.9231%" height="15" fill="rgb(210,204,4)" fg:x="115" fg:w="6"/><text x="17.9423%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.92%)</title><rect x="17.6923%" y="341" width="0.9231%" height="15" fill="rgb(210,204,4)" fg:x="115" fg:w="6"/><text x="17.9423%" y="351.50"></text></g><g><title>regex_automata::meta::wrappers::PikeVM::create_cache (7 samples, 1.08%)</title><rect x="17.6923%" y="549" width="1.0769%" height="15" fill="rgb(217,147,1)" fg:x="115" fg:w="7"/><text x="17.9423%" y="559.50"></text></g><g><title>regex_automata::meta::wrappers::PikeVMCache::new (7 samples, 1.08%)</title><rect x="17.6923%" y="533" width="1.0769%" height="15" fill="rgb(211,6,33)" fg:x="115" fg:w="7"/><text x="17.9423%" y="543.50"></text></g><g><title>regex_automata::nfa::thompson::pikevm::PikeVM::create_cache (7 samples, 1.08%)</title><rect x="17.6923%" y="517" width="1.0769%" height="15" fill="rgb(211,33,34)" fg:x="115" fg:w="7"/><text x="17.9423%" y="527.50"></text></g><g><title>regex_automata::nfa::thompson::pikevm::Cache::new (7 samples, 1.08%)</title><rect x="17.6923%" y="501" width="1.0769%" height="15" fill="rgb(244,199,14)" fg:x="115" fg:w="7"/><text x="17.9423%" y="511.50"></text></g><g><title>regex_automata::nfa::thompson::pikevm::ActiveStates::new (7 samples, 1.08%)</title><rect x="17.6923%" y="485" width="1.0769%" height="15" fill="rgb(220,13,3)" fg:x="115" fg:w="7"/><text x="17.9423%" y="495.50"></text></g><g><title>regex_automata::nfa::thompson::pikevm::ActiveStates::reset (7 samples, 1.08%)</title><rect x="17.6923%" y="469" width="1.0769%" height="15" fill="rgb(243,194,33)" fg:x="115" fg:w="7"/><text x="17.9423%" y="479.50"></text></g><g><title>regex_automata::nfa::thompson::pikevm::SlotTable::reset (7 samples, 1.08%)</title><rect x="17.6923%" y="453" width="1.0769%" height="15" fill="rgb(226,221,20)" fg:x="115" fg:w="7"/><text x="17.9423%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (7 samples, 1.08%)</title><rect x="17.6923%" y="437" width="1.0769%" height="15" fill="rgb(249,199,35)" fg:x="115" fg:w="7"/><text x="17.9423%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (7 samples, 1.08%)</title><rect x="17.6923%" y="421" width="1.0769%" height="15" fill="rgb(216,52,5)" fg:x="115" fg:w="7"/><text x="17.9423%" y="431.50"></text></g><g><title>core::ptr::write (7 samples, 1.08%)</title><rect x="17.6923%" y="405" width="1.0769%" height="15" fill="rgb(209,143,44)" fg:x="115" fg:w="7"/><text x="17.9423%" y="415.50"></text></g><g><title>__memset_avx512_unaligned_erms (7 samples, 1.08%)</title><rect x="17.6923%" y="389" width="1.0769%" height="15" fill="rgb(240,145,53)" fg:x="115" fg:w="7"/><text x="17.9423%" y="399.50"></text></g><g><title>grow_heap (1 samples, 0.15%)</title><rect x="18.7692%" y="229" width="0.1538%" height="15" fill="rgb(231,135,3)" fg:x="122" fg:w="1"/><text x="19.0192%" y="239.50"></text></g><g><title>__GI___mprotect (1 samples, 0.15%)</title><rect x="18.7692%" y="213" width="0.1538%" height="15" fill="rgb(209,155,30)" fg:x="122" fg:w="1"/><text x="19.0192%" y="223.50"></text></g><g><title>regex_automata::util::sparse_set::SparseSet::new (2 samples, 0.31%)</title><rect x="18.7692%" y="421" width="0.3077%" height="15" fill="rgb(244,107,37)" fg:x="122" fg:w="2"/><text x="19.0192%" y="431.50"></text></g><g><title>regex_automata::util::sparse_set::SparseSet::resize (2 samples, 0.31%)</title><rect x="18.7692%" y="405" width="0.3077%" height="15" fill="rgb(219,206,13)" fg:x="122" fg:w="2"/><text x="19.0192%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (2 samples, 0.31%)</title><rect x="18.7692%" y="389" width="0.3077%" height="15" fill="rgb(249,199,35)" fg:x="122" fg:w="2"/><text x="19.0192%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (2 samples, 0.31%)</title><rect x="18.7692%" y="373" width="0.3077%" height="15" fill="rgb(216,52,5)" fg:x="122" fg:w="2"/><text x="19.0192%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.31%)</title><rect x="18.7692%" y="357" width="0.3077%" height="15" fill="rgb(212,159,3)" fg:x="122" fg:w="2"/><text x="19.0192%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.31%)</title><rect x="18.7692%" y="341" width="0.3077%" height="15" fill="rgb(231,142,39)" fg:x="122" fg:w="2"/><text x="19.0192%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.31%)</title><rect x="18.7692%" y="325" width="0.3077%" height="15" fill="rgb(249,2,22)" fg:x="122" fg:w="2"/><text x="19.0192%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.31%)</title><rect x="18.7692%" y="309" width="0.3077%" height="15" fill="rgb(254,53,35)" fg:x="122" fg:w="2"/><text x="19.0192%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.31%)</title><rect x="18.7692%" y="293" width="0.3077%" height="15" fill="rgb(237,133,22)" fg:x="122" fg:w="2"/><text x="19.0192%" y="303.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.31%)</title><rect x="18.7692%" y="277" width="0.3077%" height="15" fill="rgb(206,112,53)" fg:x="122" fg:w="2"/><text x="19.0192%" y="287.50"></text></g><g><title>_int_malloc (2 samples, 0.31%)</title><rect x="18.7692%" y="261" width="0.3077%" height="15" fill="rgb(222,219,51)" fg:x="122" fg:w="2"/><text x="19.0192%" y="271.50"></text></g><g><title>sysmalloc (2 samples, 0.31%)</title><rect x="18.7692%" y="245" width="0.3077%" height="15" fill="rgb(237,64,10)" fg:x="122" fg:w="2"/><text x="19.0192%" y="255.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="18.9231%" y="229" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="123" fg:w="1"/><text x="19.1731%" y="239.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="18.9231%" y="213" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="123" fg:w="1"/><text x="19.1731%" y="223.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="18.9231%" y="197" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="123" fg:w="1"/><text x="19.1731%" y="207.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="18.9231%" y="181" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="123" fg:w="1"/><text x="19.1731%" y="191.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="18.9231%" y="165" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="123" fg:w="1"/><text x="19.1731%" y="175.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="18.9231%" y="149" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="123" fg:w="1"/><text x="19.1731%" y="159.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="18.9231%" y="133" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="123" fg:w="1"/><text x="19.1731%" y="143.50"></text></g><g><title>regex::regex::bytes::Regex::captures (11 samples, 1.69%)</title><rect x="17.5385%" y="725" width="1.6923%" height="15" fill="rgb(233,29,12)" fg:x="114" fg:w="11"/><text x="17.7885%" y="735.50"></text></g><g><title>regex::regex::bytes::Regex::captures_at (11 samples, 1.69%)</title><rect x="17.5385%" y="709" width="1.6923%" height="15" fill="rgb(207,96,18)" fg:x="114" fg:w="11"/><text x="17.7885%" y="719.50"></text></g><g><title>regex_automata::meta::regex::Regex::captures (11 samples, 1.69%)</title><rect x="17.5385%" y="693" width="1.6923%" height="15" fill="rgb(219,198,6)" fg:x="114" fg:w="11"/><text x="17.7885%" y="703.50"></text></g><g><title>regex_automata::meta::regex::Regex::search_captures (11 samples, 1.69%)</title><rect x="17.5385%" y="677" width="1.6923%" height="15" fill="rgb(212,211,21)" fg:x="114" fg:w="11"/><text x="17.7885%" y="687.50"></text></g><g><title>regex_automata::meta::regex::Regex::search_slots (11 samples, 1.69%)</title><rect x="17.5385%" y="661" width="1.6923%" height="15" fill="rgb(243,12,43)" fg:x="114" fg:w="11"/><text x="17.7885%" y="671.50"></text></g><g><title>regex_automata::util::pool::Pool&lt;T,F&gt;::get (11 samples, 1.69%)</title><rect x="17.5385%" y="645" width="1.6923%" height="15" fill="rgb(210,26,34)" fg:x="114" fg:w="11"/><text x="17.7885%" y="655.50"></text></g><g><title>regex_automata::util::pool::inner::Pool&lt;T,F&gt;::get (11 samples, 1.69%)</title><rect x="17.5385%" y="629" width="1.6923%" height="15" fill="rgb(245,192,35)" fg:x="114" fg:w="11"/><text x="17.7885%" y="639.50"></text></g><g><title>regex_automata::util::pool::inner::Pool&lt;T,F&gt;::get_slow (11 samples, 1.69%)</title><rect x="17.5385%" y="613" width="1.6923%" height="15" fill="rgb(239,82,48)" fg:x="114" fg:w="11"/><text x="17.7885%" y="623.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (11 samples, 1.69%)</title><rect x="17.5385%" y="597" width="1.6923%" height="15" fill="rgb(249,36,21)" fg:x="114" fg:w="11"/><text x="17.7885%" y="607.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir::{{closure}} (11 samples, 1.69%)</title><rect x="17.5385%" y="581" width="1.6923%" height="15" fill="rgb(234,153,14)" fg:x="114" fg:w="11"/><text x="17.7885%" y="591.50"></text></g><g><title>&lt;regex_automata::meta::strategy::Core as regex_automata::meta::strategy::Strategy&gt;::create_cache (10 samples, 1.54%)</title><rect x="17.6923%" y="565" width="1.5385%" height="15" fill="rgb(250,2,44)" fg:x="115" fg:w="10"/><text x="17.9423%" y="575.50"></text></g><g><title>regex_automata::meta::wrappers::Hybrid::create_cache (3 samples, 0.46%)</title><rect x="18.7692%" y="549" width="0.4615%" height="15" fill="rgb(221,96,53)" fg:x="122" fg:w="3"/><text x="19.0192%" y="559.50"></text></g><g><title>regex_automata::meta::wrappers::HybridCache::new (3 samples, 0.46%)</title><rect x="18.7692%" y="533" width="0.4615%" height="15" fill="rgb(228,162,6)" fg:x="122" fg:w="3"/><text x="19.0192%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.46%)</title><rect x="18.7692%" y="517" width="0.4615%" height="15" fill="rgb(254,35,30)" fg:x="122" fg:w="3"/><text x="19.0192%" y="527.50"></text></g><g><title>regex_automata::meta::wrappers::HybridCache::new::{{closure}} (3 samples, 0.46%)</title><rect x="18.7692%" y="501" width="0.4615%" height="15" fill="rgb(247,196,35)" fg:x="122" fg:w="3"/><text x="19.0192%" y="511.50"></text></g><g><title>regex_automata::hybrid::regex::Regex::create_cache (3 samples, 0.46%)</title><rect x="18.7692%" y="485" width="0.4615%" height="15" fill="rgb(224,197,49)" fg:x="122" fg:w="3"/><text x="19.0192%" y="495.50"></text></g><g><title>regex_automata::hybrid::regex::Cache::new (3 samples, 0.46%)</title><rect x="18.7692%" y="469" width="0.4615%" height="15" fill="rgb(245,87,50)" fg:x="122" fg:w="3"/><text x="19.0192%" y="479.50"></text></g><g><title>regex_automata::hybrid::dfa::Cache::new (3 samples, 0.46%)</title><rect x="18.7692%" y="453" width="0.4615%" height="15" fill="rgb(251,42,50)" fg:x="122" fg:w="3"/><text x="19.0192%" y="463.50"></text></g><g><title>regex_automata::util::sparse_set::SparseSets::new (3 samples, 0.46%)</title><rect x="18.7692%" y="437" width="0.4615%" height="15" fill="rgb(237,193,40)" fg:x="122" fg:w="3"/><text x="19.0192%" y="447.50"></text></g><g><title>unlink_chunk (1 samples, 0.15%)</title><rect x="19.2308%" y="37" width="0.1538%" height="15" fill="rgb(223,20,30)" fg:x="125" fg:w="1"/><text x="19.4808%" y="47.50"></text></g><g><title>malloc_consolidate (2 samples, 0.31%)</title><rect x="19.2308%" y="53" width="0.3077%" height="15" fill="rgb(228,194,39)" fg:x="125" fg:w="2"/><text x="19.4808%" y="63.50"></text></g><g><title>regex::builders::bytes::RegexBuilder::new (3 samples, 0.46%)</title><rect x="19.2308%" y="565" width="0.4615%" height="15" fill="rgb(246,66,5)" fg:x="125" fg:w="3"/><text x="19.4808%" y="575.50"></text></g><g><title>regex::builders::Builder::new (3 samples, 0.46%)</title><rect x="19.2308%" y="549" width="0.4615%" height="15" fill="rgb(223,120,31)" fg:x="125" fg:w="3"/><text x="19.4808%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (3 samples, 0.46%)</title><rect x="19.2308%" y="533" width="0.4615%" height="15" fill="rgb(205,186,49)" fg:x="125" fg:w="3"/><text x="19.4808%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.46%)</title><rect x="19.2308%" y="517" width="0.4615%" height="15" fill="rgb(232,211,42)" fg:x="125" fg:w="3"/><text x="19.4808%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (3 samples, 0.46%)</title><rect x="19.2308%" y="501" width="0.4615%" height="15" fill="rgb(214,146,48)" fg:x="125" fg:w="3"/><text x="19.4808%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.46%)</title><rect x="19.2308%" y="485" width="0.4615%" height="15" fill="rgb(245,181,4)" fg:x="125" fg:w="3"/><text x="19.4808%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.46%)</title><rect x="19.2308%" y="469" width="0.4615%" height="15" fill="rgb(242,69,50)" fg:x="125" fg:w="3"/><text x="19.4808%" y="479.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.46%)</title><rect x="19.2308%" y="453" width="0.4615%" height="15" fill="rgb(238,117,12)" fg:x="125" fg:w="3"/><text x="19.4808%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::by_ref_sized::ByRefSized&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.46%)</title><rect x="19.2308%" y="437" width="0.4615%" height="15" fill="rgb(217,183,5)" fg:x="125" fg:w="3"/><text x="19.4808%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.46%)</title><rect x="19.2308%" y="421" width="0.4615%" height="15" fill="rgb(223,137,46)" fg:x="125" fg:w="3"/><text x="19.4808%" y="431.50"></text></g><g><title>&lt;core::const_closure::ConstFnMutClosure&lt;&amp;mut A,Function&gt; as core::ops::function::FnMut&lt;ClosureArguments&gt;&gt;::call_mut (3 samples, 0.46%)</title><rect x="19.2308%" y="405" width="0.4615%" height="15" fill="rgb(206,27,14)" fg:x="125" fg:w="3"/><text x="19.4808%" y="415.50"></text></g><g><title>core::ops::function::Fn::call (3 samples, 0.46%)</title><rect x="19.2308%" y="389" width="0.4615%" height="15" fill="rgb(235,49,44)" fg:x="125" fg:w="3"/><text x="19.4808%" y="399.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_2_imp (3 samples, 0.46%)</title><rect x="19.2308%" y="373" width="0.4615%" height="15" fill="rgb(252,20,41)" fg:x="125" fg:w="3"/><text x="19.4808%" y="383.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (3 samples, 0.46%)</title><rect x="19.2308%" y="357" width="0.4615%" height="15" fill="rgb(226,146,40)" fg:x="125" fg:w="3"/><text x="19.4808%" y="367.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3 samples, 0.46%)</title><rect x="19.2308%" y="341" width="0.4615%" height="15" fill="rgb(253,112,1)" fg:x="125" fg:w="3"/><text x="19.4808%" y="351.50"></text></g><g><title>regex::builders::Builder::new::{{closure}} (3 samples, 0.46%)</title><rect x="19.2308%" y="325" width="0.4615%" height="15" fill="rgb(240,154,24)" fg:x="125" fg:w="3"/><text x="19.4808%" y="335.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (3 samples, 0.46%)</title><rect x="19.2308%" y="309" width="0.4615%" height="15" fill="rgb(212,135,46)" fg:x="125" fg:w="3"/><text x="19.4808%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (3 samples, 0.46%)</title><rect x="19.2308%" y="293" width="0.4615%" height="15" fill="rgb(229,24,43)" fg:x="125" fg:w="3"/><text x="19.4808%" y="303.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (3 samples, 0.46%)</title><rect x="19.2308%" y="277" width="0.4615%" height="15" fill="rgb(240,68,32)" fg:x="125" fg:w="3"/><text x="19.4808%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (3 samples, 0.46%)</title><rect x="19.2308%" y="261" width="0.4615%" height="15" fill="rgb(212,75,49)" fg:x="125" fg:w="3"/><text x="19.4808%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.46%)</title><rect x="19.2308%" y="245" width="0.4615%" height="15" fill="rgb(209,26,30)" fg:x="125" fg:w="3"/><text x="19.4808%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.46%)</title><rect x="19.2308%" y="229" width="0.4615%" height="15" fill="rgb(229,121,46)" fg:x="125" fg:w="3"/><text x="19.4808%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.46%)</title><rect x="19.2308%" y="213" width="0.4615%" height="15" fill="rgb(221,172,50)" fg:x="125" fg:w="3"/><text x="19.4808%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.46%)</title><rect x="19.2308%" y="197" width="0.4615%" height="15" fill="rgb(216,42,52)" fg:x="125" fg:w="3"/><text x="19.4808%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.46%)</title><rect x="19.2308%" y="181" width="0.4615%" height="15" fill="rgb(249,207,12)" fg:x="125" fg:w="3"/><text x="19.4808%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.46%)</title><rect x="19.2308%" y="165" width="0.4615%" height="15" fill="rgb(224,194,14)" fg:x="125" fg:w="3"/><text x="19.4808%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.46%)</title><rect x="19.2308%" y="149" width="0.4615%" height="15" fill="rgb(227,204,5)" fg:x="125" fg:w="3"/><text x="19.4808%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.46%)</title><rect x="19.2308%" y="133" width="0.4615%" height="15" fill="rgb(231,114,21)" fg:x="125" fg:w="3"/><text x="19.4808%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.46%)</title><rect x="19.2308%" y="117" width="0.4615%" height="15" fill="rgb(238,209,2)" fg:x="125" fg:w="3"/><text x="19.4808%" y="127.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.46%)</title><rect x="19.2308%" y="101" width="0.4615%" height="15" fill="rgb(253,135,41)" fg:x="125" fg:w="3"/><text x="19.4808%" y="111.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.46%)</title><rect x="19.2308%" y="85" width="0.4615%" height="15" fill="rgb(206,112,53)" fg:x="125" fg:w="3"/><text x="19.4808%" y="95.50"></text></g><g><title>_int_malloc (3 samples, 0.46%)</title><rect x="19.2308%" y="69" width="0.4615%" height="15" fill="rgb(222,219,51)" fg:x="125" fg:w="3"/><text x="19.4808%" y="79.50"></text></g><g><title>regex_syntax::hir::translate::TranslatorI::push (1 samples, 0.15%)</title><rect x="19.6923%" y="389" width="0.1538%" height="15" fill="rgb(222,136,12)" fg:x="128" fg:w="1"/><text x="19.9423%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.15%)</title><rect x="19.6923%" y="373" width="0.1538%" height="15" fill="rgb(241,229,15)" fg:x="128" fg:w="1"/><text x="19.9423%" y="383.50"></text></g><g><title>core::ptr::write (1 samples, 0.15%)</title><rect x="19.6923%" y="357" width="0.1538%" height="15" fill="rgb(209,143,44)" fg:x="128" fg:w="1"/><text x="19.9423%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.15%)</title><rect x="19.8462%" y="293" width="0.1538%" height="15" fill="rgb(232,14,28)" fg:x="129" fg:w="1"/><text x="20.0962%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="19.8462%" y="277" width="0.1538%" height="15" fill="rgb(253,154,22)" fg:x="129" fg:w="1"/><text x="20.0962%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.15%)</title><rect x="19.8462%" y="261" width="0.1538%" height="15" fill="rgb(249,207,12)" fg:x="129" fg:w="1"/><text x="20.0962%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.15%)</title><rect x="19.8462%" y="245" width="0.1538%" height="15" fill="rgb(224,194,14)" fg:x="129" fg:w="1"/><text x="20.0962%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.15%)</title><rect x="19.8462%" y="229" width="0.1538%" height="15" fill="rgb(227,204,5)" fg:x="129" fg:w="1"/><text x="20.0962%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.15%)</title><rect x="19.8462%" y="213" width="0.1538%" height="15" fill="rgb(231,114,21)" fg:x="129" fg:w="1"/><text x="20.0962%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.15%)</title><rect x="19.8462%" y="197" width="0.1538%" height="15" fill="rgb(238,209,2)" fg:x="129" fg:w="1"/><text x="20.0962%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.15%)</title><rect x="19.8462%" y="181" width="0.1538%" height="15" fill="rgb(253,135,41)" fg:x="129" fg:w="1"/><text x="20.0962%" y="191.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="19.8462%" y="165" width="0.1538%" height="15" fill="rgb(206,112,53)" fg:x="129" fg:w="1"/><text x="20.0962%" y="175.50"></text></g><g><title>regex_syntax::ast::visitor::HeapVisitor::induct (3 samples, 0.46%)</title><rect x="19.6923%" y="453" width="0.4615%" height="15" fill="rgb(220,131,54)" fg:x="128" fg:w="3"/><text x="19.9423%" y="463.50"></text></g><g><title>regex_syntax::ast::visitor::HeapVisitor::visit_class (3 samples, 0.46%)</title><rect x="19.6923%" y="437" width="0.4615%" height="15" fill="rgb(253,26,45)" fg:x="128" fg:w="3"/><text x="19.9423%" y="447.50"></text></g><g><title>regex_syntax::ast::visitor::HeapVisitor::visit_class_post (3 samples, 0.46%)</title><rect x="19.6923%" y="421" width="0.4615%" height="15" fill="rgb(236,134,51)" fg:x="128" fg:w="3"/><text x="19.9423%" y="431.50"></text></g><g><title>&lt;regex_syntax::hir::translate::TranslatorI as regex_syntax::ast::visitor::Visitor&gt;::visit_class_set_item_post (3 samples, 0.46%)</title><rect x="19.6923%" y="405" width="0.4615%" height="15" fill="rgb(209,145,6)" fg:x="128" fg:w="3"/><text x="19.9423%" y="415.50"></text></g><g><title>regex_syntax::hir::translate::TranslatorI::hir_ascii_unicode_class (2 samples, 0.31%)</title><rect x="19.8462%" y="389" width="0.3077%" height="15" fill="rgb(239,90,10)" fg:x="129" fg:w="2"/><text x="20.0962%" y="399.50"></text></g><g><title>regex_syntax::hir::ClassUnicode::new (2 samples, 0.31%)</title><rect x="19.8462%" y="373" width="0.3077%" height="15" fill="rgb(214,194,28)" fg:x="129" fg:w="2"/><text x="20.0962%" y="383.50"></text></g><g><title>regex_syntax::hir::interval::IntervalSet&lt;I&gt;::new (2 samples, 0.31%)</title><rect x="19.8462%" y="357" width="0.3077%" height="15" fill="rgb(226,60,27)" fg:x="129" fg:w="2"/><text x="20.0962%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.31%)</title><rect x="19.8462%" y="341" width="0.3077%" height="15" fill="rgb(222,213,17)" fg:x="129" fg:w="2"/><text x="20.0962%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.31%)</title><rect x="19.8462%" y="325" width="0.3077%" height="15" fill="rgb(247,137,3)" fg:x="129" fg:w="2"/><text x="20.0962%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.31%)</title><rect x="19.8462%" y="309" width="0.3077%" height="15" fill="rgb(227,158,43)" fg:x="129" fg:w="2"/><text x="20.0962%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.15%)</title><rect x="20.1538%" y="453" width="0.1538%" height="15" fill="rgb(241,229,15)" fg:x="131" fg:w="1"/><text x="20.4038%" y="463.50"></text></g><g><title>core::ptr::write (1 samples, 0.15%)</title><rect x="20.1538%" y="437" width="0.1538%" height="15" fill="rgb(209,143,44)" fg:x="131" fg:w="1"/><text x="20.4038%" y="447.50"></text></g><g><title>&lt;regex_syntax::hir::translate::TranslatorI as regex_syntax::ast::visitor::Visitor&gt;::visit_pre (1 samples, 0.15%)</title><rect x="20.3077%" y="453" width="0.1538%" height="15" fill="rgb(210,165,12)" fg:x="132" fg:w="1"/><text x="20.5577%" y="463.50"></text></g><g><title>regex_syntax::hir::translate::TranslatorI::push (1 samples, 0.15%)</title><rect x="20.3077%" y="437" width="0.1538%" height="15" fill="rgb(222,136,12)" fg:x="132" fg:w="1"/><text x="20.5577%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.15%)</title><rect x="20.3077%" y="421" width="0.1538%" height="15" fill="rgb(241,229,15)" fg:x="132" fg:w="1"/><text x="20.5577%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.15%)</title><rect x="20.3077%" y="405" width="0.1538%" height="15" fill="rgb(254,103,39)" fg:x="132" fg:w="1"/><text x="20.5577%" y="415.50"></text></g><g><title>regex_syntax::hir::translate::TranslatorI::unicode_fold_and_negate (1 samples, 0.15%)</title><rect x="20.4615%" y="437" width="0.1538%" height="15" fill="rgb(228,29,41)" fg:x="133" fg:w="1"/><text x="20.7115%" y="447.50"></text></g><g><title>regex_syntax::hir::ClassUnicode::negate (1 samples, 0.15%)</title><rect x="20.4615%" y="421" width="0.1538%" height="15" fill="rgb(248,23,38)" fg:x="133" fg:w="1"/><text x="20.7115%" y="431.50"></text></g><g><title>regex_syntax::hir::interval::IntervalSet&lt;I&gt;::negate (1 samples, 0.15%)</title><rect x="20.4615%" y="405" width="0.1538%" height="15" fill="rgb(209,108,48)" fg:x="133" fg:w="1"/><text x="20.7115%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;regex_syntax::hir::ClassUnicodeRange&gt;&gt; (1 samples, 0.15%)</title><rect x="20.4615%" y="389" width="0.1538%" height="15" fill="rgb(219,40,49)" fg:x="133" fg:w="1"/><text x="20.7115%" y="399.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="20.4615%" y="373" width="0.1538%" height="15" fill="rgb(226,75,33)" fg:x="133" fg:w="1"/><text x="20.7115%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;regex_syntax::hir::ClassUnicodeRange,alloc::alloc::Global&gt;&gt; (1 samples, 0.15%)</title><rect x="20.4615%" y="357" width="0.1538%" height="15" fill="rgb(230,164,46)" fg:x="133" fg:w="1"/><text x="20.7115%" y="367.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="20.4615%" y="341" width="0.1538%" height="15" fill="rgb(248,7,24)" fg:x="133" fg:w="1"/><text x="20.7115%" y="351.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.15%)</title><rect x="20.4615%" y="325" width="0.1538%" height="15" fill="rgb(221,136,15)" fg:x="133" fg:w="1"/><text x="20.7115%" y="335.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.15%)</title><rect x="20.4615%" y="309" width="0.1538%" height="15" fill="rgb(217,126,36)" fg:x="133" fg:w="1"/><text x="20.7115%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.15%)</title><rect x="20.6154%" y="373" width="0.1538%" height="15" fill="rgb(248,74,39)" fg:x="134" fg:w="1"/><text x="20.8654%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.15%)</title><rect x="20.6154%" y="357" width="0.1538%" height="15" fill="rgb(239,196,40)" fg:x="134" fg:w="1"/><text x="20.8654%" y="367.50"></text></g><g><title>regex_syntax::hir::translate::TranslatorI::push_char (2 samples, 0.31%)</title><rect x="20.6154%" y="437" width="0.3077%" height="15" fill="rgb(208,83,35)" fg:x="134" fg:w="2"/><text x="20.8654%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.31%)</title><rect x="20.6154%" y="421" width="0.3077%" height="15" fill="rgb(243,52,34)" fg:x="134" fg:w="2"/><text x="20.8654%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.31%)</title><rect x="20.6154%" y="405" width="0.3077%" height="15" fill="rgb(224,207,30)" fg:x="134" fg:w="2"/><text x="20.8654%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.31%)</title><rect x="20.6154%" y="389" width="0.3077%" height="15" fill="rgb(251,49,54)" fg:x="134" fg:w="2"/><text x="20.8654%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="20.7692%" y="373" width="0.1538%" height="15" fill="rgb(212,159,3)" fg:x="135" fg:w="1"/><text x="21.0192%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="20.7692%" y="357" width="0.1538%" height="15" fill="rgb(231,142,39)" fg:x="135" fg:w="1"/><text x="21.0192%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.15%)</title><rect x="20.7692%" y="341" width="0.1538%" height="15" fill="rgb(249,2,22)" fg:x="135" fg:w="1"/><text x="21.0192%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.15%)</title><rect x="20.7692%" y="325" width="0.1538%" height="15" fill="rgb(254,53,35)" fg:x="135" fg:w="1"/><text x="21.0192%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.15%)</title><rect x="20.7692%" y="309" width="0.1538%" height="15" fill="rgb(237,133,22)" fg:x="135" fg:w="1"/><text x="21.0192%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.15%)</title><rect x="20.7692%" y="293" width="0.1538%" height="15" fill="rgb(237,156,49)" fg:x="135" fg:w="1"/><text x="21.0192%" y="303.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.15%)</title><rect x="20.7692%" y="277" width="0.1538%" height="15" fill="rgb(214,150,36)" fg:x="135" fg:w="1"/><text x="21.0192%" y="287.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.15%)</title><rect x="20.7692%" y="261" width="0.1538%" height="15" fill="rgb(254,47,34)" fg:x="135" fg:w="1"/><text x="21.0192%" y="271.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.15%)</title><rect x="20.7692%" y="245" width="0.1538%" height="15" fill="rgb(254,73,4)" fg:x="135" fg:w="1"/><text x="21.0192%" y="255.50"></text></g><g><title>core::ptr::write (1 samples, 0.15%)</title><rect x="20.9231%" y="405" width="0.1538%" height="15" fill="rgb(209,143,44)" fg:x="136" fg:w="1"/><text x="21.1731%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.31%)</title><rect x="20.9231%" y="421" width="0.3077%" height="15" fill="rgb(241,229,15)" fg:x="136" fg:w="2"/><text x="21.1731%" y="431.50"></text></g><g><title>regex_syntax::hir::translate::TranslatorI::push (5 samples, 0.77%)</title><rect x="20.9231%" y="437" width="0.7692%" height="15" fill="rgb(222,136,12)" fg:x="136" fg:w="5"/><text x="21.1731%" y="447.50"></text></g><g><title>regex_syntax::hir::translate::TranslatorI::pop (1 samples, 0.15%)</title><rect x="21.6923%" y="421" width="0.1538%" height="15" fill="rgb(251,64,13)" fg:x="141" fg:w="1"/><text x="21.9423%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (1 samples, 0.15%)</title><rect x="21.6923%" y="405" width="0.1538%" height="15" fill="rgb(216,0,40)" fg:x="141" fg:w="1"/><text x="21.9423%" y="415.50"></text></g><g><title>core::ptr::read (1 samples, 0.15%)</title><rect x="21.6923%" y="389" width="0.1538%" height="15" fill="rgb(222,157,29)" fg:x="141" fg:w="1"/><text x="21.9423%" y="399.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (1 samples, 0.15%)</title><rect x="21.6923%" y="373" width="0.1538%" height="15" fill="rgb(234,151,54)" fg:x="141" fg:w="1"/><text x="21.9423%" y="383.50"></text></g><g><title>regex_syntax::hir::Properties::literal (1 samples, 0.15%)</title><rect x="21.8462%" y="405" width="0.1538%" height="15" fill="rgb(224,191,39)" fg:x="142" fg:w="1"/><text x="22.0962%" y="415.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.15%)</title><rect x="21.8462%" y="389" width="0.1538%" height="15" fill="rgb(209,114,30)" fg:x="142" fg:w="1"/><text x="22.0962%" y="399.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.15%)</title><rect x="21.8462%" y="373" width="0.1538%" height="15" fill="rgb(248,129,10)" fg:x="142" fg:w="1"/><text x="22.0962%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.15%)</title><rect x="21.8462%" y="357" width="0.1538%" height="15" fill="rgb(231,114,21)" fg:x="142" fg:w="1"/><text x="22.0962%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.15%)</title><rect x="21.8462%" y="341" width="0.1538%" height="15" fill="rgb(238,209,2)" fg:x="142" fg:w="1"/><text x="22.0962%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.15%)</title><rect x="21.8462%" y="325" width="0.1538%" height="15" fill="rgb(253,135,41)" fg:x="142" fg:w="1"/><text x="22.0962%" y="335.50"></text></g><g><title>__rust_alloc (1 samples, 0.15%)</title><rect x="21.8462%" y="309" width="0.1538%" height="15" fill="rgb(243,191,43)" fg:x="142" fg:w="1"/><text x="22.0962%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (2 samples, 0.31%)</title><rect x="22.0000%" y="373" width="0.3077%" height="15" fill="rgb(241,79,3)" fg:x="143" fg:w="2"/><text x="22.2500%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::shrink_to_fit (2 samples, 0.31%)</title><rect x="22.0000%" y="357" width="0.3077%" height="15" fill="rgb(242,210,14)" fg:x="143" fg:w="2"/><text x="22.2500%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::shrink_to_fit (2 samples, 0.31%)</title><rect x="22.0000%" y="341" width="0.3077%" height="15" fill="rgb(226,51,15)" fg:x="143" fg:w="2"/><text x="22.2500%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::shrink (2 samples, 0.31%)</title><rect x="22.0000%" y="325" width="0.3077%" height="15" fill="rgb(220,229,0)" fg:x="143" fg:w="2"/><text x="22.2500%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::shrink (2 samples, 0.31%)</title><rect x="22.0000%" y="309" width="0.3077%" height="15" fill="rgb(225,20,48)" fg:x="143" fg:w="2"/><text x="22.2500%" y="319.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.31%)</title><rect x="22.0000%" y="293" width="0.3077%" height="15" fill="rgb(254,47,34)" fg:x="143" fg:w="2"/><text x="22.2500%" y="303.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.31%)</title><rect x="22.0000%" y="277" width="0.3077%" height="15" fill="rgb(254,73,4)" fg:x="143" fg:w="2"/><text x="22.2500%" y="287.50"></text></g><g><title>regex_syntax::hir::translate::TranslatorI::pop_concat_expr (5 samples, 0.77%)</title><rect x="21.6923%" y="437" width="0.7692%" height="15" fill="rgb(213,98,0)" fg:x="141" fg:w="5"/><text x="21.9423%" y="447.50"></text></g><g><title>regex_syntax::hir::Hir::literal (4 samples, 0.62%)</title><rect x="21.8462%" y="421" width="0.6154%" height="15" fill="rgb(248,43,17)" fg:x="142" fg:w="4"/><text x="22.0962%" y="431.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.46%)</title><rect x="22.0000%" y="405" width="0.4615%" height="15" fill="rgb(249,58,20)" fg:x="143" fg:w="3"/><text x="22.2500%" y="415.50"></text></g><g><title>alloc::vec::&lt;impl core::convert::From&lt;alloc::vec::Vec&lt;T,A&gt;&gt; for alloc::boxed::Box&lt;[T],A&gt;&gt;::from (3 samples, 0.46%)</title><rect x="22.0000%" y="389" width="0.4615%" height="15" fill="rgb(222,176,43)" fg:x="143" fg:w="3"/><text x="22.2500%" y="399.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="22.4615%" y="293" width="0.1538%" height="15" fill="rgb(222,219,51)" fg:x="146" fg:w="1"/><text x="22.7115%" y="303.50"></text></g><g><title>regex_syntax::hir::translate::TranslatorI::hir_capture (2 samples, 0.31%)</title><rect x="22.4615%" y="437" width="0.3077%" height="15" fill="rgb(220,63,4)" fg:x="146" fg:w="2"/><text x="22.7115%" y="447.50"></text></g><g><title>regex_syntax::hir::Hir::capture (2 samples, 0.31%)</title><rect x="22.4615%" y="421" width="0.3077%" height="15" fill="rgb(205,88,31)" fg:x="146" fg:w="2"/><text x="22.7115%" y="431.50"></text></g><g><title>regex_syntax::hir::Properties::capture (2 samples, 0.31%)</title><rect x="22.4615%" y="405" width="0.3077%" height="15" fill="rgb(230,202,9)" fg:x="146" fg:w="2"/><text x="22.7115%" y="415.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.31%)</title><rect x="22.4615%" y="389" width="0.3077%" height="15" fill="rgb(209,114,30)" fg:x="146" fg:w="2"/><text x="22.7115%" y="399.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.31%)</title><rect x="22.4615%" y="373" width="0.3077%" height="15" fill="rgb(248,129,10)" fg:x="146" fg:w="2"/><text x="22.7115%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.31%)</title><rect x="22.4615%" y="357" width="0.3077%" height="15" fill="rgb(231,114,21)" fg:x="146" fg:w="2"/><text x="22.7115%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.31%)</title><rect x="22.4615%" y="341" width="0.3077%" height="15" fill="rgb(238,209,2)" fg:x="146" fg:w="2"/><text x="22.7115%" y="351.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.31%)</title><rect x="22.4615%" y="325" width="0.3077%" height="15" fill="rgb(253,135,41)" fg:x="146" fg:w="2"/><text x="22.7115%" y="335.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.31%)</title><rect x="22.4615%" y="309" width="0.3077%" height="15" fill="rgb(206,112,53)" fg:x="146" fg:w="2"/><text x="22.7115%" y="319.50"></text></g><g><title>regex_syntax::hir::translate::TranslatorI::case_fold_char (1 samples, 0.15%)</title><rect x="22.7692%" y="437" width="0.1538%" height="15" fill="rgb(240,41,22)" fg:x="148" fg:w="1"/><text x="23.0192%" y="447.50"></text></g><g><title>regex_syntax::hir::Hir::class (1 samples, 0.15%)</title><rect x="22.7692%" y="421" width="0.1538%" height="15" fill="rgb(241,125,31)" fg:x="148" fg:w="1"/><text x="23.0192%" y="431.50"></text></g><g><title>regex_syntax::hir::Class::is_empty (1 samples, 0.15%)</title><rect x="22.7692%" y="405" width="0.1538%" height="15" fill="rgb(242,85,37)" fg:x="148" fg:w="1"/><text x="23.0192%" y="415.50"></text></g><g><title>regex_syntax::hir::Properties::literal (1 samples, 0.15%)</title><rect x="22.9231%" y="405" width="0.1538%" height="15" fill="rgb(224,191,39)" fg:x="149" fg:w="1"/><text x="23.1731%" y="415.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.15%)</title><rect x="22.9231%" y="389" width="0.1538%" height="15" fill="rgb(248,147,30)" fg:x="149" fg:w="1"/><text x="23.1731%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (1 samples, 0.15%)</title><rect x="23.0769%" y="373" width="0.1538%" height="15" fill="rgb(241,79,3)" fg:x="150" fg:w="1"/><text x="23.3269%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::shrink_to_fit (1 samples, 0.15%)</title><rect x="23.0769%" y="357" width="0.1538%" height="15" fill="rgb(242,210,14)" fg:x="150" fg:w="1"/><text x="23.3269%" y="367.50"></text></g><g><title>regex_syntax::hir::Hir::literal (5 samples, 0.77%)</title><rect x="22.9231%" y="421" width="0.7692%" height="15" fill="rgb(248,43,17)" fg:x="149" fg:w="5"/><text x="23.1731%" y="431.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (4 samples, 0.62%)</title><rect x="23.0769%" y="405" width="0.6154%" height="15" fill="rgb(249,58,20)" fg:x="150" fg:w="4"/><text x="23.3269%" y="415.50"></text></g><g><title>alloc::vec::&lt;impl core::convert::From&lt;alloc::vec::Vec&lt;T,A&gt;&gt; for alloc::boxed::Box&lt;[T],A&gt;&gt;::from (4 samples, 0.62%)</title><rect x="23.0769%" y="389" width="0.6154%" height="15" fill="rgb(222,176,43)" fg:x="150" fg:w="4"/><text x="23.3269%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="23.6923%" y="277" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="154" fg:w="1"/><text x="23.9423%" y="287.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="23.6923%" y="261" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="154" fg:w="1"/><text x="23.9423%" y="271.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="23.6923%" y="245" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="154" fg:w="1"/><text x="23.9423%" y="255.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="23.6923%" y="229" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="154" fg:w="1"/><text x="23.9423%" y="239.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="23.6923%" y="213" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="154" fg:w="1"/><text x="23.9423%" y="223.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="23.6923%" y="197" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="154" fg:w="1"/><text x="23.9423%" y="207.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="23.6923%" y="181" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="154" fg:w="1"/><text x="23.9423%" y="191.50"></text></g><g><title>_int_malloc (2 samples, 0.31%)</title><rect x="23.6923%" y="293" width="0.3077%" height="15" fill="rgb(222,219,51)" fg:x="154" fg:w="2"/><text x="23.9423%" y="303.50"></text></g><g><title>alloc::alloc::exchange_malloc (4 samples, 0.62%)</title><rect x="23.6923%" y="373" width="0.6154%" height="15" fill="rgb(248,129,10)" fg:x="154" fg:w="4"/><text x="23.9423%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.62%)</title><rect x="23.6923%" y="357" width="0.6154%" height="15" fill="rgb(231,114,21)" fg:x="154" fg:w="4"/><text x="23.9423%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.62%)</title><rect x="23.6923%" y="341" width="0.6154%" height="15" fill="rgb(238,209,2)" fg:x="154" fg:w="4"/><text x="23.9423%" y="351.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.62%)</title><rect x="23.6923%" y="325" width="0.6154%" height="15" fill="rgb(253,135,41)" fg:x="154" fg:w="4"/><text x="23.9423%" y="335.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.62%)</title><rect x="23.6923%" y="309" width="0.6154%" height="15" fill="rgb(206,112,53)" fg:x="154" fg:w="4"/><text x="23.9423%" y="319.50"></text></g><g><title>regex_syntax::hir::Properties::empty (5 samples, 0.77%)</title><rect x="23.6923%" y="405" width="0.7692%" height="15" fill="rgb(222,71,35)" fg:x="154" fg:w="5"/><text x="23.9423%" y="415.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (5 samples, 0.77%)</title><rect x="23.6923%" y="389" width="0.7692%" height="15" fill="rgb(209,114,30)" fg:x="154" fg:w="5"/><text x="23.9423%" y="399.50"></text></g><g><title>regex_syntax::hir::Hir::into_parts (7 samples, 1.08%)</title><rect x="23.6923%" y="421" width="1.0769%" height="15" fill="rgb(217,98,50)" fg:x="154" fg:w="7"/><text x="23.9423%" y="431.50"></text></g><g><title>core::mem::replace (2 samples, 0.31%)</title><rect x="24.4615%" y="405" width="0.3077%" height="15" fill="rgb(240,40,18)" fg:x="159" fg:w="2"/><text x="24.7115%" y="415.50"></text></g><g><title>core::ptr::read (2 samples, 0.31%)</title><rect x="24.4615%" y="389" width="0.3077%" height="15" fill="rgb(222,157,29)" fg:x="159" fg:w="2"/><text x="24.7115%" y="399.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (2 samples, 0.31%)</title><rect x="24.4615%" y="373" width="0.3077%" height="15" fill="rgb(234,151,54)" fg:x="159" fg:w="2"/><text x="24.7115%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::hir::Properties&gt; (1 samples, 0.15%)</title><rect x="24.7692%" y="421" width="0.1538%" height="15" fill="rgb(249,111,12)" fg:x="161" fg:w="1"/><text x="25.0192%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;regex_syntax::hir::PropertiesI&gt;&gt; (1 samples, 0.15%)</title><rect x="24.7692%" y="405" width="0.1538%" height="15" fill="rgb(237,14,7)" fg:x="161" fg:w="1"/><text x="25.0192%" y="415.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.15%)</title><rect x="24.7692%" y="389" width="0.1538%" height="15" fill="rgb(241,6,19)" fg:x="161" fg:w="1"/><text x="25.0192%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.15%)</title><rect x="24.7692%" y="373" width="0.1538%" height="15" fill="rgb(238,77,31)" fg:x="161" fg:w="1"/><text x="25.0192%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.15%)</title><rect x="24.7692%" y="357" width="0.1538%" height="15" fill="rgb(227,15,28)" fg:x="161" fg:w="1"/><text x="25.0192%" y="367.50"></text></g><g><title>__GI___libc_free (1 samples, 0.15%)</title><rect x="24.7692%" y="341" width="0.1538%" height="15" fill="rgb(247,8,17)" fg:x="161" fg:w="1"/><text x="25.0192%" y="351.50"></text></g><g><title>_int_free (1 samples, 0.15%)</title><rect x="24.7692%" y="325" width="0.1538%" height="15" fill="rgb(221,113,48)" fg:x="161" fg:w="1"/><text x="25.0192%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_syntax::hir::Hir&gt;&gt; (1 samples, 0.15%)</title><rect x="24.9231%" y="421" width="0.1538%" height="15" fill="rgb(206,118,12)" fg:x="162" fg:w="1"/><text x="25.1731%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;regex_syntax::hir::Hir&gt;&gt; (1 samples, 0.15%)</title><rect x="24.9231%" y="405" width="0.1538%" height="15" fill="rgb(244,42,48)" fg:x="162" fg:w="1"/><text x="25.1731%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="24.9231%" y="389" width="0.1538%" height="15" fill="rgb(213,128,22)" fg:x="162" fg:w="1"/><text x="25.1731%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.15%)</title><rect x="24.9231%" y="373" width="0.1538%" height="15" fill="rgb(238,77,31)" fg:x="162" fg:w="1"/><text x="25.1731%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.15%)</title><rect x="24.9231%" y="357" width="0.1538%" height="15" fill="rgb(227,15,28)" fg:x="162" fg:w="1"/><text x="25.1731%" y="367.50"></text></g><g><title>__GI___libc_free (1 samples, 0.15%)</title><rect x="24.9231%" y="341" width="0.1538%" height="15" fill="rgb(247,8,17)" fg:x="162" fg:w="1"/><text x="25.1731%" y="351.50"></text></g><g><title>_int_free (1 samples, 0.15%)</title><rect x="24.9231%" y="325" width="0.1538%" height="15" fill="rgb(221,113,48)" fg:x="162" fg:w="1"/><text x="25.1731%" y="335.50"></text></g><g><title>__GI___libc_free (3 samples, 0.46%)</title><rect x="25.0769%" y="357" width="0.4615%" height="15" fill="rgb(247,8,17)" fg:x="163" fg:w="3"/><text x="25.3269%" y="367.50"></text></g><g><title>_int_free (3 samples, 0.46%)</title><rect x="25.0769%" y="341" width="0.4615%" height="15" fill="rgb(221,113,48)" fg:x="163" fg:w="3"/><text x="25.3269%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[u8]&gt;&gt; (4 samples, 0.62%)</title><rect x="25.0769%" y="421" width="0.6154%" height="15" fill="rgb(219,194,9)" fg:x="163" fg:w="4"/><text x="25.3269%" y="431.50"></text></g><g><title>alloc::alloc::box_free (4 samples, 0.62%)</title><rect x="25.0769%" y="405" width="0.6154%" height="15" fill="rgb(241,6,19)" fg:x="163" fg:w="4"/><text x="25.3269%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.62%)</title><rect x="25.0769%" y="389" width="0.6154%" height="15" fill="rgb(238,77,31)" fg:x="163" fg:w="4"/><text x="25.3269%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.62%)</title><rect x="25.0769%" y="373" width="0.6154%" height="15" fill="rgb(227,15,28)" fg:x="163" fg:w="4"/><text x="25.3269%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.15%)</title><rect x="25.6923%" y="421" width="0.1538%" height="15" fill="rgb(212,186,21)" fg:x="167" fg:w="1"/><text x="25.9423%" y="431.50"></text></g><g><title>core::ptr::write (1 samples, 0.15%)</title><rect x="25.8462%" y="405" width="0.1538%" height="15" fill="rgb(209,143,44)" fg:x="168" fg:w="1"/><text x="26.0962%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.31%)</title><rect x="25.8462%" y="421" width="0.3077%" height="15" fill="rgb(241,229,15)" fg:x="168" fg:w="2"/><text x="26.0962%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.15%)</title><rect x="26.0000%" y="405" width="0.1538%" height="15" fill="rgb(248,74,39)" fg:x="169" fg:w="1"/><text x="26.2500%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.15%)</title><rect x="26.0000%" y="389" width="0.1538%" height="15" fill="rgb(239,196,40)" fg:x="169" fg:w="1"/><text x="26.2500%" y="399.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="26.1538%" y="245" width="0.1538%" height="15" fill="rgb(222,219,51)" fg:x="170" fg:w="1"/><text x="26.4038%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.31%)</title><rect x="26.1538%" y="421" width="0.3077%" height="15" fill="rgb(209,26,30)" fg:x="170" fg:w="2"/><text x="26.4038%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.31%)</title><rect x="26.1538%" y="405" width="0.3077%" height="15" fill="rgb(229,121,46)" fg:x="170" fg:w="2"/><text x="26.4038%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.31%)</title><rect x="26.1538%" y="389" width="0.3077%" height="15" fill="rgb(221,172,50)" fg:x="170" fg:w="2"/><text x="26.4038%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.31%)</title><rect x="26.1538%" y="373" width="0.3077%" height="15" fill="rgb(216,42,52)" fg:x="170" fg:w="2"/><text x="26.4038%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.31%)</title><rect x="26.1538%" y="357" width="0.3077%" height="15" fill="rgb(249,207,12)" fg:x="170" fg:w="2"/><text x="26.4038%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.31%)</title><rect x="26.1538%" y="341" width="0.3077%" height="15" fill="rgb(224,194,14)" fg:x="170" fg:w="2"/><text x="26.4038%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.31%)</title><rect x="26.1538%" y="325" width="0.3077%" height="15" fill="rgb(227,204,5)" fg:x="170" fg:w="2"/><text x="26.4038%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.31%)</title><rect x="26.1538%" y="309" width="0.3077%" height="15" fill="rgb(231,114,21)" fg:x="170" fg:w="2"/><text x="26.4038%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.31%)</title><rect x="26.1538%" y="293" width="0.3077%" height="15" fill="rgb(238,209,2)" fg:x="170" fg:w="2"/><text x="26.4038%" y="303.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.31%)</title><rect x="26.1538%" y="277" width="0.3077%" height="15" fill="rgb(253,135,41)" fg:x="170" fg:w="2"/><text x="26.4038%" y="287.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.31%)</title><rect x="26.1538%" y="261" width="0.3077%" height="15" fill="rgb(206,112,53)" fg:x="170" fg:w="2"/><text x="26.4038%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.15%)</title><rect x="26.4615%" y="421" width="0.1538%" height="15" fill="rgb(237,3,50)" fg:x="172" fg:w="1"/><text x="26.7115%" y="431.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (1 samples, 0.15%)</title><rect x="26.4615%" y="405" width="0.1538%" height="15" fill="rgb(243,112,13)" fg:x="172" fg:w="1"/><text x="26.7115%" y="415.50"></text></g><g><title>regex_syntax::hir::Hir::concat (26 samples, 4.00%)</title><rect x="22.9231%" y="437" width="4.0000%" height="15" fill="rgb(228,76,42)" fg:x="149" fg:w="26"/><text x="23.1731%" y="447.50">rege..</text></g><g><title>regex_syntax::hir::Properties::is_utf8 (1 samples, 0.15%)</title><rect x="26.9231%" y="389" width="0.1538%" height="15" fill="rgb(227,229,15)" fg:x="175" fg:w="1"/><text x="27.1731%" y="399.50"></text></g><g><title>regex_syntax::hir::Properties::alternation (2 samples, 0.31%)</title><rect x="26.9231%" y="421" width="0.3077%" height="15" fill="rgb(214,136,5)" fg:x="175" fg:w="2"/><text x="27.1731%" y="431.50"></text></g><g><title>regex_syntax::hir::Properties::union (2 samples, 0.31%)</title><rect x="26.9231%" y="405" width="0.3077%" height="15" fill="rgb(229,61,24)" fg:x="175" fg:w="2"/><text x="27.1731%" y="415.50"></text></g><g><title>regex_syntax::hir::Hir::into_parts (1 samples, 0.15%)</title><rect x="27.2308%" y="421" width="0.1538%" height="15" fill="rgb(217,98,50)" fg:x="177" fg:w="1"/><text x="27.4808%" y="431.50"></text></g><g><title>core::mem::replace (1 samples, 0.15%)</title><rect x="27.2308%" y="405" width="0.1538%" height="15" fill="rgb(240,40,18)" fg:x="177" fg:w="1"/><text x="27.4808%" y="415.50"></text></g><g><title>core::ptr::write (1 samples, 0.15%)</title><rect x="27.2308%" y="389" width="0.1538%" height="15" fill="rgb(209,143,44)" fg:x="177" fg:w="1"/><text x="27.4808%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="27.3846%" y="389" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="178" fg:w="1"/><text x="27.6346%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="27.3846%" y="373" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="178" fg:w="1"/><text x="27.6346%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="27.3846%" y="357" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="178" fg:w="1"/><text x="27.6346%" y="367.50"></text></g><g><title>regex_syntax::hir::Hir::alternation (7 samples, 1.08%)</title><rect x="26.9231%" y="437" width="1.0769%" height="15" fill="rgb(206,114,23)" fg:x="175" fg:w="7"/><text x="27.1731%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.62%)</title><rect x="27.3846%" y="421" width="0.6154%" height="15" fill="rgb(241,229,15)" fg:x="178" fg:w="4"/><text x="27.6346%" y="431.50"></text></g><g><title>core::ptr::write (4 samples, 0.62%)</title><rect x="27.3846%" y="405" width="0.6154%" height="15" fill="rgb(209,143,44)" fg:x="178" fg:w="4"/><text x="27.6346%" y="415.50"></text></g><g><title>core::ptr::write (1 samples, 0.15%)</title><rect x="28.0000%" y="421" width="0.1538%" height="15" fill="rgb(209,143,44)" fg:x="182" fg:w="1"/><text x="28.2500%" y="431.50"></text></g><g><title>_int_malloc (2 samples, 0.31%)</title><rect x="28.1538%" y="293" width="0.3077%" height="15" fill="rgb(222,219,51)" fg:x="183" fg:w="2"/><text x="28.4038%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.62%)</title><rect x="28.0000%" y="437" width="0.6154%" height="15" fill="rgb(241,229,15)" fg:x="182" fg:w="4"/><text x="28.2500%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.46%)</title><rect x="28.1538%" y="421" width="0.4615%" height="15" fill="rgb(254,103,39)" fg:x="183" fg:w="3"/><text x="28.4038%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.46%)</title><rect x="28.1538%" y="405" width="0.4615%" height="15" fill="rgb(254,53,35)" fg:x="183" fg:w="3"/><text x="28.4038%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.46%)</title><rect x="28.1538%" y="389" width="0.4615%" height="15" fill="rgb(237,133,22)" fg:x="183" fg:w="3"/><text x="28.4038%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.46%)</title><rect x="28.1538%" y="373" width="0.4615%" height="15" fill="rgb(237,156,49)" fg:x="183" fg:w="3"/><text x="28.4038%" y="383.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.46%)</title><rect x="28.1538%" y="357" width="0.4615%" height="15" fill="rgb(214,150,36)" fg:x="183" fg:w="3"/><text x="28.4038%" y="367.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.46%)</title><rect x="28.1538%" y="341" width="0.4615%" height="15" fill="rgb(254,47,34)" fg:x="183" fg:w="3"/><text x="28.4038%" y="351.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.46%)</title><rect x="28.1538%" y="325" width="0.4615%" height="15" fill="rgb(254,73,4)" fg:x="183" fg:w="3"/><text x="28.4038%" y="335.50"></text></g><g><title>_int_realloc (3 samples, 0.46%)</title><rect x="28.1538%" y="309" width="0.4615%" height="15" fill="rgb(231,75,41)" fg:x="183" fg:w="3"/><text x="28.4038%" y="319.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.15%)</title><rect x="28.4615%" y="293" width="0.1538%" height="15" fill="rgb(217,126,36)" fg:x="185" fg:w="1"/><text x="28.7115%" y="303.50"></text></g><g><title>&lt;regex_syntax::hir::translate::TranslatorI as regex_syntax::ast::visitor::Visitor&gt;::visit_post (57 samples, 8.77%)</title><rect x="20.4615%" y="453" width="8.7692%" height="15" fill="rgb(207,12,29)" fg:x="133" fg:w="57"/><text x="20.7115%" y="463.50">&lt;regex_synta..</text></g><g><title>&lt;regex_syntax::hir::translate::TranslatorI as regex_syntax::ast::visitor::Visitor&gt;::visit_alternation_in (1 samples, 0.15%)</title><rect x="29.2308%" y="453" width="0.1538%" height="15" fill="rgb(208,41,30)" fg:x="190" fg:w="1"/><text x="29.4808%" y="463.50"></text></g><g><title>regex_syntax::hir::translate::TranslatorI::push (1 samples, 0.15%)</title><rect x="29.2308%" y="437" width="0.1538%" height="15" fill="rgb(222,136,12)" fg:x="190" fg:w="1"/><text x="29.4808%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.15%)</title><rect x="29.2308%" y="421" width="0.1538%" height="15" fill="rgb(241,229,15)" fg:x="190" fg:w="1"/><text x="29.4808%" y="431.50"></text></g><g><title>core::ptr::write (1 samples, 0.15%)</title><rect x="29.2308%" y="405" width="0.1538%" height="15" fill="rgb(209,143,44)" fg:x="190" fg:w="1"/><text x="29.4808%" y="415.50"></text></g><g><title>regex_syntax::hir::translate::Translator::translate (64 samples, 9.85%)</title><rect x="19.6923%" y="501" width="9.8462%" height="15" fill="rgb(212,73,14)" fg:x="128" fg:w="64"/><text x="19.9423%" y="511.50">regex_syntax::..</text></g><g><title>regex_syntax::ast::visitor::visit (64 samples, 9.85%)</title><rect x="19.6923%" y="485" width="9.8462%" height="15" fill="rgb(209,184,21)" fg:x="128" fg:w="64"/><text x="19.9423%" y="495.50">regex_syntax::..</text></g><g><title>regex_syntax::ast::visitor::HeapVisitor::visit (64 samples, 9.85%)</title><rect x="19.6923%" y="469" width="9.8462%" height="15" fill="rgb(253,224,17)" fg:x="128" fg:w="64"/><text x="19.9423%" y="479.50">regex_syntax::..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.15%)</title><rect x="29.5385%" y="421" width="0.1538%" height="15" fill="rgb(241,229,15)" fg:x="192" fg:w="1"/><text x="29.7885%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.15%)</title><rect x="29.5385%" y="405" width="0.1538%" height="15" fill="rgb(254,103,39)" fg:x="192" fg:w="1"/><text x="29.7885%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.15%)</title><rect x="29.5385%" y="389" width="0.1538%" height="15" fill="rgb(254,53,35)" fg:x="192" fg:w="1"/><text x="29.7885%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.15%)</title><rect x="29.5385%" y="373" width="0.1538%" height="15" fill="rgb(237,133,22)" fg:x="192" fg:w="1"/><text x="29.7885%" y="383.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="29.5385%" y="357" width="0.1538%" height="15" fill="rgb(206,112,53)" fg:x="192" fg:w="1"/><text x="29.7885%" y="367.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="29.5385%" y="341" width="0.1538%" height="15" fill="rgb(222,219,51)" fg:x="192" fg:w="1"/><text x="29.7885%" y="351.50"></text></g><g><title>regex_syntax::ast::visitor::visit (4 samples, 0.62%)</title><rect x="29.5385%" y="453" width="0.6154%" height="15" fill="rgb(209,184,21)" fg:x="192" fg:w="4"/><text x="29.7885%" y="463.50"></text></g><g><title>regex_syntax::ast::visitor::HeapVisitor::visit (4 samples, 0.62%)</title><rect x="29.5385%" y="437" width="0.6154%" height="15" fill="rgb(253,224,17)" fg:x="192" fg:w="4"/><text x="29.7885%" y="447.50"></text></g><g><title>&lt;regex_syntax::ast::parse::NestLimiter&lt;P&gt; as regex_syntax::ast::visitor::Visitor&gt;::visit_pre (3 samples, 0.46%)</title><rect x="29.6923%" y="421" width="0.4615%" height="15" fill="rgb(220,157,37)" fg:x="193" fg:w="3"/><text x="29.9423%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.77%)</title><rect x="30.1538%" y="389" width="0.7692%" height="15" fill="rgb(231,114,21)" fg:x="196" fg:w="5"/><text x="30.4038%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.77%)</title><rect x="30.1538%" y="373" width="0.7692%" height="15" fill="rgb(238,209,2)" fg:x="196" fg:w="5"/><text x="30.4038%" y="383.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.77%)</title><rect x="30.1538%" y="357" width="0.7692%" height="15" fill="rgb(253,135,41)" fg:x="196" fg:w="5"/><text x="30.4038%" y="367.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.77%)</title><rect x="30.1538%" y="341" width="0.7692%" height="15" fill="rgb(206,112,53)" fg:x="196" fg:w="5"/><text x="30.4038%" y="351.50"></text></g><g><title>alloc::alloc::exchange_malloc (6 samples, 0.92%)</title><rect x="30.1538%" y="405" width="0.9231%" height="15" fill="rgb(248,129,10)" fg:x="196" fg:w="6"/><text x="30.4038%" y="415.50"></text></g><g><title>regex_syntax::ast::Ast::literal (7 samples, 1.08%)</title><rect x="30.1538%" y="437" width="1.0769%" height="15" fill="rgb(212,66,23)" fg:x="196" fg:w="7"/><text x="30.4038%" y="447.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (7 samples, 1.08%)</title><rect x="30.1538%" y="421" width="1.0769%" height="15" fill="rgb(209,114,30)" fg:x="196" fg:w="7"/><text x="30.4038%" y="431.50"></text></g><g><title>regex_syntax::ast::parse::Primitive::into_ast (8 samples, 1.23%)</title><rect x="30.1538%" y="453" width="1.2308%" height="15" fill="rgb(225,212,2)" fg:x="196" fg:w="8"/><text x="30.4038%" y="463.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::push_group (2 samples, 0.31%)</title><rect x="31.3846%" y="453" width="0.3077%" height="15" fill="rgb(218,85,47)" fg:x="204" fg:w="2"/><text x="31.6346%" y="463.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_group (2 samples, 0.31%)</title><rect x="31.3846%" y="437" width="0.3077%" height="15" fill="rgb(237,110,47)" fg:x="204" fg:w="2"/><text x="31.6346%" y="447.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_capture_name (2 samples, 0.31%)</title><rect x="31.3846%" y="421" width="0.3077%" height="15" fill="rgb(241,170,13)" fg:x="204" fg:w="2"/><text x="31.6346%" y="431.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::bump (2 samples, 0.31%)</title><rect x="31.3846%" y="405" width="0.3077%" height="15" fill="rgb(207,165,29)" fg:x="204" fg:w="2"/><text x="31.6346%" y="415.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::char (2 samples, 0.31%)</title><rect x="31.3846%" y="389" width="0.3077%" height="15" fill="rgb(206,73,47)" fg:x="204" fg:w="2"/><text x="31.6346%" y="399.50"></text></g><g><title>tcache_put (1 samples, 0.15%)</title><rect x="31.6923%" y="277" width="0.1538%" height="15" fill="rgb(227,177,28)" fg:x="206" fg:w="1"/><text x="31.9423%" y="287.50"></text></g><g><title>regex_syntax::ast::Ast::concat (2 samples, 0.31%)</title><rect x="31.6923%" y="405" width="0.3077%" height="15" fill="rgb(251,13,11)" fg:x="206" fg:w="2"/><text x="31.9423%" y="415.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.31%)</title><rect x="31.6923%" y="389" width="0.3077%" height="15" fill="rgb(209,114,30)" fg:x="206" fg:w="2"/><text x="31.9423%" y="399.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.31%)</title><rect x="31.6923%" y="373" width="0.3077%" height="15" fill="rgb(248,129,10)" fg:x="206" fg:w="2"/><text x="31.9423%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.31%)</title><rect x="31.6923%" y="357" width="0.3077%" height="15" fill="rgb(231,114,21)" fg:x="206" fg:w="2"/><text x="31.9423%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.31%)</title><rect x="31.6923%" y="341" width="0.3077%" height="15" fill="rgb(238,209,2)" fg:x="206" fg:w="2"/><text x="31.9423%" y="351.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.31%)</title><rect x="31.6923%" y="325" width="0.3077%" height="15" fill="rgb(253,135,41)" fg:x="206" fg:w="2"/><text x="31.9423%" y="335.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.31%)</title><rect x="31.6923%" y="309" width="0.3077%" height="15" fill="rgb(206,112,53)" fg:x="206" fg:w="2"/><text x="31.9423%" y="319.50"></text></g><g><title>_int_malloc (2 samples, 0.31%)</title><rect x="31.6923%" y="293" width="0.3077%" height="15" fill="rgb(222,219,51)" fg:x="206" fg:w="2"/><text x="31.9423%" y="303.50"></text></g><g><title>regex_syntax::ast::Concat::into_ast (3 samples, 0.46%)</title><rect x="31.6923%" y="421" width="0.4615%" height="15" fill="rgb(210,199,15)" fg:x="206" fg:w="3"/><text x="31.9423%" y="431.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::push_or_add_alternation (4 samples, 0.62%)</title><rect x="31.6923%" y="437" width="0.6154%" height="15" fill="rgb(210,56,29)" fg:x="206" fg:w="4"/><text x="31.9423%" y="447.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::bump (1 samples, 0.15%)</title><rect x="32.3077%" y="437" width="0.1538%" height="15" fill="rgb(207,165,29)" fg:x="210" fg:w="1"/><text x="32.5577%" y="447.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::is_eof (1 samples, 0.15%)</title><rect x="32.3077%" y="421" width="0.1538%" height="15" fill="rgb(215,65,50)" fg:x="210" fg:w="1"/><text x="32.5577%" y="431.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::push_alternate (8 samples, 1.23%)</title><rect x="31.6923%" y="453" width="1.2308%" height="15" fill="rgb(224,168,6)" fg:x="206" fg:w="8"/><text x="31.9423%" y="463.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::pop_group (1 samples, 0.15%)</title><rect x="32.9231%" y="453" width="0.1538%" height="15" fill="rgb(241,166,1)" fg:x="214" fg:w="1"/><text x="33.1731%" y="463.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.15%)</title><rect x="32.9231%" y="437" width="0.1538%" height="15" fill="rgb(217,126,36)" fg:x="214" fg:w="1"/><text x="33.1731%" y="447.50"></text></g><g><title>core::ptr::write (1 samples, 0.15%)</title><rect x="33.0769%" y="405" width="0.1538%" height="15" fill="rgb(209,143,44)" fg:x="215" fg:w="1"/><text x="33.3269%" y="415.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.15%)</title><rect x="33.0769%" y="389" width="0.1538%" height="15" fill="rgb(217,126,36)" fg:x="215" fg:w="1"/><text x="33.3269%" y="399.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::push_class_open (2 samples, 0.31%)</title><rect x="33.0769%" y="437" width="0.3077%" height="15" fill="rgb(208,186,32)" fg:x="215" fg:w="2"/><text x="33.3269%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.31%)</title><rect x="33.0769%" y="421" width="0.3077%" height="15" fill="rgb(241,229,15)" fg:x="215" fg:w="2"/><text x="33.3269%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.15%)</title><rect x="33.2308%" y="405" width="0.1538%" height="15" fill="rgb(254,103,39)" fg:x="216" fg:w="1"/><text x="33.4808%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.15%)</title><rect x="33.2308%" y="389" width="0.1538%" height="15" fill="rgb(254,53,35)" fg:x="216" fg:w="1"/><text x="33.4808%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.15%)</title><rect x="33.2308%" y="373" width="0.1538%" height="15" fill="rgb(237,133,22)" fg:x="216" fg:w="1"/><text x="33.4808%" y="383.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="33.2308%" y="357" width="0.1538%" height="15" fill="rgb(206,112,53)" fg:x="216" fg:w="1"/><text x="33.4808%" y="367.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="33.2308%" y="341" width="0.1538%" height="15" fill="rgb(222,219,51)" fg:x="216" fg:w="1"/><text x="33.4808%" y="351.50"></text></g><g><title>malloc_consolidate (1 samples, 0.15%)</title><rect x="33.2308%" y="325" width="0.1538%" height="15" fill="rgb(228,194,39)" fg:x="216" fg:w="1"/><text x="33.4808%" y="335.50"></text></g><g><title>regex_syntax::ast::ClassSetUnion::push (1 samples, 0.15%)</title><rect x="33.3846%" y="421" width="0.1538%" height="15" fill="rgb(213,104,13)" fg:x="217" fg:w="1"/><text x="33.6346%" y="431.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::pop_class (2 samples, 0.31%)</title><rect x="33.3846%" y="437" width="0.3077%" height="15" fill="rgb(251,70,0)" fg:x="217" fg:w="2"/><text x="33.6346%" y="447.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.15%)</title><rect x="33.5385%" y="421" width="0.1538%" height="15" fill="rgb(217,126,36)" fg:x="218" fg:w="1"/><text x="33.7885%" y="431.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_set_class (5 samples, 0.77%)</title><rect x="33.0769%" y="453" width="0.7692%" height="15" fill="rgb(248,118,21)" fg:x="215" fg:w="5"/><text x="33.3269%" y="463.50"></text></g><g><title>regex_syntax::ast::ClassSetUnion::push (1 samples, 0.15%)</title><rect x="33.6923%" y="437" width="0.1538%" height="15" fill="rgb(213,104,13)" fg:x="219" fg:w="1"/><text x="33.9423%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.15%)</title><rect x="33.6923%" y="421" width="0.1538%" height="15" fill="rgb(241,229,15)" fg:x="219" fg:w="1"/><text x="33.9423%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.15%)</title><rect x="33.6923%" y="405" width="0.1538%" height="15" fill="rgb(254,103,39)" fg:x="219" fg:w="1"/><text x="33.9423%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.15%)</title><rect x="33.6923%" y="389" width="0.1538%" height="15" fill="rgb(254,53,35)" fg:x="219" fg:w="1"/><text x="33.9423%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.15%)</title><rect x="33.6923%" y="373" width="0.1538%" height="15" fill="rgb(237,133,22)" fg:x="219" fg:w="1"/><text x="33.9423%" y="383.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::span_char (1 samples, 0.15%)</title><rect x="33.8462%" y="437" width="0.1538%" height="15" fill="rgb(247,162,9)" fg:x="220" fg:w="1"/><text x="34.0962%" y="447.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::char (1 samples, 0.15%)</title><rect x="33.8462%" y="421" width="0.1538%" height="15" fill="rgb(206,73,47)" fg:x="220" fg:w="1"/><text x="34.0962%" y="431.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::char_at (1 samples, 0.15%)</title><rect x="33.8462%" y="405" width="0.1538%" height="15" fill="rgb(220,224,36)" fg:x="220" fg:w="1"/><text x="34.0962%" y="415.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="33.8462%" y="389" width="0.1538%" height="15" fill="rgb(242,166,4)" fg:x="220" fg:w="1"/><text x="34.0962%" y="399.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.15%)</title><rect x="33.8462%" y="373" width="0.1538%" height="15" fill="rgb(245,139,50)" fg:x="220" fg:w="1"/><text x="34.0962%" y="383.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="33.8462%" y="357" width="0.1538%" height="15" fill="rgb(236,210,2)" fg:x="220" fg:w="1"/><text x="34.0962%" y="367.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_primitive (6 samples, 0.92%)</title><rect x="33.8462%" y="453" width="0.9231%" height="15" fill="rgb(214,58,42)" fg:x="220" fg:w="6"/><text x="34.0962%" y="463.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_counted_repetition (1 samples, 0.15%)</title><rect x="34.7692%" y="453" width="0.1538%" height="15" fill="rgb(241,75,43)" fg:x="226" fg:w="1"/><text x="35.0192%" y="463.50"></text></g><g><title>regex_syntax::ast::parse::specialize_err (1 samples, 0.15%)</title><rect x="34.7692%" y="437" width="0.1538%" height="15" fill="rgb(216,216,41)" fg:x="226" fg:w="1"/><text x="35.0192%" y="447.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::char (1 samples, 0.15%)</title><rect x="34.9231%" y="453" width="0.1538%" height="15" fill="rgb(206,73,47)" fg:x="227" fg:w="1"/><text x="35.1731%" y="463.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::bump_space (1 samples, 0.15%)</title><rect x="35.0769%" y="453" width="0.1538%" height="15" fill="rgb(215,154,20)" fg:x="228" fg:w="1"/><text x="35.3269%" y="463.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="35.2308%" y="373" width="0.1538%" height="15" fill="rgb(222,219,51)" fg:x="229" fg:w="1"/><text x="35.4808%" y="383.50"></text></g><g><title>unlink_chunk (1 samples, 0.15%)</title><rect x="35.2308%" y="357" width="0.1538%" height="15" fill="rgb(223,20,30)" fg:x="229" fg:w="1"/><text x="35.4808%" y="367.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.31%)</title><rect x="35.2308%" y="389" width="0.3077%" height="15" fill="rgb(206,112,53)" fg:x="229" fg:w="2"/><text x="35.4808%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.15%)</title><rect x="35.5385%" y="389" width="0.1538%" height="15" fill="rgb(237,156,49)" fg:x="231" fg:w="1"/><text x="35.7885%" y="399.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.15%)</title><rect x="35.5385%" y="373" width="0.1538%" height="15" fill="rgb(214,150,36)" fg:x="231" fg:w="1"/><text x="35.7885%" y="383.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.15%)</title><rect x="35.5385%" y="357" width="0.1538%" height="15" fill="rgb(254,47,34)" fg:x="231" fg:w="1"/><text x="35.7885%" y="367.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.15%)</title><rect x="35.5385%" y="341" width="0.1538%" height="15" fill="rgb(254,73,4)" fg:x="231" fg:w="1"/><text x="35.7885%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.62%)</title><rect x="35.2308%" y="405" width="0.6154%" height="15" fill="rgb(237,133,22)" fg:x="229" fg:w="4"/><text x="35.4808%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.77%)</title><rect x="35.2308%" y="453" width="0.7692%" height="15" fill="rgb(241,229,15)" fg:x="229" fg:w="5"/><text x="35.4808%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (5 samples, 0.77%)</title><rect x="35.2308%" y="437" width="0.7692%" height="15" fill="rgb(254,103,39)" fg:x="229" fg:w="5"/><text x="35.4808%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.77%)</title><rect x="35.2308%" y="421" width="0.7692%" height="15" fill="rgb(254,53,35)" fg:x="229" fg:w="5"/><text x="35.4808%" y="431.50"></text></g><g><title>regex_syntax::ast::parse::Parser::parse (45 samples, 6.92%)</title><rect x="29.5385%" y="501" width="6.9231%" height="15" fill="rgb(225,142,35)" fg:x="192" fg:w="45"/><text x="29.7885%" y="511.50">regex_syn..</text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse (45 samples, 6.92%)</title><rect x="29.5385%" y="485" width="6.9231%" height="15" fill="rgb(254,60,41)" fg:x="192" fg:w="45"/><text x="29.7885%" y="495.50">regex_syn..</text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_with_comments (45 samples, 6.92%)</title><rect x="29.5385%" y="469" width="6.9231%" height="15" fill="rgb(223,9,23)" fg:x="192" fg:w="45"/><text x="29.7885%" y="479.50">regex_syn..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.46%)</title><rect x="36.0000%" y="453" width="0.4615%" height="15" fill="rgb(245,132,34)" fg:x="234" fg:w="3"/><text x="36.2500%" y="463.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (1 samples, 0.15%)</title><rect x="36.4615%" y="501" width="0.1538%" height="15" fill="rgb(250,142,30)" fg:x="237" fg:w="1"/><text x="36.7115%" y="511.50"></text></g><g><title>regex_automata::util::pool::Pool&lt;T,F&gt;::new (1 samples, 0.15%)</title><rect x="36.4615%" y="485" width="0.1538%" height="15" fill="rgb(219,204,23)" fg:x="237" fg:w="1"/><text x="36.7115%" y="495.50"></text></g><g><title>regex_automata::util::pool::inner::Pool&lt;T,F&gt;::new (1 samples, 0.15%)</title><rect x="36.4615%" y="469" width="0.1538%" height="15" fill="rgb(211,137,1)" fg:x="237" fg:w="1"/><text x="36.7115%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="36.4615%" y="453" width="0.1538%" height="15" fill="rgb(253,154,22)" fg:x="237" fg:w="1"/><text x="36.7115%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.15%)</title><rect x="36.4615%" y="437" width="0.1538%" height="15" fill="rgb(249,207,12)" fg:x="237" fg:w="1"/><text x="36.7115%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.15%)</title><rect x="36.4615%" y="421" width="0.1538%" height="15" fill="rgb(224,194,14)" fg:x="237" fg:w="1"/><text x="36.7115%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.15%)</title><rect x="36.4615%" y="405" width="0.1538%" height="15" fill="rgb(227,204,5)" fg:x="237" fg:w="1"/><text x="36.7115%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.15%)</title><rect x="36.4615%" y="389" width="0.1538%" height="15" fill="rgb(231,114,21)" fg:x="237" fg:w="1"/><text x="36.7115%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.15%)</title><rect x="36.4615%" y="373" width="0.1538%" height="15" fill="rgb(238,209,2)" fg:x="237" fg:w="1"/><text x="36.7115%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.15%)</title><rect x="36.4615%" y="357" width="0.1538%" height="15" fill="rgb(253,135,41)" fg:x="237" fg:w="1"/><text x="36.7115%" y="367.50"></text></g><g><title>__rdl_alloc (1 samples, 0.15%)</title><rect x="36.4615%" y="341" width="0.1538%" height="15" fill="rgb(241,201,43)" fg:x="237" fg:w="1"/><text x="36.7115%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.15%)</title><rect x="36.4615%" y="325" width="0.1538%" height="15" fill="rgb(221,138,53)" fg:x="237" fg:w="1"/><text x="36.7115%" y="335.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (1 samples, 0.15%)</title><rect x="36.4615%" y="309" width="0.1538%" height="15" fill="rgb(242,5,51)" fg:x="237" fg:w="1"/><text x="36.7115%" y="319.50"></text></g><g><title>__posix_memalign (1 samples, 0.15%)</title><rect x="36.4615%" y="293" width="0.1538%" height="15" fill="rgb(233,116,13)" fg:x="237" fg:w="1"/><text x="36.7115%" y="303.50"></text></g><g><title>__posix_memalign (1 samples, 0.15%)</title><rect x="36.4615%" y="277" width="0.1538%" height="15" fill="rgb(233,116,13)" fg:x="237" fg:w="1"/><text x="36.7115%" y="287.50"></text></g><g><title>_mid_memalign (1 samples, 0.15%)</title><rect x="36.4615%" y="261" width="0.1538%" height="15" fill="rgb(205,227,42)" fg:x="237" fg:w="1"/><text x="36.7115%" y="271.50"></text></g><g><title>_int_memalign (1 samples, 0.15%)</title><rect x="36.4615%" y="245" width="0.1538%" height="15" fill="rgb(210,120,21)" fg:x="237" fg:w="1"/><text x="36.7115%" y="255.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="36.4615%" y="229" width="0.1538%" height="15" fill="rgb(222,219,51)" fg:x="237" fg:w="1"/><text x="36.7115%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::hir::Hir&gt; (2 samples, 0.31%)</title><rect x="36.6154%" y="421" width="0.3077%" height="15" fill="rgb(244,216,7)" fg:x="238" fg:w="2"/><text x="36.8654%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::hir::Properties&gt; (2 samples, 0.31%)</title><rect x="36.6154%" y="405" width="0.3077%" height="15" fill="rgb(249,111,12)" fg:x="238" fg:w="2"/><text x="36.8654%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;regex_syntax::hir::PropertiesI&gt;&gt; (2 samples, 0.31%)</title><rect x="36.6154%" y="389" width="0.3077%" height="15" fill="rgb(237,14,7)" fg:x="238" fg:w="2"/><text x="36.8654%" y="399.50"></text></g><g><title>alloc::alloc::box_free (2 samples, 0.31%)</title><rect x="36.6154%" y="373" width="0.3077%" height="15" fill="rgb(241,6,19)" fg:x="238" fg:w="2"/><text x="36.8654%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.31%)</title><rect x="36.6154%" y="357" width="0.3077%" height="15" fill="rgb(238,77,31)" fg:x="238" fg:w="2"/><text x="36.8654%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.31%)</title><rect x="36.6154%" y="341" width="0.3077%" height="15" fill="rgb(227,15,28)" fg:x="238" fg:w="2"/><text x="36.8654%" y="351.50"></text></g><g><title>__GI___libc_free (2 samples, 0.31%)</title><rect x="36.6154%" y="325" width="0.3077%" height="15" fill="rgb(247,8,17)" fg:x="238" fg:w="2"/><text x="36.8654%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_syntax::hir::Hir&gt;&gt; (3 samples, 0.46%)</title><rect x="36.6154%" y="501" width="0.4615%" height="15" fill="rgb(206,118,12)" fg:x="238" fg:w="3"/><text x="36.8654%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.46%)</title><rect x="36.6154%" y="485" width="0.4615%" height="15" fill="rgb(249,14,2)" fg:x="238" fg:w="3"/><text x="36.8654%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[regex_syntax::hir::Hir]&gt; (3 samples, 0.46%)</title><rect x="36.6154%" y="469" width="0.4615%" height="15" fill="rgb(240,58,42)" fg:x="238" fg:w="3"/><text x="36.8654%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::hir::Hir&gt; (3 samples, 0.46%)</title><rect x="36.6154%" y="453" width="0.4615%" height="15" fill="rgb(244,216,7)" fg:x="238" fg:w="3"/><text x="36.8654%" y="463.50"></text></g><g><title>&lt;regex_syntax::hir::Hir as core::ops::drop::Drop&gt;::drop (3 samples, 0.46%)</title><rect x="36.6154%" y="437" width="0.4615%" height="15" fill="rgb(251,195,49)" fg:x="238" fg:w="3"/><text x="36.8654%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (1 samples, 0.15%)</title><rect x="36.9231%" y="421" width="0.1538%" height="15" fill="rgb(216,0,40)" fg:x="240" fg:w="1"/><text x="37.1731%" y="431.50"></text></g><g><title>core::ptr::read (1 samples, 0.15%)</title><rect x="36.9231%" y="405" width="0.1538%" height="15" fill="rgb(222,157,29)" fg:x="240" fg:w="1"/><text x="37.1731%" y="415.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (1 samples, 0.15%)</title><rect x="36.9231%" y="389" width="0.1538%" height="15" fill="rgb(234,151,54)" fg:x="240" fg:w="1"/><text x="37.1731%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;regex_syntax::ast::Repetition&gt;&gt; (1 samples, 0.15%)</title><rect x="37.0769%" y="405" width="0.1538%" height="15" fill="rgb(241,66,35)" fg:x="241" fg:w="1"/><text x="37.3269%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::ast::Repetition&gt; (1 samples, 0.15%)</title><rect x="37.0769%" y="389" width="0.1538%" height="15" fill="rgb(207,154,4)" fg:x="241" fg:w="1"/><text x="37.3269%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;regex_syntax::ast::Ast&gt;&gt; (1 samples, 0.15%)</title><rect x="37.0769%" y="373" width="0.1538%" height="15" fill="rgb(240,145,9)" fg:x="241" fg:w="1"/><text x="37.3269%" y="383.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.15%)</title><rect x="37.0769%" y="357" width="0.1538%" height="15" fill="rgb(241,6,19)" fg:x="241" fg:w="1"/><text x="37.3269%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.15%)</title><rect x="37.0769%" y="341" width="0.1538%" height="15" fill="rgb(238,77,31)" fg:x="241" fg:w="1"/><text x="37.3269%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.15%)</title><rect x="37.0769%" y="325" width="0.1538%" height="15" fill="rgb(227,15,28)" fg:x="241" fg:w="1"/><text x="37.3269%" y="335.50"></text></g><g><title>__GI___libc_free (1 samples, 0.15%)</title><rect x="37.0769%" y="309" width="0.1538%" height="15" fill="rgb(247,8,17)" fg:x="241" fg:w="1"/><text x="37.3269%" y="319.50"></text></g><g><title>_int_free (1 samples, 0.15%)</title><rect x="37.0769%" y="293" width="0.1538%" height="15" fill="rgb(221,113,48)" fg:x="241" fg:w="1"/><text x="37.3269%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;regex_syntax::ast::Concat&gt;&gt; (1 samples, 0.15%)</title><rect x="37.2308%" y="405" width="0.1538%" height="15" fill="rgb(248,192,22)" fg:x="242" fg:w="1"/><text x="37.4808%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::ast::Concat&gt; (1 samples, 0.15%)</title><rect x="37.2308%" y="389" width="0.1538%" height="15" fill="rgb(246,106,45)" fg:x="242" fg:w="1"/><text x="37.4808%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_syntax::ast::Ast&gt;&gt; (1 samples, 0.15%)</title><rect x="37.2308%" y="373" width="0.1538%" height="15" fill="rgb(234,216,45)" fg:x="242" fg:w="1"/><text x="37.4808%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="37.2308%" y="357" width="0.1538%" height="15" fill="rgb(249,14,2)" fg:x="242" fg:w="1"/><text x="37.4808%" y="367.50"></text></g><g><title>__GI___libc_free (3 samples, 0.46%)</title><rect x="37.3846%" y="405" width="0.4615%" height="15" fill="rgb(247,8,17)" fg:x="243" fg:w="3"/><text x="37.6346%" y="415.50"></text></g><g><title>_int_free (3 samples, 0.46%)</title><rect x="37.3846%" y="389" width="0.4615%" height="15" fill="rgb(221,113,48)" fg:x="243" fg:w="3"/><text x="37.6346%" y="399.50"></text></g><g><title>&lt;regex_syntax::ast::Ast as core::ops::drop::Drop&gt;::drop (3 samples, 0.46%)</title><rect x="37.8462%" y="405" width="0.4615%" height="15" fill="rgb(238,18,15)" fg:x="246" fg:w="3"/><text x="38.0962%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::ast::Ast&gt; (9 samples, 1.38%)</title><rect x="37.0769%" y="421" width="1.3846%" height="15" fill="rgb(216,180,24)" fg:x="241" fg:w="9"/><text x="37.3269%" y="431.50"></text></g><g><title>unlink_chunk (2 samples, 0.31%)</title><rect x="38.4615%" y="117" width="0.3077%" height="15" fill="rgb(223,20,30)" fg:x="250" fg:w="2"/><text x="38.7115%" y="127.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (5 samples, 0.77%)</title><rect x="38.4615%" y="357" width="0.7692%" height="15" fill="rgb(205,186,49)" fg:x="250" fg:w="5"/><text x="38.7115%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.77%)</title><rect x="38.4615%" y="341" width="0.7692%" height="15" fill="rgb(232,211,42)" fg:x="250" fg:w="5"/><text x="38.7115%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (5 samples, 0.77%)</title><rect x="38.4615%" y="325" width="0.7692%" height="15" fill="rgb(214,146,48)" fg:x="250" fg:w="5"/><text x="38.7115%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (5 samples, 0.77%)</title><rect x="38.4615%" y="309" width="0.7692%" height="15" fill="rgb(212,159,3)" fg:x="250" fg:w="5"/><text x="38.7115%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.77%)</title><rect x="38.4615%" y="293" width="0.7692%" height="15" fill="rgb(231,142,39)" fg:x="250" fg:w="5"/><text x="38.7115%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.77%)</title><rect x="38.4615%" y="277" width="0.7692%" height="15" fill="rgb(249,2,22)" fg:x="250" fg:w="5"/><text x="38.7115%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.77%)</title><rect x="38.4615%" y="261" width="0.7692%" height="15" fill="rgb(254,53,35)" fg:x="250" fg:w="5"/><text x="38.7115%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.77%)</title><rect x="38.4615%" y="245" width="0.7692%" height="15" fill="rgb(237,133,22)" fg:x="250" fg:w="5"/><text x="38.7115%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (5 samples, 0.77%)</title><rect x="38.4615%" y="229" width="0.7692%" height="15" fill="rgb(237,156,49)" fg:x="250" fg:w="5"/><text x="38.7115%" y="239.50"></text></g><g><title>alloc::alloc::Global::grow_impl (5 samples, 0.77%)</title><rect x="38.4615%" y="213" width="0.7692%" height="15" fill="rgb(214,150,36)" fg:x="250" fg:w="5"/><text x="38.7115%" y="223.50"></text></g><g><title>alloc::alloc::realloc (5 samples, 0.77%)</title><rect x="38.4615%" y="197" width="0.7692%" height="15" fill="rgb(254,47,34)" fg:x="250" fg:w="5"/><text x="38.7115%" y="207.50"></text></g><g><title>__GI___libc_realloc (5 samples, 0.77%)</title><rect x="38.4615%" y="181" width="0.7692%" height="15" fill="rgb(254,73,4)" fg:x="250" fg:w="5"/><text x="38.7115%" y="191.50"></text></g><g><title>_int_realloc (5 samples, 0.77%)</title><rect x="38.4615%" y="165" width="0.7692%" height="15" fill="rgb(231,75,41)" fg:x="250" fg:w="5"/><text x="38.7115%" y="175.50"></text></g><g><title>_int_malloc (5 samples, 0.77%)</title><rect x="38.4615%" y="149" width="0.7692%" height="15" fill="rgb(222,219,51)" fg:x="250" fg:w="5"/><text x="38.7115%" y="159.50"></text></g><g><title>malloc_consolidate (5 samples, 0.77%)</title><rect x="38.4615%" y="133" width="0.7692%" height="15" fill="rgb(228,194,39)" fg:x="250" fg:w="5"/><text x="38.7115%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;regex_syntax::ast::ClassBracketed&gt;&gt; (6 samples, 0.92%)</title><rect x="38.4615%" y="421" width="0.9231%" height="15" fill="rgb(216,49,34)" fg:x="250" fg:w="6"/><text x="38.7115%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::ast::ClassBracketed&gt; (6 samples, 0.92%)</title><rect x="38.4615%" y="405" width="0.9231%" height="15" fill="rgb(233,178,20)" fg:x="250" fg:w="6"/><text x="38.7115%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::ast::ClassSet&gt; (6 samples, 0.92%)</title><rect x="38.4615%" y="389" width="0.9231%" height="15" fill="rgb(218,161,37)" fg:x="250" fg:w="6"/><text x="38.7115%" y="399.50"></text></g><g><title>&lt;regex_syntax::ast::ClassSet as core::ops::drop::Drop&gt;::drop (6 samples, 0.92%)</title><rect x="38.4615%" y="373" width="0.9231%" height="15" fill="rgb(227,212,36)" fg:x="250" fg:w="6"/><text x="38.7115%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (1 samples, 0.15%)</title><rect x="39.3846%" y="421" width="0.1538%" height="15" fill="rgb(216,0,40)" fg:x="256" fg:w="1"/><text x="39.6346%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.15%)</title><rect x="39.3846%" y="405" width="0.1538%" height="15" fill="rgb(236,102,29)" fg:x="256" fg:w="1"/><text x="39.6346%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.15%)</title><rect x="39.3846%" y="389" width="0.1538%" height="15" fill="rgb(233,185,1)" fg:x="256" fg:w="1"/><text x="39.6346%" y="399.50"></text></g><g><title>_int_free (7 samples, 1.08%)</title><rect x="39.5385%" y="405" width="1.0769%" height="15" fill="rgb(221,113,48)" fg:x="257" fg:w="7"/><text x="39.7885%" y="415.50"></text></g><g><title>__GI___libc_free (8 samples, 1.23%)</title><rect x="39.5385%" y="421" width="1.2308%" height="15" fill="rgb(247,8,17)" fg:x="257" fg:w="8"/><text x="39.7885%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.15%)</title><rect x="40.7692%" y="373" width="0.1538%" height="15" fill="rgb(245,181,4)" fg:x="265" fg:w="1"/><text x="41.0192%" y="383.50"></text></g><g><title>malloc_consolidate (2 samples, 0.31%)</title><rect x="40.9231%" y="197" width="0.3077%" height="15" fill="rgb(228,194,39)" fg:x="266" fg:w="2"/><text x="41.1731%" y="207.50"></text></g><g><title>unlink_chunk (2 samples, 0.31%)</title><rect x="40.9231%" y="181" width="0.3077%" height="15" fill="rgb(223,20,30)" fg:x="266" fg:w="2"/><text x="41.1731%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (4 samples, 0.62%)</title><rect x="40.7692%" y="389" width="0.6154%" height="15" fill="rgb(214,146,48)" fg:x="265" fg:w="4"/><text x="41.0192%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.46%)</title><rect x="40.9231%" y="373" width="0.4615%" height="15" fill="rgb(212,159,3)" fg:x="266" fg:w="3"/><text x="41.1731%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.46%)</title><rect x="40.9231%" y="357" width="0.4615%" height="15" fill="rgb(231,142,39)" fg:x="266" fg:w="3"/><text x="41.1731%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.46%)</title><rect x="40.9231%" y="341" width="0.4615%" height="15" fill="rgb(249,2,22)" fg:x="266" fg:w="3"/><text x="41.1731%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.46%)</title><rect x="40.9231%" y="325" width="0.4615%" height="15" fill="rgb(254,53,35)" fg:x="266" fg:w="3"/><text x="41.1731%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.46%)</title><rect x="40.9231%" y="309" width="0.4615%" height="15" fill="rgb(237,133,22)" fg:x="266" fg:w="3"/><text x="41.1731%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.46%)</title><rect x="40.9231%" y="293" width="0.4615%" height="15" fill="rgb(237,156,49)" fg:x="266" fg:w="3"/><text x="41.1731%" y="303.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.46%)</title><rect x="40.9231%" y="277" width="0.4615%" height="15" fill="rgb(214,150,36)" fg:x="266" fg:w="3"/><text x="41.1731%" y="287.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.46%)</title><rect x="40.9231%" y="261" width="0.4615%" height="15" fill="rgb(254,47,34)" fg:x="266" fg:w="3"/><text x="41.1731%" y="271.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.46%)</title><rect x="40.9231%" y="245" width="0.4615%" height="15" fill="rgb(254,73,4)" fg:x="266" fg:w="3"/><text x="41.1731%" y="255.50"></text></g><g><title>_int_realloc (3 samples, 0.46%)</title><rect x="40.9231%" y="229" width="0.4615%" height="15" fill="rgb(231,75,41)" fg:x="266" fg:w="3"/><text x="41.1731%" y="239.50"></text></g><g><title>_int_malloc (3 samples, 0.46%)</title><rect x="40.9231%" y="213" width="0.4615%" height="15" fill="rgb(222,219,51)" fg:x="266" fg:w="3"/><text x="41.1731%" y="223.50"></text></g><g><title>regex::regex::bytes::Regex::new (147 samples, 22.62%)</title><rect x="19.2308%" y="581" width="22.6154%" height="15" fill="rgb(246,224,25)" fg:x="125" fg:w="147"/><text x="19.4808%" y="591.50">regex::regex::bytes::Regex::new</text></g><g><title>regex::builders::bytes::RegexBuilder::build (144 samples, 22.15%)</title><rect x="19.6923%" y="565" width="22.1538%" height="15" fill="rgb(236,76,51)" fg:x="128" fg:w="144"/><text x="19.9423%" y="575.50">regex::builders::bytes::RegexBuilde..</text></g><g><title>regex::builders::Builder::build_one_bytes (144 samples, 22.15%)</title><rect x="19.6923%" y="549" width="22.1538%" height="15" fill="rgb(233,102,7)" fg:x="128" fg:w="144"/><text x="19.9423%" y="559.50">regex::builders::Builder::build_one..</text></g><g><title>regex_automata::meta::regex::Builder::build (144 samples, 22.15%)</title><rect x="19.6923%" y="533" width="22.1538%" height="15" fill="rgb(212,33,22)" fg:x="128" fg:w="144"/><text x="19.9423%" y="543.50">regex_automata::meta::regex::Builde..</text></g><g><title>regex_automata::meta::regex::Builder::build_many (144 samples, 22.15%)</title><rect x="19.6923%" y="517" width="22.1538%" height="15" fill="rgb(236,25,32)" fg:x="128" fg:w="144"/><text x="19.9423%" y="527.50">regex_automata::meta::regex::Builde..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_syntax::ast::Ast&gt;&gt; (31 samples, 4.77%)</title><rect x="37.0769%" y="501" width="4.7692%" height="15" fill="rgb(234,216,45)" fg:x="241" fg:w="31"/><text x="37.3269%" y="511.50">core::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 4.77%)</title><rect x="37.0769%" y="485" width="4.7692%" height="15" fill="rgb(249,14,2)" fg:x="241" fg:w="31"/><text x="37.3269%" y="495.50">&lt;alloc..</text></g><g><title>core::ptr::drop_in_place&lt;[regex_syntax::ast::Ast]&gt; (31 samples, 4.77%)</title><rect x="37.0769%" y="469" width="4.7692%" height="15" fill="rgb(216,112,18)" fg:x="241" fg:w="31"/><text x="37.3269%" y="479.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::ast::Ast&gt; (31 samples, 4.77%)</title><rect x="37.0769%" y="453" width="4.7692%" height="15" fill="rgb(216,180,24)" fg:x="241" fg:w="31"/><text x="37.3269%" y="463.50">core::..</text></g><g><title>&lt;regex_syntax::ast::Ast as core::ops::drop::Drop&gt;::drop (31 samples, 4.77%)</title><rect x="37.0769%" y="437" width="4.7692%" height="15" fill="rgb(238,18,15)" fg:x="241" fg:w="31"/><text x="37.3269%" y="447.50">&lt;regex..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (7 samples, 1.08%)</title><rect x="40.7692%" y="421" width="1.0769%" height="15" fill="rgb(205,186,49)" fg:x="265" fg:w="7"/><text x="41.0192%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (7 samples, 1.08%)</title><rect x="40.7692%" y="405" width="1.0769%" height="15" fill="rgb(232,211,42)" fg:x="265" fg:w="7"/><text x="41.0192%" y="415.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_sysline_in_block (159 samples, 24.46%)</title><rect x="17.5385%" y="821" width="24.4615%" height="15" fill="rgb(243,65,52)" fg:x="114" fg:w="159"/><text x="17.7885%" y="831.50">s4lib::readers::syslinereader::SyslineR..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_sysline_in_block_year (159 samples, 24.46%)</title><rect x="17.5385%" y="805" width="24.4615%" height="15" fill="rgb(253,177,51)" fg:x="114" fg:w="159"/><text x="17.7885%" y="815.50">s4lib::readers::syslinereader::SyslineR..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::parse_datetime_in_line_cached (159 samples, 24.46%)</title><rect x="17.5385%" y="789" width="24.4615%" height="15" fill="rgb(231,75,50)" fg:x="114" fg:w="159"/><text x="17.7885%" y="799.50">s4lib::readers::syslinereader::SyslineR..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::parse_datetime_in_line (159 samples, 24.46%)</title><rect x="17.5385%" y="773" width="24.4615%" height="15" fill="rgb(234,54,15)" fg:x="114" fg:w="159"/><text x="17.7885%" y="783.50">s4lib::readers::syslinereader::SyslineR..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_datetime_in_line (159 samples, 24.46%)</title><rect x="17.5385%" y="757" width="24.4615%" height="15" fill="rgb(212,53,9)" fg:x="114" fg:w="159"/><text x="17.7885%" y="767.50">s4lib::readers::syslinereader::SyslineR..</text></g><g><title>s4lib::data::datetime::bytes_to_regex_to_datetime (159 samples, 24.46%)</title><rect x="17.5385%" y="741" width="24.4615%" height="15" fill="rgb(252,84,36)" fg:x="114" fg:w="159"/><text x="17.7885%" y="751.50">s4lib::data::datetime::bytes_to_regex_t..</text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref (148 samples, 22.77%)</title><rect x="19.2308%" y="725" width="22.7692%" height="15" fill="rgb(217,15,43)" fg:x="125" fg:w="148"/><text x="19.4808%" y="735.50">&lt;s4lib::data::datetime::DATETIME_PAR..</text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref::__stability (148 samples, 22.77%)</title><rect x="19.2308%" y="709" width="22.7692%" height="15" fill="rgb(239,165,48)" fg:x="125" fg:w="148"/><text x="19.4808%" y="719.50">&lt;s4lib::data::datetime::DATETIME_PAR..</text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (148 samples, 22.77%)</title><rect x="19.2308%" y="693" width="22.7692%" height="15" fill="rgb(235,175,8)" fg:x="125" fg:w="148"/><text x="19.4808%" y="703.50">lazy_static::lazy::Lazy&lt;T&gt;::get</text></g><g><title>std::sync::once::Once::call_once (148 samples, 22.77%)</title><rect x="19.2308%" y="677" width="22.7692%" height="15" fill="rgb(247,17,47)" fg:x="125" fg:w="148"/><text x="19.4808%" y="687.50">std::sync::once::Once::call_once</text></g><g><title>std::sys_common::once::futex::Once::call (148 samples, 22.77%)</title><rect x="19.2308%" y="661" width="22.7692%" height="15" fill="rgb(246,168,49)" fg:x="125" fg:w="148"/><text x="19.4808%" y="671.50">std::sys_common::once::futex::Once::..</text></g><g><title>std::sync::once::Once::call_once::{{closure}} (148 samples, 22.77%)</title><rect x="19.2308%" y="645" width="22.7692%" height="15" fill="rgb(237,63,35)" fg:x="125" fg:w="148"/><text x="19.4808%" y="655.50">std::sync::once::Once::call_once::{{..</text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}} (148 samples, 22.77%)</title><rect x="19.2308%" y="629" width="22.7692%" height="15" fill="rgb(238,7,51)" fg:x="125" fg:w="148"/><text x="19.4808%" y="639.50">lazy_static::lazy::Lazy&lt;T&gt;::get::{{c..</text></g><g><title>core::ops::function::FnOnce::call_once (148 samples, 22.77%)</title><rect x="19.2308%" y="613" width="22.7692%" height="15" fill="rgb(210,80,10)" fg:x="125" fg:w="148"/><text x="19.4808%" y="623.50">core::ops::function::FnOnce::call_on..</text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref::__static_ref_initialize (148 samples, 22.77%)</title><rect x="19.2308%" y="597" width="22.7692%" height="15" fill="rgb(205,24,29)" fg:x="125" fg:w="148"/><text x="19.4808%" y="607.50">&lt;s4lib::data::datetime::DATETIME_PAR..</text></g><g><title>&lt;s4lib::data::datetime::DateTimeParseDatasCompiledCount as core::ops::deref::Deref&gt;::deref (1 samples, 0.15%)</title><rect x="41.8462%" y="581" width="0.1538%" height="15" fill="rgb(208,17,52)" fg:x="272" fg:w="1"/><text x="42.0962%" y="591.50"></text></g><g><title>&lt;s4lib::data::datetime::DateTimeParseDatasCompiledCount as core::ops::deref::Deref&gt;::deref::__stability (1 samples, 0.15%)</title><rect x="41.8462%" y="565" width="0.1538%" height="15" fill="rgb(218,141,40)" fg:x="272" fg:w="1"/><text x="42.0962%" y="575.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (1 samples, 0.15%)</title><rect x="41.8462%" y="549" width="0.1538%" height="15" fill="rgb(235,175,8)" fg:x="272" fg:w="1"/><text x="42.0962%" y="559.50"></text></g><g><title>std::sync::once::Once::call_once (1 samples, 0.15%)</title><rect x="41.8462%" y="533" width="0.1538%" height="15" fill="rgb(247,17,47)" fg:x="272" fg:w="1"/><text x="42.0962%" y="543.50"></text></g><g><title>std::sys_common::once::futex::Once::call (1 samples, 0.15%)</title><rect x="41.8462%" y="517" width="0.1538%" height="15" fill="rgb(246,168,49)" fg:x="272" fg:w="1"/><text x="42.0962%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys_common::once::futex::CompletionGuard&gt; (1 samples, 0.15%)</title><rect x="41.8462%" y="501" width="0.1538%" height="15" fill="rgb(213,188,53)" fg:x="272" fg:w="1"/><text x="42.0962%" y="511.50"></text></g><g><title>&lt;std::sys_common::once::futex::CompletionGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="41.8462%" y="485" width="0.1538%" height="15" fill="rgb(212,11,27)" fg:x="272" fg:w="1"/><text x="42.0962%" y="495.50"></text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::process_stage1_blockzero_analysis (160 samples, 24.62%)</title><rect x="17.5385%" y="869" width="24.6154%" height="15" fill="rgb(214,107,3)" fg:x="114" fg:w="160"/><text x="17.7885%" y="879.50">s4lib::readers::syslogprocessor::Syslog..</text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::blockzero_analysis (160 samples, 24.62%)</title><rect x="17.5385%" y="853" width="24.6154%" height="15" fill="rgb(228,176,28)" fg:x="114" fg:w="160"/><text x="17.7885%" y="863.50">s4lib::readers::syslogprocessor::Syslog..</text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::blockzero_analysis_syslines (160 samples, 24.62%)</title><rect x="17.5385%" y="837" width="24.6154%" height="15" fill="rgb(208,15,47)" fg:x="114" fg:w="160"/><text x="17.7885%" y="847.50">s4lib::readers::syslogprocessor::Syslog..</text></g><g><title>&lt;s4lib::readers::syslogprocessor::BLOCKZERO_ANALYSIS_SYSLINE_COUNT_MIN_MAP as core::ops::deref::Deref&gt;::deref (1 samples, 0.15%)</title><rect x="42.0000%" y="821" width="0.1538%" height="15" fill="rgb(209,191,43)" fg:x="273" fg:w="1"/><text x="42.2500%" y="831.50"></text></g><g><title>&lt;s4lib::readers::syslogprocessor::BLOCKZERO_ANALYSIS_SYSLINE_COUNT_MIN_MAP as core::ops::deref::Deref&gt;::deref::__stability (1 samples, 0.15%)</title><rect x="42.0000%" y="805" width="0.1538%" height="15" fill="rgb(224,202,39)" fg:x="273" fg:w="1"/><text x="42.2500%" y="815.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (1 samples, 0.15%)</title><rect x="42.0000%" y="789" width="0.1538%" height="15" fill="rgb(235,175,8)" fg:x="273" fg:w="1"/><text x="42.2500%" y="799.50"></text></g><g><title>std::sync::once::Once::call_once (1 samples, 0.15%)</title><rect x="42.0000%" y="773" width="0.1538%" height="15" fill="rgb(247,17,47)" fg:x="273" fg:w="1"/><text x="42.2500%" y="783.50"></text></g><g><title>std::sys_common::once::futex::Once::call (1 samples, 0.15%)</title><rect x="42.0000%" y="757" width="0.1538%" height="15" fill="rgb(246,168,49)" fg:x="273" fg:w="1"/><text x="42.2500%" y="767.50"></text></g><g><title>std::sync::once::Once::call_once::{{closure}} (1 samples, 0.15%)</title><rect x="42.0000%" y="741" width="0.1538%" height="15" fill="rgb(237,63,35)" fg:x="273" fg:w="1"/><text x="42.2500%" y="751.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}} (1 samples, 0.15%)</title><rect x="42.0000%" y="725" width="0.1538%" height="15" fill="rgb(238,7,51)" fg:x="273" fg:w="1"/><text x="42.2500%" y="735.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.15%)</title><rect x="42.0000%" y="709" width="0.1538%" height="15" fill="rgb(210,80,10)" fg:x="273" fg:w="1"/><text x="42.2500%" y="719.50"></text></g><g><title>&lt;s4lib::readers::syslogprocessor::BLOCKZERO_ANALYSIS_SYSLINE_COUNT_MIN_MAP as core::ops::deref::Deref&gt;::deref::__static_ref_initialize (1 samples, 0.15%)</title><rect x="42.0000%" y="693" width="0.1538%" height="15" fill="rgb(210,185,10)" fg:x="273" fg:w="1"/><text x="42.2500%" y="703.50"></text></g><g><title>rangemap::map::RangeMap&lt;K,V&gt;::insert (1 samples, 0.15%)</title><rect x="42.0000%" y="677" width="0.1538%" height="15" fill="rgb(216,177,54)" fg:x="273" fg:w="1"/><text x="42.2500%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.15%)</title><rect x="42.0000%" y="661" width="0.1538%" height="15" fill="rgb(213,87,31)" fg:x="273" fg:w="1"/><text x="42.2500%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.15%)</title><rect x="42.0000%" y="645" width="0.1538%" height="15" fill="rgb(217,123,23)" fg:x="273" fg:w="1"/><text x="42.2500%" y="655.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (1 samples, 0.15%)</title><rect x="42.0000%" y="629" width="0.1538%" height="15" fill="rgb(246,40,3)" fg:x="273" fg:w="1"/><text x="42.2500%" y="639.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (1 samples, 0.15%)</title><rect x="42.0000%" y="613" width="0.1538%" height="15" fill="rgb(254,11,13)" fg:x="273" fg:w="1"/><text x="42.2500%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (1 samples, 0.15%)</title><rect x="42.0000%" y="597" width="0.1538%" height="15" fill="rgb(225,5,54)" fg:x="273" fg:w="1"/><text x="42.2500%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (1 samples, 0.15%)</title><rect x="42.0000%" y="581" width="0.1538%" height="15" fill="rgb(249,175,32)" fg:x="273" fg:w="1"/><text x="42.2500%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.15%)</title><rect x="42.0000%" y="565" width="0.1538%" height="15" fill="rgb(231,114,21)" fg:x="273" fg:w="1"/><text x="42.2500%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.15%)</title><rect x="42.0000%" y="549" width="0.1538%" height="15" fill="rgb(238,209,2)" fg:x="273" fg:w="1"/><text x="42.2500%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.15%)</title><rect x="42.0000%" y="533" width="0.1538%" height="15" fill="rgb(253,135,41)" fg:x="273" fg:w="1"/><text x="42.2500%" y="543.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="42.0000%" y="517" width="0.1538%" height="15" fill="rgb(206,112,53)" fg:x="273" fg:w="1"/><text x="42.2500%" y="527.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="42.0000%" y="501" width="0.1538%" height="15" fill="rgb(222,219,51)" fg:x="273" fg:w="1"/><text x="42.2500%" y="511.50"></text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::new (1 samples, 0.15%)</title><rect x="42.1538%" y="869" width="0.1538%" height="15" fill="rgb(223,11,33)" fg:x="274" fg:w="1"/><text x="42.4038%" y="879.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::new (1 samples, 0.15%)</title><rect x="42.1538%" y="853" width="0.1538%" height="15" fill="rgb(247,92,42)" fg:x="274" fg:w="1"/><text x="42.4038%" y="863.50"></text></g><g><title>s4lib::readers::linereader::LineReader::new (1 samples, 0.15%)</title><rect x="42.1538%" y="837" width="0.1538%" height="15" fill="rgb(243,188,25)" fg:x="274" fg:w="1"/><text x="42.4038%" y="847.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="42.1538%" y="821" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="274" fg:w="1"/><text x="42.4038%" y="831.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="42.1538%" y="805" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="274" fg:w="1"/><text x="42.4038%" y="815.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="42.1538%" y="789" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="274" fg:w="1"/><text x="42.4038%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="42.1538%" y="773" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="274" fg:w="1"/><text x="42.4038%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="42.1538%" y="757" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="274" fg:w="1"/><text x="42.4038%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="42.1538%" y="741" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="274" fg:w="1"/><text x="42.4038%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="42.1538%" y="725" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="274" fg:w="1"/><text x="42.4038%" y="735.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::ezcheck_slice (1 samples, 0.15%)</title><rect x="42.3077%" y="741" width="0.1538%" height="15" fill="rgb(243,206,21)" fg:x="275" fg:w="1"/><text x="42.5577%" y="751.50"></text></g><g><title>s4lib::data::datetime::slice_contains_12_D2 (1 samples, 0.15%)</title><rect x="42.3077%" y="725" width="0.1538%" height="15" fill="rgb(224,202,42)" fg:x="275" fg:w="1"/><text x="42.5577%" y="735.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="42.3077%" y="709" width="0.1538%" height="15" fill="rgb(236,210,2)" fg:x="275" fg:w="1"/><text x="42.5577%" y="719.50"></text></g><g><title>chrono::naive::time::NaiveTime::overflowing_add_signed (1 samples, 0.15%)</title><rect x="42.4615%" y="597" width="0.1538%" height="15" fill="rgb(232,49,1)" fg:x="276" fg:w="1"/><text x="42.7115%" y="607.50"></text></g><g><title>chrono::duration::Duration::num_nanoseconds (1 samples, 0.15%)</title><rect x="42.4615%" y="581" width="0.1538%" height="15" fill="rgb(222,34,22)" fg:x="276" fg:w="1"/><text x="42.7115%" y="591.50"></text></g><g><title>chrono::duration::Duration::num_seconds (1 samples, 0.15%)</title><rect x="42.4615%" y="565" width="0.1538%" height="15" fill="rgb(243,221,52)" fg:x="276" fg:w="1"/><text x="42.7115%" y="575.50"></text></g><g><title>chrono::offset::TimeZone::from_local_datetime (2 samples, 0.31%)</title><rect x="42.4615%" y="709" width="0.3077%" height="15" fill="rgb(244,75,24)" fg:x="276" fg:w="2"/><text x="42.7115%" y="719.50"></text></g><g><title>chrono::offset::LocalResult&lt;T&gt;::map (2 samples, 0.31%)</title><rect x="42.4615%" y="693" width="0.3077%" height="15" fill="rgb(224,169,52)" fg:x="276" fg:w="2"/><text x="42.7115%" y="703.50"></text></g><g><title>chrono::offset::TimeZone::from_local_datetime::{{closure}} (2 samples, 0.31%)</title><rect x="42.4615%" y="677" width="0.3077%" height="15" fill="rgb(212,118,1)" fg:x="276" fg:w="2"/><text x="42.7115%" y="687.50"></text></g><g><title>chrono::offset::fixed::&lt;impl core::ops::arith::Sub&lt;chrono::offset::fixed::FixedOffset&gt; for chrono::naive::datetime::NaiveDateTime&gt;::sub (2 samples, 0.31%)</title><rect x="42.4615%" y="661" width="0.3077%" height="15" fill="rgb(253,9,6)" fg:x="276" fg:w="2"/><text x="42.7115%" y="671.50"></text></g><g><title>chrono::offset::fixed::add_with_leapsecond (2 samples, 0.31%)</title><rect x="42.4615%" y="645" width="0.3077%" height="15" fill="rgb(232,33,4)" fg:x="276" fg:w="2"/><text x="42.7115%" y="655.50"></text></g><g><title>&lt;chrono::naive::datetime::NaiveDateTime as core::ops::arith::Add&lt;chrono::duration::Duration&gt;&gt;::add (2 samples, 0.31%)</title><rect x="42.4615%" y="629" width="0.3077%" height="15" fill="rgb(218,14,38)" fg:x="276" fg:w="2"/><text x="42.7115%" y="639.50"></text></g><g><title>chrono::naive::datetime::NaiveDateTime::checked_add_signed (2 samples, 0.31%)</title><rect x="42.4615%" y="613" width="0.3077%" height="15" fill="rgb(230,97,7)" fg:x="276" fg:w="2"/><text x="42.7115%" y="623.50"></text></g><g><title>chrono::format::parsed::Parsed::to_naive_datetime_with_offset (1 samples, 0.15%)</title><rect x="42.7692%" y="693" width="0.1538%" height="15" fill="rgb(248,123,23)" fg:x="278" fg:w="1"/><text x="43.0192%" y="703.50"></text></g><g><title>chrono::format::parsed::Parsed::to_naive_date (1 samples, 0.15%)</title><rect x="42.7692%" y="677" width="0.1538%" height="15" fill="rgb(229,218,38)" fg:x="278" fg:w="1"/><text x="43.0192%" y="687.50"></text></g><g><title>chrono::naive::date::NaiveDate::from_ymd_opt (1 samples, 0.15%)</title><rect x="42.7692%" y="661" width="0.1538%" height="15" fill="rgb(206,140,10)" fg:x="278" fg:w="1"/><text x="43.0192%" y="671.50"></text></g><g><title>chrono::naive::date::NaiveDate::from_mdf (1 samples, 0.15%)</title><rect x="42.7692%" y="645" width="0.1538%" height="15" fill="rgb(213,64,39)" fg:x="278" fg:w="1"/><text x="43.0192%" y="655.50"></text></g><g><title>chrono::naive::internals::Mdf::to_of (1 samples, 0.15%)</title><rect x="42.7692%" y="629" width="0.1538%" height="15" fill="rgb(209,101,12)" fg:x="278" fg:w="1"/><text x="43.0192%" y="639.50"></text></g><g><title>chrono::naive::internals::Of::from_mdf (1 samples, 0.15%)</title><rect x="42.7692%" y="613" width="0.1538%" height="15" fill="rgb(219,33,46)" fg:x="278" fg:w="1"/><text x="43.0192%" y="623.50"></text></g><g><title>s4lib::data::datetime::datetime_parse_from_str (7 samples, 1.08%)</title><rect x="42.4615%" y="725" width="1.0769%" height="15" fill="rgb(242,206,13)" fg:x="276" fg:w="7"/><text x="42.7115%" y="735.50"></text></g><g><title>chrono::naive::datetime::NaiveDateTime::parse_from_str (5 samples, 0.77%)</title><rect x="42.7692%" y="709" width="0.7692%" height="15" fill="rgb(217,43,10)" fg:x="278" fg:w="5"/><text x="43.0192%" y="719.50"></text></g><g><title>chrono::format::parse::parse (4 samples, 0.62%)</title><rect x="42.9231%" y="693" width="0.6154%" height="15" fill="rgb(248,184,2)" fg:x="279" fg:w="4"/><text x="43.1731%" y="703.50"></text></g><g><title>chrono::format::parse::parse_internal (4 samples, 0.62%)</title><rect x="42.9231%" y="677" width="0.6154%" height="15" fill="rgb(254,10,23)" fg:x="279" fg:w="4"/><text x="43.1731%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.15%)</title><rect x="43.5385%" y="613" width="0.1538%" height="15" fill="rgb(230,119,31)" fg:x="283" fg:w="1"/><text x="43.7885%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.15%)</title><rect x="43.5385%" y="597" width="0.1538%" height="15" fill="rgb(252,63,32)" fg:x="283" fg:w="1"/><text x="43.7885%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.15%)</title><rect x="43.5385%" y="581" width="0.1538%" height="15" fill="rgb(248,7,52)" fg:x="283" fg:w="1"/><text x="43.7885%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 0.15%)</title><rect x="43.5385%" y="565" width="0.1538%" height="15" fill="rgb(208,119,11)" fg:x="283" fg:w="1"/><text x="43.7885%" y="575.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.15%)</title><rect x="43.5385%" y="549" width="0.1538%" height="15" fill="rgb(218,185,12)" fg:x="283" fg:w="1"/><text x="43.7885%" y="559.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.15%)</title><rect x="43.5385%" y="533" width="0.1538%" height="15" fill="rgb(254,162,47)" fg:x="283" fg:w="1"/><text x="43.7885%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.15%)</title><rect x="43.5385%" y="517" width="0.1538%" height="15" fill="rgb(242,44,7)" fg:x="283" fg:w="1"/><text x="43.7885%" y="527.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.15%)</title><rect x="43.5385%" y="501" width="0.1538%" height="15" fill="rgb(216,62,21)" fg:x="283" fg:w="1"/><text x="43.7885%" y="511.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.15%)</title><rect x="43.5385%" y="485" width="0.1538%" height="15" fill="rgb(221,225,42)" fg:x="283" fg:w="1"/><text x="43.7885%" y="495.50"></text></g><g><title>__memcmp_evex_movbe (1 samples, 0.15%)</title><rect x="43.5385%" y="469" width="0.1538%" height="15" fill="rgb(253,103,40)" fg:x="283" fg:w="1"/><text x="43.7885%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.15%)</title><rect x="43.6923%" y="581" width="0.1538%" height="15" fill="rgb(212,33,36)" fg:x="284" fg:w="1"/><text x="43.9423%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.15%)</title><rect x="43.6923%" y="565" width="0.1538%" height="15" fill="rgb(250,187,26)" fg:x="284" fg:w="1"/><text x="43.9423%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.15%)</title><rect x="43.6923%" y="549" width="0.1538%" height="15" fill="rgb(208,211,8)" fg:x="284" fg:w="1"/><text x="43.9423%" y="559.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1 samples, 0.15%)</title><rect x="43.6923%" y="533" width="0.1538%" height="15" fill="rgb(206,132,37)" fg:x="284" fg:w="1"/><text x="43.9423%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.15%)</title><rect x="43.6923%" y="517" width="0.1538%" height="15" fill="rgb(243,187,24)" fg:x="284" fg:w="1"/><text x="43.9423%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.15%)</title><rect x="43.6923%" y="501" width="0.1538%" height="15" fill="rgb(236,225,40)" fg:x="284" fg:w="1"/><text x="43.9423%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.31%)</title><rect x="43.8462%" y="581" width="0.3077%" height="15" fill="rgb(210,60,43)" fg:x="285" fg:w="2"/><text x="44.0962%" y="591.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (2 samples, 0.31%)</title><rect x="43.8462%" y="565" width="0.3077%" height="15" fill="rgb(236,55,46)" fg:x="285" fg:w="2"/><text x="44.0962%" y="575.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (2 samples, 0.31%)</title><rect x="43.8462%" y="549" width="0.3077%" height="15" fill="rgb(245,60,19)" fg:x="285" fg:w="2"/><text x="44.0962%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.15%)</title><rect x="44.1538%" y="533" width="0.1538%" height="15" fill="rgb(215,158,9)" fg:x="287" fg:w="1"/><text x="44.4038%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.15%)</title><rect x="44.1538%" y="517" width="0.1538%" height="15" fill="rgb(223,143,42)" fg:x="287" fg:w="1"/><text x="44.4038%" y="527.50"></text></g><g><title>s4lib::data::datetime::captures_to_buffer_bytes (6 samples, 0.92%)</title><rect x="43.5385%" y="725" width="0.9231%" height="15" fill="rgb(241,188,28)" fg:x="283" fg:w="6"/><text x="43.7885%" y="735.50"></text></g><g><title>regex::regex::bytes::Captures::name (6 samples, 0.92%)</title><rect x="43.5385%" y="709" width="0.9231%" height="15" fill="rgb(227,58,29)" fg:x="283" fg:w="6"/><text x="43.7885%" y="719.50"></text></g><g><title>regex_automata::util::captures::Captures::get_group_by_name (6 samples, 0.92%)</title><rect x="43.5385%" y="693" width="0.9231%" height="15" fill="rgb(243,115,33)" fg:x="283" fg:w="6"/><text x="43.7885%" y="703.50"></text></g><g><title>regex_automata::util::captures::GroupInfo::to_index (6 samples, 0.92%)</title><rect x="43.5385%" y="677" width="0.9231%" height="15" fill="rgb(250,225,43)" fg:x="283" fg:w="6"/><text x="43.7885%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (6 samples, 0.92%)</title><rect x="43.5385%" y="661" width="0.9231%" height="15" fill="rgb(218,89,21)" fg:x="283" fg:w="6"/><text x="43.7885%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (6 samples, 0.92%)</title><rect x="43.5385%" y="645" width="0.9231%" height="15" fill="rgb(207,60,33)" fg:x="283" fg:w="6"/><text x="43.7885%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6 samples, 0.92%)</title><rect x="43.5385%" y="629" width="0.9231%" height="15" fill="rgb(207,224,35)" fg:x="283" fg:w="6"/><text x="43.7885%" y="639.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.77%)</title><rect x="43.6923%" y="613" width="0.7692%" height="15" fill="rgb(241,1,29)" fg:x="284" fg:w="5"/><text x="43.9423%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.77%)</title><rect x="43.6923%" y="597" width="0.7692%" height="15" fill="rgb(222,198,6)" fg:x="284" fg:w="5"/><text x="43.9423%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.31%)</title><rect x="44.1538%" y="581" width="0.3077%" height="15" fill="rgb(218,214,24)" fg:x="287" fg:w="2"/><text x="44.4038%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.31%)</title><rect x="44.1538%" y="565" width="0.3077%" height="15" fill="rgb(230,187,21)" fg:x="287" fg:w="2"/><text x="44.4038%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.31%)</title><rect x="44.1538%" y="549" width="0.3077%" height="15" fill="rgb(244,191,49)" fg:x="287" fg:w="2"/><text x="44.4038%" y="559.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::SparseTransitions::matches (1 samples, 0.15%)</title><rect x="44.4615%" y="517" width="0.1538%" height="15" fill="rgb(232,144,32)" fg:x="289" fg:w="1"/><text x="44.7115%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.15%)</title><rect x="44.4615%" y="501" width="0.1538%" height="15" fill="rgb(225,8,7)" fg:x="289" fg:w="1"/><text x="44.7115%" y="511.50"></text></g><g><title>regex_automata::nfa::thompson::backtrack::BoundedBacktracker::try_search_slots_imp (2 samples, 0.31%)</title><rect x="44.4615%" y="581" width="0.3077%" height="15" fill="rgb(254,24,16)" fg:x="289" fg:w="2"/><text x="44.7115%" y="591.50"></text></g><g><title>regex_automata::nfa::thompson::backtrack::BoundedBacktracker::search_imp (2 samples, 0.31%)</title><rect x="44.4615%" y="565" width="0.3077%" height="15" fill="rgb(207,186,34)" fg:x="289" fg:w="2"/><text x="44.7115%" y="575.50"></text></g><g><title>regex_automata::nfa::thompson::backtrack::BoundedBacktracker::backtrack (2 samples, 0.31%)</title><rect x="44.4615%" y="549" width="0.3077%" height="15" fill="rgb(240,43,20)" fg:x="289" fg:w="2"/><text x="44.7115%" y="559.50"></text></g><g><title>regex_automata::nfa::thompson::backtrack::BoundedBacktracker::step (2 samples, 0.31%)</title><rect x="44.4615%" y="533" width="0.3077%" height="15" fill="rgb(236,64,1)" fg:x="289" fg:w="2"/><text x="44.7115%" y="543.50"></text></g><g><title>regex_automata::meta::strategy::Core::search_slots_nofail (4 samples, 0.62%)</title><rect x="44.4615%" y="629" width="0.6154%" height="15" fill="rgb(248,164,40)" fg:x="289" fg:w="4"/><text x="44.7115%" y="639.50"></text></g><g><title>regex_automata::meta::wrappers::BoundedBacktrackerEngine::search_slots (4 samples, 0.62%)</title><rect x="44.4615%" y="613" width="0.6154%" height="15" fill="rgb(224,210,15)" fg:x="289" fg:w="4"/><text x="44.7115%" y="623.50"></text></g><g><title>regex_automata::nfa::thompson::backtrack::BoundedBacktracker::try_search_slots (4 samples, 0.62%)</title><rect x="44.4615%" y="597" width="0.6154%" height="15" fill="rgb(223,178,39)" fg:x="289" fg:w="4"/><text x="44.7115%" y="607.50"></text></g><g><title>regex_automata::meta::regex::Regex::captures (5 samples, 0.77%)</title><rect x="44.4615%" y="693" width="0.7692%" height="15" fill="rgb(219,198,6)" fg:x="289" fg:w="5"/><text x="44.7115%" y="703.50"></text></g><g><title>regex_automata::meta::regex::Regex::search_captures (5 samples, 0.77%)</title><rect x="44.4615%" y="677" width="0.7692%" height="15" fill="rgb(212,211,21)" fg:x="289" fg:w="5"/><text x="44.7115%" y="687.50"></text></g><g><title>regex_automata::meta::regex::Regex::search_slots (5 samples, 0.77%)</title><rect x="44.4615%" y="661" width="0.7692%" height="15" fill="rgb(243,12,43)" fg:x="289" fg:w="5"/><text x="44.7115%" y="671.50"></text></g><g><title>&lt;regex_automata::meta::strategy::Core as regex_automata::meta::strategy::Strategy&gt;::search_slots (5 samples, 0.77%)</title><rect x="44.4615%" y="645" width="0.7692%" height="15" fill="rgb(221,222,32)" fg:x="289" fg:w="5"/><text x="44.7115%" y="655.50"></text></g><g><title>regex::regex::bytes::Regex::captures (6 samples, 0.92%)</title><rect x="44.4615%" y="725" width="0.9231%" height="15" fill="rgb(233,29,12)" fg:x="289" fg:w="6"/><text x="44.7115%" y="735.50"></text></g><g><title>regex::regex::bytes::Regex::captures_at (6 samples, 0.92%)</title><rect x="44.4615%" y="709" width="0.9231%" height="15" fill="rgb(207,96,18)" fg:x="289" fg:w="6"/><text x="44.7115%" y="719.50"></text></g><g><title>regex_automata::util::captures::GroupInfo::to_index (1 samples, 0.15%)</title><rect x="45.3846%" y="693" width="0.1538%" height="15" fill="rgb(250,225,43)" fg:x="295" fg:w="1"/><text x="45.6346%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.15%)</title><rect x="45.3846%" y="677" width="0.1538%" height="15" fill="rgb(218,89,21)" fg:x="295" fg:w="1"/><text x="45.6346%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.15%)</title><rect x="45.3846%" y="661" width="0.1538%" height="15" fill="rgb(207,60,33)" fg:x="295" fg:w="1"/><text x="45.6346%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.15%)</title><rect x="45.3846%" y="645" width="0.1538%" height="15" fill="rgb(207,224,35)" fg:x="295" fg:w="1"/><text x="45.6346%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.15%)</title><rect x="45.3846%" y="629" width="0.1538%" height="15" fill="rgb(230,119,31)" fg:x="295" fg:w="1"/><text x="45.6346%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.15%)</title><rect x="45.3846%" y="613" width="0.1538%" height="15" fill="rgb(252,63,32)" fg:x="295" fg:w="1"/><text x="45.6346%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.15%)</title><rect x="45.3846%" y="597" width="0.1538%" height="15" fill="rgb(248,7,52)" fg:x="295" fg:w="1"/><text x="45.6346%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 0.15%)</title><rect x="45.3846%" y="581" width="0.1538%" height="15" fill="rgb(208,119,11)" fg:x="295" fg:w="1"/><text x="45.6346%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (1 samples, 0.15%)</title><rect x="45.3846%" y="565" width="0.1538%" height="15" fill="rgb(228,127,18)" fg:x="295" fg:w="1"/><text x="45.6346%" y="575.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.15%)</title><rect x="45.3846%" y="549" width="0.1538%" height="15" fill="rgb(235,214,16)" fg:x="295" fg:w="1"/><text x="45.6346%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.15%)</title><rect x="45.3846%" y="533" width="0.1538%" height="15" fill="rgb(224,197,7)" fg:x="295" fg:w="1"/><text x="45.6346%" y="543.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_neg (1 samples, 0.15%)</title><rect x="45.3846%" y="517" width="0.1538%" height="15" fill="rgb(214,108,6)" fg:x="295" fg:w="1"/><text x="45.6346%" y="527.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_sub (1 samples, 0.15%)</title><rect x="45.3846%" y="501" width="0.1538%" height="15" fill="rgb(216,195,51)" fg:x="295" fg:w="1"/><text x="45.6346%" y="511.50"></text></g><g><title>regex::regex::bytes::Captures::name (2 samples, 0.31%)</title><rect x="45.3846%" y="725" width="0.3077%" height="15" fill="rgb(227,58,29)" fg:x="295" fg:w="2"/><text x="45.6346%" y="735.50"></text></g><g><title>regex_automata::util::captures::Captures::get_group_by_name (2 samples, 0.31%)</title><rect x="45.3846%" y="709" width="0.3077%" height="15" fill="rgb(243,115,33)" fg:x="295" fg:w="2"/><text x="45.6346%" y="719.50"></text></g><g><title>s4lib::data::datetime::bytes_to_regex_to_datetime (22 samples, 3.38%)</title><rect x="42.4615%" y="741" width="3.3846%" height="15" fill="rgb(252,84,36)" fg:x="276" fg:w="22"/><text x="42.7115%" y="751.50">s4l..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_datetime_in_line (24 samples, 3.69%)</title><rect x="42.3077%" y="757" width="3.6923%" height="15" fill="rgb(212,53,9)" fg:x="275" fg:w="24"/><text x="42.5577%" y="767.50">s4li..</text></g><g><title>core::result::Result::Ok (1 samples, 0.15%)</title><rect x="45.8462%" y="741" width="0.1538%" height="15" fill="rgb(240,110,53)" fg:x="298" fg:w="1"/><text x="46.0962%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.15%)</title><rect x="46.0000%" y="741" width="0.1538%" height="15" fill="rgb(247,137,3)" fg:x="299" fg:w="1"/><text x="46.2500%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.15%)</title><rect x="46.0000%" y="725" width="0.1538%" height="15" fill="rgb(227,158,43)" fg:x="299" fg:w="1"/><text x="46.2500%" y="735.50"></text></g><g><title>itertools::Itertools::sorted_by (2 samples, 0.31%)</title><rect x="46.0000%" y="757" width="0.3077%" height="15" fill="rgb(225,164,23)" fg:x="299" fg:w="2"/><text x="46.2500%" y="767.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::parse_datetime_in_line (27 samples, 4.15%)</title><rect x="42.3077%" y="773" width="4.1538%" height="15" fill="rgb(234,54,15)" fg:x="275" fg:w="27"/><text x="42.5577%" y="783.50">s4lib..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (1 samples, 0.15%)</title><rect x="46.3077%" y="757" width="0.1538%" height="15" fill="rgb(226,167,9)" fg:x="301" fg:w="1"/><text x="46.5577%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (1 samples, 0.15%)</title><rect x="46.3077%" y="741" width="0.1538%" height="15" fill="rgb(231,42,29)" fg:x="301" fg:w="1"/><text x="46.5577%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.15%)</title><rect x="46.3077%" y="725" width="0.1538%" height="15" fill="rgb(232,211,42)" fg:x="301" fg:w="1"/><text x="46.5577%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.15%)</title><rect x="46.3077%" y="709" width="0.1538%" height="15" fill="rgb(214,146,48)" fg:x="301" fg:w="1"/><text x="46.5577%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="46.3077%" y="693" width="0.1538%" height="15" fill="rgb(212,159,3)" fg:x="301" fg:w="1"/><text x="46.5577%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="46.3077%" y="677" width="0.1538%" height="15" fill="rgb(231,142,39)" fg:x="301" fg:w="1"/><text x="46.5577%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.15%)</title><rect x="46.3077%" y="661" width="0.1538%" height="15" fill="rgb(249,2,22)" fg:x="301" fg:w="1"/><text x="46.5577%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.15%)</title><rect x="46.3077%" y="645" width="0.1538%" height="15" fill="rgb(254,53,35)" fg:x="301" fg:w="1"/><text x="46.5577%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.15%)</title><rect x="46.3077%" y="629" width="0.1538%" height="15" fill="rgb(237,133,22)" fg:x="301" fg:w="1"/><text x="46.5577%" y="639.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::parse_datetime_in_line_cached (29 samples, 4.46%)</title><rect x="42.3077%" y="789" width="4.4615%" height="15" fill="rgb(231,75,50)" fg:x="275" fg:w="29"/><text x="42.5577%" y="799.50">s4lib..</text></g><g><title>lru::LruCache&lt;K,V,S&gt;::get (2 samples, 0.31%)</title><rect x="46.4615%" y="773" width="0.3077%" height="15" fill="rgb(207,105,41)" fg:x="302" fg:w="2"/><text x="46.7115%" y="783.50"></text></g><g><title>lru::LruCache&lt;K,V,S&gt;::detach (2 samples, 0.31%)</title><rect x="46.4615%" y="757" width="0.3077%" height="15" fill="rgb(239,138,31)" fg:x="302" fg:w="2"/><text x="46.7115%" y="767.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::insert_sysline (1 samples, 0.15%)</title><rect x="46.7692%" y="789" width="0.1538%" height="15" fill="rgb(207,59,0)" fg:x="304" fg:w="1"/><text x="47.0192%" y="799.50"></text></g><g><title>rangemap::map::RangeMap&lt;K,V&gt;::insert (1 samples, 0.15%)</title><rect x="46.7692%" y="773" width="0.1538%" height="15" fill="rgb(216,177,54)" fg:x="304" fg:w="1"/><text x="47.0192%" y="783.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::range (1 samples, 0.15%)</title><rect x="46.7692%" y="757" width="0.1538%" height="15" fill="rgb(253,189,7)" fg:x="304" fg:w="1"/><text x="47.0192%" y="767.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::range_search (1 samples, 0.15%)</title><rect x="46.7692%" y="741" width="0.1538%" height="15" fill="rgb(231,205,12)" fg:x="304" fg:w="1"/><text x="47.0192%" y="751.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::find_leaf_edges_spanning_range (1 samples, 0.15%)</title><rect x="46.7692%" y="725" width="0.1538%" height="15" fill="rgb(254,228,40)" fg:x="304" fg:w="1"/><text x="47.0192%" y="735.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::check_store (1 samples, 0.15%)</title><rect x="46.9231%" y="789" width="0.1538%" height="15" fill="rgb(240,122,8)" fg:x="305" fg:w="1"/><text x="47.1731%" y="799.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.31%)</title><rect x="47.0769%" y="757" width="0.3077%" height="15" fill="rgb(213,87,31)" fg:x="306" fg:w="2"/><text x="47.3269%" y="767.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (2 samples, 0.31%)</title><rect x="47.0769%" y="741" width="0.3077%" height="15" fill="rgb(219,192,38)" fg:x="306" fg:w="2"/><text x="47.3269%" y="751.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (2 samples, 0.31%)</title><rect x="47.0769%" y="725" width="0.3077%" height="15" fill="rgb(217,165,36)" fg:x="306" fg:w="2"/><text x="47.3269%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (2 samples, 0.31%)</title><rect x="47.0769%" y="709" width="0.3077%" height="15" fill="rgb(220,202,26)" fg:x="306" fg:w="2"/><text x="47.3269%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (2 samples, 0.31%)</title><rect x="47.0769%" y="693" width="0.3077%" height="15" fill="rgb(233,132,38)" fg:x="306" fg:w="2"/><text x="47.3269%" y="703.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (2 samples, 0.31%)</title><rect x="47.0769%" y="677" width="0.3077%" height="15" fill="rgb(231,0,6)" fg:x="306" fg:w="2"/><text x="47.3269%" y="687.50"></text></g><g><title>s4lib::readers::linereader::LineReader::insert_line (3 samples, 0.46%)</title><rect x="47.0769%" y="773" width="0.4615%" height="15" fill="rgb(244,220,49)" fg:x="306" fg:w="3"/><text x="47.3269%" y="783.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="47.3846%" y="757" width="0.1538%" height="15" fill="rgb(247,105,42)" fg:x="308" fg:w="1"/><text x="47.6346%" y="767.50"></text></g><g><title>s4lib::readers::linereader::LineReader::get_linep (1 samples, 0.15%)</title><rect x="47.5385%" y="773" width="0.1538%" height="15" fill="rgb(238,59,24)" fg:x="309" fg:w="1"/><text x="47.7885%" y="783.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::range (1 samples, 0.15%)</title><rect x="47.5385%" y="757" width="0.1538%" height="15" fill="rgb(253,189,7)" fg:x="309" fg:w="1"/><text x="47.7885%" y="767.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::range_search (1 samples, 0.15%)</title><rect x="47.5385%" y="741" width="0.1538%" height="15" fill="rgb(231,205,12)" fg:x="309" fg:w="1"/><text x="47.7885%" y="751.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::find_leaf_edges_spanning_range (1 samples, 0.15%)</title><rect x="47.5385%" y="725" width="0.1538%" height="15" fill="rgb(254,228,40)" fg:x="309" fg:w="1"/><text x="47.7885%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree_for_bifurcation (1 samples, 0.15%)</title><rect x="47.5385%" y="709" width="0.1538%" height="15" fill="rgb(224,149,14)" fg:x="309" fg:w="1"/><text x="47.7885%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_lower_bound_index (1 samples, 0.15%)</title><rect x="47.5385%" y="693" width="0.1538%" height="15" fill="rgb(234,13,12)" fg:x="309" fg:w="1"/><text x="47.7885%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1 samples, 0.15%)</title><rect x="47.5385%" y="677" width="0.1538%" height="15" fill="rgb(233,132,38)" fg:x="309" fg:w="1"/><text x="47.7885%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="47.5385%" y="661" width="0.1538%" height="15" fill="rgb(210,50,14)" fg:x="309" fg:w="1"/><text x="47.7885%" y="671.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="47.5385%" y="645" width="0.1538%" height="15" fill="rgb(236,210,2)" fg:x="309" fg:w="1"/><text x="47.7885%" y="655.50"></text></g><g><title>s4lib::readers::linereader::LineReader::check_store_LRU (1 samples, 0.15%)</title><rect x="47.6923%" y="773" width="0.1538%" height="15" fill="rgb(208,26,7)" fg:x="310" fg:w="1"/><text x="47.9423%" y="783.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="47.6923%" y="757" width="0.1538%" height="15" fill="rgb(247,105,42)" fg:x="310" fg:w="1"/><text x="47.9423%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.15%)</title><rect x="47.6923%" y="741" width="0.1538%" height="15" fill="rgb(205,16,17)" fg:x="310" fg:w="1"/><text x="47.9423%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.15%)</title><rect x="47.6923%" y="725" width="0.1538%" height="15" fill="rgb(233,140,51)" fg:x="310" fg:w="1"/><text x="47.9423%" y="735.50"></text></g><g><title>s4lib::readers::linereader::LineReader::check_store (1 samples, 0.15%)</title><rect x="47.8462%" y="773" width="0.1538%" height="15" fill="rgb(215,197,25)" fg:x="311" fg:w="1"/><text x="48.0962%" y="783.50"></text></g><g><title>s4lib::readers::linereader::LineReader::get_linep (1 samples, 0.15%)</title><rect x="47.8462%" y="757" width="0.1538%" height="15" fill="rgb(238,59,24)" fg:x="311" fg:w="1"/><text x="48.0962%" y="767.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::range (1 samples, 0.15%)</title><rect x="47.8462%" y="741" width="0.1538%" height="15" fill="rgb(253,189,7)" fg:x="311" fg:w="1"/><text x="48.0962%" y="751.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::range_search (1 samples, 0.15%)</title><rect x="47.8462%" y="725" width="0.1538%" height="15" fill="rgb(231,205,12)" fg:x="311" fg:w="1"/><text x="48.0962%" y="735.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::find_leaf_edges_spanning_range (1 samples, 0.15%)</title><rect x="47.8462%" y="709" width="0.1538%" height="15" fill="rgb(254,228,40)" fg:x="311" fg:w="1"/><text x="48.0962%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree_for_bifurcation (1 samples, 0.15%)</title><rect x="47.8462%" y="693" width="0.1538%" height="15" fill="rgb(224,149,14)" fg:x="311" fg:w="1"/><text x="48.0962%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_lower_bound_index (1 samples, 0.15%)</title><rect x="47.8462%" y="677" width="0.1538%" height="15" fill="rgb(234,13,12)" fg:x="311" fg:w="1"/><text x="48.0962%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1 samples, 0.15%)</title><rect x="47.8462%" y="661" width="0.1538%" height="15" fill="rgb(233,132,38)" fg:x="311" fg:w="1"/><text x="48.0962%" y="671.50"></text></g><g><title>s4lib::readers::linereader::LineReader::block_index_at_file_offset (1 samples, 0.15%)</title><rect x="48.0000%" y="773" width="0.1538%" height="15" fill="rgb(230,179,12)" fg:x="312" fg:w="1"/><text x="48.2500%" y="783.50"></text></g><g><title>s4lib::readers::blockreader::BlockReader::block_index_at_file_offset (1 samples, 0.15%)</title><rect x="48.0000%" y="757" width="0.1538%" height="15" fill="rgb(220,225,37)" fg:x="312" fg:w="1"/><text x="48.2500%" y="767.50"></text></g><g><title>s4lib::readers::blockreader::BlockReader::block_offset_at_file_offset (1 samples, 0.15%)</title><rect x="48.0000%" y="741" width="0.1538%" height="15" fill="rgb(245,212,10)" fg:x="312" fg:w="1"/><text x="48.2500%" y="751.50"></text></g><g><title>s4lib::readers::blockreader::BlockReader::read_block (1 samples, 0.15%)</title><rect x="48.1538%" y="773" width="0.1538%" height="15" fill="rgb(226,163,28)" fg:x="313" fg:w="1"/><text x="48.4038%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (2 samples, 0.31%)</title><rect x="48.3077%" y="773" width="0.3077%" height="15" fill="rgb(215,149,39)" fg:x="314" fg:w="2"/><text x="48.5577%" y="783.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.31%)</title><rect x="48.3077%" y="757" width="0.3077%" height="15" fill="rgb(250,51,46)" fg:x="314" fg:w="2"/><text x="48.5577%" y="767.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.31%)</title><rect x="48.3077%" y="741" width="0.3077%" height="15" fill="rgb(254,116,45)" fg:x="314" fg:w="2"/><text x="48.5577%" y="751.50"></text></g><g><title>s4lib::readers::linereader::LineReader::find_line (21 samples, 3.23%)</title><rect x="47.0769%" y="789" width="3.2308%" height="15" fill="rgb(238,98,28)" fg:x="306" fg:w="21"/><text x="47.3269%" y="799.50">s4l..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.15%)</title><rect x="50.3077%" y="757" width="0.1538%" height="15" fill="rgb(228,156,5)" fg:x="327" fg:w="1"/><text x="50.5577%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (1 samples, 0.15%)</title><rect x="50.3077%" y="741" width="0.1538%" height="15" fill="rgb(236,164,17)" fg:x="327" fg:w="1"/><text x="50.5577%" y="751.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (1 samples, 0.15%)</title><rect x="50.3077%" y="725" width="0.1538%" height="15" fill="rgb(209,5,27)" fg:x="327" fg:w="1"/><text x="50.5577%" y="735.50"></text></g><g><title>hashbrown::raw::RawTableInner::fix_insert_slot (1 samples, 0.15%)</title><rect x="50.3077%" y="709" width="0.1538%" height="15" fill="rgb(235,172,34)" fg:x="327" fg:w="1"/><text x="50.5577%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_bucket_full (1 samples, 0.15%)</title><rect x="50.3077%" y="693" width="0.1538%" height="15" fill="rgb(216,46,33)" fg:x="327" fg:w="1"/><text x="50.5577%" y="703.50"></text></g><g><title>hashbrown::raw::is_full (1 samples, 0.15%)</title><rect x="50.3077%" y="677" width="0.1538%" height="15" fill="rgb(239,41,17)" fg:x="327" fg:w="1"/><text x="50.5577%" y="687.50"></text></g><g><title>lru::LruCache&lt;K,V,S&gt;::put (2 samples, 0.31%)</title><rect x="50.3077%" y="789" width="0.3077%" height="15" fill="rgb(244,170,33)" fg:x="327" fg:w="2"/><text x="50.5577%" y="799.50"></text></g><g><title>lru::LruCache&lt;K,V,S&gt;::capturing_put (2 samples, 0.31%)</title><rect x="50.3077%" y="773" width="0.3077%" height="15" fill="rgb(218,66,15)" fg:x="327" fg:w="2"/><text x="50.5577%" y="783.50"></text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::find_sysline_between_datetime_filters (55 samples, 8.46%)</title><rect x="42.3077%" y="869" width="8.4615%" height="15" fill="rgb(205,32,8)" fg:x="275" fg:w="55"/><text x="42.5577%" y="879.50">s4lib::reade..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_sysline_between_datetime_filters (55 samples, 8.46%)</title><rect x="42.3077%" y="853" width="8.4615%" height="15" fill="rgb(241,74,20)" fg:x="275" fg:w="55"/><text x="42.5577%" y="863.50">s4lib::reade..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_sysline_at_datetime_filter_binary_search (55 samples, 8.46%)</title><rect x="42.3077%" y="837" width="8.4615%" height="15" fill="rgb(206,70,45)" fg:x="275" fg:w="55"/><text x="42.5577%" y="847.50">s4lib::reade..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_sysline (55 samples, 8.46%)</title><rect x="42.3077%" y="821" width="8.4615%" height="15" fill="rgb(223,164,31)" fg:x="275" fg:w="55"/><text x="42.5577%" y="831.50">s4lib::reade..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_sysline_year (55 samples, 8.46%)</title><rect x="42.3077%" y="805" width="8.4615%" height="15" fill="rgb(234,169,18)" fg:x="275" fg:w="55"/><text x="42.5577%" y="815.50">s4lib::reade..</text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::take::Take&lt;alloc::vec::into_iter::IntoIter&lt;s4lib::data::line::LinePart&gt;&gt;&gt; (1 samples, 0.15%)</title><rect x="50.7692%" y="773" width="0.1538%" height="15" fill="rgb(227,155,44)" fg:x="330" fg:w="1"/><text x="51.0192%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;s4lib::data::line::LinePart&gt;&gt; (1 samples, 0.15%)</title><rect x="50.7692%" y="757" width="0.1538%" height="15" fill="rgb(214,46,18)" fg:x="330" fg:w="1"/><text x="51.0192%" y="767.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="50.7692%" y="741" width="0.1538%" height="15" fill="rgb(240,119,4)" fg:x="330" fg:w="1"/><text x="51.0192%" y="751.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (1 samples, 0.15%)</title><rect x="50.7692%" y="725" width="0.1538%" height="15" fill="rgb(215,100,25)" fg:x="330" fg:w="1"/><text x="51.0192%" y="735.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (1 samples, 0.15%)</title><rect x="50.7692%" y="709" width="0.1538%" height="15" fill="rgb(206,16,51)" fg:x="330" fg:w="1"/><text x="51.0192%" y="719.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (1 samples, 0.15%)</title><rect x="50.9231%" y="709" width="0.1538%" height="15" fill="rgb(223,155,52)" fg:x="331" fg:w="1"/><text x="51.1731%" y="719.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (1 samples, 0.15%)</title><rect x="50.9231%" y="693" width="0.1538%" height="15" fill="rgb(212,166,45)" fg:x="331" fg:w="1"/><text x="51.1731%" y="703.50"></text></g><g><title>alloc::collections::btree::node::BalancingContext&lt;K,V&gt;::merge_tracking_child_edge (1 samples, 0.15%)</title><rect x="50.9231%" y="677" width="0.1538%" height="15" fill="rgb(253,74,36)" fg:x="331" fg:w="1"/><text x="51.1731%" y="687.50"></text></g><g><title>alloc::collections::btree::node::BalancingContext&lt;K,V&gt;::merge_tracking_child (1 samples, 0.15%)</title><rect x="50.9231%" y="661" width="0.1538%" height="15" fill="rgb(241,205,47)" fg:x="331" fg:w="1"/><text x="51.1731%" y="671.50"></text></g><g><title>alloc::collections::btree::node::BalancingContext&lt;K,V&gt;::do_merge (1 samples, 0.15%)</title><rect x="50.9231%" y="645" width="0.1538%" height="15" fill="rgb(246,103,50)" fg:x="331" fg:w="1"/><text x="51.1731%" y="655.50"></text></g><g><title>__GI___libc_free (1 samples, 0.15%)</title><rect x="50.9231%" y="629" width="0.1538%" height="15" fill="rgb(247,8,17)" fg:x="331" fg:w="1"/><text x="51.1731%" y="639.50"></text></g><g><title>_int_free (1 samples, 0.15%)</title><rect x="50.9231%" y="613" width="0.1538%" height="15" fill="rgb(221,113,48)" fg:x="331" fg:w="1"/><text x="51.1731%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove (2 samples, 0.31%)</title><rect x="50.9231%" y="773" width="0.3077%" height="15" fill="rgb(224,108,5)" fg:x="331" fg:w="2"/><text x="51.1731%" y="783.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove_entry (2 samples, 0.31%)</title><rect x="50.9231%" y="757" width="0.3077%" height="15" fill="rgb(245,136,18)" fg:x="331" fg:w="2"/><text x="51.1731%" y="767.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::remove_entry (2 samples, 0.31%)</title><rect x="50.9231%" y="741" width="0.3077%" height="15" fill="rgb(227,63,43)" fg:x="331" fg:w="2"/><text x="51.1731%" y="751.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::remove_kv (2 samples, 0.31%)</title><rect x="50.9231%" y="725" width="0.3077%" height="15" fill="rgb(211,181,27)" fg:x="331" fg:w="2"/><text x="51.1731%" y="735.50"></text></g><g><title>s4lib::readers::linereader::LineReader::drop_line (4 samples, 0.62%)</title><rect x="50.7692%" y="789" width="0.6154%" height="15" fill="rgb(246,194,20)" fg:x="330" fg:w="4"/><text x="51.0192%" y="799.50"></text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::drop_data_try (5 samples, 0.77%)</title><rect x="50.7692%" y="869" width="0.7692%" height="15" fill="rgb(244,39,16)" fg:x="330" fg:w="5"/><text x="51.0192%" y="879.50"></text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::drop_data (5 samples, 0.77%)</title><rect x="50.7692%" y="853" width="0.7692%" height="15" fill="rgb(215,155,30)" fg:x="330" fg:w="5"/><text x="51.0192%" y="863.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::drop_data (5 samples, 0.77%)</title><rect x="50.7692%" y="837" width="0.7692%" height="15" fill="rgb(244,67,10)" fg:x="330" fg:w="5"/><text x="51.0192%" y="847.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::drop_sysline (5 samples, 0.77%)</title><rect x="50.7692%" y="821" width="0.7692%" height="15" fill="rgb(224,6,32)" fg:x="330" fg:w="5"/><text x="51.0192%" y="831.50"></text></g><g><title>s4lib::readers::linereader::LineReader::drop_lines (5 samples, 0.77%)</title><rect x="50.7692%" y="805" width="0.7692%" height="15" fill="rgb(214,84,44)" fg:x="330" fg:w="5"/><text x="51.0192%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::sync::Arc&lt;s4lib::data::line::Line&gt;&gt;&gt; (1 samples, 0.15%)</title><rect x="51.3846%" y="789" width="0.1538%" height="15" fill="rgb(247,12,38)" fg:x="334" fg:w="1"/><text x="51.6346%" y="799.50"></text></g><g><title>__GI___libc_free (1 samples, 0.15%)</title><rect x="51.3846%" y="773" width="0.1538%" height="15" fill="rgb(247,8,17)" fg:x="334" fg:w="1"/><text x="51.6346%" y="783.50"></text></g><g><title>_int_free (1 samples, 0.15%)</title><rect x="51.3846%" y="757" width="0.1538%" height="15" fill="rgb(221,113,48)" fg:x="334" fg:w="1"/><text x="51.6346%" y="767.50"></text></g><g><title>std::sys::unix::futex::futex_wake (1 samples, 0.15%)</title><rect x="51.5385%" y="693" width="0.1538%" height="15" fill="rgb(220,16,22)" fg:x="335" fg:w="1"/><text x="51.7885%" y="703.50"></text></g><g><title>syscall (1 samples, 0.15%)</title><rect x="51.5385%" y="677" width="0.1538%" height="15" fill="rgb(207,84,5)" fg:x="335" fg:w="1"/><text x="51.7885%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="51.5385%" y="661" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="335" fg:w="1"/><text x="51.7885%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="51.5385%" y="645" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="335" fg:w="1"/><text x="51.7885%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="51.5385%" y="629" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="335" fg:w="1"/><text x="51.7885%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="51.5385%" y="613" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="335" fg:w="1"/><text x="51.7885%" y="623.50"></text></g><g><title>crossbeam_channel::waker::Waker::try_select (2 samples, 0.31%)</title><rect x="51.5385%" y="789" width="0.3077%" height="15" fill="rgb(226,5,34)" fg:x="335" fg:w="2"/><text x="51.7885%" y="799.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (2 samples, 0.31%)</title><rect x="51.5385%" y="773" width="0.3077%" height="15" fill="rgb(232,40,12)" fg:x="335" fg:w="2"/><text x="51.7885%" y="783.50"></text></g><g><title>crossbeam_channel::waker::Waker::try_select::{{closure}} (2 samples, 0.31%)</title><rect x="51.5385%" y="757" width="0.3077%" height="15" fill="rgb(213,3,5)" fg:x="335" fg:w="2"/><text x="51.7885%" y="767.50"></text></g><g><title>crossbeam_channel::context::Context::unpark (2 samples, 0.31%)</title><rect x="51.5385%" y="741" width="0.3077%" height="15" fill="rgb(234,126,29)" fg:x="335" fg:w="2"/><text x="51.7885%" y="751.50"></text></g><g><title>std::thread::Thread::unpark (2 samples, 0.31%)</title><rect x="51.5385%" y="725" width="0.3077%" height="15" fill="rgb(211,180,25)" fg:x="335" fg:w="2"/><text x="51.7885%" y="735.50"></text></g><g><title>std::sys_common::thread_parker::futex::Parker::unpark (2 samples, 0.31%)</title><rect x="51.5385%" y="709" width="0.3077%" height="15" fill="rgb(226,145,31)" fg:x="335" fg:w="2"/><text x="51.7885%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;crossbeam_channel::waker::Waker&gt;&gt; (1 samples, 0.15%)</title><rect x="51.8462%" y="789" width="0.1538%" height="15" fill="rgb(247,227,24)" fg:x="337" fg:w="1"/><text x="52.0962%" y="799.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="51.8462%" y="773" width="0.1538%" height="15" fill="rgb(212,177,19)" fg:x="337" fg:w="1"/><text x="52.0962%" y="783.50"></text></g><g><title>std::sync::poison::Flag::done (1 samples, 0.15%)</title><rect x="51.8462%" y="757" width="0.1538%" height="15" fill="rgb(232,10,11)" fg:x="337" fg:w="1"/><text x="52.0962%" y="767.50"></text></g><g><title>crossbeam_channel::waker::SyncWaker::notify (4 samples, 0.62%)</title><rect x="51.5385%" y="805" width="0.6154%" height="15" fill="rgb(222,105,38)" fg:x="335" fg:w="4"/><text x="51.7885%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;crossbeam_channel::waker::Entry&gt;&gt; (1 samples, 0.15%)</title><rect x="52.0000%" y="789" width="0.1538%" height="15" fill="rgb(241,87,2)" fg:x="338" fg:w="1"/><text x="52.2500%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_channel::waker::Entry&gt; (1 samples, 0.15%)</title><rect x="52.0000%" y="773" width="0.1538%" height="15" fill="rgb(211,110,50)" fg:x="338" fg:w="1"/><text x="52.2500%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_channel::context::Context&gt; (1 samples, 0.15%)</title><rect x="52.0000%" y="757" width="0.1538%" height="15" fill="rgb(208,207,32)" fg:x="338" fg:w="1"/><text x="52.2500%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;crossbeam_channel::context::Inner&gt;&gt; (1 samples, 0.15%)</title><rect x="52.0000%" y="741" width="0.1538%" height="15" fill="rgb(212,156,49)" fg:x="338" fg:w="1"/><text x="52.2500%" y="751.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="52.0000%" y="725" width="0.1538%" height="15" fill="rgb(220,153,15)" fg:x="338" fg:w="1"/><text x="52.2500%" y="735.50"></text></g><g><title>crossbeam_channel::flavors::array::Channel&lt;T&gt;::write (5 samples, 0.77%)</title><rect x="51.5385%" y="821" width="0.7692%" height="15" fill="rgb(217,57,9)" fg:x="335" fg:w="5"/><text x="51.7885%" y="831.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.15%)</title><rect x="52.1538%" y="805" width="0.1538%" height="15" fill="rgb(205,52,49)" fg:x="339" fg:w="1"/><text x="52.4038%" y="815.50"></text></g><g><title>core::ptr::write (1 samples, 0.15%)</title><rect x="52.1538%" y="789" width="0.1538%" height="15" fill="rgb(209,143,44)" fg:x="339" fg:w="1"/><text x="52.4038%" y="799.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.15%)</title><rect x="52.1538%" y="773" width="0.1538%" height="15" fill="rgb(217,126,36)" fg:x="339" fg:w="1"/><text x="52.4038%" y="783.50"></text></g><g><title>s4::chan_send (6 samples, 0.92%)</title><rect x="51.5385%" y="869" width="0.9231%" height="15" fill="rgb(244,11,25)" fg:x="335" fg:w="6"/><text x="51.7885%" y="879.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (6 samples, 0.92%)</title><rect x="51.5385%" y="853" width="0.9231%" height="15" fill="rgb(211,156,23)" fg:x="335" fg:w="6"/><text x="51.7885%" y="863.50"></text></g><g><title>crossbeam_channel::flavors::array::Channel&lt;T&gt;::send (6 samples, 0.92%)</title><rect x="51.5385%" y="837" width="0.9231%" height="15" fill="rgb(239,129,18)" fg:x="335" fg:w="6"/><text x="51.7885%" y="847.50"></text></g><g><title>crossbeam_channel::context::Context::with (1 samples, 0.15%)</title><rect x="52.3077%" y="821" width="0.1538%" height="15" fill="rgb(249,203,42)" fg:x="340" fg:w="1"/><text x="52.5577%" y="831.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.15%)</title><rect x="52.3077%" y="805" width="0.1538%" height="15" fill="rgb(235,136,14)" fg:x="340" fg:w="1"/><text x="52.5577%" y="815.50"></text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (1 samples, 0.15%)</title><rect x="52.3077%" y="789" width="0.1538%" height="15" fill="rgb(251,136,16)" fg:x="340" fg:w="1"/><text x="52.5577%" y="799.50"></text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (1 samples, 0.15%)</title><rect x="52.3077%" y="773" width="0.1538%" height="15" fill="rgb(251,136,16)" fg:x="340" fg:w="1"/><text x="52.5577%" y="783.50"></text></g><g><title>crossbeam_channel::flavors::array::Channel&lt;T&gt;::send::{{closure}} (1 samples, 0.15%)</title><rect x="52.3077%" y="757" width="0.1538%" height="15" fill="rgb(249,130,37)" fg:x="340" fg:w="1"/><text x="52.5577%" y="767.50"></text></g><g><title>crossbeam_channel::context::Context::wait_until (1 samples, 0.15%)</title><rect x="52.3077%" y="741" width="0.1538%" height="15" fill="rgb(218,28,27)" fg:x="340" fg:w="1"/><text x="52.5577%" y="751.50"></text></g><g><title>std::thread::park (1 samples, 0.15%)</title><rect x="52.3077%" y="725" width="0.1538%" height="15" fill="rgb(253,209,8)" fg:x="340" fg:w="1"/><text x="52.5577%" y="735.50"></text></g><g><title>std::sys_common::thread_parker::futex::Parker::park (1 samples, 0.15%)</title><rect x="52.3077%" y="709" width="0.1538%" height="15" fill="rgb(252,86,25)" fg:x="340" fg:w="1"/><text x="52.5577%" y="719.50"></text></g><g><title>std::sys::unix::futex::futex_wait (1 samples, 0.15%)</title><rect x="52.3077%" y="693" width="0.1538%" height="15" fill="rgb(219,16,26)" fg:x="340" fg:w="1"/><text x="52.5577%" y="703.50"></text></g><g><title>syscall (1 samples, 0.15%)</title><rect x="52.3077%" y="677" width="0.1538%" height="15" fill="rgb(207,84,5)" fg:x="340" fg:w="1"/><text x="52.5577%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="52.3077%" y="661" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="340" fg:w="1"/><text x="52.5577%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="52.3077%" y="645" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="340" fg:w="1"/><text x="52.5577%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="52.3077%" y="629" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="340" fg:w="1"/><text x="52.5577%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="52.3077%" y="613" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="340" fg:w="1"/><text x="52.5577%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="52.3077%" y="597" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="340" fg:w="1"/><text x="52.5577%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="52.3077%" y="581" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="340" fg:w="1"/><text x="52.5577%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="52.3077%" y="565" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="340" fg:w="1"/><text x="52.5577%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="52.3077%" y="549" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="340" fg:w="1"/><text x="52.5577%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="52.3077%" y="533" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="340" fg:w="1"/><text x="52.5577%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="52.3077%" y="517" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="340" fg:w="1"/><text x="52.5577%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="52.3077%" y="501" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="340" fg:w="1"/><text x="52.5577%" y="511.50"></text></g><g><title>__clone3 (228 samples, 35.08%)</title><rect x="17.5385%" y="1125" width="35.0769%" height="15" fill="rgb(252,169,8)" fg:x="114" fg:w="228"/><text x="17.7885%" y="1135.50">__clone3</text></g><g><title>start_thread (228 samples, 35.08%)</title><rect x="17.5385%" y="1109" width="35.0769%" height="15" fill="rgb(209,148,13)" fg:x="114" fg:w="228"/><text x="17.7885%" y="1119.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (228 samples, 35.08%)</title><rect x="17.5385%" y="1093" width="35.0769%" height="15" fill="rgb(215,36,0)" fg:x="114" fg:w="228"/><text x="17.7885%" y="1103.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (228 samples, 35.08%)</title><rect x="17.5385%" y="1077" width="35.0769%" height="15" fill="rgb(228,202,16)" fg:x="114" fg:w="228"/><text x="17.7885%" y="1087.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Ar..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (228 samples, 35.08%)</title><rect x="17.5385%" y="1061" width="35.0769%" height="15" fill="rgb(228,202,16)" fg:x="114" fg:w="228"/><text x="17.7885%" y="1071.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Ar..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (228 samples, 35.08%)</title><rect x="17.5385%" y="1045" width="35.0769%" height="15" fill="rgb(218,104,40)" fg:x="114" fg:w="228"/><text x="17.7885%" y="1055.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (228 samples, 35.08%)</title><rect x="17.5385%" y="1029" width="35.0769%" height="15" fill="rgb(249,4,49)" fg:x="114" fg:w="228"/><text x="17.7885%" y="1039.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>std::panic::catch_unwind (228 samples, 35.08%)</title><rect x="17.5385%" y="1013" width="35.0769%" height="15" fill="rgb(216,75,8)" fg:x="114" fg:w="228"/><text x="17.7885%" y="1023.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (228 samples, 35.08%)</title><rect x="17.5385%" y="997" width="35.0769%" height="15" fill="rgb(212,61,29)" fg:x="114" fg:w="228"/><text x="17.7885%" y="1007.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (228 samples, 35.08%)</title><rect x="17.5385%" y="981" width="35.0769%" height="15" fill="rgb(232,162,46)" fg:x="114" fg:w="228"/><text x="17.7885%" y="991.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (228 samples, 35.08%)</title><rect x="17.5385%" y="965" width="35.0769%" height="15" fill="rgb(230,83,13)" fg:x="114" fg:w="228"/><text x="17.7885%" y="975.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::o..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (228 samples, 35.08%)</title><rect x="17.5385%" y="949" width="35.0769%" height="15" fill="rgb(214,132,49)" fg:x="114" fg:w="228"/><text x="17.7885%" y="959.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{{cl..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (228 samples, 35.08%)</title><rect x="17.5385%" y="933" width="35.0769%" height="15" fill="rgb(210,88,34)" fg:x="114" fg:w="228"/><text x="17.7885%" y="943.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>s4::processing_loop::{{closure}} (228 samples, 35.08%)</title><rect x="17.5385%" y="917" width="35.0769%" height="15" fill="rgb(245,19,23)" fg:x="114" fg:w="228"/><text x="17.7885%" y="927.50">s4::processing_loop::{{closure}}</text></g><g><title>s4::exec_fileprocessor_thread (228 samples, 35.08%)</title><rect x="17.5385%" y="901" width="35.0769%" height="15" fill="rgb(245,49,27)" fg:x="114" fg:w="228"/><text x="17.7885%" y="911.50">s4::exec_fileprocessor_thread</text></g><g><title>s4::exec_syslogprocessor (228 samples, 35.08%)</title><rect x="17.5385%" y="885" width="35.0769%" height="15" fill="rgb(229,116,34)" fg:x="114" fg:w="228"/><text x="17.7885%" y="895.50">s4::exec_syslogprocessor</text></g><g><title>core::ptr::drop_in_place&lt;s4lib::readers::syslogprocessor::SyslogProcessor&gt; (1 samples, 0.15%)</title><rect x="52.4615%" y="869" width="0.1538%" height="15" fill="rgb(237,27,11)" fg:x="341" fg:w="1"/><text x="52.7115%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;s4lib::readers::syslinereader::SyslineReader&gt; (1 samples, 0.15%)</title><rect x="52.4615%" y="853" width="0.1538%" height="15" fill="rgb(234,157,11)" fg:x="341" fg:w="1"/><text x="52.7115%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;s4lib::readers::linereader::LineReader&gt; (1 samples, 0.15%)</title><rect x="52.4615%" y="837" width="0.1538%" height="15" fill="rgb(244,46,42)" fg:x="341" fg:w="1"/><text x="52.7115%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;u64,u64&gt;&gt; (1 samples, 0.15%)</title><rect x="52.4615%" y="821" width="0.1538%" height="15" fill="rgb(247,127,3)" fg:x="341" fg:w="1"/><text x="52.7115%" y="831.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="52.4615%" y="805" width="0.1538%" height="15" fill="rgb(225,171,22)" fg:x="341" fg:w="1"/><text x="52.7115%" y="815.50"></text></g><g><title>core::mem::drop (1 samples, 0.15%)</title><rect x="52.4615%" y="789" width="0.1538%" height="15" fill="rgb(253,152,51)" fg:x="341" fg:w="1"/><text x="52.7115%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;u64,u64&gt;&gt; (1 samples, 0.15%)</title><rect x="52.4615%" y="773" width="0.1538%" height="15" fill="rgb(233,203,53)" fg:x="341" fg:w="1"/><text x="52.7115%" y="783.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="52.4615%" y="757" width="0.1538%" height="15" fill="rgb(240,72,17)" fg:x="341" fg:w="1"/><text x="52.7115%" y="767.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.15%)</title><rect x="52.4615%" y="741" width="0.1538%" height="15" fill="rgb(205,132,33)" fg:x="341" fg:w="1"/><text x="52.7115%" y="751.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (1 samples, 0.15%)</title><rect x="52.4615%" y="725" width="0.1538%" height="15" fill="rgb(238,93,36)" fg:x="341" fg:w="1"/><text x="52.7115%" y="735.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (1 samples, 0.15%)</title><rect x="52.4615%" y="709" width="0.1538%" height="15" fill="rgb(251,197,21)" fg:x="341" fg:w="1"/><text x="52.7115%" y="719.50"></text></g><g><title>alloc::collections::btree::mem::replace (1 samples, 0.15%)</title><rect x="52.4615%" y="693" width="0.1538%" height="15" fill="rgb(225,213,27)" fg:x="341" fg:w="1"/><text x="52.7115%" y="703.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::{{closure}} (1 samples, 0.15%)</title><rect x="52.4615%" y="677" width="0.1538%" height="15" fill="rgb(220,34,53)" fg:x="341" fg:w="1"/><text x="52.7115%" y="687.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (1 samples, 0.15%)</title><rect x="52.4615%" y="661" width="0.1538%" height="15" fill="rgb(233,214,23)" fg:x="341" fg:w="1"/><text x="52.7115%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (1 samples, 0.15%)</title><rect x="52.4615%" y="645" width="0.1538%" height="15" fill="rgb(220,51,27)" fg:x="341" fg:w="1"/><text x="52.7115%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.15%)</title><rect x="52.4615%" y="629" width="0.1538%" height="15" fill="rgb(238,77,31)" fg:x="341" fg:w="1"/><text x="52.7115%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.15%)</title><rect x="52.4615%" y="613" width="0.1538%" height="15" fill="rgb(227,15,28)" fg:x="341" fg:w="1"/><text x="52.7115%" y="623.50"></text></g><g><title>__GI___libc_free (1 samples, 0.15%)</title><rect x="52.4615%" y="597" width="0.1538%" height="15" fill="rgb(247,8,17)" fg:x="341" fg:w="1"/><text x="52.7115%" y="607.50"></text></g><g><title>_int_free (1 samples, 0.15%)</title><rect x="52.4615%" y="581" width="0.1538%" height="15" fill="rgb(221,113,48)" fg:x="341" fg:w="1"/><text x="52.7115%" y="591.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (1 samples, 0.15%)</title><rect x="52.6154%" y="645" width="0.1538%" height="15" fill="rgb(210,105,37)" fg:x="342" fg:w="1"/><text x="52.8654%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="52.6154%" y="629" width="0.1538%" height="15" fill="rgb(214,109,53)" fg:x="342" fg:w="1"/><text x="52.8654%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.15%)</title><rect x="52.6154%" y="613" width="0.1538%" height="15" fill="rgb(254,35,30)" fg:x="342" fg:w="1"/><text x="52.8654%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.15%)</title><rect x="52.6154%" y="597" width="0.1538%" height="15" fill="rgb(226,169,23)" fg:x="342" fg:w="1"/><text x="52.8654%" y="607.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (1 samples, 0.15%)</title><rect x="52.6154%" y="581" width="0.1538%" height="15" fill="rgb(205,130,14)" fg:x="342" fg:w="1"/><text x="52.8654%" y="591.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.15%)</title><rect x="52.6154%" y="565" width="0.1538%" height="15" fill="rgb(213,34,18)" fg:x="342" fg:w="1"/><text x="52.8654%" y="575.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class (1 samples, 0.15%)</title><rect x="52.6154%" y="549" width="0.1538%" height="15" fill="rgb(246,38,12)" fg:x="342" fg:w="1"/><text x="52.8654%" y="559.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::add_sparse (1 samples, 0.15%)</title><rect x="52.6154%" y="533" width="0.1538%" height="15" fill="rgb(227,211,41)" fg:x="342" fg:w="1"/><text x="52.8654%" y="543.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add_sparse (1 samples, 0.15%)</title><rect x="52.6154%" y="517" width="0.1538%" height="15" fill="rgb(233,153,44)" fg:x="342" fg:w="1"/><text x="52.8654%" y="527.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add (1 samples, 0.15%)</title><rect x="52.6154%" y="501" width="0.1538%" height="15" fill="rgb(253,91,29)" fg:x="342" fg:w="1"/><text x="52.8654%" y="511.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="52.7692%" y="533" width="0.1538%" height="15" fill="rgb(222,219,51)" fg:x="343" fg:w="1"/><text x="53.0192%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="52.7692%" y="517" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="343" fg:w="1"/><text x="53.0192%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="52.7692%" y="501" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="343" fg:w="1"/><text x="53.0192%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="52.7692%" y="485" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="343" fg:w="1"/><text x="53.0192%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="52.7692%" y="469" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="343" fg:w="1"/><text x="53.0192%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="52.7692%" y="453" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="343" fg:w="1"/><text x="53.0192%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="52.7692%" y="437" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="343" fg:w="1"/><text x="53.0192%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="52.7692%" y="421" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="343" fg:w="1"/><text x="53.0192%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="52.7692%" y="405" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="343" fg:w="1"/><text x="53.0192%" y="415.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::compile (3 samples, 0.46%)</title><rect x="52.7692%" y="629" width="0.4615%" height="15" fill="rgb(233,39,2)" fg:x="343" fg:w="3"/><text x="53.0192%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.46%)</title><rect x="52.7692%" y="613" width="0.4615%" height="15" fill="rgb(241,229,15)" fg:x="343" fg:w="3"/><text x="53.0192%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.46%)</title><rect x="52.7692%" y="597" width="0.4615%" height="15" fill="rgb(254,103,39)" fg:x="343" fg:w="3"/><text x="53.0192%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.46%)</title><rect x="52.7692%" y="581" width="0.4615%" height="15" fill="rgb(254,53,35)" fg:x="343" fg:w="3"/><text x="53.0192%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.46%)</title><rect x="52.7692%" y="565" width="0.4615%" height="15" fill="rgb(237,133,22)" fg:x="343" fg:w="3"/><text x="53.0192%" y="575.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.46%)</title><rect x="52.7692%" y="549" width="0.4615%" height="15" fill="rgb(206,112,53)" fg:x="343" fg:w="3"/><text x="53.0192%" y="559.50"></text></g><g><title>unlink_chunk (2 samples, 0.31%)</title><rect x="53.2308%" y="421" width="0.3077%" height="15" fill="rgb(223,20,30)" fg:x="346" fg:w="2"/><text x="53.4808%" y="431.50"></text></g><g><title>malloc_consolidate (5 samples, 0.77%)</title><rect x="53.2308%" y="437" width="0.7692%" height="15" fill="rgb(228,194,39)" fg:x="346" fg:w="5"/><text x="53.4808%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 1.54%)</title><rect x="52.6154%" y="741" width="1.5385%" height="15" fill="rgb(214,109,53)" fg:x="342" fg:w="10"/><text x="52.8654%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (10 samples, 1.54%)</title><rect x="52.6154%" y="725" width="1.5385%" height="15" fill="rgb(254,35,30)" fg:x="342" fg:w="10"/><text x="52.8654%" y="735.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (10 samples, 1.54%)</title><rect x="52.6154%" y="709" width="1.5385%" height="15" fill="rgb(226,169,23)" fg:x="342" fg:w="10"/><text x="52.8654%" y="719.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (10 samples, 1.54%)</title><rect x="52.6154%" y="693" width="1.5385%" height="15" fill="rgb(205,130,14)" fg:x="342" fg:w="10"/><text x="52.8654%" y="703.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (10 samples, 1.54%)</title><rect x="52.6154%" y="677" width="1.5385%" height="15" fill="rgb(235,200,16)" fg:x="342" fg:w="10"/><text x="52.8654%" y="687.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (10 samples, 1.54%)</title><rect x="52.6154%" y="661" width="1.5385%" height="15" fill="rgb(213,34,18)" fg:x="342" fg:w="10"/><text x="52.8654%" y="671.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (9 samples, 1.38%)</title><rect x="52.7692%" y="645" width="1.3846%" height="15" fill="rgb(253,35,22)" fg:x="343" fg:w="9"/><text x="53.0192%" y="655.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::add (6 samples, 0.92%)</title><rect x="53.2308%" y="629" width="0.9231%" height="15" fill="rgb(247,201,32)" fg:x="346" fg:w="6"/><text x="53.4808%" y="639.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::get_or_add_state (6 samples, 0.92%)</title><rect x="53.2308%" y="613" width="0.9231%" height="15" fill="rgb(249,22,31)" fg:x="346" fg:w="6"/><text x="53.4808%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6 samples, 0.92%)</title><rect x="53.2308%" y="597" width="0.9231%" height="15" fill="rgb(241,229,15)" fg:x="346" fg:w="6"/><text x="53.4808%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (6 samples, 0.92%)</title><rect x="53.2308%" y="581" width="0.9231%" height="15" fill="rgb(254,103,39)" fg:x="346" fg:w="6"/><text x="53.4808%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.92%)</title><rect x="53.2308%" y="565" width="0.9231%" height="15" fill="rgb(254,53,35)" fg:x="346" fg:w="6"/><text x="53.4808%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.92%)</title><rect x="53.2308%" y="549" width="0.9231%" height="15" fill="rgb(237,133,22)" fg:x="346" fg:w="6"/><text x="53.4808%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (6 samples, 0.92%)</title><rect x="53.2308%" y="533" width="0.9231%" height="15" fill="rgb(237,156,49)" fg:x="346" fg:w="6"/><text x="53.4808%" y="543.50"></text></g><g><title>alloc::alloc::Global::grow_impl (6 samples, 0.92%)</title><rect x="53.2308%" y="517" width="0.9231%" height="15" fill="rgb(214,150,36)" fg:x="346" fg:w="6"/><text x="53.4808%" y="527.50"></text></g><g><title>alloc::alloc::realloc (6 samples, 0.92%)</title><rect x="53.2308%" y="501" width="0.9231%" height="15" fill="rgb(254,47,34)" fg:x="346" fg:w="6"/><text x="53.4808%" y="511.50"></text></g><g><title>__GI___libc_realloc (6 samples, 0.92%)</title><rect x="53.2308%" y="485" width="0.9231%" height="15" fill="rgb(254,73,4)" fg:x="346" fg:w="6"/><text x="53.4808%" y="495.50"></text></g><g><title>_int_realloc (6 samples, 0.92%)</title><rect x="53.2308%" y="469" width="0.9231%" height="15" fill="rgb(231,75,41)" fg:x="346" fg:w="6"/><text x="53.4808%" y="479.50"></text></g><g><title>_int_malloc (6 samples, 0.92%)</title><rect x="53.2308%" y="453" width="0.9231%" height="15" fill="rgb(222,219,51)" fg:x="346" fg:w="6"/><text x="53.4808%" y="463.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="54.1538%" y="533" width="0.1538%" height="15" fill="rgb(222,219,51)" fg:x="352" fg:w="1"/><text x="54.4038%" y="543.50"></text></g><g><title>std::sys_common::once::futex::Once::call (12 samples, 1.85%)</title><rect x="52.6154%" y="1109" width="1.8462%" height="15" fill="rgb(246,168,49)" fg:x="342" fg:w="12"/><text x="52.8654%" y="1119.50">s..</text></g><g><title>std::sync::once::Once::call_once::{{closure}} (12 samples, 1.85%)</title><rect x="52.6154%" y="1093" width="1.8462%" height="15" fill="rgb(237,63,35)" fg:x="342" fg:w="12"/><text x="52.8654%" y="1103.50">s..</text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}} (12 samples, 1.85%)</title><rect x="52.6154%" y="1077" width="1.8462%" height="15" fill="rgb(238,7,51)" fg:x="342" fg:w="12"/><text x="52.8654%" y="1087.50">l..</text></g><g><title>core::ops::function::FnOnce::call_once (12 samples, 1.85%)</title><rect x="52.6154%" y="1061" width="1.8462%" height="15" fill="rgb(210,80,10)" fg:x="342" fg:w="12"/><text x="52.8654%" y="1071.50">c..</text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref::__static_ref_initialize (12 samples, 1.85%)</title><rect x="52.6154%" y="1045" width="1.8462%" height="15" fill="rgb(205,24,29)" fg:x="342" fg:w="12"/><text x="52.8654%" y="1055.50">&lt;..</text></g><g><title>regex::regex::bytes::Regex::new (12 samples, 1.85%)</title><rect x="52.6154%" y="1029" width="1.8462%" height="15" fill="rgb(246,224,25)" fg:x="342" fg:w="12"/><text x="52.8654%" y="1039.50">r..</text></g><g><title>regex::builders::bytes::RegexBuilder::build (12 samples, 1.85%)</title><rect x="52.6154%" y="1013" width="1.8462%" height="15" fill="rgb(236,76,51)" fg:x="342" fg:w="12"/><text x="52.8654%" y="1023.50">r..</text></g><g><title>regex::builders::Builder::build_one_bytes (12 samples, 1.85%)</title><rect x="52.6154%" y="997" width="1.8462%" height="15" fill="rgb(233,102,7)" fg:x="342" fg:w="12"/><text x="52.8654%" y="1007.50">r..</text></g><g><title>regex_automata::meta::regex::Builder::build (12 samples, 1.85%)</title><rect x="52.6154%" y="981" width="1.8462%" height="15" fill="rgb(212,33,22)" fg:x="342" fg:w="12"/><text x="52.8654%" y="991.50">r..</text></g><g><title>regex_automata::meta::regex::Builder::build_many (12 samples, 1.85%)</title><rect x="52.6154%" y="965" width="1.8462%" height="15" fill="rgb(236,25,32)" fg:x="342" fg:w="12"/><text x="52.8654%" y="975.50">r..</text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (12 samples, 1.85%)</title><rect x="52.6154%" y="949" width="1.8462%" height="15" fill="rgb(250,142,30)" fg:x="342" fg:w="12"/><text x="52.8654%" y="959.50">r..</text></g><g><title>regex_automata::meta::strategy::new (12 samples, 1.85%)</title><rect x="52.6154%" y="933" width="1.8462%" height="15" fill="rgb(243,171,22)" fg:x="342" fg:w="12"/><text x="52.8654%" y="943.50">r..</text></g><g><title>regex_automata::meta::strategy::Core::new (12 samples, 1.85%)</title><rect x="52.6154%" y="917" width="1.8462%" height="15" fill="rgb(222,69,27)" fg:x="342" fg:w="12"/><text x="52.8654%" y="927.50">r..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (12 samples, 1.85%)</title><rect x="52.6154%" y="901" width="1.8462%" height="15" fill="rgb(226,42,16)" fg:x="342" fg:w="12"/><text x="52.8654%" y="911.50">r..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (12 samples, 1.85%)</title><rect x="52.6154%" y="885" width="1.8462%" height="15" fill="rgb(242,129,17)" fg:x="342" fg:w="12"/><text x="52.8654%" y="895.50">r..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (12 samples, 1.85%)</title><rect x="52.6154%" y="869" width="1.8462%" height="15" fill="rgb(247,137,3)" fg:x="342" fg:w="12"/><text x="52.8654%" y="879.50">r..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 1.85%)</title><rect x="52.6154%" y="853" width="1.8462%" height="15" fill="rgb(214,109,53)" fg:x="342" fg:w="12"/><text x="52.8654%" y="863.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::map (12 samples, 1.85%)</title><rect x="52.6154%" y="837" width="1.8462%" height="15" fill="rgb(254,35,30)" fg:x="342" fg:w="12"/><text x="52.8654%" y="847.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (12 samples, 1.85%)</title><rect x="52.6154%" y="821" width="1.8462%" height="15" fill="rgb(226,169,23)" fg:x="342" fg:w="12"/><text x="52.8654%" y="831.50">c..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile::{{closure}} (12 samples, 1.85%)</title><rect x="52.6154%" y="805" width="1.8462%" height="15" fill="rgb(218,216,52)" fg:x="342" fg:w="12"/><text x="52.8654%" y="815.50">r..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (12 samples, 1.85%)</title><rect x="52.6154%" y="789" width="1.8462%" height="15" fill="rgb(235,200,16)" fg:x="342" fg:w="12"/><text x="52.8654%" y="799.50">r..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (12 samples, 1.85%)</title><rect x="52.6154%" y="773" width="1.8462%" height="15" fill="rgb(213,34,18)" fg:x="342" fg:w="12"/><text x="52.8654%" y="783.50">r..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (12 samples, 1.85%)</title><rect x="52.6154%" y="757" width="1.8462%" height="15" fill="rgb(210,105,37)" fg:x="342" fg:w="12"/><text x="52.8654%" y="767.50">r..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (2 samples, 0.31%)</title><rect x="54.1538%" y="741" width="0.3077%" height="15" fill="rgb(222,94,14)" fg:x="352" fg:w="2"/><text x="54.4038%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.31%)</title><rect x="54.1538%" y="725" width="0.3077%" height="15" fill="rgb(254,35,30)" fg:x="352" fg:w="2"/><text x="54.4038%" y="735.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.31%)</title><rect x="54.1538%" y="709" width="0.3077%" height="15" fill="rgb(226,169,23)" fg:x="352" fg:w="2"/><text x="54.4038%" y="719.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (2 samples, 0.31%)</title><rect x="54.1538%" y="693" width="0.3077%" height="15" fill="rgb(205,130,14)" fg:x="352" fg:w="2"/><text x="54.4038%" y="703.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (2 samples, 0.31%)</title><rect x="54.1538%" y="677" width="0.3077%" height="15" fill="rgb(235,200,16)" fg:x="352" fg:w="2"/><text x="54.4038%" y="687.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (2 samples, 0.31%)</title><rect x="54.1538%" y="661" width="0.3077%" height="15" fill="rgb(213,34,18)" fg:x="352" fg:w="2"/><text x="54.4038%" y="671.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (2 samples, 0.31%)</title><rect x="54.1538%" y="645" width="0.3077%" height="15" fill="rgb(253,35,22)" fg:x="352" fg:w="2"/><text x="54.4038%" y="655.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::compile (2 samples, 0.31%)</title><rect x="54.1538%" y="629" width="0.3077%" height="15" fill="rgb(233,39,2)" fg:x="352" fg:w="2"/><text x="54.4038%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.31%)</title><rect x="54.1538%" y="613" width="0.3077%" height="15" fill="rgb(241,229,15)" fg:x="352" fg:w="2"/><text x="54.4038%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.31%)</title><rect x="54.1538%" y="597" width="0.3077%" height="15" fill="rgb(254,103,39)" fg:x="352" fg:w="2"/><text x="54.4038%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.31%)</title><rect x="54.1538%" y="581" width="0.3077%" height="15" fill="rgb(254,53,35)" fg:x="352" fg:w="2"/><text x="54.4038%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.31%)</title><rect x="54.1538%" y="565" width="0.3077%" height="15" fill="rgb(237,133,22)" fg:x="352" fg:w="2"/><text x="54.4038%" y="575.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.31%)</title><rect x="54.1538%" y="549" width="0.3077%" height="15" fill="rgb(206,112,53)" fg:x="352" fg:w="2"/><text x="54.4038%" y="559.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_at_least (1 samples, 0.15%)</title><rect x="54.4615%" y="661" width="0.1538%" height="15" fill="rgb(238,57,7)" fg:x="354" fg:w="1"/><text x="54.7115%" y="671.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.15%)</title><rect x="54.4615%" y="645" width="0.1538%" height="15" fill="rgb(213,34,18)" fg:x="354" fg:w="1"/><text x="54.7115%" y="655.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_byte_class (1 samples, 0.15%)</title><rect x="54.4615%" y="629" width="0.1538%" height="15" fill="rgb(212,132,11)" fg:x="354" fg:w="1"/><text x="54.7115%" y="639.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::add_empty (1 samples, 0.15%)</title><rect x="54.4615%" y="613" width="0.1538%" height="15" fill="rgb(245,57,0)" fg:x="354" fg:w="1"/><text x="54.7115%" y="623.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add_empty (1 samples, 0.15%)</title><rect x="54.4615%" y="597" width="0.1538%" height="15" fill="rgb(233,49,21)" fg:x="354" fg:w="1"/><text x="54.7115%" y="607.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add (1 samples, 0.15%)</title><rect x="54.4615%" y="581" width="0.1538%" height="15" fill="rgb(253,91,29)" fg:x="354" fg:w="1"/><text x="54.7115%" y="591.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::Inner::remap (1 samples, 0.15%)</title><rect x="54.6154%" y="645" width="0.1538%" height="15" fill="rgb(232,176,30)" fg:x="355" fg:w="1"/><text x="54.8654%" y="655.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::State::remap (1 samples, 0.15%)</title><rect x="54.6154%" y="629" width="0.1538%" height="15" fill="rgb(206,94,36)" fg:x="355" fg:w="1"/><text x="54.8654%" y="639.50"></text></g><g><title>regex_automata::util::primitives::StateID::new (1 samples, 0.15%)</title><rect x="54.7692%" y="629" width="0.1538%" height="15" fill="rgb(207,229,46)" fg:x="356" fg:w="1"/><text x="55.0192%" y="639.50"></text></g><g><title>regex_automata::util::primitives::SmallIndex::new (1 samples, 0.15%)</title><rect x="54.7692%" y="613" width="0.1538%" height="15" fill="rgb(225,168,49)" fg:x="356" fg:w="1"/><text x="55.0192%" y="623.50"></text></g><g><title>&lt;regex_automata::util::primitives::SmallIndex as core::convert::TryFrom&lt;usize&gt;&gt;::try_from (1 samples, 0.15%)</title><rect x="54.7692%" y="597" width="0.1538%" height="15" fill="rgb(218,138,48)" fg:x="356" fg:w="1"/><text x="55.0192%" y="607.50"></text></g><g><title>regex_automata::util::look::LookMatcher::add_to_byteset (1 samples, 0.15%)</title><rect x="54.9231%" y="629" width="0.1538%" height="15" fill="rgb(221,213,25)" fg:x="357" fg:w="1"/><text x="55.1731%" y="639.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::Inner::add (7 samples, 1.08%)</title><rect x="54.7692%" y="645" width="1.0769%" height="15" fill="rgb(212,0,0)" fg:x="356" fg:w="7"/><text x="55.0192%" y="655.50"></text></g><g><title>regex_automata::util::alphabet::ByteClassSet::set_range (5 samples, 0.77%)</title><rect x="55.0769%" y="629" width="0.7692%" height="15" fill="rgb(234,204,30)" fg:x="358" fg:w="5"/><text x="55.3269%" y="639.50"></text></g><g><title>regex_automata::util::alphabet::ByteSet::add (5 samples, 0.77%)</title><rect x="55.0769%" y="613" width="0.7692%" height="15" fill="rgb(228,133,21)" fg:x="358" fg:w="5"/><text x="55.3269%" y="623.50"></text></g><g><title>regex_automata::nfa::thompson::builder::State::goto (1 samples, 0.15%)</title><rect x="55.8462%" y="645" width="0.1538%" height="15" fill="rgb(219,149,16)" fg:x="363" fg:w="1"/><text x="56.0962%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (1 samples, 0.15%)</title><rect x="56.0000%" y="645" width="0.1538%" height="15" fill="rgb(241,79,3)" fg:x="364" fg:w="1"/><text x="56.2500%" y="655.50"></text></g><g><title>tcache_get (1 samples, 0.15%)</title><rect x="56.1538%" y="469" width="0.1538%" height="15" fill="rgb(227,126,51)" fg:x="365" fg:w="1"/><text x="56.4038%" y="479.50"></text></g><g><title>checked_request2size (1 samples, 0.15%)</title><rect x="56.3077%" y="469" width="0.1538%" height="15" fill="rgb(236,198,42)" fg:x="366" fg:w="1"/><text x="56.5577%" y="479.50"></text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::process_stage1_blockzero_analysis (15 samples, 2.31%)</title><rect x="54.4615%" y="1109" width="2.3077%" height="15" fill="rgb(214,107,3)" fg:x="354" fg:w="15"/><text x="54.7115%" y="1119.50">s..</text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::blockzero_analysis (15 samples, 2.31%)</title><rect x="54.4615%" y="1093" width="2.3077%" height="15" fill="rgb(228,176,28)" fg:x="354" fg:w="15"/><text x="54.7115%" y="1103.50">s..</text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::blockzero_analysis_syslines (15 samples, 2.31%)</title><rect x="54.4615%" y="1077" width="2.3077%" height="15" fill="rgb(208,15,47)" fg:x="354" fg:w="15"/><text x="54.7115%" y="1087.50">s..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_sysline_in_block (15 samples, 2.31%)</title><rect x="54.4615%" y="1061" width="2.3077%" height="15" fill="rgb(243,65,52)" fg:x="354" fg:w="15"/><text x="54.7115%" y="1071.50">s..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_sysline_in_block_year (15 samples, 2.31%)</title><rect x="54.4615%" y="1045" width="2.3077%" height="15" fill="rgb(253,177,51)" fg:x="354" fg:w="15"/><text x="54.7115%" y="1055.50">s..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::parse_datetime_in_line_cached (15 samples, 2.31%)</title><rect x="54.4615%" y="1029" width="2.3077%" height="15" fill="rgb(231,75,50)" fg:x="354" fg:w="15"/><text x="54.7115%" y="1039.50">s..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::parse_datetime_in_line (15 samples, 2.31%)</title><rect x="54.4615%" y="1013" width="2.3077%" height="15" fill="rgb(234,54,15)" fg:x="354" fg:w="15"/><text x="54.7115%" y="1023.50">s..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_datetime_in_line (15 samples, 2.31%)</title><rect x="54.4615%" y="997" width="2.3077%" height="15" fill="rgb(212,53,9)" fg:x="354" fg:w="15"/><text x="54.7115%" y="1007.50">s..</text></g><g><title>s4lib::data::datetime::bytes_to_regex_to_datetime (15 samples, 2.31%)</title><rect x="54.4615%" y="981" width="2.3077%" height="15" fill="rgb(252,84,36)" fg:x="354" fg:w="15"/><text x="54.7115%" y="991.50">s..</text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref (15 samples, 2.31%)</title><rect x="54.4615%" y="965" width="2.3077%" height="15" fill="rgb(217,15,43)" fg:x="354" fg:w="15"/><text x="54.7115%" y="975.50">&lt;..</text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref::__stability (15 samples, 2.31%)</title><rect x="54.4615%" y="949" width="2.3077%" height="15" fill="rgb(239,165,48)" fg:x="354" fg:w="15"/><text x="54.7115%" y="959.50">&lt;..</text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (15 samples, 2.31%)</title><rect x="54.4615%" y="933" width="2.3077%" height="15" fill="rgb(235,175,8)" fg:x="354" fg:w="15"/><text x="54.7115%" y="943.50">l..</text></g><g><title>std::sync::once::Once::call_once (15 samples, 2.31%)</title><rect x="54.4615%" y="917" width="2.3077%" height="15" fill="rgb(247,17,47)" fg:x="354" fg:w="15"/><text x="54.7115%" y="927.50">s..</text></g><g><title>std::sys_common::once::futex::Once::call (15 samples, 2.31%)</title><rect x="54.4615%" y="901" width="2.3077%" height="15" fill="rgb(246,168,49)" fg:x="354" fg:w="15"/><text x="54.7115%" y="911.50">s..</text></g><g><title>std::sync::once::Once::call_once::{{closure}} (15 samples, 2.31%)</title><rect x="54.4615%" y="885" width="2.3077%" height="15" fill="rgb(237,63,35)" fg:x="354" fg:w="15"/><text x="54.7115%" y="895.50">s..</text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}} (15 samples, 2.31%)</title><rect x="54.4615%" y="869" width="2.3077%" height="15" fill="rgb(238,7,51)" fg:x="354" fg:w="15"/><text x="54.7115%" y="879.50">l..</text></g><g><title>core::ops::function::FnOnce::call_once (15 samples, 2.31%)</title><rect x="54.4615%" y="853" width="2.3077%" height="15" fill="rgb(210,80,10)" fg:x="354" fg:w="15"/><text x="54.7115%" y="863.50">c..</text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref::__static_ref_initialize (15 samples, 2.31%)</title><rect x="54.4615%" y="837" width="2.3077%" height="15" fill="rgb(205,24,29)" fg:x="354" fg:w="15"/><text x="54.7115%" y="847.50">&lt;..</text></g><g><title>regex::regex::bytes::Regex::new (15 samples, 2.31%)</title><rect x="54.4615%" y="821" width="2.3077%" height="15" fill="rgb(246,224,25)" fg:x="354" fg:w="15"/><text x="54.7115%" y="831.50">r..</text></g><g><title>regex::builders::bytes::RegexBuilder::build (15 samples, 2.31%)</title><rect x="54.4615%" y="805" width="2.3077%" height="15" fill="rgb(236,76,51)" fg:x="354" fg:w="15"/><text x="54.7115%" y="815.50">r..</text></g><g><title>regex::builders::Builder::build_one_bytes (15 samples, 2.31%)</title><rect x="54.4615%" y="789" width="2.3077%" height="15" fill="rgb(233,102,7)" fg:x="354" fg:w="15"/><text x="54.7115%" y="799.50">r..</text></g><g><title>regex_automata::meta::regex::Builder::build (15 samples, 2.31%)</title><rect x="54.4615%" y="773" width="2.3077%" height="15" fill="rgb(212,33,22)" fg:x="354" fg:w="15"/><text x="54.7115%" y="783.50">r..</text></g><g><title>regex_automata::meta::regex::Builder::build_many (15 samples, 2.31%)</title><rect x="54.4615%" y="757" width="2.3077%" height="15" fill="rgb(236,25,32)" fg:x="354" fg:w="15"/><text x="54.7115%" y="767.50">r..</text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (15 samples, 2.31%)</title><rect x="54.4615%" y="741" width="2.3077%" height="15" fill="rgb(250,142,30)" fg:x="354" fg:w="15"/><text x="54.7115%" y="751.50">r..</text></g><g><title>regex_automata::meta::strategy::new (15 samples, 2.31%)</title><rect x="54.4615%" y="725" width="2.3077%" height="15" fill="rgb(243,171,22)" fg:x="354" fg:w="15"/><text x="54.7115%" y="735.50">r..</text></g><g><title>regex_automata::meta::strategy::Core::new (15 samples, 2.31%)</title><rect x="54.4615%" y="709" width="2.3077%" height="15" fill="rgb(222,69,27)" fg:x="354" fg:w="15"/><text x="54.7115%" y="719.50">r..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (15 samples, 2.31%)</title><rect x="54.4615%" y="693" width="2.3077%" height="15" fill="rgb(226,42,16)" fg:x="354" fg:w="15"/><text x="54.7115%" y="703.50">r..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (15 samples, 2.31%)</title><rect x="54.4615%" y="677" width="2.3077%" height="15" fill="rgb(242,129,17)" fg:x="354" fg:w="15"/><text x="54.7115%" y="687.50">r..</text></g><g><title>regex_automata::nfa::thompson::builder::Builder::build (14 samples, 2.15%)</title><rect x="54.6154%" y="661" width="2.1538%" height="15" fill="rgb(205,136,15)" fg:x="355" fg:w="14"/><text x="54.8654%" y="671.50">r..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4 samples, 0.62%)</title><rect x="56.1538%" y="645" width="0.6154%" height="15" fill="rgb(209,26,30)" fg:x="365" fg:w="4"/><text x="56.4038%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.62%)</title><rect x="56.1538%" y="629" width="0.6154%" height="15" fill="rgb(229,121,46)" fg:x="365" fg:w="4"/><text x="56.4038%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.62%)</title><rect x="56.1538%" y="613" width="0.6154%" height="15" fill="rgb(221,172,50)" fg:x="365" fg:w="4"/><text x="56.4038%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.62%)</title><rect x="56.1538%" y="597" width="0.6154%" height="15" fill="rgb(216,42,52)" fg:x="365" fg:w="4"/><text x="56.4038%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.62%)</title><rect x="56.1538%" y="581" width="0.6154%" height="15" fill="rgb(249,207,12)" fg:x="365" fg:w="4"/><text x="56.4038%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.62%)</title><rect x="56.1538%" y="565" width="0.6154%" height="15" fill="rgb(224,194,14)" fg:x="365" fg:w="4"/><text x="56.4038%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.62%)</title><rect x="56.1538%" y="549" width="0.6154%" height="15" fill="rgb(227,204,5)" fg:x="365" fg:w="4"/><text x="56.4038%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.62%)</title><rect x="56.1538%" y="533" width="0.6154%" height="15" fill="rgb(231,114,21)" fg:x="365" fg:w="4"/><text x="56.4038%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.62%)</title><rect x="56.1538%" y="517" width="0.6154%" height="15" fill="rgb(238,209,2)" fg:x="365" fg:w="4"/><text x="56.4038%" y="527.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.62%)</title><rect x="56.1538%" y="501" width="0.6154%" height="15" fill="rgb(253,135,41)" fg:x="365" fg:w="4"/><text x="56.4038%" y="511.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.62%)</title><rect x="56.1538%" y="485" width="0.6154%" height="15" fill="rgb(206,112,53)" fg:x="365" fg:w="4"/><text x="56.4038%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (1 samples, 0.15%)</title><rect x="56.7692%" y="629" width="0.1538%" height="15" fill="rgb(222,129,7)" fg:x="369" fg:w="1"/><text x="57.0192%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="56.7692%" y="613" width="0.1538%" height="15" fill="rgb(212,159,3)" fg:x="369" fg:w="1"/><text x="57.0192%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="56.7692%" y="597" width="0.1538%" height="15" fill="rgb(231,142,39)" fg:x="369" fg:w="1"/><text x="57.0192%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.15%)</title><rect x="56.7692%" y="581" width="0.1538%" height="15" fill="rgb(249,2,22)" fg:x="369" fg:w="1"/><text x="57.0192%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.15%)</title><rect x="56.7692%" y="565" width="0.1538%" height="15" fill="rgb(254,53,35)" fg:x="369" fg:w="1"/><text x="57.0192%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.15%)</title><rect x="56.7692%" y="549" width="0.1538%" height="15" fill="rgb(237,133,22)" fg:x="369" fg:w="1"/><text x="57.0192%" y="559.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="56.7692%" y="533" width="0.1538%" height="15" fill="rgb(206,112,53)" fg:x="369" fg:w="1"/><text x="57.0192%" y="543.50"></text></g><g><title>regex_syntax::hir::literal::Seq::optimize_for_prefix_by_preference (2 samples, 0.31%)</title><rect x="56.7692%" y="741" width="0.3077%" height="15" fill="rgb(206,179,34)" fg:x="369" fg:w="2"/><text x="57.0192%" y="751.50"></text></g><g><title>regex_syntax::hir::literal::Seq::optimize_by_preference (2 samples, 0.31%)</title><rect x="56.7692%" y="725" width="0.3077%" height="15" fill="rgb(208,121,1)" fg:x="369" fg:w="2"/><text x="57.0192%" y="735.50"></text></g><g><title>regex_syntax::hir::literal::PreferenceTrie::minimize (2 samples, 0.31%)</title><rect x="56.7692%" y="709" width="0.3077%" height="15" fill="rgb(240,28,15)" fg:x="369" fg:w="2"/><text x="57.0192%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut (2 samples, 0.31%)</title><rect x="56.7692%" y="693" width="0.3077%" height="15" fill="rgb(208,159,28)" fg:x="369" fg:w="2"/><text x="57.0192%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut::process_loop (2 samples, 0.31%)</title><rect x="56.7692%" y="677" width="0.3077%" height="15" fill="rgb(227,228,3)" fg:x="369" fg:w="2"/><text x="57.0192%" y="687.50"></text></g><g><title>regex_syntax::hir::literal::PreferenceTrie::minimize::{{closure}} (2 samples, 0.31%)</title><rect x="56.7692%" y="661" width="0.3077%" height="15" fill="rgb(234,110,33)" fg:x="369" fg:w="2"/><text x="57.0192%" y="671.50"></text></g><g><title>regex_syntax::hir::literal::PreferenceTrie::insert (2 samples, 0.31%)</title><rect x="56.7692%" y="645" width="0.3077%" height="15" fill="rgb(208,38,45)" fg:x="369" fg:w="2"/><text x="57.0192%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="56.9231%" y="629" width="0.1538%" height="15" fill="rgb(236,210,2)" fg:x="370" fg:w="1"/><text x="57.1731%" y="639.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::extract_concat (1 samples, 0.15%)</title><rect x="57.0769%" y="725" width="0.1538%" height="15" fill="rgb(215,217,42)" fg:x="371" fg:w="1"/><text x="57.3269%" y="735.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::cross (1 samples, 0.15%)</title><rect x="57.0769%" y="709" width="0.1538%" height="15" fill="rgb(248,169,31)" fg:x="371" fg:w="1"/><text x="57.3269%" y="719.50"></text></g><g><title>regex_syntax::hir::literal::Seq::cross_forward (1 samples, 0.15%)</title><rect x="57.0769%" y="693" width="0.1538%" height="15" fill="rgb(228,175,28)" fg:x="371" fg:w="1"/><text x="57.3269%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="57.0769%" y="677" width="0.1538%" height="15" fill="rgb(253,154,22)" fg:x="371" fg:w="1"/><text x="57.3269%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.15%)</title><rect x="57.0769%" y="661" width="0.1538%" height="15" fill="rgb(249,207,12)" fg:x="371" fg:w="1"/><text x="57.3269%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.15%)</title><rect x="57.0769%" y="645" width="0.1538%" height="15" fill="rgb(224,194,14)" fg:x="371" fg:w="1"/><text x="57.3269%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.15%)</title><rect x="57.0769%" y="629" width="0.1538%" height="15" fill="rgb(227,204,5)" fg:x="371" fg:w="1"/><text x="57.3269%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.15%)</title><rect x="57.0769%" y="613" width="0.1538%" height="15" fill="rgb(231,114,21)" fg:x="371" fg:w="1"/><text x="57.3269%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.15%)</title><rect x="57.0769%" y="597" width="0.1538%" height="15" fill="rgb(238,209,2)" fg:x="371" fg:w="1"/><text x="57.3269%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.15%)</title><rect x="57.0769%" y="581" width="0.1538%" height="15" fill="rgb(253,135,41)" fg:x="371" fg:w="1"/><text x="57.3269%" y="591.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="57.0769%" y="565" width="0.1538%" height="15" fill="rgb(206,112,53)" fg:x="371" fg:w="1"/><text x="57.3269%" y="575.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="57.0769%" y="549" width="0.1538%" height="15" fill="rgb(222,219,51)" fg:x="371" fg:w="1"/><text x="57.3269%" y="559.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::union (1 samples, 0.15%)</title><rect x="57.2308%" y="709" width="0.1538%" height="15" fill="rgb(253,75,3)" fg:x="372" fg:w="1"/><text x="57.4808%" y="719.50"></text></g><g><title>regex_syntax::hir::literal::Seq::union (1 samples, 0.15%)</title><rect x="57.2308%" y="693" width="0.1538%" height="15" fill="rgb(226,117,51)" fg:x="372" fg:w="1"/><text x="57.4808%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.15%)</title><rect x="57.2308%" y="677" width="0.1538%" height="15" fill="rgb(205,186,49)" fg:x="372" fg:w="1"/><text x="57.4808%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.15%)</title><rect x="57.2308%" y="661" width="0.1538%" height="15" fill="rgb(232,211,42)" fg:x="372" fg:w="1"/><text x="57.4808%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.15%)</title><rect x="57.2308%" y="645" width="0.1538%" height="15" fill="rgb(214,146,48)" fg:x="372" fg:w="1"/><text x="57.4808%" y="655.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.15%)</title><rect x="57.2308%" y="629" width="0.1538%" height="15" fill="rgb(252,221,46)" fg:x="372" fg:w="1"/><text x="57.4808%" y="639.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.15%)</title><rect x="57.2308%" y="613" width="0.1538%" height="15" fill="rgb(221,75,18)" fg:x="372" fg:w="1"/><text x="57.4808%" y="623.50"></text></g><g><title>regex_automata::meta::strategy::ReverseInner::new (5 samples, 0.77%)</title><rect x="56.7692%" y="789" width="0.7692%" height="15" fill="rgb(225,146,32)" fg:x="369" fg:w="5"/><text x="57.0192%" y="799.50"></text></g><g><title>regex_automata::meta::reverse_inner::extract (5 samples, 0.77%)</title><rect x="56.7692%" y="773" width="0.7692%" height="15" fill="rgb(209,78,45)" fg:x="369" fg:w="5"/><text x="57.0192%" y="783.50"></text></g><g><title>regex_automata::meta::reverse_inner::prefilter (5 samples, 0.77%)</title><rect x="56.7692%" y="757" width="0.7692%" height="15" fill="rgb(221,50,42)" fg:x="369" fg:w="5"/><text x="57.0192%" y="767.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::extract (3 samples, 0.46%)</title><rect x="57.0769%" y="741" width="0.4615%" height="15" fill="rgb(242,28,8)" fg:x="371" fg:w="3"/><text x="57.3269%" y="751.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::extract_alternation (2 samples, 0.31%)</title><rect x="57.2308%" y="725" width="0.3077%" height="15" fill="rgb(236,31,24)" fg:x="372" fg:w="2"/><text x="57.4808%" y="735.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::extract (1 samples, 0.15%)</title><rect x="57.3846%" y="709" width="0.1538%" height="15" fill="rgb(242,28,8)" fg:x="373" fg:w="1"/><text x="57.6346%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.15%)</title><rect x="57.3846%" y="693" width="0.1538%" height="15" fill="rgb(209,26,30)" fg:x="373" fg:w="1"/><text x="57.6346%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.15%)</title><rect x="57.3846%" y="677" width="0.1538%" height="15" fill="rgb(229,121,46)" fg:x="373" fg:w="1"/><text x="57.6346%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.15%)</title><rect x="57.3846%" y="661" width="0.1538%" height="15" fill="rgb(221,172,50)" fg:x="373" fg:w="1"/><text x="57.6346%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.15%)</title><rect x="57.3846%" y="645" width="0.1538%" height="15" fill="rgb(216,42,52)" fg:x="373" fg:w="1"/><text x="57.6346%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.15%)</title><rect x="57.3846%" y="629" width="0.1538%" height="15" fill="rgb(249,207,12)" fg:x="373" fg:w="1"/><text x="57.6346%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.15%)</title><rect x="57.3846%" y="613" width="0.1538%" height="15" fill="rgb(224,194,14)" fg:x="373" fg:w="1"/><text x="57.6346%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.15%)</title><rect x="57.3846%" y="597" width="0.1538%" height="15" fill="rgb(227,204,5)" fg:x="373" fg:w="1"/><text x="57.6346%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.15%)</title><rect x="57.3846%" y="581" width="0.1538%" height="15" fill="rgb(231,114,21)" fg:x="373" fg:w="1"/><text x="57.6346%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.15%)</title><rect x="57.3846%" y="565" width="0.1538%" height="15" fill="rgb(238,209,2)" fg:x="373" fg:w="1"/><text x="57.6346%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.15%)</title><rect x="57.3846%" y="549" width="0.1538%" height="15" fill="rgb(253,135,41)" fg:x="373" fg:w="1"/><text x="57.6346%" y="559.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="57.3846%" y="533" width="0.1538%" height="15" fill="rgb(206,112,53)" fg:x="373" fg:w="1"/><text x="57.6346%" y="543.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="57.3846%" y="517" width="0.1538%" height="15" fill="rgb(222,219,51)" fg:x="373" fg:w="1"/><text x="57.6346%" y="527.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 0.15%)</title><rect x="57.5385%" y="549" width="0.1538%" height="15" fill="rgb(235,200,16)" fg:x="374" fg:w="1"/><text x="57.7885%" y="559.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::patch (1 samples, 0.15%)</title><rect x="57.5385%" y="533" width="0.1538%" height="15" fill="rgb(219,22,9)" fg:x="374" fg:w="1"/><text x="57.7885%" y="543.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::patch (1 samples, 0.15%)</title><rect x="57.5385%" y="517" width="0.1538%" height="15" fill="rgb(252,101,26)" fg:x="374" fg:w="1"/><text x="57.7885%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.31%)</title><rect x="57.5385%" y="613" width="0.3077%" height="15" fill="rgb(214,109,53)" fg:x="374" fg:w="2"/><text x="57.7885%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.31%)</title><rect x="57.5385%" y="597" width="0.3077%" height="15" fill="rgb(254,35,30)" fg:x="374" fg:w="2"/><text x="57.7885%" y="607.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.31%)</title><rect x="57.5385%" y="581" width="0.3077%" height="15" fill="rgb(226,169,23)" fg:x="374" fg:w="2"/><text x="57.7885%" y="591.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (2 samples, 0.31%)</title><rect x="57.5385%" y="565" width="0.3077%" height="15" fill="rgb(205,130,14)" fg:x="374" fg:w="2"/><text x="57.7885%" y="575.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.15%)</title><rect x="57.6923%" y="549" width="0.1538%" height="15" fill="rgb(213,34,18)" fg:x="375" fg:w="1"/><text x="57.9423%" y="559.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_repetition (1 samples, 0.15%)</title><rect x="57.6923%" y="533" width="0.1538%" height="15" fill="rgb(205,23,25)" fg:x="375" fg:w="1"/><text x="57.9423%" y="543.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_zero_or_one (1 samples, 0.15%)</title><rect x="57.6923%" y="517" width="0.1538%" height="15" fill="rgb(240,227,44)" fg:x="375" fg:w="1"/><text x="57.9423%" y="527.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::add_union (1 samples, 0.15%)</title><rect x="57.6923%" y="501" width="0.1538%" height="15" fill="rgb(243,161,28)" fg:x="375" fg:w="1"/><text x="57.9423%" y="511.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add_union (1 samples, 0.15%)</title><rect x="57.6923%" y="485" width="0.1538%" height="15" fill="rgb(247,38,8)" fg:x="375" fg:w="1"/><text x="57.9423%" y="495.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add (1 samples, 0.15%)</title><rect x="57.6923%" y="469" width="0.1538%" height="15" fill="rgb(253,91,29)" fg:x="375" fg:w="1"/><text x="57.9423%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.15%)</title><rect x="57.6923%" y="453" width="0.1538%" height="15" fill="rgb(241,229,15)" fg:x="375" fg:w="1"/><text x="57.9423%" y="463.50"></text></g><g><title>core::ptr::write (1 samples, 0.15%)</title><rect x="57.6923%" y="437" width="0.1538%" height="15" fill="rgb(209,143,44)" fg:x="375" fg:w="1"/><text x="57.9423%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="57.6923%" y="421" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="375" fg:w="1"/><text x="57.9423%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="57.6923%" y="405" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="375" fg:w="1"/><text x="57.9423%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="57.6923%" y="389" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="375" fg:w="1"/><text x="57.9423%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="57.6923%" y="373" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="375" fg:w="1"/><text x="57.9423%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="57.6923%" y="357" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="375" fg:w="1"/><text x="57.9423%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="57.6923%" y="341" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="375" fg:w="1"/><text x="57.9423%" y="351.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="57.6923%" y="325" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="375" fg:w="1"/><text x="57.9423%" y="335.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="57.6923%" y="309" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="375" fg:w="1"/><text x="57.9423%" y="319.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (3 samples, 0.46%)</title><rect x="57.5385%" y="741" width="0.4615%" height="15" fill="rgb(247,137,3)" fg:x="374" fg:w="3"/><text x="57.7885%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.46%)</title><rect x="57.5385%" y="725" width="0.4615%" height="15" fill="rgb(214,109,53)" fg:x="374" fg:w="3"/><text x="57.7885%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.46%)</title><rect x="57.5385%" y="709" width="0.4615%" height="15" fill="rgb(254,35,30)" fg:x="374" fg:w="3"/><text x="57.7885%" y="719.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (3 samples, 0.46%)</title><rect x="57.5385%" y="693" width="0.4615%" height="15" fill="rgb(226,169,23)" fg:x="374" fg:w="3"/><text x="57.7885%" y="703.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile::{{closure}} (3 samples, 0.46%)</title><rect x="57.5385%" y="677" width="0.4615%" height="15" fill="rgb(218,216,52)" fg:x="374" fg:w="3"/><text x="57.7885%" y="687.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (3 samples, 0.46%)</title><rect x="57.5385%" y="661" width="0.4615%" height="15" fill="rgb(235,200,16)" fg:x="374" fg:w="3"/><text x="57.7885%" y="671.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (3 samples, 0.46%)</title><rect x="57.5385%" y="645" width="0.4615%" height="15" fill="rgb(213,34,18)" fg:x="374" fg:w="3"/><text x="57.7885%" y="655.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (3 samples, 0.46%)</title><rect x="57.5385%" y="629" width="0.4615%" height="15" fill="rgb(210,105,37)" fg:x="374" fg:w="3"/><text x="57.7885%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 0.15%)</title><rect x="57.8462%" y="613" width="0.1538%" height="15" fill="rgb(222,94,14)" fg:x="376" fg:w="1"/><text x="58.0962%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.15%)</title><rect x="57.8462%" y="597" width="0.1538%" height="15" fill="rgb(254,35,30)" fg:x="376" fg:w="1"/><text x="58.0962%" y="607.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.15%)</title><rect x="57.8462%" y="581" width="0.1538%" height="15" fill="rgb(226,169,23)" fg:x="376" fg:w="1"/><text x="58.0962%" y="591.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (1 samples, 0.15%)</title><rect x="57.8462%" y="565" width="0.1538%" height="15" fill="rgb(205,130,14)" fg:x="376" fg:w="1"/><text x="58.0962%" y="575.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.15%)</title><rect x="57.8462%" y="549" width="0.1538%" height="15" fill="rgb(213,34,18)" fg:x="376" fg:w="1"/><text x="58.0962%" y="559.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_repetition (1 samples, 0.15%)</title><rect x="57.8462%" y="533" width="0.1538%" height="15" fill="rgb(205,23,25)" fg:x="376" fg:w="1"/><text x="58.0962%" y="543.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_zero_or_one (1 samples, 0.15%)</title><rect x="57.8462%" y="517" width="0.1538%" height="15" fill="rgb(240,227,44)" fg:x="376" fg:w="1"/><text x="58.0962%" y="527.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::patch (1 samples, 0.15%)</title><rect x="57.8462%" y="501" width="0.1538%" height="15" fill="rgb(219,22,9)" fg:x="376" fg:w="1"/><text x="58.0962%" y="511.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::patch (1 samples, 0.15%)</title><rect x="57.8462%" y="485" width="0.1538%" height="15" fill="rgb(252,101,26)" fg:x="376" fg:w="1"/><text x="58.0962%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.15%)</title><rect x="58.0000%" y="645" width="0.1538%" height="15" fill="rgb(207,42,35)" fg:x="377" fg:w="1"/><text x="58.2500%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="58.0000%" y="629" width="0.1538%" height="15" fill="rgb(224,220,10)" fg:x="377" fg:w="1"/><text x="58.2500%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.15%)</title><rect x="58.0000%" y="613" width="0.1538%" height="15" fill="rgb(217,9,51)" fg:x="377" fg:w="1"/><text x="58.2500%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (1 samples, 0.15%)</title><rect x="58.0000%" y="597" width="0.1538%" height="15" fill="rgb(234,23,10)" fg:x="377" fg:w="1"/><text x="58.2500%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (1 samples, 0.15%)</title><rect x="58.0000%" y="581" width="0.1538%" height="15" fill="rgb(227,26,12)" fg:x="377" fg:w="1"/><text x="58.2500%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (1 samples, 0.15%)</title><rect x="58.0000%" y="565" width="0.1538%" height="15" fill="rgb(248,99,2)" fg:x="377" fg:w="1"/><text x="58.2500%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.15%)</title><rect x="58.0000%" y="549" width="0.1538%" height="15" fill="rgb(230,21,49)" fg:x="377" fg:w="1"/><text x="58.2500%" y="559.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::Inner::set_captures (2 samples, 0.31%)</title><rect x="58.0000%" y="725" width="0.3077%" height="15" fill="rgb(254,224,34)" fg:x="377" fg:w="2"/><text x="58.2500%" y="735.50"></text></g><g><title>regex_automata::util::captures::GroupInfo::new (2 samples, 0.31%)</title><rect x="58.0000%" y="709" width="0.3077%" height="15" fill="rgb(209,86,2)" fg:x="377" fg:w="2"/><text x="58.2500%" y="719.50"></text></g><g><title>regex_automata::util::captures::GroupInfoInner::add_explicit_group (2 samples, 0.31%)</title><rect x="58.0000%" y="693" width="0.3077%" height="15" fill="rgb(232,40,15)" fg:x="377" fg:w="2"/><text x="58.2500%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (2 samples, 0.31%)</title><rect x="58.0000%" y="677" width="0.3077%" height="15" fill="rgb(237,8,32)" fg:x="377" fg:w="2"/><text x="58.2500%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.31%)</title><rect x="58.0000%" y="661" width="0.3077%" height="15" fill="rgb(228,156,5)" fg:x="377" fg:w="2"/><text x="58.2500%" y="671.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.15%)</title><rect x="58.1538%" y="645" width="0.1538%" height="15" fill="rgb(221,125,3)" fg:x="378" fg:w="1"/><text x="58.4038%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.15%)</title><rect x="58.1538%" y="629" width="0.1538%" height="15" fill="rgb(222,198,6)" fg:x="378" fg:w="1"/><text x="58.4038%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.15%)</title><rect x="58.1538%" y="613" width="0.1538%" height="15" fill="rgb(212,33,36)" fg:x="378" fg:w="1"/><text x="58.4038%" y="623.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::hash::Hash&gt;::hash (1 samples, 0.15%)</title><rect x="58.1538%" y="597" width="0.1538%" height="15" fill="rgb(222,28,54)" fg:x="378" fg:w="1"/><text x="58.4038%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.15%)</title><rect x="58.1538%" y="581" width="0.1538%" height="15" fill="rgb(250,187,26)" fg:x="378" fg:w="1"/><text x="58.4038%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.15%)</title><rect x="58.1538%" y="565" width="0.1538%" height="15" fill="rgb(208,211,8)" fg:x="378" fg:w="1"/><text x="58.4038%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1 samples, 0.15%)</title><rect x="58.1538%" y="549" width="0.1538%" height="15" fill="rgb(206,132,37)" fg:x="378" fg:w="1"/><text x="58.4038%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.15%)</title><rect x="58.1538%" y="533" width="0.1538%" height="15" fill="rgb(243,187,24)" fg:x="378" fg:w="1"/><text x="58.4038%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.15%)</title><rect x="58.1538%" y="517" width="0.1538%" height="15" fill="rgb(236,225,40)" fg:x="378" fg:w="1"/><text x="58.4038%" y="527.50"></text></g><g><title>regex_automata::util::alphabet::ByteClassSet::byte_classes (1 samples, 0.15%)</title><rect x="58.3077%" y="709" width="0.1538%" height="15" fill="rgb(211,195,22)" fg:x="379" fg:w="1"/><text x="58.5577%" y="719.50"></text></g><g><title>regex_automata::util::alphabet::ByteSet::contains (1 samples, 0.15%)</title><rect x="58.3077%" y="693" width="0.1538%" height="15" fill="rgb(229,229,29)" fg:x="379" fg:w="1"/><text x="58.5577%" y="703.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::Inner::into_nfa (2 samples, 0.31%)</title><rect x="58.3077%" y="725" width="0.3077%" height="15" fill="rgb(253,86,8)" fg:x="379" fg:w="2"/><text x="58.5577%" y="735.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (1 samples, 0.15%)</title><rect x="58.4615%" y="709" width="0.1538%" height="15" fill="rgb(221,10,3)" fg:x="380" fg:w="1"/><text x="58.7115%" y="719.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.15%)</title><rect x="58.4615%" y="693" width="0.1538%" height="15" fill="rgb(209,114,30)" fg:x="380" fg:w="1"/><text x="58.7115%" y="703.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.15%)</title><rect x="58.4615%" y="677" width="0.1538%" height="15" fill="rgb(217,126,36)" fg:x="380" fg:w="1"/><text x="58.7115%" y="687.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::parse_datetime_in_line_cached (13 samples, 2.00%)</title><rect x="56.7692%" y="1109" width="2.0000%" height="15" fill="rgb(231,75,50)" fg:x="369" fg:w="13"/><text x="57.0192%" y="1119.50">s..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::parse_datetime_in_line (13 samples, 2.00%)</title><rect x="56.7692%" y="1093" width="2.0000%" height="15" fill="rgb(234,54,15)" fg:x="369" fg:w="13"/><text x="57.0192%" y="1103.50">s..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_datetime_in_line (13 samples, 2.00%)</title><rect x="56.7692%" y="1077" width="2.0000%" height="15" fill="rgb(212,53,9)" fg:x="369" fg:w="13"/><text x="57.0192%" y="1087.50">s..</text></g><g><title>s4lib::data::datetime::bytes_to_regex_to_datetime (13 samples, 2.00%)</title><rect x="56.7692%" y="1061" width="2.0000%" height="15" fill="rgb(252,84,36)" fg:x="369" fg:w="13"/><text x="57.0192%" y="1071.50">s..</text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref (13 samples, 2.00%)</title><rect x="56.7692%" y="1045" width="2.0000%" height="15" fill="rgb(217,15,43)" fg:x="369" fg:w="13"/><text x="57.0192%" y="1055.50">&lt;..</text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref::__stability (13 samples, 2.00%)</title><rect x="56.7692%" y="1029" width="2.0000%" height="15" fill="rgb(239,165,48)" fg:x="369" fg:w="13"/><text x="57.0192%" y="1039.50">&lt;..</text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (13 samples, 2.00%)</title><rect x="56.7692%" y="1013" width="2.0000%" height="15" fill="rgb(235,175,8)" fg:x="369" fg:w="13"/><text x="57.0192%" y="1023.50">l..</text></g><g><title>std::sync::once::Once::call_once (13 samples, 2.00%)</title><rect x="56.7692%" y="997" width="2.0000%" height="15" fill="rgb(247,17,47)" fg:x="369" fg:w="13"/><text x="57.0192%" y="1007.50">s..</text></g><g><title>std::sys_common::once::futex::Once::call (13 samples, 2.00%)</title><rect x="56.7692%" y="981" width="2.0000%" height="15" fill="rgb(246,168,49)" fg:x="369" fg:w="13"/><text x="57.0192%" y="991.50">s..</text></g><g><title>std::sync::once::Once::call_once::{{closure}} (13 samples, 2.00%)</title><rect x="56.7692%" y="965" width="2.0000%" height="15" fill="rgb(237,63,35)" fg:x="369" fg:w="13"/><text x="57.0192%" y="975.50">s..</text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}} (13 samples, 2.00%)</title><rect x="56.7692%" y="949" width="2.0000%" height="15" fill="rgb(238,7,51)" fg:x="369" fg:w="13"/><text x="57.0192%" y="959.50">l..</text></g><g><title>core::ops::function::FnOnce::call_once (13 samples, 2.00%)</title><rect x="56.7692%" y="933" width="2.0000%" height="15" fill="rgb(210,80,10)" fg:x="369" fg:w="13"/><text x="57.0192%" y="943.50">c..</text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref::__static_ref_initialize (13 samples, 2.00%)</title><rect x="56.7692%" y="917" width="2.0000%" height="15" fill="rgb(205,24,29)" fg:x="369" fg:w="13"/><text x="57.0192%" y="927.50">&lt;..</text></g><g><title>regex::regex::bytes::Regex::new (13 samples, 2.00%)</title><rect x="56.7692%" y="901" width="2.0000%" height="15" fill="rgb(246,224,25)" fg:x="369" fg:w="13"/><text x="57.0192%" y="911.50">r..</text></g><g><title>regex::builders::bytes::RegexBuilder::build (13 samples, 2.00%)</title><rect x="56.7692%" y="885" width="2.0000%" height="15" fill="rgb(236,76,51)" fg:x="369" fg:w="13"/><text x="57.0192%" y="895.50">r..</text></g><g><title>regex::builders::Builder::build_one_bytes (13 samples, 2.00%)</title><rect x="56.7692%" y="869" width="2.0000%" height="15" fill="rgb(233,102,7)" fg:x="369" fg:w="13"/><text x="57.0192%" y="879.50">r..</text></g><g><title>regex_automata::meta::regex::Builder::build (13 samples, 2.00%)</title><rect x="56.7692%" y="853" width="2.0000%" height="15" fill="rgb(212,33,22)" fg:x="369" fg:w="13"/><text x="57.0192%" y="863.50">r..</text></g><g><title>regex_automata::meta::regex::Builder::build_many (13 samples, 2.00%)</title><rect x="56.7692%" y="837" width="2.0000%" height="15" fill="rgb(236,25,32)" fg:x="369" fg:w="13"/><text x="57.0192%" y="847.50">r..</text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (13 samples, 2.00%)</title><rect x="56.7692%" y="821" width="2.0000%" height="15" fill="rgb(250,142,30)" fg:x="369" fg:w="13"/><text x="57.0192%" y="831.50">r..</text></g><g><title>regex_automata::meta::strategy::new (13 samples, 2.00%)</title><rect x="56.7692%" y="805" width="2.0000%" height="15" fill="rgb(243,171,22)" fg:x="369" fg:w="13"/><text x="57.0192%" y="815.50">r..</text></g><g><title>regex_automata::meta::strategy::Core::new (8 samples, 1.23%)</title><rect x="57.5385%" y="789" width="1.2308%" height="15" fill="rgb(222,69,27)" fg:x="374" fg:w="8"/><text x="57.7885%" y="799.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (8 samples, 1.23%)</title><rect x="57.5385%" y="773" width="1.2308%" height="15" fill="rgb(226,42,16)" fg:x="374" fg:w="8"/><text x="57.7885%" y="783.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (8 samples, 1.23%)</title><rect x="57.5385%" y="757" width="1.2308%" height="15" fill="rgb(242,129,17)" fg:x="374" fg:w="8"/><text x="57.7885%" y="767.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::build (5 samples, 0.77%)</title><rect x="58.0000%" y="741" width="0.7692%" height="15" fill="rgb(205,136,15)" fg:x="377" fg:w="5"/><text x="58.2500%" y="751.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::Inner::add (1 samples, 0.15%)</title><rect x="58.6154%" y="725" width="0.1538%" height="15" fill="rgb(212,0,0)" fg:x="381" fg:w="1"/><text x="58.8654%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.15%)</title><rect x="58.6154%" y="709" width="0.1538%" height="15" fill="rgb(241,229,15)" fg:x="381" fg:w="1"/><text x="58.8654%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.15%)</title><rect x="58.6154%" y="693" width="0.1538%" height="15" fill="rgb(254,103,39)" fg:x="381" fg:w="1"/><text x="58.8654%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.15%)</title><rect x="58.6154%" y="677" width="0.1538%" height="15" fill="rgb(254,53,35)" fg:x="381" fg:w="1"/><text x="58.8654%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.15%)</title><rect x="58.6154%" y="661" width="0.1538%" height="15" fill="rgb(237,133,22)" fg:x="381" fg:w="1"/><text x="58.8654%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.15%)</title><rect x="58.6154%" y="645" width="0.1538%" height="15" fill="rgb(237,156,49)" fg:x="381" fg:w="1"/><text x="58.8654%" y="655.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.15%)</title><rect x="58.6154%" y="629" width="0.1538%" height="15" fill="rgb(214,150,36)" fg:x="381" fg:w="1"/><text x="58.8654%" y="639.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.15%)</title><rect x="58.6154%" y="613" width="0.1538%" height="15" fill="rgb(254,47,34)" fg:x="381" fg:w="1"/><text x="58.8654%" y="623.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.15%)</title><rect x="58.6154%" y="597" width="0.1538%" height="15" fill="rgb(254,73,4)" fg:x="381" fg:w="1"/><text x="58.8654%" y="607.50"></text></g><g><title>_int_realloc (1 samples, 0.15%)</title><rect x="58.6154%" y="581" width="0.1538%" height="15" fill="rgb(231,75,41)" fg:x="381" fg:w="1"/><text x="58.8654%" y="591.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="58.6154%" y="565" width="0.1538%" height="15" fill="rgb(222,219,51)" fg:x="381" fg:w="1"/><text x="58.8654%" y="575.50"></text></g><g><title>malloc_consolidate (1 samples, 0.15%)</title><rect x="58.6154%" y="549" width="0.1538%" height="15" fill="rgb(228,194,39)" fg:x="381" fg:w="1"/><text x="58.8654%" y="559.50"></text></g><g><title>_int_realloc (1 samples, 0.15%)</title><rect x="58.7692%" y="565" width="0.1538%" height="15" fill="rgb(231,75,41)" fg:x="382" fg:w="1"/><text x="59.0192%" y="575.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.15%)</title><rect x="58.7692%" y="549" width="0.1538%" height="15" fill="rgb(217,126,36)" fg:x="382" fg:w="1"/><text x="59.0192%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="58.7692%" y="533" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="382" fg:w="1"/><text x="59.0192%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="58.7692%" y="517" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="382" fg:w="1"/><text x="59.0192%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="58.7692%" y="501" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="382" fg:w="1"/><text x="59.0192%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="58.7692%" y="485" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="382" fg:w="1"/><text x="59.0192%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="58.7692%" y="469" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="382" fg:w="1"/><text x="59.0192%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="58.7692%" y="453" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="382" fg:w="1"/><text x="59.0192%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="58.7692%" y="437" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="382" fg:w="1"/><text x="59.0192%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="58.7692%" y="421" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="382" fg:w="1"/><text x="59.0192%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="58.7692%" y="405" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="382" fg:w="1"/><text x="59.0192%" y="415.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::Inner::add (2 samples, 0.31%)</title><rect x="58.7692%" y="709" width="0.3077%" height="15" fill="rgb(212,0,0)" fg:x="382" fg:w="2"/><text x="59.0192%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.31%)</title><rect x="58.7692%" y="693" width="0.3077%" height="15" fill="rgb(241,229,15)" fg:x="382" fg:w="2"/><text x="59.0192%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.31%)</title><rect x="58.7692%" y="677" width="0.3077%" height="15" fill="rgb(254,103,39)" fg:x="382" fg:w="2"/><text x="59.0192%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.31%)</title><rect x="58.7692%" y="661" width="0.3077%" height="15" fill="rgb(254,53,35)" fg:x="382" fg:w="2"/><text x="59.0192%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.31%)</title><rect x="58.7692%" y="645" width="0.3077%" height="15" fill="rgb(237,133,22)" fg:x="382" fg:w="2"/><text x="59.0192%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.31%)</title><rect x="58.7692%" y="629" width="0.3077%" height="15" fill="rgb(237,156,49)" fg:x="382" fg:w="2"/><text x="59.0192%" y="639.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.31%)</title><rect x="58.7692%" y="613" width="0.3077%" height="15" fill="rgb(214,150,36)" fg:x="382" fg:w="2"/><text x="59.0192%" y="623.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.31%)</title><rect x="58.7692%" y="597" width="0.3077%" height="15" fill="rgb(254,47,34)" fg:x="382" fg:w="2"/><text x="59.0192%" y="607.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.31%)</title><rect x="58.7692%" y="581" width="0.3077%" height="15" fill="rgb(254,73,4)" fg:x="382" fg:w="2"/><text x="59.0192%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (1 samples, 0.15%)</title><rect x="59.0769%" y="709" width="0.1538%" height="15" fill="rgb(249,199,35)" fg:x="384" fg:w="1"/><text x="59.3269%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (1 samples, 0.15%)</title><rect x="59.0769%" y="693" width="0.1538%" height="15" fill="rgb(216,52,5)" fg:x="384" fg:w="1"/><text x="59.3269%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="59.0769%" y="677" width="0.1538%" height="15" fill="rgb(212,159,3)" fg:x="384" fg:w="1"/><text x="59.3269%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="59.0769%" y="661" width="0.1538%" height="15" fill="rgb(231,142,39)" fg:x="384" fg:w="1"/><text x="59.3269%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.15%)</title><rect x="59.0769%" y="645" width="0.1538%" height="15" fill="rgb(249,2,22)" fg:x="384" fg:w="1"/><text x="59.3269%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.15%)</title><rect x="59.0769%" y="629" width="0.1538%" height="15" fill="rgb(254,53,35)" fg:x="384" fg:w="1"/><text x="59.3269%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.15%)</title><rect x="59.0769%" y="613" width="0.1538%" height="15" fill="rgb(237,133,22)" fg:x="384" fg:w="1"/><text x="59.3269%" y="623.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="59.0769%" y="597" width="0.1538%" height="15" fill="rgb(206,112,53)" fg:x="384" fg:w="1"/><text x="59.3269%" y="607.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="59.0769%" y="581" width="0.1538%" height="15" fill="rgb(222,219,51)" fg:x="384" fg:w="1"/><text x="59.3269%" y="591.50"></text></g><g><title>malloc_consolidate (1 samples, 0.15%)</title><rect x="59.0769%" y="565" width="0.1538%" height="15" fill="rgb(228,194,39)" fg:x="384" fg:w="1"/><text x="59.3269%" y="575.50"></text></g><g><title>unlink_chunk (1 samples, 0.15%)</title><rect x="59.0769%" y="549" width="0.1538%" height="15" fill="rgb(223,20,30)" fg:x="384" fg:w="1"/><text x="59.3269%" y="559.50"></text></g><g><title>tcache_put (1 samples, 0.15%)</title><rect x="59.2308%" y="517" width="0.1538%" height="15" fill="rgb(227,177,28)" fg:x="385" fg:w="1"/><text x="59.4808%" y="527.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_sysline_in_block_year (5 samples, 0.77%)</title><rect x="58.7692%" y="1109" width="0.7692%" height="15" fill="rgb(253,177,51)" fg:x="382" fg:w="5"/><text x="59.0192%" y="1119.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::parse_datetime_in_line_cached (5 samples, 0.77%)</title><rect x="58.7692%" y="1093" width="0.7692%" height="15" fill="rgb(231,75,50)" fg:x="382" fg:w="5"/><text x="59.0192%" y="1103.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::parse_datetime_in_line (5 samples, 0.77%)</title><rect x="58.7692%" y="1077" width="0.7692%" height="15" fill="rgb(234,54,15)" fg:x="382" fg:w="5"/><text x="59.0192%" y="1087.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_datetime_in_line (5 samples, 0.77%)</title><rect x="58.7692%" y="1061" width="0.7692%" height="15" fill="rgb(212,53,9)" fg:x="382" fg:w="5"/><text x="59.0192%" y="1071.50"></text></g><g><title>s4lib::data::datetime::bytes_to_regex_to_datetime (5 samples, 0.77%)</title><rect x="58.7692%" y="1045" width="0.7692%" height="15" fill="rgb(252,84,36)" fg:x="382" fg:w="5"/><text x="59.0192%" y="1055.50"></text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref (5 samples, 0.77%)</title><rect x="58.7692%" y="1029" width="0.7692%" height="15" fill="rgb(217,15,43)" fg:x="382" fg:w="5"/><text x="59.0192%" y="1039.50"></text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref::__stability (5 samples, 0.77%)</title><rect x="58.7692%" y="1013" width="0.7692%" height="15" fill="rgb(239,165,48)" fg:x="382" fg:w="5"/><text x="59.0192%" y="1023.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (5 samples, 0.77%)</title><rect x="58.7692%" y="997" width="0.7692%" height="15" fill="rgb(235,175,8)" fg:x="382" fg:w="5"/><text x="59.0192%" y="1007.50"></text></g><g><title>std::sync::once::Once::call_once (5 samples, 0.77%)</title><rect x="58.7692%" y="981" width="0.7692%" height="15" fill="rgb(247,17,47)" fg:x="382" fg:w="5"/><text x="59.0192%" y="991.50"></text></g><g><title>std::sys_common::once::futex::Once::call (5 samples, 0.77%)</title><rect x="58.7692%" y="965" width="0.7692%" height="15" fill="rgb(246,168,49)" fg:x="382" fg:w="5"/><text x="59.0192%" y="975.50"></text></g><g><title>std::sync::once::Once::call_once::{{closure}} (5 samples, 0.77%)</title><rect x="58.7692%" y="949" width="0.7692%" height="15" fill="rgb(237,63,35)" fg:x="382" fg:w="5"/><text x="59.0192%" y="959.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}} (5 samples, 0.77%)</title><rect x="58.7692%" y="933" width="0.7692%" height="15" fill="rgb(238,7,51)" fg:x="382" fg:w="5"/><text x="59.0192%" y="943.50"></text></g><g><title>core::ops::function::FnOnce::call_once (5 samples, 0.77%)</title><rect x="58.7692%" y="917" width="0.7692%" height="15" fill="rgb(210,80,10)" fg:x="382" fg:w="5"/><text x="59.0192%" y="927.50"></text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref::__static_ref_initialize (5 samples, 0.77%)</title><rect x="58.7692%" y="901" width="0.7692%" height="15" fill="rgb(205,24,29)" fg:x="382" fg:w="5"/><text x="59.0192%" y="911.50"></text></g><g><title>regex::regex::bytes::Regex::new (5 samples, 0.77%)</title><rect x="58.7692%" y="885" width="0.7692%" height="15" fill="rgb(246,224,25)" fg:x="382" fg:w="5"/><text x="59.0192%" y="895.50"></text></g><g><title>regex::builders::bytes::RegexBuilder::build (5 samples, 0.77%)</title><rect x="58.7692%" y="869" width="0.7692%" height="15" fill="rgb(236,76,51)" fg:x="382" fg:w="5"/><text x="59.0192%" y="879.50"></text></g><g><title>regex::builders::Builder::build_one_bytes (5 samples, 0.77%)</title><rect x="58.7692%" y="853" width="0.7692%" height="15" fill="rgb(233,102,7)" fg:x="382" fg:w="5"/><text x="59.0192%" y="863.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (5 samples, 0.77%)</title><rect x="58.7692%" y="837" width="0.7692%" height="15" fill="rgb(212,33,22)" fg:x="382" fg:w="5"/><text x="59.0192%" y="847.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many (5 samples, 0.77%)</title><rect x="58.7692%" y="821" width="0.7692%" height="15" fill="rgb(236,25,32)" fg:x="382" fg:w="5"/><text x="59.0192%" y="831.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (5 samples, 0.77%)</title><rect x="58.7692%" y="805" width="0.7692%" height="15" fill="rgb(250,142,30)" fg:x="382" fg:w="5"/><text x="59.0192%" y="815.50"></text></g><g><title>regex_automata::meta::strategy::new (5 samples, 0.77%)</title><rect x="58.7692%" y="789" width="0.7692%" height="15" fill="rgb(243,171,22)" fg:x="382" fg:w="5"/><text x="59.0192%" y="799.50"></text></g><g><title>regex_automata::meta::strategy::Core::new (5 samples, 0.77%)</title><rect x="58.7692%" y="773" width="0.7692%" height="15" fill="rgb(222,69,27)" fg:x="382" fg:w="5"/><text x="59.0192%" y="783.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (5 samples, 0.77%)</title><rect x="58.7692%" y="757" width="0.7692%" height="15" fill="rgb(226,42,16)" fg:x="382" fg:w="5"/><text x="59.0192%" y="767.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (5 samples, 0.77%)</title><rect x="58.7692%" y="741" width="0.7692%" height="15" fill="rgb(242,129,17)" fg:x="382" fg:w="5"/><text x="59.0192%" y="751.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::build (5 samples, 0.77%)</title><rect x="58.7692%" y="725" width="0.7692%" height="15" fill="rgb(205,136,15)" fg:x="382" fg:w="5"/><text x="59.0192%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.31%)</title><rect x="59.2308%" y="709" width="0.3077%" height="15" fill="rgb(209,26,30)" fg:x="385" fg:w="2"/><text x="59.4808%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.31%)</title><rect x="59.2308%" y="693" width="0.3077%" height="15" fill="rgb(229,121,46)" fg:x="385" fg:w="2"/><text x="59.4808%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.31%)</title><rect x="59.2308%" y="677" width="0.3077%" height="15" fill="rgb(221,172,50)" fg:x="385" fg:w="2"/><text x="59.4808%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.31%)</title><rect x="59.2308%" y="661" width="0.3077%" height="15" fill="rgb(216,42,52)" fg:x="385" fg:w="2"/><text x="59.4808%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.31%)</title><rect x="59.2308%" y="645" width="0.3077%" height="15" fill="rgb(249,207,12)" fg:x="385" fg:w="2"/><text x="59.4808%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.31%)</title><rect x="59.2308%" y="629" width="0.3077%" height="15" fill="rgb(224,194,14)" fg:x="385" fg:w="2"/><text x="59.4808%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.31%)</title><rect x="59.2308%" y="613" width="0.3077%" height="15" fill="rgb(227,204,5)" fg:x="385" fg:w="2"/><text x="59.4808%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.31%)</title><rect x="59.2308%" y="597" width="0.3077%" height="15" fill="rgb(231,114,21)" fg:x="385" fg:w="2"/><text x="59.4808%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.31%)</title><rect x="59.2308%" y="581" width="0.3077%" height="15" fill="rgb(238,209,2)" fg:x="385" fg:w="2"/><text x="59.4808%" y="591.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.31%)</title><rect x="59.2308%" y="565" width="0.3077%" height="15" fill="rgb(253,135,41)" fg:x="385" fg:w="2"/><text x="59.4808%" y="575.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.31%)</title><rect x="59.2308%" y="549" width="0.3077%" height="15" fill="rgb(206,112,53)" fg:x="385" fg:w="2"/><text x="59.4808%" y="559.50"></text></g><g><title>_int_malloc (2 samples, 0.31%)</title><rect x="59.2308%" y="533" width="0.3077%" height="15" fill="rgb(222,219,51)" fg:x="385" fg:w="2"/><text x="59.4808%" y="543.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::forward (1 samples, 0.15%)</title><rect x="59.5385%" y="533" width="0.1538%" height="15" fill="rgb(237,205,2)" fg:x="387" fg:w="1"/><text x="59.7885%" y="543.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.15%)</title><rect x="59.5385%" y="517" width="0.1538%" height="15" fill="rgb(248,129,10)" fg:x="387" fg:w="1"/><text x="59.7885%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.15%)</title><rect x="59.5385%" y="501" width="0.1538%" height="15" fill="rgb(231,114,21)" fg:x="387" fg:w="1"/><text x="59.7885%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.15%)</title><rect x="59.5385%" y="485" width="0.1538%" height="15" fill="rgb(238,209,2)" fg:x="387" fg:w="1"/><text x="59.7885%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.15%)</title><rect x="59.5385%" y="469" width="0.1538%" height="15" fill="rgb(253,135,41)" fg:x="387" fg:w="1"/><text x="59.7885%" y="479.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="59.5385%" y="453" width="0.1538%" height="15" fill="rgb(206,112,53)" fg:x="387" fg:w="1"/><text x="59.7885%" y="463.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::State::active_chunk (1 samples, 0.15%)</title><rect x="59.6923%" y="501" width="0.1538%" height="15" fill="rgb(212,119,10)" fg:x="388" fg:w="1"/><text x="59.9423%" y="511.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::State::active_chunk_start (1 samples, 0.15%)</title><rect x="59.6923%" y="485" width="0.1538%" height="15" fill="rgb(220,128,13)" fg:x="388" fg:w="1"/><text x="59.9423%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::last (1 samples, 0.15%)</title><rect x="59.6923%" y="469" width="0.1538%" height="15" fill="rgb(242,207,46)" fg:x="388" fg:w="1"/><text x="59.9423%" y="479.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::get_or_add_state (2 samples, 0.31%)</title><rect x="59.6923%" y="517" width="0.3077%" height="15" fill="rgb(249,22,31)" fg:x="388" fg:w="2"/><text x="59.9423%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.15%)</title><rect x="59.8462%" y="501" width="0.1538%" height="15" fill="rgb(241,229,15)" fg:x="389" fg:w="1"/><text x="60.0962%" y="511.50"></text></g><g><title>core::ptr::write (1 samples, 0.15%)</title><rect x="59.8462%" y="485" width="0.1538%" height="15" fill="rgb(209,143,44)" fg:x="389" fg:w="1"/><text x="60.0962%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.62%)</title><rect x="59.5385%" y="645" width="0.6154%" height="15" fill="rgb(214,109,53)" fg:x="387" fg:w="4"/><text x="59.7885%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.62%)</title><rect x="59.5385%" y="629" width="0.6154%" height="15" fill="rgb(254,35,30)" fg:x="387" fg:w="4"/><text x="59.7885%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (4 samples, 0.62%)</title><rect x="59.5385%" y="613" width="0.6154%" height="15" fill="rgb(226,169,23)" fg:x="387" fg:w="4"/><text x="59.7885%" y="623.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (4 samples, 0.62%)</title><rect x="59.5385%" y="597" width="0.6154%" height="15" fill="rgb(205,130,14)" fg:x="387" fg:w="4"/><text x="59.7885%" y="607.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (4 samples, 0.62%)</title><rect x="59.5385%" y="581" width="0.6154%" height="15" fill="rgb(235,200,16)" fg:x="387" fg:w="4"/><text x="59.7885%" y="591.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (4 samples, 0.62%)</title><rect x="59.5385%" y="565" width="0.6154%" height="15" fill="rgb(213,34,18)" fg:x="387" fg:w="4"/><text x="59.7885%" y="575.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (4 samples, 0.62%)</title><rect x="59.5385%" y="549" width="0.6154%" height="15" fill="rgb(253,35,22)" fg:x="387" fg:w="4"/><text x="59.7885%" y="559.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::add (3 samples, 0.46%)</title><rect x="59.6923%" y="533" width="0.4615%" height="15" fill="rgb(247,201,32)" fg:x="388" fg:w="3"/><text x="59.9423%" y="543.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::State::add_match (1 samples, 0.15%)</title><rect x="60.1538%" y="517" width="0.1538%" height="15" fill="rgb(206,206,41)" fg:x="391" fg:w="1"/><text x="60.4038%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::is_empty (1 samples, 0.15%)</title><rect x="60.1538%" y="501" width="0.1538%" height="15" fill="rgb(242,223,10)" fg:x="391" fg:w="1"/><text x="60.4038%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 0.15%)</title><rect x="60.1538%" y="485" width="0.1538%" height="15" fill="rgb(228,217,33)" fg:x="391" fg:w="1"/><text x="60.4038%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by_key::{{closure}} (1 samples, 0.15%)</title><rect x="60.3077%" y="469" width="0.1538%" height="15" fill="rgb(217,124,17)" fg:x="392" fg:w="1"/><text x="60.5577%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u8&gt;::cmp (1 samples, 0.15%)</title><rect x="60.3077%" y="453" width="0.1538%" height="15" fill="rgb(206,19,29)" fg:x="392" fg:w="1"/><text x="60.5577%" y="463.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by_key (2 samples, 0.31%)</title><rect x="60.3077%" y="501" width="0.3077%" height="15" fill="rgb(219,159,10)" fg:x="392" fg:w="2"/><text x="60.5577%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.31%)</title><rect x="60.3077%" y="485" width="0.3077%" height="15" fill="rgb(252,87,43)" fg:x="392" fg:w="2"/><text x="60.5577%" y="495.50"></text></g><g><title>core::ptr::write (2 samples, 0.31%)</title><rect x="60.6154%" y="485" width="0.3077%" height="15" fill="rgb(209,143,44)" fg:x="394" fg:w="2"/><text x="60.8654%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.46%)</title><rect x="60.6154%" y="501" width="0.4615%" height="15" fill="rgb(241,229,15)" fg:x="394" fg:w="3"/><text x="60.8654%" y="511.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::add (7 samples, 1.08%)</title><rect x="60.1538%" y="533" width="1.0769%" height="15" fill="rgb(247,201,32)" fg:x="391" fg:w="7"/><text x="60.4038%" y="543.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::get_or_add_state (6 samples, 0.92%)</title><rect x="60.3077%" y="517" width="0.9231%" height="15" fill="rgb(249,22,31)" fg:x="392" fg:w="6"/><text x="60.5577%" y="527.50"></text></g><g><title>&lt;regex_automata::nfa::thompson::literal_trie::State as core::default::Default&gt;::default (1 samples, 0.15%)</title><rect x="61.0769%" y="501" width="0.1538%" height="15" fill="rgb(208,73,9)" fg:x="397" fg:w="1"/><text x="61.3269%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_automata::nfa::thompson::literal_trie::Transition&gt;&gt; (1 samples, 0.15%)</title><rect x="61.2308%" y="453" width="0.1538%" height="15" fill="rgb(242,32,21)" fg:x="398" fg:w="1"/><text x="61.4808%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;regex_automata::nfa::thompson::literal_trie::Transition&gt;&gt; (1 samples, 0.15%)</title><rect x="61.2308%" y="437" width="0.1538%" height="15" fill="rgb(216,209,43)" fg:x="398" fg:w="1"/><text x="61.4808%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="61.2308%" y="421" width="0.1538%" height="15" fill="rgb(213,128,22)" fg:x="398" fg:w="1"/><text x="61.4808%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.15%)</title><rect x="61.2308%" y="405" width="0.1538%" height="15" fill="rgb(238,77,31)" fg:x="398" fg:w="1"/><text x="61.4808%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.15%)</title><rect x="61.2308%" y="389" width="0.1538%" height="15" fill="rgb(227,15,28)" fg:x="398" fg:w="1"/><text x="61.4808%" y="399.50"></text></g><g><title>__GI___libc_free (1 samples, 0.15%)</title><rect x="61.2308%" y="373" width="0.1538%" height="15" fill="rgb(247,8,17)" fg:x="398" fg:w="1"/><text x="61.4808%" y="383.50"></text></g><g><title>_int_free (1 samples, 0.15%)</title><rect x="61.2308%" y="357" width="0.1538%" height="15" fill="rgb(221,113,48)" fg:x="398" fg:w="1"/><text x="61.4808%" y="367.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (14 samples, 2.15%)</title><rect x="59.5385%" y="805" width="2.1538%" height="15" fill="rgb(226,42,16)" fg:x="387" fg:w="14"/><text x="59.7885%" y="815.50">r..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (14 samples, 2.15%)</title><rect x="59.5385%" y="789" width="2.1538%" height="15" fill="rgb(242,129,17)" fg:x="387" fg:w="14"/><text x="59.7885%" y="799.50">r..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (14 samples, 2.15%)</title><rect x="59.5385%" y="773" width="2.1538%" height="15" fill="rgb(247,137,3)" fg:x="387" fg:w="14"/><text x="59.7885%" y="783.50">r..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 2.15%)</title><rect x="59.5385%" y="757" width="2.1538%" height="15" fill="rgb(214,109,53)" fg:x="387" fg:w="14"/><text x="59.7885%" y="767.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::map (14 samples, 2.15%)</title><rect x="59.5385%" y="741" width="2.1538%" height="15" fill="rgb(254,35,30)" fg:x="387" fg:w="14"/><text x="59.7885%" y="751.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (14 samples, 2.15%)</title><rect x="59.5385%" y="725" width="2.1538%" height="15" fill="rgb(226,169,23)" fg:x="387" fg:w="14"/><text x="59.7885%" y="735.50">c..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile::{{closure}} (14 samples, 2.15%)</title><rect x="59.5385%" y="709" width="2.1538%" height="15" fill="rgb(218,216,52)" fg:x="387" fg:w="14"/><text x="59.7885%" y="719.50">r..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (14 samples, 2.15%)</title><rect x="59.5385%" y="693" width="2.1538%" height="15" fill="rgb(235,200,16)" fg:x="387" fg:w="14"/><text x="59.7885%" y="703.50">r..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (14 samples, 2.15%)</title><rect x="59.5385%" y="677" width="2.1538%" height="15" fill="rgb(213,34,18)" fg:x="387" fg:w="14"/><text x="59.7885%" y="687.50">r..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (14 samples, 2.15%)</title><rect x="59.5385%" y="661" width="2.1538%" height="15" fill="rgb(210,105,37)" fg:x="387" fg:w="14"/><text x="59.7885%" y="671.50">r..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (10 samples, 1.54%)</title><rect x="60.1538%" y="645" width="1.5385%" height="15" fill="rgb(222,94,14)" fg:x="391" fg:w="10"/><text x="60.4038%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (10 samples, 1.54%)</title><rect x="60.1538%" y="629" width="1.5385%" height="15" fill="rgb(254,35,30)" fg:x="391" fg:w="10"/><text x="60.4038%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (10 samples, 1.54%)</title><rect x="60.1538%" y="613" width="1.5385%" height="15" fill="rgb(226,169,23)" fg:x="391" fg:w="10"/><text x="60.4038%" y="623.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (10 samples, 1.54%)</title><rect x="60.1538%" y="597" width="1.5385%" height="15" fill="rgb(205,130,14)" fg:x="391" fg:w="10"/><text x="60.4038%" y="607.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (10 samples, 1.54%)</title><rect x="60.1538%" y="581" width="1.5385%" height="15" fill="rgb(235,200,16)" fg:x="391" fg:w="10"/><text x="60.4038%" y="591.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (10 samples, 1.54%)</title><rect x="60.1538%" y="565" width="1.5385%" height="15" fill="rgb(213,34,18)" fg:x="391" fg:w="10"/><text x="60.4038%" y="575.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (10 samples, 1.54%)</title><rect x="60.1538%" y="549" width="1.5385%" height="15" fill="rgb(253,35,22)" fg:x="391" fg:w="10"/><text x="60.4038%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::literal_trie::LiteralTrie&gt; (3 samples, 0.46%)</title><rect x="61.2308%" y="533" width="0.4615%" height="15" fill="rgb(244,70,29)" fg:x="398" fg:w="3"/><text x="61.4808%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_automata::nfa::thompson::literal_trie::State&gt;&gt; (3 samples, 0.46%)</title><rect x="61.2308%" y="517" width="0.4615%" height="15" fill="rgb(227,19,7)" fg:x="398" fg:w="3"/><text x="61.4808%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.46%)</title><rect x="61.2308%" y="501" width="0.4615%" height="15" fill="rgb(249,14,2)" fg:x="398" fg:w="3"/><text x="61.4808%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[regex_automata::nfa::thompson::literal_trie::State]&gt; (3 samples, 0.46%)</title><rect x="61.2308%" y="485" width="0.4615%" height="15" fill="rgb(241,61,51)" fg:x="398" fg:w="3"/><text x="61.4808%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::literal_trie::State&gt; (3 samples, 0.46%)</title><rect x="61.2308%" y="469" width="0.4615%" height="15" fill="rgb(245,189,53)" fg:x="398" fg:w="3"/><text x="61.4808%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt; (2 samples, 0.31%)</title><rect x="61.3846%" y="453" width="0.3077%" height="15" fill="rgb(213,102,40)" fg:x="399" fg:w="2"/><text x="61.6346%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize)&gt;&gt; (2 samples, 0.31%)</title><rect x="61.3846%" y="437" width="0.3077%" height="15" fill="rgb(243,139,46)" fg:x="399" fg:w="2"/><text x="61.6346%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.31%)</title><rect x="61.3846%" y="421" width="0.3077%" height="15" fill="rgb(213,128,22)" fg:x="399" fg:w="2"/><text x="61.6346%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.31%)</title><rect x="61.3846%" y="405" width="0.3077%" height="15" fill="rgb(238,77,31)" fg:x="399" fg:w="2"/><text x="61.6346%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.31%)</title><rect x="61.3846%" y="389" width="0.3077%" height="15" fill="rgb(227,15,28)" fg:x="399" fg:w="2"/><text x="61.6346%" y="399.50"></text></g><g><title>__GI___libc_free (2 samples, 0.31%)</title><rect x="61.3846%" y="373" width="0.3077%" height="15" fill="rgb(247,8,17)" fg:x="399" fg:w="2"/><text x="61.6346%" y="383.50"></text></g><g><title>regex_automata::dfa::onepass::InternalBuilder::new (1 samples, 0.15%)</title><rect x="61.6923%" y="757" width="0.1538%" height="15" fill="rgb(239,182,22)" fg:x="401" fg:w="1"/><text x="61.9423%" y="767.50"></text></g><g><title>alloc::vec::from_elem (1 samples, 0.15%)</title><rect x="61.6923%" y="741" width="0.1538%" height="15" fill="rgb(208,109,54)" fg:x="401" fg:w="1"/><text x="61.9423%" y="751.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1 samples, 0.15%)</title><rect x="61.6923%" y="725" width="0.1538%" height="15" fill="rgb(228,177,24)" fg:x="401" fg:w="1"/><text x="61.9423%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.15%)</title><rect x="61.6923%" y="709" width="0.1538%" height="15" fill="rgb(249,207,12)" fg:x="401" fg:w="1"/><text x="61.9423%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.15%)</title><rect x="61.6923%" y="693" width="0.1538%" height="15" fill="rgb(224,194,14)" fg:x="401" fg:w="1"/><text x="61.9423%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.15%)</title><rect x="61.6923%" y="677" width="0.1538%" height="15" fill="rgb(227,204,5)" fg:x="401" fg:w="1"/><text x="61.9423%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.15%)</title><rect x="61.6923%" y="661" width="0.1538%" height="15" fill="rgb(231,114,21)" fg:x="401" fg:w="1"/><text x="61.9423%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.15%)</title><rect x="61.6923%" y="645" width="0.1538%" height="15" fill="rgb(238,209,2)" fg:x="401" fg:w="1"/><text x="61.9423%" y="655.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.15%)</title><rect x="61.6923%" y="629" width="0.1538%" height="15" fill="rgb(253,135,41)" fg:x="401" fg:w="1"/><text x="61.9423%" y="639.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="61.6923%" y="613" width="0.1538%" height="15" fill="rgb(206,112,53)" fg:x="401" fg:w="1"/><text x="61.9423%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.77%)</title><rect x="61.8462%" y="469" width="0.7692%" height="15" fill="rgb(210,204,4)" fg:x="402" fg:w="5"/><text x="62.0962%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.77%)</title><rect x="61.8462%" y="453" width="0.7692%" height="15" fill="rgb(210,204,4)" fg:x="402" fg:w="5"/><text x="62.0962%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.77%)</title><rect x="61.8462%" y="437" width="0.7692%" height="15" fill="rgb(210,204,4)" fg:x="402" fg:w="5"/><text x="62.0962%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.77%)</title><rect x="61.8462%" y="421" width="0.7692%" height="15" fill="rgb(210,204,4)" fg:x="402" fg:w="5"/><text x="62.0962%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.92%)</title><rect x="61.8462%" y="501" width="0.9231%" height="15" fill="rgb(210,204,4)" fg:x="402" fg:w="6"/><text x="62.0962%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.92%)</title><rect x="61.8462%" y="485" width="0.9231%" height="15" fill="rgb(210,204,4)" fg:x="402" fg:w="6"/><text x="62.0962%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 1.08%)</title><rect x="61.8462%" y="549" width="1.0769%" height="15" fill="rgb(210,204,4)" fg:x="402" fg:w="7"/><text x="62.0962%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 1.08%)</title><rect x="61.8462%" y="533" width="1.0769%" height="15" fill="rgb(210,204,4)" fg:x="402" fg:w="7"/><text x="62.0962%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 1.08%)</title><rect x="61.8462%" y="517" width="1.0769%" height="15" fill="rgb(210,204,4)" fg:x="402" fg:w="7"/><text x="62.0962%" y="527.50"></text></g><g><title>regex_automata::dfa::onepass::InternalBuilder::add_dfa_state_for_nfa_state (10 samples, 1.54%)</title><rect x="61.8462%" y="725" width="1.5385%" height="15" fill="rgb(226,222,5)" fg:x="402" fg:w="10"/><text x="62.0962%" y="735.50"></text></g><g><title>regex_automata::dfa::onepass::InternalBuilder::add_empty_state (10 samples, 1.54%)</title><rect x="61.8462%" y="709" width="1.5385%" height="15" fill="rgb(249,155,54)" fg:x="402" fg:w="10"/><text x="62.0962%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (10 samples, 1.54%)</title><rect x="61.8462%" y="693" width="1.5385%" height="15" fill="rgb(205,186,49)" fg:x="402" fg:w="10"/><text x="62.0962%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (10 samples, 1.54%)</title><rect x="61.8462%" y="677" width="1.5385%" height="15" fill="rgb(232,211,42)" fg:x="402" fg:w="10"/><text x="62.0962%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (10 samples, 1.54%)</title><rect x="61.8462%" y="661" width="1.5385%" height="15" fill="rgb(214,146,48)" fg:x="402" fg:w="10"/><text x="62.0962%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (10 samples, 1.54%)</title><rect x="61.8462%" y="645" width="1.5385%" height="15" fill="rgb(242,133,26)" fg:x="402" fg:w="10"/><text x="62.0962%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (10 samples, 1.54%)</title><rect x="61.8462%" y="629" width="1.5385%" height="15" fill="rgb(223,137,46)" fg:x="402" fg:w="10"/><text x="62.0962%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each::check::{{closure}} (10 samples, 1.54%)</title><rect x="61.8462%" y="613" width="1.5385%" height="15" fill="rgb(234,154,36)" fg:x="402" fg:w="10"/><text x="62.0962%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::{{closure}} (10 samples, 1.54%)</title><rect x="61.8462%" y="597" width="1.5385%" height="15" fill="rgb(221,227,48)" fg:x="402" fg:w="10"/><text x="62.0962%" y="607.50"></text></g><g><title>core::ptr::write (10 samples, 1.54%)</title><rect x="61.8462%" y="581" width="1.5385%" height="15" fill="rgb(209,143,44)" fg:x="402" fg:w="10"/><text x="62.0962%" y="591.50"></text></g><g><title>__memset_avx512_unaligned_erms (10 samples, 1.54%)</title><rect x="61.8462%" y="565" width="1.5385%" height="15" fill="rgb(240,145,53)" fg:x="402" fg:w="10"/><text x="62.0962%" y="575.50"></text></g><g><title>regex_automata::dfa::onepass::InternalBuilder::compile_transition (11 samples, 1.69%)</title><rect x="61.8462%" y="741" width="1.6923%" height="15" fill="rgb(230,62,50)" fg:x="402" fg:w="11"/><text x="62.0962%" y="751.50"></text></g><g><title>regex_automata::dfa::onepass::DFA::transition (1 samples, 0.15%)</title><rect x="63.3846%" y="725" width="0.1538%" height="15" fill="rgb(217,30,4)" fg:x="412" fg:w="1"/><text x="63.6346%" y="735.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_datetime_in_line (27 samples, 4.15%)</title><rect x="59.5385%" y="1109" width="4.1538%" height="15" fill="rgb(212,53,9)" fg:x="387" fg:w="27"/><text x="59.7885%" y="1119.50">s4lib..</text></g><g><title>s4lib::data::datetime::bytes_to_regex_to_datetime (27 samples, 4.15%)</title><rect x="59.5385%" y="1093" width="4.1538%" height="15" fill="rgb(252,84,36)" fg:x="387" fg:w="27"/><text x="59.7885%" y="1103.50">s4lib..</text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref (27 samples, 4.15%)</title><rect x="59.5385%" y="1077" width="4.1538%" height="15" fill="rgb(217,15,43)" fg:x="387" fg:w="27"/><text x="59.7885%" y="1087.50">&lt;s4li..</text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref::__stability (27 samples, 4.15%)</title><rect x="59.5385%" y="1061" width="4.1538%" height="15" fill="rgb(239,165,48)" fg:x="387" fg:w="27"/><text x="59.7885%" y="1071.50">&lt;s4li..</text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (27 samples, 4.15%)</title><rect x="59.5385%" y="1045" width="4.1538%" height="15" fill="rgb(235,175,8)" fg:x="387" fg:w="27"/><text x="59.7885%" y="1055.50">lazy_..</text></g><g><title>std::sync::once::Once::call_once (27 samples, 4.15%)</title><rect x="59.5385%" y="1029" width="4.1538%" height="15" fill="rgb(247,17,47)" fg:x="387" fg:w="27"/><text x="59.7885%" y="1039.50">std::..</text></g><g><title>std::sys_common::once::futex::Once::call (27 samples, 4.15%)</title><rect x="59.5385%" y="1013" width="4.1538%" height="15" fill="rgb(246,168,49)" fg:x="387" fg:w="27"/><text x="59.7885%" y="1023.50">std::..</text></g><g><title>std::sync::once::Once::call_once::{{closure}} (27 samples, 4.15%)</title><rect x="59.5385%" y="997" width="4.1538%" height="15" fill="rgb(237,63,35)" fg:x="387" fg:w="27"/><text x="59.7885%" y="1007.50">std::..</text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}} (27 samples, 4.15%)</title><rect x="59.5385%" y="981" width="4.1538%" height="15" fill="rgb(238,7,51)" fg:x="387" fg:w="27"/><text x="59.7885%" y="991.50">lazy_..</text></g><g><title>core::ops::function::FnOnce::call_once (27 samples, 4.15%)</title><rect x="59.5385%" y="965" width="4.1538%" height="15" fill="rgb(210,80,10)" fg:x="387" fg:w="27"/><text x="59.7885%" y="975.50">core:..</text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref::__static_ref_initialize (27 samples, 4.15%)</title><rect x="59.5385%" y="949" width="4.1538%" height="15" fill="rgb(205,24,29)" fg:x="387" fg:w="27"/><text x="59.7885%" y="959.50">&lt;s4li..</text></g><g><title>regex::regex::bytes::Regex::new (27 samples, 4.15%)</title><rect x="59.5385%" y="933" width="4.1538%" height="15" fill="rgb(246,224,25)" fg:x="387" fg:w="27"/><text x="59.7885%" y="943.50">regex..</text></g><g><title>regex::builders::bytes::RegexBuilder::build (27 samples, 4.15%)</title><rect x="59.5385%" y="917" width="4.1538%" height="15" fill="rgb(236,76,51)" fg:x="387" fg:w="27"/><text x="59.7885%" y="927.50">regex..</text></g><g><title>regex::builders::Builder::build_one_bytes (27 samples, 4.15%)</title><rect x="59.5385%" y="901" width="4.1538%" height="15" fill="rgb(233,102,7)" fg:x="387" fg:w="27"/><text x="59.7885%" y="911.50">regex..</text></g><g><title>regex_automata::meta::regex::Builder::build (27 samples, 4.15%)</title><rect x="59.5385%" y="885" width="4.1538%" height="15" fill="rgb(212,33,22)" fg:x="387" fg:w="27"/><text x="59.7885%" y="895.50">regex..</text></g><g><title>regex_automata::meta::regex::Builder::build_many (27 samples, 4.15%)</title><rect x="59.5385%" y="869" width="4.1538%" height="15" fill="rgb(236,25,32)" fg:x="387" fg:w="27"/><text x="59.7885%" y="879.50">regex..</text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (27 samples, 4.15%)</title><rect x="59.5385%" y="853" width="4.1538%" height="15" fill="rgb(250,142,30)" fg:x="387" fg:w="27"/><text x="59.7885%" y="863.50">regex..</text></g><g><title>regex_automata::meta::strategy::new (27 samples, 4.15%)</title><rect x="59.5385%" y="837" width="4.1538%" height="15" fill="rgb(243,171,22)" fg:x="387" fg:w="27"/><text x="59.7885%" y="847.50">regex..</text></g><g><title>regex_automata::meta::strategy::Core::new (27 samples, 4.15%)</title><rect x="59.5385%" y="821" width="4.1538%" height="15" fill="rgb(222,69,27)" fg:x="387" fg:w="27"/><text x="59.7885%" y="831.50">regex..</text></g><g><title>regex_automata::meta::wrappers::OnePass::new (13 samples, 2.00%)</title><rect x="61.6923%" y="805" width="2.0000%" height="15" fill="rgb(235,224,47)" fg:x="401" fg:w="13"/><text x="61.9423%" y="815.50">r..</text></g><g><title>regex_automata::meta::wrappers::OnePassEngine::new (13 samples, 2.00%)</title><rect x="61.6923%" y="789" width="2.0000%" height="15" fill="rgb(247,185,25)" fg:x="401" fg:w="13"/><text x="61.9423%" y="799.50">r..</text></g><g><title>regex_automata::dfa::onepass::Builder::build_from_nfa (13 samples, 2.00%)</title><rect x="61.6923%" y="773" width="2.0000%" height="15" fill="rgb(209,62,19)" fg:x="401" fg:w="13"/><text x="61.9423%" y="783.50">r..</text></g><g><title>regex_automata::dfa::onepass::InternalBuilder::build (12 samples, 1.85%)</title><rect x="61.8462%" y="757" width="1.8462%" height="15" fill="rgb(206,107,24)" fg:x="402" fg:w="12"/><text x="62.0962%" y="767.50">r..</text></g><g><title>regex_automata::nfa::thompson::literal_trie::State::add_match (1 samples, 0.15%)</title><rect x="63.6923%" y="533" width="0.1538%" height="15" fill="rgb(206,206,41)" fg:x="414" fg:w="1"/><text x="63.9423%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.15%)</title><rect x="63.6923%" y="517" width="0.1538%" height="15" fill="rgb(241,229,15)" fg:x="414" fg:w="1"/><text x="63.9423%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.15%)</title><rect x="63.6923%" y="501" width="0.1538%" height="15" fill="rgb(254,103,39)" fg:x="414" fg:w="1"/><text x="63.9423%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.15%)</title><rect x="63.6923%" y="485" width="0.1538%" height="15" fill="rgb(254,53,35)" fg:x="414" fg:w="1"/><text x="63.9423%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.15%)</title><rect x="63.6923%" y="469" width="0.1538%" height="15" fill="rgb(237,133,22)" fg:x="414" fg:w="1"/><text x="63.9423%" y="479.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="63.6923%" y="453" width="0.1538%" height="15" fill="rgb(206,112,53)" fg:x="414" fg:w="1"/><text x="63.9423%" y="463.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="63.6923%" y="437" width="0.1538%" height="15" fill="rgb(222,219,51)" fg:x="414" fg:w="1"/><text x="63.9423%" y="447.50"></text></g><g><title>regex_automata::meta::strategy::ReverseInner::new (2 samples, 0.31%)</title><rect x="63.6923%" y="837" width="0.3077%" height="15" fill="rgb(225,146,32)" fg:x="414" fg:w="2"/><text x="63.9423%" y="847.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_from_hir (2 samples, 0.31%)</title><rect x="63.6923%" y="821" width="0.3077%" height="15" fill="rgb(210,66,46)" fg:x="414" fg:w="2"/><text x="63.9423%" y="831.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (2 samples, 0.31%)</title><rect x="63.6923%" y="805" width="0.3077%" height="15" fill="rgb(226,42,16)" fg:x="414" fg:w="2"/><text x="63.9423%" y="815.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (2 samples, 0.31%)</title><rect x="63.6923%" y="789" width="0.3077%" height="15" fill="rgb(242,129,17)" fg:x="414" fg:w="2"/><text x="63.9423%" y="799.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (2 samples, 0.31%)</title><rect x="63.6923%" y="773" width="0.3077%" height="15" fill="rgb(247,137,3)" fg:x="414" fg:w="2"/><text x="63.9423%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.31%)</title><rect x="63.6923%" y="757" width="0.3077%" height="15" fill="rgb(214,109,53)" fg:x="414" fg:w="2"/><text x="63.9423%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.31%)</title><rect x="63.6923%" y="741" width="0.3077%" height="15" fill="rgb(254,35,30)" fg:x="414" fg:w="2"/><text x="63.9423%" y="751.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.31%)</title><rect x="63.6923%" y="725" width="0.3077%" height="15" fill="rgb(226,169,23)" fg:x="414" fg:w="2"/><text x="63.9423%" y="735.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile::{{closure}} (2 samples, 0.31%)</title><rect x="63.6923%" y="709" width="0.3077%" height="15" fill="rgb(218,216,52)" fg:x="414" fg:w="2"/><text x="63.9423%" y="719.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (2 samples, 0.31%)</title><rect x="63.6923%" y="693" width="0.3077%" height="15" fill="rgb(235,200,16)" fg:x="414" fg:w="2"/><text x="63.9423%" y="703.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (2 samples, 0.31%)</title><rect x="63.6923%" y="677" width="0.3077%" height="15" fill="rgb(213,34,18)" fg:x="414" fg:w="2"/><text x="63.9423%" y="687.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (2 samples, 0.31%)</title><rect x="63.6923%" y="661" width="0.3077%" height="15" fill="rgb(210,105,37)" fg:x="414" fg:w="2"/><text x="63.9423%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (2 samples, 0.31%)</title><rect x="63.6923%" y="645" width="0.3077%" height="15" fill="rgb(222,94,14)" fg:x="414" fg:w="2"/><text x="63.9423%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.31%)</title><rect x="63.6923%" y="629" width="0.3077%" height="15" fill="rgb(254,35,30)" fg:x="414" fg:w="2"/><text x="63.9423%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.31%)</title><rect x="63.6923%" y="613" width="0.3077%" height="15" fill="rgb(226,169,23)" fg:x="414" fg:w="2"/><text x="63.9423%" y="623.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (2 samples, 0.31%)</title><rect x="63.6923%" y="597" width="0.3077%" height="15" fill="rgb(205,130,14)" fg:x="414" fg:w="2"/><text x="63.9423%" y="607.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (2 samples, 0.31%)</title><rect x="63.6923%" y="581" width="0.3077%" height="15" fill="rgb(213,34,18)" fg:x="414" fg:w="2"/><text x="63.9423%" y="591.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (2 samples, 0.31%)</title><rect x="63.6923%" y="565" width="0.3077%" height="15" fill="rgb(253,35,22)" fg:x="414" fg:w="2"/><text x="63.9423%" y="575.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::add (2 samples, 0.31%)</title><rect x="63.6923%" y="549" width="0.3077%" height="15" fill="rgb(247,201,32)" fg:x="414" fg:w="2"/><text x="63.9423%" y="559.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::get_or_add_state (1 samples, 0.15%)</title><rect x="63.8462%" y="533" width="0.1538%" height="15" fill="rgb(249,22,31)" fg:x="415" fg:w="1"/><text x="64.0962%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.15%)</title><rect x="63.8462%" y="517" width="0.1538%" height="15" fill="rgb(241,229,15)" fg:x="415" fg:w="1"/><text x="64.0962%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.15%)</title><rect x="63.8462%" y="501" width="0.1538%" height="15" fill="rgb(254,103,39)" fg:x="415" fg:w="1"/><text x="64.0962%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.15%)</title><rect x="63.8462%" y="485" width="0.1538%" height="15" fill="rgb(254,53,35)" fg:x="415" fg:w="1"/><text x="64.0962%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.15%)</title><rect x="63.8462%" y="469" width="0.1538%" height="15" fill="rgb(237,133,22)" fg:x="415" fg:w="1"/><text x="64.0962%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.15%)</title><rect x="63.8462%" y="453" width="0.1538%" height="15" fill="rgb(237,156,49)" fg:x="415" fg:w="1"/><text x="64.0962%" y="463.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.15%)</title><rect x="63.8462%" y="437" width="0.1538%" height="15" fill="rgb(214,150,36)" fg:x="415" fg:w="1"/><text x="64.0962%" y="447.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.15%)</title><rect x="63.8462%" y="421" width="0.1538%" height="15" fill="rgb(254,47,34)" fg:x="415" fg:w="1"/><text x="64.0962%" y="431.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.15%)</title><rect x="63.8462%" y="405" width="0.1538%" height="15" fill="rgb(254,73,4)" fg:x="415" fg:w="1"/><text x="64.0962%" y="415.50"></text></g><g><title>_int_realloc (1 samples, 0.15%)</title><rect x="63.8462%" y="389" width="0.1538%" height="15" fill="rgb(231,75,41)" fg:x="415" fg:w="1"/><text x="64.0962%" y="399.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.15%)</title><rect x="63.8462%" y="373" width="0.1538%" height="15" fill="rgb(217,126,36)" fg:x="415" fg:w="1"/><text x="64.0962%" y="383.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add (1 samples, 0.15%)</title><rect x="64.0000%" y="517" width="0.1538%" height="15" fill="rgb(253,91,29)" fg:x="416" fg:w="1"/><text x="64.2500%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.15%)</title><rect x="64.0000%" y="501" width="0.1538%" height="15" fill="rgb(241,229,15)" fg:x="416" fg:w="1"/><text x="64.2500%" y="511.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add_union (2 samples, 0.31%)</title><rect x="64.0000%" y="533" width="0.3077%" height="15" fill="rgb(247,38,8)" fg:x="416" fg:w="2"/><text x="64.2500%" y="543.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add_sparse (1 samples, 0.15%)</title><rect x="64.3077%" y="533" width="0.1538%" height="15" fill="rgb(233,153,44)" fg:x="418" fg:w="1"/><text x="64.5577%" y="543.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add (1 samples, 0.15%)</title><rect x="64.3077%" y="517" width="0.1538%" height="15" fill="rgb(253,91,29)" fg:x="418" fg:w="1"/><text x="64.5577%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.15%)</title><rect x="64.3077%" y="501" width="0.1538%" height="15" fill="rgb(241,229,15)" fg:x="418" fg:w="1"/><text x="64.5577%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_automata::nfa::thompson::nfa::Transition&gt;&gt; (1 samples, 0.15%)</title><rect x="64.4615%" y="533" width="0.1538%" height="15" fill="rgb(207,29,6)" fg:x="419" fg:w="1"/><text x="64.7115%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;regex_automata::nfa::thompson::nfa::Transition&gt;&gt; (1 samples, 0.15%)</title><rect x="64.4615%" y="517" width="0.1538%" height="15" fill="rgb(228,146,49)" fg:x="419" fg:w="1"/><text x="64.7115%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="64.4615%" y="501" width="0.1538%" height="15" fill="rgb(213,128,22)" fg:x="419" fg:w="1"/><text x="64.7115%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.15%)</title><rect x="64.4615%" y="485" width="0.1538%" height="15" fill="rgb(238,77,31)" fg:x="419" fg:w="1"/><text x="64.7115%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.15%)</title><rect x="64.4615%" y="469" width="0.1538%" height="15" fill="rgb(227,15,28)" fg:x="419" fg:w="1"/><text x="64.7115%" y="479.50"></text></g><g><title>__GI___libc_free (1 samples, 0.15%)</title><rect x="64.4615%" y="453" width="0.1538%" height="15" fill="rgb(247,8,17)" fg:x="419" fg:w="1"/><text x="64.7115%" y="463.50"></text></g><g><title>_int_free (1 samples, 0.15%)</title><rect x="64.4615%" y="437" width="0.1538%" height="15" fill="rgb(221,113,48)" fg:x="419" fg:w="1"/><text x="64.7115%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (2 samples, 0.31%)</title><rect x="64.6154%" y="469" width="0.3077%" height="15" fill="rgb(206,149,53)" fg:x="420" fg:w="2"/><text x="64.8654%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.46%)</title><rect x="64.6154%" y="533" width="0.4615%" height="15" fill="rgb(241,229,15)" fg:x="420" fg:w="3"/><text x="64.8654%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.46%)</title><rect x="64.6154%" y="517" width="0.4615%" height="15" fill="rgb(254,103,39)" fg:x="420" fg:w="3"/><text x="64.8654%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.46%)</title><rect x="64.6154%" y="501" width="0.4615%" height="15" fill="rgb(254,53,35)" fg:x="420" fg:w="3"/><text x="64.8654%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.46%)</title><rect x="64.6154%" y="485" width="0.4615%" height="15" fill="rgb(237,133,22)" fg:x="420" fg:w="3"/><text x="64.8654%" y="495.50"></text></g><g><title>__rdl_alloc (1 samples, 0.15%)</title><rect x="64.9231%" y="469" width="0.1538%" height="15" fill="rgb(241,201,43)" fg:x="422" fg:w="1"/><text x="65.1731%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (1 samples, 0.15%)</title><rect x="65.0769%" y="533" width="0.1538%" height="15" fill="rgb(216,0,40)" fg:x="423" fg:w="1"/><text x="65.3269%" y="543.50"></text></g><g><title>core::ptr::read (1 samples, 0.15%)</title><rect x="65.0769%" y="517" width="0.1538%" height="15" fill="rgb(222,157,29)" fg:x="423" fg:w="1"/><text x="65.3269%" y="527.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (1 samples, 0.15%)</title><rect x="65.0769%" y="501" width="0.1538%" height="15" fill="rgb(234,151,54)" fg:x="423" fg:w="1"/><text x="65.3269%" y="511.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::compile (14 samples, 2.15%)</title><rect x="64.0000%" y="549" width="2.1538%" height="15" fill="rgb(233,39,2)" fg:x="416" fg:w="14"/><text x="64.2500%" y="559.50">r..</text></g><g><title>_int_malloc (2 samples, 0.31%)</title><rect x="66.1538%" y="437" width="0.3077%" height="15" fill="rgb(222,219,51)" fg:x="430" fg:w="2"/><text x="66.4038%" y="447.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::State::add_match (3 samples, 0.46%)</title><rect x="66.1538%" y="533" width="0.4615%" height="15" fill="rgb(206,206,41)" fg:x="430" fg:w="3"/><text x="66.4038%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.46%)</title><rect x="66.1538%" y="517" width="0.4615%" height="15" fill="rgb(241,229,15)" fg:x="430" fg:w="3"/><text x="66.4038%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.46%)</title><rect x="66.1538%" y="501" width="0.4615%" height="15" fill="rgb(254,103,39)" fg:x="430" fg:w="3"/><text x="66.4038%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.46%)</title><rect x="66.1538%" y="485" width="0.4615%" height="15" fill="rgb(254,53,35)" fg:x="430" fg:w="3"/><text x="66.4038%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.46%)</title><rect x="66.1538%" y="469" width="0.4615%" height="15" fill="rgb(237,133,22)" fg:x="430" fg:w="3"/><text x="66.4038%" y="479.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.46%)</title><rect x="66.1538%" y="453" width="0.4615%" height="15" fill="rgb(206,112,53)" fg:x="430" fg:w="3"/><text x="66.4038%" y="463.50"></text></g><g><title>_int_realloc (1 samples, 0.15%)</title><rect x="66.6154%" y="389" width="0.1538%" height="15" fill="rgb(231,75,41)" fg:x="433" fg:w="1"/><text x="66.8654%" y="399.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.15%)</title><rect x="66.6154%" y="373" width="0.1538%" height="15" fill="rgb(217,126,36)" fg:x="433" fg:w="1"/><text x="66.8654%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.31%)</title><rect x="66.6154%" y="517" width="0.3077%" height="15" fill="rgb(241,229,15)" fg:x="433" fg:w="2"/><text x="66.8654%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.31%)</title><rect x="66.6154%" y="501" width="0.3077%" height="15" fill="rgb(254,103,39)" fg:x="433" fg:w="2"/><text x="66.8654%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.31%)</title><rect x="66.6154%" y="485" width="0.3077%" height="15" fill="rgb(254,53,35)" fg:x="433" fg:w="2"/><text x="66.8654%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.31%)</title><rect x="66.6154%" y="469" width="0.3077%" height="15" fill="rgb(237,133,22)" fg:x="433" fg:w="2"/><text x="66.8654%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.31%)</title><rect x="66.6154%" y="453" width="0.3077%" height="15" fill="rgb(237,156,49)" fg:x="433" fg:w="2"/><text x="66.8654%" y="463.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.31%)</title><rect x="66.6154%" y="437" width="0.3077%" height="15" fill="rgb(214,150,36)" fg:x="433" fg:w="2"/><text x="66.8654%" y="447.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.31%)</title><rect x="66.6154%" y="421" width="0.3077%" height="15" fill="rgb(254,47,34)" fg:x="433" fg:w="2"/><text x="66.8654%" y="431.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.31%)</title><rect x="66.6154%" y="405" width="0.3077%" height="15" fill="rgb(254,73,4)" fg:x="433" fg:w="2"/><text x="66.8654%" y="415.50"></text></g><g><title>arena_for_chunk (1 samples, 0.15%)</title><rect x="66.9231%" y="405" width="0.1538%" height="15" fill="rgb(234,26,42)" fg:x="435" fg:w="1"/><text x="67.1731%" y="415.50"></text></g><g><title>arena_for_chunk (1 samples, 0.15%)</title><rect x="66.9231%" y="389" width="0.1538%" height="15" fill="rgb(234,26,42)" fg:x="435" fg:w="1"/><text x="67.1731%" y="399.50"></text></g><g><title>heap_for_ptr (1 samples, 0.15%)</title><rect x="66.9231%" y="373" width="0.1538%" height="15" fill="rgb(232,140,25)" fg:x="435" fg:w="1"/><text x="67.1731%" y="383.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.31%)</title><rect x="66.9231%" y="421" width="0.3077%" height="15" fill="rgb(206,112,53)" fg:x="435" fg:w="2"/><text x="67.1731%" y="431.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="67.0769%" y="405" width="0.1538%" height="15" fill="rgb(222,219,51)" fg:x="436" fg:w="1"/><text x="67.3269%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.15%)</title><rect x="67.2308%" y="421" width="0.1538%" height="15" fill="rgb(237,156,49)" fg:x="437" fg:w="1"/><text x="67.4808%" y="431.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.15%)</title><rect x="67.2308%" y="405" width="0.1538%" height="15" fill="rgb(214,150,36)" fg:x="437" fg:w="1"/><text x="67.4808%" y="415.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.15%)</title><rect x="67.2308%" y="389" width="0.1538%" height="15" fill="rgb(254,47,34)" fg:x="437" fg:w="1"/><text x="67.4808%" y="399.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.15%)</title><rect x="67.2308%" y="373" width="0.1538%" height="15" fill="rgb(254,73,4)" fg:x="437" fg:w="1"/><text x="67.4808%" y="383.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::add (9 samples, 1.38%)</title><rect x="66.1538%" y="549" width="1.3846%" height="15" fill="rgb(247,201,32)" fg:x="430" fg:w="9"/><text x="66.4038%" y="559.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::get_or_add_state (6 samples, 0.92%)</title><rect x="66.6154%" y="533" width="0.9231%" height="15" fill="rgb(249,22,31)" fg:x="433" fg:w="6"/><text x="66.8654%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (4 samples, 0.62%)</title><rect x="66.9231%" y="517" width="0.6154%" height="15" fill="rgb(222,129,7)" fg:x="435" fg:w="4"/><text x="67.1731%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.62%)</title><rect x="66.9231%" y="501" width="0.6154%" height="15" fill="rgb(212,159,3)" fg:x="435" fg:w="4"/><text x="67.1731%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.62%)</title><rect x="66.9231%" y="485" width="0.6154%" height="15" fill="rgb(231,142,39)" fg:x="435" fg:w="4"/><text x="67.1731%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.62%)</title><rect x="66.9231%" y="469" width="0.6154%" height="15" fill="rgb(249,2,22)" fg:x="435" fg:w="4"/><text x="67.1731%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.62%)</title><rect x="66.9231%" y="453" width="0.6154%" height="15" fill="rgb(254,53,35)" fg:x="435" fg:w="4"/><text x="67.1731%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.62%)</title><rect x="66.9231%" y="437" width="0.6154%" height="15" fill="rgb(237,133,22)" fg:x="435" fg:w="4"/><text x="67.1731%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_automata::nfa::thompson::literal_trie::Transition&gt;&gt; (1 samples, 0.15%)</title><rect x="67.5385%" y="469" width="0.1538%" height="15" fill="rgb(242,32,21)" fg:x="439" fg:w="1"/><text x="67.7885%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;regex_automata::nfa::thompson::literal_trie::Transition&gt;&gt; (1 samples, 0.15%)</title><rect x="67.5385%" y="453" width="0.1538%" height="15" fill="rgb(216,209,43)" fg:x="439" fg:w="1"/><text x="67.7885%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="67.5385%" y="437" width="0.1538%" height="15" fill="rgb(213,128,22)" fg:x="439" fg:w="1"/><text x="67.7885%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.15%)</title><rect x="67.5385%" y="421" width="0.1538%" height="15" fill="rgb(238,77,31)" fg:x="439" fg:w="1"/><text x="67.7885%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.15%)</title><rect x="67.5385%" y="405" width="0.1538%" height="15" fill="rgb(227,15,28)" fg:x="439" fg:w="1"/><text x="67.7885%" y="415.50"></text></g><g><title>__GI___libc_free (1 samples, 0.15%)</title><rect x="67.5385%" y="389" width="0.1538%" height="15" fill="rgb(247,8,17)" fg:x="439" fg:w="1"/><text x="67.7885%" y="399.50"></text></g><g><title>_int_free (1 samples, 0.15%)</title><rect x="67.5385%" y="373" width="0.1538%" height="15" fill="rgb(221,113,48)" fg:x="439" fg:w="1"/><text x="67.7885%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 4.00%)</title><rect x="64.0000%" y="661" width="4.0000%" height="15" fill="rgb(214,109,53)" fg:x="416" fg:w="26"/><text x="64.2500%" y="671.50">&lt;cor..</text></g><g><title>core::option::Option&lt;T&gt;::map (26 samples, 4.00%)</title><rect x="64.0000%" y="645" width="4.0000%" height="15" fill="rgb(254,35,30)" fg:x="416" fg:w="26"/><text x="64.2500%" y="655.50">core..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (26 samples, 4.00%)</title><rect x="64.0000%" y="629" width="4.0000%" height="15" fill="rgb(226,169,23)" fg:x="416" fg:w="26"/><text x="64.2500%" y="639.50">core..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (26 samples, 4.00%)</title><rect x="64.0000%" y="613" width="4.0000%" height="15" fill="rgb(205,130,14)" fg:x="416" fg:w="26"/><text x="64.2500%" y="623.50">rege..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (26 samples, 4.00%)</title><rect x="64.0000%" y="597" width="4.0000%" height="15" fill="rgb(235,200,16)" fg:x="416" fg:w="26"/><text x="64.2500%" y="607.50">rege..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (26 samples, 4.00%)</title><rect x="64.0000%" y="581" width="4.0000%" height="15" fill="rgb(213,34,18)" fg:x="416" fg:w="26"/><text x="64.2500%" y="591.50">rege..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (26 samples, 4.00%)</title><rect x="64.0000%" y="565" width="4.0000%" height="15" fill="rgb(253,35,22)" fg:x="416" fg:w="26"/><text x="64.2500%" y="575.50">rege..</text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::literal_trie::LiteralTrie&gt; (3 samples, 0.46%)</title><rect x="67.5385%" y="549" width="0.4615%" height="15" fill="rgb(244,70,29)" fg:x="439" fg:w="3"/><text x="67.7885%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_automata::nfa::thompson::literal_trie::State&gt;&gt; (3 samples, 0.46%)</title><rect x="67.5385%" y="533" width="0.4615%" height="15" fill="rgb(227,19,7)" fg:x="439" fg:w="3"/><text x="67.7885%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.46%)</title><rect x="67.5385%" y="517" width="0.4615%" height="15" fill="rgb(249,14,2)" fg:x="439" fg:w="3"/><text x="67.7885%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;[regex_automata::nfa::thompson::literal_trie::State]&gt; (3 samples, 0.46%)</title><rect x="67.5385%" y="501" width="0.4615%" height="15" fill="rgb(241,61,51)" fg:x="439" fg:w="3"/><text x="67.7885%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::literal_trie::State&gt; (3 samples, 0.46%)</title><rect x="67.5385%" y="485" width="0.4615%" height="15" fill="rgb(245,189,53)" fg:x="439" fg:w="3"/><text x="67.7885%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt; (2 samples, 0.31%)</title><rect x="67.6923%" y="469" width="0.3077%" height="15" fill="rgb(213,102,40)" fg:x="440" fg:w="2"/><text x="67.9423%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize)&gt;&gt; (2 samples, 0.31%)</title><rect x="67.6923%" y="453" width="0.3077%" height="15" fill="rgb(243,139,46)" fg:x="440" fg:w="2"/><text x="67.9423%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.31%)</title><rect x="67.6923%" y="437" width="0.3077%" height="15" fill="rgb(213,128,22)" fg:x="440" fg:w="2"/><text x="67.9423%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.31%)</title><rect x="67.6923%" y="421" width="0.3077%" height="15" fill="rgb(238,77,31)" fg:x="440" fg:w="2"/><text x="67.9423%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.31%)</title><rect x="67.6923%" y="405" width="0.3077%" height="15" fill="rgb(227,15,28)" fg:x="440" fg:w="2"/><text x="67.9423%" y="415.50"></text></g><g><title>__GI___libc_free (2 samples, 0.31%)</title><rect x="67.6923%" y="389" width="0.3077%" height="15" fill="rgb(247,8,17)" fg:x="440" fg:w="2"/><text x="67.9423%" y="399.50"></text></g><g><title>_int_free (2 samples, 0.31%)</title><rect x="67.6923%" y="373" width="0.3077%" height="15" fill="rgb(221,113,48)" fg:x="440" fg:w="2"/><text x="67.9423%" y="383.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add_union (1 samples, 0.15%)</title><rect x="68.0000%" y="533" width="0.1538%" height="15" fill="rgb(247,38,8)" fg:x="442" fg:w="1"/><text x="68.2500%" y="543.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add (1 samples, 0.15%)</title><rect x="68.0000%" y="517" width="0.1538%" height="15" fill="rgb(253,91,29)" fg:x="442" fg:w="1"/><text x="68.2500%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.15%)</title><rect x="68.0000%" y="501" width="0.1538%" height="15" fill="rgb(241,229,15)" fg:x="442" fg:w="1"/><text x="68.2500%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.15%)</title><rect x="68.1538%" y="501" width="0.1538%" height="15" fill="rgb(241,229,15)" fg:x="443" fg:w="1"/><text x="68.4038%" y="511.50"></text></g><g><title>core::ptr::write (1 samples, 0.15%)</title><rect x="68.1538%" y="485" width="0.1538%" height="15" fill="rgb(209,143,44)" fg:x="443" fg:w="1"/><text x="68.4038%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="68.1538%" y="469" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="443" fg:w="1"/><text x="68.4038%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="68.1538%" y="453" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="443" fg:w="1"/><text x="68.4038%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="68.1538%" y="437" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="443" fg:w="1"/><text x="68.4038%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="68.1538%" y="421" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="443" fg:w="1"/><text x="68.4038%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="68.1538%" y="405" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="443" fg:w="1"/><text x="68.4038%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="68.1538%" y="389" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="443" fg:w="1"/><text x="68.4038%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="68.1538%" y="373" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="443" fg:w="1"/><text x="68.4038%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="68.1538%" y="357" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="443" fg:w="1"/><text x="68.4038%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="68.1538%" y="341" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="443" fg:w="1"/><text x="68.4038%" y="351.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add_sparse (2 samples, 0.31%)</title><rect x="68.1538%" y="533" width="0.3077%" height="15" fill="rgb(233,153,44)" fg:x="443" fg:w="2"/><text x="68.4038%" y="543.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add (2 samples, 0.31%)</title><rect x="68.1538%" y="517" width="0.3077%" height="15" fill="rgb(253,91,29)" fg:x="443" fg:w="2"/><text x="68.4038%" y="527.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add_range (1 samples, 0.15%)</title><rect x="68.4615%" y="533" width="0.1538%" height="15" fill="rgb(245,83,34)" fg:x="445" fg:w="1"/><text x="68.7115%" y="543.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add (1 samples, 0.15%)</title><rect x="68.4615%" y="517" width="0.1538%" height="15" fill="rgb(253,91,29)" fg:x="445" fg:w="1"/><text x="68.7115%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.15%)</title><rect x="68.4615%" y="501" width="0.1538%" height="15" fill="rgb(241,229,15)" fg:x="445" fg:w="1"/><text x="68.7115%" y="511.50"></text></g><g><title>core::ptr::write (1 samples, 0.15%)</title><rect x="68.6154%" y="517" width="0.1538%" height="15" fill="rgb(209,143,44)" fg:x="446" fg:w="1"/><text x="68.8654%" y="527.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="68.7692%" y="469" width="0.1538%" height="15" fill="rgb(206,112,53)" fg:x="447" fg:w="1"/><text x="69.0192%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.46%)</title><rect x="68.6154%" y="533" width="0.4615%" height="15" fill="rgb(241,229,15)" fg:x="446" fg:w="3"/><text x="68.8654%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.31%)</title><rect x="68.7692%" y="517" width="0.3077%" height="15" fill="rgb(254,103,39)" fg:x="447" fg:w="2"/><text x="69.0192%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.31%)</title><rect x="68.7692%" y="501" width="0.3077%" height="15" fill="rgb(254,53,35)" fg:x="447" fg:w="2"/><text x="69.0192%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.31%)</title><rect x="68.7692%" y="485" width="0.3077%" height="15" fill="rgb(237,133,22)" fg:x="447" fg:w="2"/><text x="69.0192%" y="495.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::compile (11 samples, 1.69%)</title><rect x="68.0000%" y="549" width="1.6923%" height="15" fill="rgb(233,39,2)" fg:x="442" fg:w="11"/><text x="68.2500%" y="559.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.15%)</title><rect x="69.6923%" y="453" width="0.1538%" height="15" fill="rgb(206,149,53)" fg:x="453" fg:w="1"/><text x="69.9423%" y="463.50"></text></g><g><title>arena_for_chunk (1 samples, 0.15%)</title><rect x="69.8462%" y="421" width="0.1538%" height="15" fill="rgb(234,26,42)" fg:x="454" fg:w="1"/><text x="70.0962%" y="431.50"></text></g><g><title>heap_for_ptr (1 samples, 0.15%)</title><rect x="69.8462%" y="405" width="0.1538%" height="15" fill="rgb(232,140,25)" fg:x="454" fg:w="1"/><text x="70.0962%" y="415.50"></text></g><g><title>arena_for_chunk (2 samples, 0.31%)</title><rect x="69.8462%" y="437" width="0.3077%" height="15" fill="rgb(234,26,42)" fg:x="454" fg:w="2"/><text x="70.0962%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (8 samples, 1.23%)</title><rect x="69.6923%" y="485" width="1.2308%" height="15" fill="rgb(254,53,35)" fg:x="453" fg:w="8"/><text x="69.9423%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 1.23%)</title><rect x="69.6923%" y="469" width="1.2308%" height="15" fill="rgb(237,133,22)" fg:x="453" fg:w="8"/><text x="69.9423%" y="479.50"></text></g><g><title>__GI___libc_malloc (7 samples, 1.08%)</title><rect x="69.8462%" y="453" width="1.0769%" height="15" fill="rgb(206,112,53)" fg:x="454" fg:w="7"/><text x="70.0962%" y="463.50"></text></g><g><title>_int_malloc (5 samples, 0.77%)</title><rect x="70.1538%" y="437" width="0.7692%" height="15" fill="rgb(222,219,51)" fg:x="456" fg:w="5"/><text x="70.4038%" y="447.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::State::add_match (9 samples, 1.38%)</title><rect x="69.6923%" y="533" width="1.3846%" height="15" fill="rgb(206,206,41)" fg:x="453" fg:w="9"/><text x="69.9423%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (9 samples, 1.38%)</title><rect x="69.6923%" y="517" width="1.3846%" height="15" fill="rgb(241,229,15)" fg:x="453" fg:w="9"/><text x="69.9423%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (9 samples, 1.38%)</title><rect x="69.6923%" y="501" width="1.3846%" height="15" fill="rgb(254,103,39)" fg:x="453" fg:w="9"/><text x="69.9423%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.15%)</title><rect x="71.0769%" y="517" width="0.1538%" height="15" fill="rgb(241,229,15)" fg:x="462" fg:w="1"/><text x="71.3269%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.15%)</title><rect x="71.0769%" y="501" width="0.1538%" height="15" fill="rgb(254,103,39)" fg:x="462" fg:w="1"/><text x="71.3269%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.15%)</title><rect x="71.0769%" y="485" width="0.1538%" height="15" fill="rgb(254,53,35)" fg:x="462" fg:w="1"/><text x="71.3269%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.15%)</title><rect x="71.0769%" y="469" width="0.1538%" height="15" fill="rgb(237,133,22)" fg:x="462" fg:w="1"/><text x="71.3269%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.15%)</title><rect x="71.0769%" y="453" width="0.1538%" height="15" fill="rgb(237,156,49)" fg:x="462" fg:w="1"/><text x="71.3269%" y="463.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.15%)</title><rect x="71.0769%" y="437" width="0.1538%" height="15" fill="rgb(214,150,36)" fg:x="462" fg:w="1"/><text x="71.3269%" y="447.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.15%)</title><rect x="71.0769%" y="421" width="0.1538%" height="15" fill="rgb(254,47,34)" fg:x="462" fg:w="1"/><text x="71.3269%" y="431.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.15%)</title><rect x="71.0769%" y="405" width="0.1538%" height="15" fill="rgb(254,73,4)" fg:x="462" fg:w="1"/><text x="71.3269%" y="415.50"></text></g><g><title>_int_realloc (1 samples, 0.15%)</title><rect x="71.0769%" y="389" width="0.1538%" height="15" fill="rgb(231,75,41)" fg:x="462" fg:w="1"/><text x="71.3269%" y="399.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.15%)</title><rect x="71.0769%" y="373" width="0.1538%" height="15" fill="rgb(217,126,36)" fg:x="462" fg:w="1"/><text x="71.3269%" y="383.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="71.2308%" y="421" width="0.1538%" height="15" fill="rgb(206,112,53)" fg:x="463" fg:w="1"/><text x="71.4808%" y="431.50"></text></g><g><title>_int_realloc (1 samples, 0.15%)</title><rect x="71.3846%" y="357" width="0.1538%" height="15" fill="rgb(231,75,41)" fg:x="464" fg:w="1"/><text x="71.6346%" y="367.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::add (13 samples, 2.00%)</title><rect x="69.6923%" y="549" width="2.0000%" height="15" fill="rgb(247,201,32)" fg:x="453" fg:w="13"/><text x="69.9423%" y="559.50">r..</text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::get_or_add_state (4 samples, 0.62%)</title><rect x="71.0769%" y="533" width="0.6154%" height="15" fill="rgb(249,22,31)" fg:x="462" fg:w="4"/><text x="71.3269%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (3 samples, 0.46%)</title><rect x="71.2308%" y="517" width="0.4615%" height="15" fill="rgb(222,129,7)" fg:x="463" fg:w="3"/><text x="71.4808%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.46%)</title><rect x="71.2308%" y="501" width="0.4615%" height="15" fill="rgb(212,159,3)" fg:x="463" fg:w="3"/><text x="71.4808%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.46%)</title><rect x="71.2308%" y="485" width="0.4615%" height="15" fill="rgb(231,142,39)" fg:x="463" fg:w="3"/><text x="71.4808%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.46%)</title><rect x="71.2308%" y="469" width="0.4615%" height="15" fill="rgb(249,2,22)" fg:x="463" fg:w="3"/><text x="71.4808%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.46%)</title><rect x="71.2308%" y="453" width="0.4615%" height="15" fill="rgb(254,53,35)" fg:x="463" fg:w="3"/><text x="71.4808%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.46%)</title><rect x="71.2308%" y="437" width="0.4615%" height="15" fill="rgb(237,133,22)" fg:x="463" fg:w="3"/><text x="71.4808%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.31%)</title><rect x="71.3846%" y="421" width="0.3077%" height="15" fill="rgb(237,156,49)" fg:x="464" fg:w="2"/><text x="71.6346%" y="431.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.31%)</title><rect x="71.3846%" y="405" width="0.3077%" height="15" fill="rgb(214,150,36)" fg:x="464" fg:w="2"/><text x="71.6346%" y="415.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.31%)</title><rect x="71.3846%" y="389" width="0.3077%" height="15" fill="rgb(254,47,34)" fg:x="464" fg:w="2"/><text x="71.6346%" y="399.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.31%)</title><rect x="71.3846%" y="373" width="0.3077%" height="15" fill="rgb(254,73,4)" fg:x="464" fg:w="2"/><text x="71.6346%" y="383.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (1 samples, 0.15%)</title><rect x="71.6923%" y="549" width="0.1538%" height="15" fill="rgb(247,137,3)" fg:x="466" fg:w="1"/><text x="71.9423%" y="559.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::add_empty (1 samples, 0.15%)</title><rect x="71.6923%" y="533" width="0.1538%" height="15" fill="rgb(245,57,0)" fg:x="466" fg:w="1"/><text x="71.9423%" y="543.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add_empty (1 samples, 0.15%)</title><rect x="71.6923%" y="517" width="0.1538%" height="15" fill="rgb(233,49,21)" fg:x="466" fg:w="1"/><text x="71.9423%" y="527.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add (1 samples, 0.15%)</title><rect x="71.6923%" y="501" width="0.1538%" height="15" fill="rgb(253,91,29)" fg:x="466" fg:w="1"/><text x="71.9423%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.15%)</title><rect x="71.6923%" y="485" width="0.1538%" height="15" fill="rgb(241,229,15)" fg:x="466" fg:w="1"/><text x="71.9423%" y="495.50"></text></g><g><title>core::ptr::write (1 samples, 0.15%)</title><rect x="71.6923%" y="469" width="0.1538%" height="15" fill="rgb(209,143,44)" fg:x="466" fg:w="1"/><text x="71.9423%" y="479.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (52 samples, 8.00%)</title><rect x="64.0000%" y="821" width="8.0000%" height="15" fill="rgb(226,42,16)" fg:x="416" fg:w="52"/><text x="64.2500%" y="831.50">regex_autom..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (52 samples, 8.00%)</title><rect x="64.0000%" y="805" width="8.0000%" height="15" fill="rgb(242,129,17)" fg:x="416" fg:w="52"/><text x="64.2500%" y="815.50">regex_autom..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (52 samples, 8.00%)</title><rect x="64.0000%" y="789" width="8.0000%" height="15" fill="rgb(247,137,3)" fg:x="416" fg:w="52"/><text x="64.2500%" y="799.50">regex_autom..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (52 samples, 8.00%)</title><rect x="64.0000%" y="773" width="8.0000%" height="15" fill="rgb(214,109,53)" fg:x="416" fg:w="52"/><text x="64.2500%" y="783.50">&lt;core::iter..</text></g><g><title>core::option::Option&lt;T&gt;::map (52 samples, 8.00%)</title><rect x="64.0000%" y="757" width="8.0000%" height="15" fill="rgb(254,35,30)" fg:x="416" fg:w="52"/><text x="64.2500%" y="767.50">core::optio..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (52 samples, 8.00%)</title><rect x="64.0000%" y="741" width="8.0000%" height="15" fill="rgb(226,169,23)" fg:x="416" fg:w="52"/><text x="64.2500%" y="751.50">core::ops::..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile::{{closure}} (52 samples, 8.00%)</title><rect x="64.0000%" y="725" width="8.0000%" height="15" fill="rgb(218,216,52)" fg:x="416" fg:w="52"/><text x="64.2500%" y="735.50">regex_autom..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (52 samples, 8.00%)</title><rect x="64.0000%" y="709" width="8.0000%" height="15" fill="rgb(235,200,16)" fg:x="416" fg:w="52"/><text x="64.2500%" y="719.50">regex_autom..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (52 samples, 8.00%)</title><rect x="64.0000%" y="693" width="8.0000%" height="15" fill="rgb(213,34,18)" fg:x="416" fg:w="52"/><text x="64.2500%" y="703.50">regex_autom..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (52 samples, 8.00%)</title><rect x="64.0000%" y="677" width="8.0000%" height="15" fill="rgb(210,105,37)" fg:x="416" fg:w="52"/><text x="64.2500%" y="687.50">regex_autom..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (26 samples, 4.00%)</title><rect x="68.0000%" y="661" width="4.0000%" height="15" fill="rgb(222,94,14)" fg:x="442" fg:w="26"/><text x="68.2500%" y="671.50">&lt;cor..</text></g><g><title>core::option::Option&lt;T&gt;::map (26 samples, 4.00%)</title><rect x="68.0000%" y="645" width="4.0000%" height="15" fill="rgb(254,35,30)" fg:x="442" fg:w="26"/><text x="68.2500%" y="655.50">core..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (26 samples, 4.00%)</title><rect x="68.0000%" y="629" width="4.0000%" height="15" fill="rgb(226,169,23)" fg:x="442" fg:w="26"/><text x="68.2500%" y="639.50">core..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (26 samples, 4.00%)</title><rect x="68.0000%" y="613" width="4.0000%" height="15" fill="rgb(205,130,14)" fg:x="442" fg:w="26"/><text x="68.2500%" y="623.50">rege..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (26 samples, 4.00%)</title><rect x="68.0000%" y="597" width="4.0000%" height="15" fill="rgb(235,200,16)" fg:x="442" fg:w="26"/><text x="68.2500%" y="607.50">rege..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (26 samples, 4.00%)</title><rect x="68.0000%" y="581" width="4.0000%" height="15" fill="rgb(213,34,18)" fg:x="442" fg:w="26"/><text x="68.2500%" y="591.50">rege..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (26 samples, 4.00%)</title><rect x="68.0000%" y="565" width="4.0000%" height="15" fill="rgb(253,35,22)" fg:x="442" fg:w="26"/><text x="68.2500%" y="575.50">rege..</text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::literal_trie::LiteralTrie&gt; (1 samples, 0.15%)</title><rect x="71.8462%" y="549" width="0.1538%" height="15" fill="rgb(244,70,29)" fg:x="467" fg:w="1"/><text x="72.0962%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_automata::nfa::thompson::literal_trie::State&gt;&gt; (1 samples, 0.15%)</title><rect x="71.8462%" y="533" width="0.1538%" height="15" fill="rgb(227,19,7)" fg:x="467" fg:w="1"/><text x="72.0962%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="71.8462%" y="517" width="0.1538%" height="15" fill="rgb(249,14,2)" fg:x="467" fg:w="1"/><text x="72.0962%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;[regex_automata::nfa::thompson::literal_trie::State]&gt; (1 samples, 0.15%)</title><rect x="71.8462%" y="501" width="0.1538%" height="15" fill="rgb(241,61,51)" fg:x="467" fg:w="1"/><text x="72.0962%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::literal_trie::State&gt; (1 samples, 0.15%)</title><rect x="71.8462%" y="485" width="0.1538%" height="15" fill="rgb(245,189,53)" fg:x="467" fg:w="1"/><text x="72.0962%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_automata::nfa::thompson::literal_trie::Transition&gt;&gt; (1 samples, 0.15%)</title><rect x="71.8462%" y="469" width="0.1538%" height="15" fill="rgb(242,32,21)" fg:x="467" fg:w="1"/><text x="72.0962%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;regex_automata::nfa::thompson::literal_trie::Transition&gt;&gt; (1 samples, 0.15%)</title><rect x="71.8462%" y="453" width="0.1538%" height="15" fill="rgb(216,209,43)" fg:x="467" fg:w="1"/><text x="72.0962%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="71.8462%" y="437" width="0.1538%" height="15" fill="rgb(213,128,22)" fg:x="467" fg:w="1"/><text x="72.0962%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.15%)</title><rect x="71.8462%" y="421" width="0.1538%" height="15" fill="rgb(238,77,31)" fg:x="467" fg:w="1"/><text x="72.0962%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.15%)</title><rect x="71.8462%" y="405" width="0.1538%" height="15" fill="rgb(227,15,28)" fg:x="467" fg:w="1"/><text x="72.0962%" y="415.50"></text></g><g><title>__GI___libc_free (1 samples, 0.15%)</title><rect x="71.8462%" y="389" width="0.1538%" height="15" fill="rgb(247,8,17)" fg:x="467" fg:w="1"/><text x="72.0962%" y="399.50"></text></g><g><title>_int_free (1 samples, 0.15%)</title><rect x="71.8462%" y="373" width="0.1538%" height="15" fill="rgb(221,113,48)" fg:x="467" fg:w="1"/><text x="72.0962%" y="383.50"></text></g><g><title>regex_automata::dfa::onepass::Transition::state_id (1 samples, 0.15%)</title><rect x="72.0000%" y="693" width="0.1538%" height="15" fill="rgb(236,89,0)" fg:x="468" fg:w="1"/><text x="72.2500%" y="703.50"></text></g><g><title>regex_automata::dfa::onepass::Transition::new (3 samples, 0.46%)</title><rect x="72.1538%" y="677" width="0.4615%" height="15" fill="rgb(253,131,4)" fg:x="469" fg:w="3"/><text x="72.4038%" y="687.50"></text></g><g><title>regex_automata::dfa::onepass::Transition::set_state_id (4 samples, 0.62%)</title><rect x="72.1538%" y="693" width="0.6154%" height="15" fill="rgb(215,47,0)" fg:x="469" fg:w="4"/><text x="72.4038%" y="703.50"></text></g><g><title>regex_automata::dfa::onepass::InternalBuilder::shuffle_states (6 samples, 0.92%)</title><rect x="72.0000%" y="757" width="0.9231%" height="15" fill="rgb(235,45,9)" fg:x="468" fg:w="6"/><text x="72.2500%" y="767.50"></text></g><g><title>regex_automata::dfa::remapper::Remapper::remap (6 samples, 0.92%)</title><rect x="72.0000%" y="741" width="0.9231%" height="15" fill="rgb(246,37,46)" fg:x="468" fg:w="6"/><text x="72.2500%" y="751.50"></text></g><g><title>regex_automata::dfa::remapper::onepass::&lt;impl regex_automata::dfa::remapper::Remappable for regex_automata::dfa::onepass::DFA&gt;::remap (6 samples, 0.92%)</title><rect x="72.0000%" y="725" width="0.9231%" height="15" fill="rgb(220,104,28)" fg:x="468" fg:w="6"/><text x="72.2500%" y="735.50"></text></g><g><title>regex_automata::dfa::onepass::DFA::remap (6 samples, 0.92%)</title><rect x="72.0000%" y="709" width="0.9231%" height="15" fill="rgb(220,12,22)" fg:x="468" fg:w="6"/><text x="72.2500%" y="719.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.15%)</title><rect x="72.7692%" y="693" width="0.1538%" height="15" fill="rgb(246,165,53)" fg:x="473" fg:w="1"/><text x="73.0192%" y="703.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.15%)</title><rect x="72.7692%" y="677" width="0.1538%" height="15" fill="rgb(226,134,37)" fg:x="473" fg:w="1"/><text x="73.0192%" y="687.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.15%)</title><rect x="72.7692%" y="661" width="0.1538%" height="15" fill="rgb(252,121,12)" fg:x="473" fg:w="1"/><text x="73.0192%" y="671.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (1 samples, 0.15%)</title><rect x="72.7692%" y="645" width="0.1538%" height="15" fill="rgb(222,38,45)" fg:x="473" fg:w="1"/><text x="73.0192%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="72.9231%" y="437" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="474" fg:w="1"/><text x="73.1731%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="72.9231%" y="421" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="474" fg:w="1"/><text x="73.1731%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="72.9231%" y="405" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="474" fg:w="1"/><text x="73.1731%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="72.9231%" y="389" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="474" fg:w="1"/><text x="73.1731%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="72.9231%" y="373" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="474" fg:w="1"/><text x="73.1731%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="72.9231%" y="357" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="474" fg:w="1"/><text x="73.1731%" y="367.50"></text></g><g><title>s4lib::data::datetime::bytes_to_regex_to_datetime (62 samples, 9.54%)</title><rect x="63.6923%" y="1109" width="9.5385%" height="15" fill="rgb(252,84,36)" fg:x="414" fg:w="62"/><text x="63.9423%" y="1119.50">s4lib::data::d..</text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref (62 samples, 9.54%)</title><rect x="63.6923%" y="1093" width="9.5385%" height="15" fill="rgb(217,15,43)" fg:x="414" fg:w="62"/><text x="63.9423%" y="1103.50">&lt;s4lib::data::..</text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref::__stability (62 samples, 9.54%)</title><rect x="63.6923%" y="1077" width="9.5385%" height="15" fill="rgb(239,165,48)" fg:x="414" fg:w="62"/><text x="63.9423%" y="1087.50">&lt;s4lib::data::..</text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (62 samples, 9.54%)</title><rect x="63.6923%" y="1061" width="9.5385%" height="15" fill="rgb(235,175,8)" fg:x="414" fg:w="62"/><text x="63.9423%" y="1071.50">lazy_static::l..</text></g><g><title>std::sync::once::Once::call_once (62 samples, 9.54%)</title><rect x="63.6923%" y="1045" width="9.5385%" height="15" fill="rgb(247,17,47)" fg:x="414" fg:w="62"/><text x="63.9423%" y="1055.50">std::sync::onc..</text></g><g><title>std::sys_common::once::futex::Once::call (62 samples, 9.54%)</title><rect x="63.6923%" y="1029" width="9.5385%" height="15" fill="rgb(246,168,49)" fg:x="414" fg:w="62"/><text x="63.9423%" y="1039.50">std::sys_commo..</text></g><g><title>std::sync::once::Once::call_once::{{closure}} (62 samples, 9.54%)</title><rect x="63.6923%" y="1013" width="9.5385%" height="15" fill="rgb(237,63,35)" fg:x="414" fg:w="62"/><text x="63.9423%" y="1023.50">std::sync::onc..</text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}} (62 samples, 9.54%)</title><rect x="63.6923%" y="997" width="9.5385%" height="15" fill="rgb(238,7,51)" fg:x="414" fg:w="62"/><text x="63.9423%" y="1007.50">lazy_static::l..</text></g><g><title>core::ops::function::FnOnce::call_once (62 samples, 9.54%)</title><rect x="63.6923%" y="981" width="9.5385%" height="15" fill="rgb(210,80,10)" fg:x="414" fg:w="62"/><text x="63.9423%" y="991.50">core::ops::fun..</text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref::__static_ref_initialize (62 samples, 9.54%)</title><rect x="63.6923%" y="965" width="9.5385%" height="15" fill="rgb(205,24,29)" fg:x="414" fg:w="62"/><text x="63.9423%" y="975.50">&lt;s4lib::data::..</text></g><g><title>regex::regex::bytes::Regex::new (62 samples, 9.54%)</title><rect x="63.6923%" y="949" width="9.5385%" height="15" fill="rgb(246,224,25)" fg:x="414" fg:w="62"/><text x="63.9423%" y="959.50">regex::regex::..</text></g><g><title>regex::builders::bytes::RegexBuilder::build (62 samples, 9.54%)</title><rect x="63.6923%" y="933" width="9.5385%" height="15" fill="rgb(236,76,51)" fg:x="414" fg:w="62"/><text x="63.9423%" y="943.50">regex::builder..</text></g><g><title>regex::builders::Builder::build_one_bytes (62 samples, 9.54%)</title><rect x="63.6923%" y="917" width="9.5385%" height="15" fill="rgb(233,102,7)" fg:x="414" fg:w="62"/><text x="63.9423%" y="927.50">regex::builder..</text></g><g><title>regex_automata::meta::regex::Builder::build (62 samples, 9.54%)</title><rect x="63.6923%" y="901" width="9.5385%" height="15" fill="rgb(212,33,22)" fg:x="414" fg:w="62"/><text x="63.9423%" y="911.50">regex_automata..</text></g><g><title>regex_automata::meta::regex::Builder::build_many (62 samples, 9.54%)</title><rect x="63.6923%" y="885" width="9.5385%" height="15" fill="rgb(236,25,32)" fg:x="414" fg:w="62"/><text x="63.9423%" y="895.50">regex_automata..</text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (62 samples, 9.54%)</title><rect x="63.6923%" y="869" width="9.5385%" height="15" fill="rgb(250,142,30)" fg:x="414" fg:w="62"/><text x="63.9423%" y="879.50">regex_automata..</text></g><g><title>regex_automata::meta::strategy::new (62 samples, 9.54%)</title><rect x="63.6923%" y="853" width="9.5385%" height="15" fill="rgb(243,171,22)" fg:x="414" fg:w="62"/><text x="63.9423%" y="863.50">regex_automata..</text></g><g><title>regex_automata::meta::strategy::Core::new (60 samples, 9.23%)</title><rect x="64.0000%" y="837" width="9.2308%" height="15" fill="rgb(222,69,27)" fg:x="416" fg:w="60"/><text x="64.2500%" y="847.50">regex_automat..</text></g><g><title>regex_automata::meta::wrappers::OnePass::new (8 samples, 1.23%)</title><rect x="72.0000%" y="821" width="1.2308%" height="15" fill="rgb(235,224,47)" fg:x="468" fg:w="8"/><text x="72.2500%" y="831.50"></text></g><g><title>regex_automata::meta::wrappers::OnePassEngine::new (8 samples, 1.23%)</title><rect x="72.0000%" y="805" width="1.2308%" height="15" fill="rgb(247,185,25)" fg:x="468" fg:w="8"/><text x="72.2500%" y="815.50"></text></g><g><title>regex_automata::dfa::onepass::Builder::build_from_nfa (8 samples, 1.23%)</title><rect x="72.0000%" y="789" width="1.2308%" height="15" fill="rgb(209,62,19)" fg:x="468" fg:w="8"/><text x="72.2500%" y="799.50"></text></g><g><title>regex_automata::dfa::onepass::InternalBuilder::build (8 samples, 1.23%)</title><rect x="72.0000%" y="773" width="1.2308%" height="15" fill="rgb(206,107,24)" fg:x="468" fg:w="8"/><text x="72.2500%" y="783.50"></text></g><g><title>regex_automata::dfa::onepass::InternalBuilder::compile_transition (2 samples, 0.31%)</title><rect x="72.9231%" y="757" width="0.3077%" height="15" fill="rgb(230,62,50)" fg:x="474" fg:w="2"/><text x="73.1731%" y="767.50"></text></g><g><title>regex_automata::dfa::onepass::InternalBuilder::add_dfa_state_for_nfa_state (2 samples, 0.31%)</title><rect x="72.9231%" y="741" width="0.3077%" height="15" fill="rgb(226,222,5)" fg:x="474" fg:w="2"/><text x="73.1731%" y="751.50"></text></g><g><title>regex_automata::dfa::onepass::InternalBuilder::add_empty_state (2 samples, 0.31%)</title><rect x="72.9231%" y="725" width="0.3077%" height="15" fill="rgb(249,155,54)" fg:x="474" fg:w="2"/><text x="73.1731%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2 samples, 0.31%)</title><rect x="72.9231%" y="709" width="0.3077%" height="15" fill="rgb(205,186,49)" fg:x="474" fg:w="2"/><text x="73.1731%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.31%)</title><rect x="72.9231%" y="693" width="0.3077%" height="15" fill="rgb(232,211,42)" fg:x="474" fg:w="2"/><text x="73.1731%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (2 samples, 0.31%)</title><rect x="72.9231%" y="677" width="0.3077%" height="15" fill="rgb(214,146,48)" fg:x="474" fg:w="2"/><text x="73.1731%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.31%)</title><rect x="72.9231%" y="661" width="0.3077%" height="15" fill="rgb(212,159,3)" fg:x="474" fg:w="2"/><text x="73.1731%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.31%)</title><rect x="72.9231%" y="645" width="0.3077%" height="15" fill="rgb(231,142,39)" fg:x="474" fg:w="2"/><text x="73.1731%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.31%)</title><rect x="72.9231%" y="629" width="0.3077%" height="15" fill="rgb(249,2,22)" fg:x="474" fg:w="2"/><text x="73.1731%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.31%)</title><rect x="72.9231%" y="613" width="0.3077%" height="15" fill="rgb(254,53,35)" fg:x="474" fg:w="2"/><text x="73.1731%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.31%)</title><rect x="72.9231%" y="597" width="0.3077%" height="15" fill="rgb(237,133,22)" fg:x="474" fg:w="2"/><text x="73.1731%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.31%)</title><rect x="72.9231%" y="581" width="0.3077%" height="15" fill="rgb(237,156,49)" fg:x="474" fg:w="2"/><text x="73.1731%" y="591.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.31%)</title><rect x="72.9231%" y="565" width="0.3077%" height="15" fill="rgb(214,150,36)" fg:x="474" fg:w="2"/><text x="73.1731%" y="575.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.31%)</title><rect x="72.9231%" y="549" width="0.3077%" height="15" fill="rgb(254,47,34)" fg:x="474" fg:w="2"/><text x="73.1731%" y="559.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.31%)</title><rect x="72.9231%" y="533" width="0.3077%" height="15" fill="rgb(254,73,4)" fg:x="474" fg:w="2"/><text x="73.1731%" y="543.50"></text></g><g><title>_int_realloc (2 samples, 0.31%)</title><rect x="72.9231%" y="517" width="0.3077%" height="15" fill="rgb(231,75,41)" fg:x="474" fg:w="2"/><text x="73.1731%" y="527.50"></text></g><g><title>__memmove_avx512_unaligned_erms (2 samples, 0.31%)</title><rect x="72.9231%" y="501" width="0.3077%" height="15" fill="rgb(217,126,36)" fg:x="474" fg:w="2"/><text x="73.1731%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.31%)</title><rect x="72.9231%" y="485" width="0.3077%" height="15" fill="rgb(210,204,4)" fg:x="474" fg:w="2"/><text x="73.1731%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.31%)</title><rect x="72.9231%" y="469" width="0.3077%" height="15" fill="rgb(210,204,4)" fg:x="474" fg:w="2"/><text x="73.1731%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.31%)</title><rect x="72.9231%" y="453" width="0.3077%" height="15" fill="rgb(210,204,4)" fg:x="474" fg:w="2"/><text x="73.1731%" y="463.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.15%)</title><rect x="73.2308%" y="469" width="0.1538%" height="15" fill="rgb(206,149,53)" fg:x="476" fg:w="1"/><text x="73.4808%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="73.2308%" y="453" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="476" fg:w="1"/><text x="73.4808%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="73.2308%" y="437" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="476" fg:w="1"/><text x="73.4808%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="73.2308%" y="421" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="476" fg:w="1"/><text x="73.4808%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="73.2308%" y="405" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="476" fg:w="1"/><text x="73.4808%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="73.2308%" y="389" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="476" fg:w="1"/><text x="73.4808%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="73.2308%" y="373" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="476" fg:w="1"/><text x="73.4808%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="73.2308%" y="357" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="476" fg:w="1"/><text x="73.4808%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="73.2308%" y="341" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="476" fg:w="1"/><text x="73.4808%" y="351.50"></text></g><g><title>regex_syntax::hir::literal::PreferenceTrie::create_state (2 samples, 0.31%)</title><rect x="73.2308%" y="549" width="0.3077%" height="15" fill="rgb(224,202,5)" fg:x="476" fg:w="2"/><text x="73.4808%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.31%)</title><rect x="73.2308%" y="533" width="0.3077%" height="15" fill="rgb(241,229,15)" fg:x="476" fg:w="2"/><text x="73.4808%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.31%)</title><rect x="73.2308%" y="517" width="0.3077%" height="15" fill="rgb(254,103,39)" fg:x="476" fg:w="2"/><text x="73.4808%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.31%)</title><rect x="73.2308%" y="501" width="0.3077%" height="15" fill="rgb(254,53,35)" fg:x="476" fg:w="2"/><text x="73.4808%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.31%)</title><rect x="73.2308%" y="485" width="0.3077%" height="15" fill="rgb(237,133,22)" fg:x="476" fg:w="2"/><text x="73.4808%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.15%)</title><rect x="73.3846%" y="469" width="0.1538%" height="15" fill="rgb(237,156,49)" fg:x="477" fg:w="1"/><text x="73.6346%" y="479.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.15%)</title><rect x="73.3846%" y="453" width="0.1538%" height="15" fill="rgb(214,150,36)" fg:x="477" fg:w="1"/><text x="73.6346%" y="463.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.15%)</title><rect x="73.3846%" y="437" width="0.1538%" height="15" fill="rgb(254,47,34)" fg:x="477" fg:w="1"/><text x="73.6346%" y="447.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.15%)</title><rect x="73.3846%" y="421" width="0.1538%" height="15" fill="rgb(254,73,4)" fg:x="477" fg:w="1"/><text x="73.6346%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by_key::{{closure}} (1 samples, 0.15%)</title><rect x="73.5385%" y="517" width="0.1538%" height="15" fill="rgb(217,124,17)" fg:x="478" fg:w="1"/><text x="73.7885%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u8&gt;::cmp (1 samples, 0.15%)</title><rect x="73.5385%" y="501" width="0.1538%" height="15" fill="rgb(206,19,29)" fg:x="478" fg:w="1"/><text x="73.7885%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by_key (2 samples, 0.31%)</title><rect x="73.5385%" y="549" width="0.3077%" height="15" fill="rgb(219,159,10)" fg:x="478" fg:w="2"/><text x="73.7885%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.31%)</title><rect x="73.5385%" y="533" width="0.3077%" height="15" fill="rgb(252,87,43)" fg:x="478" fg:w="2"/><text x="73.7885%" y="543.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="73.8462%" y="437" width="0.1538%" height="15" fill="rgb(222,219,51)" fg:x="480" fg:w="1"/><text x="74.0962%" y="447.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.31%)</title><rect x="73.8462%" y="453" width="0.3077%" height="15" fill="rgb(206,112,53)" fg:x="480" fg:w="2"/><text x="74.0962%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.15%)</title><rect x="74.1538%" y="453" width="0.1538%" height="15" fill="rgb(237,156,49)" fg:x="482" fg:w="1"/><text x="74.4038%" y="463.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.15%)</title><rect x="74.1538%" y="437" width="0.1538%" height="15" fill="rgb(214,150,36)" fg:x="482" fg:w="1"/><text x="74.4038%" y="447.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.15%)</title><rect x="74.1538%" y="421" width="0.1538%" height="15" fill="rgb(254,47,34)" fg:x="482" fg:w="1"/><text x="74.4038%" y="431.50"></text></g><g><title>__rdl_realloc (1 samples, 0.15%)</title><rect x="74.1538%" y="405" width="0.1538%" height="15" fill="rgb(218,79,16)" fg:x="482" fg:w="1"/><text x="74.4038%" y="415.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.15%)</title><rect x="74.1538%" y="389" width="0.1538%" height="15" fill="rgb(244,34,29)" fg:x="482" fg:w="1"/><text x="74.4038%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (4 samples, 0.62%)</title><rect x="73.8462%" y="549" width="0.6154%" height="15" fill="rgb(222,129,7)" fg:x="480" fg:w="4"/><text x="74.0962%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.62%)</title><rect x="73.8462%" y="533" width="0.6154%" height="15" fill="rgb(212,159,3)" fg:x="480" fg:w="4"/><text x="74.0962%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.62%)</title><rect x="73.8462%" y="517" width="0.6154%" height="15" fill="rgb(231,142,39)" fg:x="480" fg:w="4"/><text x="74.0962%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.62%)</title><rect x="73.8462%" y="501" width="0.6154%" height="15" fill="rgb(249,2,22)" fg:x="480" fg:w="4"/><text x="74.0962%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.62%)</title><rect x="73.8462%" y="485" width="0.6154%" height="15" fill="rgb(254,53,35)" fg:x="480" fg:w="4"/><text x="74.0962%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.62%)</title><rect x="73.8462%" y="469" width="0.6154%" height="15" fill="rgb(237,133,22)" fg:x="480" fg:w="4"/><text x="74.0962%" y="479.50"></text></g><g><title>regex_syntax::hir::literal::Seq::optimize_for_prefix_by_preference (9 samples, 1.38%)</title><rect x="73.2308%" y="661" width="1.3846%" height="15" fill="rgb(206,179,34)" fg:x="476" fg:w="9"/><text x="73.4808%" y="671.50"></text></g><g><title>regex_syntax::hir::literal::Seq::optimize_by_preference (9 samples, 1.38%)</title><rect x="73.2308%" y="645" width="1.3846%" height="15" fill="rgb(208,121,1)" fg:x="476" fg:w="9"/><text x="73.4808%" y="655.50"></text></g><g><title>regex_syntax::hir::literal::PreferenceTrie::minimize (9 samples, 1.38%)</title><rect x="73.2308%" y="629" width="1.3846%" height="15" fill="rgb(240,28,15)" fg:x="476" fg:w="9"/><text x="73.4808%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut (9 samples, 1.38%)</title><rect x="73.2308%" y="613" width="1.3846%" height="15" fill="rgb(208,159,28)" fg:x="476" fg:w="9"/><text x="73.4808%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut::process_loop (9 samples, 1.38%)</title><rect x="73.2308%" y="597" width="1.3846%" height="15" fill="rgb(227,228,3)" fg:x="476" fg:w="9"/><text x="73.4808%" y="607.50"></text></g><g><title>regex_syntax::hir::literal::PreferenceTrie::minimize::{{closure}} (9 samples, 1.38%)</title><rect x="73.2308%" y="581" width="1.3846%" height="15" fill="rgb(234,110,33)" fg:x="476" fg:w="9"/><text x="73.4808%" y="591.50"></text></g><g><title>regex_syntax::hir::literal::PreferenceTrie::insert (9 samples, 1.38%)</title><rect x="73.2308%" y="565" width="1.3846%" height="15" fill="rgb(208,38,45)" fg:x="476" fg:w="9"/><text x="73.4808%" y="575.50"></text></g><g><title>regex_syntax::hir::literal::Seq::dedup (1 samples, 0.15%)</title><rect x="74.6154%" y="565" width="0.1538%" height="15" fill="rgb(244,184,3)" fg:x="485" fg:w="1"/><text x="74.8654%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::dedup_by (1 samples, 0.15%)</title><rect x="74.6154%" y="549" width="0.1538%" height="15" fill="rgb(212,107,25)" fg:x="485" fg:w="1"/><text x="74.8654%" y="559.50"></text></g><g><title>regex_syntax::hir::literal::Seq::dedup::{{closure}} (1 samples, 0.15%)</title><rect x="74.6154%" y="533" width="0.1538%" height="15" fill="rgb(224,159,7)" fg:x="485" fg:w="1"/><text x="74.8654%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (1 samples, 0.15%)</title><rect x="74.6154%" y="517" width="0.1538%" height="15" fill="rgb(220,44,45)" fg:x="485" fg:w="1"/><text x="74.8654%" y="527.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::ne (1 samples, 0.15%)</title><rect x="74.6154%" y="501" width="0.1538%" height="15" fill="rgb(241,62,31)" fg:x="485" fg:w="1"/><text x="74.8654%" y="511.50"></text></g><g><title>core::slice::cmp::SlicePartialEq::not_equal (1 samples, 0.15%)</title><rect x="74.6154%" y="485" width="0.1538%" height="15" fill="rgb(226,12,20)" fg:x="485" fg:w="1"/><text x="74.8654%" y="495.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.15%)</title><rect x="74.6154%" y="469" width="0.1538%" height="15" fill="rgb(221,225,42)" fg:x="485" fg:w="1"/><text x="74.8654%" y="479.50"></text></g><g><title>__memcmp_evex_movbe (1 samples, 0.15%)</title><rect x="74.6154%" y="453" width="0.1538%" height="15" fill="rgb(253,103,40)" fg:x="485" fg:w="1"/><text x="74.8654%" y="463.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::union (2 samples, 0.31%)</title><rect x="74.6154%" y="597" width="0.3077%" height="15" fill="rgb(253,75,3)" fg:x="485" fg:w="2"/><text x="74.8654%" y="607.50"></text></g><g><title>regex_syntax::hir::literal::Seq::union (2 samples, 0.31%)</title><rect x="74.6154%" y="581" width="0.3077%" height="15" fill="rgb(226,117,51)" fg:x="485" fg:w="2"/><text x="74.8654%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.15%)</title><rect x="74.7692%" y="565" width="0.1538%" height="15" fill="rgb(205,186,49)" fg:x="486" fg:w="1"/><text x="75.0192%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.15%)</title><rect x="74.7692%" y="549" width="0.1538%" height="15" fill="rgb(232,211,42)" fg:x="486" fg:w="1"/><text x="75.0192%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.15%)</title><rect x="74.7692%" y="533" width="0.1538%" height="15" fill="rgb(214,146,48)" fg:x="486" fg:w="1"/><text x="75.0192%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="74.7692%" y="517" width="0.1538%" height="15" fill="rgb(212,159,3)" fg:x="486" fg:w="1"/><text x="75.0192%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="74.7692%" y="501" width="0.1538%" height="15" fill="rgb(231,142,39)" fg:x="486" fg:w="1"/><text x="75.0192%" y="511.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::extract (3 samples, 0.46%)</title><rect x="74.6154%" y="629" width="0.4615%" height="15" fill="rgb(242,28,8)" fg:x="485" fg:w="3"/><text x="74.8654%" y="639.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::extract_alternation (3 samples, 0.46%)</title><rect x="74.6154%" y="613" width="0.4615%" height="15" fill="rgb(236,31,24)" fg:x="485" fg:w="3"/><text x="74.8654%" y="623.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::extract (1 samples, 0.15%)</title><rect x="74.9231%" y="597" width="0.1538%" height="15" fill="rgb(242,28,8)" fg:x="487" fg:w="1"/><text x="75.1731%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;regex_syntax::hir::literal::Literal&gt;&gt; (1 samples, 0.15%)</title><rect x="75.0769%" y="597" width="0.1538%" height="15" fill="rgb(207,185,21)" fg:x="488" fg:w="1"/><text x="75.3269%" y="607.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="75.0769%" y="581" width="0.1538%" height="15" fill="rgb(226,75,33)" fg:x="488" fg:w="1"/><text x="75.3269%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;[regex_syntax::hir::literal::Literal]&gt; (1 samples, 0.15%)</title><rect x="75.0769%" y="565" width="0.1538%" height="15" fill="rgb(244,201,43)" fg:x="488" fg:w="1"/><text x="75.3269%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::hir::literal::Literal&gt; (1 samples, 0.15%)</title><rect x="75.0769%" y="549" width="0.1538%" height="15" fill="rgb(229,58,2)" fg:x="488" fg:w="1"/><text x="75.3269%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.15%)</title><rect x="75.0769%" y="533" width="0.1538%" height="15" fill="rgb(248,33,49)" fg:x="488" fg:w="1"/><text x="75.3269%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.15%)</title><rect x="75.0769%" y="517" width="0.1538%" height="15" fill="rgb(208,40,33)" fg:x="488" fg:w="1"/><text x="75.3269%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="75.0769%" y="501" width="0.1538%" height="15" fill="rgb(213,128,22)" fg:x="488" fg:w="1"/><text x="75.3269%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.15%)</title><rect x="75.0769%" y="485" width="0.1538%" height="15" fill="rgb(238,77,31)" fg:x="488" fg:w="1"/><text x="75.3269%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.15%)</title><rect x="75.0769%" y="469" width="0.1538%" height="15" fill="rgb(227,15,28)" fg:x="488" fg:w="1"/><text x="75.3269%" y="479.50"></text></g><g><title>__GI___libc_free (1 samples, 0.15%)</title><rect x="75.0769%" y="453" width="0.1538%" height="15" fill="rgb(247,8,17)" fg:x="488" fg:w="1"/><text x="75.3269%" y="463.50"></text></g><g><title>_int_free (1 samples, 0.15%)</title><rect x="75.0769%" y="437" width="0.1538%" height="15" fill="rgb(221,113,48)" fg:x="488" fg:w="1"/><text x="75.3269%" y="447.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="75.2308%" y="469" width="0.1538%" height="15" fill="rgb(222,219,51)" fg:x="489" fg:w="1"/><text x="75.4808%" y="479.50"></text></g><g><title>malloc_consolidate (1 samples, 0.15%)</title><rect x="75.2308%" y="453" width="0.1538%" height="15" fill="rgb(228,194,39)" fg:x="489" fg:w="1"/><text x="75.4808%" y="463.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::cross (3 samples, 0.46%)</title><rect x="75.0769%" y="629" width="0.4615%" height="15" fill="rgb(248,169,31)" fg:x="488" fg:w="3"/><text x="75.3269%" y="639.50"></text></g><g><title>regex_syntax::hir::literal::Seq::cross_forward (3 samples, 0.46%)</title><rect x="75.0769%" y="613" width="0.4615%" height="15" fill="rgb(228,175,28)" fg:x="488" fg:w="3"/><text x="75.3269%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.31%)</title><rect x="75.2308%" y="597" width="0.3077%" height="15" fill="rgb(253,154,22)" fg:x="489" fg:w="2"/><text x="75.4808%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.31%)</title><rect x="75.2308%" y="581" width="0.3077%" height="15" fill="rgb(249,207,12)" fg:x="489" fg:w="2"/><text x="75.4808%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.31%)</title><rect x="75.2308%" y="565" width="0.3077%" height="15" fill="rgb(224,194,14)" fg:x="489" fg:w="2"/><text x="75.4808%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.31%)</title><rect x="75.2308%" y="549" width="0.3077%" height="15" fill="rgb(227,204,5)" fg:x="489" fg:w="2"/><text x="75.4808%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.31%)</title><rect x="75.2308%" y="533" width="0.3077%" height="15" fill="rgb(231,114,21)" fg:x="489" fg:w="2"/><text x="75.4808%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.31%)</title><rect x="75.2308%" y="517" width="0.3077%" height="15" fill="rgb(238,209,2)" fg:x="489" fg:w="2"/><text x="75.4808%" y="527.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.31%)</title><rect x="75.2308%" y="501" width="0.3077%" height="15" fill="rgb(253,135,41)" fg:x="489" fg:w="2"/><text x="75.4808%" y="511.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.31%)</title><rect x="75.2308%" y="485" width="0.3077%" height="15" fill="rgb(206,112,53)" fg:x="489" fg:w="2"/><text x="75.4808%" y="495.50"></text></g><g><title>regex_automata::util::prefilter::prefixes (16 samples, 2.46%)</title><rect x="73.2308%" y="677" width="2.4615%" height="15" fill="rgb(209,67,19)" fg:x="476" fg:w="16"/><text x="73.4808%" y="687.50">re..</text></g><g><title>regex_syntax::hir::literal::Extractor::extract (7 samples, 1.08%)</title><rect x="74.6154%" y="661" width="1.0769%" height="15" fill="rgb(242,28,8)" fg:x="485" fg:w="7"/><text x="74.8654%" y="671.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::extract_concat (7 samples, 1.08%)</title><rect x="74.6154%" y="645" width="1.0769%" height="15" fill="rgb(215,217,42)" fg:x="485" fg:w="7"/><text x="74.8654%" y="655.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::extract_concat (1 samples, 0.15%)</title><rect x="75.6923%" y="597" width="0.1538%" height="15" fill="rgb(215,217,42)" fg:x="492" fg:w="1"/><text x="75.9423%" y="607.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::cross (1 samples, 0.15%)</title><rect x="75.6923%" y="581" width="0.1538%" height="15" fill="rgb(248,169,31)" fg:x="492" fg:w="1"/><text x="75.9423%" y="591.50"></text></g><g><title>regex_syntax::hir::literal::Seq::cross_reverse (1 samples, 0.15%)</title><rect x="75.6923%" y="565" width="0.1538%" height="15" fill="rgb(231,193,12)" fg:x="492" fg:w="1"/><text x="75.9423%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::hir::literal::Literal&gt; (1 samples, 0.15%)</title><rect x="75.6923%" y="549" width="0.1538%" height="15" fill="rgb(229,58,2)" fg:x="492" fg:w="1"/><text x="75.9423%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.15%)</title><rect x="75.6923%" y="533" width="0.1538%" height="15" fill="rgb(248,33,49)" fg:x="492" fg:w="1"/><text x="75.9423%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.15%)</title><rect x="75.6923%" y="517" width="0.1538%" height="15" fill="rgb(208,40,33)" fg:x="492" fg:w="1"/><text x="75.9423%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="75.6923%" y="501" width="0.1538%" height="15" fill="rgb(213,128,22)" fg:x="492" fg:w="1"/><text x="75.9423%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.15%)</title><rect x="75.6923%" y="485" width="0.1538%" height="15" fill="rgb(238,77,31)" fg:x="492" fg:w="1"/><text x="75.9423%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.15%)</title><rect x="75.6923%" y="469" width="0.1538%" height="15" fill="rgb(227,15,28)" fg:x="492" fg:w="1"/><text x="75.9423%" y="479.50"></text></g><g><title>__rust_dealloc (1 samples, 0.15%)</title><rect x="75.6923%" y="453" width="0.1538%" height="15" fill="rgb(241,15,46)" fg:x="492" fg:w="1"/><text x="75.9423%" y="463.50"></text></g><g><title>regex_automata::meta::strategy::ReverseSuffix::new (2 samples, 0.31%)</title><rect x="75.6923%" y="677" width="0.3077%" height="15" fill="rgb(210,64,50)" fg:x="492" fg:w="2"/><text x="75.9423%" y="687.50"></text></g><g><title>regex_automata::util::prefilter::suffixes (2 samples, 0.31%)</title><rect x="75.6923%" y="661" width="0.3077%" height="15" fill="rgb(229,215,53)" fg:x="492" fg:w="2"/><text x="75.9423%" y="671.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::extract (2 samples, 0.31%)</title><rect x="75.6923%" y="645" width="0.3077%" height="15" fill="rgb(242,28,8)" fg:x="492" fg:w="2"/><text x="75.9423%" y="655.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::extract_concat (2 samples, 0.31%)</title><rect x="75.6923%" y="629" width="0.3077%" height="15" fill="rgb(215,217,42)" fg:x="492" fg:w="2"/><text x="75.9423%" y="639.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::extract (2 samples, 0.31%)</title><rect x="75.6923%" y="613" width="0.3077%" height="15" fill="rgb(242,28,8)" fg:x="492" fg:w="2"/><text x="75.9423%" y="623.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::extract_class_unicode (1 samples, 0.15%)</title><rect x="75.8462%" y="597" width="0.1538%" height="15" fill="rgb(222,89,50)" fg:x="493" fg:w="1"/><text x="76.0962%" y="607.50"></text></g><g><title>&lt;regex_syntax::hir::literal::Literal as core::convert::From&lt;char&gt;&gt;::from (1 samples, 0.15%)</title><rect x="75.8462%" y="581" width="0.1538%" height="15" fill="rgb(216,149,46)" fg:x="493" fg:w="1"/><text x="76.0962%" y="591.50"></text></g><g><title>regex_syntax::hir::literal::Literal::exact (1 samples, 0.15%)</title><rect x="75.8462%" y="565" width="0.1538%" height="15" fill="rgb(211,30,34)" fg:x="493" fg:w="1"/><text x="76.0962%" y="575.50"></text></g><g><title>regex_syntax::hir::Repetition::with (1 samples, 0.15%)</title><rect x="76.0000%" y="437" width="0.1538%" height="15" fill="rgb(243,53,4)" fg:x="494" fg:w="1"/><text x="76.2500%" y="447.50"></text></g><g><title>regex_syntax::hir::Hir::alternation (1 samples, 0.15%)</title><rect x="76.1538%" y="437" width="0.1538%" height="15" fill="rgb(206,114,23)" fg:x="495" fg:w="1"/><text x="76.4038%" y="447.50"></text></g><g><title>regex_syntax::hir::Hir::into_parts (1 samples, 0.15%)</title><rect x="76.1538%" y="421" width="0.1538%" height="15" fill="rgb(217,98,50)" fg:x="495" fg:w="1"/><text x="76.4038%" y="431.50"></text></g><g><title>core::mem::replace (1 samples, 0.15%)</title><rect x="76.1538%" y="405" width="0.1538%" height="15" fill="rgb(240,40,18)" fg:x="495" fg:w="1"/><text x="76.4038%" y="415.50"></text></g><g><title>core::ptr::read (1 samples, 0.15%)</title><rect x="76.1538%" y="389" width="0.1538%" height="15" fill="rgb(222,157,29)" fg:x="495" fg:w="1"/><text x="76.4038%" y="399.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (1 samples, 0.15%)</title><rect x="76.1538%" y="373" width="0.1538%" height="15" fill="rgb(234,151,54)" fg:x="495" fg:w="1"/><text x="76.4038%" y="383.50"></text></g><g><title>regex_automata::meta::reverse_inner::top_concat (3 samples, 0.46%)</title><rect x="76.0000%" y="645" width="0.4615%" height="15" fill="rgb(211,177,54)" fg:x="494" fg:w="3"/><text x="76.2500%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.46%)</title><rect x="76.0000%" y="629" width="0.4615%" height="15" fill="rgb(222,213,17)" fg:x="494" fg:w="3"/><text x="76.2500%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.46%)</title><rect x="76.0000%" y="613" width="0.4615%" height="15" fill="rgb(247,137,3)" fg:x="494" fg:w="3"/><text x="76.2500%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.46%)</title><rect x="76.0000%" y="597" width="0.4615%" height="15" fill="rgb(227,158,43)" fg:x="494" fg:w="3"/><text x="76.2500%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.46%)</title><rect x="76.0000%" y="581" width="0.4615%" height="15" fill="rgb(232,14,28)" fg:x="494" fg:w="3"/><text x="76.2500%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.46%)</title><rect x="76.0000%" y="565" width="0.4615%" height="15" fill="rgb(232,211,42)" fg:x="494" fg:w="3"/><text x="76.2500%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (3 samples, 0.46%)</title><rect x="76.0000%" y="549" width="0.4615%" height="15" fill="rgb(214,146,48)" fg:x="494" fg:w="3"/><text x="76.2500%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.46%)</title><rect x="76.0000%" y="533" width="0.4615%" height="15" fill="rgb(245,181,4)" fg:x="494" fg:w="3"/><text x="76.2500%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.46%)</title><rect x="76.0000%" y="517" width="0.4615%" height="15" fill="rgb(242,69,50)" fg:x="494" fg:w="3"/><text x="76.2500%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.46%)</title><rect x="76.0000%" y="501" width="0.4615%" height="15" fill="rgb(214,12,39)" fg:x="494" fg:w="3"/><text x="76.2500%" y="511.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3 samples, 0.46%)</title><rect x="76.0000%" y="485" width="0.4615%" height="15" fill="rgb(253,112,1)" fg:x="494" fg:w="3"/><text x="76.2500%" y="495.50"></text></g><g><title>regex_automata::meta::reverse_inner::top_concat::{{closure}} (3 samples, 0.46%)</title><rect x="76.0000%" y="469" width="0.4615%" height="15" fill="rgb(215,49,37)" fg:x="494" fg:w="3"/><text x="76.2500%" y="479.50"></text></g><g><title>regex_automata::meta::reverse_inner::flatten (3 samples, 0.46%)</title><rect x="76.0000%" y="453" width="0.4615%" height="15" fill="rgb(250,32,35)" fg:x="494" fg:w="3"/><text x="76.2500%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.15%)</title><rect x="76.3077%" y="437" width="0.1538%" height="15" fill="rgb(222,213,17)" fg:x="496" fg:w="1"/><text x="76.5577%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.15%)</title><rect x="76.3077%" y="421" width="0.1538%" height="15" fill="rgb(247,137,3)" fg:x="496" fg:w="1"/><text x="76.5577%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.15%)</title><rect x="76.3077%" y="405" width="0.1538%" height="15" fill="rgb(227,158,43)" fg:x="496" fg:w="1"/><text x="76.5577%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.15%)</title><rect x="76.3077%" y="389" width="0.1538%" height="15" fill="rgb(232,14,28)" fg:x="496" fg:w="1"/><text x="76.5577%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.15%)</title><rect x="76.3077%" y="373" width="0.1538%" height="15" fill="rgb(232,211,42)" fg:x="496" fg:w="1"/><text x="76.5577%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.15%)</title><rect x="76.3077%" y="357" width="0.1538%" height="15" fill="rgb(214,146,48)" fg:x="496" fg:w="1"/><text x="76.5577%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.15%)</title><rect x="76.3077%" y="341" width="0.1538%" height="15" fill="rgb(245,181,4)" fg:x="496" fg:w="1"/><text x="76.5577%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.15%)</title><rect x="76.3077%" y="325" width="0.1538%" height="15" fill="rgb(242,69,50)" fg:x="496" fg:w="1"/><text x="76.5577%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.15%)</title><rect x="76.3077%" y="309" width="0.1538%" height="15" fill="rgb(214,12,39)" fg:x="496" fg:w="1"/><text x="76.5577%" y="319.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.15%)</title><rect x="76.3077%" y="293" width="0.1538%" height="15" fill="rgb(253,112,1)" fg:x="496" fg:w="1"/><text x="76.5577%" y="303.50"></text></g><g><title>regex_automata::meta::reverse_inner::flatten::{{closure}} (1 samples, 0.15%)</title><rect x="76.3077%" y="277" width="0.1538%" height="15" fill="rgb(239,98,19)" fg:x="496" fg:w="1"/><text x="76.5577%" y="287.50"></text></g><g><title>regex_automata::meta::reverse_inner::flatten (1 samples, 0.15%)</title><rect x="76.3077%" y="261" width="0.1538%" height="15" fill="rgb(250,32,35)" fg:x="496" fg:w="1"/><text x="76.5577%" y="271.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T],A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="76.3077%" y="245" width="0.1538%" height="15" fill="rgb(225,79,12)" fg:x="496" fg:w="1"/><text x="76.5577%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.15%)</title><rect x="76.3077%" y="229" width="0.1538%" height="15" fill="rgb(229,121,46)" fg:x="496" fg:w="1"/><text x="76.5577%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.15%)</title><rect x="76.3077%" y="213" width="0.1538%" height="15" fill="rgb(221,172,50)" fg:x="496" fg:w="1"/><text x="76.5577%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.15%)</title><rect x="76.3077%" y="197" width="0.1538%" height="15" fill="rgb(216,42,52)" fg:x="496" fg:w="1"/><text x="76.5577%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.15%)</title><rect x="76.3077%" y="181" width="0.1538%" height="15" fill="rgb(249,207,12)" fg:x="496" fg:w="1"/><text x="76.5577%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.15%)</title><rect x="76.3077%" y="165" width="0.1538%" height="15" fill="rgb(224,194,14)" fg:x="496" fg:w="1"/><text x="76.5577%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.15%)</title><rect x="76.3077%" y="149" width="0.1538%" height="15" fill="rgb(227,204,5)" fg:x="496" fg:w="1"/><text x="76.5577%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.15%)</title><rect x="76.3077%" y="133" width="0.1538%" height="15" fill="rgb(231,114,21)" fg:x="496" fg:w="1"/><text x="76.5577%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.15%)</title><rect x="76.3077%" y="117" width="0.1538%" height="15" fill="rgb(238,209,2)" fg:x="496" fg:w="1"/><text x="76.5577%" y="127.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.15%)</title><rect x="76.3077%" y="101" width="0.1538%" height="15" fill="rgb(253,135,41)" fg:x="496" fg:w="1"/><text x="76.5577%" y="111.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="76.3077%" y="85" width="0.1538%" height="15" fill="rgb(206,112,53)" fg:x="496" fg:w="1"/><text x="76.5577%" y="95.50"></text></g><g><title>regex_automata::meta::reverse_inner::extract (4 samples, 0.62%)</title><rect x="76.0000%" y="661" width="0.6154%" height="15" fill="rgb(209,78,45)" fg:x="494" fg:w="4"/><text x="76.2500%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::hir::Hir&gt; (1 samples, 0.15%)</title><rect x="76.4615%" y="645" width="0.1538%" height="15" fill="rgb(244,216,7)" fg:x="497" fg:w="1"/><text x="76.7115%" y="655.50"></text></g><g><title>&lt;regex_syntax::hir::Hir as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="76.4615%" y="629" width="0.1538%" height="15" fill="rgb(251,195,49)" fg:x="497" fg:w="1"/><text x="76.7115%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.15%)</title><rect x="76.4615%" y="613" width="0.1538%" height="15" fill="rgb(205,186,49)" fg:x="497" fg:w="1"/><text x="76.7115%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.15%)</title><rect x="76.4615%" y="597" width="0.1538%" height="15" fill="rgb(232,211,42)" fg:x="497" fg:w="1"/><text x="76.7115%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.15%)</title><rect x="76.4615%" y="581" width="0.1538%" height="15" fill="rgb(214,146,48)" fg:x="497" fg:w="1"/><text x="76.7115%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="76.4615%" y="565" width="0.1538%" height="15" fill="rgb(212,159,3)" fg:x="497" fg:w="1"/><text x="76.7115%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="76.4615%" y="549" width="0.1538%" height="15" fill="rgb(231,142,39)" fg:x="497" fg:w="1"/><text x="76.7115%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.15%)</title><rect x="76.4615%" y="533" width="0.1538%" height="15" fill="rgb(249,2,22)" fg:x="497" fg:w="1"/><text x="76.7115%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.15%)</title><rect x="76.4615%" y="517" width="0.1538%" height="15" fill="rgb(254,53,35)" fg:x="497" fg:w="1"/><text x="76.7115%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.15%)</title><rect x="76.4615%" y="501" width="0.1538%" height="15" fill="rgb(237,133,22)" fg:x="497" fg:w="1"/><text x="76.7115%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.15%)</title><rect x="76.4615%" y="485" width="0.1538%" height="15" fill="rgb(237,156,49)" fg:x="497" fg:w="1"/><text x="76.7115%" y="495.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.15%)</title><rect x="76.4615%" y="469" width="0.1538%" height="15" fill="rgb(214,150,36)" fg:x="497" fg:w="1"/><text x="76.7115%" y="479.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.15%)</title><rect x="76.4615%" y="453" width="0.1538%" height="15" fill="rgb(254,47,34)" fg:x="497" fg:w="1"/><text x="76.7115%" y="463.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.15%)</title><rect x="76.4615%" y="437" width="0.1538%" height="15" fill="rgb(254,73,4)" fg:x="497" fg:w="1"/><text x="76.7115%" y="447.50"></text></g><g><title>_int_realloc (1 samples, 0.15%)</title><rect x="76.4615%" y="421" width="0.1538%" height="15" fill="rgb(231,75,41)" fg:x="497" fg:w="1"/><text x="76.7115%" y="431.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="76.4615%" y="405" width="0.1538%" height="15" fill="rgb(222,219,51)" fg:x="497" fg:w="1"/><text x="76.7115%" y="415.50"></text></g><g><title>regex_automata::meta::strategy::ReverseInner::new (5 samples, 0.77%)</title><rect x="76.0000%" y="677" width="0.7692%" height="15" fill="rgb(225,146,32)" fg:x="494" fg:w="5"/><text x="76.2500%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::hir::Hir&gt; (1 samples, 0.15%)</title><rect x="76.6154%" y="661" width="0.1538%" height="15" fill="rgb(244,216,7)" fg:x="498" fg:w="1"/><text x="76.8654%" y="671.50"></text></g><g><title>&lt;regex_syntax::hir::Hir as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="76.6154%" y="645" width="0.1538%" height="15" fill="rgb(251,195,49)" fg:x="498" fg:w="1"/><text x="76.8654%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::hir::Hir&gt; (1 samples, 0.15%)</title><rect x="76.6154%" y="629" width="0.1538%" height="15" fill="rgb(244,216,7)" fg:x="498" fg:w="1"/><text x="76.8654%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::hir::Properties&gt; (1 samples, 0.15%)</title><rect x="76.6154%" y="613" width="0.1538%" height="15" fill="rgb(249,111,12)" fg:x="498" fg:w="1"/><text x="76.8654%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;regex_syntax::hir::PropertiesI&gt;&gt; (1 samples, 0.15%)</title><rect x="76.6154%" y="597" width="0.1538%" height="15" fill="rgb(237,14,7)" fg:x="498" fg:w="1"/><text x="76.8654%" y="607.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.15%)</title><rect x="76.6154%" y="581" width="0.1538%" height="15" fill="rgb(241,6,19)" fg:x="498" fg:w="1"/><text x="76.8654%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.15%)</title><rect x="76.6154%" y="565" width="0.1538%" height="15" fill="rgb(238,77,31)" fg:x="498" fg:w="1"/><text x="76.8654%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.15%)</title><rect x="76.6154%" y="549" width="0.1538%" height="15" fill="rgb(227,15,28)" fg:x="498" fg:w="1"/><text x="76.8654%" y="559.50"></text></g><g><title>__GI___libc_free (1 samples, 0.15%)</title><rect x="76.6154%" y="533" width="0.1538%" height="15" fill="rgb(247,8,17)" fg:x="498" fg:w="1"/><text x="76.8654%" y="543.50"></text></g><g><title>_int_free (1 samples, 0.15%)</title><rect x="76.6154%" y="517" width="0.1538%" height="15" fill="rgb(221,113,48)" fg:x="498" fg:w="1"/><text x="76.8654%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;regex_automata::nfa::thompson::map::Utf8BoundedEntry&gt;&gt; (3 samples, 0.46%)</title><rect x="76.7692%" y="565" width="0.4615%" height="15" fill="rgb(209,15,40)" fg:x="499" fg:w="3"/><text x="77.0192%" y="575.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.46%)</title><rect x="76.7692%" y="549" width="0.4615%" height="15" fill="rgb(213,128,22)" fg:x="499" fg:w="3"/><text x="77.0192%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.46%)</title><rect x="76.7692%" y="533" width="0.4615%" height="15" fill="rgb(238,77,31)" fg:x="499" fg:w="3"/><text x="77.0192%" y="543.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.46%)</title><rect x="76.7692%" y="517" width="0.4615%" height="15" fill="rgb(227,15,28)" fg:x="499" fg:w="3"/><text x="77.0192%" y="527.50"></text></g><g><title>__GI___libc_free (3 samples, 0.46%)</title><rect x="76.7692%" y="501" width="0.4615%" height="15" fill="rgb(247,8,17)" fg:x="499" fg:w="3"/><text x="77.0192%" y="511.50"></text></g><g><title>_int_free (3 samples, 0.46%)</title><rect x="76.7692%" y="485" width="0.4615%" height="15" fill="rgb(221,113,48)" fg:x="499" fg:w="3"/><text x="77.0192%" y="495.50"></text></g><g><title>malloc_consolidate (3 samples, 0.46%)</title><rect x="76.7692%" y="469" width="0.4615%" height="15" fill="rgb(228,194,39)" fg:x="499" fg:w="3"/><text x="77.0192%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;regex_automata::nfa::thompson::compiler::Utf8State&gt;&gt; (5 samples, 0.77%)</title><rect x="76.7692%" y="645" width="0.7692%" height="15" fill="rgb(247,24,16)" fg:x="499" fg:w="5"/><text x="77.0192%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;regex_automata::nfa::thompson::compiler::Utf8State&gt;&gt; (5 samples, 0.77%)</title><rect x="76.7692%" y="629" width="0.7692%" height="15" fill="rgb(239,113,24)" fg:x="499" fg:w="5"/><text x="77.0192%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::compiler::Utf8State&gt; (5 samples, 0.77%)</title><rect x="76.7692%" y="613" width="0.7692%" height="15" fill="rgb(250,143,15)" fg:x="499" fg:w="5"/><text x="77.0192%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::map::Utf8BoundedMap&gt; (5 samples, 0.77%)</title><rect x="76.7692%" y="597" width="0.7692%" height="15" fill="rgb(224,100,47)" fg:x="499" fg:w="5"/><text x="77.0192%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_automata::nfa::thompson::map::Utf8BoundedEntry&gt;&gt; (5 samples, 0.77%)</title><rect x="76.7692%" y="581" width="0.7692%" height="15" fill="rgb(219,69,19)" fg:x="499" fg:w="5"/><text x="77.0192%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.31%)</title><rect x="77.2308%" y="565" width="0.3077%" height="15" fill="rgb(249,14,2)" fg:x="502" fg:w="2"/><text x="77.4808%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;[regex_automata::nfa::thompson::map::Utf8BoundedEntry]&gt; (2 samples, 0.31%)</title><rect x="77.2308%" y="549" width="0.3077%" height="15" fill="rgb(228,140,11)" fg:x="502" fg:w="2"/><text x="77.4808%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::map::Utf8BoundedEntry&gt; (2 samples, 0.31%)</title><rect x="77.2308%" y="533" width="0.3077%" height="15" fill="rgb(247,188,9)" fg:x="502" fg:w="2"/><text x="77.4808%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_automata::nfa::thompson::nfa::Transition&gt;&gt; (2 samples, 0.31%)</title><rect x="77.2308%" y="517" width="0.3077%" height="15" fill="rgb(207,29,6)" fg:x="502" fg:w="2"/><text x="77.4808%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;regex_automata::nfa::thompson::nfa::Transition&gt;&gt; (2 samples, 0.31%)</title><rect x="77.2308%" y="501" width="0.3077%" height="15" fill="rgb(228,146,49)" fg:x="502" fg:w="2"/><text x="77.4808%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.31%)</title><rect x="77.2308%" y="485" width="0.3077%" height="15" fill="rgb(213,128,22)" fg:x="502" fg:w="2"/><text x="77.4808%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.31%)</title><rect x="77.2308%" y="469" width="0.3077%" height="15" fill="rgb(253,185,17)" fg:x="502" fg:w="2"/><text x="77.4808%" y="479.50"></text></g><g><title>unlink_chunk (1 samples, 0.15%)</title><rect x="77.5385%" y="469" width="0.1538%" height="15" fill="rgb(223,20,30)" fg:x="504" fg:w="1"/><text x="77.7885%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;regex_automata::nfa::thompson::builder::State&gt;&gt; (2 samples, 0.31%)</title><rect x="77.5385%" y="581" width="0.3077%" height="15" fill="rgb(253,22,30)" fg:x="504" fg:w="2"/><text x="77.7885%" y="591.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.31%)</title><rect x="77.5385%" y="565" width="0.3077%" height="15" fill="rgb(213,128,22)" fg:x="504" fg:w="2"/><text x="77.7885%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.31%)</title><rect x="77.5385%" y="549" width="0.3077%" height="15" fill="rgb(238,77,31)" fg:x="504" fg:w="2"/><text x="77.7885%" y="559.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.31%)</title><rect x="77.5385%" y="533" width="0.3077%" height="15" fill="rgb(227,15,28)" fg:x="504" fg:w="2"/><text x="77.7885%" y="543.50"></text></g><g><title>__GI___libc_free (2 samples, 0.31%)</title><rect x="77.5385%" y="517" width="0.3077%" height="15" fill="rgb(247,8,17)" fg:x="504" fg:w="2"/><text x="77.7885%" y="527.50"></text></g><g><title>_int_free (2 samples, 0.31%)</title><rect x="77.5385%" y="501" width="0.3077%" height="15" fill="rgb(221,113,48)" fg:x="504" fg:w="2"/><text x="77.7885%" y="511.50"></text></g><g><title>malloc_consolidate (2 samples, 0.31%)</title><rect x="77.5385%" y="485" width="0.3077%" height="15" fill="rgb(228,194,39)" fg:x="504" fg:w="2"/><text x="77.7885%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::builder::State&gt; (4 samples, 0.62%)</title><rect x="77.8462%" y="549" width="0.6154%" height="15" fill="rgb(207,220,38)" fg:x="506" fg:w="4"/><text x="78.0962%" y="559.50"></text></g><g><title>__GI___libc_free (4 samples, 0.62%)</title><rect x="77.8462%" y="533" width="0.6154%" height="15" fill="rgb(247,8,17)" fg:x="506" fg:w="4"/><text x="78.0962%" y="543.50"></text></g><g><title>_int_free (4 samples, 0.62%)</title><rect x="77.8462%" y="517" width="0.6154%" height="15" fill="rgb(221,113,48)" fg:x="506" fg:w="4"/><text x="78.0962%" y="527.50"></text></g><g><title>regex_automata::meta::strategy::Core::new (12 samples, 1.85%)</title><rect x="76.7692%" y="677" width="1.8462%" height="15" fill="rgb(222,69,27)" fg:x="499" fg:w="12"/><text x="77.0192%" y="687.50">r..</text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::compiler::Compiler&gt; (12 samples, 1.85%)</title><rect x="76.7692%" y="661" width="1.8462%" height="15" fill="rgb(213,189,36)" fg:x="499" fg:w="12"/><text x="77.0192%" y="671.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;regex_automata::nfa::thompson::builder::Builder&gt;&gt; (7 samples, 1.08%)</title><rect x="77.5385%" y="645" width="1.0769%" height="15" fill="rgb(234,58,54)" fg:x="504" fg:w="7"/><text x="77.7885%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;regex_automata::nfa::thompson::builder::Builder&gt;&gt; (7 samples, 1.08%)</title><rect x="77.5385%" y="629" width="1.0769%" height="15" fill="rgb(211,168,54)" fg:x="504" fg:w="7"/><text x="77.7885%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::builder::Builder&gt; (7 samples, 1.08%)</title><rect x="77.5385%" y="613" width="1.0769%" height="15" fill="rgb(236,9,46)" fg:x="504" fg:w="7"/><text x="77.7885%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_automata::nfa::thompson::builder::State&gt;&gt; (7 samples, 1.08%)</title><rect x="77.5385%" y="597" width="1.0769%" height="15" fill="rgb(209,117,28)" fg:x="504" fg:w="7"/><text x="77.7885%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.77%)</title><rect x="77.8462%" y="581" width="0.7692%" height="15" fill="rgb(249,14,2)" fg:x="506" fg:w="5"/><text x="78.0962%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;[regex_automata::nfa::thompson::builder::State]&gt; (5 samples, 0.77%)</title><rect x="77.8462%" y="565" width="0.7692%" height="15" fill="rgb(227,197,38)" fg:x="506" fg:w="5"/><text x="78.0962%" y="575.50"></text></g><g><title>malloc_consolidate (1 samples, 0.15%)</title><rect x="78.6154%" y="549" width="0.1538%" height="15" fill="rgb(228,194,39)" fg:x="511" fg:w="1"/><text x="78.8654%" y="559.50"></text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::process_stage1_blockzero_analysis (37 samples, 5.69%)</title><rect x="73.2308%" y="1077" width="5.6923%" height="15" fill="rgb(214,107,3)" fg:x="476" fg:w="37"/><text x="73.4808%" y="1087.50">s4lib::..</text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::blockzero_analysis (37 samples, 5.69%)</title><rect x="73.2308%" y="1061" width="5.6923%" height="15" fill="rgb(228,176,28)" fg:x="476" fg:w="37"/><text x="73.4808%" y="1071.50">s4lib::..</text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::blockzero_analysis_syslines (37 samples, 5.69%)</title><rect x="73.2308%" y="1045" width="5.6923%" height="15" fill="rgb(208,15,47)" fg:x="476" fg:w="37"/><text x="73.4808%" y="1055.50">s4lib::..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_sysline_in_block (37 samples, 5.69%)</title><rect x="73.2308%" y="1029" width="5.6923%" height="15" fill="rgb(243,65,52)" fg:x="476" fg:w="37"/><text x="73.4808%" y="1039.50">s4lib::..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_sysline_in_block_year (37 samples, 5.69%)</title><rect x="73.2308%" y="1013" width="5.6923%" height="15" fill="rgb(253,177,51)" fg:x="476" fg:w="37"/><text x="73.4808%" y="1023.50">s4lib::..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::parse_datetime_in_line_cached (37 samples, 5.69%)</title><rect x="73.2308%" y="997" width="5.6923%" height="15" fill="rgb(231,75,50)" fg:x="476" fg:w="37"/><text x="73.4808%" y="1007.50">s4lib::..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::parse_datetime_in_line (37 samples, 5.69%)</title><rect x="73.2308%" y="981" width="5.6923%" height="15" fill="rgb(234,54,15)" fg:x="476" fg:w="37"/><text x="73.4808%" y="991.50">s4lib::..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_datetime_in_line (37 samples, 5.69%)</title><rect x="73.2308%" y="965" width="5.6923%" height="15" fill="rgb(212,53,9)" fg:x="476" fg:w="37"/><text x="73.4808%" y="975.50">s4lib::..</text></g><g><title>s4lib::data::datetime::bytes_to_regex_to_datetime (37 samples, 5.69%)</title><rect x="73.2308%" y="949" width="5.6923%" height="15" fill="rgb(252,84,36)" fg:x="476" fg:w="37"/><text x="73.4808%" y="959.50">s4lib::..</text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref (37 samples, 5.69%)</title><rect x="73.2308%" y="933" width="5.6923%" height="15" fill="rgb(217,15,43)" fg:x="476" fg:w="37"/><text x="73.4808%" y="943.50">&lt;s4lib:..</text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref::__stability (37 samples, 5.69%)</title><rect x="73.2308%" y="917" width="5.6923%" height="15" fill="rgb(239,165,48)" fg:x="476" fg:w="37"/><text x="73.4808%" y="927.50">&lt;s4lib:..</text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (37 samples, 5.69%)</title><rect x="73.2308%" y="901" width="5.6923%" height="15" fill="rgb(235,175,8)" fg:x="476" fg:w="37"/><text x="73.4808%" y="911.50">lazy_st..</text></g><g><title>std::sync::once::Once::call_once (37 samples, 5.69%)</title><rect x="73.2308%" y="885" width="5.6923%" height="15" fill="rgb(247,17,47)" fg:x="476" fg:w="37"/><text x="73.4808%" y="895.50">std::sy..</text></g><g><title>std::sys_common::once::futex::Once::call (37 samples, 5.69%)</title><rect x="73.2308%" y="869" width="5.6923%" height="15" fill="rgb(246,168,49)" fg:x="476" fg:w="37"/><text x="73.4808%" y="879.50">std::sy..</text></g><g><title>std::sync::once::Once::call_once::{{closure}} (37 samples, 5.69%)</title><rect x="73.2308%" y="853" width="5.6923%" height="15" fill="rgb(237,63,35)" fg:x="476" fg:w="37"/><text x="73.4808%" y="863.50">std::sy..</text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}} (37 samples, 5.69%)</title><rect x="73.2308%" y="837" width="5.6923%" height="15" fill="rgb(238,7,51)" fg:x="476" fg:w="37"/><text x="73.4808%" y="847.50">lazy_st..</text></g><g><title>core::ops::function::FnOnce::call_once (37 samples, 5.69%)</title><rect x="73.2308%" y="821" width="5.6923%" height="15" fill="rgb(210,80,10)" fg:x="476" fg:w="37"/><text x="73.4808%" y="831.50">core::o..</text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref::__static_ref_initialize (37 samples, 5.69%)</title><rect x="73.2308%" y="805" width="5.6923%" height="15" fill="rgb(205,24,29)" fg:x="476" fg:w="37"/><text x="73.4808%" y="815.50">&lt;s4lib:..</text></g><g><title>regex::regex::bytes::Regex::new (37 samples, 5.69%)</title><rect x="73.2308%" y="789" width="5.6923%" height="15" fill="rgb(246,224,25)" fg:x="476" fg:w="37"/><text x="73.4808%" y="799.50">regex::..</text></g><g><title>regex::builders::bytes::RegexBuilder::build (37 samples, 5.69%)</title><rect x="73.2308%" y="773" width="5.6923%" height="15" fill="rgb(236,76,51)" fg:x="476" fg:w="37"/><text x="73.4808%" y="783.50">regex::..</text></g><g><title>regex::builders::Builder::build_one_bytes (37 samples, 5.69%)</title><rect x="73.2308%" y="757" width="5.6923%" height="15" fill="rgb(233,102,7)" fg:x="476" fg:w="37"/><text x="73.4808%" y="767.50">regex::..</text></g><g><title>regex_automata::meta::regex::Builder::build (37 samples, 5.69%)</title><rect x="73.2308%" y="741" width="5.6923%" height="15" fill="rgb(212,33,22)" fg:x="476" fg:w="37"/><text x="73.4808%" y="751.50">regex_a..</text></g><g><title>regex_automata::meta::regex::Builder::build_many (37 samples, 5.69%)</title><rect x="73.2308%" y="725" width="5.6923%" height="15" fill="rgb(236,25,32)" fg:x="476" fg:w="37"/><text x="73.4808%" y="735.50">regex_a..</text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (37 samples, 5.69%)</title><rect x="73.2308%" y="709" width="5.6923%" height="15" fill="rgb(250,142,30)" fg:x="476" fg:w="37"/><text x="73.4808%" y="719.50">regex_a..</text></g><g><title>regex_automata::meta::strategy::new (37 samples, 5.69%)</title><rect x="73.2308%" y="693" width="5.6923%" height="15" fill="rgb(243,171,22)" fg:x="476" fg:w="37"/><text x="73.4808%" y="703.50">regex_a..</text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (2 samples, 0.31%)</title><rect x="78.6154%" y="677" width="0.3077%" height="15" fill="rgb(221,10,3)" fg:x="511" fg:w="2"/><text x="78.8654%" y="687.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.31%)</title><rect x="78.6154%" y="661" width="0.3077%" height="15" fill="rgb(209,114,30)" fg:x="511" fg:w="2"/><text x="78.8654%" y="671.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.31%)</title><rect x="78.6154%" y="645" width="0.3077%" height="15" fill="rgb(248,129,10)" fg:x="511" fg:w="2"/><text x="78.8654%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.31%)</title><rect x="78.6154%" y="629" width="0.3077%" height="15" fill="rgb(231,114,21)" fg:x="511" fg:w="2"/><text x="78.8654%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.31%)</title><rect x="78.6154%" y="613" width="0.3077%" height="15" fill="rgb(238,209,2)" fg:x="511" fg:w="2"/><text x="78.8654%" y="623.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.31%)</title><rect x="78.6154%" y="597" width="0.3077%" height="15" fill="rgb(253,135,41)" fg:x="511" fg:w="2"/><text x="78.8654%" y="607.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.31%)</title><rect x="78.6154%" y="581" width="0.3077%" height="15" fill="rgb(206,112,53)" fg:x="511" fg:w="2"/><text x="78.8654%" y="591.50"></text></g><g><title>_int_malloc (2 samples, 0.31%)</title><rect x="78.6154%" y="565" width="0.3077%" height="15" fill="rgb(222,219,51)" fg:x="511" fg:w="2"/><text x="78.8654%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.31%)</title><rect x="78.9231%" y="869" width="0.3077%" height="15" fill="rgb(210,204,4)" fg:x="513" fg:w="2"/><text x="79.1731%" y="879.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.31%)</title><rect x="78.9231%" y="853" width="0.3077%" height="15" fill="rgb(210,204,4)" fg:x="513" fg:w="2"/><text x="79.1731%" y="863.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.31%)</title><rect x="78.9231%" y="837" width="0.3077%" height="15" fill="rgb(210,204,4)" fg:x="513" fg:w="2"/><text x="79.1731%" y="847.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (4 samples, 0.62%)</title><rect x="78.9231%" y="965" width="0.6154%" height="15" fill="rgb(231,96,28)" fg:x="513" fg:w="4"/><text x="79.1731%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4 samples, 0.62%)</title><rect x="78.9231%" y="949" width="0.6154%" height="15" fill="rgb(243,52,34)" fg:x="513" fg:w="4"/><text x="79.1731%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.62%)</title><rect x="78.9231%" y="933" width="0.6154%" height="15" fill="rgb(224,207,30)" fg:x="513" fg:w="4"/><text x="79.1731%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 0.62%)</title><rect x="78.9231%" y="917" width="0.6154%" height="15" fill="rgb(251,49,54)" fg:x="513" fg:w="4"/><text x="79.1731%" y="927.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.62%)</title><rect x="78.9231%" y="901" width="0.6154%" height="15" fill="rgb(214,20,35)" fg:x="513" fg:w="4"/><text x="79.1731%" y="911.50"></text></g><g><title>__memmove_avx512_unaligned_erms (4 samples, 0.62%)</title><rect x="78.9231%" y="885" width="0.6154%" height="15" fill="rgb(217,126,36)" fg:x="513" fg:w="4"/><text x="79.1731%" y="895.50"></text></g><g><title>crc::crc64::&lt;impl crc::Crc&lt;u64&gt;&gt;::table_entry (1 samples, 0.15%)</title><rect x="79.5385%" y="917" width="0.1538%" height="15" fill="rgb(252,12,4)" fg:x="517" fg:w="1"/><text x="79.7885%" y="927.50"></text></g><g><title>lzma_rs::decode::xz::validate_block_check (33 samples, 5.08%)</title><rect x="79.5385%" y="965" width="5.0769%" height="15" fill="rgb(250,224,34)" fg:x="517" fg:w="33"/><text x="79.7885%" y="975.50">lzma_r..</text></g><g><title>crc::crc64::&lt;impl crc::Crc&lt;u64&gt;&gt;::checksum (33 samples, 5.08%)</title><rect x="79.5385%" y="949" width="5.0769%" height="15" fill="rgb(221,6,1)" fg:x="517" fg:w="33"/><text x="79.7885%" y="959.50">crc::c..</text></g><g><title>crc::crc64::&lt;impl crc::Crc&lt;u64&gt;&gt;::update (33 samples, 5.08%)</title><rect x="79.5385%" y="933" width="5.0769%" height="15" fill="rgb(240,176,23)" fg:x="517" fg:w="33"/><text x="79.7885%" y="943.50">crc::c..</text></g><g><title>lzma_rs::decode::rangecoder::RangeDecoder&lt;R&gt;::decode_bit (1 samples, 0.15%)</title><rect x="84.6154%" y="853" width="0.1538%" height="15" fill="rgb(252,202,43)" fg:x="550" fg:w="1"/><text x="84.8654%" y="863.50"></text></g><g><title>lzma_rs::decode::rangecoder::RangeDecoder&lt;R&gt;::normalize (1 samples, 0.15%)</title><rect x="84.6154%" y="837" width="0.1538%" height="15" fill="rgb(244,177,8)" fg:x="550" fg:w="1"/><text x="84.8654%" y="847.50"></text></g><g><title>byteorder::io::ReadBytesExt::read_u8 (1 samples, 0.15%)</title><rect x="84.6154%" y="821" width="0.1538%" height="15" fill="rgb(232,209,0)" fg:x="550" fg:w="1"/><text x="84.8654%" y="831.50"></text></g><g><title>std::io::Read::read_exact (1 samples, 0.15%)</title><rect x="84.6154%" y="805" width="0.1538%" height="15" fill="rgb(232,110,35)" fg:x="550" fg:w="1"/><text x="84.8654%" y="815.50"></text></g><g><title>std::io::default_read_exact (1 samples, 0.15%)</title><rect x="84.6154%" y="789" width="0.1538%" height="15" fill="rgb(223,139,4)" fg:x="550" fg:w="1"/><text x="84.8654%" y="799.50"></text></g><g><title>&lt;std::io::Take&lt;T&gt; as std::io::Read&gt;::read (1 samples, 0.15%)</title><rect x="84.6154%" y="773" width="0.1538%" height="15" fill="rgb(206,103,18)" fg:x="550" fg:w="1"/><text x="84.8654%" y="783.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read (1 samples, 0.15%)</title><rect x="84.6154%" y="757" width="0.1538%" height="15" fill="rgb(241,185,29)" fg:x="550" fg:w="1"/><text x="84.8654%" y="767.50"></text></g><g><title>&lt;lzma_rs::decode::util::CountBufRead&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.15%)</title><rect x="84.6154%" y="741" width="0.1538%" height="15" fill="rgb(247,211,52)" fg:x="550" fg:w="1"/><text x="84.8654%" y="751.50"></text></g><g><title>&lt;lzma_rs::decode::util::CountBufRead&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.15%)</title><rect x="84.6154%" y="725" width="0.1538%" height="15" fill="rgb(247,211,52)" fg:x="550" fg:w="1"/><text x="84.8654%" y="735.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.15%)</title><rect x="84.6154%" y="709" width="0.1538%" height="15" fill="rgb(248,29,38)" fg:x="550" fg:w="1"/><text x="84.8654%" y="719.50"></text></g><g><title>std::io::default_read_exact (1 samples, 0.15%)</title><rect x="84.7692%" y="741" width="0.1538%" height="15" fill="rgb(223,139,4)" fg:x="551" fg:w="1"/><text x="85.0192%" y="751.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.15%)</title><rect x="84.7692%" y="725" width="0.1538%" height="15" fill="rgb(228,30,25)" fg:x="551" fg:w="1"/><text x="85.0192%" y="735.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.15%)</title><rect x="84.7692%" y="709" width="0.1538%" height="15" fill="rgb(205,34,32)" fg:x="551" fg:w="1"/><text x="85.0192%" y="719.50"></text></g><g><title>lzma_rs::decode::rangecoder::BitTree::parse (2 samples, 0.31%)</title><rect x="84.7692%" y="837" width="0.3077%" height="15" fill="rgb(247,34,47)" fg:x="551" fg:w="2"/><text x="85.0192%" y="847.50"></text></g><g><title>lzma_rs::decode::rangecoder::RangeDecoder&lt;R&gt;::parse_bit_tree (2 samples, 0.31%)</title><rect x="84.7692%" y="821" width="0.3077%" height="15" fill="rgb(213,76,29)" fg:x="551" fg:w="2"/><text x="85.0192%" y="831.50"></text></g><g><title>lzma_rs::decode::rangecoder::RangeDecoder&lt;R&gt;::decode_bit (2 samples, 0.31%)</title><rect x="84.7692%" y="805" width="0.3077%" height="15" fill="rgb(252,202,43)" fg:x="551" fg:w="2"/><text x="85.0192%" y="815.50"></text></g><g><title>lzma_rs::decode::rangecoder::RangeDecoder&lt;R&gt;::normalize (2 samples, 0.31%)</title><rect x="84.7692%" y="789" width="0.3077%" height="15" fill="rgb(244,177,8)" fg:x="551" fg:w="2"/><text x="85.0192%" y="799.50"></text></g><g><title>byteorder::io::ReadBytesExt::read_u8 (2 samples, 0.31%)</title><rect x="84.7692%" y="773" width="0.3077%" height="15" fill="rgb(232,209,0)" fg:x="551" fg:w="2"/><text x="85.0192%" y="783.50"></text></g><g><title>std::io::Read::read_exact (2 samples, 0.31%)</title><rect x="84.7692%" y="757" width="0.3077%" height="15" fill="rgb(232,110,35)" fg:x="551" fg:w="2"/><text x="85.0192%" y="767.50"></text></g><g><title>lzma_rs::decode::rangecoder::LenDecoder::decode (3 samples, 0.46%)</title><rect x="84.7692%" y="853" width="0.4615%" height="15" fill="rgb(212,65,0)" fg:x="551" fg:w="3"/><text x="85.0192%" y="863.50"></text></g><g><title>lzma_rs::decode::rangecoder::RangeDecoder&lt;R&gt;::get (1 samples, 0.15%)</title><rect x="85.2308%" y="837" width="0.1538%" height="15" fill="rgb(236,159,6)" fg:x="554" fg:w="1"/><text x="85.4808%" y="847.50"></text></g><g><title>lzma_rs::decode::rangecoder::RangeDecoder&lt;R&gt;::get_bit (1 samples, 0.15%)</title><rect x="85.2308%" y="821" width="0.1538%" height="15" fill="rgb(220,179,45)" fg:x="554" fg:w="1"/><text x="85.4808%" y="831.50"></text></g><g><title>lzma_rs::decode::rangecoder::RangeDecoder&lt;R&gt;::normalize (1 samples, 0.15%)</title><rect x="85.2308%" y="805" width="0.1538%" height="15" fill="rgb(244,177,8)" fg:x="554" fg:w="1"/><text x="85.4808%" y="815.50"></text></g><g><title>byteorder::io::ReadBytesExt::read_u8 (1 samples, 0.15%)</title><rect x="85.2308%" y="789" width="0.1538%" height="15" fill="rgb(232,209,0)" fg:x="554" fg:w="1"/><text x="85.4808%" y="799.50"></text></g><g><title>std::io::Read::read_exact (1 samples, 0.15%)</title><rect x="85.2308%" y="773" width="0.1538%" height="15" fill="rgb(232,110,35)" fg:x="554" fg:w="1"/><text x="85.4808%" y="783.50"></text></g><g><title>lzma_rs::decode::rangecoder::BitTree::parse_reverse (1 samples, 0.15%)</title><rect x="85.3846%" y="837" width="0.1538%" height="15" fill="rgb(233,45,10)" fg:x="555" fg:w="1"/><text x="85.6346%" y="847.50"></text></g><g><title>lzma_rs::decode::rangecoder::RangeDecoder&lt;R&gt;::parse_reverse_bit_tree (1 samples, 0.15%)</title><rect x="85.3846%" y="821" width="0.1538%" height="15" fill="rgb(231,45,1)" fg:x="555" fg:w="1"/><text x="85.6346%" y="831.50"></text></g><g><title>lzma_rs::decode::rangecoder::RangeDecoder&lt;R&gt;::decode_bit (1 samples, 0.15%)</title><rect x="85.3846%" y="805" width="0.1538%" height="15" fill="rgb(252,202,43)" fg:x="555" fg:w="1"/><text x="85.6346%" y="815.50"></text></g><g><title>lzma_rs::decode::rangecoder::BitTree::parse (1 samples, 0.15%)</title><rect x="85.5385%" y="837" width="0.1538%" height="15" fill="rgb(247,34,47)" fg:x="556" fg:w="1"/><text x="85.7885%" y="847.50"></text></g><g><title>lzma_rs::decode::rangecoder::RangeDecoder&lt;R&gt;::parse_bit_tree (1 samples, 0.15%)</title><rect x="85.5385%" y="821" width="0.1538%" height="15" fill="rgb(213,76,29)" fg:x="556" fg:w="1"/><text x="85.7885%" y="831.50"></text></g><g><title>lzma_rs::decode::rangecoder::RangeDecoder&lt;R&gt;::decode_bit (1 samples, 0.15%)</title><rect x="85.5385%" y="805" width="0.1538%" height="15" fill="rgb(252,202,43)" fg:x="556" fg:w="1"/><text x="85.7885%" y="815.50"></text></g><g><title>lzma_rs::decode::rangecoder::RangeDecoder&lt;R&gt;::normalize (1 samples, 0.15%)</title><rect x="85.5385%" y="789" width="0.1538%" height="15" fill="rgb(244,177,8)" fg:x="556" fg:w="1"/><text x="85.7885%" y="799.50"></text></g><g><title>byteorder::io::ReadBytesExt::read_u8 (1 samples, 0.15%)</title><rect x="85.5385%" y="773" width="0.1538%" height="15" fill="rgb(232,209,0)" fg:x="556" fg:w="1"/><text x="85.7885%" y="783.50"></text></g><g><title>std::io::Read::read_exact (1 samples, 0.15%)</title><rect x="85.5385%" y="757" width="0.1538%" height="15" fill="rgb(232,110,35)" fg:x="556" fg:w="1"/><text x="85.7885%" y="767.50"></text></g><g><title>std::io::default_read_exact (1 samples, 0.15%)</title><rect x="85.5385%" y="741" width="0.1538%" height="15" fill="rgb(223,139,4)" fg:x="556" fg:w="1"/><text x="85.7885%" y="751.50"></text></g><g><title>&lt;std::io::Take&lt;T&gt; as std::io::Read&gt;::read (1 samples, 0.15%)</title><rect x="85.5385%" y="725" width="0.1538%" height="15" fill="rgb(206,103,18)" fg:x="556" fg:w="1"/><text x="85.7885%" y="735.50"></text></g><g><title>lzma_rs::decode::lzma::DecoderState::decode_distance (4 samples, 0.62%)</title><rect x="85.2308%" y="853" width="0.6154%" height="15" fill="rgb(235,190,43)" fg:x="554" fg:w="4"/><text x="85.4808%" y="863.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.15%)</title><rect x="85.6923%" y="837" width="0.1538%" height="15" fill="rgb(245,132,34)" fg:x="557" fg:w="1"/><text x="85.9423%" y="847.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.46%)</title><rect x="85.8462%" y="709" width="0.4615%" height="15" fill="rgb(210,204,4)" fg:x="558" fg:w="3"/><text x="86.0962%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.46%)</title><rect x="85.8462%" y="693" width="0.4615%" height="15" fill="rgb(210,204,4)" fg:x="558" fg:w="3"/><text x="86.0962%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.46%)</title><rect x="85.8462%" y="677" width="0.4615%" height="15" fill="rgb(210,204,4)" fg:x="558" fg:w="3"/><text x="86.0962%" y="687.50"></text></g><g><title>core::ptr::write (4 samples, 0.62%)</title><rect x="85.8462%" y="821" width="0.6154%" height="15" fill="rgb(209,143,44)" fg:x="558" fg:w="4"/><text x="86.0962%" y="831.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.62%)</title><rect x="85.8462%" y="805" width="0.6154%" height="15" fill="rgb(210,204,4)" fg:x="558" fg:w="4"/><text x="86.0962%" y="815.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.62%)</title><rect x="85.8462%" y="789" width="0.6154%" height="15" fill="rgb(210,204,4)" fg:x="558" fg:w="4"/><text x="86.0962%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.62%)</title><rect x="85.8462%" y="773" width="0.6154%" height="15" fill="rgb(210,204,4)" fg:x="558" fg:w="4"/><text x="86.0962%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.62%)</title><rect x="85.8462%" y="757" width="0.6154%" height="15" fill="rgb(210,204,4)" fg:x="558" fg:w="4"/><text x="86.0962%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.62%)</title><rect x="85.8462%" y="741" width="0.6154%" height="15" fill="rgb(210,204,4)" fg:x="558" fg:w="4"/><text x="86.0962%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.62%)</title><rect x="85.8462%" y="725" width="0.6154%" height="15" fill="rgb(210,204,4)" fg:x="558" fg:w="4"/><text x="86.0962%" y="735.50"></text></g><g><title>mremap_chunk (1 samples, 0.15%)</title><rect x="86.4615%" y="709" width="0.1538%" height="15" fill="rgb(242,52,16)" fg:x="562" fg:w="1"/><text x="86.7115%" y="719.50"></text></g><g><title>__GI___mremap (1 samples, 0.15%)</title><rect x="86.4615%" y="693" width="0.1538%" height="15" fill="rgb(206,38,4)" fg:x="562" fg:w="1"/><text x="86.7115%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="86.4615%" y="677" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="562" fg:w="1"/><text x="86.7115%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="86.4615%" y="661" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="562" fg:w="1"/><text x="86.7115%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="86.4615%" y="645" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="562" fg:w="1"/><text x="86.7115%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="86.4615%" y="629" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="562" fg:w="1"/><text x="86.7115%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="86.4615%" y="613" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="562" fg:w="1"/><text x="86.7115%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="86.4615%" y="597" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="562" fg:w="1"/><text x="86.7115%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="86.4615%" y="581" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="562" fg:w="1"/><text x="86.7115%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.31%)</title><rect x="86.4615%" y="821" width="0.3077%" height="15" fill="rgb(254,103,39)" fg:x="562" fg:w="2"/><text x="86.7115%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.31%)</title><rect x="86.4615%" y="805" width="0.3077%" height="15" fill="rgb(254,53,35)" fg:x="562" fg:w="2"/><text x="86.7115%" y="815.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.31%)</title><rect x="86.4615%" y="789" width="0.3077%" height="15" fill="rgb(237,133,22)" fg:x="562" fg:w="2"/><text x="86.7115%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.31%)</title><rect x="86.4615%" y="773" width="0.3077%" height="15" fill="rgb(237,156,49)" fg:x="562" fg:w="2"/><text x="86.7115%" y="783.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.31%)</title><rect x="86.4615%" y="757" width="0.3077%" height="15" fill="rgb(214,150,36)" fg:x="562" fg:w="2"/><text x="86.7115%" y="767.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.31%)</title><rect x="86.4615%" y="741" width="0.3077%" height="15" fill="rgb(254,47,34)" fg:x="562" fg:w="2"/><text x="86.7115%" y="751.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.31%)</title><rect x="86.4615%" y="725" width="0.3077%" height="15" fill="rgb(254,73,4)" fg:x="562" fg:w="2"/><text x="86.7115%" y="735.50"></text></g><g><title>_int_realloc (1 samples, 0.15%)</title><rect x="86.6154%" y="709" width="0.1538%" height="15" fill="rgb(231,75,41)" fg:x="563" fg:w="1"/><text x="86.8654%" y="719.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.15%)</title><rect x="86.6154%" y="693" width="0.1538%" height="15" fill="rgb(217,126,36)" fg:x="563" fg:w="1"/><text x="86.8654%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="86.6154%" y="677" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="563" fg:w="1"/><text x="86.8654%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="86.6154%" y="661" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="563" fg:w="1"/><text x="86.8654%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.15%)</title><rect x="86.6154%" y="645" width="0.1538%" height="15" fill="rgb(210,204,4)" fg:x="563" fg:w="1"/><text x="86.8654%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (13 samples, 2.00%)</title><rect x="85.8462%" y="837" width="2.0000%" height="15" fill="rgb(241,229,15)" fg:x="558" fg:w="13"/><text x="86.0962%" y="847.50">a..</text></g><g><title>&lt;lzma_rs::decode::lzbuffer::LzAccumBuffer&lt;W&gt; as lzma_rs::decode::lzbuffer::LzBuffer&lt;W&gt;&gt;::append_lz (16 samples, 2.46%)</title><rect x="85.8462%" y="853" width="2.4615%" height="15" fill="rgb(245,174,38)" fg:x="558" fg:w="16"/><text x="86.0962%" y="863.50">&lt;l..</text></g><g><title>lzma_rs::decode::lzma2::Lzma2Decoder::parse_lzma (25 samples, 3.85%)</title><rect x="84.6154%" y="933" width="3.8462%" height="15" fill="rgb(232,23,40)" fg:x="550" fg:w="25"/><text x="84.8654%" y="943.50">lzma..</text></g><g><title>lzma_rs::decode::lzma::DecoderState::process (25 samples, 3.85%)</title><rect x="84.6154%" y="917" width="3.8462%" height="15" fill="rgb(212,205,4)" fg:x="550" fg:w="25"/><text x="84.8654%" y="927.50">lzma..</text></g><g><title>lzma_rs::decode::lzma::DecoderState::process_mode (25 samples, 3.85%)</title><rect x="84.6154%" y="901" width="3.8462%" height="15" fill="rgb(237,97,11)" fg:x="550" fg:w="25"/><text x="84.8654%" y="911.50">lzma..</text></g><g><title>lzma_rs::decode::lzma::DecoderState::process_next (25 samples, 3.85%)</title><rect x="84.6154%" y="885" width="3.8462%" height="15" fill="rgb(227,197,53)" fg:x="550" fg:w="25"/><text x="84.8654%" y="895.50">lzma..</text></g><g><title>lzma_rs::decode::lzma::DecoderState::process_next_inner (25 samples, 3.85%)</title><rect x="84.6154%" y="869" width="3.8462%" height="15" fill="rgb(233,124,28)" fg:x="550" fg:w="25"/><text x="84.8654%" y="879.50">lzma..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.15%)</title><rect x="88.3077%" y="853" width="0.1538%" height="15" fill="rgb(245,132,34)" fg:x="574" fg:w="1"/><text x="88.5577%" y="863.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.77%)</title><rect x="88.4615%" y="677" width="0.7692%" height="15" fill="rgb(210,204,4)" fg:x="575" fg:w="5"/><text x="88.7115%" y="687.50"></text></g><g><title>lzma_rs::xz_decompress (68 samples, 10.46%)</title><rect x="78.9231%" y="1013" width="10.4615%" height="15" fill="rgb(219,30,48)" fg:x="513" fg:w="68"/><text x="79.1731%" y="1023.50">lzma_rs::xz_dec..</text></g><g><title>lzma_rs::decode::xz::decode_stream (68 samples, 10.46%)</title><rect x="78.9231%" y="997" width="10.4615%" height="15" fill="rgb(229,135,23)" fg:x="513" fg:w="68"/><text x="79.1731%" y="1007.50">lzma_rs::decode..</text></g><g><title>lzma_rs::decode::xz::read_block (68 samples, 10.46%)</title><rect x="78.9231%" y="981" width="10.4615%" height="15" fill="rgb(206,79,15)" fg:x="513" fg:w="68"/><text x="79.1731%" y="991.50">lzma_rs::decode..</text></g><g><title>lzma_rs::decode::xz::decode_filter (31 samples, 4.77%)</title><rect x="84.6154%" y="965" width="4.7692%" height="15" fill="rgb(207,132,32)" fg:x="550" fg:w="31"/><text x="84.8654%" y="975.50">lzma_r..</text></g><g><title>lzma_rs::decode::lzma2::Lzma2Decoder::decompress (31 samples, 4.77%)</title><rect x="84.6154%" y="949" width="4.7692%" height="15" fill="rgb(208,195,50)" fg:x="550" fg:w="31"/><text x="84.8654%" y="959.50">lzma_r..</text></g><g><title>&lt;lzma_rs::decode::lzbuffer::LzAccumBuffer&lt;W&gt; as lzma_rs::decode::lzbuffer::LzBuffer&lt;W&gt;&gt;::finish (6 samples, 0.92%)</title><rect x="88.4615%" y="933" width="0.9231%" height="15" fill="rgb(212,115,20)" fg:x="575" fg:w="6"/><text x="88.7115%" y="943.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (6 samples, 0.92%)</title><rect x="88.4615%" y="917" width="0.9231%" height="15" fill="rgb(230,53,11)" fg:x="575" fg:w="6"/><text x="88.7115%" y="927.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (6 samples, 0.92%)</title><rect x="88.4615%" y="901" width="0.9231%" height="15" fill="rgb(231,96,28)" fg:x="575" fg:w="6"/><text x="88.7115%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (6 samples, 0.92%)</title><rect x="88.4615%" y="885" width="0.9231%" height="15" fill="rgb(243,52,34)" fg:x="575" fg:w="6"/><text x="88.7115%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (6 samples, 0.92%)</title><rect x="88.4615%" y="869" width="0.9231%" height="15" fill="rgb(224,207,30)" fg:x="575" fg:w="6"/><text x="88.7115%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (6 samples, 0.92%)</title><rect x="88.4615%" y="853" width="0.9231%" height="15" fill="rgb(251,49,54)" fg:x="575" fg:w="6"/><text x="88.7115%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.92%)</title><rect x="88.4615%" y="837" width="0.9231%" height="15" fill="rgb(214,20,35)" fg:x="575" fg:w="6"/><text x="88.7115%" y="847.50"></text></g><g><title>__memmove_avx512_unaligned_erms (6 samples, 0.92%)</title><rect x="88.4615%" y="821" width="0.9231%" height="15" fill="rgb(217,126,36)" fg:x="575" fg:w="6"/><text x="88.7115%" y="831.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.92%)</title><rect x="88.4615%" y="805" width="0.9231%" height="15" fill="rgb(210,204,4)" fg:x="575" fg:w="6"/><text x="88.7115%" y="815.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.92%)</title><rect x="88.4615%" y="789" width="0.9231%" height="15" fill="rgb(210,204,4)" fg:x="575" fg:w="6"/><text x="88.7115%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.92%)</title><rect x="88.4615%" y="773" width="0.9231%" height="15" fill="rgb(210,204,4)" fg:x="575" fg:w="6"/><text x="88.7115%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.92%)</title><rect x="88.4615%" y="757" width="0.9231%" height="15" fill="rgb(210,204,4)" fg:x="575" fg:w="6"/><text x="88.7115%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.92%)</title><rect x="88.4615%" y="741" width="0.9231%" height="15" fill="rgb(210,204,4)" fg:x="575" fg:w="6"/><text x="88.7115%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.92%)</title><rect x="88.4615%" y="725" width="0.9231%" height="15" fill="rgb(210,204,4)" fg:x="575" fg:w="6"/><text x="88.7115%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.92%)</title><rect x="88.4615%" y="709" width="0.9231%" height="15" fill="rgb(210,204,4)" fg:x="575" fg:w="6"/><text x="88.7115%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.92%)</title><rect x="88.4615%" y="693" width="0.9231%" height="15" fill="rgb(210,204,4)" fg:x="575" fg:w="6"/><text x="88.7115%" y="703.50"></text></g><g><title>s4::exec_fileprocessor_thread (109 samples, 16.77%)</title><rect x="73.2308%" y="1109" width="16.7692%" height="15" fill="rgb(245,49,27)" fg:x="476" fg:w="109"/><text x="73.4808%" y="1119.50">s4::exec_fileprocessor_thr..</text></g><g><title>s4::exec_syslogprocessor (109 samples, 16.77%)</title><rect x="73.2308%" y="1093" width="16.7692%" height="15" fill="rgb(229,116,34)" fg:x="476" fg:w="109"/><text x="73.4808%" y="1103.50">s4::exec_syslogprocessor</text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::new (72 samples, 11.08%)</title><rect x="78.9231%" y="1077" width="11.0769%" height="15" fill="rgb(223,11,33)" fg:x="513" fg:w="72"/><text x="79.1731%" y="1087.50">s4lib::readers::..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::new (72 samples, 11.08%)</title><rect x="78.9231%" y="1061" width="11.0769%" height="15" fill="rgb(247,92,42)" fg:x="513" fg:w="72"/><text x="79.1731%" y="1071.50">s4lib::readers::..</text></g><g><title>s4lib::readers::linereader::LineReader::new (72 samples, 11.08%)</title><rect x="78.9231%" y="1045" width="11.0769%" height="15" fill="rgb(243,188,25)" fg:x="513" fg:w="72"/><text x="79.1731%" y="1055.50">s4lib::readers::..</text></g><g><title>s4lib::readers::blockreader::BlockReader::new (72 samples, 11.08%)</title><rect x="78.9231%" y="1029" width="11.0769%" height="15" fill="rgb(233,2,13)" fg:x="513" fg:w="72"/><text x="79.1731%" y="1039.50">s4lib::readers::..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4 samples, 0.62%)</title><rect x="89.3846%" y="1013" width="0.6154%" height="15" fill="rgb(243,52,34)" fg:x="581" fg:w="4"/><text x="89.6346%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.62%)</title><rect x="89.3846%" y="997" width="0.6154%" height="15" fill="rgb(224,207,30)" fg:x="581" fg:w="4"/><text x="89.6346%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 0.62%)</title><rect x="89.3846%" y="981" width="0.6154%" height="15" fill="rgb(251,49,54)" fg:x="581" fg:w="4"/><text x="89.6346%" y="991.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.62%)</title><rect x="89.3846%" y="965" width="0.6154%" height="15" fill="rgb(214,20,35)" fg:x="581" fg:w="4"/><text x="89.6346%" y="975.50"></text></g><g><title>__memmove_avx512_unaligned_erms (4 samples, 0.62%)</title><rect x="89.3846%" y="949" width="0.6154%" height="15" fill="rgb(217,126,36)" fg:x="581" fg:w="4"/><text x="89.6346%" y="959.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.62%)</title><rect x="89.3846%" y="933" width="0.6154%" height="15" fill="rgb(210,204,4)" fg:x="581" fg:w="4"/><text x="89.6346%" y="943.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Compiler::densify (1 samples, 0.15%)</title><rect x="90.0000%" y="917" width="0.1538%" height="15" fill="rgb(238,72,18)" fg:x="585" fg:w="1"/><text x="90.2500%" y="927.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::NFA::alloc_dense_state (1 samples, 0.15%)</title><rect x="90.0000%" y="901" width="0.1538%" height="15" fill="rgb(219,82,1)" fg:x="585" fg:w="1"/><text x="90.2500%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.15%)</title><rect x="90.0000%" y="885" width="0.1538%" height="15" fill="rgb(205,186,49)" fg:x="585" fg:w="1"/><text x="90.2500%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.15%)</title><rect x="90.0000%" y="869" width="0.1538%" height="15" fill="rgb(232,211,42)" fg:x="585" fg:w="1"/><text x="90.2500%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.15%)</title><rect x="90.0000%" y="853" width="0.1538%" height="15" fill="rgb(214,146,48)" fg:x="585" fg:w="1"/><text x="90.2500%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (1 samples, 0.15%)</title><rect x="90.0000%" y="837" width="0.1538%" height="15" fill="rgb(242,133,26)" fg:x="585" fg:w="1"/><text x="90.2500%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.15%)</title><rect x="90.0000%" y="821" width="0.1538%" height="15" fill="rgb(223,137,46)" fg:x="585" fg:w="1"/><text x="90.2500%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each::check::{{closure}} (1 samples, 0.15%)</title><rect x="90.0000%" y="805" width="0.1538%" height="15" fill="rgb(234,154,36)" fg:x="585" fg:w="1"/><text x="90.2500%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::{{closure}} (1 samples, 0.15%)</title><rect x="90.0000%" y="789" width="0.1538%" height="15" fill="rgb(221,227,48)" fg:x="585" fg:w="1"/><text x="90.2500%" y="799.50"></text></g><g><title>core::ptr::write (1 samples, 0.15%)</title><rect x="90.0000%" y="773" width="0.1538%" height="15" fill="rgb(209,143,44)" fg:x="585" fg:w="1"/><text x="90.2500%" y="783.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::NFA::follow_transition (2 samples, 0.31%)</title><rect x="90.1538%" y="901" width="0.3077%" height="15" fill="rgb(245,172,39)" fg:x="586" fg:w="2"/><text x="90.4038%" y="911.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::NFA::follow_transition_sparse (2 samples, 0.31%)</title><rect x="90.1538%" y="885" width="0.3077%" height="15" fill="rgb(231,136,53)" fg:x="586" fg:w="2"/><text x="90.4038%" y="895.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Compiler::build_trie (3 samples, 0.46%)</title><rect x="90.1538%" y="917" width="0.4615%" height="15" fill="rgb(206,127,45)" fg:x="586" fg:w="3"/><text x="90.4038%" y="927.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::NFA::add_transition (1 samples, 0.15%)</title><rect x="90.4615%" y="901" width="0.1538%" height="15" fill="rgb(213,191,43)" fg:x="588" fg:w="1"/><text x="90.7115%" y="911.50"></text></g><g><title>regex_automata::meta::strategy::ReverseInner::new (6 samples, 0.92%)</title><rect x="90.0000%" y="1093" width="0.9231%" height="15" fill="rgb(225,146,32)" fg:x="585" fg:w="6"/><text x="90.2500%" y="1103.50"></text></g><g><title>regex_automata::meta::reverse_inner::extract (6 samples, 0.92%)</title><rect x="90.0000%" y="1077" width="0.9231%" height="15" fill="rgb(209,78,45)" fg:x="585" fg:w="6"/><text x="90.2500%" y="1087.50"></text></g><g><title>regex_automata::meta::reverse_inner::prefilter (6 samples, 0.92%)</title><rect x="90.0000%" y="1061" width="0.9231%" height="15" fill="rgb(221,50,42)" fg:x="585" fg:w="6"/><text x="90.2500%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (6 samples, 0.92%)</title><rect x="90.0000%" y="1045" width="0.9231%" height="15" fill="rgb(225,8,7)" fg:x="585" fg:w="6"/><text x="90.2500%" y="1055.50"></text></g><g><title>regex_automata::meta::reverse_inner::prefilter::{{closure}} (6 samples, 0.92%)</title><rect x="90.0000%" y="1029" width="0.9231%" height="15" fill="rgb(234,195,1)" fg:x="585" fg:w="6"/><text x="90.2500%" y="1039.50"></text></g><g><title>regex_automata::util::prefilter::Prefilter::new (6 samples, 0.92%)</title><rect x="90.0000%" y="1013" width="0.9231%" height="15" fill="rgb(227,199,27)" fg:x="585" fg:w="6"/><text x="90.2500%" y="1023.50"></text></g><g><title>regex_automata::util::prefilter::Choice::new (6 samples, 0.92%)</title><rect x="90.0000%" y="997" width="0.9231%" height="15" fill="rgb(243,64,33)" fg:x="585" fg:w="6"/><text x="90.2500%" y="1007.50"></text></g><g><title>regex_automata::util::prefilter::teddy::Teddy::new (6 samples, 0.92%)</title><rect x="90.0000%" y="981" width="0.9231%" height="15" fill="rgb(207,155,0)" fg:x="585" fg:w="6"/><text x="90.2500%" y="991.50"></text></g><g><title>aho_corasick::dfa::Builder::build (6 samples, 0.92%)</title><rect x="90.0000%" y="965" width="0.9231%" height="15" fill="rgb(212,91,25)" fg:x="585" fg:w="6"/><text x="90.2500%" y="975.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Builder::build (6 samples, 0.92%)</title><rect x="90.0000%" y="949" width="0.9231%" height="15" fill="rgb(235,33,22)" fg:x="585" fg:w="6"/><text x="90.2500%" y="959.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Compiler::compile (6 samples, 0.92%)</title><rect x="90.0000%" y="933" width="0.9231%" height="15" fill="rgb(253,203,15)" fg:x="585" fg:w="6"/><text x="90.2500%" y="943.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Compiler::add_unanchored_start_state_loop (2 samples, 0.31%)</title><rect x="90.6154%" y="917" width="0.3077%" height="15" fill="rgb(237,137,51)" fg:x="589" fg:w="2"/><text x="90.8654%" y="927.50"></text></g><g><title>regex_automata::meta::strategy::Core::new (2 samples, 0.31%)</title><rect x="90.9231%" y="1093" width="0.3077%" height="15" fill="rgb(222,69,27)" fg:x="591" fg:w="2"/><text x="91.1731%" y="1103.50"></text></g><g><title>regex_automata::meta::wrappers::Hybrid::new (2 samples, 0.31%)</title><rect x="90.9231%" y="1077" width="0.3077%" height="15" fill="rgb(227,93,26)" fg:x="591" fg:w="2"/><text x="91.1731%" y="1087.50"></text></g><g><title>regex_automata::meta::wrappers::HybridEngine::new (2 samples, 0.31%)</title><rect x="90.9231%" y="1061" width="0.3077%" height="15" fill="rgb(206,223,9)" fg:x="591" fg:w="2"/><text x="91.1731%" y="1071.50"></text></g><g><title>regex_automata::hybrid::dfa::Builder::build_from_nfa (2 samples, 0.31%)</title><rect x="90.9231%" y="1045" width="0.3077%" height="15" fill="rgb(218,121,20)" fg:x="591" fg:w="2"/><text x="91.1731%" y="1055.50"></text></g><g><title>regex_automata::hybrid::dfa::Config::byte_classes_from_nfa (2 samples, 0.31%)</title><rect x="90.9231%" y="1029" width="0.3077%" height="15" fill="rgb(224,75,48)" fg:x="591" fg:w="2"/><text x="91.1731%" y="1039.50"></text></g><g><title>regex_automata::util::alphabet::ByteClassSet::byte_classes (2 samples, 0.31%)</title><rect x="90.9231%" y="1013" width="0.3077%" height="15" fill="rgb(211,195,22)" fg:x="591" fg:w="2"/><text x="91.1731%" y="1023.50"></text></g><g><title>regex_automata::util::alphabet::ByteSet::contains (2 samples, 0.31%)</title><rect x="90.9231%" y="997" width="0.3077%" height="15" fill="rgb(229,229,29)" fg:x="591" fg:w="2"/><text x="91.1731%" y="1007.50"></text></g><g><title>regex_automata::meta::strategy::new (9 samples, 1.38%)</title><rect x="90.0000%" y="1109" width="1.3846%" height="15" fill="rgb(243,171,22)" fg:x="585" fg:w="9"/><text x="90.2500%" y="1119.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.15%)</title><rect x="91.2308%" y="1093" width="0.1538%" height="15" fill="rgb(225,8,7)" fg:x="593" fg:w="1"/><text x="91.4808%" y="1103.50"></text></g><g><title>regex_automata::meta::strategy::new::{{closure}} (1 samples, 0.15%)</title><rect x="91.2308%" y="1077" width="0.1538%" height="15" fill="rgb(238,100,15)" fg:x="593" fg:w="1"/><text x="91.4808%" y="1087.50"></text></g><g><title>regex_automata::util::prefilter::Prefilter::new (1 samples, 0.15%)</title><rect x="91.2308%" y="1061" width="0.1538%" height="15" fill="rgb(227,199,27)" fg:x="593" fg:w="1"/><text x="91.4808%" y="1071.50"></text></g><g><title>regex_automata::util::prefilter::Choice::new (1 samples, 0.15%)</title><rect x="91.2308%" y="1045" width="0.1538%" height="15" fill="rgb(243,64,33)" fg:x="593" fg:w="1"/><text x="91.4808%" y="1055.50"></text></g><g><title>regex_automata::util::prefilter::teddy::Teddy::new (1 samples, 0.15%)</title><rect x="91.2308%" y="1029" width="0.1538%" height="15" fill="rgb(207,155,0)" fg:x="593" fg:w="1"/><text x="91.4808%" y="1039.50"></text></g><g><title>aho_corasick::dfa::Builder::build (1 samples, 0.15%)</title><rect x="91.2308%" y="1013" width="0.1538%" height="15" fill="rgb(212,91,25)" fg:x="593" fg:w="1"/><text x="91.4808%" y="1023.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Builder::build (1 samples, 0.15%)</title><rect x="91.2308%" y="997" width="0.1538%" height="15" fill="rgb(235,33,22)" fg:x="593" fg:w="1"/><text x="91.4808%" y="1007.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Compiler::compile (1 samples, 0.15%)</title><rect x="91.2308%" y="981" width="0.1538%" height="15" fill="rgb(253,203,15)" fg:x="593" fg:w="1"/><text x="91.4808%" y="991.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Compiler::shuffle (1 samples, 0.15%)</title><rect x="91.2308%" y="965" width="0.1538%" height="15" fill="rgb(236,25,7)" fg:x="593" fg:w="1"/><text x="91.4808%" y="975.50"></text></g><g><title>aho_corasick::util::remapper::Remapper::remap (1 samples, 0.15%)</title><rect x="91.2308%" y="949" width="0.1538%" height="15" fill="rgb(226,227,45)" fg:x="593" fg:w="1"/><text x="91.4808%" y="959.50"></text></g><g><title>&lt;aho_corasick::nfa::noncontiguous::NFA as aho_corasick::util::remapper::Remappable&gt;::remap (1 samples, 0.15%)</title><rect x="91.2308%" y="933" width="0.1538%" height="15" fill="rgb(226,108,34)" fg:x="593" fg:w="1"/><text x="91.4808%" y="943.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::NFA::remap (1 samples, 0.15%)</title><rect x="91.2308%" y="917" width="0.1538%" height="15" fill="rgb(254,74,25)" fg:x="593" fg:w="1"/><text x="91.4808%" y="927.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="91.2308%" y="901" width="0.1538%" height="15" fill="rgb(242,38,10)" fg:x="593" fg:w="1"/><text x="91.4808%" y="911.50"></text></g><g><title>aho_corasick::util::alphabet::ByteClasses::get (1 samples, 0.15%)</title><rect x="91.3846%" y="853" width="0.1538%" height="15" fill="rgb(251,98,47)" fg:x="594" fg:w="1"/><text x="91.6346%" y="863.50"></text></g><g><title>aho_corasick::dfa::Builder::finish_build_one_start::{{closure}} (1 samples, 0.15%)</title><rect x="91.5385%" y="837" width="0.1538%" height="15" fill="rgb(251,205,26)" fg:x="595" fg:w="1"/><text x="91.7885%" y="847.50"></text></g><g><title>regex_automata::util::prefilter::teddy::Teddy::new (3 samples, 0.46%)</title><rect x="91.3846%" y="933" width="0.4615%" height="15" fill="rgb(207,155,0)" fg:x="594" fg:w="3"/><text x="91.6346%" y="943.50"></text></g><g><title>aho_corasick::dfa::Builder::build (3 samples, 0.46%)</title><rect x="91.3846%" y="917" width="0.4615%" height="15" fill="rgb(212,91,25)" fg:x="594" fg:w="3"/><text x="91.6346%" y="927.50"></text></g><g><title>aho_corasick::dfa::Builder::build_from_noncontiguous (3 samples, 0.46%)</title><rect x="91.3846%" y="901" width="0.4615%" height="15" fill="rgb(231,220,22)" fg:x="594" fg:w="3"/><text x="91.6346%" y="911.50"></text></g><g><title>aho_corasick::dfa::Builder::finish_build_one_start (3 samples, 0.46%)</title><rect x="91.3846%" y="885" width="0.4615%" height="15" fill="rgb(242,31,54)" fg:x="594" fg:w="3"/><text x="91.6346%" y="895.50"></text></g><g><title>aho_corasick::dfa::sparse_iter (3 samples, 0.46%)</title><rect x="91.3846%" y="869" width="0.4615%" height="15" fill="rgb(223,225,36)" fg:x="594" fg:w="3"/><text x="91.6346%" y="879.50"></text></g><g><title>aho_corasick::dfa::Builder::finish_build_one_start::{{closure}} (2 samples, 0.31%)</title><rect x="91.5385%" y="853" width="0.3077%" height="15" fill="rgb(251,205,26)" fg:x="595" fg:w="2"/><text x="91.7885%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.15%)</title><rect x="91.6923%" y="837" width="0.1538%" height="15" fill="rgb(218,6,47)" fg:x="596" fg:w="1"/><text x="91.9423%" y="847.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.15%)</title><rect x="91.6923%" y="821" width="0.1538%" height="15" fill="rgb(228,30,25)" fg:x="596" fg:w="1"/><text x="91.9423%" y="831.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.15%)</title><rect x="91.6923%" y="805" width="0.1538%" height="15" fill="rgb(215,184,34)" fg:x="596" fg:w="1"/><text x="91.9423%" y="815.50"></text></g><g><title>regex_automata::meta::strategy::ReverseInner::new (4 samples, 0.62%)</title><rect x="91.3846%" y="1045" width="0.6154%" height="15" fill="rgb(225,146,32)" fg:x="594" fg:w="4"/><text x="91.6346%" y="1055.50"></text></g><g><title>regex_automata::meta::reverse_inner::extract (4 samples, 0.62%)</title><rect x="91.3846%" y="1029" width="0.6154%" height="15" fill="rgb(209,78,45)" fg:x="594" fg:w="4"/><text x="91.6346%" y="1039.50"></text></g><g><title>regex_automata::meta::reverse_inner::prefilter (4 samples, 0.62%)</title><rect x="91.3846%" y="1013" width="0.6154%" height="15" fill="rgb(221,50,42)" fg:x="594" fg:w="4"/><text x="91.6346%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (4 samples, 0.62%)</title><rect x="91.3846%" y="997" width="0.6154%" height="15" fill="rgb(225,8,7)" fg:x="594" fg:w="4"/><text x="91.6346%" y="1007.50"></text></g><g><title>regex_automata::meta::reverse_inner::prefilter::{{closure}} (4 samples, 0.62%)</title><rect x="91.3846%" y="981" width="0.6154%" height="15" fill="rgb(234,195,1)" fg:x="594" fg:w="4"/><text x="91.6346%" y="991.50"></text></g><g><title>regex_automata::util::prefilter::Prefilter::new (4 samples, 0.62%)</title><rect x="91.3846%" y="965" width="0.6154%" height="15" fill="rgb(227,199,27)" fg:x="594" fg:w="4"/><text x="91.6346%" y="975.50"></text></g><g><title>regex_automata::util::prefilter::Choice::new (4 samples, 0.62%)</title><rect x="91.3846%" y="949" width="0.6154%" height="15" fill="rgb(243,64,33)" fg:x="594" fg:w="4"/><text x="91.6346%" y="959.50"></text></g><g><title>regex_automata::util::prefilter::aho_corasick::AhoCorasick::new (1 samples, 0.15%)</title><rect x="91.8462%" y="933" width="0.1538%" height="15" fill="rgb(212,202,50)" fg:x="597" fg:w="1"/><text x="92.0962%" y="943.50"></text></g><g><title>aho_corasick::ahocorasick::AhoCorasickBuilder::build (1 samples, 0.15%)</title><rect x="91.8462%" y="917" width="0.1538%" height="15" fill="rgb(223,55,42)" fg:x="597" fg:w="1"/><text x="92.0962%" y="927.50"></text></g><g><title>aho_corasick::dfa::Builder::build_from_noncontiguous (1 samples, 0.15%)</title><rect x="91.8462%" y="901" width="0.1538%" height="15" fill="rgb(231,220,22)" fg:x="597" fg:w="1"/><text x="92.0962%" y="911.50"></text></g><g><title>aho_corasick::dfa::Builder::finish_build_both_starts (1 samples, 0.15%)</title><rect x="91.8462%" y="885" width="0.1538%" height="15" fill="rgb(216,25,9)" fg:x="597" fg:w="1"/><text x="92.0962%" y="895.50"></text></g><g><title>aho_corasick::dfa::sparse_iter (1 samples, 0.15%)</title><rect x="91.8462%" y="869" width="0.1538%" height="15" fill="rgb(223,225,36)" fg:x="597" fg:w="1"/><text x="92.0962%" y="879.50"></text></g><g><title>core::cmp::PartialEq::ne (1 samples, 0.15%)</title><rect x="91.8462%" y="853" width="0.1538%" height="15" fill="rgb(238,191,27)" fg:x="597" fg:w="1"/><text x="92.0962%" y="863.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.15%)</title><rect x="91.8462%" y="837" width="0.1538%" height="15" fill="rgb(237,219,30)" fg:x="597" fg:w="1"/><text x="92.0962%" y="847.50"></text></g><g><title>&lt;T as core::option::SpecOptionPartialEq&gt;::eq (1 samples, 0.15%)</title><rect x="91.8462%" y="821" width="0.1538%" height="15" fill="rgb(232,161,7)" fg:x="597" fg:w="1"/><text x="92.0962%" y="831.50"></text></g><g><title>unlink_chunk (3 samples, 0.46%)</title><rect x="92.0000%" y="421" width="0.4615%" height="15" fill="rgb(223,20,30)" fg:x="598" fg:w="3"/><text x="92.2500%" y="431.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class (4 samples, 0.62%)</title><rect x="92.0000%" y="661" width="0.6154%" height="15" fill="rgb(246,38,12)" fg:x="598" fg:w="4"/><text x="92.2500%" y="671.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::new (4 samples, 0.62%)</title><rect x="92.0000%" y="645" width="0.6154%" height="15" fill="rgb(211,200,20)" fg:x="598" fg:w="4"/><text x="92.2500%" y="655.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8State::clear (4 samples, 0.62%)</title><rect x="92.0000%" y="629" width="0.6154%" height="15" fill="rgb(241,127,0)" fg:x="598" fg:w="4"/><text x="92.2500%" y="639.50"></text></g><g><title>regex_automata::nfa::thompson::map::Utf8BoundedMap::clear (4 samples, 0.62%)</title><rect x="92.0000%" y="613" width="0.6154%" height="15" fill="rgb(207,86,25)" fg:x="598" fg:w="4"/><text x="92.2500%" y="623.50"></text></g><g><title>alloc::vec::from_elem (4 samples, 0.62%)</title><rect x="92.0000%" y="597" width="0.6154%" height="15" fill="rgb(208,109,54)" fg:x="598" fg:w="4"/><text x="92.2500%" y="607.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (4 samples, 0.62%)</title><rect x="92.0000%" y="581" width="0.6154%" height="15" fill="rgb(228,177,24)" fg:x="598" fg:w="4"/><text x="92.2500%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.62%)</title><rect x="92.0000%" y="565" width="0.6154%" height="15" fill="rgb(249,207,12)" fg:x="598" fg:w="4"/><text x="92.2500%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.62%)</title><rect x="92.0000%" y="549" width="0.6154%" height="15" fill="rgb(224,194,14)" fg:x="598" fg:w="4"/><text x="92.2500%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.62%)</title><rect x="92.0000%" y="533" width="0.6154%" height="15" fill="rgb(227,204,5)" fg:x="598" fg:w="4"/><text x="92.2500%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.62%)</title><rect x="92.0000%" y="517" width="0.6154%" height="15" fill="rgb(231,114,21)" fg:x="598" fg:w="4"/><text x="92.2500%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.62%)</title><rect x="92.0000%" y="501" width="0.6154%" height="15" fill="rgb(238,209,2)" fg:x="598" fg:w="4"/><text x="92.2500%" y="511.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.62%)</title><rect x="92.0000%" y="485" width="0.6154%" height="15" fill="rgb(253,135,41)" fg:x="598" fg:w="4"/><text x="92.2500%" y="495.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.62%)</title><rect x="92.0000%" y="469" width="0.6154%" height="15" fill="rgb(206,112,53)" fg:x="598" fg:w="4"/><text x="92.2500%" y="479.50"></text></g><g><title>_int_malloc (4 samples, 0.62%)</title><rect x="92.0000%" y="453" width="0.6154%" height="15" fill="rgb(222,219,51)" fg:x="598" fg:w="4"/><text x="92.2500%" y="463.50"></text></g><g><title>malloc_consolidate (4 samples, 0.62%)</title><rect x="92.0000%" y="437" width="0.6154%" height="15" fill="rgb(228,194,39)" fg:x="598" fg:w="4"/><text x="92.2500%" y="447.50"></text></g><g><title>&lt;regex_automata::util::primitives::StateID as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="92.6154%" y="421" width="0.1538%" height="15" fill="rgb(234,185,22)" fg:x="602" fg:w="1"/><text x="92.8654%" y="431.50"></text></g><g><title>regex_automata::meta::strategy::Core::new (7 samples, 1.08%)</title><rect x="92.0000%" y="1045" width="1.0769%" height="15" fill="rgb(222,69,27)" fg:x="598" fg:w="7"/><text x="92.2500%" y="1055.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (7 samples, 1.08%)</title><rect x="92.0000%" y="1029" width="1.0769%" height="15" fill="rgb(226,42,16)" fg:x="598" fg:w="7"/><text x="92.2500%" y="1039.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (7 samples, 1.08%)</title><rect x="92.0000%" y="1013" width="1.0769%" height="15" fill="rgb(242,129,17)" fg:x="598" fg:w="7"/><text x="92.2500%" y="1023.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (7 samples, 1.08%)</title><rect x="92.0000%" y="997" width="1.0769%" height="15" fill="rgb(247,137,3)" fg:x="598" fg:w="7"/><text x="92.2500%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 1.08%)</title><rect x="92.0000%" y="981" width="1.0769%" height="15" fill="rgb(214,109,53)" fg:x="598" fg:w="7"/><text x="92.2500%" y="991.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (7 samples, 1.08%)</title><rect x="92.0000%" y="965" width="1.0769%" height="15" fill="rgb(254,35,30)" fg:x="598" fg:w="7"/><text x="92.2500%" y="975.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (7 samples, 1.08%)</title><rect x="92.0000%" y="949" width="1.0769%" height="15" fill="rgb(226,169,23)" fg:x="598" fg:w="7"/><text x="92.2500%" y="959.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile::{{closure}} (7 samples, 1.08%)</title><rect x="92.0000%" y="933" width="1.0769%" height="15" fill="rgb(218,216,52)" fg:x="598" fg:w="7"/><text x="92.2500%" y="943.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (7 samples, 1.08%)</title><rect x="92.0000%" y="917" width="1.0769%" height="15" fill="rgb(235,200,16)" fg:x="598" fg:w="7"/><text x="92.2500%" y="927.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (7 samples, 1.08%)</title><rect x="92.0000%" y="901" width="1.0769%" height="15" fill="rgb(213,34,18)" fg:x="598" fg:w="7"/><text x="92.2500%" y="911.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (7 samples, 1.08%)</title><rect x="92.0000%" y="885" width="1.0769%" height="15" fill="rgb(210,105,37)" fg:x="598" fg:w="7"/><text x="92.2500%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 1.08%)</title><rect x="92.0000%" y="869" width="1.0769%" height="15" fill="rgb(214,109,53)" fg:x="598" fg:w="7"/><text x="92.2500%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (7 samples, 1.08%)</title><rect x="92.0000%" y="853" width="1.0769%" height="15" fill="rgb(254,35,30)" fg:x="598" fg:w="7"/><text x="92.2500%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (7 samples, 1.08%)</title><rect x="92.0000%" y="837" width="1.0769%" height="15" fill="rgb(226,169,23)" fg:x="598" fg:w="7"/><text x="92.2500%" y="847.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (7 samples, 1.08%)</title><rect x="92.0000%" y="821" width="1.0769%" height="15" fill="rgb(205,130,14)" fg:x="598" fg:w="7"/><text x="92.2500%" y="831.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (7 samples, 1.08%)</title><rect x="92.0000%" y="805" width="1.0769%" height="15" fill="rgb(235,200,16)" fg:x="598" fg:w="7"/><text x="92.2500%" y="815.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (7 samples, 1.08%)</title><rect x="92.0000%" y="789" width="1.0769%" height="15" fill="rgb(213,34,18)" fg:x="598" fg:w="7"/><text x="92.2500%" y="799.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (7 samples, 1.08%)</title><rect x="92.0000%" y="773" width="1.0769%" height="15" fill="rgb(253,35,22)" fg:x="598" fg:w="7"/><text x="92.2500%" y="783.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (7 samples, 1.08%)</title><rect x="92.0000%" y="757" width="1.0769%" height="15" fill="rgb(247,137,3)" fg:x="598" fg:w="7"/><text x="92.2500%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 1.08%)</title><rect x="92.0000%" y="741" width="1.0769%" height="15" fill="rgb(214,109,53)" fg:x="598" fg:w="7"/><text x="92.2500%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (7 samples, 1.08%)</title><rect x="92.0000%" y="725" width="1.0769%" height="15" fill="rgb(254,35,30)" fg:x="598" fg:w="7"/><text x="92.2500%" y="735.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (7 samples, 1.08%)</title><rect x="92.0000%" y="709" width="1.0769%" height="15" fill="rgb(226,169,23)" fg:x="598" fg:w="7"/><text x="92.2500%" y="719.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice::{{closure}} (7 samples, 1.08%)</title><rect x="92.0000%" y="693" width="1.0769%" height="15" fill="rgb(223,145,12)" fg:x="598" fg:w="7"/><text x="92.2500%" y="703.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (7 samples, 1.08%)</title><rect x="92.0000%" y="677" width="1.0769%" height="15" fill="rgb(213,34,18)" fg:x="598" fg:w="7"/><text x="92.2500%" y="687.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (3 samples, 0.46%)</title><rect x="92.6154%" y="661" width="0.4615%" height="15" fill="rgb(210,105,37)" fg:x="602" fg:w="3"/><text x="92.8654%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.46%)</title><rect x="92.6154%" y="645" width="0.4615%" height="15" fill="rgb(214,109,53)" fg:x="602" fg:w="3"/><text x="92.8654%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.46%)</title><rect x="92.6154%" y="629" width="0.4615%" height="15" fill="rgb(254,35,30)" fg:x="602" fg:w="3"/><text x="92.8654%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (3 samples, 0.46%)</title><rect x="92.6154%" y="613" width="0.4615%" height="15" fill="rgb(226,169,23)" fg:x="602" fg:w="3"/><text x="92.8654%" y="623.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (3 samples, 0.46%)</title><rect x="92.6154%" y="597" width="0.4615%" height="15" fill="rgb(205,130,14)" fg:x="602" fg:w="3"/><text x="92.8654%" y="607.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (3 samples, 0.46%)</title><rect x="92.6154%" y="581" width="0.4615%" height="15" fill="rgb(213,34,18)" fg:x="602" fg:w="3"/><text x="92.8654%" y="591.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class (3 samples, 0.46%)</title><rect x="92.6154%" y="565" width="0.4615%" height="15" fill="rgb(246,38,12)" fg:x="602" fg:w="3"/><text x="92.8654%" y="575.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::new (3 samples, 0.46%)</title><rect x="92.6154%" y="549" width="0.4615%" height="15" fill="rgb(211,200,20)" fg:x="602" fg:w="3"/><text x="92.8654%" y="559.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8State::clear (3 samples, 0.46%)</title><rect x="92.6154%" y="533" width="0.4615%" height="15" fill="rgb(241,127,0)" fg:x="602" fg:w="3"/><text x="92.8654%" y="543.50"></text></g><g><title>regex_automata::nfa::thompson::map::Utf8BoundedMap::clear (3 samples, 0.46%)</title><rect x="92.6154%" y="517" width="0.4615%" height="15" fill="rgb(207,86,25)" fg:x="602" fg:w="3"/><text x="92.8654%" y="527.50"></text></g><g><title>alloc::vec::from_elem (3 samples, 0.46%)</title><rect x="92.6154%" y="501" width="0.4615%" height="15" fill="rgb(208,109,54)" fg:x="602" fg:w="3"/><text x="92.8654%" y="511.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (3 samples, 0.46%)</title><rect x="92.6154%" y="485" width="0.4615%" height="15" fill="rgb(228,177,24)" fg:x="602" fg:w="3"/><text x="92.8654%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (3 samples, 0.46%)</title><rect x="92.6154%" y="469" width="0.4615%" height="15" fill="rgb(216,52,5)" fg:x="602" fg:w="3"/><text x="92.8654%" y="479.50"></text></g><g><title>&lt;alloc::vec::ExtendElement&lt;T&gt; as alloc::vec::ExtendWith&lt;T&gt;&gt;::next (3 samples, 0.46%)</title><rect x="92.6154%" y="453" width="0.4615%" height="15" fill="rgb(216,123,15)" fg:x="602" fg:w="3"/><text x="92.8654%" y="463.50"></text></g><g><title>&lt;regex_automata::nfa::thompson::map::Utf8BoundedEntry as core::clone::Clone&gt;::clone (3 samples, 0.46%)</title><rect x="92.6154%" y="437" width="0.4615%" height="15" fill="rgb(211,18,41)" fg:x="602" fg:w="3"/><text x="92.8654%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.31%)</title><rect x="92.7692%" y="421" width="0.3077%" height="15" fill="rgb(239,104,10)" fg:x="603" fg:w="2"/><text x="93.0192%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.31%)</title><rect x="92.7692%" y="405" width="0.3077%" height="15" fill="rgb(229,121,46)" fg:x="603" fg:w="2"/><text x="93.0192%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.31%)</title><rect x="92.7692%" y="389" width="0.3077%" height="15" fill="rgb(221,172,50)" fg:x="603" fg:w="2"/><text x="93.0192%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.31%)</title><rect x="92.7692%" y="373" width="0.3077%" height="15" fill="rgb(216,42,52)" fg:x="603" fg:w="2"/><text x="93.0192%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.31%)</title><rect x="92.7692%" y="357" width="0.3077%" height="15" fill="rgb(222,107,1)" fg:x="603" fg:w="2"/><text x="93.0192%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.31%)</title><rect x="92.7692%" y="341" width="0.3077%" height="15" fill="rgb(214,20,35)" fg:x="603" fg:w="2"/><text x="93.0192%" y="351.50"></text></g><g><title>__memmove_avx512_unaligned_erms (2 samples, 0.31%)</title><rect x="92.7692%" y="325" width="0.3077%" height="15" fill="rgb(217,126,36)" fg:x="603" fg:w="2"/><text x="93.0192%" y="335.50"></text></g><g><title>aho_corasick::packed::api::Builder::build (1 samples, 0.15%)</title><rect x="93.0769%" y="965" width="0.1538%" height="15" fill="rgb(245,1,41)" fg:x="605" fg:w="1"/><text x="93.3269%" y="975.50"></text></g><g><title>aho_corasick::packed::api::Builder::build_teddy (1 samples, 0.15%)</title><rect x="93.0769%" y="949" width="0.1538%" height="15" fill="rgb(225,159,12)" fg:x="605" fg:w="1"/><text x="93.3269%" y="959.50"></text></g><g><title>aho_corasick::packed::teddy::builder::Builder::build (1 samples, 0.15%)</title><rect x="93.0769%" y="933" width="0.1538%" height="15" fill="rgb(235,121,30)" fg:x="605" fg:w="1"/><text x="93.3269%" y="943.50"></text></g><g><title>aho_corasick::packed::teddy::builder::Builder::build_imp (1 samples, 0.15%)</title><rect x="93.0769%" y="917" width="0.1538%" height="15" fill="rgb(237,147,11)" fg:x="605" fg:w="1"/><text x="93.3269%" y="927.50"></text></g><g><title>aho_corasick::packed::teddy::builder::x86_64::SlimAVX2&lt;1_usize&gt;::new (1 samples, 0.15%)</title><rect x="93.0769%" y="901" width="0.1538%" height="15" fill="rgb(221,42,51)" fg:x="605" fg:w="1"/><text x="93.3269%" y="911.50"></text></g><g><title>aho_corasick::packed::teddy::builder::x86_64::SlimAVX2&lt;1_usize&gt;::new_unchecked (1 samples, 0.15%)</title><rect x="93.0769%" y="885" width="0.1538%" height="15" fill="rgb(252,193,13)" fg:x="605" fg:w="1"/><text x="93.3269%" y="895.50"></text></g><g><title>aho_corasick::packed::teddy::generic::Slim&lt;V,_&gt;::new (1 samples, 0.15%)</title><rect x="93.0769%" y="869" width="0.1538%" height="15" fill="rgb(210,112,54)" fg:x="605" fg:w="1"/><text x="93.3269%" y="879.50"></text></g><g><title>aho_corasick::packed::teddy::generic::Teddy&lt;_&gt;::new (1 samples, 0.15%)</title><rect x="93.0769%" y="853" width="0.1538%" height="15" fill="rgb(246,138,28)" fg:x="605" fg:w="1"/><text x="93.3269%" y="863.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Compiler::set_anchored_start_state (1 samples, 0.15%)</title><rect x="93.2308%" y="917" width="0.1538%" height="15" fill="rgb(219,24,4)" fg:x="606" fg:w="1"/><text x="93.4808%" y="927.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::NFA::next_link (1 samples, 0.15%)</title><rect x="93.2308%" y="901" width="0.1538%" height="15" fill="rgb(209,45,40)" fg:x="606" fg:w="1"/><text x="93.4808%" y="911.50"></text></g><g><title>aho_corasick::util::primitives::&lt;impl core::ops::index::Index&lt;aho_corasick::util::primitives::StateID&gt; for alloc::vec::Vec&lt;T&gt;&gt;::index (1 samples, 0.15%)</title><rect x="93.2308%" y="885" width="0.1538%" height="15" fill="rgb(245,127,36)" fg:x="606" fg:w="1"/><text x="93.4808%" y="895.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (14 samples, 2.15%)</title><rect x="91.3846%" y="1109" width="2.1538%" height="15" fill="rgb(212,33,22)" fg:x="594" fg:w="14"/><text x="91.6346%" y="1119.50">r..</text></g><g><title>regex_automata::meta::regex::Builder::build_many (14 samples, 2.15%)</title><rect x="91.3846%" y="1093" width="2.1538%" height="15" fill="rgb(236,25,32)" fg:x="594" fg:w="14"/><text x="91.6346%" y="1103.50">r..</text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (14 samples, 2.15%)</title><rect x="91.3846%" y="1077" width="2.1538%" height="15" fill="rgb(250,142,30)" fg:x="594" fg:w="14"/><text x="91.6346%" y="1087.50">r..</text></g><g><title>regex_automata::meta::strategy::new (14 samples, 2.15%)</title><rect x="91.3846%" y="1061" width="2.1538%" height="15" fill="rgb(243,171,22)" fg:x="594" fg:w="14"/><text x="91.6346%" y="1071.50">r..</text></g><g><title>core::option::Option&lt;T&gt;::and_then (3 samples, 0.46%)</title><rect x="93.0769%" y="1045" width="0.4615%" height="15" fill="rgb(225,8,7)" fg:x="605" fg:w="3"/><text x="93.3269%" y="1055.50"></text></g><g><title>regex_automata::meta::strategy::new::{{closure}} (3 samples, 0.46%)</title><rect x="93.0769%" y="1029" width="0.4615%" height="15" fill="rgb(238,100,15)" fg:x="605" fg:w="3"/><text x="93.3269%" y="1039.50"></text></g><g><title>regex_automata::util::prefilter::Prefilter::new (3 samples, 0.46%)</title><rect x="93.0769%" y="1013" width="0.4615%" height="15" fill="rgb(227,199,27)" fg:x="605" fg:w="3"/><text x="93.3269%" y="1023.50"></text></g><g><title>regex_automata::util::prefilter::Choice::new (3 samples, 0.46%)</title><rect x="93.0769%" y="997" width="0.4615%" height="15" fill="rgb(243,64,33)" fg:x="605" fg:w="3"/><text x="93.3269%" y="1007.50"></text></g><g><title>regex_automata::util::prefilter::teddy::Teddy::new (3 samples, 0.46%)</title><rect x="93.0769%" y="981" width="0.4615%" height="15" fill="rgb(207,155,0)" fg:x="605" fg:w="3"/><text x="93.3269%" y="991.50"></text></g><g><title>aho_corasick::dfa::Builder::build (2 samples, 0.31%)</title><rect x="93.2308%" y="965" width="0.3077%" height="15" fill="rgb(212,91,25)" fg:x="606" fg:w="2"/><text x="93.4808%" y="975.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Builder::build (2 samples, 0.31%)</title><rect x="93.2308%" y="949" width="0.3077%" height="15" fill="rgb(235,33,22)" fg:x="606" fg:w="2"/><text x="93.4808%" y="959.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Compiler::compile (2 samples, 0.31%)</title><rect x="93.2308%" y="933" width="0.3077%" height="15" fill="rgb(253,203,15)" fg:x="606" fg:w="2"/><text x="93.4808%" y="943.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Compiler::build_trie (1 samples, 0.15%)</title><rect x="93.3846%" y="917" width="0.1538%" height="15" fill="rgb(206,127,45)" fg:x="607" fg:w="1"/><text x="93.6346%" y="927.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::State::is_match (1 samples, 0.15%)</title><rect x="93.3846%" y="901" width="0.1538%" height="15" fill="rgb(241,31,51)" fg:x="607" fg:w="1"/><text x="93.6346%" y="911.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (1 samples, 0.15%)</title><rect x="93.5385%" y="725" width="0.1538%" height="15" fill="rgb(210,105,37)" fg:x="608" fg:w="1"/><text x="93.7885%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="93.5385%" y="709" width="0.1538%" height="15" fill="rgb(214,109,53)" fg:x="608" fg:w="1"/><text x="93.7885%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.15%)</title><rect x="93.5385%" y="693" width="0.1538%" height="15" fill="rgb(254,35,30)" fg:x="608" fg:w="1"/><text x="93.7885%" y="703.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.15%)</title><rect x="93.5385%" y="677" width="0.1538%" height="15" fill="rgb(226,169,23)" fg:x="608" fg:w="1"/><text x="93.7885%" y="687.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (1 samples, 0.15%)</title><rect x="93.5385%" y="661" width="0.1538%" height="15" fill="rgb(205,130,14)" fg:x="608" fg:w="1"/><text x="93.7885%" y="671.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.15%)</title><rect x="93.5385%" y="645" width="0.1538%" height="15" fill="rgb(213,34,18)" fg:x="608" fg:w="1"/><text x="93.7885%" y="655.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class (1 samples, 0.15%)</title><rect x="93.5385%" y="629" width="0.1538%" height="15" fill="rgb(246,38,12)" fg:x="608" fg:w="1"/><text x="93.7885%" y="639.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::add_sparse (1 samples, 0.15%)</title><rect x="93.5385%" y="613" width="0.1538%" height="15" fill="rgb(227,211,41)" fg:x="608" fg:w="1"/><text x="93.7885%" y="623.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add_sparse (1 samples, 0.15%)</title><rect x="93.5385%" y="597" width="0.1538%" height="15" fill="rgb(233,153,44)" fg:x="608" fg:w="1"/><text x="93.7885%" y="607.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add (1 samples, 0.15%)</title><rect x="93.5385%" y="581" width="0.1538%" height="15" fill="rgb(253,91,29)" fg:x="608" fg:w="1"/><text x="93.7885%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.15%)</title><rect x="93.5385%" y="565" width="0.1538%" height="15" fill="rgb(241,229,15)" fg:x="608" fg:w="1"/><text x="93.7885%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.15%)</title><rect x="93.5385%" y="549" width="0.1538%" height="15" fill="rgb(254,103,39)" fg:x="608" fg:w="1"/><text x="93.7885%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.15%)</title><rect x="93.5385%" y="533" width="0.1538%" height="15" fill="rgb(254,53,35)" fg:x="608" fg:w="1"/><text x="93.7885%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.15%)</title><rect x="93.5385%" y="517" width="0.1538%" height="15" fill="rgb(237,133,22)" fg:x="608" fg:w="1"/><text x="93.7885%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.15%)</title><rect x="93.5385%" y="501" width="0.1538%" height="15" fill="rgb(237,156,49)" fg:x="608" fg:w="1"/><text x="93.7885%" y="511.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.15%)</title><rect x="93.5385%" y="485" width="0.1538%" height="15" fill="rgb(214,150,36)" fg:x="608" fg:w="1"/><text x="93.7885%" y="495.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.15%)</title><rect x="93.5385%" y="469" width="0.1538%" height="15" fill="rgb(254,47,34)" fg:x="608" fg:w="1"/><text x="93.7885%" y="479.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.15%)</title><rect x="93.5385%" y="453" width="0.1538%" height="15" fill="rgb(254,73,4)" fg:x="608" fg:w="1"/><text x="93.7885%" y="463.50"></text></g><g><title>_int_realloc (1 samples, 0.15%)</title><rect x="93.5385%" y="437" width="0.1538%" height="15" fill="rgb(231,75,41)" fg:x="608" fg:w="1"/><text x="93.7885%" y="447.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.15%)</title><rect x="93.5385%" y="421" width="0.1538%" height="15" fill="rgb(217,126,36)" fg:x="608" fg:w="1"/><text x="93.7885%" y="431.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::patch (1 samples, 0.15%)</title><rect x="93.6923%" y="693" width="0.1538%" height="15" fill="rgb(219,22,9)" fg:x="609" fg:w="1"/><text x="93.9423%" y="703.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::patch (1 samples, 0.15%)</title><rect x="93.6923%" y="677" width="0.1538%" height="15" fill="rgb(252,101,26)" fg:x="609" fg:w="1"/><text x="93.9423%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.15%)</title><rect x="93.6923%" y="661" width="0.1538%" height="15" fill="rgb(254,103,39)" fg:x="609" fg:w="1"/><text x="93.9423%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.15%)</title><rect x="93.6923%" y="645" width="0.1538%" height="15" fill="rgb(254,53,35)" fg:x="609" fg:w="1"/><text x="93.9423%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.15%)</title><rect x="93.6923%" y="629" width="0.1538%" height="15" fill="rgb(237,133,22)" fg:x="609" fg:w="1"/><text x="93.9423%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.15%)</title><rect x="93.6923%" y="613" width="0.1538%" height="15" fill="rgb(237,156,49)" fg:x="609" fg:w="1"/><text x="93.9423%" y="623.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.15%)</title><rect x="93.6923%" y="597" width="0.1538%" height="15" fill="rgb(214,150,36)" fg:x="609" fg:w="1"/><text x="93.9423%" y="607.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.15%)</title><rect x="93.6923%" y="581" width="0.1538%" height="15" fill="rgb(254,47,34)" fg:x="609" fg:w="1"/><text x="93.9423%" y="591.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.15%)</title><rect x="93.6923%" y="565" width="0.1538%" height="15" fill="rgb(254,73,4)" fg:x="609" fg:w="1"/><text x="93.9423%" y="575.50"></text></g><g><title>_int_realloc (1 samples, 0.15%)</title><rect x="93.6923%" y="549" width="0.1538%" height="15" fill="rgb(231,75,41)" fg:x="609" fg:w="1"/><text x="93.9423%" y="559.50"></text></g><g><title>[libc.so.6] (1 samples, 0.15%)</title><rect x="93.6923%" y="533" width="0.1538%" height="15" fill="rgb(253,161,50)" fg:x="609" fg:w="1"/><text x="93.9423%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.46%)</title><rect x="93.5385%" y="821" width="0.4615%" height="15" fill="rgb(214,109,53)" fg:x="608" fg:w="3"/><text x="93.7885%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.46%)</title><rect x="93.5385%" y="805" width="0.4615%" height="15" fill="rgb(254,35,30)" fg:x="608" fg:w="3"/><text x="93.7885%" y="815.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (3 samples, 0.46%)</title><rect x="93.5385%" y="789" width="0.4615%" height="15" fill="rgb(226,169,23)" fg:x="608" fg:w="3"/><text x="93.7885%" y="799.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (3 samples, 0.46%)</title><rect x="93.5385%" y="773" width="0.4615%" height="15" fill="rgb(205,130,14)" fg:x="608" fg:w="3"/><text x="93.7885%" y="783.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (3 samples, 0.46%)</title><rect x="93.5385%" y="757" width="0.4615%" height="15" fill="rgb(235,200,16)" fg:x="608" fg:w="3"/><text x="93.7885%" y="767.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (3 samples, 0.46%)</title><rect x="93.5385%" y="741" width="0.4615%" height="15" fill="rgb(213,34,18)" fg:x="608" fg:w="3"/><text x="93.7885%" y="751.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (2 samples, 0.31%)</title><rect x="93.6923%" y="725" width="0.3077%" height="15" fill="rgb(253,35,22)" fg:x="609" fg:w="2"/><text x="93.9423%" y="735.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (2 samples, 0.31%)</title><rect x="93.6923%" y="709" width="0.3077%" height="15" fill="rgb(247,137,3)" fg:x="609" fg:w="2"/><text x="93.9423%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="93.8462%" y="693" width="0.1538%" height="15" fill="rgb(214,109,53)" fg:x="610" fg:w="1"/><text x="94.0962%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.15%)</title><rect x="93.8462%" y="677" width="0.1538%" height="15" fill="rgb(254,35,30)" fg:x="610" fg:w="1"/><text x="94.0962%" y="687.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.15%)</title><rect x="93.8462%" y="661" width="0.1538%" height="15" fill="rgb(226,169,23)" fg:x="610" fg:w="1"/><text x="94.0962%" y="671.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice::{{closure}} (1 samples, 0.15%)</title><rect x="93.8462%" y="645" width="0.1538%" height="15" fill="rgb(223,145,12)" fg:x="610" fg:w="1"/><text x="94.0962%" y="655.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.15%)</title><rect x="93.8462%" y="629" width="0.1538%" height="15" fill="rgb(213,34,18)" fg:x="610" fg:w="1"/><text x="94.0962%" y="639.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class (1 samples, 0.15%)</title><rect x="93.8462%" y="613" width="0.1538%" height="15" fill="rgb(246,38,12)" fg:x="610" fg:w="1"/><text x="94.0962%" y="623.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::compile (1 samples, 0.15%)</title><rect x="94.0000%" y="709" width="0.1538%" height="15" fill="rgb(233,39,2)" fg:x="611" fg:w="1"/><text x="94.2500%" y="719.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add_sparse (1 samples, 0.15%)</title><rect x="94.0000%" y="693" width="0.1538%" height="15" fill="rgb(233,153,44)" fg:x="611" fg:w="1"/><text x="94.2500%" y="703.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add (1 samples, 0.15%)</title><rect x="94.0000%" y="677" width="0.1538%" height="15" fill="rgb(253,91,29)" fg:x="611" fg:w="1"/><text x="94.2500%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.15%)</title><rect x="94.0000%" y="661" width="0.1538%" height="15" fill="rgb(241,229,15)" fg:x="611" fg:w="1"/><text x="94.2500%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.15%)</title><rect x="94.0000%" y="645" width="0.1538%" height="15" fill="rgb(254,103,39)" fg:x="611" fg:w="1"/><text x="94.2500%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.15%)</title><rect x="94.0000%" y="629" width="0.1538%" height="15" fill="rgb(254,53,35)" fg:x="611" fg:w="1"/><text x="94.2500%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.15%)</title><rect x="94.0000%" y="613" width="0.1538%" height="15" fill="rgb(237,133,22)" fg:x="611" fg:w="1"/><text x="94.2500%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.15%)</title><rect x="94.0000%" y="597" width="0.1538%" height="15" fill="rgb(237,156,49)" fg:x="611" fg:w="1"/><text x="94.2500%" y="607.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.15%)</title><rect x="94.0000%" y="581" width="0.1538%" height="15" fill="rgb(214,150,36)" fg:x="611" fg:w="1"/><text x="94.2500%" y="591.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.15%)</title><rect x="94.0000%" y="565" width="0.1538%" height="15" fill="rgb(254,47,34)" fg:x="611" fg:w="1"/><text x="94.2500%" y="575.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.15%)</title><rect x="94.0000%" y="549" width="0.1538%" height="15" fill="rgb(254,73,4)" fg:x="611" fg:w="1"/><text x="94.2500%" y="559.50"></text></g><g><title>_int_realloc (1 samples, 0.15%)</title><rect x="94.0000%" y="533" width="0.1538%" height="15" fill="rgb(231,75,41)" fg:x="611" fg:w="1"/><text x="94.2500%" y="543.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="94.0000%" y="517" width="0.1538%" height="15" fill="rgb(222,219,51)" fg:x="611" fg:w="1"/><text x="94.2500%" y="527.50"></text></g><g><title>malloc_consolidate (1 samples, 0.15%)</title><rect x="94.0000%" y="501" width="0.1538%" height="15" fill="rgb(228,194,39)" fg:x="611" fg:w="1"/><text x="94.2500%" y="511.50"></text></g><g><title>regex::regex::bytes::Regex::new (5 samples, 0.77%)</title><rect x="93.5385%" y="1109" width="0.7692%" height="15" fill="rgb(246,224,25)" fg:x="608" fg:w="5"/><text x="93.7885%" y="1119.50"></text></g><g><title>regex::builders::bytes::RegexBuilder::build (5 samples, 0.77%)</title><rect x="93.5385%" y="1093" width="0.7692%" height="15" fill="rgb(236,76,51)" fg:x="608" fg:w="5"/><text x="93.7885%" y="1103.50"></text></g><g><title>regex::builders::Builder::build_one_bytes (5 samples, 0.77%)</title><rect x="93.5385%" y="1077" width="0.7692%" height="15" fill="rgb(233,102,7)" fg:x="608" fg:w="5"/><text x="93.7885%" y="1087.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (5 samples, 0.77%)</title><rect x="93.5385%" y="1061" width="0.7692%" height="15" fill="rgb(212,33,22)" fg:x="608" fg:w="5"/><text x="93.7885%" y="1071.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many (5 samples, 0.77%)</title><rect x="93.5385%" y="1045" width="0.7692%" height="15" fill="rgb(236,25,32)" fg:x="608" fg:w="5"/><text x="93.7885%" y="1055.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (5 samples, 0.77%)</title><rect x="93.5385%" y="1029" width="0.7692%" height="15" fill="rgb(250,142,30)" fg:x="608" fg:w="5"/><text x="93.7885%" y="1039.50"></text></g><g><title>regex_automata::meta::strategy::new (5 samples, 0.77%)</title><rect x="93.5385%" y="1013" width="0.7692%" height="15" fill="rgb(243,171,22)" fg:x="608" fg:w="5"/><text x="93.7885%" y="1023.50"></text></g><g><title>regex_automata::meta::strategy::Core::new (5 samples, 0.77%)</title><rect x="93.5385%" y="997" width="0.7692%" height="15" fill="rgb(222,69,27)" fg:x="608" fg:w="5"/><text x="93.7885%" y="1007.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (5 samples, 0.77%)</title><rect x="93.5385%" y="981" width="0.7692%" height="15" fill="rgb(226,42,16)" fg:x="608" fg:w="5"/><text x="93.7885%" y="991.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (5 samples, 0.77%)</title><rect x="93.5385%" y="965" width="0.7692%" height="15" fill="rgb(242,129,17)" fg:x="608" fg:w="5"/><text x="93.7885%" y="975.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (5 samples, 0.77%)</title><rect x="93.5385%" y="949" width="0.7692%" height="15" fill="rgb(247,137,3)" fg:x="608" fg:w="5"/><text x="93.7885%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.77%)</title><rect x="93.5385%" y="933" width="0.7692%" height="15" fill="rgb(214,109,53)" fg:x="608" fg:w="5"/><text x="93.7885%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.77%)</title><rect x="93.5385%" y="917" width="0.7692%" height="15" fill="rgb(254,35,30)" fg:x="608" fg:w="5"/><text x="93.7885%" y="927.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (5 samples, 0.77%)</title><rect x="93.5385%" y="901" width="0.7692%" height="15" fill="rgb(226,169,23)" fg:x="608" fg:w="5"/><text x="93.7885%" y="911.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile::{{closure}} (5 samples, 0.77%)</title><rect x="93.5385%" y="885" width="0.7692%" height="15" fill="rgb(218,216,52)" fg:x="608" fg:w="5"/><text x="93.7885%" y="895.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (5 samples, 0.77%)</title><rect x="93.5385%" y="869" width="0.7692%" height="15" fill="rgb(235,200,16)" fg:x="608" fg:w="5"/><text x="93.7885%" y="879.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (5 samples, 0.77%)</title><rect x="93.5385%" y="853" width="0.7692%" height="15" fill="rgb(213,34,18)" fg:x="608" fg:w="5"/><text x="93.7885%" y="863.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (5 samples, 0.77%)</title><rect x="93.5385%" y="837" width="0.7692%" height="15" fill="rgb(210,105,37)" fg:x="608" fg:w="5"/><text x="93.7885%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (2 samples, 0.31%)</title><rect x="94.0000%" y="821" width="0.3077%" height="15" fill="rgb(222,94,14)" fg:x="611" fg:w="2"/><text x="94.2500%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.31%)</title><rect x="94.0000%" y="805" width="0.3077%" height="15" fill="rgb(254,35,30)" fg:x="611" fg:w="2"/><text x="94.2500%" y="815.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.31%)</title><rect x="94.0000%" y="789" width="0.3077%" height="15" fill="rgb(226,169,23)" fg:x="611" fg:w="2"/><text x="94.2500%" y="799.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (2 samples, 0.31%)</title><rect x="94.0000%" y="773" width="0.3077%" height="15" fill="rgb(205,130,14)" fg:x="611" fg:w="2"/><text x="94.2500%" y="783.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (2 samples, 0.31%)</title><rect x="94.0000%" y="757" width="0.3077%" height="15" fill="rgb(235,200,16)" fg:x="611" fg:w="2"/><text x="94.2500%" y="767.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (2 samples, 0.31%)</title><rect x="94.0000%" y="741" width="0.3077%" height="15" fill="rgb(213,34,18)" fg:x="611" fg:w="2"/><text x="94.2500%" y="751.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (2 samples, 0.31%)</title><rect x="94.0000%" y="725" width="0.3077%" height="15" fill="rgb(253,35,22)" fg:x="611" fg:w="2"/><text x="94.2500%" y="735.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (1 samples, 0.15%)</title><rect x="94.1538%" y="709" width="0.1538%" height="15" fill="rgb(247,137,3)" fg:x="612" fg:w="1"/><text x="94.4038%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="94.1538%" y="693" width="0.1538%" height="15" fill="rgb(214,109,53)" fg:x="612" fg:w="1"/><text x="94.4038%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.15%)</title><rect x="94.1538%" y="677" width="0.1538%" height="15" fill="rgb(254,35,30)" fg:x="612" fg:w="1"/><text x="94.4038%" y="687.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.15%)</title><rect x="94.1538%" y="661" width="0.1538%" height="15" fill="rgb(226,169,23)" fg:x="612" fg:w="1"/><text x="94.4038%" y="671.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice::{{closure}} (1 samples, 0.15%)</title><rect x="94.1538%" y="645" width="0.1538%" height="15" fill="rgb(223,145,12)" fg:x="612" fg:w="1"/><text x="94.4038%" y="655.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.15%)</title><rect x="94.1538%" y="629" width="0.1538%" height="15" fill="rgb(213,34,18)" fg:x="612" fg:w="1"/><text x="94.4038%" y="639.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class (1 samples, 0.15%)</title><rect x="94.1538%" y="613" width="0.1538%" height="15" fill="rgb(246,38,12)" fg:x="612" fg:w="1"/><text x="94.4038%" y="623.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class_reverse_with_suffix (1 samples, 0.15%)</title><rect x="94.1538%" y="597" width="0.1538%" height="15" fill="rgb(227,194,49)" fg:x="612" fg:w="1"/><text x="94.4038%" y="607.50"></text></g><g><title>regex_syntax::utf8::Utf8Sequence::as_slice (1 samples, 0.15%)</title><rect x="94.1538%" y="581" width="0.1538%" height="15" fill="rgb(221,115,14)" fg:x="612" fg:w="1"/><text x="94.4038%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.62%)</title><rect x="94.3077%" y="405" width="0.6154%" height="15" fill="rgb(210,204,4)" fg:x="613" fg:w="4"/><text x="94.5577%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.77%)</title><rect x="94.3077%" y="421" width="0.7692%" height="15" fill="rgb(210,204,4)" fg:x="613" fg:w="5"/><text x="94.5577%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 1.08%)</title><rect x="94.3077%" y="517" width="1.0769%" height="15" fill="rgb(210,204,4)" fg:x="613" fg:w="7"/><text x="94.5577%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 1.08%)</title><rect x="94.3077%" y="501" width="1.0769%" height="15" fill="rgb(210,204,4)" fg:x="613" fg:w="7"/><text x="94.5577%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 1.08%)</title><rect x="94.3077%" y="485" width="1.0769%" height="15" fill="rgb(210,204,4)" fg:x="613" fg:w="7"/><text x="94.5577%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 1.08%)</title><rect x="94.3077%" y="469" width="1.0769%" height="15" fill="rgb(210,204,4)" fg:x="613" fg:w="7"/><text x="94.5577%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 1.08%)</title><rect x="94.3077%" y="453" width="1.0769%" height="15" fill="rgb(210,204,4)" fg:x="613" fg:w="7"/><text x="94.5577%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 1.08%)</title><rect x="94.3077%" y="437" width="1.0769%" height="15" fill="rgb(210,204,4)" fg:x="613" fg:w="7"/><text x="94.5577%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 1.23%)</title><rect x="94.3077%" y="533" width="1.2308%" height="15" fill="rgb(210,204,4)" fg:x="613" fg:w="8"/><text x="94.5577%" y="543.50"></text></g><g><title>core::ptr::write (10 samples, 1.54%)</title><rect x="94.3077%" y="549" width="1.5385%" height="15" fill="rgb(209,143,44)" fg:x="613" fg:w="10"/><text x="94.5577%" y="559.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.46%)</title><rect x="95.8462%" y="549" width="0.4615%" height="15" fill="rgb(246,165,53)" fg:x="623" fg:w="3"/><text x="96.0962%" y="559.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.46%)</title><rect x="95.8462%" y="533" width="0.4615%" height="15" fill="rgb(226,134,37)" fg:x="623" fg:w="3"/><text x="96.0962%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (3 samples, 0.46%)</title><rect x="95.8462%" y="517" width="0.4615%" height="15" fill="rgb(232,29,30)" fg:x="623" fg:w="3"/><text x="96.0962%" y="527.50"></text></g><g><title>__memmove_avx512_unaligned_erms (4 samples, 0.62%)</title><rect x="96.3077%" y="421" width="0.6154%" height="15" fill="rgb(217,126,36)" fg:x="626" fg:w="4"/><text x="96.5577%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (6 samples, 0.92%)</title><rect x="96.3077%" y="453" width="0.9231%" height="15" fill="rgb(222,107,1)" fg:x="626" fg:w="6"/><text x="96.5577%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.92%)</title><rect x="96.3077%" y="437" width="0.9231%" height="15" fill="rgb(214,20,35)" fg:x="626" fg:w="6"/><text x="96.5577%" y="447.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (20 samples, 3.08%)</title><rect x="94.3077%" y="757" width="3.0769%" height="15" fill="rgb(210,105,37)" fg:x="613" fg:w="20"/><text x="94.5577%" y="767.50">reg..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 3.08%)</title><rect x="94.3077%" y="741" width="3.0769%" height="15" fill="rgb(214,109,53)" fg:x="613" fg:w="20"/><text x="94.5577%" y="751.50">&lt;co..</text></g><g><title>core::option::Option&lt;T&gt;::map (20 samples, 3.08%)</title><rect x="94.3077%" y="725" width="3.0769%" height="15" fill="rgb(254,35,30)" fg:x="613" fg:w="20"/><text x="94.5577%" y="735.50">cor..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (20 samples, 3.08%)</title><rect x="94.3077%" y="709" width="3.0769%" height="15" fill="rgb(226,169,23)" fg:x="613" fg:w="20"/><text x="94.5577%" y="719.50">cor..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (20 samples, 3.08%)</title><rect x="94.3077%" y="693" width="3.0769%" height="15" fill="rgb(205,130,14)" fg:x="613" fg:w="20"/><text x="94.5577%" y="703.50">reg..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (20 samples, 3.08%)</title><rect x="94.3077%" y="677" width="3.0769%" height="15" fill="rgb(213,34,18)" fg:x="613" fg:w="20"/><text x="94.5577%" y="687.50">reg..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class (20 samples, 3.08%)</title><rect x="94.3077%" y="661" width="3.0769%" height="15" fill="rgb(246,38,12)" fg:x="613" fg:w="20"/><text x="94.5577%" y="671.50">reg..</text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::new (20 samples, 3.08%)</title><rect x="94.3077%" y="645" width="3.0769%" height="15" fill="rgb(211,200,20)" fg:x="613" fg:w="20"/><text x="94.5577%" y="655.50">reg..</text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8State::clear (20 samples, 3.08%)</title><rect x="94.3077%" y="629" width="3.0769%" height="15" fill="rgb(241,127,0)" fg:x="613" fg:w="20"/><text x="94.5577%" y="639.50">reg..</text></g><g><title>regex_automata::nfa::thompson::map::Utf8BoundedMap::clear (20 samples, 3.08%)</title><rect x="94.3077%" y="613" width="3.0769%" height="15" fill="rgb(207,86,25)" fg:x="613" fg:w="20"/><text x="94.5577%" y="623.50">reg..</text></g><g><title>alloc::vec::from_elem (20 samples, 3.08%)</title><rect x="94.3077%" y="597" width="3.0769%" height="15" fill="rgb(208,109,54)" fg:x="613" fg:w="20"/><text x="94.5577%" y="607.50">all..</text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (20 samples, 3.08%)</title><rect x="94.3077%" y="581" width="3.0769%" height="15" fill="rgb(228,177,24)" fg:x="613" fg:w="20"/><text x="94.5577%" y="591.50">&lt;T ..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (20 samples, 3.08%)</title><rect x="94.3077%" y="565" width="3.0769%" height="15" fill="rgb(216,52,5)" fg:x="613" fg:w="20"/><text x="94.5577%" y="575.50">all..</text></g><g><title>&lt;alloc::vec::ExtendElement&lt;T&gt; as alloc::vec::ExtendWith&lt;T&gt;&gt;::next (7 samples, 1.08%)</title><rect x="96.3077%" y="549" width="1.0769%" height="15" fill="rgb(216,123,15)" fg:x="626" fg:w="7"/><text x="96.5577%" y="559.50"></text></g><g><title>&lt;regex_automata::nfa::thompson::map::Utf8BoundedEntry as core::clone::Clone&gt;::clone (7 samples, 1.08%)</title><rect x="96.3077%" y="533" width="1.0769%" height="15" fill="rgb(211,18,41)" fg:x="626" fg:w="7"/><text x="96.5577%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 1.08%)</title><rect x="96.3077%" y="517" width="1.0769%" height="15" fill="rgb(239,104,10)" fg:x="626" fg:w="7"/><text x="96.5577%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7 samples, 1.08%)</title><rect x="96.3077%" y="501" width="1.0769%" height="15" fill="rgb(229,121,46)" fg:x="626" fg:w="7"/><text x="96.5577%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (7 samples, 1.08%)</title><rect x="96.3077%" y="485" width="1.0769%" height="15" fill="rgb(221,172,50)" fg:x="626" fg:w="7"/><text x="96.5577%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7 samples, 1.08%)</title><rect x="96.3077%" y="469" width="1.0769%" height="15" fill="rgb(216,42,52)" fg:x="626" fg:w="7"/><text x="96.5577%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.15%)</title><rect x="97.2308%" y="453" width="0.1538%" height="15" fill="rgb(249,207,12)" fg:x="632" fg:w="1"/><text x="97.4808%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.15%)</title><rect x="97.2308%" y="437" width="0.1538%" height="15" fill="rgb(224,194,14)" fg:x="632" fg:w="1"/><text x="97.4808%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.15%)</title><rect x="97.2308%" y="421" width="0.1538%" height="15" fill="rgb(227,204,5)" fg:x="632" fg:w="1"/><text x="97.4808%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.15%)</title><rect x="97.3846%" y="549" width="0.1538%" height="15" fill="rgb(249,207,12)" fg:x="633" fg:w="1"/><text x="97.6346%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.15%)</title><rect x="97.3846%" y="533" width="0.1538%" height="15" fill="rgb(224,194,14)" fg:x="633" fg:w="1"/><text x="97.6346%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.15%)</title><rect x="97.3846%" y="517" width="0.1538%" height="15" fill="rgb(227,204,5)" fg:x="633" fg:w="1"/><text x="97.6346%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.15%)</title><rect x="97.3846%" y="501" width="0.1538%" height="15" fill="rgb(231,114,21)" fg:x="633" fg:w="1"/><text x="97.6346%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.15%)</title><rect x="97.3846%" y="485" width="0.1538%" height="15" fill="rgb(238,209,2)" fg:x="633" fg:w="1"/><text x="97.6346%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.15%)</title><rect x="97.3846%" y="469" width="0.1538%" height="15" fill="rgb(253,135,41)" fg:x="633" fg:w="1"/><text x="97.6346%" y="479.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="97.3846%" y="453" width="0.1538%" height="15" fill="rgb(206,112,53)" fg:x="633" fg:w="1"/><text x="97.6346%" y="463.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="97.3846%" y="437" width="0.1538%" height="15" fill="rgb(222,219,51)" fg:x="633" fg:w="1"/><text x="97.6346%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.77%)</title><rect x="97.5385%" y="469" width="0.7692%" height="15" fill="rgb(210,204,4)" fg:x="634" fg:w="5"/><text x="97.7885%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.77%)</title><rect x="97.5385%" y="453" width="0.7692%" height="15" fill="rgb(210,204,4)" fg:x="634" fg:w="5"/><text x="97.7885%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.77%)</title><rect x="97.5385%" y="437" width="0.7692%" height="15" fill="rgb(210,204,4)" fg:x="634" fg:w="5"/><text x="97.7885%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.77%)</title><rect x="97.5385%" y="421" width="0.7692%" height="15" fill="rgb(210,204,4)" fg:x="634" fg:w="5"/><text x="97.7885%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.77%)</title><rect x="97.5385%" y="405" width="0.7692%" height="15" fill="rgb(210,204,4)" fg:x="634" fg:w="5"/><text x="97.7885%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.77%)</title><rect x="97.5385%" y="389" width="0.7692%" height="15" fill="rgb(210,204,4)" fg:x="634" fg:w="5"/><text x="97.7885%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 1.08%)</title><rect x="97.5385%" y="517" width="1.0769%" height="15" fill="rgb(210,204,4)" fg:x="634" fg:w="7"/><text x="97.7885%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 1.08%)</title><rect x="97.5385%" y="501" width="1.0769%" height="15" fill="rgb(210,204,4)" fg:x="634" fg:w="7"/><text x="97.7885%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 1.08%)</title><rect x="97.5385%" y="485" width="1.0769%" height="15" fill="rgb(210,204,4)" fg:x="634" fg:w="7"/><text x="97.7885%" y="495.50"></text></g><g><title>core::ptr::write (8 samples, 1.23%)</title><rect x="97.5385%" y="533" width="1.2308%" height="15" fill="rgb(209,143,44)" fg:x="634" fg:w="8"/><text x="97.7885%" y="543.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.15%)</title><rect x="98.7692%" y="533" width="0.1538%" height="15" fill="rgb(246,165,53)" fg:x="642" fg:w="1"/><text x="99.0192%" y="543.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.15%)</title><rect x="98.7692%" y="517" width="0.1538%" height="15" fill="rgb(226,134,37)" fg:x="642" fg:w="1"/><text x="99.0192%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.15%)</title><rect x="98.7692%" y="501" width="0.1538%" height="15" fill="rgb(232,29,30)" fg:x="642" fg:w="1"/><text x="99.0192%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 5.08%)</title><rect x="94.3077%" y="853" width="5.0769%" height="15" fill="rgb(214,109,53)" fg:x="613" fg:w="33"/><text x="94.5577%" y="863.50">&lt;core:..</text></g><g><title>core::option::Option&lt;T&gt;::map (33 samples, 5.08%)</title><rect x="94.3077%" y="837" width="5.0769%" height="15" fill="rgb(254,35,30)" fg:x="613" fg:w="33"/><text x="94.5577%" y="847.50">core::..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (33 samples, 5.08%)</title><rect x="94.3077%" y="821" width="5.0769%" height="15" fill="rgb(226,169,23)" fg:x="613" fg:w="33"/><text x="94.5577%" y="831.50">core::..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (33 samples, 5.08%)</title><rect x="94.3077%" y="805" width="5.0769%" height="15" fill="rgb(205,130,14)" fg:x="613" fg:w="33"/><text x="94.5577%" y="815.50">regex_..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (33 samples, 5.08%)</title><rect x="94.3077%" y="789" width="5.0769%" height="15" fill="rgb(235,200,16)" fg:x="613" fg:w="33"/><text x="94.5577%" y="799.50">regex_..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (33 samples, 5.08%)</title><rect x="94.3077%" y="773" width="5.0769%" height="15" fill="rgb(213,34,18)" fg:x="613" fg:w="33"/><text x="94.5577%" y="783.50">regex_..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (13 samples, 2.00%)</title><rect x="97.3846%" y="757" width="2.0000%" height="15" fill="rgb(253,35,22)" fg:x="633" fg:w="13"/><text x="97.6346%" y="767.50">r..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (13 samples, 2.00%)</title><rect x="97.3846%" y="741" width="2.0000%" height="15" fill="rgb(247,137,3)" fg:x="633" fg:w="13"/><text x="97.6346%" y="751.50">r..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 2.00%)</title><rect x="97.3846%" y="725" width="2.0000%" height="15" fill="rgb(214,109,53)" fg:x="633" fg:w="13"/><text x="97.6346%" y="735.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::map (13 samples, 2.00%)</title><rect x="97.3846%" y="709" width="2.0000%" height="15" fill="rgb(254,35,30)" fg:x="633" fg:w="13"/><text x="97.6346%" y="719.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (13 samples, 2.00%)</title><rect x="97.3846%" y="693" width="2.0000%" height="15" fill="rgb(226,169,23)" fg:x="633" fg:w="13"/><text x="97.6346%" y="703.50">c..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice::{{closure}} (13 samples, 2.00%)</title><rect x="97.3846%" y="677" width="2.0000%" height="15" fill="rgb(223,145,12)" fg:x="633" fg:w="13"/><text x="97.6346%" y="687.50">r..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (13 samples, 2.00%)</title><rect x="97.3846%" y="661" width="2.0000%" height="15" fill="rgb(213,34,18)" fg:x="633" fg:w="13"/><text x="97.6346%" y="671.50">r..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class (13 samples, 2.00%)</title><rect x="97.3846%" y="645" width="2.0000%" height="15" fill="rgb(246,38,12)" fg:x="633" fg:w="13"/><text x="97.6346%" y="655.50">r..</text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::new (13 samples, 2.00%)</title><rect x="97.3846%" y="629" width="2.0000%" height="15" fill="rgb(211,200,20)" fg:x="633" fg:w="13"/><text x="97.6346%" y="639.50">r..</text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8State::clear (13 samples, 2.00%)</title><rect x="97.3846%" y="613" width="2.0000%" height="15" fill="rgb(241,127,0)" fg:x="633" fg:w="13"/><text x="97.6346%" y="623.50">r..</text></g><g><title>regex_automata::nfa::thompson::map::Utf8BoundedMap::clear (13 samples, 2.00%)</title><rect x="97.3846%" y="597" width="2.0000%" height="15" fill="rgb(207,86,25)" fg:x="633" fg:w="13"/><text x="97.6346%" y="607.50">r..</text></g><g><title>alloc::vec::from_elem (13 samples, 2.00%)</title><rect x="97.3846%" y="581" width="2.0000%" height="15" fill="rgb(208,109,54)" fg:x="633" fg:w="13"/><text x="97.6346%" y="591.50">a..</text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (13 samples, 2.00%)</title><rect x="97.3846%" y="565" width="2.0000%" height="15" fill="rgb(228,177,24)" fg:x="633" fg:w="13"/><text x="97.6346%" y="575.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (12 samples, 1.85%)</title><rect x="97.5385%" y="549" width="1.8462%" height="15" fill="rgb(216,52,5)" fg:x="634" fg:w="12"/><text x="97.7885%" y="559.50">a..</text></g><g><title>&lt;alloc::vec::ExtendElement&lt;T&gt; as alloc::vec::ExtendWith&lt;T&gt;&gt;::next (3 samples, 0.46%)</title><rect x="98.9231%" y="533" width="0.4615%" height="15" fill="rgb(216,123,15)" fg:x="643" fg:w="3"/><text x="99.1731%" y="543.50"></text></g><g><title>&lt;regex_automata::nfa::thompson::map::Utf8BoundedEntry as core::clone::Clone&gt;::clone (3 samples, 0.46%)</title><rect x="98.9231%" y="517" width="0.4615%" height="15" fill="rgb(211,18,41)" fg:x="643" fg:w="3"/><text x="99.1731%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.46%)</title><rect x="98.9231%" y="501" width="0.4615%" height="15" fill="rgb(239,104,10)" fg:x="643" fg:w="3"/><text x="99.1731%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.46%)</title><rect x="98.9231%" y="485" width="0.4615%" height="15" fill="rgb(229,121,46)" fg:x="643" fg:w="3"/><text x="99.1731%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.46%)</title><rect x="98.9231%" y="469" width="0.4615%" height="15" fill="rgb(221,172,50)" fg:x="643" fg:w="3"/><text x="99.1731%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.46%)</title><rect x="98.9231%" y="453" width="0.4615%" height="15" fill="rgb(216,42,52)" fg:x="643" fg:w="3"/><text x="99.1731%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3 samples, 0.46%)</title><rect x="98.9231%" y="437" width="0.4615%" height="15" fill="rgb(222,107,1)" fg:x="643" fg:w="3"/><text x="99.1731%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.46%)</title><rect x="98.9231%" y="421" width="0.4615%" height="15" fill="rgb(214,20,35)" fg:x="643" fg:w="3"/><text x="99.1731%" y="431.50"></text></g><g><title>__memmove_avx512_unaligned_erms (3 samples, 0.46%)</title><rect x="98.9231%" y="405" width="0.4615%" height="15" fill="rgb(217,126,36)" fg:x="643" fg:w="3"/><text x="99.1731%" y="415.50"></text></g><g><title>regex_automata::meta::strategy::Core::new (34 samples, 5.23%)</title><rect x="94.3077%" y="1029" width="5.2308%" height="15" fill="rgb(222,69,27)" fg:x="613" fg:w="34"/><text x="94.5577%" y="1039.50">regex_..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (34 samples, 5.23%)</title><rect x="94.3077%" y="1013" width="5.2308%" height="15" fill="rgb(226,42,16)" fg:x="613" fg:w="34"/><text x="94.5577%" y="1023.50">regex_..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (34 samples, 5.23%)</title><rect x="94.3077%" y="997" width="5.2308%" height="15" fill="rgb(242,129,17)" fg:x="613" fg:w="34"/><text x="94.5577%" y="1007.50">regex_..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (34 samples, 5.23%)</title><rect x="94.3077%" y="981" width="5.2308%" height="15" fill="rgb(247,137,3)" fg:x="613" fg:w="34"/><text x="94.5577%" y="991.50">regex_..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 5.23%)</title><rect x="94.3077%" y="965" width="5.2308%" height="15" fill="rgb(214,109,53)" fg:x="613" fg:w="34"/><text x="94.5577%" y="975.50">&lt;core:..</text></g><g><title>core::option::Option&lt;T&gt;::map (34 samples, 5.23%)</title><rect x="94.3077%" y="949" width="5.2308%" height="15" fill="rgb(254,35,30)" fg:x="613" fg:w="34"/><text x="94.5577%" y="959.50">core::..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (34 samples, 5.23%)</title><rect x="94.3077%" y="933" width="5.2308%" height="15" fill="rgb(226,169,23)" fg:x="613" fg:w="34"/><text x="94.5577%" y="943.50">core::..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile::{{closure}} (34 samples, 5.23%)</title><rect x="94.3077%" y="917" width="5.2308%" height="15" fill="rgb(218,216,52)" fg:x="613" fg:w="34"/><text x="94.5577%" y="927.50">regex_..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (34 samples, 5.23%)</title><rect x="94.3077%" y="901" width="5.2308%" height="15" fill="rgb(235,200,16)" fg:x="613" fg:w="34"/><text x="94.5577%" y="911.50">regex_..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (34 samples, 5.23%)</title><rect x="94.3077%" y="885" width="5.2308%" height="15" fill="rgb(213,34,18)" fg:x="613" fg:w="34"/><text x="94.5577%" y="895.50">regex_..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (34 samples, 5.23%)</title><rect x="94.3077%" y="869" width="5.2308%" height="15" fill="rgb(210,105,37)" fg:x="613" fg:w="34"/><text x="94.5577%" y="879.50">regex_..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 0.15%)</title><rect x="99.3846%" y="853" width="0.1538%" height="15" fill="rgb(222,94,14)" fg:x="646" fg:w="1"/><text x="99.6346%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.15%)</title><rect x="99.3846%" y="837" width="0.1538%" height="15" fill="rgb(254,35,30)" fg:x="646" fg:w="1"/><text x="99.6346%" y="847.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.15%)</title><rect x="99.3846%" y="821" width="0.1538%" height="15" fill="rgb(226,169,23)" fg:x="646" fg:w="1"/><text x="99.6346%" y="831.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (1 samples, 0.15%)</title><rect x="99.3846%" y="805" width="0.1538%" height="15" fill="rgb(205,130,14)" fg:x="646" fg:w="1"/><text x="99.6346%" y="815.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 0.15%)</title><rect x="99.3846%" y="789" width="0.1538%" height="15" fill="rgb(235,200,16)" fg:x="646" fg:w="1"/><text x="99.6346%" y="799.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.15%)</title><rect x="99.3846%" y="773" width="0.1538%" height="15" fill="rgb(213,34,18)" fg:x="646" fg:w="1"/><text x="99.6346%" y="783.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (1 samples, 0.15%)</title><rect x="99.3846%" y="757" width="0.1538%" height="15" fill="rgb(253,35,22)" fg:x="646" fg:w="1"/><text x="99.6346%" y="767.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (1 samples, 0.15%)</title><rect x="99.3846%" y="741" width="0.1538%" height="15" fill="rgb(247,137,3)" fg:x="646" fg:w="1"/><text x="99.6346%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="99.3846%" y="725" width="0.1538%" height="15" fill="rgb(214,109,53)" fg:x="646" fg:w="1"/><text x="99.6346%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.15%)</title><rect x="99.3846%" y="709" width="0.1538%" height="15" fill="rgb(254,35,30)" fg:x="646" fg:w="1"/><text x="99.6346%" y="719.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.15%)</title><rect x="99.3846%" y="693" width="0.1538%" height="15" fill="rgb(226,169,23)" fg:x="646" fg:w="1"/><text x="99.6346%" y="703.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice::{{closure}} (1 samples, 0.15%)</title><rect x="99.3846%" y="677" width="0.1538%" height="15" fill="rgb(223,145,12)" fg:x="646" fg:w="1"/><text x="99.6346%" y="687.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.15%)</title><rect x="99.3846%" y="661" width="0.1538%" height="15" fill="rgb(213,34,18)" fg:x="646" fg:w="1"/><text x="99.6346%" y="671.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class (1 samples, 0.15%)</title><rect x="99.3846%" y="645" width="0.1538%" height="15" fill="rgb(246,38,12)" fg:x="646" fg:w="1"/><text x="99.6346%" y="655.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class_reverse_with_suffix (1 samples, 0.15%)</title><rect x="99.3846%" y="629" width="0.1538%" height="15" fill="rgb(227,194,49)" fg:x="646" fg:w="1"/><text x="99.6346%" y="639.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_range (1 samples, 0.15%)</title><rect x="99.3846%" y="613" width="0.1538%" height="15" fill="rgb(209,116,30)" fg:x="646" fg:w="1"/><text x="99.6346%" y="623.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::add_range (1 samples, 0.15%)</title><rect x="99.3846%" y="597" width="0.1538%" height="15" fill="rgb(227,38,31)" fg:x="646" fg:w="1"/><text x="99.6346%" y="607.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add_range (1 samples, 0.15%)</title><rect x="99.3846%" y="581" width="0.1538%" height="15" fill="rgb(245,83,34)" fg:x="646" fg:w="1"/><text x="99.6346%" y="591.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add (1 samples, 0.15%)</title><rect x="99.3846%" y="565" width="0.1538%" height="15" fill="rgb(253,91,29)" fg:x="646" fg:w="1"/><text x="99.6346%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.15%)</title><rect x="99.3846%" y="549" width="0.1538%" height="15" fill="rgb(241,229,15)" fg:x="646" fg:w="1"/><text x="99.6346%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.15%)</title><rect x="99.3846%" y="533" width="0.1538%" height="15" fill="rgb(254,103,39)" fg:x="646" fg:w="1"/><text x="99.6346%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.15%)</title><rect x="99.3846%" y="517" width="0.1538%" height="15" fill="rgb(254,53,35)" fg:x="646" fg:w="1"/><text x="99.6346%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.15%)</title><rect x="99.3846%" y="501" width="0.1538%" height="15" fill="rgb(237,133,22)" fg:x="646" fg:w="1"/><text x="99.6346%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.15%)</title><rect x="99.3846%" y="485" width="0.1538%" height="15" fill="rgb(237,156,49)" fg:x="646" fg:w="1"/><text x="99.6346%" y="495.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.15%)</title><rect x="99.3846%" y="469" width="0.1538%" height="15" fill="rgb(214,150,36)" fg:x="646" fg:w="1"/><text x="99.6346%" y="479.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.15%)</title><rect x="99.3846%" y="453" width="0.1538%" height="15" fill="rgb(254,47,34)" fg:x="646" fg:w="1"/><text x="99.6346%" y="463.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.15%)</title><rect x="99.3846%" y="437" width="0.1538%" height="15" fill="rgb(254,73,4)" fg:x="646" fg:w="1"/><text x="99.6346%" y="447.50"></text></g><g><title>_int_realloc (1 samples, 0.15%)</title><rect x="99.3846%" y="421" width="0.1538%" height="15" fill="rgb(231,75,41)" fg:x="646" fg:w="1"/><text x="99.6346%" y="431.50"></text></g><g><title>aho_corasick::util::alphabet::ByteClasses::get (1 samples, 0.15%)</title><rect x="99.5385%" y="885" width="0.1538%" height="15" fill="rgb(251,98,47)" fg:x="647" fg:w="1"/><text x="99.7885%" y="895.50"></text></g><g><title>aho_corasick::util::primitives::StateID::as_usize (1 samples, 0.15%)</title><rect x="99.6923%" y="869" width="0.1538%" height="15" fill="rgb(237,160,26)" fg:x="648" fg:w="1"/><text x="99.9423%" y="879.50"></text></g><g><title>aho_corasick::util::primitives::SmallIndex::as_usize (1 samples, 0.15%)</title><rect x="99.6923%" y="853" width="0.1538%" height="15" fill="rgb(240,39,32)" fg:x="648" fg:w="1"/><text x="99.9423%" y="863.50"></text></g><g><title>all (650 samples, 100%)</title><rect x="0.0000%" y="1157" width="100.0000%" height="15" fill="rgb(206,183,37)" fg:x="0" fg:w="650"/><text x="0.2500%" y="1167.50"></text></g><g><title>gen-1000-3-foob (536 samples, 82.46%)</title><rect x="17.5385%" y="1141" width="82.4615%" height="15" fill="rgb(214,224,18)" fg:x="114" fg:w="536"/><text x="17.7885%" y="1151.50">gen-1000-3-foob</text></g><g><title>[unknown] (308 samples, 47.38%)</title><rect x="52.6154%" y="1125" width="47.3846%" height="15" fill="rgb(227,28,50)" fg:x="342" fg:w="308"/><text x="52.8654%" y="1135.50">[unknown]</text></g><g><title>regex::builders::Builder::build_one_bytes (37 samples, 5.69%)</title><rect x="94.3077%" y="1109" width="5.6923%" height="15" fill="rgb(233,102,7)" fg:x="613" fg:w="37"/><text x="94.5577%" y="1119.50">regex::..</text></g><g><title>regex_automata::meta::regex::Builder::build (37 samples, 5.69%)</title><rect x="94.3077%" y="1093" width="5.6923%" height="15" fill="rgb(212,33,22)" fg:x="613" fg:w="37"/><text x="94.5577%" y="1103.50">regex_a..</text></g><g><title>regex_automata::meta::regex::Builder::build_many (37 samples, 5.69%)</title><rect x="94.3077%" y="1077" width="5.6923%" height="15" fill="rgb(236,25,32)" fg:x="613" fg:w="37"/><text x="94.5577%" y="1087.50">regex_a..</text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (37 samples, 5.69%)</title><rect x="94.3077%" y="1061" width="5.6923%" height="15" fill="rgb(250,142,30)" fg:x="613" fg:w="37"/><text x="94.5577%" y="1071.50">regex_a..</text></g><g><title>regex_automata::meta::strategy::new (37 samples, 5.69%)</title><rect x="94.3077%" y="1045" width="5.6923%" height="15" fill="rgb(243,171,22)" fg:x="613" fg:w="37"/><text x="94.5577%" y="1055.50">regex_a..</text></g><g><title>core::option::Option&lt;T&gt;::and_then (3 samples, 0.46%)</title><rect x="99.5385%" y="1029" width="0.4615%" height="15" fill="rgb(225,8,7)" fg:x="647" fg:w="3"/><text x="99.7885%" y="1039.50"></text></g><g><title>regex_automata::meta::strategy::new::{{closure}} (3 samples, 0.46%)</title><rect x="99.5385%" y="1013" width="0.4615%" height="15" fill="rgb(238,100,15)" fg:x="647" fg:w="3"/><text x="99.7885%" y="1023.50"></text></g><g><title>regex_automata::util::prefilter::Prefilter::new (3 samples, 0.46%)</title><rect x="99.5385%" y="997" width="0.4615%" height="15" fill="rgb(227,199,27)" fg:x="647" fg:w="3"/><text x="99.7885%" y="1007.50"></text></g><g><title>regex_automata::util::prefilter::Choice::new (3 samples, 0.46%)</title><rect x="99.5385%" y="981" width="0.4615%" height="15" fill="rgb(243,64,33)" fg:x="647" fg:w="3"/><text x="99.7885%" y="991.50"></text></g><g><title>regex_automata::util::prefilter::teddy::Teddy::new (3 samples, 0.46%)</title><rect x="99.5385%" y="965" width="0.4615%" height="15" fill="rgb(207,155,0)" fg:x="647" fg:w="3"/><text x="99.7885%" y="975.50"></text></g><g><title>aho_corasick::dfa::Builder::build (3 samples, 0.46%)</title><rect x="99.5385%" y="949" width="0.4615%" height="15" fill="rgb(212,91,25)" fg:x="647" fg:w="3"/><text x="99.7885%" y="959.50"></text></g><g><title>aho_corasick::dfa::Builder::build_from_noncontiguous (3 samples, 0.46%)</title><rect x="99.5385%" y="933" width="0.4615%" height="15" fill="rgb(231,220,22)" fg:x="647" fg:w="3"/><text x="99.7885%" y="943.50"></text></g><g><title>aho_corasick::dfa::Builder::finish_build_one_start (3 samples, 0.46%)</title><rect x="99.5385%" y="917" width="0.4615%" height="15" fill="rgb(242,31,54)" fg:x="647" fg:w="3"/><text x="99.7885%" y="927.50"></text></g><g><title>aho_corasick::dfa::sparse_iter (3 samples, 0.46%)</title><rect x="99.5385%" y="901" width="0.4615%" height="15" fill="rgb(223,225,36)" fg:x="647" fg:w="3"/><text x="99.7885%" y="911.50"></text></g><g><title>aho_corasick::dfa::Builder::finish_build_one_start::{{closure}} (2 samples, 0.31%)</title><rect x="99.6923%" y="885" width="0.3077%" height="15" fill="rgb(251,205,26)" fg:x="648" fg:w="2"/><text x="99.9423%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.15%)</title><rect x="99.8462%" y="869" width="0.1538%" height="15" fill="rgb(218,6,47)" fg:x="649" fg:w="1"/><text x="100.0962%" y="879.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.15%)</title><rect x="99.8462%" y="853" width="0.1538%" height="15" fill="rgb(228,30,25)" fg:x="649" fg:w="1"/><text x="100.0962%" y="863.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.15%)</title><rect x="99.8462%" y="837" width="0.1538%" height="15" fill="rgb(215,184,34)" fg:x="649" fg:w="1"/><text x="100.0962%" y="847.50"></text></g></svg></svg>