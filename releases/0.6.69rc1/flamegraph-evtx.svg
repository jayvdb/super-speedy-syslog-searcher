<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1478" onload="init(evt)" viewBox="0 0 1200 1478" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: super_speedy_syslog_searcher 0.6.68; git: 1f68039; -freq 5000; created 20240316T234820-0700--><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1478" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">super_speedy_syslog_searcher 0.6.68; git: 1f68039; -freq 5000; created 20240316T234820; s4 ./logs/programs/evtx/Microsoft-Windows-Kernel-PnP%4Configuration.evtx</text><text id="details" fill="rgb(0,0,0)" x="10" y="1461.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1461.00"> </text><svg id="frames" x="10" width="1180" total_samples="352"><g><title>_dl_relocate_object (1 samples, 0.28%)</title><rect x="0.0000%" y="1317" width="0.2841%" height="15" fill="rgb(244,75,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1327.50"></text></g><g><title>elf_dynamic_do_Rela (1 samples, 0.28%)</title><rect x="0.0000%" y="1301" width="0.2841%" height="15" fill="rgb(234,90,53)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1311.50"></text></g><g><title>elf_machine_rela (1 samples, 0.28%)</title><rect x="0.0000%" y="1285" width="0.2841%" height="15" fill="rgb(245,116,15)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1295.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.28%)</title><rect x="0.0000%" y="1269" width="0.2841%" height="15" fill="rgb(229,85,42)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1279.50"></text></g><g><title>do_lookup_x (1 samples, 0.28%)</title><rect x="0.0000%" y="1253" width="0.2841%" height="15" fill="rgb(240,183,18)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1263.50"></text></g><g><title>_dl_start (2 samples, 0.57%)</title><rect x="0.0000%" y="1381" width="0.5682%" height="15" fill="rgb(214,13,30)" fg:x="0" fg:w="2"/><text x="0.2500%" y="1391.50"></text></g><g><title>_dl_start_final (2 samples, 0.57%)</title><rect x="0.0000%" y="1365" width="0.5682%" height="15" fill="rgb(222,52,46)" fg:x="0" fg:w="2"/><text x="0.2500%" y="1375.50"></text></g><g><title>_dl_sysdep_start (2 samples, 0.57%)</title><rect x="0.0000%" y="1349" width="0.5682%" height="15" fill="rgb(238,104,49)" fg:x="0" fg:w="2"/><text x="0.2500%" y="1359.50"></text></g><g><title>dl_main (2 samples, 0.57%)</title><rect x="0.0000%" y="1333" width="0.5682%" height="15" fill="rgb(253,59,10)" fg:x="0" fg:w="2"/><text x="0.2500%" y="1343.50"></text></g><g><title>__libc_early_init (1 samples, 0.28%)</title><rect x="0.2841%" y="1317" width="0.2841%" height="15" fill="rgb(229,67,28)" fg:x="1" fg:w="1"/><text x="0.5341%" y="1327.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="0.2841%" y="1301" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="1" fg:w="1"/><text x="0.5341%" y="1311.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="0.2841%" y="1285" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="1" fg:w="1"/><text x="0.5341%" y="1295.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="0.2841%" y="1269" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="1" fg:w="1"/><text x="0.5341%" y="1279.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="0.2841%" y="1253" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="1" fg:w="1"/><text x="0.5341%" y="1263.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="0.2841%" y="1237" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="1" fg:w="1"/><text x="0.5341%" y="1247.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="0.2841%" y="1221" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="1" fg:w="1"/><text x="0.5341%" y="1231.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="0.2841%" y="1205" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="1" fg:w="1"/><text x="0.5341%" y="1215.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.28%)</title><rect x="0.5682%" y="933" width="0.2841%" height="15" fill="rgb(240,178,54)" fg:x="2" fg:w="1"/><text x="0.8182%" y="943.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (1 samples, 0.28%)</title><rect x="0.5682%" y="917" width="0.2841%" height="15" fill="rgb(239,119,25)" fg:x="2" fg:w="1"/><text x="0.8182%" y="927.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (1 samples, 0.28%)</title><rect x="0.5682%" y="901" width="0.2841%" height="15" fill="rgb(236,163,16)" fg:x="2" fg:w="1"/><text x="0.8182%" y="911.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.28%)</title><rect x="0.5682%" y="885" width="0.2841%" height="15" fill="rgb(247,26,49)" fg:x="2" fg:w="1"/><text x="0.8182%" y="895.50"></text></g><g><title>__GI___libc_write (1 samples, 0.28%)</title><rect x="0.5682%" y="869" width="0.2841%" height="15" fill="rgb(232,197,30)" fg:x="2" fg:w="1"/><text x="0.8182%" y="879.50"></text></g><g><title>__GI___libc_write (1 samples, 0.28%)</title><rect x="0.5682%" y="853" width="0.2841%" height="15" fill="rgb(232,197,30)" fg:x="2" fg:w="1"/><text x="0.8182%" y="863.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="0.5682%" y="837" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="2" fg:w="1"/><text x="0.8182%" y="847.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="0.5682%" y="821" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="2" fg:w="1"/><text x="0.8182%" y="831.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="0.5682%" y="805" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="2" fg:w="1"/><text x="0.8182%" y="815.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="0.5682%" y="789" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="2" fg:w="1"/><text x="0.8182%" y="799.50"></text></g><g><title>s4lib::printer::printers::PrinterLogMessage::print_evtx (2 samples, 0.57%)</title><rect x="0.5682%" y="1109" width="0.5682%" height="15" fill="rgb(249,63,1)" fg:x="2" fg:w="2"/><text x="0.8182%" y="1119.50"></text></g><g><title>s4lib::printer::printers::PrinterLogMessage::print_evtx_color (2 samples, 0.57%)</title><rect x="0.5682%" y="1093" width="0.5682%" height="15" fill="rgb(218,48,36)" fg:x="2" fg:w="2"/><text x="0.8182%" y="1103.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.57%)</title><rect x="0.5682%" y="1077" width="0.5682%" height="15" fill="rgb(251,145,9)" fg:x="2" fg:w="2"/><text x="0.8182%" y="1087.50"></text></g><g><title>&lt;termcolor::StandardStream as std::io::Write&gt;::write (2 samples, 0.57%)</title><rect x="0.5682%" y="1061" width="0.5682%" height="15" fill="rgb(250,180,25)" fg:x="2" fg:w="2"/><text x="0.8182%" y="1071.50"></text></g><g><title>&lt;termcolor::LossyStandardStream&lt;W&gt; as std::io::Write&gt;::write (2 samples, 0.57%)</title><rect x="0.5682%" y="1045" width="0.5682%" height="15" fill="rgb(232,195,18)" fg:x="2" fg:w="2"/><text x="0.8182%" y="1055.50"></text></g><g><title>&lt;termcolor::WriterInner&lt;W&gt; as std::io::Write&gt;::write (2 samples, 0.57%)</title><rect x="0.5682%" y="1029" width="0.5682%" height="15" fill="rgb(206,183,32)" fg:x="2" fg:w="2"/><text x="0.8182%" y="1039.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write (2 samples, 0.57%)</title><rect x="0.5682%" y="1013" width="0.5682%" height="15" fill="rgb(215,142,33)" fg:x="2" fg:w="2"/><text x="0.8182%" y="1023.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write (2 samples, 0.57%)</title><rect x="0.5682%" y="997" width="0.5682%" height="15" fill="rgb(232,39,45)" fg:x="2" fg:w="2"/><text x="0.8182%" y="1007.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write (2 samples, 0.57%)</title><rect x="0.5682%" y="981" width="0.5682%" height="15" fill="rgb(216,85,2)" fg:x="2" fg:w="2"/><text x="0.8182%" y="991.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write (2 samples, 0.57%)</title><rect x="0.5682%" y="965" width="0.5682%" height="15" fill="rgb(226,48,36)" fg:x="2" fg:w="2"/><text x="0.8182%" y="975.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write (2 samples, 0.57%)</title><rect x="0.5682%" y="949" width="0.5682%" height="15" fill="rgb(237,90,14)" fg:x="2" fg:w="2"/><text x="0.8182%" y="959.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (1 samples, 0.28%)</title><rect x="0.8523%" y="933" width="0.2841%" height="15" fill="rgb(239,119,25)" fg:x="3" fg:w="1"/><text x="1.1023%" y="943.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (1 samples, 0.28%)</title><rect x="0.8523%" y="917" width="0.2841%" height="15" fill="rgb(236,163,16)" fg:x="3" fg:w="1"/><text x="1.1023%" y="927.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.28%)</title><rect x="0.8523%" y="901" width="0.2841%" height="15" fill="rgb(247,26,49)" fg:x="3" fg:w="1"/><text x="1.1023%" y="911.50"></text></g><g><title>__GI___libc_write (1 samples, 0.28%)</title><rect x="0.8523%" y="885" width="0.2841%" height="15" fill="rgb(232,197,30)" fg:x="3" fg:w="1"/><text x="1.1023%" y="895.50"></text></g><g><title>__GI___libc_write (1 samples, 0.28%)</title><rect x="0.8523%" y="869" width="0.2841%" height="15" fill="rgb(232,197,30)" fg:x="3" fg:w="1"/><text x="1.1023%" y="879.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="0.8523%" y="853" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="3" fg:w="1"/><text x="1.1023%" y="863.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="0.8523%" y="837" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="3" fg:w="1"/><text x="1.1023%" y="847.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="0.8523%" y="821" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="3" fg:w="1"/><text x="1.1023%" y="831.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="0.8523%" y="805" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="3" fg:w="1"/><text x="1.1023%" y="815.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="0.8523%" y="789" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="3" fg:w="1"/><text x="1.1023%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="0.8523%" y="773" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="3" fg:w="1"/><text x="1.1023%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="0.8523%" y="757" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="3" fg:w="1"/><text x="1.1023%" y="767.50"></text></g><g><title>s4::processing_loop::recv_many_chan (10 samples, 2.84%)</title><rect x="1.1364%" y="1109" width="2.8409%" height="15" fill="rgb(253,70,6)" fg:x="4" fg:w="10"/><text x="1.3864%" y="1119.50">s4..</text></g><g><title>crossbeam_channel::select::Select::select (10 samples, 2.84%)</title><rect x="1.1364%" y="1093" width="2.8409%" height="15" fill="rgb(218,151,27)" fg:x="4" fg:w="10"/><text x="1.3864%" y="1103.50">cr..</text></g><g><title>crossbeam_channel::select::select (10 samples, 2.84%)</title><rect x="1.1364%" y="1077" width="2.8409%" height="15" fill="rgb(210,225,20)" fg:x="4" fg:w="10"/><text x="1.3864%" y="1087.50">cr..</text></g><g><title>crossbeam_channel::select::run_select (10 samples, 2.84%)</title><rect x="1.1364%" y="1061" width="2.8409%" height="15" fill="rgb(238,41,29)" fg:x="4" fg:w="10"/><text x="1.3864%" y="1071.50">cr..</text></g><g><title>crossbeam_channel::context::Context::with (10 samples, 2.84%)</title><rect x="1.1364%" y="1045" width="2.8409%" height="15" fill="rgb(249,203,42)" fg:x="4" fg:w="10"/><text x="1.3864%" y="1055.50">cr..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (10 samples, 2.84%)</title><rect x="1.1364%" y="1029" width="2.8409%" height="15" fill="rgb(235,136,14)" fg:x="4" fg:w="10"/><text x="1.3864%" y="1039.50">st..</text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (10 samples, 2.84%)</title><rect x="1.1364%" y="1013" width="2.8409%" height="15" fill="rgb(251,136,16)" fg:x="4" fg:w="10"/><text x="1.3864%" y="1023.50">cr..</text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (10 samples, 2.84%)</title><rect x="1.1364%" y="997" width="2.8409%" height="15" fill="rgb(251,136,16)" fg:x="4" fg:w="10"/><text x="1.3864%" y="1007.50">cr..</text></g><g><title>crossbeam_channel::select::run_select::{{closure}} (10 samples, 2.84%)</title><rect x="1.1364%" y="981" width="2.8409%" height="15" fill="rgb(241,20,29)" fg:x="4" fg:w="10"/><text x="1.3864%" y="991.50">cr..</text></g><g><title>crossbeam_channel::context::Context::wait_until (10 samples, 2.84%)</title><rect x="1.1364%" y="965" width="2.8409%" height="15" fill="rgb(218,28,27)" fg:x="4" fg:w="10"/><text x="1.3864%" y="975.50">cr..</text></g><g><title>std::thread::park (10 samples, 2.84%)</title><rect x="1.1364%" y="949" width="2.8409%" height="15" fill="rgb(253,209,8)" fg:x="4" fg:w="10"/><text x="1.3864%" y="959.50">st..</text></g><g><title>std::sys_common::thread_parker::futex::Parker::park (10 samples, 2.84%)</title><rect x="1.1364%" y="933" width="2.8409%" height="15" fill="rgb(252,86,25)" fg:x="4" fg:w="10"/><text x="1.3864%" y="943.50">st..</text></g><g><title>std::sys::unix::futex::futex_wait (10 samples, 2.84%)</title><rect x="1.1364%" y="917" width="2.8409%" height="15" fill="rgb(219,16,26)" fg:x="4" fg:w="10"/><text x="1.3864%" y="927.50">st..</text></g><g><title>syscall (10 samples, 2.84%)</title><rect x="1.1364%" y="901" width="2.8409%" height="15" fill="rgb(207,84,5)" fg:x="4" fg:w="10"/><text x="1.3864%" y="911.50">sy..</text></g><g><title>[[kernel.kallsyms]] (10 samples, 2.84%)</title><rect x="1.1364%" y="885" width="2.8409%" height="15" fill="rgb(210,204,4)" fg:x="4" fg:w="10"/><text x="1.3864%" y="895.50">[[..</text></g><g><title>[[kernel.kallsyms]] (10 samples, 2.84%)</title><rect x="1.1364%" y="869" width="2.8409%" height="15" fill="rgb(210,204,4)" fg:x="4" fg:w="10"/><text x="1.3864%" y="879.50">[[..</text></g><g><title>[[kernel.kallsyms]] (10 samples, 2.84%)</title><rect x="1.1364%" y="853" width="2.8409%" height="15" fill="rgb(210,204,4)" fg:x="4" fg:w="10"/><text x="1.3864%" y="863.50">[[..</text></g><g><title>[[kernel.kallsyms]] (10 samples, 2.84%)</title><rect x="1.1364%" y="837" width="2.8409%" height="15" fill="rgb(210,204,4)" fg:x="4" fg:w="10"/><text x="1.3864%" y="847.50">[[..</text></g><g><title>[[kernel.kallsyms]] (10 samples, 2.84%)</title><rect x="1.1364%" y="821" width="2.8409%" height="15" fill="rgb(210,204,4)" fg:x="4" fg:w="10"/><text x="1.3864%" y="831.50">[[..</text></g><g><title>[[kernel.kallsyms]] (10 samples, 2.84%)</title><rect x="1.1364%" y="805" width="2.8409%" height="15" fill="rgb(210,204,4)" fg:x="4" fg:w="10"/><text x="1.3864%" y="815.50">[[..</text></g><g><title>[[kernel.kallsyms]] (10 samples, 2.84%)</title><rect x="1.1364%" y="789" width="2.8409%" height="15" fill="rgb(210,204,4)" fg:x="4" fg:w="10"/><text x="1.3864%" y="799.50">[[..</text></g><g><title>[[kernel.kallsyms]] (10 samples, 2.84%)</title><rect x="1.1364%" y="773" width="2.8409%" height="15" fill="rgb(210,204,4)" fg:x="4" fg:w="10"/><text x="1.3864%" y="783.50">[[..</text></g><g><title>[[kernel.kallsyms]] (10 samples, 2.84%)</title><rect x="1.1364%" y="757" width="2.8409%" height="15" fill="rgb(210,204,4)" fg:x="4" fg:w="10"/><text x="1.3864%" y="767.50">[[..</text></g><g><title>[[kernel.kallsyms]] (10 samples, 2.84%)</title><rect x="1.1364%" y="741" width="2.8409%" height="15" fill="rgb(210,204,4)" fg:x="4" fg:w="10"/><text x="1.3864%" y="751.50">[[..</text></g><g><title>s4::processing_loop (13 samples, 3.69%)</title><rect x="0.5682%" y="1125" width="3.6932%" height="15" fill="rgb(233,182,14)" fg:x="2" fg:w="13"/><text x="0.8182%" y="1135.50">s4::..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove (1 samples, 0.28%)</title><rect x="3.9773%" y="1109" width="0.2841%" height="15" fill="rgb(224,108,5)" fg:x="14" fg:w="1"/><text x="4.2273%" y="1119.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove_entry (1 samples, 0.28%)</title><rect x="3.9773%" y="1093" width="0.2841%" height="15" fill="rgb(245,136,18)" fg:x="14" fg:w="1"/><text x="4.2273%" y="1103.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::remove_entry (1 samples, 0.28%)</title><rect x="3.9773%" y="1077" width="0.2841%" height="15" fill="rgb(227,63,43)" fg:x="14" fg:w="1"/><text x="4.2273%" y="1087.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::remove_kv (1 samples, 0.28%)</title><rect x="3.9773%" y="1061" width="0.2841%" height="15" fill="rgb(211,181,27)" fg:x="14" fg:w="1"/><text x="4.2273%" y="1071.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (1 samples, 0.28%)</title><rect x="3.9773%" y="1045" width="0.2841%" height="15" fill="rgb(223,155,52)" fg:x="14" fg:w="1"/><text x="4.2273%" y="1055.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (1 samples, 0.28%)</title><rect x="3.9773%" y="1029" width="0.2841%" height="15" fill="rgb(212,166,45)" fg:x="14" fg:w="1"/><text x="4.2273%" y="1039.50"></text></g><g><title>_start (16 samples, 4.55%)</title><rect x="0.0000%" y="1397" width="4.5455%" height="15" fill="rgb(210,219,27)" fg:x="0" fg:w="16"/><text x="0.2500%" y="1407.50">_start</text></g><g><title>__libc_start_main_impl (14 samples, 3.98%)</title><rect x="0.5682%" y="1381" width="3.9773%" height="15" fill="rgb(228,214,28)" fg:x="2" fg:w="14"/><text x="0.8182%" y="1391.50">__li..</text></g><g><title>__libc_start_call_main (14 samples, 3.98%)</title><rect x="0.5682%" y="1365" width="3.9773%" height="15" fill="rgb(249,173,1)" fg:x="2" fg:w="14"/><text x="0.8182%" y="1375.50">__li..</text></g><g><title>main (14 samples, 3.98%)</title><rect x="0.5682%" y="1349" width="3.9773%" height="15" fill="rgb(238,28,47)" fg:x="2" fg:w="14"/><text x="0.8182%" y="1359.50">main</text></g><g><title>std::rt::lang_start_internal (14 samples, 3.98%)</title><rect x="0.5682%" y="1333" width="3.9773%" height="15" fill="rgb(240,177,54)" fg:x="2" fg:w="14"/><text x="0.8182%" y="1343.50">std:..</text></g><g><title>std::panic::catch_unwind (14 samples, 3.98%)</title><rect x="0.5682%" y="1317" width="3.9773%" height="15" fill="rgb(216,75,8)" fg:x="2" fg:w="14"/><text x="0.8182%" y="1327.50">std:..</text></g><g><title>std::panicking::try (14 samples, 3.98%)</title><rect x="0.5682%" y="1301" width="3.9773%" height="15" fill="rgb(212,61,29)" fg:x="2" fg:w="14"/><text x="0.8182%" y="1311.50">std:..</text></g><g><title>std::panicking::try::do_call (14 samples, 3.98%)</title><rect x="0.5682%" y="1285" width="3.9773%" height="15" fill="rgb(232,162,46)" fg:x="2" fg:w="14"/><text x="0.8182%" y="1295.50">std:..</text></g><g><title>std::rt::lang_start_internal::{{closure}} (14 samples, 3.98%)</title><rect x="0.5682%" y="1269" width="3.9773%" height="15" fill="rgb(219,15,13)" fg:x="2" fg:w="14"/><text x="0.8182%" y="1279.50">std:..</text></g><g><title>std::panic::catch_unwind (14 samples, 3.98%)</title><rect x="0.5682%" y="1253" width="3.9773%" height="15" fill="rgb(216,75,8)" fg:x="2" fg:w="14"/><text x="0.8182%" y="1263.50">std:..</text></g><g><title>std::panicking::try (14 samples, 3.98%)</title><rect x="0.5682%" y="1237" width="3.9773%" height="15" fill="rgb(212,61,29)" fg:x="2" fg:w="14"/><text x="0.8182%" y="1247.50">std:..</text></g><g><title>std::panicking::try::do_call (14 samples, 3.98%)</title><rect x="0.5682%" y="1221" width="3.9773%" height="15" fill="rgb(232,162,46)" fg:x="2" fg:w="14"/><text x="0.8182%" y="1231.50">std:..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (14 samples, 3.98%)</title><rect x="0.5682%" y="1205" width="3.9773%" height="15" fill="rgb(212,73,0)" fg:x="2" fg:w="14"/><text x="0.8182%" y="1215.50">core..</text></g><g><title>std::rt::lang_start::{{closure}} (14 samples, 3.98%)</title><rect x="0.5682%" y="1189" width="3.9773%" height="15" fill="rgb(213,78,9)" fg:x="2" fg:w="14"/><text x="0.8182%" y="1199.50">std:..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (14 samples, 3.98%)</title><rect x="0.5682%" y="1173" width="3.9773%" height="15" fill="rgb(210,88,34)" fg:x="2" fg:w="14"/><text x="0.8182%" y="1183.50">std:..</text></g><g><title>core::ops::function::FnOnce::call_once (14 samples, 3.98%)</title><rect x="0.5682%" y="1157" width="3.9773%" height="15" fill="rgb(210,80,10)" fg:x="2" fg:w="14"/><text x="0.8182%" y="1167.50">core..</text></g><g><title>s4::main (14 samples, 3.98%)</title><rect x="0.5682%" y="1141" width="3.9773%" height="15" fill="rgb(221,151,31)" fg:x="2" fg:w="14"/><text x="0.8182%" y="1151.50">s4::..</text></g><g><title>s4::cli_process_args (1 samples, 0.28%)</title><rect x="4.2614%" y="1125" width="0.2841%" height="15" fill="rgb(217,50,44)" fg:x="15" fg:w="1"/><text x="4.5114%" y="1135.50"></text></g><g><title>s4::string_wdhms_to_duration (1 samples, 0.28%)</title><rect x="4.2614%" y="1109" width="0.2841%" height="15" fill="rgb(237,135,26)" fg:x="15" fg:w="1"/><text x="4.5114%" y="1119.50"></text></g><g><title>&lt;s4::REGEX_DUR_OFFSET as core::ops::deref::Deref&gt;::deref (1 samples, 0.28%)</title><rect x="4.2614%" y="1093" width="0.2841%" height="15" fill="rgb(239,209,23)" fg:x="15" fg:w="1"/><text x="4.5114%" y="1103.50"></text></g><g><title>&lt;s4::REGEX_DUR_OFFSET as core::ops::deref::Deref&gt;::deref::__stability (1 samples, 0.28%)</title><rect x="4.2614%" y="1077" width="0.2841%" height="15" fill="rgb(223,204,38)" fg:x="15" fg:w="1"/><text x="4.5114%" y="1087.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (1 samples, 0.28%)</title><rect x="4.2614%" y="1061" width="0.2841%" height="15" fill="rgb(235,175,8)" fg:x="15" fg:w="1"/><text x="4.5114%" y="1071.50"></text></g><g><title>std::sync::once::Once::call_once (1 samples, 0.28%)</title><rect x="4.2614%" y="1045" width="0.2841%" height="15" fill="rgb(247,17,47)" fg:x="15" fg:w="1"/><text x="4.5114%" y="1055.50"></text></g><g><title>std::sys_common::once::futex::Once::call (1 samples, 0.28%)</title><rect x="4.2614%" y="1029" width="0.2841%" height="15" fill="rgb(246,168,49)" fg:x="15" fg:w="1"/><text x="4.5114%" y="1039.50"></text></g><g><title>std::sync::once::Once::call_once::{{closure}} (1 samples, 0.28%)</title><rect x="4.2614%" y="1013" width="0.2841%" height="15" fill="rgb(237,63,35)" fg:x="15" fg:w="1"/><text x="4.5114%" y="1023.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}} (1 samples, 0.28%)</title><rect x="4.2614%" y="997" width="0.2841%" height="15" fill="rgb(238,7,51)" fg:x="15" fg:w="1"/><text x="4.5114%" y="1007.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.28%)</title><rect x="4.2614%" y="981" width="0.2841%" height="15" fill="rgb(210,80,10)" fg:x="15" fg:w="1"/><text x="4.5114%" y="991.50"></text></g><g><title>&lt;s4::REGEX_DUR_OFFSET as core::ops::deref::Deref&gt;::deref::__static_ref_initialize (1 samples, 0.28%)</title><rect x="4.2614%" y="965" width="0.2841%" height="15" fill="rgb(216,114,7)" fg:x="15" fg:w="1"/><text x="4.5114%" y="975.50"></text></g><g><title>regex::regex::string::Regex::new (1 samples, 0.28%)</title><rect x="4.2614%" y="949" width="0.2841%" height="15" fill="rgb(239,163,48)" fg:x="15" fg:w="1"/><text x="4.5114%" y="959.50"></text></g><g><title>regex::builders::string::RegexBuilder::build (1 samples, 0.28%)</title><rect x="4.2614%" y="933" width="0.2841%" height="15" fill="rgb(234,198,23)" fg:x="15" fg:w="1"/><text x="4.5114%" y="943.50"></text></g><g><title>regex::builders::Builder::build_one_string (1 samples, 0.28%)</title><rect x="4.2614%" y="917" width="0.2841%" height="15" fill="rgb(254,213,31)" fg:x="15" fg:w="1"/><text x="4.5114%" y="927.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (1 samples, 0.28%)</title><rect x="4.2614%" y="901" width="0.2841%" height="15" fill="rgb(212,33,22)" fg:x="15" fg:w="1"/><text x="4.5114%" y="911.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many (1 samples, 0.28%)</title><rect x="4.2614%" y="885" width="0.2841%" height="15" fill="rgb(236,25,32)" fg:x="15" fg:w="1"/><text x="4.5114%" y="895.50"></text></g><g><title>regex_syntax::hir::translate::Translator::translate (1 samples, 0.28%)</title><rect x="4.2614%" y="869" width="0.2841%" height="15" fill="rgb(212,73,14)" fg:x="15" fg:w="1"/><text x="4.5114%" y="879.50"></text></g><g><title>regex_syntax::ast::visitor::visit (1 samples, 0.28%)</title><rect x="4.2614%" y="853" width="0.2841%" height="15" fill="rgb(209,184,21)" fg:x="15" fg:w="1"/><text x="4.5114%" y="863.50"></text></g><g><title>regex_syntax::ast::visitor::HeapVisitor::visit (1 samples, 0.28%)</title><rect x="4.2614%" y="837" width="0.2841%" height="15" fill="rgb(253,224,17)" fg:x="15" fg:w="1"/><text x="4.5114%" y="847.50"></text></g><g><title>&lt;regex_syntax::hir::translate::TranslatorI as regex_syntax::ast::visitor::Visitor&gt;::visit_post (1 samples, 0.28%)</title><rect x="4.2614%" y="821" width="0.2841%" height="15" fill="rgb(207,12,29)" fg:x="15" fg:w="1"/><text x="4.5114%" y="831.50"></text></g><g><title>regex_syntax::hir::translate::TranslatorI::pop (1 samples, 0.28%)</title><rect x="4.2614%" y="805" width="0.2841%" height="15" fill="rgb(251,64,13)" fg:x="15" fg:w="1"/><text x="4.5114%" y="815.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (1 samples, 0.28%)</title><rect x="4.2614%" y="789" width="0.2841%" height="15" fill="rgb(252,84,39)" fg:x="15" fg:w="1"/><text x="4.5114%" y="799.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (1 samples, 0.28%)</title><rect x="4.2614%" y="773" width="0.2841%" height="15" fill="rgb(208,49,23)" fg:x="15" fg:w="1"/><text x="4.5114%" y="783.50"></text></g><g><title>core::cell::BorrowRefMut::new (1 samples, 0.28%)</title><rect x="4.2614%" y="757" width="0.2841%" height="15" fill="rgb(242,89,29)" fg:x="15" fg:w="1"/><text x="4.5114%" y="767.50"></text></g><g><title>__clone3 (1 samples, 0.28%)</title><rect x="4.5455%" y="1397" width="0.2841%" height="15" fill="rgb(252,169,8)" fg:x="16" fg:w="1"/><text x="4.7955%" y="1407.50"></text></g><g><title>start_thread (1 samples, 0.28%)</title><rect x="4.5455%" y="1381" width="0.2841%" height="15" fill="rgb(209,148,13)" fg:x="16" fg:w="1"/><text x="4.7955%" y="1391.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.28%)</title><rect x="4.5455%" y="1365" width="0.2841%" height="15" fill="rgb(215,36,0)" fg:x="16" fg:w="1"/><text x="4.7955%" y="1375.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.28%)</title><rect x="4.5455%" y="1349" width="0.2841%" height="15" fill="rgb(228,202,16)" fg:x="16" fg:w="1"/><text x="4.7955%" y="1359.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.28%)</title><rect x="4.5455%" y="1333" width="0.2841%" height="15" fill="rgb(228,202,16)" fg:x="16" fg:w="1"/><text x="4.7955%" y="1343.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.28%)</title><rect x="4.5455%" y="1317" width="0.2841%" height="15" fill="rgb(218,104,40)" fg:x="16" fg:w="1"/><text x="4.7955%" y="1327.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (1 samples, 0.28%)</title><rect x="4.5455%" y="1301" width="0.2841%" height="15" fill="rgb(249,4,49)" fg:x="16" fg:w="1"/><text x="4.7955%" y="1311.50"></text></g><g><title>std::sys::unix::thread::Thread::set_name (1 samples, 0.28%)</title><rect x="4.5455%" y="1285" width="0.2841%" height="15" fill="rgb(250,171,46)" fg:x="16" fg:w="1"/><text x="4.7955%" y="1295.50"></text></g><g><title>std::sys::unix::thread::truncate_cstr (1 samples, 0.28%)</title><rect x="4.5455%" y="1269" width="0.2841%" height="15" fill="rgb(248,147,23)" fg:x="16" fg:w="1"/><text x="4.7955%" y="1279.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.28%)</title><rect x="4.5455%" y="1253" width="0.2841%" height="15" fill="rgb(209,26,30)" fg:x="16" fg:w="1"/><text x="4.7955%" y="1263.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.28%)</title><rect x="4.5455%" y="1237" width="0.2841%" height="15" fill="rgb(229,121,46)" fg:x="16" fg:w="1"/><text x="4.7955%" y="1247.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.28%)</title><rect x="4.5455%" y="1221" width="0.2841%" height="15" fill="rgb(221,172,50)" fg:x="16" fg:w="1"/><text x="4.7955%" y="1231.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.28%)</title><rect x="4.5455%" y="1205" width="0.2841%" height="15" fill="rgb(216,42,52)" fg:x="16" fg:w="1"/><text x="4.7955%" y="1215.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.28%)</title><rect x="4.5455%" y="1189" width="0.2841%" height="15" fill="rgb(249,207,12)" fg:x="16" fg:w="1"/><text x="4.7955%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.28%)</title><rect x="4.5455%" y="1173" width="0.2841%" height="15" fill="rgb(224,194,14)" fg:x="16" fg:w="1"/><text x="4.7955%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.28%)</title><rect x="4.5455%" y="1157" width="0.2841%" height="15" fill="rgb(227,204,5)" fg:x="16" fg:w="1"/><text x="4.7955%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.28%)</title><rect x="4.5455%" y="1141" width="0.2841%" height="15" fill="rgb(231,114,21)" fg:x="16" fg:w="1"/><text x="4.7955%" y="1151.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.28%)</title><rect x="4.5455%" y="1125" width="0.2841%" height="15" fill="rgb(238,209,2)" fg:x="16" fg:w="1"/><text x="4.7955%" y="1135.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.28%)</title><rect x="4.5455%" y="1109" width="0.2841%" height="15" fill="rgb(253,135,41)" fg:x="16" fg:w="1"/><text x="4.7955%" y="1119.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.28%)</title><rect x="4.5455%" y="1093" width="0.2841%" height="15" fill="rgb(206,112,53)" fg:x="16" fg:w="1"/><text x="4.7955%" y="1103.50"></text></g><g><title>tcache_init (1 samples, 0.28%)</title><rect x="4.5455%" y="1077" width="0.2841%" height="15" fill="rgb(245,6,4)" fg:x="16" fg:w="1"/><text x="4.7955%" y="1087.50"></text></g><g><title>tcache_init (1 samples, 0.28%)</title><rect x="4.5455%" y="1061" width="0.2841%" height="15" fill="rgb(245,6,4)" fg:x="16" fg:w="1"/><text x="4.7955%" y="1071.50"></text></g><g><title>arena_get2 (1 samples, 0.28%)</title><rect x="4.5455%" y="1045" width="0.2841%" height="15" fill="rgb(215,227,22)" fg:x="16" fg:w="1"/><text x="4.7955%" y="1055.50"></text></g><g><title>arena_get2 (1 samples, 0.28%)</title><rect x="4.5455%" y="1029" width="0.2841%" height="15" fill="rgb(215,227,22)" fg:x="16" fg:w="1"/><text x="4.7955%" y="1039.50"></text></g><g><title>_int_new_arena (1 samples, 0.28%)</title><rect x="4.5455%" y="1013" width="0.2841%" height="15" fill="rgb(207,136,22)" fg:x="16" fg:w="1"/><text x="4.7955%" y="1023.50"></text></g><g><title>new_heap (1 samples, 0.28%)</title><rect x="4.5455%" y="997" width="0.2841%" height="15" fill="rgb(205,205,9)" fg:x="16" fg:w="1"/><text x="4.7955%" y="1007.50"></text></g><g><title>alloc_new_heap (1 samples, 0.28%)</title><rect x="4.5455%" y="981" width="0.2841%" height="15" fill="rgb(234,86,40)" fg:x="16" fg:w="1"/><text x="4.7955%" y="991.50"></text></g><g><title>__GI___munmap (1 samples, 0.28%)</title><rect x="4.5455%" y="965" width="0.2841%" height="15" fill="rgb(214,177,17)" fg:x="16" fg:w="1"/><text x="4.7955%" y="975.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="4.5455%" y="949" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="16" fg:w="1"/><text x="4.7955%" y="959.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="4.5455%" y="933" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="16" fg:w="1"/><text x="4.7955%" y="943.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="4.5455%" y="917" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="16" fg:w="1"/><text x="4.7955%" y="927.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="4.5455%" y="901" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="16" fg:w="1"/><text x="4.7955%" y="911.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="4.5455%" y="885" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="16" fg:w="1"/><text x="4.7955%" y="895.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="4.5455%" y="869" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="16" fg:w="1"/><text x="4.7955%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.28%)</title><rect x="4.8295%" y="1397" width="0.2841%" height="15" fill="rgb(227,28,50)" fg:x="17" fg:w="1"/><text x="5.0795%" y="1407.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (1 samples, 0.28%)</title><rect x="4.8295%" y="1381" width="0.2841%" height="15" fill="rgb(212,33,22)" fg:x="17" fg:w="1"/><text x="5.0795%" y="1391.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many (1 samples, 0.28%)</title><rect x="4.8295%" y="1365" width="0.2841%" height="15" fill="rgb(236,25,32)" fg:x="17" fg:w="1"/><text x="5.0795%" y="1375.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (1 samples, 0.28%)</title><rect x="4.8295%" y="1349" width="0.2841%" height="15" fill="rgb(250,142,30)" fg:x="17" fg:w="1"/><text x="5.0795%" y="1359.50"></text></g><g><title>regex_automata::meta::strategy::new (1 samples, 0.28%)</title><rect x="4.8295%" y="1333" width="0.2841%" height="15" fill="rgb(243,171,22)" fg:x="17" fg:w="1"/><text x="5.0795%" y="1343.50"></text></g><g><title>regex_automata::meta::strategy::Core::new (1 samples, 0.28%)</title><rect x="4.8295%" y="1317" width="0.2841%" height="15" fill="rgb(222,69,27)" fg:x="17" fg:w="1"/><text x="5.0795%" y="1327.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (1 samples, 0.28%)</title><rect x="4.8295%" y="1301" width="0.2841%" height="15" fill="rgb(226,42,16)" fg:x="17" fg:w="1"/><text x="5.0795%" y="1311.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (1 samples, 0.28%)</title><rect x="4.8295%" y="1285" width="0.2841%" height="15" fill="rgb(242,129,17)" fg:x="17" fg:w="1"/><text x="5.0795%" y="1295.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (1 samples, 0.28%)</title><rect x="4.8295%" y="1269" width="0.2841%" height="15" fill="rgb(247,137,3)" fg:x="17" fg:w="1"/><text x="5.0795%" y="1279.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.28%)</title><rect x="4.8295%" y="1253" width="0.2841%" height="15" fill="rgb(214,109,53)" fg:x="17" fg:w="1"/><text x="5.0795%" y="1263.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.28%)</title><rect x="4.8295%" y="1237" width="0.2841%" height="15" fill="rgb(254,35,30)" fg:x="17" fg:w="1"/><text x="5.0795%" y="1247.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.28%)</title><rect x="4.8295%" y="1221" width="0.2841%" height="15" fill="rgb(226,169,23)" fg:x="17" fg:w="1"/><text x="5.0795%" y="1231.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile::{{closure}} (1 samples, 0.28%)</title><rect x="4.8295%" y="1205" width="0.2841%" height="15" fill="rgb(218,216,52)" fg:x="17" fg:w="1"/><text x="5.0795%" y="1215.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 0.28%)</title><rect x="4.8295%" y="1189" width="0.2841%" height="15" fill="rgb(235,200,16)" fg:x="17" fg:w="1"/><text x="5.0795%" y="1199.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.28%)</title><rect x="4.8295%" y="1173" width="0.2841%" height="15" fill="rgb(213,34,18)" fg:x="17" fg:w="1"/><text x="5.0795%" y="1183.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (1 samples, 0.28%)</title><rect x="4.8295%" y="1157" width="0.2841%" height="15" fill="rgb(210,105,37)" fg:x="17" fg:w="1"/><text x="5.0795%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 0.28%)</title><rect x="4.8295%" y="1141" width="0.2841%" height="15" fill="rgb(222,94,14)" fg:x="17" fg:w="1"/><text x="5.0795%" y="1151.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.28%)</title><rect x="4.8295%" y="1125" width="0.2841%" height="15" fill="rgb(254,35,30)" fg:x="17" fg:w="1"/><text x="5.0795%" y="1135.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.28%)</title><rect x="4.8295%" y="1109" width="0.2841%" height="15" fill="rgb(226,169,23)" fg:x="17" fg:w="1"/><text x="5.0795%" y="1119.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (1 samples, 0.28%)</title><rect x="4.8295%" y="1093" width="0.2841%" height="15" fill="rgb(205,130,14)" fg:x="17" fg:w="1"/><text x="5.0795%" y="1103.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_at_least (1 samples, 0.28%)</title><rect x="4.8295%" y="1077" width="0.2841%" height="15" fill="rgb(238,57,7)" fg:x="17" fg:w="1"/><text x="5.0795%" y="1087.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 0.28%)</title><rect x="4.8295%" y="1061" width="0.2841%" height="15" fill="rgb(235,200,16)" fg:x="17" fg:w="1"/><text x="5.0795%" y="1071.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.28%)</title><rect x="4.8295%" y="1045" width="0.2841%" height="15" fill="rgb(213,34,18)" fg:x="17" fg:w="1"/><text x="5.0795%" y="1055.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (1 samples, 0.28%)</title><rect x="4.8295%" y="1029" width="0.2841%" height="15" fill="rgb(253,35,22)" fg:x="17" fg:w="1"/><text x="5.0795%" y="1039.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (1 samples, 0.28%)</title><rect x="4.8295%" y="1013" width="0.2841%" height="15" fill="rgb(247,137,3)" fg:x="17" fg:w="1"/><text x="5.0795%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.28%)</title><rect x="4.8295%" y="997" width="0.2841%" height="15" fill="rgb(214,109,53)" fg:x="17" fg:w="1"/><text x="5.0795%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.28%)</title><rect x="4.8295%" y="981" width="0.2841%" height="15" fill="rgb(254,35,30)" fg:x="17" fg:w="1"/><text x="5.0795%" y="991.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.28%)</title><rect x="4.8295%" y="965" width="0.2841%" height="15" fill="rgb(226,169,23)" fg:x="17" fg:w="1"/><text x="5.0795%" y="975.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice::{{closure}} (1 samples, 0.28%)</title><rect x="4.8295%" y="949" width="0.2841%" height="15" fill="rgb(223,145,12)" fg:x="17" fg:w="1"/><text x="5.0795%" y="959.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 0.28%)</title><rect x="4.8295%" y="933" width="0.2841%" height="15" fill="rgb(235,200,16)" fg:x="17" fg:w="1"/><text x="5.0795%" y="943.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.28%)</title><rect x="4.8295%" y="917" width="0.2841%" height="15" fill="rgb(213,34,18)" fg:x="17" fg:w="1"/><text x="5.0795%" y="927.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (1 samples, 0.28%)</title><rect x="4.8295%" y="901" width="0.2841%" height="15" fill="rgb(210,105,37)" fg:x="17" fg:w="1"/><text x="5.0795%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 0.28%)</title><rect x="4.8295%" y="885" width="0.2841%" height="15" fill="rgb(222,94,14)" fg:x="17" fg:w="1"/><text x="5.0795%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.28%)</title><rect x="4.8295%" y="869" width="0.2841%" height="15" fill="rgb(254,35,30)" fg:x="17" fg:w="1"/><text x="5.0795%" y="879.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.28%)</title><rect x="4.8295%" y="853" width="0.2841%" height="15" fill="rgb(226,169,23)" fg:x="17" fg:w="1"/><text x="5.0795%" y="863.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (1 samples, 0.28%)</title><rect x="4.8295%" y="837" width="0.2841%" height="15" fill="rgb(205,130,14)" fg:x="17" fg:w="1"/><text x="5.0795%" y="847.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_at_least (1 samples, 0.28%)</title><rect x="4.8295%" y="821" width="0.2841%" height="15" fill="rgb(238,57,7)" fg:x="17" fg:w="1"/><text x="5.0795%" y="831.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.28%)</title><rect x="4.8295%" y="805" width="0.2841%" height="15" fill="rgb(213,34,18)" fg:x="17" fg:w="1"/><text x="5.0795%" y="815.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class (1 samples, 0.28%)</title><rect x="4.8295%" y="789" width="0.2841%" height="15" fill="rgb(246,38,12)" fg:x="17" fg:w="1"/><text x="5.0795%" y="799.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class_reverse_with_suffix (1 samples, 0.28%)</title><rect x="4.8295%" y="773" width="0.2841%" height="15" fill="rgb(227,194,49)" fg:x="17" fg:w="1"/><text x="5.0795%" y="783.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_range (1 samples, 0.28%)</title><rect x="4.8295%" y="757" width="0.2841%" height="15" fill="rgb(209,116,30)" fg:x="17" fg:w="1"/><text x="5.0795%" y="767.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::add_range (1 samples, 0.28%)</title><rect x="4.8295%" y="741" width="0.2841%" height="15" fill="rgb(227,38,31)" fg:x="17" fg:w="1"/><text x="5.0795%" y="751.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add_range (1 samples, 0.28%)</title><rect x="4.8295%" y="725" width="0.2841%" height="15" fill="rgb(245,83,34)" fg:x="17" fg:w="1"/><text x="5.0795%" y="735.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add (1 samples, 0.28%)</title><rect x="4.8295%" y="709" width="0.2841%" height="15" fill="rgb(253,91,29)" fg:x="17" fg:w="1"/><text x="5.0795%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.28%)</title><rect x="4.8295%" y="693" width="0.2841%" height="15" fill="rgb(241,229,15)" fg:x="17" fg:w="1"/><text x="5.0795%" y="703.50"></text></g><g><title>core::ptr::write (1 samples, 0.28%)</title><rect x="4.8295%" y="677" width="0.2841%" height="15" fill="rgb(209,143,44)" fg:x="17" fg:w="1"/><text x="5.0795%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="4.8295%" y="661" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="17" fg:w="1"/><text x="5.0795%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="4.8295%" y="645" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="17" fg:w="1"/><text x="5.0795%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="4.8295%" y="629" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="17" fg:w="1"/><text x="5.0795%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="4.8295%" y="613" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="17" fg:w="1"/><text x="5.0795%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="4.8295%" y="597" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="17" fg:w="1"/><text x="5.0795%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="4.8295%" y="581" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="17" fg:w="1"/><text x="5.0795%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="5.1136%" y="1269" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="18" fg:w="1"/><text x="5.3636%" y="1279.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="5.1136%" y="1253" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="18" fg:w="1"/><text x="5.3636%" y="1263.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="5.1136%" y="1237" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="18" fg:w="1"/><text x="5.3636%" y="1247.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="5.1136%" y="1221" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="18" fg:w="1"/><text x="5.3636%" y="1231.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.57%)</title><rect x="5.1136%" y="1301" width="0.5682%" height="15" fill="rgb(210,204,4)" fg:x="18" fg:w="2"/><text x="5.3636%" y="1311.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.57%)</title><rect x="5.1136%" y="1285" width="0.5682%" height="15" fill="rgb(210,204,4)" fg:x="18" fg:w="2"/><text x="5.3636%" y="1295.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.85%)</title><rect x="5.1136%" y="1333" width="0.8523%" height="15" fill="rgb(210,204,4)" fg:x="18" fg:w="3"/><text x="5.3636%" y="1343.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.85%)</title><rect x="5.1136%" y="1317" width="0.8523%" height="15" fill="rgb(210,204,4)" fg:x="18" fg:w="3"/><text x="5.3636%" y="1327.50"></text></g><g><title>s4 (30 samples, 8.52%)</title><rect x="0.0000%" y="1413" width="8.5227%" height="15" fill="rgb(230,7,27)" fg:x="0" fg:w="30"/><text x="0.2500%" y="1423.50">s4</text></g><g><title>[[kernel.kallsyms]] (12 samples, 3.41%)</title><rect x="5.1136%" y="1397" width="3.4091%" height="15" fill="rgb(210,204,4)" fg:x="18" fg:w="12"/><text x="5.3636%" y="1407.50">[[k..</text></g><g><title>[[kernel.kallsyms]] (12 samples, 3.41%)</title><rect x="5.1136%" y="1381" width="3.4091%" height="15" fill="rgb(210,204,4)" fg:x="18" fg:w="12"/><text x="5.3636%" y="1391.50">[[k..</text></g><g><title>[[kernel.kallsyms]] (12 samples, 3.41%)</title><rect x="5.1136%" y="1365" width="3.4091%" height="15" fill="rgb(210,204,4)" fg:x="18" fg:w="12"/><text x="5.3636%" y="1375.50">[[k..</text></g><g><title>[[kernel.kallsyms]] (12 samples, 3.41%)</title><rect x="5.1136%" y="1349" width="3.4091%" height="15" fill="rgb(210,204,4)" fg:x="18" fg:w="12"/><text x="5.3636%" y="1359.50">[[k..</text></g><g><title>perf-exec (8 samples, 2.27%)</title><rect x="8.5227%" y="1413" width="2.2727%" height="15" fill="rgb(250,111,27)" fg:x="30" fg:w="8"/><text x="8.7727%" y="1423.50">p..</text></g><g><title>[[kernel.kallsyms]] (8 samples, 2.27%)</title><rect x="8.5227%" y="1397" width="2.2727%" height="15" fill="rgb(210,204,4)" fg:x="30" fg:w="8"/><text x="8.7727%" y="1407.50">[..</text></g><g><title>[[kernel.kallsyms]] (8 samples, 2.27%)</title><rect x="8.5227%" y="1381" width="2.2727%" height="15" fill="rgb(210,204,4)" fg:x="30" fg:w="8"/><text x="8.7727%" y="1391.50">[..</text></g><g><title>[[kernel.kallsyms]] (8 samples, 2.27%)</title><rect x="8.5227%" y="1365" width="2.2727%" height="15" fill="rgb(210,204,4)" fg:x="30" fg:w="8"/><text x="8.7727%" y="1375.50">[..</text></g><g><title>[[kernel.kallsyms]] (8 samples, 2.27%)</title><rect x="8.5227%" y="1349" width="2.2727%" height="15" fill="rgb(210,204,4)" fg:x="30" fg:w="8"/><text x="8.7727%" y="1359.50">[..</text></g><g><title>[[kernel.kallsyms]] (8 samples, 2.27%)</title><rect x="8.5227%" y="1333" width="2.2727%" height="15" fill="rgb(210,204,4)" fg:x="30" fg:w="8"/><text x="8.7727%" y="1343.50">[..</text></g><g><title>[[kernel.kallsyms]] (8 samples, 2.27%)</title><rect x="8.5227%" y="1317" width="2.2727%" height="15" fill="rgb(210,204,4)" fg:x="30" fg:w="8"/><text x="8.7727%" y="1327.50">[..</text></g><g><title>[[kernel.kallsyms]] (8 samples, 2.27%)</title><rect x="8.5227%" y="1301" width="2.2727%" height="15" fill="rgb(210,204,4)" fg:x="30" fg:w="8"/><text x="8.7727%" y="1311.50">[..</text></g><g><title>[[kernel.kallsyms]] (8 samples, 2.27%)</title><rect x="8.5227%" y="1285" width="2.2727%" height="15" fill="rgb(210,204,4)" fg:x="30" fg:w="8"/><text x="8.7727%" y="1295.50">[..</text></g><g><title>[[kernel.kallsyms]] (8 samples, 2.27%)</title><rect x="8.5227%" y="1269" width="2.2727%" height="15" fill="rgb(210,204,4)" fg:x="30" fg:w="8"/><text x="8.7727%" y="1279.50">[..</text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="10.7955%" y="1173" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="38" fg:w="1"/><text x="11.0455%" y="1183.50"></text></g><g><title>__GI___mprotect (2 samples, 0.57%)</title><rect x="10.7955%" y="1285" width="0.5682%" height="15" fill="rgb(209,155,30)" fg:x="38" fg:w="2"/><text x="11.0455%" y="1295.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.57%)</title><rect x="10.7955%" y="1269" width="0.5682%" height="15" fill="rgb(210,204,4)" fg:x="38" fg:w="2"/><text x="11.0455%" y="1279.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.57%)</title><rect x="10.7955%" y="1253" width="0.5682%" height="15" fill="rgb(210,204,4)" fg:x="38" fg:w="2"/><text x="11.0455%" y="1263.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.57%)</title><rect x="10.7955%" y="1237" width="0.5682%" height="15" fill="rgb(210,204,4)" fg:x="38" fg:w="2"/><text x="11.0455%" y="1247.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.57%)</title><rect x="10.7955%" y="1221" width="0.5682%" height="15" fill="rgb(210,204,4)" fg:x="38" fg:w="2"/><text x="11.0455%" y="1231.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.57%)</title><rect x="10.7955%" y="1205" width="0.5682%" height="15" fill="rgb(210,204,4)" fg:x="38" fg:w="2"/><text x="11.0455%" y="1215.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.57%)</title><rect x="10.7955%" y="1189" width="0.5682%" height="15" fill="rgb(210,204,4)" fg:x="38" fg:w="2"/><text x="11.0455%" y="1199.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.57%)</title><rect x="11.3636%" y="1173" width="0.5682%" height="15" fill="rgb(210,204,4)" fg:x="40" fg:w="2"/><text x="11.6136%" y="1183.50"></text></g><g><title>std::sys::unix::stack_overflow::Handler::new (5 samples, 1.42%)</title><rect x="10.7955%" y="1349" width="1.4205%" height="15" fill="rgb(218,173,48)" fg:x="38" fg:w="5"/><text x="11.0455%" y="1359.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (5 samples, 1.42%)</title><rect x="10.7955%" y="1333" width="1.4205%" height="15" fill="rgb(237,166,40)" fg:x="38" fg:w="5"/><text x="11.0455%" y="1343.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (5 samples, 1.42%)</title><rect x="10.7955%" y="1317" width="1.4205%" height="15" fill="rgb(223,116,29)" fg:x="38" fg:w="5"/><text x="11.0455%" y="1327.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (5 samples, 1.42%)</title><rect x="10.7955%" y="1301" width="1.4205%" height="15" fill="rgb(233,124,20)" fg:x="38" fg:w="5"/><text x="11.0455%" y="1311.50"></text></g><g><title>__GI___mmap64 (3 samples, 0.85%)</title><rect x="11.3636%" y="1285" width="0.8523%" height="15" fill="rgb(216,161,14)" fg:x="40" fg:w="3"/><text x="11.6136%" y="1295.50"></text></g><g><title>__GI___mmap64 (3 samples, 0.85%)</title><rect x="11.3636%" y="1269" width="0.8523%" height="15" fill="rgb(216,161,14)" fg:x="40" fg:w="3"/><text x="11.6136%" y="1279.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.85%)</title><rect x="11.3636%" y="1253" width="0.8523%" height="15" fill="rgb(210,204,4)" fg:x="40" fg:w="3"/><text x="11.6136%" y="1263.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.85%)</title><rect x="11.3636%" y="1237" width="0.8523%" height="15" fill="rgb(210,204,4)" fg:x="40" fg:w="3"/><text x="11.6136%" y="1247.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.85%)</title><rect x="11.3636%" y="1221" width="0.8523%" height="15" fill="rgb(210,204,4)" fg:x="40" fg:w="3"/><text x="11.6136%" y="1231.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.85%)</title><rect x="11.3636%" y="1205" width="0.8523%" height="15" fill="rgb(210,204,4)" fg:x="40" fg:w="3"/><text x="11.6136%" y="1215.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.85%)</title><rect x="11.3636%" y="1189" width="0.8523%" height="15" fill="rgb(210,204,4)" fg:x="40" fg:w="3"/><text x="11.6136%" y="1199.50"></text></g><g><title>std::sys_common::thread_info::set (1 samples, 0.28%)</title><rect x="12.2159%" y="1285" width="0.2841%" height="15" fill="rgb(208,121,26)" fg:x="43" fg:w="1"/><text x="12.4659%" y="1295.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.28%)</title><rect x="12.2159%" y="1269" width="0.2841%" height="15" fill="rgb(228,156,48)" fg:x="43" fg:w="1"/><text x="12.4659%" y="1279.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.28%)</title><rect x="12.2159%" y="1253" width="0.2841%" height="15" fill="rgb(235,136,14)" fg:x="43" fg:w="1"/><text x="12.4659%" y="1263.50"></text></g><g><title>std::sys_common::thread_info::THREAD_INFO::__getit (1 samples, 0.28%)</title><rect x="12.2159%" y="1237" width="0.2841%" height="15" fill="rgb(218,14,31)" fg:x="43" fg:w="1"/><text x="12.4659%" y="1247.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::register_dtor (1 samples, 0.28%)</title><rect x="12.2159%" y="1221" width="0.2841%" height="15" fill="rgb(211,151,5)" fg:x="43" fg:w="1"/><text x="12.4659%" y="1231.50"></text></g><g><title>__cxa_thread_atexit_impl (1 samples, 0.28%)</title><rect x="12.2159%" y="1205" width="0.2841%" height="15" fill="rgb(230,211,15)" fg:x="43" fg:w="1"/><text x="12.4659%" y="1215.50"></text></g><g><title>__GI___pthread_getaffinity_np (1 samples, 0.28%)</title><rect x="12.5000%" y="1253" width="0.2841%" height="15" fill="rgb(224,84,52)" fg:x="44" fg:w="1"/><text x="12.7500%" y="1263.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="12.5000%" y="1237" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="44" fg:w="1"/><text x="12.7500%" y="1247.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="12.5000%" y="1221" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="44" fg:w="1"/><text x="12.7500%" y="1231.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="12.5000%" y="1205" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="44" fg:w="1"/><text x="12.7500%" y="1215.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="12.5000%" y="1189" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="44" fg:w="1"/><text x="12.7500%" y="1199.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="12.5000%" y="1173" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="44" fg:w="1"/><text x="12.7500%" y="1183.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="12.5000%" y="1157" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="44" fg:w="1"/><text x="12.7500%" y="1167.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="12.7841%" y="1029" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="45" fg:w="1"/><text x="13.0341%" y="1039.50"></text></g><g><title>__GI___mprotect (2 samples, 0.57%)</title><rect x="12.7841%" y="1125" width="0.5682%" height="15" fill="rgb(209,155,30)" fg:x="45" fg:w="2"/><text x="13.0341%" y="1135.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.57%)</title><rect x="12.7841%" y="1109" width="0.5682%" height="15" fill="rgb(210,204,4)" fg:x="45" fg:w="2"/><text x="13.0341%" y="1119.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.57%)</title><rect x="12.7841%" y="1093" width="0.5682%" height="15" fill="rgb(210,204,4)" fg:x="45" fg:w="2"/><text x="13.0341%" y="1103.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.57%)</title><rect x="12.7841%" y="1077" width="0.5682%" height="15" fill="rgb(210,204,4)" fg:x="45" fg:w="2"/><text x="13.0341%" y="1087.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.57%)</title><rect x="12.7841%" y="1061" width="0.5682%" height="15" fill="rgb(210,204,4)" fg:x="45" fg:w="2"/><text x="13.0341%" y="1071.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.57%)</title><rect x="12.7841%" y="1045" width="0.5682%" height="15" fill="rgb(210,204,4)" fg:x="45" fg:w="2"/><text x="13.0341%" y="1055.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="13.3523%" y="949" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="47" fg:w="1"/><text x="13.6023%" y="959.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="13.3523%" y="933" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="47" fg:w="1"/><text x="13.6023%" y="943.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="13.3523%" y="917" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="47" fg:w="1"/><text x="13.6023%" y="927.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="13.3523%" y="901" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="47" fg:w="1"/><text x="13.6023%" y="911.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="13.3523%" y="885" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="47" fg:w="1"/><text x="13.6023%" y="895.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="13.3523%" y="869" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="47" fg:w="1"/><text x="13.6023%" y="879.50"></text></g><g><title>__GI___mmap64 (2 samples, 0.57%)</title><rect x="13.3523%" y="1125" width="0.5682%" height="15" fill="rgb(216,161,14)" fg:x="47" fg:w="2"/><text x="13.6023%" y="1135.50"></text></g><g><title>__GI___mmap64 (2 samples, 0.57%)</title><rect x="13.3523%" y="1109" width="0.5682%" height="15" fill="rgb(216,161,14)" fg:x="47" fg:w="2"/><text x="13.6023%" y="1119.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.57%)</title><rect x="13.3523%" y="1093" width="0.5682%" height="15" fill="rgb(210,204,4)" fg:x="47" fg:w="2"/><text x="13.6023%" y="1103.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.57%)</title><rect x="13.3523%" y="1077" width="0.5682%" height="15" fill="rgb(210,204,4)" fg:x="47" fg:w="2"/><text x="13.6023%" y="1087.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.57%)</title><rect x="13.3523%" y="1061" width="0.5682%" height="15" fill="rgb(210,204,4)" fg:x="47" fg:w="2"/><text x="13.6023%" y="1071.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.57%)</title><rect x="13.3523%" y="1045" width="0.5682%" height="15" fill="rgb(210,204,4)" fg:x="47" fg:w="2"/><text x="13.6023%" y="1055.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.57%)</title><rect x="13.3523%" y="1029" width="0.5682%" height="15" fill="rgb(210,204,4)" fg:x="47" fg:w="2"/><text x="13.6023%" y="1039.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.57%)</title><rect x="13.3523%" y="1013" width="0.5682%" height="15" fill="rgb(210,204,4)" fg:x="47" fg:w="2"/><text x="13.6023%" y="1023.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.57%)</title><rect x="13.3523%" y="997" width="0.5682%" height="15" fill="rgb(210,204,4)" fg:x="47" fg:w="2"/><text x="13.6023%" y="1007.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.57%)</title><rect x="13.3523%" y="981" width="0.5682%" height="15" fill="rgb(210,204,4)" fg:x="47" fg:w="2"/><text x="13.6023%" y="991.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.57%)</title><rect x="13.3523%" y="965" width="0.5682%" height="15" fill="rgb(210,204,4)" fg:x="47" fg:w="2"/><text x="13.6023%" y="975.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="13.9205%" y="965" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="49" fg:w="1"/><text x="14.1705%" y="975.50"></text></g><g><title>std::sys::unix::thread::guard::current (7 samples, 1.99%)</title><rect x="12.5000%" y="1285" width="1.9886%" height="15" fill="rgb(225,215,43)" fg:x="44" fg:w="7"/><text x="12.7500%" y="1295.50">s..</text></g><g><title>__pthread_getattr_np (7 samples, 1.99%)</title><rect x="12.5000%" y="1269" width="1.9886%" height="15" fill="rgb(220,69,37)" fg:x="44" fg:w="7"/><text x="12.7500%" y="1279.50">_..</text></g><g><title>__GI___libc_malloc (6 samples, 1.70%)</title><rect x="12.7841%" y="1253" width="1.7045%" height="15" fill="rgb(206,112,53)" fg:x="45" fg:w="6"/><text x="13.0341%" y="1263.50"></text></g><g><title>tcache_init (6 samples, 1.70%)</title><rect x="12.7841%" y="1237" width="1.7045%" height="15" fill="rgb(245,6,4)" fg:x="45" fg:w="6"/><text x="13.0341%" y="1247.50"></text></g><g><title>tcache_init (6 samples, 1.70%)</title><rect x="12.7841%" y="1221" width="1.7045%" height="15" fill="rgb(245,6,4)" fg:x="45" fg:w="6"/><text x="13.0341%" y="1231.50"></text></g><g><title>arena_get2 (6 samples, 1.70%)</title><rect x="12.7841%" y="1205" width="1.7045%" height="15" fill="rgb(215,227,22)" fg:x="45" fg:w="6"/><text x="13.0341%" y="1215.50"></text></g><g><title>arena_get2 (6 samples, 1.70%)</title><rect x="12.7841%" y="1189" width="1.7045%" height="15" fill="rgb(215,227,22)" fg:x="45" fg:w="6"/><text x="13.0341%" y="1199.50"></text></g><g><title>_int_new_arena (6 samples, 1.70%)</title><rect x="12.7841%" y="1173" width="1.7045%" height="15" fill="rgb(207,136,22)" fg:x="45" fg:w="6"/><text x="13.0341%" y="1183.50"></text></g><g><title>new_heap (6 samples, 1.70%)</title><rect x="12.7841%" y="1157" width="1.7045%" height="15" fill="rgb(205,205,9)" fg:x="45" fg:w="6"/><text x="13.0341%" y="1167.50"></text></g><g><title>alloc_new_heap (6 samples, 1.70%)</title><rect x="12.7841%" y="1141" width="1.7045%" height="15" fill="rgb(234,86,40)" fg:x="45" fg:w="6"/><text x="13.0341%" y="1151.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.57%)</title><rect x="13.9205%" y="1125" width="0.5682%" height="15" fill="rgb(210,204,4)" fg:x="49" fg:w="2"/><text x="14.1705%" y="1135.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.57%)</title><rect x="13.9205%" y="1109" width="0.5682%" height="15" fill="rgb(210,204,4)" fg:x="49" fg:w="2"/><text x="14.1705%" y="1119.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.57%)</title><rect x="13.9205%" y="1093" width="0.5682%" height="15" fill="rgb(210,204,4)" fg:x="49" fg:w="2"/><text x="14.1705%" y="1103.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.57%)</title><rect x="13.9205%" y="1077" width="0.5682%" height="15" fill="rgb(210,204,4)" fg:x="49" fg:w="2"/><text x="14.1705%" y="1087.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.57%)</title><rect x="13.9205%" y="1061" width="0.5682%" height="15" fill="rgb(210,204,4)" fg:x="49" fg:w="2"/><text x="14.1705%" y="1071.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.57%)</title><rect x="13.9205%" y="1045" width="0.5682%" height="15" fill="rgb(210,204,4)" fg:x="49" fg:w="2"/><text x="14.1705%" y="1055.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.57%)</title><rect x="13.9205%" y="1029" width="0.5682%" height="15" fill="rgb(210,204,4)" fg:x="49" fg:w="2"/><text x="14.1705%" y="1039.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.57%)</title><rect x="13.9205%" y="1013" width="0.5682%" height="15" fill="rgb(210,204,4)" fg:x="49" fg:w="2"/><text x="14.1705%" y="1023.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.57%)</title><rect x="13.9205%" y="997" width="0.5682%" height="15" fill="rgb(210,204,4)" fg:x="49" fg:w="2"/><text x="14.1705%" y="1007.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.57%)</title><rect x="13.9205%" y="981" width="0.5682%" height="15" fill="rgb(210,204,4)" fg:x="49" fg:w="2"/><text x="14.1705%" y="991.50"></text></g><g><title>s4lib::readers::evtxreader::EvtxReader::next (1 samples, 0.28%)</title><rect x="14.4886%" y="1141" width="0.2841%" height="15" fill="rgb(214,202,9)" fg:x="51" fg:w="1"/><text x="14.7386%" y="1151.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::pop_first (1 samples, 0.28%)</title><rect x="14.4886%" y="1125" width="0.2841%" height="15" fill="rgb(249,80,30)" fg:x="51" fg:w="1"/><text x="14.7386%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.28%)</title><rect x="14.4886%" y="1109" width="0.2841%" height="15" fill="rgb(254,35,30)" fg:x="51" fg:w="1"/><text x="14.7386%" y="1119.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::pop_first::{{closure}} (1 samples, 0.28%)</title><rect x="14.4886%" y="1093" width="0.2841%" height="15" fill="rgb(226,76,46)" fg:x="51" fg:w="1"/><text x="14.7386%" y="1103.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::remove_entry (1 samples, 0.28%)</title><rect x="14.4886%" y="1077" width="0.2841%" height="15" fill="rgb(227,63,43)" fg:x="51" fg:w="1"/><text x="14.7386%" y="1087.50"></text></g><g><title>s4lib::readers::evtxreader::EvtxReader::new (1 samples, 0.28%)</title><rect x="14.7727%" y="1141" width="0.2841%" height="15" fill="rgb(218,52,48)" fg:x="52" fg:w="1"/><text x="15.0227%" y="1151.50"></text></g><g><title>evtx::evtx_parser::ParserSettings::num_threads (1 samples, 0.28%)</title><rect x="14.7727%" y="1125" width="0.2841%" height="15" fill="rgb(222,226,30)" fg:x="52" fg:w="1"/><text x="15.0227%" y="1135.50"></text></g><g><title>rayon_core::current_num_threads (1 samples, 0.28%)</title><rect x="14.7727%" y="1109" width="0.2841%" height="15" fill="rgb(245,149,53)" fg:x="52" fg:w="1"/><text x="15.0227%" y="1119.50"></text></g><g><title>rayon_core::registry::Registry::current_num_threads (1 samples, 0.28%)</title><rect x="14.7727%" y="1093" width="0.2841%" height="15" fill="rgb(244,208,25)" fg:x="52" fg:w="1"/><text x="15.0227%" y="1103.50"></text></g><g><title>rayon_core::registry::global_registry (1 samples, 0.28%)</title><rect x="14.7727%" y="1077" width="0.2841%" height="15" fill="rgb(225,53,5)" fg:x="52" fg:w="1"/><text x="15.0227%" y="1087.50"></text></g><g><title>rayon_core::registry::set_global_registry (1 samples, 0.28%)</title><rect x="14.7727%" y="1061" width="0.2841%" height="15" fill="rgb(213,90,2)" fg:x="52" fg:w="1"/><text x="15.0227%" y="1071.50"></text></g><g><title>std::sync::once::Once::call_once (1 samples, 0.28%)</title><rect x="14.7727%" y="1045" width="0.2841%" height="15" fill="rgb(247,17,47)" fg:x="52" fg:w="1"/><text x="15.0227%" y="1055.50"></text></g><g><title>std::sys_common::once::futex::Once::call (1 samples, 0.28%)</title><rect x="14.7727%" y="1029" width="0.2841%" height="15" fill="rgb(246,168,49)" fg:x="52" fg:w="1"/><text x="15.0227%" y="1039.50"></text></g><g><title>std::sync::once::Once::call_once::{{closure}} (1 samples, 0.28%)</title><rect x="14.7727%" y="1013" width="0.2841%" height="15" fill="rgb(237,63,35)" fg:x="52" fg:w="1"/><text x="15.0227%" y="1023.50"></text></g><g><title>rayon_core::registry::set_global_registry::{{closure}} (1 samples, 0.28%)</title><rect x="14.7727%" y="997" width="0.2841%" height="15" fill="rgb(239,182,17)" fg:x="52" fg:w="1"/><text x="15.0227%" y="1007.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.28%)</title><rect x="14.7727%" y="981" width="0.2841%" height="15" fill="rgb(210,80,10)" fg:x="52" fg:w="1"/><text x="15.0227%" y="991.50"></text></g><g><title>rayon_core::registry::default_global_registry (1 samples, 0.28%)</title><rect x="14.7727%" y="965" width="0.2841%" height="15" fill="rgb(210,70,3)" fg:x="52" fg:w="1"/><text x="15.0227%" y="975.50"></text></g><g><title>rayon_core::registry::Registry::new (1 samples, 0.28%)</title><rect x="14.7727%" y="949" width="0.2841%" height="15" fill="rgb(225,193,38)" fg:x="52" fg:w="1"/><text x="15.0227%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::unzip (1 samples, 0.28%)</title><rect x="14.7727%" y="933" width="0.2841%" height="15" fill="rgb(224,125,36)" fg:x="52" fg:w="1"/><text x="15.0227%" y="943.50"></text></g><g><title>&lt;(ExtendA,ExtendB) as core::iter::traits::collect::Extend&lt;(A,B)&gt;&gt;::extend (1 samples, 0.28%)</title><rect x="14.7727%" y="917" width="0.2841%" height="15" fill="rgb(228,139,8)" fg:x="52" fg:w="1"/><text x="15.0227%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.28%)</title><rect x="14.7727%" y="901" width="0.2841%" height="15" fill="rgb(242,69,50)" fg:x="52" fg:w="1"/><text x="15.0227%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.28%)</title><rect x="14.7727%" y="885" width="0.2841%" height="15" fill="rgb(214,12,39)" fg:x="52" fg:w="1"/><text x="15.0227%" y="895.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.28%)</title><rect x="14.7727%" y="869" width="0.2841%" height="15" fill="rgb(253,112,1)" fg:x="52" fg:w="1"/><text x="15.0227%" y="879.50"></text></g><g><title>rayon_core::registry::Registry::new::{{closure}} (1 samples, 0.28%)</title><rect x="14.7727%" y="853" width="0.2841%" height="15" fill="rgb(211,58,40)" fg:x="52" fg:w="1"/><text x="15.0227%" y="863.50"></text></g><g><title>crossbeam_deque::deque::Worker&lt;T&gt;::new_fifo (1 samples, 0.28%)</title><rect x="14.7727%" y="837" width="0.2841%" height="15" fill="rgb(254,5,50)" fg:x="52" fg:w="1"/><text x="15.0227%" y="847.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (1 samples, 0.28%)</title><rect x="14.7727%" y="821" width="0.2841%" height="15" fill="rgb(221,10,3)" fg:x="52" fg:w="1"/><text x="15.0227%" y="831.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.28%)</title><rect x="14.7727%" y="805" width="0.2841%" height="15" fill="rgb(209,114,30)" fg:x="52" fg:w="1"/><text x="15.0227%" y="815.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.28%)</title><rect x="14.7727%" y="789" width="0.2841%" height="15" fill="rgb(248,129,10)" fg:x="52" fg:w="1"/><text x="15.0227%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.28%)</title><rect x="14.7727%" y="773" width="0.2841%" height="15" fill="rgb(231,114,21)" fg:x="52" fg:w="1"/><text x="15.0227%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.28%)</title><rect x="14.7727%" y="757" width="0.2841%" height="15" fill="rgb(238,209,2)" fg:x="52" fg:w="1"/><text x="15.0227%" y="767.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.28%)</title><rect x="14.7727%" y="741" width="0.2841%" height="15" fill="rgb(253,135,41)" fg:x="52" fg:w="1"/><text x="15.0227%" y="751.50"></text></g><g><title>__rdl_alloc (1 samples, 0.28%)</title><rect x="14.7727%" y="725" width="0.2841%" height="15" fill="rgb(241,201,43)" fg:x="52" fg:w="1"/><text x="15.0227%" y="735.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.28%)</title><rect x="14.7727%" y="709" width="0.2841%" height="15" fill="rgb(221,138,53)" fg:x="52" fg:w="1"/><text x="15.0227%" y="719.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (1 samples, 0.28%)</title><rect x="14.7727%" y="693" width="0.2841%" height="15" fill="rgb(242,5,51)" fg:x="52" fg:w="1"/><text x="15.0227%" y="703.50"></text></g><g><title>__posix_memalign (1 samples, 0.28%)</title><rect x="14.7727%" y="677" width="0.2841%" height="15" fill="rgb(233,116,13)" fg:x="52" fg:w="1"/><text x="15.0227%" y="687.50"></text></g><g><title>__posix_memalign (1 samples, 0.28%)</title><rect x="14.7727%" y="661" width="0.2841%" height="15" fill="rgb(233,116,13)" fg:x="52" fg:w="1"/><text x="15.0227%" y="671.50"></text></g><g><title>_mid_memalign (1 samples, 0.28%)</title><rect x="14.7727%" y="645" width="0.2841%" height="15" fill="rgb(205,227,42)" fg:x="52" fg:w="1"/><text x="15.0227%" y="655.50"></text></g><g><title>_int_memalign (1 samples, 0.28%)</title><rect x="14.7727%" y="629" width="0.2841%" height="15" fill="rgb(210,120,21)" fg:x="52" fg:w="1"/><text x="15.0227%" y="639.50"></text></g><g><title>_int_malloc (1 samples, 0.28%)</title><rect x="14.7727%" y="613" width="0.2841%" height="15" fill="rgb(222,219,51)" fg:x="52" fg:w="1"/><text x="15.0227%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="14.7727%" y="597" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="52" fg:w="1"/><text x="15.0227%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="14.7727%" y="581" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="52" fg:w="1"/><text x="15.0227%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="14.7727%" y="565" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="52" fg:w="1"/><text x="15.0227%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="14.7727%" y="549" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="52" fg:w="1"/><text x="15.0227%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="14.7727%" y="533" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="52" fg:w="1"/><text x="15.0227%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="14.7727%" y="517" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="52" fg:w="1"/><text x="15.0227%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="14.7727%" y="501" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="52" fg:w="1"/><text x="15.0227%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="14.7727%" y="485" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="52" fg:w="1"/><text x="15.0227%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="14.7727%" y="469" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="52" fg:w="1"/><text x="15.0227%" y="479.50"></text></g><g><title>s4lib::data::evtx::Evtx::from_evtxrs (1 samples, 0.28%)</title><rect x="15.0568%" y="1125" width="0.2841%" height="15" fill="rgb(227,171,4)" fg:x="53" fg:w="1"/><text x="15.3068%" y="1135.50"></text></g><g><title>&lt;alloc::string::String as core::ops::arith::Add&lt;&amp;str&gt;&gt;::add (1 samples, 0.28%)</title><rect x="15.0568%" y="1109" width="0.2841%" height="15" fill="rgb(211,36,25)" fg:x="53" fg:w="1"/><text x="15.3068%" y="1119.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.28%)</title><rect x="15.0568%" y="1093" width="0.2841%" height="15" fill="rgb(242,162,39)" fg:x="53" fg:w="1"/><text x="15.3068%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.28%)</title><rect x="15.0568%" y="1077" width="0.2841%" height="15" fill="rgb(243,52,34)" fg:x="53" fg:w="1"/><text x="15.3068%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.28%)</title><rect x="15.0568%" y="1061" width="0.2841%" height="15" fill="rgb(224,207,30)" fg:x="53" fg:w="1"/><text x="15.3068%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.28%)</title><rect x="15.0568%" y="1045" width="0.2841%" height="15" fill="rgb(251,49,54)" fg:x="53" fg:w="1"/><text x="15.3068%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.28%)</title><rect x="15.0568%" y="1029" width="0.2841%" height="15" fill="rgb(212,159,3)" fg:x="53" fg:w="1"/><text x="15.3068%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.28%)</title><rect x="15.0568%" y="1013" width="0.2841%" height="15" fill="rgb(231,142,39)" fg:x="53" fg:w="1"/><text x="15.3068%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.28%)</title><rect x="15.0568%" y="997" width="0.2841%" height="15" fill="rgb(249,2,22)" fg:x="53" fg:w="1"/><text x="15.3068%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.28%)</title><rect x="15.0568%" y="981" width="0.2841%" height="15" fill="rgb(254,53,35)" fg:x="53" fg:w="1"/><text x="15.3068%" y="991.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.28%)</title><rect x="15.0568%" y="965" width="0.2841%" height="15" fill="rgb(237,133,22)" fg:x="53" fg:w="1"/><text x="15.3068%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.28%)</title><rect x="15.0568%" y="949" width="0.2841%" height="15" fill="rgb(237,156,49)" fg:x="53" fg:w="1"/><text x="15.3068%" y="959.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.28%)</title><rect x="15.0568%" y="933" width="0.2841%" height="15" fill="rgb(214,150,36)" fg:x="53" fg:w="1"/><text x="15.3068%" y="943.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.28%)</title><rect x="15.0568%" y="917" width="0.2841%" height="15" fill="rgb(254,47,34)" fg:x="53" fg:w="1"/><text x="15.3068%" y="927.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.28%)</title><rect x="15.0568%" y="901" width="0.2841%" height="15" fill="rgb(254,73,4)" fg:x="53" fg:w="1"/><text x="15.3068%" y="911.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="15.3409%" y="661" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="54" fg:w="1"/><text x="15.5909%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="15.3409%" y="645" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="54" fg:w="1"/><text x="15.5909%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="15.3409%" y="629" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="54" fg:w="1"/><text x="15.5909%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="15.3409%" y="613" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="54" fg:w="1"/><text x="15.5909%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="15.3409%" y="597" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="54" fg:w="1"/><text x="15.5909%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="15.3409%" y="581" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="54" fg:w="1"/><text x="15.5909%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="15.3409%" y="565" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="54" fg:w="1"/><text x="15.5909%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="15.3409%" y="549" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="54" fg:w="1"/><text x="15.5909%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="15.3409%" y="533" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="54" fg:w="1"/><text x="15.5909%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="15.3409%" y="517" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="54" fg:w="1"/><text x="15.5909%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="15.3409%" y="501" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="54" fg:w="1"/><text x="15.5909%" y="511.50"></text></g><g><title>std::io::Read::read_to_end (5 samples, 1.42%)</title><rect x="15.3409%" y="933" width="1.4205%" height="15" fill="rgb(223,102,22)" fg:x="54" fg:w="5"/><text x="15.5909%" y="943.50"></text></g><g><title>std::io::default_read_to_end (5 samples, 1.42%)</title><rect x="15.3409%" y="917" width="1.4205%" height="15" fill="rgb(213,103,49)" fg:x="54" fg:w="5"/><text x="15.5909%" y="927.50"></text></g><g><title>&lt;std::io::Take&lt;T&gt; as std::io::Read&gt;::read_buf (5 samples, 1.42%)</title><rect x="15.3409%" y="901" width="1.4205%" height="15" fill="rgb(217,31,20)" fg:x="54" fg:w="5"/><text x="15.5909%" y="911.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read_buf (5 samples, 1.42%)</title><rect x="15.3409%" y="885" width="1.4205%" height="15" fill="rgb(211,45,31)" fg:x="54" fg:w="5"/><text x="15.5909%" y="895.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_buf (5 samples, 1.42%)</title><rect x="15.3409%" y="869" width="1.4205%" height="15" fill="rgb(231,30,27)" fg:x="54" fg:w="5"/><text x="15.5909%" y="879.50"></text></g><g><title>std::sys::unix::fs::File::read_buf (5 samples, 1.42%)</title><rect x="15.3409%" y="853" width="1.4205%" height="15" fill="rgb(240,23,8)" fg:x="54" fg:w="5"/><text x="15.5909%" y="863.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read_buf (5 samples, 1.42%)</title><rect x="15.3409%" y="837" width="1.4205%" height="15" fill="rgb(233,98,11)" fg:x="54" fg:w="5"/><text x="15.5909%" y="847.50"></text></g><g><title>__GI___libc_read (5 samples, 1.42%)</title><rect x="15.3409%" y="821" width="1.4205%" height="15" fill="rgb(206,204,24)" fg:x="54" fg:w="5"/><text x="15.5909%" y="831.50"></text></g><g><title>__GI___libc_read (5 samples, 1.42%)</title><rect x="15.3409%" y="805" width="1.4205%" height="15" fill="rgb(206,204,24)" fg:x="54" fg:w="5"/><text x="15.5909%" y="815.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 1.42%)</title><rect x="15.3409%" y="789" width="1.4205%" height="15" fill="rgb(210,204,4)" fg:x="54" fg:w="5"/><text x="15.5909%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 1.42%)</title><rect x="15.3409%" y="773" width="1.4205%" height="15" fill="rgb(210,204,4)" fg:x="54" fg:w="5"/><text x="15.5909%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 1.42%)</title><rect x="15.3409%" y="757" width="1.4205%" height="15" fill="rgb(210,204,4)" fg:x="54" fg:w="5"/><text x="15.5909%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 1.42%)</title><rect x="15.3409%" y="741" width="1.4205%" height="15" fill="rgb(210,204,4)" fg:x="54" fg:w="5"/><text x="15.5909%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 1.42%)</title><rect x="15.3409%" y="725" width="1.4205%" height="15" fill="rgb(210,204,4)" fg:x="54" fg:w="5"/><text x="15.5909%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 1.42%)</title><rect x="15.3409%" y="709" width="1.4205%" height="15" fill="rgb(210,204,4)" fg:x="54" fg:w="5"/><text x="15.5909%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 1.42%)</title><rect x="15.3409%" y="693" width="1.4205%" height="15" fill="rgb(210,204,4)" fg:x="54" fg:w="5"/><text x="15.5909%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 1.42%)</title><rect x="15.3409%" y="677" width="1.4205%" height="15" fill="rgb(210,204,4)" fg:x="54" fg:w="5"/><text x="15.5909%" y="687.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 4.26%)</title><rect x="16.7614%" y="917" width="4.2614%" height="15" fill="rgb(236,210,2)" fg:x="59" fg:w="15"/><text x="17.0114%" y="927.50">&lt;core..</text></g><g><title>s4lib::readers::evtxreader::EvtxReader::analyze (32 samples, 9.09%)</title><rect x="15.0568%" y="1141" width="9.0909%" height="15" fill="rgb(237,226,53)" fg:x="53" fg:w="32"/><text x="15.3068%" y="1151.50">s4lib::reader..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 8.81%)</title><rect x="15.3409%" y="1125" width="8.8068%" height="15" fill="rgb(210,50,14)" fg:x="54" fg:w="31"/><text x="15.5909%" y="1135.50">&lt;core::iter:..</text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 8.81%)</title><rect x="15.3409%" y="1109" width="8.8068%" height="15" fill="rgb(232,63,21)" fg:x="54" fg:w="31"/><text x="15.5909%" y="1119.50">&lt;core::iter:..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 8.81%)</title><rect x="15.3409%" y="1093" width="8.8068%" height="15" fill="rgb(227,24,19)" fg:x="54" fg:w="31"/><text x="15.5909%" y="1103.50">&lt;core::iter:..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 8.81%)</title><rect x="15.3409%" y="1077" width="8.8068%" height="15" fill="rgb(222,49,46)" fg:x="54" fg:w="31"/><text x="15.5909%" y="1087.50">&lt;core::iter:..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (31 samples, 8.81%)</title><rect x="15.3409%" y="1061" width="8.8068%" height="15" fill="rgb(236,21,33)" fg:x="54" fg:w="31"/><text x="15.5909%" y="1071.50">&lt;core::iter:..</text></g><g><title>core::iter::adapters::fuse::and_then_or_clear (31 samples, 8.81%)</title><rect x="15.3409%" y="1045" width="8.8068%" height="15" fill="rgb(213,161,31)" fg:x="54" fg:w="31"/><text x="15.5909%" y="1055.50">core::iter::..</text></g><g><title>core::ops::function::FnOnce::call_once (31 samples, 8.81%)</title><rect x="15.3409%" y="1029" width="8.8068%" height="15" fill="rgb(210,80,10)" fg:x="54" fg:w="31"/><text x="15.5909%" y="1039.50">core::ops::f..</text></g><g><title>&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 8.81%)</title><rect x="15.3409%" y="1013" width="8.8068%" height="15" fill="rgb(219,209,28)" fg:x="54" fg:w="31"/><text x="15.5909%" y="1023.50">&lt;core::iter:..</text></g><g><title>evtx::evtx_parser::EvtxParser&lt;T&gt;::serialized_records::{{closure}} (31 samples, 8.81%)</title><rect x="15.3409%" y="997" width="8.8068%" height="15" fill="rgb(219,138,9)" fg:x="54" fg:w="31"/><text x="15.5909%" y="1007.50">evtx::evtx_p..</text></g><g><title>&lt;evtx::evtx_parser::IterChunks&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 8.81%)</title><rect x="15.3409%" y="981" width="8.8068%" height="15" fill="rgb(249,158,30)" fg:x="54" fg:w="31"/><text x="15.5909%" y="991.50">&lt;evtx::evtx_..</text></g><g><title>evtx::evtx_parser::EvtxParser&lt;T&gt;::find_next_chunk (31 samples, 8.81%)</title><rect x="15.3409%" y="965" width="8.8068%" height="15" fill="rgb(217,63,49)" fg:x="54" fg:w="31"/><text x="15.5909%" y="975.50">evtx::evtx_p..</text></g><g><title>evtx::evtx_parser::EvtxParser&lt;T&gt;::allocate_chunk (31 samples, 8.81%)</title><rect x="15.3409%" y="949" width="8.8068%" height="15" fill="rgb(231,43,53)" fg:x="54" fg:w="31"/><text x="15.5909%" y="959.50">evtx::evtx_p..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::all (26 samples, 7.39%)</title><rect x="16.7614%" y="933" width="7.3864%" height="15" fill="rgb(222,109,50)" fg:x="59" fg:w="26"/><text x="17.0114%" y="943.50">&lt;core::sli..</text></g><g><title>s4::processing_loop::{{closure}} (35 samples, 9.94%)</title><rect x="14.4886%" y="1189" width="9.9432%" height="15" fill="rgb(245,19,23)" fg:x="51" fg:w="35"/><text x="14.7386%" y="1199.50">s4::processing..</text></g><g><title>s4::exec_fileprocessor_thread (35 samples, 9.94%)</title><rect x="14.4886%" y="1173" width="9.9432%" height="15" fill="rgb(245,49,27)" fg:x="51" fg:w="35"/><text x="14.7386%" y="1183.50">s4::exec_filep..</text></g><g><title>s4::exec_evtxprocessor (35 samples, 9.94%)</title><rect x="14.4886%" y="1157" width="9.9432%" height="15" fill="rgb(244,164,34)" fg:x="51" fg:w="35"/><text x="14.7386%" y="1167.50">s4::exec_evtxp..</text></g><g><title>s4::chan_send (1 samples, 0.28%)</title><rect x="24.1477%" y="1141" width="0.2841%" height="15" fill="rgb(244,11,25)" fg:x="85" fg:w="1"/><text x="24.3977%" y="1151.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (1 samples, 0.28%)</title><rect x="24.1477%" y="1125" width="0.2841%" height="15" fill="rgb(211,156,23)" fg:x="85" fg:w="1"/><text x="24.3977%" y="1135.50"></text></g><g><title>crossbeam_channel::flavors::array::Channel&lt;T&gt;::send (1 samples, 0.28%)</title><rect x="24.1477%" y="1109" width="0.2841%" height="15" fill="rgb(239,129,18)" fg:x="85" fg:w="1"/><text x="24.3977%" y="1119.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (1 samples, 0.28%)</title><rect x="24.1477%" y="1093" width="0.2841%" height="15" fill="rgb(224,200,25)" fg:x="85" fg:w="1"/><text x="24.3977%" y="1103.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (1 samples, 0.28%)</title><rect x="24.1477%" y="1077" width="0.2841%" height="15" fill="rgb(242,61,0)" fg:x="85" fg:w="1"/><text x="24.3977%" y="1087.50"></text></g><g><title>core::hint::spin_loop (1 samples, 0.28%)</title><rect x="24.1477%" y="1061" width="0.2841%" height="15" fill="rgb(241,144,6)" fg:x="85" fg:w="1"/><text x="24.3977%" y="1071.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (1 samples, 0.28%)</title><rect x="24.1477%" y="1045" width="0.2841%" height="15" fill="rgb(213,129,2)" fg:x="85" fg:w="1"/><text x="24.3977%" y="1055.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.85%)</title><rect x="24.4318%" y="773" width="0.8523%" height="15" fill="rgb(210,204,4)" fg:x="86" fg:w="3"/><text x="24.6818%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.85%)</title><rect x="24.4318%" y="757" width="0.8523%" height="15" fill="rgb(210,204,4)" fg:x="86" fg:w="3"/><text x="24.6818%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.85%)</title><rect x="24.4318%" y="741" width="0.8523%" height="15" fill="rgb(210,204,4)" fg:x="86" fg:w="3"/><text x="24.6818%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.85%)</title><rect x="24.4318%" y="725" width="0.8523%" height="15" fill="rgb(210,204,4)" fg:x="86" fg:w="3"/><text x="24.6818%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.85%)</title><rect x="24.4318%" y="709" width="0.8523%" height="15" fill="rgb(210,204,4)" fg:x="86" fg:w="3"/><text x="24.6818%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.85%)</title><rect x="24.4318%" y="693" width="0.8523%" height="15" fill="rgb(210,204,4)" fg:x="86" fg:w="3"/><text x="24.6818%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.85%)</title><rect x="24.4318%" y="677" width="0.8523%" height="15" fill="rgb(210,204,4)" fg:x="86" fg:w="3"/><text x="24.6818%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.85%)</title><rect x="24.4318%" y="661" width="0.8523%" height="15" fill="rgb(210,204,4)" fg:x="86" fg:w="3"/><text x="24.6818%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.85%)</title><rect x="24.4318%" y="645" width="0.8523%" height="15" fill="rgb(210,204,4)" fg:x="86" fg:w="3"/><text x="24.6818%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 1.14%)</title><rect x="24.4318%" y="789" width="1.1364%" height="15" fill="rgb(210,204,4)" fg:x="86" fg:w="4"/><text x="24.6818%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 1.42%)</title><rect x="24.4318%" y="805" width="1.4205%" height="15" fill="rgb(210,204,4)" fg:x="86" fg:w="5"/><text x="24.6818%" y="815.50"></text></g><g><title>[[kernel.kallsyms]] (53 samples, 15.06%)</title><rect x="24.4318%" y="821" width="15.0568%" height="15" fill="rgb(210,204,4)" fg:x="86" fg:w="53"/><text x="24.6818%" y="831.50">[[kernel.kallsyms]]</text></g><g><title>[[kernel.kallsyms]] (65 samples, 18.47%)</title><rect x="24.4318%" y="837" width="18.4659%" height="15" fill="rgb(210,204,4)" fg:x="86" fg:w="65"/><text x="24.6818%" y="847.50">[[kernel.kallsyms]]</text></g><g><title>rayon_core::sleep::Sleep::no_work_found (87 samples, 24.72%)</title><rect x="24.4318%" y="1093" width="24.7159%" height="15" fill="rgb(235,130,36)" fg:x="86" fg:w="87"/><text x="24.6818%" y="1103.50">rayon_core::sleep::Sleep::no_work_found</text></g><g><title>rayon_core::sleep::Sleep::sleep (87 samples, 24.72%)</title><rect x="24.4318%" y="1077" width="24.7159%" height="15" fill="rgb(228,168,25)" fg:x="86" fg:w="87"/><text x="24.6818%" y="1087.50">rayon_core::sleep::Sleep::sleep</text></g><g><title>std::sync::condvar::Condvar::wait (87 samples, 24.72%)</title><rect x="24.4318%" y="1061" width="24.7159%" height="15" fill="rgb(241,217,35)" fg:x="86" fg:w="87"/><text x="24.6818%" y="1071.50">std::sync::condvar::Condvar::wait</text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait (87 samples, 24.72%)</title><rect x="24.4318%" y="1045" width="24.7159%" height="15" fill="rgb(245,28,6)" fg:x="86" fg:w="87"/><text x="24.6818%" y="1055.50">std::sys::unix::locks::futex_condvar::C..</text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (87 samples, 24.72%)</title><rect x="24.4318%" y="1029" width="24.7159%" height="15" fill="rgb(217,80,12)" fg:x="86" fg:w="87"/><text x="24.6818%" y="1039.50">std::sys::unix::locks::futex_condvar::C..</text></g><g><title>std::sys::unix::futex::futex_wait (87 samples, 24.72%)</title><rect x="24.4318%" y="1013" width="24.7159%" height="15" fill="rgb(219,16,26)" fg:x="86" fg:w="87"/><text x="24.6818%" y="1023.50">std::sys::unix::futex::futex_wait</text></g><g><title>syscall (87 samples, 24.72%)</title><rect x="24.4318%" y="997" width="24.7159%" height="15" fill="rgb(207,84,5)" fg:x="86" fg:w="87"/><text x="24.6818%" y="1007.50">syscall</text></g><g><title>[[kernel.kallsyms]] (87 samples, 24.72%)</title><rect x="24.4318%" y="981" width="24.7159%" height="15" fill="rgb(210,204,4)" fg:x="86" fg:w="87"/><text x="24.6818%" y="991.50">[[kernel.kallsyms]]</text></g><g><title>[[kernel.kallsyms]] (87 samples, 24.72%)</title><rect x="24.4318%" y="965" width="24.7159%" height="15" fill="rgb(210,204,4)" fg:x="86" fg:w="87"/><text x="24.6818%" y="975.50">[[kernel.kallsyms]]</text></g><g><title>[[kernel.kallsyms]] (87 samples, 24.72%)</title><rect x="24.4318%" y="949" width="24.7159%" height="15" fill="rgb(210,204,4)" fg:x="86" fg:w="87"/><text x="24.6818%" y="959.50">[[kernel.kallsyms]]</text></g><g><title>[[kernel.kallsyms]] (87 samples, 24.72%)</title><rect x="24.4318%" y="933" width="24.7159%" height="15" fill="rgb(210,204,4)" fg:x="86" fg:w="87"/><text x="24.6818%" y="943.50">[[kernel.kallsyms]]</text></g><g><title>[[kernel.kallsyms]] (87 samples, 24.72%)</title><rect x="24.4318%" y="917" width="24.7159%" height="15" fill="rgb(210,204,4)" fg:x="86" fg:w="87"/><text x="24.6818%" y="927.50">[[kernel.kallsyms]]</text></g><g><title>[[kernel.kallsyms]] (87 samples, 24.72%)</title><rect x="24.4318%" y="901" width="24.7159%" height="15" fill="rgb(210,204,4)" fg:x="86" fg:w="87"/><text x="24.6818%" y="911.50">[[kernel.kallsyms]]</text></g><g><title>[[kernel.kallsyms]] (87 samples, 24.72%)</title><rect x="24.4318%" y="885" width="24.7159%" height="15" fill="rgb(210,204,4)" fg:x="86" fg:w="87"/><text x="24.6818%" y="895.50">[[kernel.kallsyms]]</text></g><g><title>[[kernel.kallsyms]] (87 samples, 24.72%)</title><rect x="24.4318%" y="869" width="24.7159%" height="15" fill="rgb(210,204,4)" fg:x="86" fg:w="87"/><text x="24.6818%" y="879.50">[[kernel.kallsyms]]</text></g><g><title>[[kernel.kallsyms]] (87 samples, 24.72%)</title><rect x="24.4318%" y="853" width="24.7159%" height="15" fill="rgb(210,204,4)" fg:x="86" fg:w="87"/><text x="24.6818%" y="863.50">[[kernel.kallsyms]]</text></g><g><title>rayon_core::registry::WorkerThread::find_work (1 samples, 0.28%)</title><rect x="49.1477%" y="1093" width="0.2841%" height="15" fill="rgb(219,45,22)" fg:x="173" fg:w="1"/><text x="49.3977%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (1 samples, 0.28%)</title><rect x="49.1477%" y="1077" width="0.2841%" height="15" fill="rgb(211,19,43)" fg:x="173" fg:w="1"/><text x="49.3977%" y="1087.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work::{{closure}} (1 samples, 0.28%)</title><rect x="49.1477%" y="1061" width="0.2841%" height="15" fill="rgb(215,140,22)" fg:x="173" fg:w="1"/><text x="49.3977%" y="1071.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal (1 samples, 0.28%)</title><rect x="49.1477%" y="1045" width="0.2841%" height="15" fill="rgb(238,8,51)" fg:x="173" fg:w="1"/><text x="49.3977%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (1 samples, 0.28%)</title><rect x="49.1477%" y="1029" width="0.2841%" height="15" fill="rgb(240,15,51)" fg:x="173" fg:w="1"/><text x="49.3977%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.28%)</title><rect x="49.1477%" y="1013" width="0.2841%" height="15" fill="rgb(248,187,13)" fg:x="173" fg:w="1"/><text x="49.3977%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.28%)</title><rect x="49.1477%" y="997" width="0.2841%" height="15" fill="rgb(223,177,46)" fg:x="173" fg:w="1"/><text x="49.3977%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.28%)</title><rect x="49.1477%" y="981" width="0.2841%" height="15" fill="rgb(223,137,46)" fg:x="173" fg:w="1"/><text x="49.3977%" y="991.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (1 samples, 0.28%)</title><rect x="49.1477%" y="965" width="0.2841%" height="15" fill="rgb(214,28,9)" fg:x="173" fg:w="1"/><text x="49.3977%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (1 samples, 0.28%)</title><rect x="49.1477%" y="949" width="0.2841%" height="15" fill="rgb(219,3,4)" fg:x="173" fg:w="1"/><text x="49.3977%" y="959.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::{{closure}} (1 samples, 0.28%)</title><rect x="49.1477%" y="933" width="0.2841%" height="15" fill="rgb(207,109,22)" fg:x="173" fg:w="1"/><text x="49.3977%" y="943.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (1 samples, 0.28%)</title><rect x="49.1477%" y="917" width="0.2841%" height="15" fill="rgb(206,151,14)" fg:x="173" fg:w="1"/><text x="49.3977%" y="927.50"></text></g><g><title>crossbeam_epoch::default::pin (1 samples, 0.28%)</title><rect x="49.1477%" y="901" width="0.2841%" height="15" fill="rgb(231,15,1)" fg:x="173" fg:w="1"/><text x="49.3977%" y="911.50"></text></g><g><title>crossbeam_epoch::default::with_handle (1 samples, 0.28%)</title><rect x="49.1477%" y="885" width="0.2841%" height="15" fill="rgb(216,85,21)" fg:x="173" fg:w="1"/><text x="49.3977%" y="895.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.28%)</title><rect x="49.1477%" y="869" width="0.2841%" height="15" fill="rgb(235,136,14)" fg:x="173" fg:w="1"/><text x="49.3977%" y="879.50"></text></g><g><title>crossbeam_epoch::default::with_handle::{{closure}} (1 samples, 0.28%)</title><rect x="49.1477%" y="853" width="0.2841%" height="15" fill="rgb(244,15,48)" fg:x="173" fg:w="1"/><text x="49.3977%" y="863.50"></text></g><g><title>crossbeam_epoch::default::pin::{{closure}} (1 samples, 0.28%)</title><rect x="49.1477%" y="837" width="0.2841%" height="15" fill="rgb(207,200,34)" fg:x="173" fg:w="1"/><text x="49.3977%" y="847.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (1 samples, 0.28%)</title><rect x="49.1477%" y="821" width="0.2841%" height="15" fill="rgb(225,54,53)" fg:x="173" fg:w="1"/><text x="49.3977%" y="831.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (1 samples, 0.28%)</title><rect x="49.1477%" y="805" width="0.2841%" height="15" fill="rgb(207,24,52)" fg:x="173" fg:w="1"/><text x="49.3977%" y="815.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (1 samples, 0.28%)</title><rect x="49.1477%" y="789" width="0.2841%" height="15" fill="rgb(253,134,52)" fg:x="173" fg:w="1"/><text x="49.3977%" y="799.50"></text></g><g><title>crossbeam_epoch::internal::Global::try_advance (1 samples, 0.28%)</title><rect x="49.1477%" y="773" width="0.2841%" height="15" fill="rgb(214,78,4)" fg:x="173" fg:w="1"/><text x="49.3977%" y="783.50"></text></g><g><title>&lt;crossbeam_epoch::sync::list::Iter&lt;T,C&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.28%)</title><rect x="49.1477%" y="757" width="0.2841%" height="15" fill="rgb(211,134,7)" fg:x="173" fg:w="1"/><text x="49.3977%" y="767.50"></text></g><g><title>crossbeam_epoch::atomic::Shared&lt;T&gt;::tag (1 samples, 0.28%)</title><rect x="49.1477%" y="741" width="0.2841%" height="15" fill="rgb(230,193,4)" fg:x="173" fg:w="1"/><text x="49.3977%" y="751.50"></text></g><g><title>crossbeam_epoch::atomic::decompose_tag (1 samples, 0.28%)</title><rect x="49.1477%" y="725" width="0.2841%" height="15" fill="rgb(209,203,5)" fg:x="173" fg:w="1"/><text x="49.3977%" y="735.50"></text></g><g><title>evtx::binxml::assemble::expand_templates (1 samples, 0.28%)</title><rect x="49.4318%" y="405" width="0.2841%" height="15" fill="rgb(246,161,52)" fg:x="174" fg:w="1"/><text x="49.6818%" y="415.50"></text></g><g><title>evtx::binxml::assemble::_expand_templates (1 samples, 0.28%)</title><rect x="49.4318%" y="389" width="0.2841%" height="15" fill="rgb(210,173,1)" fg:x="174" fg:w="1"/><text x="49.6818%" y="399.50"></text></g><g><title>evtx::binxml::assemble::expand_template (1 samples, 0.28%)</title><rect x="49.4318%" y="373" width="0.2841%" height="15" fill="rgb(252,218,38)" fg:x="174" fg:w="1"/><text x="49.6818%" y="383.50"></text></g><g><title>evtx::binxml::assemble::expand_token_substitution (1 samples, 0.28%)</title><rect x="49.4318%" y="357" width="0.2841%" height="15" fill="rgb(250,214,16)" fg:x="174" fg:w="1"/><text x="49.6818%" y="367.50"></text></g><g><title>evtx::binxml::assemble::_expand_templates (1 samples, 0.28%)</title><rect x="49.4318%" y="341" width="0.2841%" height="15" fill="rgb(210,173,1)" fg:x="174" fg:w="1"/><text x="49.6818%" y="351.50"></text></g><g><title>evtx::binxml::assemble::_expand_templates (1 samples, 0.28%)</title><rect x="49.4318%" y="325" width="0.2841%" height="15" fill="rgb(210,173,1)" fg:x="174" fg:w="1"/><text x="49.6818%" y="335.50"></text></g><g><title>evtx::binxml::assemble::expand_template (1 samples, 0.28%)</title><rect x="49.4318%" y="309" width="0.2841%" height="15" fill="rgb(252,218,38)" fg:x="174" fg:w="1"/><text x="49.6818%" y="319.50"></text></g><g><title>evtx::binxml::assemble::_expand_templates (1 samples, 0.28%)</title><rect x="49.4318%" y="293" width="0.2841%" height="15" fill="rgb(210,173,1)" fg:x="174" fg:w="1"/><text x="49.6818%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.28%)</title><rect x="49.4318%" y="277" width="0.2841%" height="15" fill="rgb(241,229,15)" fg:x="174" fg:w="1"/><text x="49.6818%" y="287.50"></text></g><g><title>evtx::model::xml::XmlElementBuilder::attribute_value (1 samples, 0.28%)</title><rect x="49.7159%" y="389" width="0.2841%" height="15" fill="rgb(254,37,54)" fg:x="175" fg:w="1"/><text x="49.9659%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (1 samples, 0.28%)</title><rect x="49.7159%" y="373" width="0.2841%" height="15" fill="rgb(206,153,2)" fg:x="175" fg:w="1"/><text x="49.9659%" y="383.50"></text></g><g><title>core::mem::replace (1 samples, 0.28%)</title><rect x="49.7159%" y="357" width="0.2841%" height="15" fill="rgb(240,40,18)" fg:x="175" fg:w="1"/><text x="49.9659%" y="367.50"></text></g><g><title>evtx::binxml::assemble::create_record_model (2 samples, 0.57%)</title><rect x="49.7159%" y="405" width="0.5682%" height="15" fill="rgb(205,139,36)" fg:x="175" fg:w="2"/><text x="49.9659%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.28%)</title><rect x="50.0000%" y="389" width="0.2841%" height="15" fill="rgb(253,154,22)" fg:x="176" fg:w="1"/><text x="50.2500%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.28%)</title><rect x="50.0000%" y="373" width="0.2841%" height="15" fill="rgb(249,207,12)" fg:x="176" fg:w="1"/><text x="50.2500%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.28%)</title><rect x="50.0000%" y="357" width="0.2841%" height="15" fill="rgb(224,194,14)" fg:x="176" fg:w="1"/><text x="50.2500%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.28%)</title><rect x="50.0000%" y="341" width="0.2841%" height="15" fill="rgb(227,204,5)" fg:x="176" fg:w="1"/><text x="50.2500%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.28%)</title><rect x="50.0000%" y="325" width="0.2841%" height="15" fill="rgb(231,114,21)" fg:x="176" fg:w="1"/><text x="50.2500%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.28%)</title><rect x="50.0000%" y="309" width="0.2841%" height="15" fill="rgb(238,209,2)" fg:x="176" fg:w="1"/><text x="50.2500%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.28%)</title><rect x="50.0000%" y="293" width="0.2841%" height="15" fill="rgb(253,135,41)" fg:x="176" fg:w="1"/><text x="50.2500%" y="303.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.28%)</title><rect x="50.0000%" y="277" width="0.2841%" height="15" fill="rgb(206,112,53)" fg:x="176" fg:w="1"/><text x="50.2500%" y="287.50"></text></g><g><title>_int_malloc (1 samples, 0.28%)</title><rect x="50.0000%" y="261" width="0.2841%" height="15" fill="rgb(222,219,51)" fg:x="176" fg:w="1"/><text x="50.2500%" y="271.50"></text></g><g><title>sysmalloc (1 samples, 0.28%)</title><rect x="50.0000%" y="245" width="0.2841%" height="15" fill="rgb(237,64,10)" fg:x="176" fg:w="1"/><text x="50.2500%" y="255.50"></text></g><g><title>grow_heap (1 samples, 0.28%)</title><rect x="50.0000%" y="229" width="0.2841%" height="15" fill="rgb(231,135,3)" fg:x="176" fg:w="1"/><text x="50.2500%" y="239.50"></text></g><g><title>__GI___mprotect (1 samples, 0.28%)</title><rect x="50.0000%" y="213" width="0.2841%" height="15" fill="rgb(209,155,30)" fg:x="176" fg:w="1"/><text x="50.2500%" y="223.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="50.0000%" y="197" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="176" fg:w="1"/><text x="50.2500%" y="207.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="50.0000%" y="181" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="176" fg:w="1"/><text x="50.2500%" y="191.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="50.0000%" y="165" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="176" fg:w="1"/><text x="50.2500%" y="175.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="50.0000%" y="149" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="176" fg:w="1"/><text x="50.2500%" y="159.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="50.0000%" y="133" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="176" fg:w="1"/><text x="50.2500%" y="143.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="50.0000%" y="117" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="176" fg:w="1"/><text x="50.2500%" y="127.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="50.0000%" y="101" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="176" fg:w="1"/><text x="50.2500%" y="111.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="50.0000%" y="85" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="176" fg:w="1"/><text x="50.2500%" y="95.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="50.0000%" y="69" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="176" fg:w="1"/><text x="50.2500%" y="79.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="50.0000%" y="53" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="176" fg:w="1"/><text x="50.2500%" y="63.50"></text></g><g><title>&lt;evtx::xml_output::XmlOutput&lt;W&gt; as evtx::xml_output::BinXmlOutput&gt;::visit_open_start_element (1 samples, 0.28%)</title><rect x="50.2841%" y="405" width="0.2841%" height="15" fill="rgb(243,65,32)" fg:x="177" fg:w="1"/><text x="50.5341%" y="415.50"></text></g><g><title>quick_xml::writer::Writer&lt;W&gt;::write_event (1 samples, 0.28%)</title><rect x="50.2841%" y="389" width="0.2841%" height="15" fill="rgb(234,37,14)" fg:x="177" fg:w="1"/><text x="50.5341%" y="399.50"></text></g><g><title>quick_xml::writer::Writer&lt;W&gt;::write_wrapped (1 samples, 0.28%)</title><rect x="50.2841%" y="373" width="0.2841%" height="15" fill="rgb(241,81,42)" fg:x="177" fg:w="1"/><text x="50.5341%" y="383.50"></text></g><g><title>quick_xml::writer::Writer&lt;W&gt;::write (1 samples, 0.28%)</title><rect x="50.2841%" y="357" width="0.2841%" height="15" fill="rgb(235,81,10)" fg:x="177" fg:w="1"/><text x="50.5341%" y="367.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.28%)</title><rect x="50.2841%" y="341" width="0.2841%" height="15" fill="rgb(231,96,28)" fg:x="177" fg:w="1"/><text x="50.5341%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.28%)</title><rect x="50.2841%" y="325" width="0.2841%" height="15" fill="rgb(243,52,34)" fg:x="177" fg:w="1"/><text x="50.5341%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.28%)</title><rect x="50.2841%" y="309" width="0.2841%" height="15" fill="rgb(224,207,30)" fg:x="177" fg:w="1"/><text x="50.5341%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.28%)</title><rect x="50.2841%" y="293" width="0.2841%" height="15" fill="rgb(251,49,54)" fg:x="177" fg:w="1"/><text x="50.5341%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 1.42%)</title><rect x="49.4318%" y="533" width="1.4205%" height="15" fill="rgb(254,35,30)" fg:x="174" fg:w="5"/><text x="49.6818%" y="543.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (5 samples, 1.42%)</title><rect x="49.4318%" y="517" width="1.4205%" height="15" fill="rgb(226,169,23)" fg:x="174" fg:w="5"/><text x="49.6818%" y="527.50"></text></g><g><title>evtx::evtx_parser::EvtxParser&lt;T&gt;::records::{{closure}} (5 samples, 1.42%)</title><rect x="49.4318%" y="501" width="1.4205%" height="15" fill="rgb(247,66,44)" fg:x="174" fg:w="5"/><text x="49.6818%" y="511.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (5 samples, 1.42%)</title><rect x="49.4318%" y="485" width="1.4205%" height="15" fill="rgb(241,136,11)" fg:x="174" fg:w="5"/><text x="49.6818%" y="495.50"></text></g><g><title>evtx::evtx_parser::EvtxParser&lt;T&gt;::records::{{closure}}::{{closure}} (5 samples, 1.42%)</title><rect x="49.4318%" y="469" width="1.4205%" height="15" fill="rgb(234,41,1)" fg:x="174" fg:w="5"/><text x="49.6818%" y="479.50"></text></g><g><title>evtx::evtx_record::EvtxRecord::into_xml (5 samples, 1.42%)</title><rect x="49.4318%" y="453" width="1.4205%" height="15" fill="rgb(213,211,35)" fg:x="174" fg:w="5"/><text x="49.6818%" y="463.50"></text></g><g><title>evtx::evtx_record::EvtxRecord::into_output (5 samples, 1.42%)</title><rect x="49.4318%" y="437" width="1.4205%" height="15" fill="rgb(246,161,19)" fg:x="174" fg:w="5"/><text x="49.6818%" y="447.50"></text></g><g><title>evtx::binxml::assemble::parse_tokens (5 samples, 1.42%)</title><rect x="49.4318%" y="421" width="1.4205%" height="15" fill="rgb(228,114,17)" fg:x="174" fg:w="5"/><text x="49.6818%" y="431.50"></text></g><g><title>&lt;evtx::xml_output::XmlOutput&lt;W&gt; as evtx::xml_output::BinXmlOutput&gt;::visit_characters (1 samples, 0.28%)</title><rect x="50.5682%" y="405" width="0.2841%" height="15" fill="rgb(253,173,3)" fg:x="178" fg:w="1"/><text x="50.8182%" y="415.50"></text></g><g><title>quick_xml::events::BytesText::new (1 samples, 0.28%)</title><rect x="50.5682%" y="389" width="0.2841%" height="15" fill="rgb(218,17,44)" fg:x="178" fg:w="1"/><text x="50.8182%" y="399.50"></text></g><g><title>quick_xml::events::BytesText::from_escaped (1 samples, 0.28%)</title><rect x="50.5682%" y="373" width="0.2841%" height="15" fill="rgb(225,3,2)" fg:x="178" fg:w="1"/><text x="50.8182%" y="383.50"></text></g><g><title>quick_xml::events::BytesText::wrap (1 samples, 0.28%)</title><rect x="50.5682%" y="357" width="0.2841%" height="15" fill="rgb(211,147,42)" fg:x="178" fg:w="1"/><text x="50.8182%" y="367.50"></text></g><g><title>rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (6 samples, 1.70%)</title><rect x="49.4318%" y="933" width="1.7045%" height="15" fill="rgb(232,150,23)" fg:x="174" fg:w="6"/><text x="49.6818%" y="943.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6 samples, 1.70%)</title><rect x="49.4318%" y="917" width="1.7045%" height="15" fill="rgb(231,101,43)" fg:x="174" fg:w="6"/><text x="49.6818%" y="927.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (6 samples, 1.70%)</title><rect x="49.4318%" y="901" width="1.7045%" height="15" fill="rgb(247,37,21)" fg:x="174" fg:w="6"/><text x="49.6818%" y="911.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 1.70%)</title><rect x="49.4318%" y="885" width="1.7045%" height="15" fill="rgb(216,75,8)" fg:x="174" fg:w="6"/><text x="49.6818%" y="895.50"></text></g><g><title>std::panicking::try (6 samples, 1.70%)</title><rect x="49.4318%" y="869" width="1.7045%" height="15" fill="rgb(212,61,29)" fg:x="174" fg:w="6"/><text x="49.6818%" y="879.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 1.70%)</title><rect x="49.4318%" y="853" width="1.7045%" height="15" fill="rgb(232,162,46)" fg:x="174" fg:w="6"/><text x="49.6818%" y="863.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 1.70%)</title><rect x="49.4318%" y="837" width="1.7045%" height="15" fill="rgb(230,83,13)" fg:x="174" fg:w="6"/><text x="49.6818%" y="847.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (6 samples, 1.70%)</title><rect x="49.4318%" y="821" width="1.7045%" height="15" fill="rgb(224,180,25)" fg:x="174" fg:w="6"/><text x="49.6818%" y="831.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (6 samples, 1.70%)</title><rect x="49.4318%" y="805" width="1.7045%" height="15" fill="rgb(241,191,49)" fg:x="174" fg:w="6"/><text x="49.6818%" y="815.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 1.70%)</title><rect x="49.4318%" y="789" width="1.7045%" height="15" fill="rgb(224,218,48)" fg:x="174" fg:w="6"/><text x="49.6818%" y="799.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (6 samples, 1.70%)</title><rect x="49.4318%" y="773" width="1.7045%" height="15" fill="rgb(211,132,28)" fg:x="174" fg:w="6"/><text x="49.6818%" y="783.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (6 samples, 1.70%)</title><rect x="49.4318%" y="757" width="1.7045%" height="15" fill="rgb(248,215,30)" fg:x="174" fg:w="6"/><text x="49.6818%" y="767.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (6 samples, 1.70%)</title><rect x="49.4318%" y="741" width="1.7045%" height="15" fill="rgb(238,97,11)" fg:x="174" fg:w="6"/><text x="49.6818%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 1.70%)</title><rect x="49.4318%" y="725" width="1.7045%" height="15" fill="rgb(214,109,53)" fg:x="174" fg:w="6"/><text x="49.6818%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6 samples, 1.70%)</title><rect x="49.4318%" y="709" width="1.7045%" height="15" fill="rgb(254,35,30)" fg:x="174" fg:w="6"/><text x="49.6818%" y="719.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (6 samples, 1.70%)</title><rect x="49.4318%" y="693" width="1.7045%" height="15" fill="rgb(226,169,23)" fg:x="174" fg:w="6"/><text x="49.6818%" y="703.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (6 samples, 1.70%)</title><rect x="49.4318%" y="677" width="1.7045%" height="15" fill="rgb(237,94,10)" fg:x="174" fg:w="6"/><text x="49.6818%" y="687.50"></text></g><g><title>evtx::evtx_parser::EvtxParser&lt;T&gt;::serialized_records::{{closure}}::{{closure}} (6 samples, 1.70%)</title><rect x="49.4318%" y="661" width="1.7045%" height="15" fill="rgb(217,92,15)" fg:x="174" fg:w="6"/><text x="49.6818%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (6 samples, 1.70%)</title><rect x="49.4318%" y="645" width="1.7045%" height="15" fill="rgb(222,213,17)" fg:x="174" fg:w="6"/><text x="49.6818%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6 samples, 1.70%)</title><rect x="49.4318%" y="629" width="1.7045%" height="15" fill="rgb(247,137,3)" fg:x="174" fg:w="6"/><text x="49.6818%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 1.70%)</title><rect x="49.4318%" y="613" width="1.7045%" height="15" fill="rgb(227,158,43)" fg:x="174" fg:w="6"/><text x="49.6818%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (6 samples, 1.70%)</title><rect x="49.4318%" y="597" width="1.7045%" height="15" fill="rgb(232,14,28)" fg:x="174" fg:w="6"/><text x="49.6818%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (6 samples, 1.70%)</title><rect x="49.4318%" y="581" width="1.7045%" height="15" fill="rgb(232,211,42)" fg:x="174" fg:w="6"/><text x="49.6818%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (6 samples, 1.70%)</title><rect x="49.4318%" y="565" width="1.7045%" height="15" fill="rgb(222,168,45)" fg:x="174" fg:w="6"/><text x="49.6818%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 1.70%)</title><rect x="49.4318%" y="549" width="1.7045%" height="15" fill="rgb(214,109,53)" fg:x="174" fg:w="6"/><text x="49.6818%" y="559.50"></text></g><g><title>&lt;evtx::evtx_chunk::IterChunkRecords as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.28%)</title><rect x="50.8523%" y="533" width="0.2841%" height="15" fill="rgb(238,213,6)" fg:x="179" fg:w="1"/><text x="51.1023%" y="543.50"></text></g><g><title>&lt;evtx::binxml::deserializer::IterTokens as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.28%)</title><rect x="50.8523%" y="517" width="0.2841%" height="15" fill="rgb(214,203,36)" fg:x="179" fg:w="1"/><text x="51.1023%" y="527.50"></text></g><g><title>evtx::binxml::deserializer::IterTokens::inner_next (1 samples, 0.28%)</title><rect x="50.8523%" y="501" width="0.2841%" height="15" fill="rgb(226,63,28)" fg:x="179" fg:w="1"/><text x="51.1023%" y="511.50"></text></g><g><title>evtx::binxml::deserializer::IterTokens::visit_token (1 samples, 0.28%)</title><rect x="50.8523%" y="485" width="0.2841%" height="15" fill="rgb(246,130,42)" fg:x="179" fg:w="1"/><text x="51.1023%" y="495.50"></text></g><g><title>evtx::binxml::tokens::read_template (1 samples, 0.28%)</title><rect x="50.8523%" y="469" width="0.2841%" height="15" fill="rgb(218,134,26)" fg:x="179" fg:w="1"/><text x="51.1023%" y="479.50"></text></g><g><title>evtx::binxml::value_variant::BinXmlValue::deserialize_value_type (1 samples, 0.28%)</title><rect x="50.8523%" y="453" width="0.2841%" height="15" fill="rgb(252,55,19)" fg:x="179" fg:w="1"/><text x="51.1023%" y="463.50"></text></g><g><title>evtx::binxml::deserializer::BinXmlDeserializer::read_binxml_fragment (1 samples, 0.28%)</title><rect x="50.8523%" y="437" width="0.2841%" height="15" fill="rgb(228,161,17)" fg:x="179" fg:w="1"/><text x="51.1023%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.28%)</title><rect x="51.1364%" y="517" width="0.2841%" height="15" fill="rgb(214,109,53)" fg:x="180" fg:w="1"/><text x="51.3864%" y="527.50"></text></g><g><title>&lt;evtx::evtx_chunk::IterChunkRecords as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.28%)</title><rect x="51.1364%" y="501" width="0.2841%" height="15" fill="rgb(238,213,6)" fg:x="180" fg:w="1"/><text x="51.3864%" y="511.50"></text></g><g><title>evtx::evtx_record::EvtxRecordHeader::from_reader (1 samples, 0.28%)</title><rect x="51.1364%" y="485" width="0.2841%" height="15" fill="rgb(219,100,40)" fg:x="180" fg:w="1"/><text x="51.3864%" y="495.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.28%)</title><rect x="51.1364%" y="469" width="0.2841%" height="15" fill="rgb(248,23,38)" fg:x="180" fg:w="1"/><text x="51.3864%" y="479.50"></text></g><g><title>evtx::evtx_record::EvtxRecordHeader::from_reader::{{closure}} (1 samples, 0.28%)</title><rect x="51.1364%" y="453" width="0.2841%" height="15" fill="rgb(237,130,49)" fg:x="180" fg:w="1"/><text x="51.3864%" y="463.50"></text></g><g><title>winstructs::timestamp::WinTimestamp::to_datetime (1 samples, 0.28%)</title><rect x="51.1364%" y="437" width="0.2841%" height="15" fill="rgb(224,97,46)" fg:x="180" fg:w="1"/><text x="51.3864%" y="447.50"></text></g><g><title>chrono::naive::date::NaiveDate::from_ymd_opt (1 samples, 0.28%)</title><rect x="51.1364%" y="421" width="0.2841%" height="15" fill="rgb(206,140,10)" fg:x="180" fg:w="1"/><text x="51.3864%" y="431.50"></text></g><g><title>chrono::naive::internals::YearFlags::from_year (1 samples, 0.28%)</title><rect x="51.1364%" y="405" width="0.2841%" height="15" fill="rgb(243,208,22)" fg:x="180" fg:w="1"/><text x="51.3864%" y="415.50"></text></g><g><title>core::num::&lt;impl i32&gt;::rem_euclid (1 samples, 0.28%)</title><rect x="51.1364%" y="389" width="0.2841%" height="15" fill="rgb(242,32,7)" fg:x="180" fg:w="1"/><text x="51.3864%" y="399.50"></text></g><g><title>evtx::binxml::assemble::expand_template (1 samples, 0.28%)</title><rect x="51.4205%" y="245" width="0.2841%" height="15" fill="rgb(252,218,38)" fg:x="181" fg:w="1"/><text x="51.6705%" y="255.50"></text></g><g><title>evtx::binxml::assemble::_expand_templates (1 samples, 0.28%)</title><rect x="51.4205%" y="229" width="0.2841%" height="15" fill="rgb(210,173,1)" fg:x="181" fg:w="1"/><text x="51.6705%" y="239.50"></text></g><g><title>evtx::binxml::assemble::expand_templates (2 samples, 0.57%)</title><rect x="51.4205%" y="341" width="0.5682%" height="15" fill="rgb(246,161,52)" fg:x="181" fg:w="2"/><text x="51.6705%" y="351.50"></text></g><g><title>evtx::binxml::assemble::_expand_templates (2 samples, 0.57%)</title><rect x="51.4205%" y="325" width="0.5682%" height="15" fill="rgb(210,173,1)" fg:x="181" fg:w="2"/><text x="51.6705%" y="335.50"></text></g><g><title>evtx::binxml::assemble::expand_template (2 samples, 0.57%)</title><rect x="51.4205%" y="309" width="0.5682%" height="15" fill="rgb(252,218,38)" fg:x="181" fg:w="2"/><text x="51.6705%" y="319.50"></text></g><g><title>evtx::binxml::assemble::expand_token_substitution (2 samples, 0.57%)</title><rect x="51.4205%" y="293" width="0.5682%" height="15" fill="rgb(250,214,16)" fg:x="181" fg:w="2"/><text x="51.6705%" y="303.50"></text></g><g><title>evtx::binxml::assemble::_expand_templates (2 samples, 0.57%)</title><rect x="51.4205%" y="277" width="0.5682%" height="15" fill="rgb(210,173,1)" fg:x="181" fg:w="2"/><text x="51.6705%" y="287.50"></text></g><g><title>evtx::binxml::assemble::_expand_templates (2 samples, 0.57%)</title><rect x="51.4205%" y="261" width="0.5682%" height="15" fill="rgb(210,173,1)" fg:x="181" fg:w="2"/><text x="51.6705%" y="271.50"></text></g><g><title>evtx::model::xml::XmlElementBuilder::name (1 samples, 0.28%)</title><rect x="51.9886%" y="325" width="0.2841%" height="15" fill="rgb(253,200,47)" fg:x="183" fg:w="1"/><text x="52.2386%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.28%)</title><rect x="52.2727%" y="325" width="0.2841%" height="15" fill="rgb(253,154,22)" fg:x="184" fg:w="1"/><text x="52.5227%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.28%)</title><rect x="52.2727%" y="309" width="0.2841%" height="15" fill="rgb(249,207,12)" fg:x="184" fg:w="1"/><text x="52.5227%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.28%)</title><rect x="52.2727%" y="293" width="0.2841%" height="15" fill="rgb(224,194,14)" fg:x="184" fg:w="1"/><text x="52.5227%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.28%)</title><rect x="52.2727%" y="277" width="0.2841%" height="15" fill="rgb(227,204,5)" fg:x="184" fg:w="1"/><text x="52.5227%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.28%)</title><rect x="52.2727%" y="261" width="0.2841%" height="15" fill="rgb(231,114,21)" fg:x="184" fg:w="1"/><text x="52.5227%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.28%)</title><rect x="52.2727%" y="245" width="0.2841%" height="15" fill="rgb(238,209,2)" fg:x="184" fg:w="1"/><text x="52.5227%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.28%)</title><rect x="52.2727%" y="229" width="0.2841%" height="15" fill="rgb(253,135,41)" fg:x="184" fg:w="1"/><text x="52.5227%" y="239.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.28%)</title><rect x="52.2727%" y="213" width="0.2841%" height="15" fill="rgb(206,112,53)" fg:x="184" fg:w="1"/><text x="52.5227%" y="223.50"></text></g><g><title>_int_malloc (1 samples, 0.28%)</title><rect x="52.2727%" y="197" width="0.2841%" height="15" fill="rgb(222,219,51)" fg:x="184" fg:w="1"/><text x="52.5227%" y="207.50"></text></g><g><title>sysmalloc (1 samples, 0.28%)</title><rect x="52.2727%" y="181" width="0.2841%" height="15" fill="rgb(237,64,10)" fg:x="184" fg:w="1"/><text x="52.5227%" y="191.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="52.2727%" y="165" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="184" fg:w="1"/><text x="52.5227%" y="175.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="52.2727%" y="149" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="184" fg:w="1"/><text x="52.5227%" y="159.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="52.2727%" y="133" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="184" fg:w="1"/><text x="52.5227%" y="143.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="52.2727%" y="117" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="184" fg:w="1"/><text x="52.5227%" y="127.50"></text></g><g><title>evtx::binxml::assemble::create_record_model (5 samples, 1.42%)</title><rect x="51.9886%" y="341" width="1.4205%" height="15" fill="rgb(205,139,36)" fg:x="183" fg:w="5"/><text x="52.2386%" y="351.50"></text></g><g><title>quick_xml::events::BytesStart::push_attribute (1 samples, 0.28%)</title><rect x="53.4091%" y="325" width="0.2841%" height="15" fill="rgb(254,74,48)" fg:x="188" fg:w="1"/><text x="53.6591%" y="335.50"></text></g><g><title>alloc::borrow::Cow&lt;B&gt;::to_mut (1 samples, 0.28%)</title><rect x="53.4091%" y="309" width="0.2841%" height="15" fill="rgb(216,32,25)" fg:x="188" fg:w="1"/><text x="53.6591%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.28%)</title><rect x="53.4091%" y="293" width="0.2841%" height="15" fill="rgb(212,75,49)" fg:x="188" fg:w="1"/><text x="53.6591%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.28%)</title><rect x="53.4091%" y="277" width="0.2841%" height="15" fill="rgb(209,26,30)" fg:x="188" fg:w="1"/><text x="53.6591%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.28%)</title><rect x="53.4091%" y="261" width="0.2841%" height="15" fill="rgb(229,121,46)" fg:x="188" fg:w="1"/><text x="53.6591%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.28%)</title><rect x="53.4091%" y="245" width="0.2841%" height="15" fill="rgb(221,172,50)" fg:x="188" fg:w="1"/><text x="53.6591%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.28%)</title><rect x="53.4091%" y="229" width="0.2841%" height="15" fill="rgb(216,42,52)" fg:x="188" fg:w="1"/><text x="53.6591%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.28%)</title><rect x="53.4091%" y="213" width="0.2841%" height="15" fill="rgb(249,207,12)" fg:x="188" fg:w="1"/><text x="53.6591%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.28%)</title><rect x="53.4091%" y="197" width="0.2841%" height="15" fill="rgb(224,194,14)" fg:x="188" fg:w="1"/><text x="53.6591%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.28%)</title><rect x="53.4091%" y="181" width="0.2841%" height="15" fill="rgb(227,204,5)" fg:x="188" fg:w="1"/><text x="53.6591%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.28%)</title><rect x="53.4091%" y="165" width="0.2841%" height="15" fill="rgb(231,114,21)" fg:x="188" fg:w="1"/><text x="53.6591%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.28%)</title><rect x="53.4091%" y="149" width="0.2841%" height="15" fill="rgb(238,209,2)" fg:x="188" fg:w="1"/><text x="53.6591%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.28%)</title><rect x="53.4091%" y="133" width="0.2841%" height="15" fill="rgb(253,135,41)" fg:x="188" fg:w="1"/><text x="53.6591%" y="143.50"></text></g><g><title>&lt;evtx::xml_output::XmlOutput&lt;W&gt; as evtx::xml_output::BinXmlOutput&gt;::visit_open_start_element (2 samples, 0.57%)</title><rect x="53.4091%" y="341" width="0.5682%" height="15" fill="rgb(243,65,32)" fg:x="188" fg:w="2"/><text x="53.6591%" y="351.50"></text></g><g><title>evtx::binxml::value_variant::BinXmlValue::as_cow_str (1 samples, 0.28%)</title><rect x="53.6932%" y="325" width="0.2841%" height="15" fill="rgb(229,5,33)" fg:x="189" fg:w="1"/><text x="53.9432%" y="335.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1 samples, 0.28%)</title><rect x="53.6932%" y="309" width="0.2841%" height="15" fill="rgb(249,76,35)" fg:x="189" fg:w="1"/><text x="53.9432%" y="319.50"></text></g><g><title>&lt;winstructs::guid::Guid as core::fmt::Display&gt;::fmt (1 samples, 0.28%)</title><rect x="53.6932%" y="293" width="0.2841%" height="15" fill="rgb(247,197,26)" fg:x="189" fg:w="1"/><text x="53.9432%" y="303.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.28%)</title><rect x="53.6932%" y="277" width="0.2841%" height="15" fill="rgb(220,95,32)" fg:x="189" fg:w="1"/><text x="53.9432%" y="287.50"></text></g><g><title>core::fmt::write (1 samples, 0.28%)</title><rect x="53.6932%" y="261" width="0.2841%" height="15" fill="rgb(248,210,20)" fg:x="189" fg:w="1"/><text x="53.9432%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.28%)</title><rect x="53.6932%" y="245" width="0.2841%" height="15" fill="rgb(237,176,18)" fg:x="189" fg:w="1"/><text x="53.9432%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.28%)</title><rect x="53.6932%" y="229" width="0.2841%" height="15" fill="rgb(242,162,39)" fg:x="189" fg:w="1"/><text x="53.9432%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.28%)</title><rect x="53.6932%" y="213" width="0.2841%" height="15" fill="rgb(243,52,34)" fg:x="189" fg:w="1"/><text x="53.9432%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.28%)</title><rect x="53.6932%" y="197" width="0.2841%" height="15" fill="rgb(224,207,30)" fg:x="189" fg:w="1"/><text x="53.9432%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.28%)</title><rect x="53.6932%" y="181" width="0.2841%" height="15" fill="rgb(251,49,54)" fg:x="189" fg:w="1"/><text x="53.9432%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.28%)</title><rect x="53.6932%" y="165" width="0.2841%" height="15" fill="rgb(212,159,3)" fg:x="189" fg:w="1"/><text x="53.9432%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.28%)</title><rect x="53.6932%" y="149" width="0.2841%" height="15" fill="rgb(231,142,39)" fg:x="189" fg:w="1"/><text x="53.9432%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.28%)</title><rect x="53.6932%" y="133" width="0.2841%" height="15" fill="rgb(249,2,22)" fg:x="189" fg:w="1"/><text x="53.9432%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.28%)</title><rect x="53.6932%" y="117" width="0.2841%" height="15" fill="rgb(254,53,35)" fg:x="189" fg:w="1"/><text x="53.9432%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.28%)</title><rect x="53.6932%" y="101" width="0.2841%" height="15" fill="rgb(237,133,22)" fg:x="189" fg:w="1"/><text x="53.9432%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.28%)</title><rect x="53.6932%" y="85" width="0.2841%" height="15" fill="rgb(237,156,49)" fg:x="189" fg:w="1"/><text x="53.9432%" y="95.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.28%)</title><rect x="53.6932%" y="69" width="0.2841%" height="15" fill="rgb(214,150,36)" fg:x="189" fg:w="1"/><text x="53.9432%" y="79.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.28%)</title><rect x="53.6932%" y="53" width="0.2841%" height="15" fill="rgb(254,47,34)" fg:x="189" fg:w="1"/><text x="53.9432%" y="63.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.28%)</title><rect x="53.6932%" y="37" width="0.2841%" height="15" fill="rgb(254,73,4)" fg:x="189" fg:w="1"/><text x="53.9432%" y="47.50"></text></g><g><title>rayon_core::join::join_context (11 samples, 3.12%)</title><rect x="51.1364%" y="885" width="3.1250%" height="15" fill="rgb(252,28,1)" fg:x="180" fg:w="11"/><text x="51.3864%" y="895.50">ray..</text></g><g><title>rayon_core::registry::in_worker (11 samples, 3.12%)</title><rect x="51.1364%" y="869" width="3.1250%" height="15" fill="rgb(247,133,19)" fg:x="180" fg:w="11"/><text x="51.3864%" y="879.50">ray..</text></g><g><title>rayon_core::join::join_context::{{closure}} (11 samples, 3.12%)</title><rect x="51.1364%" y="853" width="3.1250%" height="15" fill="rgb(231,101,43)" fg:x="180" fg:w="11"/><text x="51.3864%" y="863.50">ray..</text></g><g><title>rayon_core::unwind::halt_unwinding (11 samples, 3.12%)</title><rect x="51.1364%" y="837" width="3.1250%" height="15" fill="rgb(247,37,21)" fg:x="180" fg:w="11"/><text x="51.3864%" y="847.50">ray..</text></g><g><title>std::panic::catch_unwind (11 samples, 3.12%)</title><rect x="51.1364%" y="821" width="3.1250%" height="15" fill="rgb(216,75,8)" fg:x="180" fg:w="11"/><text x="51.3864%" y="831.50">std..</text></g><g><title>std::panicking::try (11 samples, 3.12%)</title><rect x="51.1364%" y="805" width="3.1250%" height="15" fill="rgb(212,61,29)" fg:x="180" fg:w="11"/><text x="51.3864%" y="815.50">std..</text></g><g><title>std::panicking::try::do_call (11 samples, 3.12%)</title><rect x="51.1364%" y="789" width="3.1250%" height="15" fill="rgb(232,162,46)" fg:x="180" fg:w="11"/><text x="51.3864%" y="799.50">std..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (11 samples, 3.12%)</title><rect x="51.1364%" y="773" width="3.1250%" height="15" fill="rgb(230,83,13)" fg:x="180" fg:w="11"/><text x="51.3864%" y="783.50">&lt;co..</text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (11 samples, 3.12%)</title><rect x="51.1364%" y="757" width="3.1250%" height="15" fill="rgb(224,180,25)" fg:x="180" fg:w="11"/><text x="51.3864%" y="767.50">ray..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (11 samples, 3.12%)</title><rect x="51.1364%" y="741" width="3.1250%" height="15" fill="rgb(241,191,49)" fg:x="180" fg:w="11"/><text x="51.3864%" y="751.50">ray..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 3.12%)</title><rect x="51.1364%" y="725" width="3.1250%" height="15" fill="rgb(224,218,48)" fg:x="180" fg:w="11"/><text x="51.3864%" y="735.50">ray..</text></g><g><title>rayon::iter::plumbing::Producer::fold_with (11 samples, 3.12%)</title><rect x="51.1364%" y="709" width="3.1250%" height="15" fill="rgb(211,132,28)" fg:x="180" fg:w="11"/><text x="51.3864%" y="719.50">ray..</text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (11 samples, 3.12%)</title><rect x="51.1364%" y="693" width="3.1250%" height="15" fill="rgb(248,215,30)" fg:x="180" fg:w="11"/><text x="51.3864%" y="703.50">&lt;ra..</text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (11 samples, 3.12%)</title><rect x="51.1364%" y="677" width="3.1250%" height="15" fill="rgb(238,97,11)" fg:x="180" fg:w="11"/><text x="51.3864%" y="687.50">ray..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 3.12%)</title><rect x="51.1364%" y="661" width="3.1250%" height="15" fill="rgb(214,109,53)" fg:x="180" fg:w="11"/><text x="51.3864%" y="671.50">&lt;co..</text></g><g><title>core::option::Option&lt;T&gt;::map (11 samples, 3.12%)</title><rect x="51.1364%" y="645" width="3.1250%" height="15" fill="rgb(254,35,30)" fg:x="180" fg:w="11"/><text x="51.3864%" y="655.50">cor..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (11 samples, 3.12%)</title><rect x="51.1364%" y="629" width="3.1250%" height="15" fill="rgb(226,169,23)" fg:x="180" fg:w="11"/><text x="51.3864%" y="639.50">cor..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (11 samples, 3.12%)</title><rect x="51.1364%" y="613" width="3.1250%" height="15" fill="rgb(237,94,10)" fg:x="180" fg:w="11"/><text x="51.3864%" y="623.50">cor..</text></g><g><title>evtx::evtx_parser::EvtxParser&lt;T&gt;::serialized_records::{{closure}}::{{closure}} (11 samples, 3.12%)</title><rect x="51.1364%" y="597" width="3.1250%" height="15" fill="rgb(217,92,15)" fg:x="180" fg:w="11"/><text x="51.3864%" y="607.50">evt..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (11 samples, 3.12%)</title><rect x="51.1364%" y="581" width="3.1250%" height="15" fill="rgb(222,213,17)" fg:x="180" fg:w="11"/><text x="51.3864%" y="591.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (11 samples, 3.12%)</title><rect x="51.1364%" y="565" width="3.1250%" height="15" fill="rgb(247,137,3)" fg:x="180" fg:w="11"/><text x="51.3864%" y="575.50">&lt;al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 3.12%)</title><rect x="51.1364%" y="549" width="3.1250%" height="15" fill="rgb(227,158,43)" fg:x="180" fg:w="11"/><text x="51.3864%" y="559.50">&lt;al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (11 samples, 3.12%)</title><rect x="51.1364%" y="533" width="3.1250%" height="15" fill="rgb(232,14,28)" fg:x="180" fg:w="11"/><text x="51.3864%" y="543.50">&lt;al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (10 samples, 2.84%)</title><rect x="51.4205%" y="517" width="2.8409%" height="15" fill="rgb(232,211,42)" fg:x="181" fg:w="10"/><text x="51.6705%" y="527.50">&lt;a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (10 samples, 2.84%)</title><rect x="51.4205%" y="501" width="2.8409%" height="15" fill="rgb(222,168,45)" fg:x="181" fg:w="10"/><text x="51.6705%" y="511.50">al..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 2.84%)</title><rect x="51.4205%" y="485" width="2.8409%" height="15" fill="rgb(214,109,53)" fg:x="181" fg:w="10"/><text x="51.6705%" y="495.50">&lt;c..</text></g><g><title>core::option::Option&lt;T&gt;::map (10 samples, 2.84%)</title><rect x="51.4205%" y="469" width="2.8409%" height="15" fill="rgb(254,35,30)" fg:x="181" fg:w="10"/><text x="51.6705%" y="479.50">co..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (10 samples, 2.84%)</title><rect x="51.4205%" y="453" width="2.8409%" height="15" fill="rgb(226,169,23)" fg:x="181" fg:w="10"/><text x="51.6705%" y="463.50">co..</text></g><g><title>evtx::evtx_parser::EvtxParser&lt;T&gt;::records::{{closure}} (10 samples, 2.84%)</title><rect x="51.4205%" y="437" width="2.8409%" height="15" fill="rgb(247,66,44)" fg:x="181" fg:w="10"/><text x="51.6705%" y="447.50">ev..</text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (10 samples, 2.84%)</title><rect x="51.4205%" y="421" width="2.8409%" height="15" fill="rgb(241,136,11)" fg:x="181" fg:w="10"/><text x="51.6705%" y="431.50">co..</text></g><g><title>evtx::evtx_parser::EvtxParser&lt;T&gt;::records::{{closure}}::{{closure}} (10 samples, 2.84%)</title><rect x="51.4205%" y="405" width="2.8409%" height="15" fill="rgb(234,41,1)" fg:x="181" fg:w="10"/><text x="51.6705%" y="415.50">ev..</text></g><g><title>evtx::evtx_record::EvtxRecord::into_xml (10 samples, 2.84%)</title><rect x="51.4205%" y="389" width="2.8409%" height="15" fill="rgb(213,211,35)" fg:x="181" fg:w="10"/><text x="51.6705%" y="399.50">ev..</text></g><g><title>evtx::evtx_record::EvtxRecord::into_output (10 samples, 2.84%)</title><rect x="51.4205%" y="373" width="2.8409%" height="15" fill="rgb(246,161,19)" fg:x="181" fg:w="10"/><text x="51.6705%" y="383.50">ev..</text></g><g><title>evtx::binxml::assemble::parse_tokens (10 samples, 2.84%)</title><rect x="51.4205%" y="357" width="2.8409%" height="15" fill="rgb(228,114,17)" fg:x="181" fg:w="10"/><text x="51.6705%" y="367.50">ev..</text></g><g><title>&lt;evtx::xml_output::XmlOutput&lt;W&gt; as evtx::xml_output::BinXmlOutput&gt;::visit_characters (1 samples, 0.28%)</title><rect x="53.9773%" y="341" width="0.2841%" height="15" fill="rgb(253,173,3)" fg:x="190" fg:w="1"/><text x="54.2273%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::borrow::Cow&lt;evtx::binxml::value_variant::BinXmlValue&gt;&gt; (1 samples, 0.28%)</title><rect x="53.9773%" y="325" width="0.2841%" height="15" fill="rgb(217,133,7)" fg:x="190" fg:w="1"/><text x="54.2273%" y="335.50"></text></g><g><title>evtx::evtx_chunk::EvtxChunkData::parse (1 samples, 0.28%)</title><rect x="54.2614%" y="757" width="0.2841%" height="15" fill="rgb(207,42,29)" fg:x="191" fg:w="1"/><text x="54.5114%" y="767.50"></text></g><g><title>evtx::evtx_chunk::EvtxChunk::new (1 samples, 0.28%)</title><rect x="54.2614%" y="741" width="0.2841%" height="15" fill="rgb(246,198,29)" fg:x="191" fg:w="1"/><text x="54.5114%" y="751.50"></text></g><g><title>evtx::template_cache::TemplateCache::populate (1 samples, 0.28%)</title><rect x="54.2614%" y="725" width="0.2841%" height="15" fill="rgb(237,210,37)" fg:x="191" fg:w="1"/><text x="54.5114%" y="735.50"></text></g><g><title>evtx::binxml::tokens::read_template_definition (1 samples, 0.28%)</title><rect x="54.2614%" y="709" width="0.2841%" height="15" fill="rgb(212,49,23)" fg:x="191" fg:w="1"/><text x="54.5114%" y="719.50"></text></g><g><title>evtx::binxml::deserializer::BinXmlDeserializer::read_binxml_fragment (1 samples, 0.28%)</title><rect x="54.2614%" y="693" width="0.2841%" height="15" fill="rgb(228,161,17)" fg:x="191" fg:w="1"/><text x="54.5114%" y="703.50"></text></g><g><title>&lt;evtx::binxml::deserializer::IterTokens as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.28%)</title><rect x="54.2614%" y="677" width="0.2841%" height="15" fill="rgb(214,203,36)" fg:x="191" fg:w="1"/><text x="54.5114%" y="687.50"></text></g><g><title>evtx::binxml::deserializer::IterTokens::inner_next (1 samples, 0.28%)</title><rect x="54.2614%" y="661" width="0.2841%" height="15" fill="rgb(226,63,28)" fg:x="191" fg:w="1"/><text x="54.5114%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.28%)</title><rect x="54.5455%" y="501" width="0.2841%" height="15" fill="rgb(241,229,15)" fg:x="192" fg:w="1"/><text x="54.7955%" y="511.50"></text></g><g><title>core::ptr::write (1 samples, 0.28%)</title><rect x="54.5455%" y="485" width="0.2841%" height="15" fill="rgb(209,143,44)" fg:x="192" fg:w="1"/><text x="54.7955%" y="495.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.28%)</title><rect x="54.8295%" y="501" width="0.2841%" height="15" fill="rgb(217,126,36)" fg:x="193" fg:w="1"/><text x="55.0795%" y="511.50"></text></g><g><title>evtx::binxml::assemble::create_record_model (3 samples, 0.85%)</title><rect x="54.5455%" y="517" width="0.8523%" height="15" fill="rgb(205,139,36)" fg:x="192" fg:w="3"/><text x="54.7955%" y="527.50"></text></g><g><title>&lt;evtx::xml_output::XmlOutput&lt;W&gt; as evtx::xml_output::BinXmlOutput&gt;::visit_open_start_element (2 samples, 0.57%)</title><rect x="55.3977%" y="517" width="0.5682%" height="15" fill="rgb(243,65,32)" fg:x="195" fg:w="2"/><text x="55.6477%" y="527.50"></text></g><g><title>quick_xml::events::BytesStart::push_attribute (2 samples, 0.57%)</title><rect x="55.3977%" y="501" width="0.5682%" height="15" fill="rgb(254,74,48)" fg:x="195" fg:w="2"/><text x="55.6477%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.57%)</title><rect x="55.3977%" y="485" width="0.5682%" height="15" fill="rgb(241,229,15)" fg:x="195" fg:w="2"/><text x="55.6477%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.57%)</title><rect x="55.3977%" y="469" width="0.5682%" height="15" fill="rgb(254,103,39)" fg:x="195" fg:w="2"/><text x="55.6477%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.57%)</title><rect x="55.3977%" y="453" width="0.5682%" height="15" fill="rgb(254,53,35)" fg:x="195" fg:w="2"/><text x="55.6477%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.57%)</title><rect x="55.3977%" y="437" width="0.5682%" height="15" fill="rgb(237,133,22)" fg:x="195" fg:w="2"/><text x="55.6477%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.57%)</title><rect x="55.3977%" y="421" width="0.5682%" height="15" fill="rgb(237,156,49)" fg:x="195" fg:w="2"/><text x="55.6477%" y="431.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.57%)</title><rect x="55.3977%" y="405" width="0.5682%" height="15" fill="rgb(214,150,36)" fg:x="195" fg:w="2"/><text x="55.6477%" y="415.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.57%)</title><rect x="55.3977%" y="389" width="0.5682%" height="15" fill="rgb(254,47,34)" fg:x="195" fg:w="2"/><text x="55.6477%" y="399.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.57%)</title><rect x="55.3977%" y="373" width="0.5682%" height="15" fill="rgb(254,73,4)" fg:x="195" fg:w="2"/><text x="55.6477%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6 samples, 1.70%)</title><rect x="54.5455%" y="645" width="1.7045%" height="15" fill="rgb(254,35,30)" fg:x="192" fg:w="6"/><text x="54.7955%" y="655.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (6 samples, 1.70%)</title><rect x="54.5455%" y="629" width="1.7045%" height="15" fill="rgb(226,169,23)" fg:x="192" fg:w="6"/><text x="54.7955%" y="639.50"></text></g><g><title>evtx::evtx_parser::EvtxParser&lt;T&gt;::records::{{closure}} (6 samples, 1.70%)</title><rect x="54.5455%" y="613" width="1.7045%" height="15" fill="rgb(247,66,44)" fg:x="192" fg:w="6"/><text x="54.7955%" y="623.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (6 samples, 1.70%)</title><rect x="54.5455%" y="597" width="1.7045%" height="15" fill="rgb(241,136,11)" fg:x="192" fg:w="6"/><text x="54.7955%" y="607.50"></text></g><g><title>evtx::evtx_parser::EvtxParser&lt;T&gt;::records::{{closure}}::{{closure}} (6 samples, 1.70%)</title><rect x="54.5455%" y="581" width="1.7045%" height="15" fill="rgb(234,41,1)" fg:x="192" fg:w="6"/><text x="54.7955%" y="591.50"></text></g><g><title>evtx::evtx_record::EvtxRecord::into_xml (6 samples, 1.70%)</title><rect x="54.5455%" y="565" width="1.7045%" height="15" fill="rgb(213,211,35)" fg:x="192" fg:w="6"/><text x="54.7955%" y="575.50"></text></g><g><title>evtx::evtx_record::EvtxRecord::into_output (6 samples, 1.70%)</title><rect x="54.5455%" y="549" width="1.7045%" height="15" fill="rgb(246,161,19)" fg:x="192" fg:w="6"/><text x="54.7955%" y="559.50"></text></g><g><title>evtx::binxml::assemble::parse_tokens (6 samples, 1.70%)</title><rect x="54.5455%" y="533" width="1.7045%" height="15" fill="rgb(228,114,17)" fg:x="192" fg:w="6"/><text x="54.7955%" y="543.50"></text></g><g><title>&lt;evtx::xml_output::XmlOutput&lt;W&gt; as evtx::xml_output::BinXmlOutput&gt;::visit_close_element (1 samples, 0.28%)</title><rect x="55.9659%" y="517" width="0.2841%" height="15" fill="rgb(250,188,16)" fg:x="197" fg:w="1"/><text x="56.2159%" y="527.50"></text></g><g><title>quick_xml::writer::Writer&lt;W&gt;::write_event (1 samples, 0.28%)</title><rect x="55.9659%" y="501" width="0.2841%" height="15" fill="rgb(234,37,14)" fg:x="197" fg:w="1"/><text x="56.2159%" y="511.50"></text></g><g><title>quick_xml::writer::Writer&lt;W&gt;::write_wrapped (1 samples, 0.28%)</title><rect x="55.9659%" y="485" width="0.2841%" height="15" fill="rgb(241,81,42)" fg:x="197" fg:w="1"/><text x="56.2159%" y="495.50"></text></g><g><title>quick_xml::writer::Writer&lt;W&gt;::write (1 samples, 0.28%)</title><rect x="55.9659%" y="469" width="0.2841%" height="15" fill="rgb(235,81,10)" fg:x="197" fg:w="1"/><text x="56.2159%" y="479.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.28%)</title><rect x="55.9659%" y="453" width="0.2841%" height="15" fill="rgb(231,96,28)" fg:x="197" fg:w="1"/><text x="56.2159%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.28%)</title><rect x="55.9659%" y="437" width="0.2841%" height="15" fill="rgb(243,52,34)" fg:x="197" fg:w="1"/><text x="56.2159%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.28%)</title><rect x="55.9659%" y="421" width="0.2841%" height="15" fill="rgb(224,207,30)" fg:x="197" fg:w="1"/><text x="56.2159%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.28%)</title><rect x="55.9659%" y="405" width="0.2841%" height="15" fill="rgb(251,49,54)" fg:x="197" fg:w="1"/><text x="56.2159%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.28%)</title><rect x="55.9659%" y="389" width="0.2841%" height="15" fill="rgb(212,159,3)" fg:x="197" fg:w="1"/><text x="56.2159%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.28%)</title><rect x="55.9659%" y="373" width="0.2841%" height="15" fill="rgb(231,142,39)" fg:x="197" fg:w="1"/><text x="56.2159%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.28%)</title><rect x="55.9659%" y="357" width="0.2841%" height="15" fill="rgb(249,2,22)" fg:x="197" fg:w="1"/><text x="56.2159%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.28%)</title><rect x="55.9659%" y="341" width="0.2841%" height="15" fill="rgb(254,53,35)" fg:x="197" fg:w="1"/><text x="56.2159%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.28%)</title><rect x="55.9659%" y="325" width="0.2841%" height="15" fill="rgb(237,133,22)" fg:x="197" fg:w="1"/><text x="56.2159%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.28%)</title><rect x="55.9659%" y="309" width="0.2841%" height="15" fill="rgb(237,156,49)" fg:x="197" fg:w="1"/><text x="56.2159%" y="319.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.28%)</title><rect x="55.9659%" y="293" width="0.2841%" height="15" fill="rgb(214,150,36)" fg:x="197" fg:w="1"/><text x="56.2159%" y="303.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.28%)</title><rect x="55.9659%" y="277" width="0.2841%" height="15" fill="rgb(254,47,34)" fg:x="197" fg:w="1"/><text x="56.2159%" y="287.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.28%)</title><rect x="55.9659%" y="261" width="0.2841%" height="15" fill="rgb(254,73,4)" fg:x="197" fg:w="1"/><text x="56.2159%" y="271.50"></text></g><g><title>_int_realloc (1 samples, 0.28%)</title><rect x="55.9659%" y="245" width="0.2841%" height="15" fill="rgb(231,75,41)" fg:x="197" fg:w="1"/><text x="56.2159%" y="255.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.28%)</title><rect x="55.9659%" y="229" width="0.2841%" height="15" fill="rgb(217,126,36)" fg:x="197" fg:w="1"/><text x="56.2159%" y="239.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (161 samples, 45.74%)</title><rect x="10.7955%" y="1365" width="45.7386%" height="15" fill="rgb(215,36,0)" fg:x="38" fg:w="161"/><text x="11.0455%" y="1375.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (156 samples, 44.32%)</title><rect x="12.2159%" y="1349" width="44.3182%" height="15" fill="rgb(228,202,16)" fg:x="43" fg:w="156"/><text x="12.4659%" y="1359.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (156 samples, 44.32%)</title><rect x="12.2159%" y="1333" width="44.3182%" height="15" fill="rgb(228,202,16)" fg:x="43" fg:w="156"/><text x="12.4659%" y="1343.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (156 samples, 44.32%)</title><rect x="12.2159%" y="1317" width="44.3182%" height="15" fill="rgb(218,104,40)" fg:x="43" fg:w="156"/><text x="12.4659%" y="1327.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (156 samples, 44.32%)</title><rect x="12.2159%" y="1301" width="44.3182%" height="15" fill="rgb(249,4,49)" fg:x="43" fg:w="156"/><text x="12.4659%" y="1311.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>std::panic::catch_unwind (148 samples, 42.05%)</title><rect x="14.4886%" y="1285" width="42.0455%" height="15" fill="rgb(216,75,8)" fg:x="51" fg:w="148"/><text x="14.7386%" y="1295.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (148 samples, 42.05%)</title><rect x="14.4886%" y="1269" width="42.0455%" height="15" fill="rgb(212,61,29)" fg:x="51" fg:w="148"/><text x="14.7386%" y="1279.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (148 samples, 42.05%)</title><rect x="14.4886%" y="1253" width="42.0455%" height="15" fill="rgb(232,162,46)" fg:x="51" fg:w="148"/><text x="14.7386%" y="1263.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (148 samples, 42.05%)</title><rect x="14.4886%" y="1237" width="42.0455%" height="15" fill="rgb(230,83,13)" fg:x="51" fg:w="148"/><text x="14.7386%" y="1247.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (148 samples, 42.05%)</title><rect x="14.4886%" y="1221" width="42.0455%" height="15" fill="rgb(214,132,49)" fg:x="51" fg:w="148"/><text x="14.7386%" y="1231.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (148 samples, 42.05%)</title><rect x="14.4886%" y="1205" width="42.0455%" height="15" fill="rgb(210,88,34)" fg:x="51" fg:w="148"/><text x="14.7386%" y="1215.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (113 samples, 32.10%)</title><rect x="24.4318%" y="1189" width="32.1023%" height="15" fill="rgb(216,22,39)" fg:x="86" fg:w="113"/><text x="24.6818%" y="1199.50">&lt;rayon_core::registry::DefaultSpawn as rayon_core::r..</text></g><g><title>rayon_core::registry::ThreadBuilder::run (113 samples, 32.10%)</title><rect x="24.4318%" y="1173" width="32.1023%" height="15" fill="rgb(231,207,47)" fg:x="86" fg:w="113"/><text x="24.6818%" y="1183.50">rayon_core::registry::ThreadBuilder::run</text></g><g><title>rayon_core::registry::main_loop (113 samples, 32.10%)</title><rect x="24.4318%" y="1157" width="32.1023%" height="15" fill="rgb(217,148,41)" fg:x="86" fg:w="113"/><text x="24.6818%" y="1167.50">rayon_core::registry::main_loop</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_out_of_work (113 samples, 32.10%)</title><rect x="24.4318%" y="1141" width="32.1023%" height="15" fill="rgb(222,152,23)" fg:x="86" fg:w="113"/><text x="24.6818%" y="1151.50">rayon_core::registry::WorkerThread::wait_until_out_o..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until (113 samples, 32.10%)</title><rect x="24.4318%" y="1125" width="32.1023%" height="15" fill="rgb(227,154,41)" fg:x="86" fg:w="113"/><text x="24.6818%" y="1135.50">rayon_core::registry::WorkerThread::wait_until</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (113 samples, 32.10%)</title><rect x="24.4318%" y="1109" width="32.1023%" height="15" fill="rgb(225,33,48)" fg:x="86" fg:w="113"/><text x="24.6818%" y="1119.50">rayon_core::registry::WorkerThread::wait_until_cold</text></g><g><title>rayon_core::registry::WorkerThread::execute (25 samples, 7.10%)</title><rect x="49.4318%" y="1093" width="7.1023%" height="15" fill="rgb(244,160,11)" fg:x="174" fg:w="25"/><text x="49.6818%" y="1103.50">rayon_core..</text></g><g><title>rayon_core::job::JobRef::execute (25 samples, 7.10%)</title><rect x="49.4318%" y="1077" width="7.1023%" height="15" fill="rgb(248,14,9)" fg:x="174" fg:w="25"/><text x="49.6818%" y="1087.50">rayon_core..</text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (25 samples, 7.10%)</title><rect x="49.4318%" y="1061" width="7.1023%" height="15" fill="rgb(245,53,54)" fg:x="174" fg:w="25"/><text x="49.6818%" y="1071.50">&lt;rayon_cor..</text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (25 samples, 7.10%)</title><rect x="49.4318%" y="1045" width="7.1023%" height="15" fill="rgb(247,27,29)" fg:x="174" fg:w="25"/><text x="49.6818%" y="1055.50">rayon_core..</text></g><g><title>rayon_core::unwind::halt_unwinding (25 samples, 7.10%)</title><rect x="49.4318%" y="1029" width="7.1023%" height="15" fill="rgb(247,37,21)" fg:x="174" fg:w="25"/><text x="49.6818%" y="1039.50">rayon_core..</text></g><g><title>std::panic::catch_unwind (25 samples, 7.10%)</title><rect x="49.4318%" y="1013" width="7.1023%" height="15" fill="rgb(216,75,8)" fg:x="174" fg:w="25"/><text x="49.6818%" y="1023.50">std::panic..</text></g><g><title>std::panicking::try (25 samples, 7.10%)</title><rect x="49.4318%" y="997" width="7.1023%" height="15" fill="rgb(212,61,29)" fg:x="174" fg:w="25"/><text x="49.6818%" y="1007.50">std::panic..</text></g><g><title>std::panicking::try::do_call (25 samples, 7.10%)</title><rect x="49.4318%" y="981" width="7.1023%" height="15" fill="rgb(232,162,46)" fg:x="174" fg:w="25"/><text x="49.6818%" y="991.50">std::panic..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (25 samples, 7.10%)</title><rect x="49.4318%" y="965" width="7.1023%" height="15" fill="rgb(230,83,13)" fg:x="174" fg:w="25"/><text x="49.6818%" y="975.50">&lt;core::pan..</text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (25 samples, 7.10%)</title><rect x="49.4318%" y="949" width="7.1023%" height="15" fill="rgb(208,110,13)" fg:x="174" fg:w="25"/><text x="49.6818%" y="959.50">rayon_core..</text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (19 samples, 5.40%)</title><rect x="51.1364%" y="933" width="5.3977%" height="15" fill="rgb(238,223,8)" fg:x="180" fg:w="19"/><text x="51.3864%" y="943.50">rayon_c..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (19 samples, 5.40%)</title><rect x="51.1364%" y="917" width="5.3977%" height="15" fill="rgb(241,191,49)" fg:x="180" fg:w="19"/><text x="51.3864%" y="927.50">rayon::..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (19 samples, 5.40%)</title><rect x="51.1364%" y="901" width="5.3977%" height="15" fill="rgb(224,218,48)" fg:x="180" fg:w="19"/><text x="51.3864%" y="911.50">rayon::..</text></g><g><title>rayon::iter::plumbing::Producer::fold_with (8 samples, 2.27%)</title><rect x="54.2614%" y="885" width="2.2727%" height="15" fill="rgb(211,132,28)" fg:x="191" fg:w="8"/><text x="54.5114%" y="895.50">r..</text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (8 samples, 2.27%)</title><rect x="54.2614%" y="869" width="2.2727%" height="15" fill="rgb(248,215,30)" fg:x="191" fg:w="8"/><text x="54.5114%" y="879.50">&lt;..</text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (8 samples, 2.27%)</title><rect x="54.2614%" y="853" width="2.2727%" height="15" fill="rgb(238,97,11)" fg:x="191" fg:w="8"/><text x="54.5114%" y="863.50">r..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 2.27%)</title><rect x="54.2614%" y="837" width="2.2727%" height="15" fill="rgb(214,109,53)" fg:x="191" fg:w="8"/><text x="54.5114%" y="847.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::map (8 samples, 2.27%)</title><rect x="54.2614%" y="821" width="2.2727%" height="15" fill="rgb(254,35,30)" fg:x="191" fg:w="8"/><text x="54.5114%" y="831.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (8 samples, 2.27%)</title><rect x="54.2614%" y="805" width="2.2727%" height="15" fill="rgb(226,169,23)" fg:x="191" fg:w="8"/><text x="54.5114%" y="815.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (8 samples, 2.27%)</title><rect x="54.2614%" y="789" width="2.2727%" height="15" fill="rgb(237,94,10)" fg:x="191" fg:w="8"/><text x="54.5114%" y="799.50">c..</text></g><g><title>evtx::evtx_parser::EvtxParser&lt;T&gt;::serialized_records::{{closure}}::{{closure}} (8 samples, 2.27%)</title><rect x="54.2614%" y="773" width="2.2727%" height="15" fill="rgb(217,92,15)" fg:x="191" fg:w="8"/><text x="54.5114%" y="783.50">e..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (7 samples, 1.99%)</title><rect x="54.5455%" y="757" width="1.9886%" height="15" fill="rgb(222,213,17)" fg:x="192" fg:w="7"/><text x="54.7955%" y="767.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (7 samples, 1.99%)</title><rect x="54.5455%" y="741" width="1.9886%" height="15" fill="rgb(247,137,3)" fg:x="192" fg:w="7"/><text x="54.7955%" y="751.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 1.99%)</title><rect x="54.5455%" y="725" width="1.9886%" height="15" fill="rgb(227,158,43)" fg:x="192" fg:w="7"/><text x="54.7955%" y="735.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (7 samples, 1.99%)</title><rect x="54.5455%" y="709" width="1.9886%" height="15" fill="rgb(232,14,28)" fg:x="192" fg:w="7"/><text x="54.7955%" y="719.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (7 samples, 1.99%)</title><rect x="54.5455%" y="693" width="1.9886%" height="15" fill="rgb(232,211,42)" fg:x="192" fg:w="7"/><text x="54.7955%" y="703.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (7 samples, 1.99%)</title><rect x="54.5455%" y="677" width="1.9886%" height="15" fill="rgb(222,168,45)" fg:x="192" fg:w="7"/><text x="54.7955%" y="687.50">a..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 1.99%)</title><rect x="54.5455%" y="661" width="1.9886%" height="15" fill="rgb(214,109,53)" fg:x="192" fg:w="7"/><text x="54.7955%" y="671.50">&lt;..</text></g><g><title>&lt;evtx::evtx_chunk::IterChunkRecords as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.28%)</title><rect x="56.2500%" y="645" width="0.2841%" height="15" fill="rgb(238,213,6)" fg:x="198" fg:w="1"/><text x="56.5000%" y="655.50"></text></g><g><title>&lt;evtx::binxml::deserializer::IterTokens as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.28%)</title><rect x="56.2500%" y="629" width="0.2841%" height="15" fill="rgb(214,203,36)" fg:x="198" fg:w="1"/><text x="56.5000%" y="639.50"></text></g><g><title>evtx::binxml::deserializer::IterTokens::inner_next (1 samples, 0.28%)</title><rect x="56.2500%" y="613" width="0.2841%" height="15" fill="rgb(226,63,28)" fg:x="198" fg:w="1"/><text x="56.5000%" y="623.50"></text></g><g><title>evtx::binxml::deserializer::IterTokens::visit_token (1 samples, 0.28%)</title><rect x="56.2500%" y="597" width="0.2841%" height="15" fill="rgb(246,130,42)" fg:x="198" fg:w="1"/><text x="56.5000%" y="607.50"></text></g><g><title>evtx::binxml::tokens::read_template (1 samples, 0.28%)</title><rect x="56.2500%" y="581" width="0.2841%" height="15" fill="rgb(218,134,26)" fg:x="198" fg:w="1"/><text x="56.5000%" y="591.50"></text></g><g><title>evtx::binxml::value_variant::BinXmlValue::deserialize_value_type (1 samples, 0.28%)</title><rect x="56.2500%" y="565" width="0.2841%" height="15" fill="rgb(252,55,19)" fg:x="198" fg:w="1"/><text x="56.5000%" y="575.50"></text></g><g><title>evtx::binxml::deserializer::BinXmlDeserializer::read_binxml_fragment (1 samples, 0.28%)</title><rect x="56.2500%" y="549" width="0.2841%" height="15" fill="rgb(228,161,17)" fg:x="198" fg:w="1"/><text x="56.5000%" y="559.50"></text></g><g><title>&lt;evtx::binxml::deserializer::IterTokens as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.28%)</title><rect x="56.2500%" y="533" width="0.2841%" height="15" fill="rgb(214,203,36)" fg:x="198" fg:w="1"/><text x="56.5000%" y="543.50"></text></g><g><title>evtx::binxml::deserializer::IterTokens::inner_next (1 samples, 0.28%)</title><rect x="56.2500%" y="517" width="0.2841%" height="15" fill="rgb(226,63,28)" fg:x="198" fg:w="1"/><text x="56.5000%" y="527.50"></text></g><g><title>evtx::binxml::deserializer::IterTokens::visit_token (1 samples, 0.28%)</title><rect x="56.2500%" y="501" width="0.2841%" height="15" fill="rgb(246,130,42)" fg:x="198" fg:w="1"/><text x="56.5000%" y="511.50"></text></g><g><title>evtx::binxml::tokens::read_template (1 samples, 0.28%)</title><rect x="56.2500%" y="485" width="0.2841%" height="15" fill="rgb(218,134,26)" fg:x="198" fg:w="1"/><text x="56.5000%" y="495.50"></text></g><g><title>evtx::binxml::value_variant::BinXmlValue::deserialize_value_type (1 samples, 0.28%)</title><rect x="56.2500%" y="469" width="0.2841%" height="15" fill="rgb(252,55,19)" fg:x="198" fg:w="1"/><text x="56.5000%" y="479.50"></text></g><g><title>evtx::utils::binxml_utils::read_utf16_by_size (1 samples, 0.28%)</title><rect x="56.2500%" y="453" width="0.2841%" height="15" fill="rgb(218,45,23)" fg:x="198" fg:w="1"/><text x="56.5000%" y="463.50"></text></g><g><title>evtx::utils::binxml_utils::read_utf16_string (1 samples, 0.28%)</title><rect x="56.2500%" y="437" width="0.2841%" height="15" fill="rgb(236,196,39)" fg:x="198" fg:w="1"/><text x="56.5000%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.28%)</title><rect x="56.2500%" y="421" width="0.2841%" height="15" fill="rgb(222,213,17)" fg:x="198" fg:w="1"/><text x="56.5000%" y="431.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (1 samples, 0.28%)</title><rect x="56.2500%" y="405" width="0.2841%" height="15" fill="rgb(235,156,41)" fg:x="198" fg:w="1"/><text x="56.5000%" y="415.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.28%)</title><rect x="56.2500%" y="389" width="0.2841%" height="15" fill="rgb(236,86,7)" fg:x="198" fg:w="1"/><text x="56.5000%" y="399.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (1 samples, 0.28%)</title><rect x="56.2500%" y="373" width="0.2841%" height="15" fill="rgb(224,1,14)" fg:x="198" fg:w="1"/><text x="56.5000%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.28%)</title><rect x="56.2500%" y="357" width="0.2841%" height="15" fill="rgb(222,213,17)" fg:x="198" fg:w="1"/><text x="56.5000%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.28%)</title><rect x="56.2500%" y="341" width="0.2841%" height="15" fill="rgb(220,61,39)" fg:x="198" fg:w="1"/><text x="56.5000%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (1 samples, 0.28%)</title><rect x="56.2500%" y="325" width="0.2841%" height="15" fill="rgb(232,99,9)" fg:x="198" fg:w="1"/><text x="56.5000%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.28%)</title><rect x="56.2500%" y="309" width="0.2841%" height="15" fill="rgb(245,181,4)" fg:x="198" fg:w="1"/><text x="56.5000%" y="319.50"></text></g><g><title>__clone3 (162 samples, 46.02%)</title><rect x="10.7955%" y="1397" width="46.0227%" height="15" fill="rgb(252,169,8)" fg:x="38" fg:w="162"/><text x="11.0455%" y="1407.50">__clone3</text></g><g><title>start_thread (162 samples, 46.02%)</title><rect x="10.7955%" y="1381" width="46.0227%" height="15" fill="rgb(209,148,13)" fg:x="38" fg:w="162"/><text x="11.0455%" y="1391.50">start_thread</text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="56.5341%" y="1365" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="199" fg:w="1"/><text x="56.7841%" y="1375.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.28%)</title><rect x="56.8182%" y="1157" width="0.2841%" height="15" fill="rgb(210,204,4)" fg:x="200" fg:w="1"/><text x="57.0682%" y="1167.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.57%)</title><rect x="56.8182%" y="1269" width="0.5682%" height="15" fill="rgb(210,204,4)" fg:x="200" fg:w="2"/><text x="57.0682%" y="1279.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.57%)</title><rect x="56.8182%" y="1253" width="0.5682%" height="15" fill="rgb(210,204,4)" fg:x="200" fg:w="2"/><text x="57.0682%" y="1263.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.57%)</title><rect x="56.8182%" y="1237" width="0.5682%" height="15" fill="rgb(210,204,4)" fg:x="200" fg:w="2"/><text x="57.0682%" y="1247.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.57%)</title><rect x="56.8182%" y="1221" width="0.5682%" height="15" fill="rgb(210,204,4)" fg:x="200" fg:w="2"/><text x="57.0682%" y="1231.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.57%)</title><rect x="56.8182%" y="1205" width="0.5682%" height="15" fill="rgb(210,204,4)" fg:x="200" fg:w="2"/><text x="57.0682%" y="1215.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.57%)</title><rect x="56.8182%" y="1189" width="0.5682%" height="15" fill="rgb(210,204,4)" fg:x="200" fg:w="2"/><text x="57.0682%" y="1199.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.57%)</title><rect x="56.8182%" y="1173" width="0.5682%" height="15" fill="rgb(210,204,4)" fg:x="200" fg:w="2"/><text x="57.0682%" y="1183.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 1.14%)</title><rect x="56.8182%" y="1285" width="1.1364%" height="15" fill="rgb(210,204,4)" fg:x="200" fg:w="4"/><text x="57.0682%" y="1295.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 1.42%)</title><rect x="56.8182%" y="1317" width="1.4205%" height="15" fill="rgb(210,204,4)" fg:x="200" fg:w="5"/><text x="57.0682%" y="1327.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 1.42%)</title><rect x="56.8182%" y="1301" width="1.4205%" height="15" fill="rgb(210,204,4)" fg:x="200" fg:w="5"/><text x="57.0682%" y="1311.50"></text></g><g><title>[[kernel.kallsyms]] (86 samples, 24.43%)</title><rect x="56.8182%" y="1333" width="24.4318%" height="15" fill="rgb(210,204,4)" fg:x="200" fg:w="86"/><text x="57.0682%" y="1343.50">[[kernel.kallsyms]]</text></g><g><title>[[kernel.kallsyms]] (117 samples, 33.24%)</title><rect x="56.8182%" y="1349" width="33.2386%" height="15" fill="rgb(210,204,4)" fg:x="200" fg:w="117"/><text x="57.0682%" y="1359.50">[[kernel.kallsyms]]</text></g><g><title>all (352 samples, 100%)</title><rect x="0.0000%" y="1429" width="100.0000%" height="15" fill="rgb(206,183,37)" fg:x="0" fg:w="352"/><text x="0.2500%" y="1439.50"></text></g><g><title>Microsoft-Windo (314 samples, 89.20%)</title><rect x="10.7955%" y="1413" width="89.2045%" height="15" fill="rgb(206,94,23)" fg:x="38" fg:w="314"/><text x="11.0455%" y="1423.50">Microsoft-Windo</text></g><g><title>[[kernel.kallsyms]] (152 samples, 43.18%)</title><rect x="56.8182%" y="1397" width="43.1818%" height="15" fill="rgb(210,204,4)" fg:x="200" fg:w="152"/><text x="57.0682%" y="1407.50">[[kernel.kallsyms]]</text></g><g><title>[[kernel.kallsyms]] (152 samples, 43.18%)</title><rect x="56.8182%" y="1381" width="43.1818%" height="15" fill="rgb(210,204,4)" fg:x="200" fg:w="152"/><text x="57.0682%" y="1391.50">[[kernel.kallsyms]]</text></g><g><title>[[kernel.kallsyms]] (152 samples, 43.18%)</title><rect x="56.8182%" y="1365" width="43.1818%" height="15" fill="rgb(210,204,4)" fg:x="200" fg:w="152"/><text x="57.0682%" y="1375.50">[[kernel.kallsyms]]</text></g></svg></svg>