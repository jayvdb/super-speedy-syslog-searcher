<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1174" onload="init(evt)" viewBox="0 0 1200 1174" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: super_speedy_syslog_searcher 0.6.68; git: 1f68039; -freq 9000; created 20240316T233731-0700--><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1174" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph: super_speedy_syslog_searcher 0.6.68; git: 1f68039; -freq 9000; created 20240316T233731-0700<br/>; s4 ./logs/other/tests/gen-99999-1-Motley_Crue.log</text><text id="details" fill="rgb(0,0,0)" x="10" y="1157.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1157.00"> </text><svg id="frames" x="10" width="1180" total_samples="4716"><g><title>[[kernel.kallsyms]] (2 samples, 0.04%)</title><rect x="0.0000%" y="885" width="0.0424%" height="15" fill="rgb(210,204,4)" fg:x="0" fg:w="2"/><text x="0.2500%" y="895.50"></text></g><g><title>_dl_relocate_object (3 samples, 0.06%)</title><rect x="0.0000%" y="1013" width="0.0636%" height="15" fill="rgb(244,75,35)" fg:x="0" fg:w="3"/><text x="0.2500%" y="1023.50"></text></g><g><title>elf_dynamic_do_Rela (3 samples, 0.06%)</title><rect x="0.0000%" y="997" width="0.0636%" height="15" fill="rgb(234,90,53)" fg:x="0" fg:w="3"/><text x="0.2500%" y="1007.50"></text></g><g><title>elf_machine_rela_relative (3 samples, 0.06%)</title><rect x="0.0000%" y="981" width="0.0636%" height="15" fill="rgb(215,35,45)" fg:x="0" fg:w="3"/><text x="0.2500%" y="991.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.06%)</title><rect x="0.0000%" y="965" width="0.0636%" height="15" fill="rgb(210,204,4)" fg:x="0" fg:w="3"/><text x="0.2500%" y="975.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.06%)</title><rect x="0.0000%" y="949" width="0.0636%" height="15" fill="rgb(210,204,4)" fg:x="0" fg:w="3"/><text x="0.2500%" y="959.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.06%)</title><rect x="0.0000%" y="933" width="0.0636%" height="15" fill="rgb(210,204,4)" fg:x="0" fg:w="3"/><text x="0.2500%" y="943.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.06%)</title><rect x="0.0000%" y="917" width="0.0636%" height="15" fill="rgb(210,204,4)" fg:x="0" fg:w="3"/><text x="0.2500%" y="927.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.06%)</title><rect x="0.0000%" y="901" width="0.0636%" height="15" fill="rgb(210,204,4)" fg:x="0" fg:w="3"/><text x="0.2500%" y="911.50"></text></g><g><title>_dl_start (4 samples, 0.08%)</title><rect x="0.0000%" y="1077" width="0.0848%" height="15" fill="rgb(214,13,30)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1087.50"></text></g><g><title>_dl_start_final (4 samples, 0.08%)</title><rect x="0.0000%" y="1061" width="0.0848%" height="15" fill="rgb(222,52,46)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1071.50"></text></g><g><title>_dl_sysdep_start (4 samples, 0.08%)</title><rect x="0.0000%" y="1045" width="0.0848%" height="15" fill="rgb(238,104,49)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1055.50"></text></g><g><title>dl_main (4 samples, 0.08%)</title><rect x="0.0000%" y="1029" width="0.0848%" height="15" fill="rgb(253,59,10)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1039.50"></text></g><g><title>_dl_new_object (1 samples, 0.02%)</title><rect x="0.0636%" y="1013" width="0.0212%" height="15" fill="rgb(205,144,43)" fg:x="3" fg:w="1"/><text x="0.3136%" y="1023.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="0.0636%" y="997" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="3" fg:w="1"/><text x="0.3136%" y="1007.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="0.0636%" y="981" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="3" fg:w="1"/><text x="0.3136%" y="991.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="0.0636%" y="965" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="3" fg:w="1"/><text x="0.3136%" y="975.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="0.0636%" y="949" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="3" fg:w="1"/><text x="0.3136%" y="959.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="0.0636%" y="933" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="3" fg:w="1"/><text x="0.3136%" y="943.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="0.0636%" y="917" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="3" fg:w="1"/><text x="0.3136%" y="927.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="0.0636%" y="901" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="3" fg:w="1"/><text x="0.3136%" y="911.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (3 samples, 0.06%)</title><rect x="0.0848%" y="677" width="0.0636%" height="15" fill="rgb(251,162,0)" fg:x="4" fg:w="3"/><text x="0.3348%" y="687.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (3 samples, 0.06%)</title><rect x="0.0848%" y="661" width="0.0636%" height="15" fill="rgb(209,34,41)" fg:x="4" fg:w="3"/><text x="0.3348%" y="671.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (3 samples, 0.06%)</title><rect x="0.0848%" y="645" width="0.0636%" height="15" fill="rgb(241,196,44)" fg:x="4" fg:w="3"/><text x="0.3348%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove (4 samples, 0.08%)</title><rect x="0.0848%" y="725" width="0.0848%" height="15" fill="rgb(219,134,36)" fg:x="4" fg:w="4"/><text x="0.3348%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::erase_no_drop (4 samples, 0.08%)</title><rect x="0.0848%" y="709" width="0.0848%" height="15" fill="rgb(214,49,6)" fg:x="4" fg:w="4"/><text x="0.3348%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::erase (4 samples, 0.08%)</title><rect x="0.0848%" y="693" width="0.0848%" height="15" fill="rgb(210,92,3)" fg:x="4" fg:w="4"/><text x="0.3348%" y="703.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::leading_zeros (1 samples, 0.02%)</title><rect x="0.1484%" y="677" width="0.0212%" height="15" fill="rgb(224,118,23)" fg:x="7" fg:w="1"/><text x="0.3984%" y="687.50"></text></g><g><title>core::num::&lt;impl u16&gt;::leading_zeros (1 samples, 0.02%)</title><rect x="0.1484%" y="661" width="0.0212%" height="15" fill="rgb(239,94,41)" fg:x="7" fg:w="1"/><text x="0.3984%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (5 samples, 0.11%)</title><rect x="0.0848%" y="741" width="0.1060%" height="15" fill="rgb(215,93,43)" fg:x="4" fg:w="5"/><text x="0.3348%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="0.1908%" y="613" width="0.0212%" height="15" fill="rgb(248,169,8)" fg:x="9" fg:w="1"/><text x="0.4408%" y="623.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="0.1908%" y="597" width="0.0212%" height="15" fill="rgb(223,143,42)" fg:x="9" fg:w="1"/><text x="0.4408%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3 samples, 0.06%)</title><rect x="0.1908%" y="709" width="0.0636%" height="15" fill="rgb(212,33,36)" fg:x="9" fg:w="3"/><text x="0.4408%" y="719.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (3 samples, 0.06%)</title><rect x="0.1908%" y="693" width="0.0636%" height="15" fill="rgb(223,130,51)" fg:x="9" fg:w="3"/><text x="0.4408%" y="703.50"></text></g><g><title>core::hash::Hasher::write_usize (3 samples, 0.06%)</title><rect x="0.1908%" y="677" width="0.0636%" height="15" fill="rgb(243,181,40)" fg:x="9" fg:w="3"/><text x="0.4408%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.06%)</title><rect x="0.1908%" y="661" width="0.0636%" height="15" fill="rgb(253,26,19)" fg:x="9" fg:w="3"/><text x="0.4408%" y="671.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.06%)</title><rect x="0.1908%" y="645" width="0.0636%" height="15" fill="rgb(206,186,51)" fg:x="9" fg:w="3"/><text x="0.4408%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.06%)</title><rect x="0.1908%" y="629" width="0.0636%" height="15" fill="rgb(236,225,40)" fg:x="9" fg:w="3"/><text x="0.4408%" y="639.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::remove (9 samples, 0.19%)</title><rect x="0.0848%" y="805" width="0.1908%" height="15" fill="rgb(232,125,5)" fg:x="4" fg:w="9"/><text x="0.3348%" y="815.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::remove (9 samples, 0.19%)</title><rect x="0.0848%" y="789" width="0.1908%" height="15" fill="rgb(218,114,38)" fg:x="4" fg:w="9"/><text x="0.3348%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (9 samples, 0.19%)</title><rect x="0.0848%" y="773" width="0.1908%" height="15" fill="rgb(230,19,42)" fg:x="4" fg:w="9"/><text x="0.3348%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (9 samples, 0.19%)</title><rect x="0.0848%" y="757" width="0.1908%" height="15" fill="rgb(208,183,29)" fg:x="4" fg:w="9"/><text x="0.3348%" y="767.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.08%)</title><rect x="0.1908%" y="741" width="0.0848%" height="15" fill="rgb(241,1,29)" fg:x="9" fg:w="4"/><text x="0.4408%" y="751.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.08%)</title><rect x="0.1908%" y="725" width="0.0848%" height="15" fill="rgb(222,198,6)" fg:x="9" fg:w="4"/><text x="0.4408%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="0.2545%" y="709" width="0.0212%" height="15" fill="rgb(218,214,24)" fg:x="12" fg:w="1"/><text x="0.5045%" y="719.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="0.2545%" y="693" width="0.0212%" height="15" fill="rgb(230,187,21)" fg:x="12" fg:w="1"/><text x="0.5045%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="0.2545%" y="677" width="0.0212%" height="15" fill="rgb(244,191,49)" fg:x="12" fg:w="1"/><text x="0.5045%" y="687.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (1 samples, 0.02%)</title><rect x="0.2757%" y="805" width="0.0212%" height="15" fill="rgb(207,99,24)" fg:x="13" fg:w="1"/><text x="0.5257%" y="815.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="0.2757%" y="789" width="0.0212%" height="15" fill="rgb(216,92,21)" fg:x="13" fg:w="1"/><text x="0.5257%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="0.2757%" y="773" width="0.0212%" height="15" fill="rgb(228,156,5)" fg:x="13" fg:w="1"/><text x="0.5257%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (1 samples, 0.02%)</title><rect x="0.2757%" y="757" width="0.0212%" height="15" fill="rgb(231,28,3)" fg:x="13" fg:w="1"/><text x="0.5257%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.02%)</title><rect x="0.2757%" y="741" width="0.0212%" height="15" fill="rgb(252,63,32)" fg:x="13" fg:w="1"/><text x="0.5257%" y="751.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.02%)</title><rect x="0.2757%" y="725" width="0.0212%" height="15" fill="rgb(248,7,52)" fg:x="13" fg:w="1"/><text x="0.5257%" y="735.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.02%)</title><rect x="0.2757%" y="709" width="0.0212%" height="15" fill="rgb(209,34,41)" fg:x="13" fg:w="1"/><text x="0.5257%" y="719.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.02%)</title><rect x="0.2757%" y="693" width="0.0212%" height="15" fill="rgb(241,196,44)" fg:x="13" fg:w="1"/><text x="0.5257%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (1 samples, 0.02%)</title><rect x="0.2969%" y="757" width="0.0212%" height="15" fill="rgb(231,28,3)" fg:x="14" fg:w="1"/><text x="0.5469%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.02%)</title><rect x="0.2969%" y="741" width="0.0212%" height="15" fill="rgb(252,63,32)" fg:x="14" fg:w="1"/><text x="0.5469%" y="751.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.02%)</title><rect x="0.2969%" y="725" width="0.0212%" height="15" fill="rgb(248,7,52)" fg:x="14" fg:w="1"/><text x="0.5469%" y="735.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.02%)</title><rect x="0.2969%" y="709" width="0.0212%" height="15" fill="rgb(209,34,41)" fg:x="14" fg:w="1"/><text x="0.5469%" y="719.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.02%)</title><rect x="0.2969%" y="693" width="0.0212%" height="15" fill="rgb(241,196,44)" fg:x="14" fg:w="1"/><text x="0.5469%" y="703.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="0.3181%" y="757" width="0.0212%" height="15" fill="rgb(241,1,29)" fg:x="15" fg:w="1"/><text x="0.5681%" y="767.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="0.3181%" y="741" width="0.0212%" height="15" fill="rgb(222,198,6)" fg:x="15" fg:w="1"/><text x="0.5681%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (3 samples, 0.06%)</title><rect x="0.2969%" y="805" width="0.0636%" height="15" fill="rgb(246,128,43)" fg:x="14" fg:w="3"/><text x="0.5469%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (3 samples, 0.06%)</title><rect x="0.2969%" y="789" width="0.0636%" height="15" fill="rgb(207,58,42)" fg:x="14" fg:w="3"/><text x="0.5469%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (3 samples, 0.06%)</title><rect x="0.2969%" y="773" width="0.0636%" height="15" fill="rgb(243,133,17)" fg:x="14" fg:w="3"/><text x="0.5469%" y="783.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (1 samples, 0.02%)</title><rect x="0.3605%" y="741" width="0.0212%" height="15" fill="rgb(247,66,5)" fg:x="17" fg:w="1"/><text x="0.6105%" y="751.50"></text></g><g><title>std::io::stdio::Stdout::lock (2 samples, 0.04%)</title><rect x="0.3605%" y="773" width="0.0424%" height="15" fill="rgb(237,213,8)" fg:x="17" fg:w="2"/><text x="0.6105%" y="783.50"></text></g><g><title>std::sys_common::remutex::ReentrantMutex&lt;T&gt;::lock (2 samples, 0.04%)</title><rect x="0.3605%" y="757" width="0.0424%" height="15" fill="rgb(215,43,28)" fg:x="17" fg:w="2"/><text x="0.6105%" y="767.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::is_empty (1 samples, 0.02%)</title><rect x="0.4029%" y="757" width="0.0212%" height="15" fill="rgb(217,58,11)" fg:x="19" fg:w="1"/><text x="0.6529%" y="767.50"></text></g><g><title>std::io::stdio::Stdout::lock (3 samples, 0.06%)</title><rect x="0.4241%" y="677" width="0.0636%" height="15" fill="rgb(237,213,8)" fg:x="20" fg:w="3"/><text x="0.6741%" y="687.50"></text></g><g><title>std::sys_common::remutex::ReentrantMutex&lt;T&gt;::lock (3 samples, 0.06%)</title><rect x="0.4241%" y="661" width="0.0636%" height="15" fill="rgb(215,43,28)" fg:x="20" fg:w="3"/><text x="0.6741%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::stdio::StdoutLock&gt; (1 samples, 0.02%)</title><rect x="0.4877%" y="677" width="0.0212%" height="15" fill="rgb(228,164,19)" fg:x="23" fg:w="1"/><text x="0.7377%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys_common::remutex::ReentrantMutexGuard&lt;core::cell::RefCell&lt;std::io::buffered::linewriter::LineWriter&lt;std::io::stdio::StdoutRaw&gt;&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="0.4877%" y="661" width="0.0212%" height="15" fill="rgb(219,160,9)" fg:x="23" fg:w="1"/><text x="0.7377%" y="671.50"></text></g><g><title>&lt;std::sys_common::remutex::ReentrantMutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="0.4877%" y="645" width="0.0212%" height="15" fill="rgb(222,122,6)" fg:x="23" fg:w="1"/><text x="0.7377%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.02%)</title><rect x="0.5089%" y="581" width="0.0212%" height="15" fill="rgb(240,95,0)" fg:x="24" fg:w="1"/><text x="0.7589%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.02%)</title><rect x="0.5089%" y="565" width="0.0212%" height="15" fill="rgb(217,82,23)" fg:x="24" fg:w="1"/><text x="0.7589%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (1 samples, 0.02%)</title><rect x="0.5089%" y="549" width="0.0212%" height="15" fill="rgb(205,151,12)" fg:x="24" fg:w="1"/><text x="0.7589%" y="559.50"></text></g><g><title>std::sys_common::memchr::memrchr (9 samples, 0.19%)</title><rect x="0.5089%" y="629" width="0.1908%" height="15" fill="rgb(232,88,32)" fg:x="24" fg:w="9"/><text x="0.7589%" y="639.50"></text></g><g><title>std::sys::unix::memchr::memrchr (9 samples, 0.19%)</title><rect x="0.5089%" y="613" width="0.1908%" height="15" fill="rgb(223,76,45)" fg:x="24" fg:w="9"/><text x="0.7589%" y="623.50"></text></g><g><title>std::sys::unix::memchr::memrchr::memrchr_specific (9 samples, 0.19%)</title><rect x="0.5089%" y="597" width="0.1908%" height="15" fill="rgb(241,110,16)" fg:x="24" fg:w="9"/><text x="0.7589%" y="607.50"></text></g><g><title>__memrchr_evex (8 samples, 0.17%)</title><rect x="0.5301%" y="581" width="0.1696%" height="15" fill="rgb(249,31,17)" fg:x="25" fg:w="8"/><text x="0.7801%" y="591.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf::BufGuard::remaining (3 samples, 0.06%)</title><rect x="0.6997%" y="613" width="0.0636%" height="15" fill="rgb(226,15,49)" fg:x="33" fg:w="3"/><text x="0.9497%" y="623.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf::BufGuard::done (1 samples, 0.02%)</title><rect x="0.7634%" y="613" width="0.0212%" height="15" fill="rgb(235,173,45)" fg:x="36" fg:w="1"/><text x="1.0134%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 0.02%)</title><rect x="0.7634%" y="597" width="0.0212%" height="15" fill="rgb(228,217,33)" fg:x="36" fg:w="1"/><text x="1.0134%" y="607.50"></text></g><g><title>__GI___pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="0.7846%" y="533" width="0.0212%" height="15" fill="rgb(215,118,7)" fg:x="37" fg:w="1"/><text x="1.0346%" y="543.50"></text></g><g><title>__GI___pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="0.8058%" y="533" width="0.0212%" height="15" fill="rgb(234,197,42)" fg:x="38" fg:w="1"/><text x="1.0558%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (37 samples, 0.78%)</title><rect x="0.8270%" y="437" width="0.7846%" height="15" fill="rgb(210,204,4)" fg:x="39" fg:w="37"/><text x="1.0770%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (52 samples, 1.10%)</title><rect x="0.8270%" y="453" width="1.1026%" height="15" fill="rgb(210,204,4)" fg:x="39" fg:w="52"/><text x="1.0770%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (69 samples, 1.46%)</title><rect x="0.8270%" y="469" width="1.4631%" height="15" fill="rgb(210,204,4)" fg:x="39" fg:w="69"/><text x="1.0770%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (89 samples, 1.89%)</title><rect x="0.8270%" y="485" width="1.8872%" height="15" fill="rgb(210,204,4)" fg:x="39" fg:w="89"/><text x="1.0770%" y="495.50">[..</text></g><g><title>[[kernel.kallsyms]] (92 samples, 1.95%)</title><rect x="0.8270%" y="501" width="1.9508%" height="15" fill="rgb(210,204,4)" fg:x="39" fg:w="92"/><text x="1.0770%" y="511.50">[..</text></g><g><title>[[kernel.kallsyms]] (93 samples, 1.97%)</title><rect x="0.8270%" y="517" width="1.9720%" height="15" fill="rgb(210,204,4)" fg:x="39" fg:w="93"/><text x="1.0770%" y="527.50">[..</text></g><g><title>[[kernel.kallsyms]] (94 samples, 1.99%)</title><rect x="0.8270%" y="533" width="1.9932%" height="15" fill="rgb(210,204,4)" fg:x="39" fg:w="94"/><text x="1.0770%" y="543.50">[..</text></g><g><title>__GI___libc_write (99 samples, 2.10%)</title><rect x="0.7846%" y="549" width="2.0992%" height="15" fill="rgb(232,197,30)" fg:x="37" fg:w="99"/><text x="1.0346%" y="559.50">_..</text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (100 samples, 2.12%)</title><rect x="0.7846%" y="613" width="2.1204%" height="15" fill="rgb(239,119,25)" fg:x="37" fg:w="100"/><text x="1.0346%" y="623.50">&lt;..</text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (100 samples, 2.12%)</title><rect x="0.7846%" y="597" width="2.1204%" height="15" fill="rgb(236,163,16)" fg:x="37" fg:w="100"/><text x="1.0346%" y="607.50">&lt;..</text></g><g><title>std::sys::unix::fd::FileDesc::write (100 samples, 2.12%)</title><rect x="0.7846%" y="581" width="2.1204%" height="15" fill="rgb(247,26,49)" fg:x="37" fg:w="100"/><text x="1.0346%" y="591.50">s..</text></g><g><title>__GI___libc_write (100 samples, 2.12%)</title><rect x="0.7846%" y="565" width="2.1204%" height="15" fill="rgb(232,197,30)" fg:x="37" fg:w="100"/><text x="1.0346%" y="575.50">_..</text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (105 samples, 2.23%)</title><rect x="0.6997%" y="629" width="2.2265%" height="15" fill="rgb(240,178,54)" fg:x="33" fg:w="105"/><text x="0.9497%" y="639.50">s..</text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (25 samples, 0.53%)</title><rect x="2.9262%" y="581" width="0.5301%" height="15" fill="rgb(240,178,54)" fg:x="138" fg:w="25"/><text x="3.1762%" y="591.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (25 samples, 0.53%)</title><rect x="2.9262%" y="565" width="0.5301%" height="15" fill="rgb(239,119,25)" fg:x="138" fg:w="25"/><text x="3.1762%" y="575.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (25 samples, 0.53%)</title><rect x="2.9262%" y="549" width="0.5301%" height="15" fill="rgb(236,163,16)" fg:x="138" fg:w="25"/><text x="3.1762%" y="559.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (25 samples, 0.53%)</title><rect x="2.9262%" y="533" width="0.5301%" height="15" fill="rgb(247,26,49)" fg:x="138" fg:w="25"/><text x="3.1762%" y="543.50"></text></g><g><title>__GI___libc_write (25 samples, 0.53%)</title><rect x="2.9262%" y="517" width="0.5301%" height="15" fill="rgb(232,197,30)" fg:x="138" fg:w="25"/><text x="3.1762%" y="527.50"></text></g><g><title>__GI___libc_write (25 samples, 0.53%)</title><rect x="2.9262%" y="501" width="0.5301%" height="15" fill="rgb(232,197,30)" fg:x="138" fg:w="25"/><text x="3.1762%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (25 samples, 0.53%)</title><rect x="2.9262%" y="485" width="0.5301%" height="15" fill="rgb(210,204,4)" fg:x="138" fg:w="25"/><text x="3.1762%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (41 samples, 0.87%)</title><rect x="3.4563%" y="453" width="0.8694%" height="15" fill="rgb(210,204,4)" fg:x="163" fg:w="41"/><text x="3.7063%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (54 samples, 1.15%)</title><rect x="3.4563%" y="469" width="1.1450%" height="15" fill="rgb(210,204,4)" fg:x="163" fg:w="54"/><text x="3.7063%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (71 samples, 1.51%)</title><rect x="3.4563%" y="485" width="1.5055%" height="15" fill="rgb(210,204,4)" fg:x="163" fg:w="71"/><text x="3.7063%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (83 samples, 1.76%)</title><rect x="3.4563%" y="501" width="1.7600%" height="15" fill="rgb(210,204,4)" fg:x="163" fg:w="83"/><text x="3.7063%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (93 samples, 1.97%)</title><rect x="3.4563%" y="517" width="1.9720%" height="15" fill="rgb(210,204,4)" fg:x="163" fg:w="93"/><text x="3.7063%" y="527.50">[..</text></g><g><title>[[kernel.kallsyms]] (101 samples, 2.14%)</title><rect x="3.4563%" y="533" width="2.1416%" height="15" fill="rgb(210,204,4)" fg:x="163" fg:w="101"/><text x="3.7063%" y="543.50">[..</text></g><g><title>[[kernel.kallsyms]] (105 samples, 2.23%)</title><rect x="3.4563%" y="549" width="2.2265%" height="15" fill="rgb(210,204,4)" fg:x="163" fg:w="105"/><text x="3.7063%" y="559.50">[..</text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write (249 samples, 5.28%)</title><rect x="0.5089%" y="661" width="5.2799%" height="15" fill="rgb(226,48,36)" fg:x="24" fg:w="249"/><text x="0.7589%" y="671.50">&lt;std::..</text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write (249 samples, 5.28%)</title><rect x="0.5089%" y="645" width="5.2799%" height="15" fill="rgb(237,90,14)" fg:x="24" fg:w="249"/><text x="0.7589%" y="655.50">&lt;std::..</text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (135 samples, 2.86%)</title><rect x="2.9262%" y="629" width="2.8626%" height="15" fill="rgb(239,119,25)" fg:x="138" fg:w="135"/><text x="3.1762%" y="639.50">&lt;s..</text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (135 samples, 2.86%)</title><rect x="2.9262%" y="613" width="2.8626%" height="15" fill="rgb(236,163,16)" fg:x="138" fg:w="135"/><text x="3.1762%" y="623.50">&lt;s..</text></g><g><title>std::sys::unix::fd::FileDesc::write (135 samples, 2.86%)</title><rect x="2.9262%" y="597" width="2.8626%" height="15" fill="rgb(247,26,49)" fg:x="138" fg:w="135"/><text x="3.1762%" y="607.50">st..</text></g><g><title>__GI___libc_write (110 samples, 2.33%)</title><rect x="3.4563%" y="581" width="2.3325%" height="15" fill="rgb(232,197,30)" fg:x="163" fg:w="110"/><text x="3.7063%" y="591.50">_..</text></g><g><title>__GI___libc_write (110 samples, 2.33%)</title><rect x="3.4563%" y="565" width="2.3325%" height="15" fill="rgb(232,197,30)" fg:x="163" fg:w="110"/><text x="3.7063%" y="575.50">_..</text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write (253 samples, 5.36%)</title><rect x="0.5089%" y="677" width="5.3647%" height="15" fill="rgb(216,85,2)" fg:x="24" fg:w="253"/><text x="0.7589%" y="687.50">&lt;std::i..</text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write (259 samples, 5.49%)</title><rect x="0.4241%" y="693" width="5.4919%" height="15" fill="rgb(232,39,45)" fg:x="20" fg:w="259"/><text x="0.6741%" y="703.50">&lt;&amp;std::..</text></g><g><title>&lt;termcolor::WriterInner&lt;W&gt; as std::io::Write&gt;::write (263 samples, 5.58%)</title><rect x="0.4241%" y="725" width="5.5768%" height="15" fill="rgb(206,183,32)" fg:x="20" fg:w="263"/><text x="0.6741%" y="735.50">&lt;termco..</text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write (263 samples, 5.58%)</title><rect x="0.4241%" y="709" width="5.5768%" height="15" fill="rgb(215,142,33)" fg:x="20" fg:w="263"/><text x="0.6741%" y="719.50">&lt;std::i..</text></g><g><title>&lt;termcolor::StandardStream as std::io::Write&gt;::write (271 samples, 5.75%)</title><rect x="0.4241%" y="757" width="5.7464%" height="15" fill="rgb(250,180,25)" fg:x="20" fg:w="271"/><text x="0.6741%" y="767.50">&lt;termco..</text></g><g><title>&lt;termcolor::LossyStandardStream&lt;W&gt; as std::io::Write&gt;::write (271 samples, 5.75%)</title><rect x="0.4241%" y="741" width="5.7464%" height="15" fill="rgb(232,195,18)" fg:x="20" fg:w="271"/><text x="0.6741%" y="751.50">&lt;termco..</text></g><g><title>std::io::Write::write_all (277 samples, 5.87%)</title><rect x="0.4029%" y="773" width="5.8736%" height="15" fill="rgb(251,145,9)" fg:x="19" fg:w="277"/><text x="0.6529%" y="783.50">std::io..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (8 samples, 0.17%)</title><rect x="6.2765%" y="757" width="0.1696%" height="15" fill="rgb(215,149,39)" fg:x="296" fg:w="8"/><text x="6.5265%" y="767.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (8 samples, 0.17%)</title><rect x="6.2765%" y="741" width="0.1696%" height="15" fill="rgb(250,51,46)" fg:x="296" fg:w="8"/><text x="6.5265%" y="751.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (8 samples, 0.17%)</title><rect x="6.2765%" y="725" width="0.1696%" height="15" fill="rgb(242,192,3)" fg:x="296" fg:w="8"/><text x="6.5265%" y="735.50"></text></g><g><title>s4lib::data::line::LinePart::as_slice (32 samples, 0.68%)</title><rect x="6.2765%" y="773" width="0.6785%" height="15" fill="rgb(251,71,39)" fg:x="296" fg:w="32"/><text x="6.5265%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (1 samples, 0.02%)</title><rect x="6.9550%" y="725" width="0.0212%" height="15" fill="rgb(241,3,5)" fg:x="328" fg:w="1"/><text x="7.2050%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_store (1 samples, 0.02%)</title><rect x="6.9550%" y="709" width="0.0212%" height="15" fill="rgb(242,62,30)" fg:x="328" fg:w="1"/><text x="7.2050%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::stdio::StdoutLock&gt; (3 samples, 0.06%)</title><rect x="6.9550%" y="773" width="0.0636%" height="15" fill="rgb(228,164,19)" fg:x="328" fg:w="3"/><text x="7.2050%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys_common::remutex::ReentrantMutexGuard&lt;core::cell::RefCell&lt;std::io::buffered::linewriter::LineWriter&lt;std::io::stdio::StdoutRaw&gt;&gt;&gt;&gt; (3 samples, 0.06%)</title><rect x="6.9550%" y="757" width="0.0636%" height="15" fill="rgb(219,160,9)" fg:x="328" fg:w="3"/><text x="7.2050%" y="767.50"></text></g><g><title>&lt;std::sys_common::remutex::ReentrantMutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.06%)</title><rect x="6.9550%" y="741" width="0.0636%" height="15" fill="rgb(222,122,6)" fg:x="328" fg:w="3"/><text x="7.2050%" y="751.50"></text></g><g><title>core::hint::black_box (1 samples, 0.02%)</title><rect x="7.0187%" y="773" width="0.0212%" height="15" fill="rgb(239,79,33)" fg:x="331" fg:w="1"/><text x="7.2687%" y="783.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="7.0399%" y="741" width="0.0212%" height="15" fill="rgb(237,219,30)" fg:x="332" fg:w="1"/><text x="7.2899%" y="751.50"></text></g><g><title>&lt;T as core::option::SpecOptionPartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="7.0399%" y="725" width="0.0212%" height="15" fill="rgb(232,161,7)" fg:x="332" fg:w="1"/><text x="7.2899%" y="735.50"></text></g><g><title>core::cmp::PartialEq::ne (2 samples, 0.04%)</title><rect x="7.0399%" y="773" width="0.0424%" height="15" fill="rgb(238,191,27)" fg:x="332" fg:w="2"/><text x="7.2899%" y="783.50"></text></g><g><title>&lt;termcolor::ColorSpec as core::cmp::PartialEq&gt;::eq (2 samples, 0.04%)</title><rect x="7.0399%" y="757" width="0.0424%" height="15" fill="rgb(241,123,18)" fg:x="332" fg:w="2"/><text x="7.2899%" y="767.50"></text></g><g><title>std::io::stdio::Stdout::lock (1 samples, 0.02%)</title><rect x="7.0823%" y="613" width="0.0212%" height="15" fill="rgb(237,213,8)" fg:x="334" fg:w="1"/><text x="7.3323%" y="623.50"></text></g><g><title>std::sys_common::remutex::ReentrantMutex&lt;T&gt;::lock (1 samples, 0.02%)</title><rect x="7.0823%" y="597" width="0.0212%" height="15" fill="rgb(215,43,28)" fg:x="334" fg:w="1"/><text x="7.3323%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.02%)</title><rect x="7.0823%" y="581" width="0.0212%" height="15" fill="rgb(219,73,27)" fg:x="334" fg:w="1"/><text x="7.3323%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="7.0823%" y="565" width="0.0212%" height="15" fill="rgb(208,10,34)" fg:x="334" fg:w="1"/><text x="7.3323%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;std::io::buffered::linewriter::LineWriter&lt;std::io::stdio::StdoutRaw&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="7.1035%" y="597" width="0.0212%" height="15" fill="rgb(234,200,12)" fg:x="335" fg:w="1"/><text x="7.3535%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (1 samples, 0.02%)</title><rect x="7.1035%" y="581" width="0.0212%" height="15" fill="rgb(214,199,49)" fg:x="335" fg:w="1"/><text x="7.3535%" y="591.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="7.1035%" y="565" width="0.0212%" height="15" fill="rgb(228,176,44)" fg:x="335" fg:w="1"/><text x="7.3535%" y="575.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.02%)</title><rect x="7.1035%" y="549" width="0.0212%" height="15" fill="rgb(211,58,38)" fg:x="335" fg:w="1"/><text x="7.3535%" y="559.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.02%)</title><rect x="7.1035%" y="533" width="0.0212%" height="15" fill="rgb(232,210,49)" fg:x="335" fg:w="1"/><text x="7.3535%" y="543.50"></text></g><g><title>core::mem::replace (1 samples, 0.02%)</title><rect x="7.1035%" y="517" width="0.0212%" height="15" fill="rgb(240,40,18)" fg:x="335" fg:w="1"/><text x="7.3535%" y="527.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="7.1035%" y="501" width="0.0212%" height="15" fill="rgb(209,143,44)" fg:x="335" fg:w="1"/><text x="7.3535%" y="511.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (12 samples, 0.25%)</title><rect x="7.1247%" y="597" width="0.2545%" height="15" fill="rgb(252,84,39)" fg:x="336" fg:w="12"/><text x="7.3747%" y="607.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (12 samples, 0.25%)</title><rect x="7.1247%" y="581" width="0.2545%" height="15" fill="rgb(208,49,23)" fg:x="336" fg:w="12"/><text x="7.3747%" y="591.50"></text></g><g><title>core::cell::BorrowRefMut::new (12 samples, 0.25%)</title><rect x="7.1247%" y="565" width="0.2545%" height="15" fill="rgb(242,89,29)" fg:x="336" fg:w="12"/><text x="7.3747%" y="575.50"></text></g><g><title>__memrchr_evex (34 samples, 0.72%)</title><rect x="7.3791%" y="517" width="0.7209%" height="15" fill="rgb(249,31,17)" fg:x="348" fg:w="34"/><text x="7.6291%" y="527.50"></text></g><g><title>std::sys_common::memchr::memrchr (41 samples, 0.87%)</title><rect x="7.3791%" y="565" width="0.8694%" height="15" fill="rgb(232,88,32)" fg:x="348" fg:w="41"/><text x="7.6291%" y="575.50"></text></g><g><title>std::sys::unix::memchr::memrchr (41 samples, 0.87%)</title><rect x="7.3791%" y="549" width="0.8694%" height="15" fill="rgb(223,76,45)" fg:x="348" fg:w="41"/><text x="7.6291%" y="559.50"></text></g><g><title>std::sys::unix::memchr::memrchr::memrchr_specific (41 samples, 0.87%)</title><rect x="7.3791%" y="533" width="0.8694%" height="15" fill="rgb(241,110,16)" fg:x="348" fg:w="41"/><text x="7.6291%" y="543.50"></text></g><g><title>std::io::buffered::linewritershim::LineWriterShim&lt;W&gt;::flush_if_completed_line (1 samples, 0.02%)</title><rect x="8.2485%" y="565" width="0.0212%" height="15" fill="rgb(248,173,12)" fg:x="389" fg:w="1"/><text x="8.4985%" y="575.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_to_buffer_unchecked (2 samples, 0.04%)</title><rect x="8.2697%" y="549" width="0.0424%" height="15" fill="rgb(208,120,32)" fg:x="390" fg:w="2"/><text x="8.5197%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.04%)</title><rect x="8.2697%" y="533" width="0.0424%" height="15" fill="rgb(214,20,35)" fg:x="390" fg:w="2"/><text x="8.5197%" y="543.50"></text></g><g><title>__memmove_avx512_unaligned_erms (2 samples, 0.04%)</title><rect x="8.2697%" y="517" width="0.0424%" height="15" fill="rgb(217,126,36)" fg:x="390" fg:w="2"/><text x="8.5197%" y="527.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write (45 samples, 0.95%)</title><rect x="7.3791%" y="597" width="0.9542%" height="15" fill="rgb(226,48,36)" fg:x="348" fg:w="45"/><text x="7.6291%" y="607.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write (45 samples, 0.95%)</title><rect x="7.3791%" y="581" width="0.9542%" height="15" fill="rgb(237,90,14)" fg:x="348" fg:w="45"/><text x="7.6291%" y="591.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write (3 samples, 0.06%)</title><rect x="8.2697%" y="565" width="0.0636%" height="15" fill="rgb(250,14,31)" fg:x="390" fg:w="3"/><text x="8.5197%" y="575.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::spare_capacity (1 samples, 0.02%)</title><rect x="8.3121%" y="549" width="0.0212%" height="15" fill="rgb(242,195,50)" fg:x="392" fg:w="1"/><text x="8.5621%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::capacity (1 samples, 0.02%)</title><rect x="8.3121%" y="533" width="0.0212%" height="15" fill="rgb(240,191,46)" fg:x="392" fg:w="1"/><text x="8.5621%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (1 samples, 0.02%)</title><rect x="8.3121%" y="517" width="0.0212%" height="15" fill="rgb(219,191,19)" fg:x="392" fg:w="1"/><text x="8.5621%" y="527.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write (68 samples, 1.44%)</title><rect x="7.1035%" y="613" width="1.4419%" height="15" fill="rgb(216,85,2)" fg:x="335" fg:w="68"/><text x="7.3535%" y="623.50"></text></g><g><title>&lt;termcolor::Ansi&lt;W&gt; as std::io::Write&gt;::write (70 samples, 1.48%)</title><rect x="7.0823%" y="677" width="1.4843%" height="15" fill="rgb(207,158,40)" fg:x="334" fg:w="70"/><text x="7.3323%" y="687.50"></text></g><g><title>&lt;termcolor::IoStandardStream as std::io::Write&gt;::write (70 samples, 1.48%)</title><rect x="7.0823%" y="661" width="1.4843%" height="15" fill="rgb(227,89,5)" fg:x="334" fg:w="70"/><text x="7.3323%" y="671.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write (70 samples, 1.48%)</title><rect x="7.0823%" y="645" width="1.4843%" height="15" fill="rgb(215,142,33)" fg:x="334" fg:w="70"/><text x="7.3323%" y="655.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write (70 samples, 1.48%)</title><rect x="7.0823%" y="629" width="1.4843%" height="15" fill="rgb(232,39,45)" fg:x="334" fg:w="70"/><text x="7.3323%" y="639.50"></text></g><g><title>termcolor::Ansi&lt;W&gt;::write_str (72 samples, 1.53%)</title><rect x="7.0823%" y="709" width="1.5267%" height="15" fill="rgb(232,27,51)" fg:x="334" fg:w="72"/><text x="7.3323%" y="719.50"></text></g><g><title>std::io::Write::write_all (72 samples, 1.53%)</title><rect x="7.0823%" y="693" width="1.5267%" height="15" fill="rgb(251,145,9)" fg:x="334" fg:w="72"/><text x="7.3323%" y="703.50"></text></g><g><title>termcolor::Ansi&lt;W&gt;::write_color (5 samples, 0.11%)</title><rect x="8.6090%" y="709" width="0.1060%" height="15" fill="rgb(250,61,20)" fg:x="406" fg:w="5"/><text x="8.8590%" y="719.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::is_empty (1 samples, 0.02%)</title><rect x="8.7150%" y="693" width="0.0212%" height="15" fill="rgb(217,58,11)" fg:x="411" fg:w="1"/><text x="8.9650%" y="703.50"></text></g><g><title>std::sys_common::remutex::ReentrantMutex&lt;T&gt;::increment_lock_count (1 samples, 0.02%)</title><rect x="8.7362%" y="597" width="0.0212%" height="15" fill="rgb(233,10,25)" fg:x="412" fg:w="1"/><text x="8.9862%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::expect (1 samples, 0.02%)</title><rect x="8.7362%" y="581" width="0.0212%" height="15" fill="rgb(241,182,12)" fg:x="412" fg:w="1"/><text x="8.9862%" y="591.50"></text></g><g><title>std::io::stdio::Stdout::lock (7 samples, 0.15%)</title><rect x="8.7362%" y="629" width="0.1484%" height="15" fill="rgb(237,213,8)" fg:x="412" fg:w="7"/><text x="8.9862%" y="639.50"></text></g><g><title>std::sys_common::remutex::ReentrantMutex&lt;T&gt;::lock (7 samples, 0.15%)</title><rect x="8.7362%" y="613" width="0.1484%" height="15" fill="rgb(215,43,28)" fg:x="412" fg:w="7"/><text x="8.9862%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;std::io::buffered::linewriter::LineWriter&lt;std::io::stdio::StdoutRaw&gt;&gt;&gt; (4 samples, 0.08%)</title><rect x="8.8846%" y="613" width="0.0848%" height="15" fill="rgb(234,200,12)" fg:x="419" fg:w="4"/><text x="9.1346%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (4 samples, 0.08%)</title><rect x="8.8846%" y="597" width="0.0848%" height="15" fill="rgb(214,199,49)" fg:x="419" fg:w="4"/><text x="9.1346%" y="607.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (4 samples, 0.08%)</title><rect x="8.8846%" y="581" width="0.0848%" height="15" fill="rgb(228,176,44)" fg:x="419" fg:w="4"/><text x="9.1346%" y="591.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (4 samples, 0.08%)</title><rect x="8.8846%" y="565" width="0.0848%" height="15" fill="rgb(211,58,38)" fg:x="419" fg:w="4"/><text x="9.1346%" y="575.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (4 samples, 0.08%)</title><rect x="8.8846%" y="549" width="0.0848%" height="15" fill="rgb(232,210,49)" fg:x="419" fg:w="4"/><text x="9.1346%" y="559.50"></text></g><g><title>core::mem::replace (4 samples, 0.08%)</title><rect x="8.8846%" y="533" width="0.0848%" height="15" fill="rgb(240,40,18)" fg:x="419" fg:w="4"/><text x="9.1346%" y="543.50"></text></g><g><title>core::ptr::write (4 samples, 0.08%)</title><rect x="8.8846%" y="517" width="0.0848%" height="15" fill="rgb(209,143,44)" fg:x="419" fg:w="4"/><text x="9.1346%" y="527.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (2 samples, 0.04%)</title><rect x="8.9695%" y="613" width="0.0424%" height="15" fill="rgb(252,84,39)" fg:x="423" fg:w="2"/><text x="9.2195%" y="623.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (2 samples, 0.04%)</title><rect x="8.9695%" y="597" width="0.0424%" height="15" fill="rgb(208,49,23)" fg:x="423" fg:w="2"/><text x="9.2195%" y="607.50"></text></g><g><title>core::cell::BorrowRefMut::new (2 samples, 0.04%)</title><rect x="8.9695%" y="581" width="0.0424%" height="15" fill="rgb(242,89,29)" fg:x="423" fg:w="2"/><text x="9.2195%" y="591.50"></text></g><g><title>__memrchr_evex (11 samples, 0.23%)</title><rect x="9.0119%" y="533" width="0.2332%" height="15" fill="rgb(249,31,17)" fg:x="425" fg:w="11"/><text x="9.2619%" y="543.50"></text></g><g><title>std::sys_common::memchr::memrchr (13 samples, 0.28%)</title><rect x="9.0119%" y="581" width="0.2757%" height="15" fill="rgb(232,88,32)" fg:x="425" fg:w="13"/><text x="9.2619%" y="591.50"></text></g><g><title>std::sys::unix::memchr::memrchr (13 samples, 0.28%)</title><rect x="9.0119%" y="565" width="0.2757%" height="15" fill="rgb(223,76,45)" fg:x="425" fg:w="13"/><text x="9.2619%" y="575.50"></text></g><g><title>std::sys::unix::memchr::memrchr::memrchr_specific (13 samples, 0.28%)</title><rect x="9.0119%" y="549" width="0.2757%" height="15" fill="rgb(241,110,16)" fg:x="425" fg:w="13"/><text x="9.2619%" y="559.50"></text></g><g><title>__memmove_avx512_unaligned_erms (14 samples, 0.30%)</title><rect x="9.2875%" y="533" width="0.2969%" height="15" fill="rgb(217,126,36)" fg:x="438" fg:w="14"/><text x="9.5375%" y="543.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_to_buffer_unchecked (15 samples, 0.32%)</title><rect x="9.2875%" y="565" width="0.3181%" height="15" fill="rgb(208,120,32)" fg:x="438" fg:w="15"/><text x="9.5375%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (15 samples, 0.32%)</title><rect x="9.2875%" y="549" width="0.3181%" height="15" fill="rgb(214,20,35)" fg:x="438" fg:w="15"/><text x="9.5375%" y="559.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write (29 samples, 0.61%)</title><rect x="9.0119%" y="613" width="0.6149%" height="15" fill="rgb(226,48,36)" fg:x="425" fg:w="29"/><text x="9.2619%" y="623.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write (29 samples, 0.61%)</title><rect x="9.0119%" y="597" width="0.6149%" height="15" fill="rgb(237,90,14)" fg:x="425" fg:w="29"/><text x="9.2619%" y="607.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write (16 samples, 0.34%)</title><rect x="9.2875%" y="581" width="0.3393%" height="15" fill="rgb(250,14,31)" fg:x="438" fg:w="16"/><text x="9.5375%" y="591.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write (48 samples, 1.02%)</title><rect x="8.8846%" y="629" width="1.0178%" height="15" fill="rgb(216,85,2)" fg:x="419" fg:w="48"/><text x="9.1346%" y="639.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write (63 samples, 1.34%)</title><rect x="8.7362%" y="645" width="1.3359%" height="15" fill="rgb(232,39,45)" fg:x="412" fg:w="63"/><text x="8.9862%" y="655.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write (72 samples, 1.53%)</title><rect x="8.7362%" y="661" width="1.5267%" height="15" fill="rgb(215,142,33)" fg:x="412" fg:w="72"/><text x="8.9862%" y="671.50"></text></g><g><title>&lt;termcolor::Ansi&lt;W&gt; as std::io::Write&gt;::write (76 samples, 1.61%)</title><rect x="8.7362%" y="693" width="1.6115%" height="15" fill="rgb(207,158,40)" fg:x="412" fg:w="76"/><text x="8.9862%" y="703.50"></text></g><g><title>&lt;termcolor::IoStandardStream as std::io::Write&gt;::write (76 samples, 1.61%)</title><rect x="8.7362%" y="677" width="1.6115%" height="15" fill="rgb(227,89,5)" fg:x="412" fg:w="76"/><text x="8.9862%" y="687.50"></text></g><g><title>std::io::Write::write_all (82 samples, 1.74%)</title><rect x="8.7150%" y="709" width="1.7388%" height="15" fill="rgb(251,145,9)" fg:x="411" fg:w="82"/><text x="8.9650%" y="719.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::is_empty (5 samples, 0.11%)</title><rect x="10.4538%" y="661" width="0.1060%" height="15" fill="rgb(217,58,11)" fg:x="493" fg:w="5"/><text x="10.7038%" y="671.50"></text></g><g><title>std::sys_common::remutex::ReentrantMutex&lt;T&gt;::increment_lock_count (1 samples, 0.02%)</title><rect x="10.5598%" y="565" width="0.0212%" height="15" fill="rgb(233,10,25)" fg:x="498" fg:w="1"/><text x="10.8098%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::expect (1 samples, 0.02%)</title><rect x="10.5598%" y="549" width="0.0212%" height="15" fill="rgb(241,182,12)" fg:x="498" fg:w="1"/><text x="10.8098%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.02%)</title><rect x="10.5810%" y="565" width="0.0212%" height="15" fill="rgb(219,73,27)" fg:x="499" fg:w="1"/><text x="10.8310%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="10.5810%" y="549" width="0.0212%" height="15" fill="rgb(208,10,34)" fg:x="499" fg:w="1"/><text x="10.8310%" y="559.50"></text></g><g><title>std::sys_common::remutex::ReentrantMutex&lt;T&gt;::lock (9 samples, 0.19%)</title><rect x="10.5598%" y="581" width="0.1908%" height="15" fill="rgb(215,43,28)" fg:x="498" fg:w="9"/><text x="10.8098%" y="591.50"></text></g><g><title>std::io::stdio::Stdout::lock (10 samples, 0.21%)</title><rect x="10.5598%" y="597" width="0.2120%" height="15" fill="rgb(237,213,8)" fg:x="498" fg:w="10"/><text x="10.8098%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;std::io::buffered::linewriter::LineWriter&lt;std::io::stdio::StdoutRaw&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="10.7718%" y="581" width="0.0212%" height="15" fill="rgb(234,200,12)" fg:x="508" fg:w="1"/><text x="11.0218%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (1 samples, 0.02%)</title><rect x="10.7718%" y="565" width="0.0212%" height="15" fill="rgb(214,199,49)" fg:x="508" fg:w="1"/><text x="11.0218%" y="575.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="10.7718%" y="549" width="0.0212%" height="15" fill="rgb(228,176,44)" fg:x="508" fg:w="1"/><text x="11.0218%" y="559.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.02%)</title><rect x="10.7718%" y="533" width="0.0212%" height="15" fill="rgb(211,58,38)" fg:x="508" fg:w="1"/><text x="11.0218%" y="543.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.02%)</title><rect x="10.7718%" y="517" width="0.0212%" height="15" fill="rgb(232,210,49)" fg:x="508" fg:w="1"/><text x="11.0218%" y="527.50"></text></g><g><title>core::mem::replace (1 samples, 0.02%)</title><rect x="10.7718%" y="501" width="0.0212%" height="15" fill="rgb(240,40,18)" fg:x="508" fg:w="1"/><text x="11.0218%" y="511.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="10.7718%" y="485" width="0.0212%" height="15" fill="rgb(209,143,44)" fg:x="508" fg:w="1"/><text x="11.0218%" y="495.50"></text></g><g><title>std::sys_common::memchr::memrchr (5 samples, 0.11%)</title><rect x="10.7930%" y="549" width="0.1060%" height="15" fill="rgb(232,88,32)" fg:x="509" fg:w="5"/><text x="11.0430%" y="559.50"></text></g><g><title>std::sys::unix::memchr::memrchr (5 samples, 0.11%)</title><rect x="10.7930%" y="533" width="0.1060%" height="15" fill="rgb(223,76,45)" fg:x="509" fg:w="5"/><text x="11.0430%" y="543.50"></text></g><g><title>std::sys::unix::memchr::memrchr::memrchr_specific (5 samples, 0.11%)</title><rect x="10.7930%" y="517" width="0.1060%" height="15" fill="rgb(241,110,16)" fg:x="509" fg:w="5"/><text x="11.0430%" y="527.50"></text></g><g><title>__memrchr_evex (5 samples, 0.11%)</title><rect x="10.7930%" y="501" width="0.1060%" height="15" fill="rgb(249,31,17)" fg:x="509" fg:w="5"/><text x="11.0430%" y="511.50"></text></g><g><title>std::io::buffered::linewritershim::LineWriterShim&lt;W&gt;::flush_if_completed_line (2 samples, 0.04%)</title><rect x="10.8991%" y="549" width="0.0424%" height="15" fill="rgb(248,173,12)" fg:x="514" fg:w="2"/><text x="11.1491%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::last (2 samples, 0.04%)</title><rect x="10.8991%" y="533" width="0.0424%" height="15" fill="rgb(242,207,46)" fg:x="514" fg:w="2"/><text x="11.1491%" y="543.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_to_buffer_unchecked (3 samples, 0.06%)</title><rect x="10.9415%" y="533" width="0.0636%" height="15" fill="rgb(208,120,32)" fg:x="516" fg:w="3"/><text x="11.1915%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.06%)</title><rect x="10.9415%" y="517" width="0.0636%" height="15" fill="rgb(214,20,35)" fg:x="516" fg:w="3"/><text x="11.1915%" y="527.50"></text></g><g><title>__memmove_avx512_unaligned_erms (3 samples, 0.06%)</title><rect x="10.9415%" y="501" width="0.0636%" height="15" fill="rgb(217,126,36)" fg:x="516" fg:w="3"/><text x="11.1915%" y="511.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::spare_capacity (2 samples, 0.04%)</title><rect x="11.0051%" y="533" width="0.0424%" height="15" fill="rgb(242,195,50)" fg:x="519" fg:w="2"/><text x="11.2551%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::capacity (2 samples, 0.04%)</title><rect x="11.0051%" y="517" width="0.0424%" height="15" fill="rgb(240,191,46)" fg:x="519" fg:w="2"/><text x="11.2551%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (2 samples, 0.04%)</title><rect x="11.0051%" y="501" width="0.0424%" height="15" fill="rgb(219,191,19)" fg:x="519" fg:w="2"/><text x="11.2551%" y="511.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write (13 samples, 0.28%)</title><rect x="10.7930%" y="581" width="0.2757%" height="15" fill="rgb(226,48,36)" fg:x="509" fg:w="13"/><text x="11.0430%" y="591.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write (13 samples, 0.28%)</title><rect x="10.7930%" y="565" width="0.2757%" height="15" fill="rgb(237,90,14)" fg:x="509" fg:w="13"/><text x="11.0430%" y="575.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write (6 samples, 0.13%)</title><rect x="10.9415%" y="549" width="0.1272%" height="15" fill="rgb(250,14,31)" fg:x="516" fg:w="6"/><text x="11.1915%" y="559.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write (19 samples, 0.40%)</title><rect x="10.7718%" y="597" width="0.4029%" height="15" fill="rgb(216,85,2)" fg:x="508" fg:w="19"/><text x="11.0218%" y="607.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write (34 samples, 0.72%)</title><rect x="10.5598%" y="613" width="0.7209%" height="15" fill="rgb(232,39,45)" fg:x="498" fg:w="34"/><text x="10.8098%" y="623.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write (42 samples, 0.89%)</title><rect x="10.5598%" y="629" width="0.8906%" height="15" fill="rgb(215,142,33)" fg:x="498" fg:w="42"/><text x="10.8098%" y="639.50"></text></g><g><title>&lt;termcolor::Ansi&lt;W&gt; as std::io::Write&gt;::write (43 samples, 0.91%)</title><rect x="10.5598%" y="661" width="0.9118%" height="15" fill="rgb(207,158,40)" fg:x="498" fg:w="43"/><text x="10.8098%" y="671.50"></text></g><g><title>&lt;termcolor::IoStandardStream as std::io::Write&gt;::write (43 samples, 0.91%)</title><rect x="10.5598%" y="645" width="0.9118%" height="15" fill="rgb(227,89,5)" fg:x="498" fg:w="43"/><text x="10.8098%" y="655.50"></text></g><g><title>std::io::Write::write_all (54 samples, 1.15%)</title><rect x="10.4538%" y="677" width="1.1450%" height="15" fill="rgb(251,145,9)" fg:x="493" fg:w="54"/><text x="10.7038%" y="687.50"></text></g><g><title>&lt;termcolor::Ansi&lt;W&gt; as termcolor::WriteColor&gt;::reset (55 samples, 1.17%)</title><rect x="10.4538%" y="709" width="1.1662%" height="15" fill="rgb(226,70,2)" fg:x="493" fg:w="55"/><text x="10.7038%" y="719.50"></text></g><g><title>termcolor::Ansi&lt;W&gt;::write_str (55 samples, 1.17%)</title><rect x="10.4538%" y="693" width="1.1662%" height="15" fill="rgb(232,27,51)" fg:x="493" fg:w="55"/><text x="10.7038%" y="703.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="11.6200%" y="709" width="0.0212%" height="15" fill="rgb(245,132,34)" fg:x="548" fg:w="1"/><text x="11.8700%" y="719.50"></text></g><g><title>&lt;termcolor::Ansi&lt;W&gt; as termcolor::WriteColor&gt;::set_color (227 samples, 4.81%)</title><rect x="7.0823%" y="725" width="4.8134%" height="15" fill="rgb(208,123,3)" fg:x="334" fg:w="227"/><text x="7.3323%" y="735.50">&lt;termc..</text></g><g><title>&lt;termcolor::LossyStandardStream&lt;W&gt; as termcolor::WriteColor&gt;::set_color (230 samples, 4.88%)</title><rect x="7.0823%" y="757" width="4.8770%" height="15" fill="rgb(244,124,31)" fg:x="334" fg:w="230"/><text x="7.3323%" y="767.50">&lt;termc..</text></g><g><title>&lt;termcolor::WriterInner&lt;W&gt; as termcolor::WriteColor&gt;::set_color (230 samples, 4.88%)</title><rect x="7.0823%" y="741" width="4.8770%" height="15" fill="rgb(234,182,7)" fg:x="334" fg:w="230"/><text x="7.3323%" y="751.50">&lt;termc..</text></g><g><title>&lt;termcolor::StandardStream as termcolor::WriteColor&gt;::set_color (231 samples, 4.90%)</title><rect x="7.0823%" y="773" width="4.8982%" height="15" fill="rgb(217,221,27)" fg:x="334" fg:w="231"/><text x="7.3323%" y="783.50">&lt;termc..</text></g><g><title>&lt;termcolor::LossyStandardStream&lt;W&gt; as std::io::Write&gt;::flush (1 samples, 0.02%)</title><rect x="11.9805%" y="757" width="0.0212%" height="15" fill="rgb(236,94,3)" fg:x="565" fg:w="1"/><text x="12.2305%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (4 samples, 0.08%)</title><rect x="12.0017%" y="693" width="0.0848%" height="15" fill="rgb(219,73,27)" fg:x="566" fg:w="4"/><text x="12.2517%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.08%)</title><rect x="12.0017%" y="677" width="0.0848%" height="15" fill="rgb(208,10,34)" fg:x="566" fg:w="4"/><text x="12.2517%" y="687.50"></text></g><g><title>std::io::stdio::Stdout::lock (5 samples, 0.11%)</title><rect x="12.0017%" y="725" width="0.1060%" height="15" fill="rgb(237,213,8)" fg:x="566" fg:w="5"/><text x="12.2517%" y="735.50"></text></g><g><title>std::sys_common::remutex::ReentrantMutex&lt;T&gt;::lock (5 samples, 0.11%)</title><rect x="12.0017%" y="709" width="0.1060%" height="15" fill="rgb(215,43,28)" fg:x="566" fg:w="5"/><text x="12.2517%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (34 samples, 0.72%)</title><rect x="12.1077%" y="485" width="0.7209%" height="15" fill="rgb(210,204,4)" fg:x="571" fg:w="34"/><text x="12.3577%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (47 samples, 1.00%)</title><rect x="12.1077%" y="501" width="0.9966%" height="15" fill="rgb(210,204,4)" fg:x="571" fg:w="47"/><text x="12.3577%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (71 samples, 1.51%)</title><rect x="12.1077%" y="517" width="1.5055%" height="15" fill="rgb(210,204,4)" fg:x="571" fg:w="71"/><text x="12.3577%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (76 samples, 1.61%)</title><rect x="12.1077%" y="533" width="1.6115%" height="15" fill="rgb(210,204,4)" fg:x="571" fg:w="76"/><text x="12.3577%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (78 samples, 1.65%)</title><rect x="12.1077%" y="565" width="1.6539%" height="15" fill="rgb(210,204,4)" fg:x="571" fg:w="78"/><text x="12.3577%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (78 samples, 1.65%)</title><rect x="12.1077%" y="549" width="1.6539%" height="15" fill="rgb(210,204,4)" fg:x="571" fg:w="78"/><text x="12.3577%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (79 samples, 1.68%)</title><rect x="12.1077%" y="581" width="1.6751%" height="15" fill="rgb(210,204,4)" fg:x="571" fg:w="79"/><text x="12.3577%" y="591.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::flush (87 samples, 1.84%)</title><rect x="12.0017%" y="741" width="1.8448%" height="15" fill="rgb(224,207,51)" fg:x="566" fg:w="87"/><text x="12.2517%" y="751.50">&lt;..</text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::flush (82 samples, 1.74%)</title><rect x="12.1077%" y="725" width="1.7388%" height="15" fill="rgb(213,149,3)" fg:x="571" fg:w="82"/><text x="12.3577%" y="735.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::flush (82 samples, 1.74%)</title><rect x="12.1077%" y="709" width="1.7388%" height="15" fill="rgb(212,213,13)" fg:x="571" fg:w="82"/><text x="12.3577%" y="719.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::flush (82 samples, 1.74%)</title><rect x="12.1077%" y="693" width="1.7388%" height="15" fill="rgb(231,193,47)" fg:x="571" fg:w="82"/><text x="12.3577%" y="703.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (82 samples, 1.74%)</title><rect x="12.1077%" y="677" width="1.7388%" height="15" fill="rgb(240,178,54)" fg:x="571" fg:w="82"/><text x="12.3577%" y="687.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (82 samples, 1.74%)</title><rect x="12.1077%" y="661" width="1.7388%" height="15" fill="rgb(239,119,25)" fg:x="571" fg:w="82"/><text x="12.3577%" y="671.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (82 samples, 1.74%)</title><rect x="12.1077%" y="645" width="1.7388%" height="15" fill="rgb(236,163,16)" fg:x="571" fg:w="82"/><text x="12.3577%" y="655.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (82 samples, 1.74%)</title><rect x="12.1077%" y="629" width="1.7388%" height="15" fill="rgb(247,26,49)" fg:x="571" fg:w="82"/><text x="12.3577%" y="639.50"></text></g><g><title>__GI___libc_write (82 samples, 1.74%)</title><rect x="12.1077%" y="613" width="1.7388%" height="15" fill="rgb(232,197,30)" fg:x="571" fg:w="82"/><text x="12.3577%" y="623.50"></text></g><g><title>__GI___libc_write (82 samples, 1.74%)</title><rect x="12.1077%" y="597" width="1.7388%" height="15" fill="rgb(232,197,30)" fg:x="571" fg:w="82"/><text x="12.3577%" y="607.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::flush (88 samples, 1.87%)</title><rect x="12.0017%" y="757" width="1.8660%" height="15" fill="rgb(244,108,51)" fg:x="566" fg:w="88"/><text x="12.2517%" y="767.50">&lt;..</text></g><g><title>&lt;termcolor::StandardStream as std::io::Write&gt;::flush (90 samples, 1.91%)</title><rect x="11.9805%" y="773" width="1.9084%" height="15" fill="rgb(214,129,27)" fg:x="565" fg:w="90"/><text x="12.2305%" y="783.50">&lt;..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.55%)</title><rect x="13.8889%" y="773" width="0.5513%" height="15" fill="rgb(236,210,2)" fg:x="655" fg:w="26"/><text x="14.1389%" y="783.50"></text></g><g><title>s4lib::printer::printers::PrinterLogMessage::print_sysline_color (695 samples, 14.74%)</title><rect x="0.3605%" y="789" width="14.7371%" height="15" fill="rgb(253,154,21)" fg:x="17" fg:w="695"/><text x="0.6105%" y="799.50">s4lib::printer::printe..</text></g><g><title>s4lib::printer::printers::PrinterLogMessage::print_sysline (696 samples, 14.76%)</title><rect x="0.3605%" y="805" width="14.7583%" height="15" fill="rgb(244,86,43)" fg:x="17" fg:w="696"/><text x="0.6105%" y="815.50">s4lib::printer::printer..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.02%)</title><rect x="15.1187%" y="789" width="0.0212%" height="15" fill="rgb(237,8,32)" fg:x="713" fg:w="1"/><text x="15.3687%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="15.1187%" y="773" width="0.0212%" height="15" fill="rgb(228,156,5)" fg:x="713" fg:w="1"/><text x="15.3687%" y="783.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.02%)</title><rect x="15.1187%" y="757" width="0.0212%" height="15" fill="rgb(221,125,3)" fg:x="713" fg:w="1"/><text x="15.3687%" y="767.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.02%)</title><rect x="15.1399%" y="693" width="0.0212%" height="15" fill="rgb(209,34,41)" fg:x="714" fg:w="1"/><text x="15.3899%" y="703.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.02%)</title><rect x="15.1399%" y="677" width="0.0212%" height="15" fill="rgb(241,196,44)" fg:x="714" fg:w="1"/><text x="15.3899%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.04%)</title><rect x="15.1399%" y="741" width="0.0424%" height="15" fill="rgb(230,119,31)" fg:x="714" fg:w="2"/><text x="15.3899%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.04%)</title><rect x="15.1399%" y="725" width="0.0424%" height="15" fill="rgb(252,63,32)" fg:x="714" fg:w="2"/><text x="15.3899%" y="735.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (2 samples, 0.04%)</title><rect x="15.1399%" y="709" width="0.0424%" height="15" fill="rgb(248,7,52)" fg:x="714" fg:w="2"/><text x="15.3899%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.08%)</title><rect x="15.1399%" y="789" width="0.0848%" height="15" fill="rgb(218,89,21)" fg:x="714" fg:w="4"/><text x="15.3899%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (4 samples, 0.08%)</title><rect x="15.1399%" y="773" width="0.0848%" height="15" fill="rgb(207,60,33)" fg:x="714" fg:w="4"/><text x="15.3899%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4 samples, 0.08%)</title><rect x="15.1399%" y="757" width="0.0848%" height="15" fill="rgb(207,224,35)" fg:x="714" fg:w="4"/><text x="15.3899%" y="767.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.04%)</title><rect x="15.1824%" y="741" width="0.0424%" height="15" fill="rgb(241,1,29)" fg:x="716" fg:w="2"/><text x="15.4324%" y="751.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.04%)</title><rect x="15.1824%" y="725" width="0.0424%" height="15" fill="rgb(222,198,6)" fg:x="716" fg:w="2"/><text x="15.4324%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.04%)</title><rect x="15.1824%" y="709" width="0.0424%" height="15" fill="rgb(218,214,24)" fg:x="716" fg:w="2"/><text x="15.4324%" y="719.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.04%)</title><rect x="15.1824%" y="693" width="0.0424%" height="15" fill="rgb(230,187,21)" fg:x="716" fg:w="2"/><text x="15.4324%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.04%)</title><rect x="15.1824%" y="677" width="0.0424%" height="15" fill="rgb(244,191,49)" fg:x="716" fg:w="2"/><text x="15.4324%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.04%)</title><rect x="15.1824%" y="661" width="0.0424%" height="15" fill="rgb(215,158,9)" fg:x="716" fg:w="2"/><text x="15.4324%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::clear (5 samples, 0.11%)</title><rect x="15.2248%" y="789" width="0.1060%" height="15" fill="rgb(222,197,43)" fg:x="718" fg:w="5"/><text x="15.4748%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (5 samples, 0.11%)</title><rect x="15.2248%" y="773" width="0.1060%" height="15" fill="rgb(243,92,33)" fg:x="718" fg:w="5"/><text x="15.4748%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (5 samples, 0.11%)</title><rect x="15.2248%" y="757" width="0.1060%" height="15" fill="rgb(207,183,28)" fg:x="718" fg:w="5"/><text x="15.4748%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;&amp;mut hashbrown::raw::RawTable&lt;(usize,usize)&gt;,hashbrown::raw::RawTable&lt;(usize,usize)&gt;::clear::{{closure}}&gt;&gt; (5 samples, 0.11%)</title><rect x="15.2248%" y="741" width="0.1060%" height="15" fill="rgb(209,201,1)" fg:x="718" fg:w="5"/><text x="15.4748%" y="751.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.11%)</title><rect x="15.2248%" y="725" width="0.1060%" height="15" fill="rgb(248,92,43)" fg:x="718" fg:w="5"/><text x="15.4748%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear::{{closure}} (5 samples, 0.11%)</title><rect x="15.2248%" y="709" width="0.1060%" height="15" fill="rgb(246,76,40)" fg:x="718" fg:w="5"/><text x="15.4748%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear_no_drop (5 samples, 0.11%)</title><rect x="15.2248%" y="693" width="0.1060%" height="15" fill="rgb(226,12,21)" fg:x="718" fg:w="5"/><text x="15.4748%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::clear_no_drop (5 samples, 0.11%)</title><rect x="15.2248%" y="677" width="0.1060%" height="15" fill="rgb(251,91,17)" fg:x="718" fg:w="5"/><text x="15.4748%" y="687.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (5 samples, 0.11%)</title><rect x="15.2248%" y="661" width="0.1060%" height="15" fill="rgb(210,165,38)" fg:x="718" fg:w="5"/><text x="15.4748%" y="671.50"></text></g><g><title>core::intrinsics::write_bytes (5 samples, 0.11%)</title><rect x="15.2248%" y="645" width="0.1060%" height="15" fill="rgb(238,98,16)" fg:x="718" fg:w="5"/><text x="15.4748%" y="655.50"></text></g><g><title>__memset_avx512_unaligned_erms (5 samples, 0.11%)</title><rect x="15.2248%" y="629" width="0.1060%" height="15" fill="rgb(240,145,53)" fg:x="718" fg:w="5"/><text x="15.4748%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="15.3308%" y="709" width="0.0212%" height="15" fill="rgb(208,10,34)" fg:x="723" fg:w="1"/><text x="15.5808%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (2 samples, 0.04%)</title><rect x="15.3308%" y="725" width="0.0424%" height="15" fill="rgb(210,134,33)" fg:x="723" fg:w="2"/><text x="15.5808%" y="735.50"></text></g><g><title>crossbeam_channel::waker::SyncWaker::notify (3 samples, 0.06%)</title><rect x="15.3308%" y="741" width="0.0636%" height="15" fill="rgb(222,105,38)" fg:x="723" fg:w="3"/><text x="15.5808%" y="751.50"></text></g><g><title>crossbeam_channel::flavors::array::Channel&lt;T&gt;::read (8 samples, 0.17%)</title><rect x="15.3308%" y="757" width="0.1696%" height="15" fill="rgb(243,157,28)" fg:x="723" fg:w="8"/><text x="15.5808%" y="767.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (5 samples, 0.11%)</title><rect x="15.3944%" y="741" width="0.1060%" height="15" fill="rgb(234,151,54)" fg:x="726" fg:w="5"/><text x="15.6444%" y="751.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (5 samples, 0.11%)</title><rect x="15.3944%" y="725" width="0.1060%" height="15" fill="rgb(249,144,19)" fg:x="726" fg:w="5"/><text x="15.6444%" y="735.50"></text></g><g><title>__memmove_avx512_unaligned_erms (5 samples, 0.11%)</title><rect x="15.3944%" y="709" width="0.1060%" height="15" fill="rgb(217,126,36)" fg:x="726" fg:w="5"/><text x="15.6444%" y="719.50"></text></g><g><title>__memmove_avx512_unaligned_erms (40 samples, 0.85%)</title><rect x="15.5004%" y="757" width="0.8482%" height="15" fill="rgb(217,126,36)" fg:x="731" fg:w="40"/><text x="15.7504%" y="767.50"></text></g><g><title>crossbeam_channel::channel::read (49 samples, 1.04%)</title><rect x="15.3308%" y="773" width="1.0390%" height="15" fill="rgb(209,181,8)" fg:x="723" fg:w="49"/><text x="15.5808%" y="783.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (11 samples, 0.23%)</title><rect x="16.3698%" y="773" width="0.2332%" height="15" fill="rgb(206,149,53)" fg:x="772" fg:w="11"/><text x="16.6198%" y="783.50"></text></g><g><title>crossbeam_channel::select::SelectedOperation::recv (67 samples, 1.42%)</title><rect x="15.3308%" y="789" width="1.4207%" height="15" fill="rgb(206,140,19)" fg:x="723" fg:w="67"/><text x="15.5808%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="16.7515%" y="405" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="790" fg:w="1"/><text x="17.0015%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (25 samples, 0.53%)</title><rect x="16.7515%" y="421" width="0.5301%" height="15" fill="rgb(210,204,4)" fg:x="790" fg:w="25"/><text x="17.0015%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (30 samples, 0.64%)</title><rect x="16.7515%" y="437" width="0.6361%" height="15" fill="rgb(210,204,4)" fg:x="790" fg:w="30"/><text x="17.0015%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (31 samples, 0.66%)</title><rect x="16.7515%" y="453" width="0.6573%" height="15" fill="rgb(210,204,4)" fg:x="790" fg:w="31"/><text x="17.0015%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (32 samples, 0.68%)</title><rect x="16.7515%" y="485" width="0.6785%" height="15" fill="rgb(210,204,4)" fg:x="790" fg:w="32"/><text x="17.0015%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (32 samples, 0.68%)</title><rect x="16.7515%" y="469" width="0.6785%" height="15" fill="rgb(210,204,4)" fg:x="790" fg:w="32"/><text x="17.0015%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (39 samples, 0.83%)</title><rect x="16.7515%" y="501" width="0.8270%" height="15" fill="rgb(210,204,4)" fg:x="790" fg:w="39"/><text x="17.0015%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (42 samples, 0.89%)</title><rect x="16.7515%" y="517" width="0.8906%" height="15" fill="rgb(210,204,4)" fg:x="790" fg:w="42"/><text x="17.0015%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (43 samples, 0.91%)</title><rect x="16.7515%" y="549" width="0.9118%" height="15" fill="rgb(210,204,4)" fg:x="790" fg:w="43"/><text x="17.0015%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (43 samples, 0.91%)</title><rect x="16.7515%" y="533" width="0.9118%" height="15" fill="rgb(210,204,4)" fg:x="790" fg:w="43"/><text x="17.0015%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (45 samples, 0.95%)</title><rect x="16.7515%" y="565" width="0.9542%" height="15" fill="rgb(210,204,4)" fg:x="790" fg:w="45"/><text x="17.0015%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (46 samples, 0.98%)</title><rect x="16.7515%" y="581" width="0.9754%" height="15" fill="rgb(210,204,4)" fg:x="790" fg:w="46"/><text x="17.0015%" y="591.50"></text></g><g><title>std::sys::unix::futex::futex_wait (49 samples, 1.04%)</title><rect x="16.7515%" y="613" width="1.0390%" height="15" fill="rgb(219,16,26)" fg:x="790" fg:w="49"/><text x="17.0015%" y="623.50"></text></g><g><title>syscall (49 samples, 1.04%)</title><rect x="16.7515%" y="597" width="1.0390%" height="15" fill="rgb(207,84,5)" fg:x="790" fg:w="49"/><text x="17.0015%" y="607.50"></text></g><g><title>std::sys_common::thread_parker::futex::Parker::park (51 samples, 1.08%)</title><rect x="16.7515%" y="629" width="1.0814%" height="15" fill="rgb(252,86,25)" fg:x="790" fg:w="51"/><text x="17.0015%" y="639.50"></text></g><g><title>std::thread::park (53 samples, 1.12%)</title><rect x="16.7515%" y="645" width="1.1238%" height="15" fill="rgb(253,209,8)" fg:x="790" fg:w="53"/><text x="17.0015%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::thread::Thread&gt; (2 samples, 0.04%)</title><rect x="17.8329%" y="629" width="0.0424%" height="15" fill="rgb(231,169,49)" fg:x="841" fg:w="2"/><text x="18.0829%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::sync::Arc&lt;std::thread::Inner&gt;&gt;&gt; (2 samples, 0.04%)</title><rect x="17.8329%" y="613" width="0.0424%" height="15" fill="rgb(218,41,27)" fg:x="841" fg:w="2"/><text x="18.0829%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::thread::Inner&gt;&gt; (2 samples, 0.04%)</title><rect x="17.8329%" y="597" width="0.0424%" height="15" fill="rgb(229,222,0)" fg:x="841" fg:w="2"/><text x="18.0829%" y="607.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="17.8329%" y="581" width="0.0424%" height="15" fill="rgb(220,153,15)" fg:x="841" fg:w="2"/><text x="18.0829%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="17.8753%" y="453" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="843" fg:w="1"/><text x="18.1253%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="17.8753%" y="437" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="843" fg:w="1"/><text x="18.1253%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="17.8753%" y="421" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="843" fg:w="1"/><text x="18.1253%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.04%)</title><rect x="17.8753%" y="581" width="0.0424%" height="15" fill="rgb(210,204,4)" fg:x="843" fg:w="2"/><text x="18.1253%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.04%)</title><rect x="17.8753%" y="565" width="0.0424%" height="15" fill="rgb(210,204,4)" fg:x="843" fg:w="2"/><text x="18.1253%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.04%)</title><rect x="17.8753%" y="549" width="0.0424%" height="15" fill="rgb(210,204,4)" fg:x="843" fg:w="2"/><text x="18.1253%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.04%)</title><rect x="17.8753%" y="533" width="0.0424%" height="15" fill="rgb(210,204,4)" fg:x="843" fg:w="2"/><text x="18.1253%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.04%)</title><rect x="17.8753%" y="517" width="0.0424%" height="15" fill="rgb(210,204,4)" fg:x="843" fg:w="2"/><text x="18.1253%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.04%)</title><rect x="17.8753%" y="501" width="0.0424%" height="15" fill="rgb(210,204,4)" fg:x="843" fg:w="2"/><text x="18.1253%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.04%)</title><rect x="17.8753%" y="485" width="0.0424%" height="15" fill="rgb(210,204,4)" fg:x="843" fg:w="2"/><text x="18.1253%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.04%)</title><rect x="17.8753%" y="469" width="0.0424%" height="15" fill="rgb(210,204,4)" fg:x="843" fg:w="2"/><text x="18.1253%" y="479.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (778 samples, 16.50%)</title><rect x="17.8753%" y="629" width="16.4970%" height="15" fill="rgb(242,61,0)" fg:x="843" fg:w="778"/><text x="18.1253%" y="639.50">core::sync::atomic::spin_..</text></g><g><title>core::hint::spin_loop (778 samples, 16.50%)</title><rect x="17.8753%" y="613" width="16.4970%" height="15" fill="rgb(241,144,6)" fg:x="843" fg:w="778"/><text x="18.1253%" y="623.50">core::hint::spin_loop</text></g><g><title>core::core_arch::x86::sse2::_mm_pause (778 samples, 16.50%)</title><rect x="17.8753%" y="597" width="16.4970%" height="15" fill="rgb(213,129,2)" fg:x="843" fg:w="778"/><text x="18.1253%" y="607.50">core::core_arch::x86::sse..</text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="34.3723%" y="485" width="0.1060%" height="15" fill="rgb(210,204,4)" fg:x="1621" fg:w="5"/><text x="34.6223%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.17%)</title><rect x="34.3723%" y="501" width="0.1696%" height="15" fill="rgb(210,204,4)" fg:x="1621" fg:w="8"/><text x="34.6223%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 0.21%)</title><rect x="34.3723%" y="517" width="0.2120%" height="15" fill="rgb(210,204,4)" fg:x="1621" fg:w="10"/><text x="34.6223%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (27 samples, 0.57%)</title><rect x="34.3723%" y="533" width="0.5725%" height="15" fill="rgb(210,204,4)" fg:x="1621" fg:w="27"/><text x="34.6223%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (48 samples, 1.02%)</title><rect x="34.3723%" y="549" width="1.0178%" height="15" fill="rgb(210,204,4)" fg:x="1621" fg:w="48"/><text x="34.6223%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (57 samples, 1.21%)</title><rect x="34.3723%" y="565" width="1.2087%" height="15" fill="rgb(210,204,4)" fg:x="1621" fg:w="57"/><text x="34.6223%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (62 samples, 1.31%)</title><rect x="34.3723%" y="581" width="1.3147%" height="15" fill="rgb(210,204,4)" fg:x="1621" fg:w="62"/><text x="34.6223%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (65 samples, 1.38%)</title><rect x="34.3723%" y="597" width="1.3783%" height="15" fill="rgb(210,204,4)" fg:x="1621" fg:w="65"/><text x="34.6223%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (66 samples, 1.40%)</title><rect x="34.3723%" y="613" width="1.3995%" height="15" fill="rgb(210,204,4)" fg:x="1621" fg:w="66"/><text x="34.6223%" y="623.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (845 samples, 17.92%)</title><rect x="17.8753%" y="645" width="17.9177%" height="15" fill="rgb(224,200,25)" fg:x="843" fg:w="845"/><text x="18.1253%" y="655.50">crossbeam_utils::backoff::Ba..</text></g><g><title>__GI___sched_yield (67 samples, 1.42%)</title><rect x="34.3723%" y="629" width="1.4207%" height="15" fill="rgb(225,197,10)" fg:x="1621" fg:w="67"/><text x="34.6223%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.04%)</title><rect x="35.7930%" y="645" width="0.0424%" height="15" fill="rgb(219,73,27)" fg:x="1688" fg:w="2"/><text x="36.0430%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.04%)</title><rect x="35.7930%" y="629" width="0.0424%" height="15" fill="rgb(208,10,34)" fg:x="1688" fg:w="2"/><text x="36.0430%" y="639.50"></text></g><g><title>&lt;crossbeam_channel::select::Selected as core::convert::From&lt;usize&gt;&gt;::from (12 samples, 0.25%)</title><rect x="35.8355%" y="645" width="0.2545%" height="15" fill="rgb(239,171,22)" fg:x="1690" fg:w="12"/><text x="36.0855%" y="655.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (38 samples, 0.81%)</title><rect x="36.0899%" y="645" width="0.8058%" height="15" fill="rgb(210,59,24)" fg:x="1702" fg:w="38"/><text x="36.3399%" y="655.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::inner (38 samples, 0.81%)</title><rect x="36.0899%" y="629" width="0.8058%" height="15" fill="rgb(232,202,24)" fg:x="1702" fg:w="38"/><text x="36.3399%" y="639.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (38 samples, 0.81%)</title><rect x="36.0899%" y="613" width="0.8058%" height="15" fill="rgb(221,185,31)" fg:x="1702" fg:w="38"/><text x="36.3399%" y="623.50"></text></g><g><title>crossbeam_channel::context::Context::wait_until (951 samples, 20.17%)</title><rect x="16.7515%" y="661" width="20.1654%" height="15" fill="rgb(218,28,27)" fg:x="790" fg:w="951"/><text x="17.0015%" y="671.50">crossbeam_channel::context::Cont..</text></g><g><title>&lt;crossbeam_channel::select::Selected as core::cmp::PartialEq&gt;::eq (4 samples, 0.08%)</title><rect x="36.9169%" y="661" width="0.0848%" height="15" fill="rgb(228,83,35)" fg:x="1741" fg:w="4"/><text x="37.1669%" y="671.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock_contended (1 samples, 0.02%)</title><rect x="37.0017%" y="581" width="0.0212%" height="15" fill="rgb(225,1,38)" fg:x="1745" fg:w="1"/><text x="37.2517%" y="591.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::spin (1 samples, 0.02%)</title><rect x="37.0017%" y="565" width="0.0212%" height="15" fill="rgb(207,175,40)" fg:x="1745" fg:w="1"/><text x="37.2517%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (1 samples, 0.02%)</title><rect x="37.0017%" y="549" width="0.0212%" height="15" fill="rgb(211,9,34)" fg:x="1745" fg:w="1"/><text x="37.2517%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="37.0017%" y="533" width="0.0212%" height="15" fill="rgb(208,10,34)" fg:x="1745" fg:w="1"/><text x="37.2517%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (1 samples, 0.02%)</title><rect x="37.0229%" y="581" width="0.0212%" height="15" fill="rgb(212,142,23)" fg:x="1746" fg:w="1"/><text x="37.2729%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.02%)</title><rect x="37.0229%" y="565" width="0.0212%" height="15" fill="rgb(231,177,41)" fg:x="1746" fg:w="1"/><text x="37.2729%" y="575.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (8 samples, 0.17%)</title><rect x="37.0017%" y="613" width="0.1696%" height="15" fill="rgb(234,45,50)" fg:x="1745" fg:w="8"/><text x="37.2517%" y="623.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (8 samples, 0.17%)</title><rect x="37.0017%" y="597" width="0.1696%" height="15" fill="rgb(247,66,5)" fg:x="1745" fg:w="8"/><text x="37.2517%" y="607.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (10 samples, 0.21%)</title><rect x="37.1713%" y="581" width="0.2120%" height="15" fill="rgb(220,179,46)" fg:x="1753" fg:w="10"/><text x="37.4213%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;crossbeam_channel::waker::Waker&gt;&gt; (11 samples, 0.23%)</title><rect x="37.1713%" y="613" width="0.2332%" height="15" fill="rgb(247,227,24)" fg:x="1753" fg:w="11"/><text x="37.4213%" y="623.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.23%)</title><rect x="37.1713%" y="597" width="0.2332%" height="15" fill="rgb(212,177,19)" fg:x="1753" fg:w="11"/><text x="37.4213%" y="607.50"></text></g><g><title>std::sync::poison::Flag::done (1 samples, 0.02%)</title><rect x="37.3834%" y="581" width="0.0212%" height="15" fill="rgb(232,10,11)" fg:x="1763" fg:w="1"/><text x="37.6334%" y="591.50"></text></g><g><title>&lt;crossbeam_channel::flavors::array::Receiver&lt;T&gt; as crossbeam_channel::select::SelectHandle&gt;::unregister (21 samples, 0.45%)</title><rect x="37.0017%" y="645" width="0.4453%" height="15" fill="rgb(227,116,52)" fg:x="1745" fg:w="21"/><text x="37.2517%" y="655.50"></text></g><g><title>crossbeam_channel::waker::SyncWaker::unregister (21 samples, 0.45%)</title><rect x="37.0017%" y="629" width="0.4453%" height="15" fill="rgb(236,193,47)" fg:x="1745" fg:w="21"/><text x="37.2517%" y="639.50"></text></g><g><title>&lt;crossbeam_channel::channel::Receiver&lt;T&gt; as crossbeam_channel::select::SelectHandle&gt;::unregister (28 samples, 0.59%)</title><rect x="37.0017%" y="661" width="0.5937%" height="15" fill="rgb(240,190,47)" fg:x="1745" fg:w="28"/><text x="37.2517%" y="671.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (20 samples, 0.42%)</title><rect x="37.5954%" y="613" width="0.4241%" height="15" fill="rgb(234,45,50)" fg:x="1773" fg:w="20"/><text x="37.8454%" y="623.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (20 samples, 0.42%)</title><rect x="37.5954%" y="597" width="0.4241%" height="15" fill="rgb(247,66,5)" fg:x="1773" fg:w="20"/><text x="37.8454%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="38.0195%" y="581" width="0.0212%" height="15" fill="rgb(241,229,15)" fg:x="1793" fg:w="1"/><text x="38.2695%" y="591.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="38.0195%" y="565" width="0.0212%" height="15" fill="rgb(209,143,44)" fg:x="1793" fg:w="1"/><text x="38.2695%" y="575.50"></text></g><g><title>crossbeam_channel::waker::Waker::register (10 samples, 0.21%)</title><rect x="38.0195%" y="613" width="0.2120%" height="15" fill="rgb(232,5,17)" fg:x="1793" fg:w="10"/><text x="38.2695%" y="623.50"></text></g><g><title>crossbeam_channel::waker::Waker::register_with_packet (10 samples, 0.21%)</title><rect x="38.0195%" y="597" width="0.2120%" height="15" fill="rgb(240,87,39)" fg:x="1793" fg:w="10"/><text x="38.2695%" y="607.50"></text></g><g><title>&lt;crossbeam_channel::context::Context as core::clone::Clone&gt;::clone (9 samples, 0.19%)</title><rect x="38.0407%" y="581" width="0.1908%" height="15" fill="rgb(220,127,51)" fg:x="1794" fg:w="9"/><text x="38.2907%" y="591.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (9 samples, 0.19%)</title><rect x="38.0407%" y="565" width="0.1908%" height="15" fill="rgb(247,105,42)" fg:x="1794" fg:w="9"/><text x="38.2907%" y="575.50"></text></g><g><title>&lt;crossbeam_channel::channel::Receiver&lt;T&gt; as crossbeam_channel::select::SelectHandle&gt;::register (39 samples, 0.83%)</title><rect x="37.5954%" y="661" width="0.8270%" height="15" fill="rgb(232,111,38)" fg:x="1773" fg:w="39"/><text x="37.8454%" y="671.50"></text></g><g><title>&lt;crossbeam_channel::flavors::array::Receiver&lt;T&gt; as crossbeam_channel::select::SelectHandle&gt;::register (39 samples, 0.83%)</title><rect x="37.5954%" y="645" width="0.8270%" height="15" fill="rgb(249,116,40)" fg:x="1773" fg:w="39"/><text x="37.8454%" y="655.50"></text></g><g><title>crossbeam_channel::waker::SyncWaker::register (39 samples, 0.83%)</title><rect x="37.5954%" y="629" width="0.8270%" height="15" fill="rgb(224,150,31)" fg:x="1773" fg:w="39"/><text x="37.8454%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;crossbeam_channel::waker::Waker&gt;&gt; (9 samples, 0.19%)</title><rect x="38.2316%" y="613" width="0.1908%" height="15" fill="rgb(247,227,24)" fg:x="1803" fg:w="9"/><text x="38.4816%" y="623.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.19%)</title><rect x="38.2316%" y="597" width="0.1908%" height="15" fill="rgb(212,177,19)" fg:x="1803" fg:w="9"/><text x="38.4816%" y="607.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (9 samples, 0.19%)</title><rect x="38.2316%" y="581" width="0.1908%" height="15" fill="rgb(220,179,46)" fg:x="1803" fg:w="9"/><text x="38.4816%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.02%)</title><rect x="38.4224%" y="597" width="0.0212%" height="15" fill="rgb(219,73,27)" fg:x="1812" fg:w="1"/><text x="38.6724%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="38.4224%" y="581" width="0.0212%" height="15" fill="rgb(208,10,34)" fg:x="1812" fg:w="1"/><text x="38.6724%" y="591.50"></text></g><g><title>crossbeam_channel::flavors::array::Channel&lt;T&gt;::start_recv (10 samples, 0.21%)</title><rect x="38.4224%" y="613" width="0.2120%" height="15" fill="rgb(249,64,9)" fg:x="1812" fg:w="10"/><text x="38.6724%" y="623.50"></text></g><g><title>&lt;crossbeam_channel::flavors::array::Receiver&lt;T&gt; as crossbeam_channel::select::SelectHandle&gt;::accept (11 samples, 0.23%)</title><rect x="38.4224%" y="645" width="0.2332%" height="15" fill="rgb(241,147,36)" fg:x="1812" fg:w="11"/><text x="38.6724%" y="655.50"></text></g><g><title>&lt;crossbeam_channel::flavors::array::Receiver&lt;T&gt; as crossbeam_channel::select::SelectHandle&gt;::try_select (11 samples, 0.23%)</title><rect x="38.4224%" y="629" width="0.2332%" height="15" fill="rgb(205,196,31)" fg:x="1812" fg:w="11"/><text x="38.6724%" y="639.50"></text></g><g><title>&lt;crossbeam_channel::channel::Receiver&lt;T&gt; as crossbeam_channel::select::SelectHandle&gt;::accept (12 samples, 0.25%)</title><rect x="38.4224%" y="661" width="0.2545%" height="15" fill="rgb(231,180,15)" fg:x="1812" fg:w="12"/><text x="38.6724%" y="671.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="38.6768%" y="645" width="0.0212%" height="15" fill="rgb(242,38,10)" fg:x="1824" fg:w="1"/><text x="38.9268%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.13%)</title><rect x="38.6768%" y="661" width="0.1272%" height="15" fill="rgb(223,170,3)" fg:x="1824" fg:w="6"/><text x="38.9268%" y="671.50"></text></g><g><title>crossbeam_channel::select::run_select::{{closure}} (1,045 samples, 22.16%)</title><rect x="16.7515%" y="677" width="22.1586%" height="15" fill="rgb(241,20,29)" fg:x="790" fg:w="1045"/><text x="17.0015%" y="687.50">crossbeam_channel::select::run_sele..</text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (1,046 samples, 22.18%)</title><rect x="16.7515%" y="693" width="22.1798%" height="15" fill="rgb(251,136,16)" fg:x="790" fg:w="1046"/><text x="17.0015%" y="703.50">crossbeam_channel::context::Context..</text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.02%)</title><rect x="38.9313%" y="693" width="0.0212%" height="15" fill="rgb(211,58,38)" fg:x="1836" fg:w="1"/><text x="39.1813%" y="703.50"></text></g><g><title>core::mem::drop (1 samples, 0.02%)</title><rect x="38.9313%" y="677" width="0.0212%" height="15" fill="rgb(253,152,51)" fg:x="1836" fg:w="1"/><text x="39.1813%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;crossbeam_channel::context::Context&gt;&gt; (1 samples, 0.02%)</title><rect x="38.9313%" y="661" width="0.0212%" height="15" fill="rgb(232,132,28)" fg:x="1836" fg:w="1"/><text x="39.1813%" y="671.50"></text></g><g><title>crossbeam_channel::context::Context::with (1,050 samples, 22.26%)</title><rect x="16.7515%" y="741" width="22.2646%" height="15" fill="rgb(249,203,42)" fg:x="790" fg:w="1050"/><text x="17.0015%" y="751.50">crossbeam_channel::context::Context..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,050 samples, 22.26%)</title><rect x="16.7515%" y="725" width="22.2646%" height="15" fill="rgb(235,136,14)" fg:x="790" fg:w="1050"/><text x="17.0015%" y="735.50">std::thread::local::LocalKey&lt;T&gt;::tr..</text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (1,050 samples, 22.26%)</title><rect x="16.7515%" y="709" width="22.2646%" height="15" fill="rgb(251,136,16)" fg:x="790" fg:w="1050"/><text x="17.0015%" y="719.50">crossbeam_channel::context::Context..</text></g><g><title>core::sync::atomic::AtomicUsize::load (21 samples, 0.45%)</title><rect x="39.0161%" y="693" width="0.4453%" height="15" fill="rgb(219,73,27)" fg:x="1840" fg:w="21"/><text x="39.2661%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_load (21 samples, 0.45%)</title><rect x="39.0161%" y="677" width="0.4453%" height="15" fill="rgb(208,10,34)" fg:x="1840" fg:w="21"/><text x="39.2661%" y="687.50"></text></g><g><title>crossbeam_channel::flavors::array::Channel&lt;T&gt;::start_recv (31 samples, 0.66%)</title><rect x="39.0161%" y="709" width="0.6573%" height="15" fill="rgb(249,64,9)" fg:x="1840" fg:w="31"/><text x="39.2661%" y="719.50"></text></g><g><title>&lt;crossbeam_channel::flavors::array::Receiver&lt;T&gt; as crossbeam_channel::select::SelectHandle&gt;::try_select (35 samples, 0.74%)</title><rect x="39.0161%" y="725" width="0.7422%" height="15" fill="rgb(205,196,31)" fg:x="1840" fg:w="35"/><text x="39.2661%" y="735.50"></text></g><g><title>&lt;crossbeam_channel::counter::Receiver&lt;C&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.04%)</title><rect x="39.7583%" y="725" width="0.0424%" height="15" fill="rgb(231,28,53)" fg:x="1875" fg:w="2"/><text x="40.0083%" y="735.50"></text></g><g><title>&lt;crossbeam_channel::channel::Receiver&lt;T&gt; as crossbeam_channel::select::SelectHandle&gt;::try_select (40 samples, 0.85%)</title><rect x="39.0161%" y="741" width="0.8482%" height="15" fill="rgb(236,74,9)" fg:x="1840" fg:w="40"/><text x="39.2661%" y="751.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="39.8643%" y="741" width="0.0212%" height="15" fill="rgb(236,210,2)" fg:x="1880" fg:w="1"/><text x="40.1143%" y="751.50"></text></g><g><title>crossbeam_channel::select::select (1,095 samples, 23.22%)</title><rect x="16.7515%" y="773" width="23.2188%" height="15" fill="rgb(210,225,20)" fg:x="790" fg:w="1095"/><text x="17.0015%" y="783.50">crossbeam_channel::select::select</text></g><g><title>crossbeam_channel::select::run_select (1,095 samples, 23.22%)</title><rect x="16.7515%" y="757" width="23.2188%" height="15" fill="rgb(238,41,29)" fg:x="790" fg:w="1095"/><text x="17.0015%" y="767.50">crossbeam_channel::select::run_select</text></g><g><title>crossbeam_channel::select::Select::select (1,096 samples, 23.24%)</title><rect x="16.7515%" y="789" width="23.2400%" height="15" fill="rgb(218,151,27)" fg:x="790" fg:w="1096"/><text x="17.0015%" y="799.50">crossbeam_channel::select::Select::se..</text></g><g><title>crossbeam_channel::select::Select::recv (1 samples, 0.02%)</title><rect x="39.9915%" y="789" width="0.0212%" height="15" fill="rgb(212,83,2)" fg:x="1886" fg:w="1"/><text x="40.2415%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="39.9915%" y="773" width="0.0212%" height="15" fill="rgb(241,229,15)" fg:x="1886" fg:w="1"/><text x="40.2415%" y="783.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="39.9915%" y="757" width="0.0212%" height="15" fill="rgb(209,143,44)" fg:x="1886" fg:w="1"/><text x="40.2415%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.06%)</title><rect x="40.0127%" y="773" width="0.0636%" height="15" fill="rgb(253,154,22)" fg:x="1887" fg:w="3"/><text x="40.2627%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.06%)</title><rect x="40.0127%" y="757" width="0.0636%" height="15" fill="rgb(249,207,12)" fg:x="1887" fg:w="3"/><text x="40.2627%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.06%)</title><rect x="40.0127%" y="741" width="0.0636%" height="15" fill="rgb(224,194,14)" fg:x="1887" fg:w="3"/><text x="40.2627%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.06%)</title><rect x="40.0127%" y="725" width="0.0636%" height="15" fill="rgb(227,204,5)" fg:x="1887" fg:w="3"/><text x="40.2627%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.06%)</title><rect x="40.0127%" y="709" width="0.0636%" height="15" fill="rgb(231,114,21)" fg:x="1887" fg:w="3"/><text x="40.2627%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.06%)</title><rect x="40.0127%" y="693" width="0.0636%" height="15" fill="rgb(238,209,2)" fg:x="1887" fg:w="3"/><text x="40.2627%" y="703.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.06%)</title><rect x="40.0127%" y="677" width="0.0636%" height="15" fill="rgb(253,135,41)" fg:x="1887" fg:w="3"/><text x="40.2627%" y="687.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.06%)</title><rect x="40.0127%" y="661" width="0.0636%" height="15" fill="rgb(206,112,53)" fg:x="1887" fg:w="3"/><text x="40.2627%" y="671.50"></text></g><g><title>crossbeam_channel::select::Select::new (5 samples, 0.11%)</title><rect x="40.0127%" y="789" width="0.1060%" height="15" fill="rgb(225,174,32)" fg:x="1887" fg:w="5"/><text x="40.2627%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_channel::select::Select&gt; (1 samples, 0.02%)</title><rect x="40.1187%" y="789" width="0.0212%" height="15" fill="rgb(253,113,54)" fg:x="1892" fg:w="1"/><text x="40.3687%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(&amp;dyn crossbeam_channel::select::SelectHandle,usize,*const u8)&gt;&gt; (1 samples, 0.02%)</title><rect x="40.1187%" y="773" width="0.0212%" height="15" fill="rgb(245,73,19)" fg:x="1892" fg:w="1"/><text x="40.3687%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(&amp;dyn crossbeam_channel::select::SelectHandle,usize,*const u8)&gt;&gt; (1 samples, 0.02%)</title><rect x="40.1187%" y="757" width="0.0212%" height="15" fill="rgb(242,63,34)" fg:x="1892" fg:w="1"/><text x="40.3687%" y="767.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="40.1187%" y="741" width="0.0212%" height="15" fill="rgb(213,128,22)" fg:x="1892" fg:w="1"/><text x="40.3687%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="40.1187%" y="725" width="0.0212%" height="15" fill="rgb(238,77,31)" fg:x="1892" fg:w="1"/><text x="40.3687%" y="735.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="40.1187%" y="709" width="0.0212%" height="15" fill="rgb(227,15,28)" fg:x="1892" fg:w="1"/><text x="40.3687%" y="719.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="40.1187%" y="693" width="0.0212%" height="15" fill="rgb(247,8,17)" fg:x="1892" fg:w="1"/><text x="40.3687%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (1 samples, 0.02%)</title><rect x="40.1399%" y="789" width="0.0212%" height="15" fill="rgb(242,164,29)" fg:x="1893" fg:w="1"/><text x="40.3899%" y="799.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1 samples, 0.02%)</title><rect x="40.1399%" y="773" width="0.0212%" height="15" fill="rgb(217,165,36)" fg:x="1893" fg:w="1"/><text x="40.3899%" y="783.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1 samples, 0.02%)</title><rect x="40.1399%" y="757" width="0.0212%" height="15" fill="rgb(220,202,26)" fg:x="1893" fg:w="1"/><text x="40.3899%" y="767.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1 samples, 0.02%)</title><rect x="40.1399%" y="741" width="0.0212%" height="15" fill="rgb(233,132,38)" fg:x="1893" fg:w="1"/><text x="40.3899%" y="751.50"></text></g><g><title>__memmove_avx512_unaligned_erms (13 samples, 0.28%)</title><rect x="40.1612%" y="789" width="0.2757%" height="15" fill="rgb(217,126,36)" fg:x="1894" fg:w="13"/><text x="40.4112%" y="799.50"></text></g><g><title>s4::processing_loop::recv_many_chan (1,196 samples, 25.36%)</title><rect x="15.1187%" y="805" width="25.3605%" height="15" fill="rgb(253,70,6)" fg:x="713" fg:w="1196"/><text x="15.3687%" y="815.50">s4::processing_loop::recv_many_chan</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.04%)</title><rect x="40.4792%" y="725" width="0.0424%" height="15" fill="rgb(219,139,21)" fg:x="1909" fg:w="2"/><text x="40.7292%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.04%)</title><rect x="40.4792%" y="709" width="0.0424%" height="15" fill="rgb(219,1,20)" fg:x="1909" fg:w="2"/><text x="40.7292%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;s4lib::data::sysline::Sysline&gt;&gt; (6 samples, 0.13%)</title><rect x="40.4792%" y="757" width="0.1272%" height="15" fill="rgb(216,215,37)" fg:x="1909" fg:w="6"/><text x="40.7292%" y="767.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.13%)</title><rect x="40.4792%" y="741" width="0.1272%" height="15" fill="rgb(220,153,15)" fg:x="1909" fg:w="6"/><text x="40.7292%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;(s4lib::data::common::LogMessage,bool)&gt;&gt; (7 samples, 0.15%)</title><rect x="40.4792%" y="805" width="0.1484%" height="15" fill="rgb(251,158,29)" fg:x="1909" fg:w="7"/><text x="40.7292%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;(s4lib::data::common::LogMessage,bool)&gt; (7 samples, 0.15%)</title><rect x="40.4792%" y="789" width="0.1484%" height="15" fill="rgb(208,52,49)" fg:x="1909" fg:w="7"/><text x="40.7292%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;s4lib::data::common::LogMessage&gt; (7 samples, 0.15%)</title><rect x="40.4792%" y="773" width="0.1484%" height="15" fill="rgb(220,190,4)" fg:x="1909" fg:w="7"/><text x="40.7292%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (14 samples, 0.30%)</title><rect x="40.6277%" y="789" width="0.2969%" height="15" fill="rgb(254,35,30)" fg:x="1916" fg:w="14"/><text x="40.8777%" y="799.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove::{{closure}} (14 samples, 0.30%)</title><rect x="40.6277%" y="773" width="0.2969%" height="15" fill="rgb(234,7,37)" fg:x="1916" fg:w="14"/><text x="40.8777%" y="783.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::remove (1 samples, 0.02%)</title><rect x="40.9245%" y="709" width="0.0212%" height="15" fill="rgb(240,68,0)" fg:x="1930" fg:w="1"/><text x="41.1745%" y="719.50"></text></g><g><title>alloc::collections::btree::node::slice_remove (1 samples, 0.02%)</title><rect x="40.9245%" y="693" width="0.0212%" height="15" fill="rgb(209,6,4)" fg:x="1930" fg:w="1"/><text x="41.1745%" y="703.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.02%)</title><rect x="40.9245%" y="677" width="0.0212%" height="15" fill="rgb(248,74,39)" fg:x="1930" fg:w="1"/><text x="41.1745%" y="687.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="40.9245%" y="661" width="0.0212%" height="15" fill="rgb(239,196,40)" fg:x="1930" fg:w="1"/><text x="41.1745%" y="671.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (34 samples, 0.72%)</title><rect x="40.9245%" y="725" width="0.7209%" height="15" fill="rgb(212,166,45)" fg:x="1930" fg:w="34"/><text x="41.1745%" y="735.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (2 samples, 0.04%)</title><rect x="41.6455%" y="725" width="0.0424%" height="15" fill="rgb(220,1,36)" fg:x="1964" fg:w="2"/><text x="41.8955%" y="735.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::force (2 samples, 0.04%)</title><rect x="41.6455%" y="709" width="0.0424%" height="15" fill="rgb(222,161,34)" fg:x="1964" fg:w="2"/><text x="41.8955%" y="719.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (41 samples, 0.87%)</title><rect x="40.9245%" y="741" width="0.8694%" height="15" fill="rgb(223,155,52)" fg:x="1930" fg:w="41"/><text x="41.1745%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove (61 samples, 1.29%)</title><rect x="40.6277%" y="805" width="1.2935%" height="15" fill="rgb(224,108,5)" fg:x="1916" fg:w="61"/><text x="40.8777%" y="815.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove_entry (47 samples, 1.00%)</title><rect x="40.9245%" y="789" width="0.9966%" height="15" fill="rgb(245,136,18)" fg:x="1930" fg:w="47"/><text x="41.1745%" y="799.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::remove_entry (47 samples, 1.00%)</title><rect x="40.9245%" y="773" width="0.9966%" height="15" fill="rgb(227,63,43)" fg:x="1930" fg:w="47"/><text x="41.1745%" y="783.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::remove_kv (47 samples, 1.00%)</title><rect x="40.9245%" y="757" width="0.9966%" height="15" fill="rgb(211,181,27)" fg:x="1930" fg:w="47"/><text x="41.1745%" y="767.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::len (1 samples, 0.02%)</title><rect x="41.9211%" y="805" width="0.0212%" height="15" fill="rgb(241,125,18)" fg:x="1977" fg:w="1"/><text x="42.1711%" y="815.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.02%)</title><rect x="41.9423%" y="773" width="0.0212%" height="15" fill="rgb(231,80,37)" fg:x="1978" fg:w="1"/><text x="42.1923%" y="783.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (6 samples, 0.13%)</title><rect x="41.9423%" y="789" width="0.1272%" height="15" fill="rgb(217,123,23)" fg:x="1978" fg:w="6"/><text x="42.1923%" y="799.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (1 samples, 0.02%)</title><rect x="42.0696%" y="789" width="0.0212%" height="15" fill="rgb(219,192,38)" fg:x="1984" fg:w="1"/><text x="42.3196%" y="799.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1 samples, 0.02%)</title><rect x="42.0696%" y="773" width="0.0212%" height="15" fill="rgb(217,165,36)" fg:x="1984" fg:w="1"/><text x="42.3196%" y="783.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1 samples, 0.02%)</title><rect x="42.0696%" y="757" width="0.0212%" height="15" fill="rgb(220,202,26)" fg:x="1984" fg:w="1"/><text x="42.3196%" y="767.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1 samples, 0.02%)</title><rect x="42.0696%" y="741" width="0.0212%" height="15" fill="rgb(233,132,38)" fg:x="1984" fg:w="1"/><text x="42.3196%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (9 samples, 0.19%)</title><rect x="41.9423%" y="805" width="0.1908%" height="15" fill="rgb(213,87,31)" fg:x="1978" fg:w="9"/><text x="42.1923%" y="815.50"></text></g><g><title>__memmove_avx512_unaligned_erms (5 samples, 0.11%)</title><rect x="42.1332%" y="805" width="0.1060%" height="15" fill="rgb(217,126,36)" fg:x="1987" fg:w="5"/><text x="42.3832%" y="815.50"></text></g><g><title>s4::processing_loop (1,997 samples, 42.35%)</title><rect x="0.0848%" y="821" width="42.3452%" height="15" fill="rgb(233,182,14)" fg:x="4" fg:w="1997"/><text x="0.3348%" y="831.50">s4::processing_loop</text></g><g><title>std::panic::catch_unwind (1,998 samples, 42.37%)</title><rect x="0.0848%" y="1013" width="42.3664%" height="15" fill="rgb(216,75,8)" fg:x="4" fg:w="1998"/><text x="0.3348%" y="1023.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,998 samples, 42.37%)</title><rect x="0.0848%" y="997" width="42.3664%" height="15" fill="rgb(212,61,29)" fg:x="4" fg:w="1998"/><text x="0.3348%" y="1007.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,998 samples, 42.37%)</title><rect x="0.0848%" y="981" width="42.3664%" height="15" fill="rgb(232,162,46)" fg:x="4" fg:w="1998"/><text x="0.3348%" y="991.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,998 samples, 42.37%)</title><rect x="0.0848%" y="965" width="42.3664%" height="15" fill="rgb(219,15,13)" fg:x="4" fg:w="1998"/><text x="0.3348%" y="975.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,998 samples, 42.37%)</title><rect x="0.0848%" y="949" width="42.3664%" height="15" fill="rgb(216,75,8)" fg:x="4" fg:w="1998"/><text x="0.3348%" y="959.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,998 samples, 42.37%)</title><rect x="0.0848%" y="933" width="42.3664%" height="15" fill="rgb(212,61,29)" fg:x="4" fg:w="1998"/><text x="0.3348%" y="943.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,998 samples, 42.37%)</title><rect x="0.0848%" y="917" width="42.3664%" height="15" fill="rgb(232,162,46)" fg:x="4" fg:w="1998"/><text x="0.3348%" y="927.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,998 samples, 42.37%)</title><rect x="0.0848%" y="901" width="42.3664%" height="15" fill="rgb(212,73,0)" fg:x="4" fg:w="1998"/><text x="0.3348%" y="911.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for ..</text></g><g><title>std::rt::lang_start::{{closure}} (1,998 samples, 42.37%)</title><rect x="0.0848%" y="885" width="42.3664%" height="15" fill="rgb(213,78,9)" fg:x="4" fg:w="1998"/><text x="0.3348%" y="895.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,998 samples, 42.37%)</title><rect x="0.0848%" y="869" width="42.3664%" height="15" fill="rgb(210,88,34)" fg:x="4" fg:w="1998"/><text x="0.3348%" y="879.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (1,998 samples, 42.37%)</title><rect x="0.0848%" y="853" width="42.3664%" height="15" fill="rgb(210,80,10)" fg:x="4" fg:w="1998"/><text x="0.3348%" y="863.50">core::ops::function::FnOnce::call_once</text></g><g><title>s4::main (1,998 samples, 42.37%)</title><rect x="0.0848%" y="837" width="42.3664%" height="15" fill="rgb(221,151,31)" fg:x="4" fg:w="1998"/><text x="0.3348%" y="847.50">s4::main</text></g><g><title>s4::cli_process_args (1 samples, 0.02%)</title><rect x="42.4300%" y="821" width="0.0212%" height="15" fill="rgb(217,50,44)" fg:x="2001" fg:w="1"/><text x="42.6800%" y="831.50"></text></g><g><title>s4::string_wdhms_to_duration (1 samples, 0.02%)</title><rect x="42.4300%" y="805" width="0.0212%" height="15" fill="rgb(237,135,26)" fg:x="2001" fg:w="1"/><text x="42.6800%" y="815.50"></text></g><g><title>&lt;s4::REGEX_DUR_OFFSET as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="42.4300%" y="789" width="0.0212%" height="15" fill="rgb(239,209,23)" fg:x="2001" fg:w="1"/><text x="42.6800%" y="799.50"></text></g><g><title>&lt;s4::REGEX_DUR_OFFSET as core::ops::deref::Deref&gt;::deref::__stability (1 samples, 0.02%)</title><rect x="42.4300%" y="773" width="0.0212%" height="15" fill="rgb(223,204,38)" fg:x="2001" fg:w="1"/><text x="42.6800%" y="783.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (1 samples, 0.02%)</title><rect x="42.4300%" y="757" width="0.0212%" height="15" fill="rgb(235,175,8)" fg:x="2001" fg:w="1"/><text x="42.6800%" y="767.50"></text></g><g><title>std::sync::once::Once::call_once (1 samples, 0.02%)</title><rect x="42.4300%" y="741" width="0.0212%" height="15" fill="rgb(247,17,47)" fg:x="2001" fg:w="1"/><text x="42.6800%" y="751.50"></text></g><g><title>std::sys_common::once::futex::Once::call (1 samples, 0.02%)</title><rect x="42.4300%" y="725" width="0.0212%" height="15" fill="rgb(246,168,49)" fg:x="2001" fg:w="1"/><text x="42.6800%" y="735.50"></text></g><g><title>std::sync::once::Once::call_once::{{closure}} (1 samples, 0.02%)</title><rect x="42.4300%" y="709" width="0.0212%" height="15" fill="rgb(237,63,35)" fg:x="2001" fg:w="1"/><text x="42.6800%" y="719.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}} (1 samples, 0.02%)</title><rect x="42.4300%" y="693" width="0.0212%" height="15" fill="rgb(238,7,51)" fg:x="2001" fg:w="1"/><text x="42.6800%" y="703.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.02%)</title><rect x="42.4300%" y="677" width="0.0212%" height="15" fill="rgb(210,80,10)" fg:x="2001" fg:w="1"/><text x="42.6800%" y="687.50"></text></g><g><title>&lt;s4::REGEX_DUR_OFFSET as core::ops::deref::Deref&gt;::deref::__static_ref_initialize (1 samples, 0.02%)</title><rect x="42.4300%" y="661" width="0.0212%" height="15" fill="rgb(216,114,7)" fg:x="2001" fg:w="1"/><text x="42.6800%" y="671.50"></text></g><g><title>regex::regex::string::Regex::new (1 samples, 0.02%)</title><rect x="42.4300%" y="645" width="0.0212%" height="15" fill="rgb(239,163,48)" fg:x="2001" fg:w="1"/><text x="42.6800%" y="655.50"></text></g><g><title>regex::builders::string::RegexBuilder::new (1 samples, 0.02%)</title><rect x="42.4300%" y="629" width="0.0212%" height="15" fill="rgb(248,216,37)" fg:x="2001" fg:w="1"/><text x="42.6800%" y="639.50"></text></g><g><title>regex::builders::Builder::new (1 samples, 0.02%)</title><rect x="42.4300%" y="613" width="0.0212%" height="15" fill="rgb(223,120,31)" fg:x="2001" fg:w="1"/><text x="42.6800%" y="623.50"></text></g><g><title>&lt;regex::builders::Builder as core::default::Default&gt;::default (1 samples, 0.02%)</title><rect x="42.4300%" y="597" width="0.0212%" height="15" fill="rgb(228,139,32)" fg:x="2001" fg:w="1"/><text x="42.6800%" y="607.50"></text></g><g><title>regex_automata::meta::regex::Regex::config (1 samples, 0.02%)</title><rect x="42.4300%" y="581" width="0.0212%" height="15" fill="rgb(230,140,17)" fg:x="2001" fg:w="1"/><text x="42.6800%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="42.4300%" y="565" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="2001" fg:w="1"/><text x="42.6800%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="42.4300%" y="549" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="2001" fg:w="1"/><text x="42.6800%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="42.4300%" y="533" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="2001" fg:w="1"/><text x="42.6800%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="42.4300%" y="517" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="2001" fg:w="1"/><text x="42.6800%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="42.4300%" y="501" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="2001" fg:w="1"/><text x="42.6800%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="42.4300%" y="485" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="2001" fg:w="1"/><text x="42.6800%" y="495.50"></text></g><g><title>_start (2,003 samples, 42.47%)</title><rect x="0.0000%" y="1093" width="42.4724%" height="15" fill="rgb(210,219,27)" fg:x="0" fg:w="2003"/><text x="0.2500%" y="1103.50">_start</text></g><g><title>__libc_start_main_impl (1,999 samples, 42.39%)</title><rect x="0.0848%" y="1077" width="42.3876%" height="15" fill="rgb(228,214,28)" fg:x="4" fg:w="1999"/><text x="0.3348%" y="1087.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (1,999 samples, 42.39%)</title><rect x="0.0848%" y="1061" width="42.3876%" height="15" fill="rgb(249,173,1)" fg:x="4" fg:w="1999"/><text x="0.3348%" y="1071.50">__libc_start_call_main</text></g><g><title>main (1,999 samples, 42.39%)</title><rect x="0.0848%" y="1045" width="42.3876%" height="15" fill="rgb(238,28,47)" fg:x="4" fg:w="1999"/><text x="0.3348%" y="1055.50">main</text></g><g><title>std::rt::lang_start_internal (1,999 samples, 42.39%)</title><rect x="0.0848%" y="1029" width="42.3876%" height="15" fill="rgb(240,177,54)" fg:x="4" fg:w="1999"/><text x="0.3348%" y="1039.50">std::rt::lang_start_internal</text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="42.4512%" y="1013" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="2002" fg:w="1"/><text x="42.7012%" y="1023.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="42.4512%" y="997" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="2002" fg:w="1"/><text x="42.7012%" y="1007.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="42.4512%" y="981" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="2002" fg:w="1"/><text x="42.7012%" y="991.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="42.4512%" y="965" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="2002" fg:w="1"/><text x="42.7012%" y="975.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="42.4512%" y="949" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="2002" fg:w="1"/><text x="42.7012%" y="959.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="42.4512%" y="933" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="2002" fg:w="1"/><text x="42.7012%" y="943.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="42.4512%" y="917" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="2002" fg:w="1"/><text x="42.7012%" y="927.50"></text></g><g><title>__GI___libc_write (2 samples, 0.04%)</title><rect x="42.4724%" y="1093" width="0.0424%" height="15" fill="rgb(232,197,30)" fg:x="2003" fg:w="2"/><text x="42.7224%" y="1103.50"></text></g><g><title>__GI___libc_write (2 samples, 0.04%)</title><rect x="42.4724%" y="1077" width="0.0424%" height="15" fill="rgb(232,197,30)" fg:x="2003" fg:w="2"/><text x="42.7224%" y="1087.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.04%)</title><rect x="42.4724%" y="1061" width="0.0424%" height="15" fill="rgb(210,204,4)" fg:x="2003" fg:w="2"/><text x="42.7224%" y="1071.50"></text></g><g><title>s4::string_wdhms_to_duration (1 samples, 0.02%)</title><rect x="42.5148%" y="1061" width="0.0212%" height="15" fill="rgb(237,135,26)" fg:x="2005" fg:w="1"/><text x="42.7648%" y="1071.50"></text></g><g><title>&lt;s4::REGEX_DUR_OFFSET as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="42.5148%" y="1045" width="0.0212%" height="15" fill="rgb(239,209,23)" fg:x="2005" fg:w="1"/><text x="42.7648%" y="1055.50"></text></g><g><title>&lt;s4::REGEX_DUR_OFFSET as core::ops::deref::Deref&gt;::deref::__stability (1 samples, 0.02%)</title><rect x="42.5148%" y="1029" width="0.0212%" height="15" fill="rgb(223,204,38)" fg:x="2005" fg:w="1"/><text x="42.7648%" y="1039.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (1 samples, 0.02%)</title><rect x="42.5148%" y="1013" width="0.0212%" height="15" fill="rgb(235,175,8)" fg:x="2005" fg:w="1"/><text x="42.7648%" y="1023.50"></text></g><g><title>std::sync::once::Once::call_once (1 samples, 0.02%)</title><rect x="42.5148%" y="997" width="0.0212%" height="15" fill="rgb(247,17,47)" fg:x="2005" fg:w="1"/><text x="42.7648%" y="1007.50"></text></g><g><title>std::sys_common::once::futex::Once::call (1 samples, 0.02%)</title><rect x="42.5148%" y="981" width="0.0212%" height="15" fill="rgb(246,168,49)" fg:x="2005" fg:w="1"/><text x="42.7648%" y="991.50"></text></g><g><title>std::sync::once::Once::call_once::{{closure}} (1 samples, 0.02%)</title><rect x="42.5148%" y="965" width="0.0212%" height="15" fill="rgb(237,63,35)" fg:x="2005" fg:w="1"/><text x="42.7648%" y="975.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}} (1 samples, 0.02%)</title><rect x="42.5148%" y="949" width="0.0212%" height="15" fill="rgb(238,7,51)" fg:x="2005" fg:w="1"/><text x="42.7648%" y="959.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.02%)</title><rect x="42.5148%" y="933" width="0.0212%" height="15" fill="rgb(210,80,10)" fg:x="2005" fg:w="1"/><text x="42.7648%" y="943.50"></text></g><g><title>&lt;s4::REGEX_DUR_OFFSET as core::ops::deref::Deref&gt;::deref::__static_ref_initialize (1 samples, 0.02%)</title><rect x="42.5148%" y="917" width="0.0212%" height="15" fill="rgb(216,114,7)" fg:x="2005" fg:w="1"/><text x="42.7648%" y="927.50"></text></g><g><title>regex::regex::string::Regex::new (1 samples, 0.02%)</title><rect x="42.5148%" y="901" width="0.0212%" height="15" fill="rgb(239,163,48)" fg:x="2005" fg:w="1"/><text x="42.7648%" y="911.50"></text></g><g><title>regex::builders::string::RegexBuilder::build (1 samples, 0.02%)</title><rect x="42.5148%" y="885" width="0.0212%" height="15" fill="rgb(234,198,23)" fg:x="2005" fg:w="1"/><text x="42.7648%" y="895.50"></text></g><g><title>regex::builders::Builder::build_one_string (1 samples, 0.02%)</title><rect x="42.5148%" y="869" width="0.0212%" height="15" fill="rgb(254,213,31)" fg:x="2005" fg:w="1"/><text x="42.7648%" y="879.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (1 samples, 0.02%)</title><rect x="42.5148%" y="853" width="0.0212%" height="15" fill="rgb(212,33,22)" fg:x="2005" fg:w="1"/><text x="42.7648%" y="863.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many (1 samples, 0.02%)</title><rect x="42.5148%" y="837" width="0.0212%" height="15" fill="rgb(236,25,32)" fg:x="2005" fg:w="1"/><text x="42.7648%" y="847.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (1 samples, 0.02%)</title><rect x="42.5148%" y="821" width="0.0212%" height="15" fill="rgb(250,142,30)" fg:x="2005" fg:w="1"/><text x="42.7648%" y="831.50"></text></g><g><title>regex_automata::meta::strategy::new (1 samples, 0.02%)</title><rect x="42.5148%" y="805" width="0.0212%" height="15" fill="rgb(243,171,22)" fg:x="2005" fg:w="1"/><text x="42.7648%" y="815.50"></text></g><g><title>regex_automata::meta::strategy::Core::new (1 samples, 0.02%)</title><rect x="42.5148%" y="789" width="0.0212%" height="15" fill="rgb(222,69,27)" fg:x="2005" fg:w="1"/><text x="42.7648%" y="799.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (1 samples, 0.02%)</title><rect x="42.5148%" y="773" width="0.0212%" height="15" fill="rgb(226,42,16)" fg:x="2005" fg:w="1"/><text x="42.7648%" y="783.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (1 samples, 0.02%)</title><rect x="42.5148%" y="757" width="0.0212%" height="15" fill="rgb(242,129,17)" fg:x="2005" fg:w="1"/><text x="42.7648%" y="767.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::build (1 samples, 0.02%)</title><rect x="42.5148%" y="741" width="0.0212%" height="15" fill="rgb(205,136,15)" fg:x="2005" fg:w="1"/><text x="42.7648%" y="751.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::Inner::add (1 samples, 0.02%)</title><rect x="42.5148%" y="725" width="0.0212%" height="15" fill="rgb(212,0,0)" fg:x="2005" fg:w="1"/><text x="42.7648%" y="735.50"></text></g><g><title>s4::cli_process_args (2 samples, 0.04%)</title><rect x="42.5148%" y="1077" width="0.0424%" height="15" fill="rgb(217,50,44)" fg:x="2005" fg:w="2"/><text x="42.7648%" y="1087.50"></text></g><g><title>clap_builder::derive::Parser::parse (1 samples, 0.02%)</title><rect x="42.5360%" y="1061" width="0.0212%" height="15" fill="rgb(252,59,20)" fg:x="2006" fg:w="1"/><text x="42.7860%" y="1071.50"></text></g><g><title>&lt;s4::CLI_Args as clap_builder::derive::CommandFactory&gt;::command (1 samples, 0.02%)</title><rect x="42.5360%" y="1045" width="0.0212%" height="15" fill="rgb(237,136,5)" fg:x="2006" fg:w="1"/><text x="42.7860%" y="1055.50"></text></g><g><title>&lt;s4::CLI_Args as clap_builder::derive::Args&gt;::augment_args (1 samples, 0.02%)</title><rect x="42.5360%" y="1029" width="0.0212%" height="15" fill="rgb(230,145,47)" fg:x="2006" fg:w="1"/><text x="42.7860%" y="1039.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="42.5360%" y="1013" width="0.0212%" height="15" fill="rgb(206,165,10)" fg:x="2006" fg:w="1"/><text x="42.7860%" y="1023.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (1 samples, 0.02%)</title><rect x="42.5360%" y="997" width="0.0212%" height="15" fill="rgb(213,107,40)" fg:x="2006" fg:w="1"/><text x="42.7860%" y="1007.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (1 samples, 0.02%)</title><rect x="42.5360%" y="981" width="0.0212%" height="15" fill="rgb(225,89,12)" fg:x="2006" fg:w="1"/><text x="42.7860%" y="991.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.02%)</title><rect x="42.5360%" y="965" width="0.0212%" height="15" fill="rgb(223,143,22)" fg:x="2006" fg:w="1"/><text x="42.7860%" y="975.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.02%)</title><rect x="42.5360%" y="949" width="0.0212%" height="15" fill="rgb(216,218,52)" fg:x="2006" fg:w="1"/><text x="42.7860%" y="959.50"></text></g><g><title>once_cell::imp::initialize_or_wait (1 samples, 0.02%)</title><rect x="42.5360%" y="933" width="0.0212%" height="15" fill="rgb(247,128,5)" fg:x="2006" fg:w="1"/><text x="42.7860%" y="943.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.02%)</title><rect x="42.5360%" y="917" width="0.0212%" height="15" fill="rgb(225,224,16)" fg:x="2006" fg:w="1"/><text x="42.7860%" y="927.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (1 samples, 0.02%)</title><rect x="42.5360%" y="901" width="0.0212%" height="15" fill="rgb(237,110,11)" fg:x="2006" fg:w="1"/><text x="42.7860%" y="911.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (1 samples, 0.02%)</title><rect x="42.5573%" y="1077" width="0.0212%" height="15" fill="rgb(212,33,22)" fg:x="2007" fg:w="1"/><text x="42.8073%" y="1087.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many (1 samples, 0.02%)</title><rect x="42.5573%" y="1061" width="0.0212%" height="15" fill="rgb(236,25,32)" fg:x="2007" fg:w="1"/><text x="42.8073%" y="1071.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (1 samples, 0.02%)</title><rect x="42.5573%" y="1045" width="0.0212%" height="15" fill="rgb(250,142,30)" fg:x="2007" fg:w="1"/><text x="42.8073%" y="1055.50"></text></g><g><title>regex_automata::meta::strategy::new (1 samples, 0.02%)</title><rect x="42.5573%" y="1029" width="0.0212%" height="15" fill="rgb(243,171,22)" fg:x="2007" fg:w="1"/><text x="42.8073%" y="1039.50"></text></g><g><title>regex_automata::meta::strategy::Core::new (1 samples, 0.02%)</title><rect x="42.5573%" y="1013" width="0.0212%" height="15" fill="rgb(222,69,27)" fg:x="2007" fg:w="1"/><text x="42.8073%" y="1023.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (1 samples, 0.02%)</title><rect x="42.5573%" y="997" width="0.0212%" height="15" fill="rgb(226,42,16)" fg:x="2007" fg:w="1"/><text x="42.8073%" y="1007.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (1 samples, 0.02%)</title><rect x="42.5573%" y="981" width="0.0212%" height="15" fill="rgb(242,129,17)" fg:x="2007" fg:w="1"/><text x="42.8073%" y="991.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (1 samples, 0.02%)</title><rect x="42.5573%" y="965" width="0.0212%" height="15" fill="rgb(247,137,3)" fg:x="2007" fg:w="1"/><text x="42.8073%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="42.5573%" y="949" width="0.0212%" height="15" fill="rgb(214,109,53)" fg:x="2007" fg:w="1"/><text x="42.8073%" y="959.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.02%)</title><rect x="42.5573%" y="933" width="0.0212%" height="15" fill="rgb(254,35,30)" fg:x="2007" fg:w="1"/><text x="42.8073%" y="943.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.02%)</title><rect x="42.5573%" y="917" width="0.0212%" height="15" fill="rgb(226,169,23)" fg:x="2007" fg:w="1"/><text x="42.8073%" y="927.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile::{{closure}} (1 samples, 0.02%)</title><rect x="42.5573%" y="901" width="0.0212%" height="15" fill="rgb(218,216,52)" fg:x="2007" fg:w="1"/><text x="42.8073%" y="911.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 0.02%)</title><rect x="42.5573%" y="885" width="0.0212%" height="15" fill="rgb(235,200,16)" fg:x="2007" fg:w="1"/><text x="42.8073%" y="895.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.02%)</title><rect x="42.5573%" y="869" width="0.0212%" height="15" fill="rgb(213,34,18)" fg:x="2007" fg:w="1"/><text x="42.8073%" y="879.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (1 samples, 0.02%)</title><rect x="42.5573%" y="853" width="0.0212%" height="15" fill="rgb(210,105,37)" fg:x="2007" fg:w="1"/><text x="42.8073%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="42.5573%" y="837" width="0.0212%" height="15" fill="rgb(214,109,53)" fg:x="2007" fg:w="1"/><text x="42.8073%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.02%)</title><rect x="42.5573%" y="821" width="0.0212%" height="15" fill="rgb(254,35,30)" fg:x="2007" fg:w="1"/><text x="42.8073%" y="831.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.02%)</title><rect x="42.5573%" y="805" width="0.0212%" height="15" fill="rgb(226,169,23)" fg:x="2007" fg:w="1"/><text x="42.8073%" y="815.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (1 samples, 0.02%)</title><rect x="42.5573%" y="789" width="0.0212%" height="15" fill="rgb(205,130,14)" fg:x="2007" fg:w="1"/><text x="42.8073%" y="799.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_at_least (1 samples, 0.02%)</title><rect x="42.5573%" y="773" width="0.0212%" height="15" fill="rgb(238,57,7)" fg:x="2007" fg:w="1"/><text x="42.8073%" y="783.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 0.02%)</title><rect x="42.5573%" y="757" width="0.0212%" height="15" fill="rgb(235,200,16)" fg:x="2007" fg:w="1"/><text x="42.8073%" y="767.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.02%)</title><rect x="42.5573%" y="741" width="0.0212%" height="15" fill="rgb(213,34,18)" fg:x="2007" fg:w="1"/><text x="42.8073%" y="751.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (1 samples, 0.02%)</title><rect x="42.5573%" y="725" width="0.0212%" height="15" fill="rgb(253,35,22)" fg:x="2007" fg:w="1"/><text x="42.8073%" y="735.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (1 samples, 0.02%)</title><rect x="42.5573%" y="709" width="0.0212%" height="15" fill="rgb(247,137,3)" fg:x="2007" fg:w="1"/><text x="42.8073%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="42.5573%" y="693" width="0.0212%" height="15" fill="rgb(214,109,53)" fg:x="2007" fg:w="1"/><text x="42.8073%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.02%)</title><rect x="42.5573%" y="677" width="0.0212%" height="15" fill="rgb(254,35,30)" fg:x="2007" fg:w="1"/><text x="42.8073%" y="687.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.02%)</title><rect x="42.5573%" y="661" width="0.0212%" height="15" fill="rgb(226,169,23)" fg:x="2007" fg:w="1"/><text x="42.8073%" y="671.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice::{{closure}} (1 samples, 0.02%)</title><rect x="42.5573%" y="645" width="0.0212%" height="15" fill="rgb(223,145,12)" fg:x="2007" fg:w="1"/><text x="42.8073%" y="655.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 0.02%)</title><rect x="42.5573%" y="629" width="0.0212%" height="15" fill="rgb(235,200,16)" fg:x="2007" fg:w="1"/><text x="42.8073%" y="639.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.02%)</title><rect x="42.5573%" y="613" width="0.0212%" height="15" fill="rgb(213,34,18)" fg:x="2007" fg:w="1"/><text x="42.8073%" y="623.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (1 samples, 0.02%)</title><rect x="42.5573%" y="597" width="0.0212%" height="15" fill="rgb(210,105,37)" fg:x="2007" fg:w="1"/><text x="42.8073%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="42.5573%" y="581" width="0.0212%" height="15" fill="rgb(214,109,53)" fg:x="2007" fg:w="1"/><text x="42.8073%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.02%)</title><rect x="42.5573%" y="565" width="0.0212%" height="15" fill="rgb(254,35,30)" fg:x="2007" fg:w="1"/><text x="42.8073%" y="575.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.02%)</title><rect x="42.5573%" y="549" width="0.0212%" height="15" fill="rgb(226,169,23)" fg:x="2007" fg:w="1"/><text x="42.8073%" y="559.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (1 samples, 0.02%)</title><rect x="42.5573%" y="533" width="0.0212%" height="15" fill="rgb(205,130,14)" fg:x="2007" fg:w="1"/><text x="42.8073%" y="543.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_at_least (1 samples, 0.02%)</title><rect x="42.5573%" y="517" width="0.0212%" height="15" fill="rgb(238,57,7)" fg:x="2007" fg:w="1"/><text x="42.8073%" y="527.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.02%)</title><rect x="42.5573%" y="501" width="0.0212%" height="15" fill="rgb(213,34,18)" fg:x="2007" fg:w="1"/><text x="42.8073%" y="511.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class (1 samples, 0.02%)</title><rect x="42.5573%" y="485" width="0.0212%" height="15" fill="rgb(246,38,12)" fg:x="2007" fg:w="1"/><text x="42.8073%" y="495.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::add (1 samples, 0.02%)</title><rect x="42.5573%" y="469" width="0.0212%" height="15" fill="rgb(254,207,53)" fg:x="2007" fg:w="1"/><text x="42.8073%" y="479.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::add_suffix (1 samples, 0.02%)</title><rect x="42.5573%" y="453" width="0.0212%" height="15" fill="rgb(234,117,10)" fg:x="2007" fg:w="1"/><text x="42.8073%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="42.5573%" y="437" width="0.0212%" height="15" fill="rgb(241,229,15)" fg:x="2007" fg:w="1"/><text x="42.8073%" y="447.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="42.5573%" y="421" width="0.0212%" height="15" fill="rgb(209,143,44)" fg:x="2007" fg:w="1"/><text x="42.8073%" y="431.50"></text></g><g><title>regex::builders::Builder::build_one_string (1 samples, 0.02%)</title><rect x="42.5785%" y="1077" width="0.0212%" height="15" fill="rgb(254,213,31)" fg:x="2008" fg:w="1"/><text x="42.8285%" y="1087.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (1 samples, 0.02%)</title><rect x="42.5785%" y="1061" width="0.0212%" height="15" fill="rgb(212,33,22)" fg:x="2008" fg:w="1"/><text x="42.8285%" y="1071.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many (1 samples, 0.02%)</title><rect x="42.5785%" y="1045" width="0.0212%" height="15" fill="rgb(236,25,32)" fg:x="2008" fg:w="1"/><text x="42.8285%" y="1055.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (1 samples, 0.02%)</title><rect x="42.5785%" y="1029" width="0.0212%" height="15" fill="rgb(250,142,30)" fg:x="2008" fg:w="1"/><text x="42.8285%" y="1039.50"></text></g><g><title>regex_automata::meta::strategy::new (1 samples, 0.02%)</title><rect x="42.5785%" y="1013" width="0.0212%" height="15" fill="rgb(243,171,22)" fg:x="2008" fg:w="1"/><text x="42.8285%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.02%)</title><rect x="42.5785%" y="997" width="0.0212%" height="15" fill="rgb(225,8,7)" fg:x="2008" fg:w="1"/><text x="42.8285%" y="1007.50"></text></g><g><title>regex_automata::meta::strategy::new::{{closure}} (1 samples, 0.02%)</title><rect x="42.5785%" y="981" width="0.0212%" height="15" fill="rgb(238,100,15)" fg:x="2008" fg:w="1"/><text x="42.8285%" y="991.50"></text></g><g><title>regex_automata::util::prefilter::Prefilter::new (1 samples, 0.02%)</title><rect x="42.5785%" y="965" width="0.0212%" height="15" fill="rgb(227,199,27)" fg:x="2008" fg:w="1"/><text x="42.8285%" y="975.50"></text></g><g><title>regex_automata::util::prefilter::Choice::new (1 samples, 0.02%)</title><rect x="42.5785%" y="949" width="0.0212%" height="15" fill="rgb(243,64,33)" fg:x="2008" fg:w="1"/><text x="42.8285%" y="959.50"></text></g><g><title>regex_automata::util::prefilter::teddy::Teddy::new (1 samples, 0.02%)</title><rect x="42.5785%" y="933" width="0.0212%" height="15" fill="rgb(207,155,0)" fg:x="2008" fg:w="1"/><text x="42.8285%" y="943.50"></text></g><g><title>aho_corasick::dfa::Builder::build (1 samples, 0.02%)</title><rect x="42.5785%" y="917" width="0.0212%" height="15" fill="rgb(212,91,25)" fg:x="2008" fg:w="1"/><text x="42.8285%" y="927.50"></text></g><g><title>aho_corasick::dfa::Builder::build_from_noncontiguous (1 samples, 0.02%)</title><rect x="42.5785%" y="901" width="0.0212%" height="15" fill="rgb(231,220,22)" fg:x="2008" fg:w="1"/><text x="42.8285%" y="911.50"></text></g><g><title>aho_corasick::dfa::Builder::finish_build_one_start (1 samples, 0.02%)</title><rect x="42.5785%" y="885" width="0.0212%" height="15" fill="rgb(242,31,54)" fg:x="2008" fg:w="1"/><text x="42.8285%" y="895.50"></text></g><g><title>aho_corasick::dfa::sparse_iter (1 samples, 0.02%)</title><rect x="42.5785%" y="869" width="0.0212%" height="15" fill="rgb(223,225,36)" fg:x="2008" fg:w="1"/><text x="42.8285%" y="879.50"></text></g><g><title>core::cmp::PartialEq::ne (1 samples, 0.02%)</title><rect x="42.5785%" y="853" width="0.0212%" height="15" fill="rgb(238,191,27)" fg:x="2008" fg:w="1"/><text x="42.8285%" y="863.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="42.5785%" y="837" width="0.0212%" height="15" fill="rgb(237,219,30)" fg:x="2008" fg:w="1"/><text x="42.8285%" y="847.50"></text></g><g><title>&lt;T as core::option::SpecOptionPartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="42.5785%" y="821" width="0.0212%" height="15" fill="rgb(232,161,7)" fg:x="2008" fg:w="1"/><text x="42.8285%" y="831.50"></text></g><g><title>__GI___sched_yield (3 samples, 0.06%)</title><rect x="42.5997%" y="1077" width="0.0636%" height="15" fill="rgb(225,197,10)" fg:x="2009" fg:w="3"/><text x="42.8497%" y="1087.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.06%)</title><rect x="42.5997%" y="1061" width="0.0636%" height="15" fill="rgb(210,204,4)" fg:x="2009" fg:w="3"/><text x="42.8497%" y="1071.50"></text></g><g><title>[unknown] (35 samples, 0.74%)</title><rect x="42.5148%" y="1093" width="0.7422%" height="15" fill="rgb(227,28,50)" fg:x="2005" fg:w="35"/><text x="42.7648%" y="1103.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write (28 samples, 0.59%)</title><rect x="42.6633%" y="1077" width="0.5937%" height="15" fill="rgb(232,39,45)" fg:x="2012" fg:w="28"/><text x="42.9133%" y="1087.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write (28 samples, 0.59%)</title><rect x="42.6633%" y="1061" width="0.5937%" height="15" fill="rgb(216,85,2)" fg:x="2012" fg:w="28"/><text x="42.9133%" y="1071.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write (28 samples, 0.59%)</title><rect x="42.6633%" y="1045" width="0.5937%" height="15" fill="rgb(226,48,36)" fg:x="2012" fg:w="28"/><text x="42.9133%" y="1055.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write (28 samples, 0.59%)</title><rect x="42.6633%" y="1029" width="0.5937%" height="15" fill="rgb(237,90,14)" fg:x="2012" fg:w="28"/><text x="42.9133%" y="1039.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write (28 samples, 0.59%)</title><rect x="42.6633%" y="1013" width="0.5937%" height="15" fill="rgb(250,14,31)" fg:x="2012" fg:w="28"/><text x="42.9133%" y="1023.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_to_buffer_unchecked (28 samples, 0.59%)</title><rect x="42.6633%" y="997" width="0.5937%" height="15" fill="rgb(208,120,32)" fg:x="2012" fg:w="28"/><text x="42.9133%" y="1007.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (28 samples, 0.59%)</title><rect x="42.6633%" y="981" width="0.5937%" height="15" fill="rgb(214,20,35)" fg:x="2012" fg:w="28"/><text x="42.9133%" y="991.50"></text></g><g><title>__GI___libc_write (28 samples, 0.59%)</title><rect x="42.6633%" y="965" width="0.5937%" height="15" fill="rgb(232,197,30)" fg:x="2012" fg:w="28"/><text x="42.9133%" y="975.50"></text></g><g><title>__GI___libc_write (28 samples, 0.59%)</title><rect x="42.6633%" y="949" width="0.5937%" height="15" fill="rgb(232,197,30)" fg:x="2012" fg:w="28"/><text x="42.9133%" y="959.50"></text></g><g><title>[[kernel.kallsyms]] (28 samples, 0.59%)</title><rect x="42.6633%" y="933" width="0.5937%" height="15" fill="rgb(210,204,4)" fg:x="2012" fg:w="28"/><text x="42.9133%" y="943.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="43.2570%" y="885" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="2040" fg:w="1"/><text x="43.5070%" y="895.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.08%)</title><rect x="43.2570%" y="901" width="0.0848%" height="15" fill="rgb(210,204,4)" fg:x="2040" fg:w="4"/><text x="43.5070%" y="911.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.15%)</title><rect x="43.2570%" y="917" width="0.1484%" height="15" fill="rgb(210,204,4)" fg:x="2040" fg:w="7"/><text x="43.5070%" y="927.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.23%)</title><rect x="43.2570%" y="933" width="0.2332%" height="15" fill="rgb(210,204,4)" fg:x="2040" fg:w="11"/><text x="43.5070%" y="943.50"></text></g><g><title>[[kernel.kallsyms]] (12 samples, 0.25%)</title><rect x="43.2570%" y="949" width="0.2545%" height="15" fill="rgb(210,204,4)" fg:x="2040" fg:w="12"/><text x="43.5070%" y="959.50"></text></g><g><title>[[kernel.kallsyms]] (15 samples, 0.32%)</title><rect x="43.2570%" y="981" width="0.3181%" height="15" fill="rgb(210,204,4)" fg:x="2040" fg:w="15"/><text x="43.5070%" y="991.50"></text></g><g><title>[[kernel.kallsyms]] (15 samples, 0.32%)</title><rect x="43.2570%" y="965" width="0.3181%" height="15" fill="rgb(210,204,4)" fg:x="2040" fg:w="15"/><text x="43.5070%" y="975.50"></text></g><g><title>[[kernel.kallsyms]] (16 samples, 0.34%)</title><rect x="43.2570%" y="997" width="0.3393%" height="15" fill="rgb(210,204,4)" fg:x="2040" fg:w="16"/><text x="43.5070%" y="1007.50"></text></g><g><title>[[kernel.kallsyms]] (17 samples, 0.36%)</title><rect x="43.2570%" y="1029" width="0.3605%" height="15" fill="rgb(210,204,4)" fg:x="2040" fg:w="17"/><text x="43.5070%" y="1039.50"></text></g><g><title>[[kernel.kallsyms]] (17 samples, 0.36%)</title><rect x="43.2570%" y="1013" width="0.3605%" height="15" fill="rgb(210,204,4)" fg:x="2040" fg:w="17"/><text x="43.5070%" y="1023.50"></text></g><g><title>[[kernel.kallsyms]] (27 samples, 0.57%)</title><rect x="43.2570%" y="1045" width="0.5725%" height="15" fill="rgb(210,204,4)" fg:x="2040" fg:w="27"/><text x="43.5070%" y="1055.50"></text></g><g><title>[[kernel.kallsyms]] (28 samples, 0.59%)</title><rect x="43.2570%" y="1077" width="0.5937%" height="15" fill="rgb(210,204,4)" fg:x="2040" fg:w="28"/><text x="43.5070%" y="1087.50"></text></g><g><title>[[kernel.kallsyms]] (28 samples, 0.59%)</title><rect x="43.2570%" y="1061" width="0.5937%" height="15" fill="rgb(210,204,4)" fg:x="2040" fg:w="28"/><text x="43.5070%" y="1071.50"></text></g><g><title>[[kernel.kallsyms]] (41 samples, 0.87%)</title><rect x="43.2570%" y="1093" width="0.8694%" height="15" fill="rgb(210,204,4)" fg:x="2040" fg:w="41"/><text x="43.5070%" y="1103.50"></text></g><g><title>s4 (2,095 samples, 44.42%)</title><rect x="0.0000%" y="1109" width="44.4232%" height="15" fill="rgb(230,7,27)" fg:x="0" fg:w="2095"/><text x="0.2500%" y="1119.50">s4</text></g><g><title>[[heap]] (14 samples, 0.30%)</title><rect x="44.1264%" y="1093" width="0.2969%" height="15" fill="rgb(221,205,47)" fg:x="2081" fg:w="14"/><text x="44.3764%" y="1103.50"></text></g><g><title>__GI___libc_write (14 samples, 0.30%)</title><rect x="44.1264%" y="1077" width="0.2969%" height="15" fill="rgb(232,197,30)" fg:x="2081" fg:w="14"/><text x="44.3764%" y="1087.50"></text></g><g><title>__GI___libc_write (14 samples, 0.30%)</title><rect x="44.1264%" y="1061" width="0.2969%" height="15" fill="rgb(232,197,30)" fg:x="2081" fg:w="14"/><text x="44.3764%" y="1071.50"></text></g><g><title>[[kernel.kallsyms]] (14 samples, 0.30%)</title><rect x="44.1264%" y="1045" width="0.2969%" height="15" fill="rgb(210,204,4)" fg:x="2081" fg:w="14"/><text x="44.3764%" y="1055.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 0.21%)</title><rect x="44.4232%" y="965" width="0.2120%" height="15" fill="rgb(210,204,4)" fg:x="2095" fg:w="10"/><text x="44.6732%" y="975.50"></text></g><g><title>perf-exec (11 samples, 0.23%)</title><rect x="44.4232%" y="1109" width="0.2332%" height="15" fill="rgb(250,111,27)" fg:x="2095" fg:w="11"/><text x="44.6732%" y="1119.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.23%)</title><rect x="44.4232%" y="1093" width="0.2332%" height="15" fill="rgb(210,204,4)" fg:x="2095" fg:w="11"/><text x="44.6732%" y="1103.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.23%)</title><rect x="44.4232%" y="1077" width="0.2332%" height="15" fill="rgb(210,204,4)" fg:x="2095" fg:w="11"/><text x="44.6732%" y="1087.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.23%)</title><rect x="44.4232%" y="1061" width="0.2332%" height="15" fill="rgb(210,204,4)" fg:x="2095" fg:w="11"/><text x="44.6732%" y="1071.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.23%)</title><rect x="44.4232%" y="1045" width="0.2332%" height="15" fill="rgb(210,204,4)" fg:x="2095" fg:w="11"/><text x="44.6732%" y="1055.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.23%)</title><rect x="44.4232%" y="1029" width="0.2332%" height="15" fill="rgb(210,204,4)" fg:x="2095" fg:w="11"/><text x="44.6732%" y="1039.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.23%)</title><rect x="44.4232%" y="1013" width="0.2332%" height="15" fill="rgb(210,204,4)" fg:x="2095" fg:w="11"/><text x="44.6732%" y="1023.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.23%)</title><rect x="44.4232%" y="997" width="0.2332%" height="15" fill="rgb(210,204,4)" fg:x="2095" fg:w="11"/><text x="44.6732%" y="1007.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.23%)</title><rect x="44.4232%" y="981" width="0.2332%" height="15" fill="rgb(210,204,4)" fg:x="2095" fg:w="11"/><text x="44.6732%" y="991.50"></text></g><g><title>regex_automata::util::captures::Captures::all (1 samples, 0.02%)</title><rect x="44.6565%" y="645" width="0.0212%" height="15" fill="rgb(237,153,33)" fg:x="2106" fg:w="1"/><text x="44.9065%" y="655.50"></text></g><g><title>regex_automata::meta::regex::Regex::create_captures (2 samples, 0.04%)</title><rect x="44.6565%" y="661" width="0.0424%" height="15" fill="rgb(205,86,9)" fg:x="2106" fg:w="2"/><text x="44.9065%" y="671.50"></text></g><g><title>regex_automata::meta::regex::Regex::group_info (1 samples, 0.02%)</title><rect x="44.6777%" y="645" width="0.0212%" height="15" fill="rgb(248,217,14)" fg:x="2107" fg:w="1"/><text x="44.9277%" y="655.50"></text></g><g><title>&lt;regex_automata::meta::strategy::Core as regex_automata::meta::strategy::Strategy&gt;::group_info (1 samples, 0.02%)</title><rect x="44.6777%" y="629" width="0.0212%" height="15" fill="rgb(210,54,31)" fg:x="2107" fg:w="1"/><text x="44.9277%" y="639.50"></text></g><g><title>regex_automata::meta::wrappers::ReverseHybrid::create_cache (1 samples, 0.02%)</title><rect x="44.6989%" y="517" width="0.0212%" height="15" fill="rgb(252,206,16)" fg:x="2108" fg:w="1"/><text x="44.9489%" y="527.50"></text></g><g><title>regex_automata::meta::wrappers::ReverseHybridCache::new (1 samples, 0.02%)</title><rect x="44.6989%" y="501" width="0.0212%" height="15" fill="rgb(244,152,5)" fg:x="2108" fg:w="1"/><text x="44.9489%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.02%)</title><rect x="44.6989%" y="485" width="0.0212%" height="15" fill="rgb(254,35,30)" fg:x="2108" fg:w="1"/><text x="44.9489%" y="495.50"></text></g><g><title>regex_automata::meta::wrappers::ReverseHybridCache::new::{{closure}} (1 samples, 0.02%)</title><rect x="44.6989%" y="469" width="0.0212%" height="15" fill="rgb(236,68,36)" fg:x="2108" fg:w="1"/><text x="44.9489%" y="479.50"></text></g><g><title>regex_automata::hybrid::dfa::DFA::create_cache (1 samples, 0.02%)</title><rect x="44.6989%" y="453" width="0.0212%" height="15" fill="rgb(220,131,10)" fg:x="2108" fg:w="1"/><text x="44.9489%" y="463.50"></text></g><g><title>regex_automata::hybrid::dfa::Cache::new (1 samples, 0.02%)</title><rect x="44.6989%" y="437" width="0.0212%" height="15" fill="rgb(251,42,50)" fg:x="2108" fg:w="1"/><text x="44.9489%" y="447.50"></text></g><g><title>regex_automata::hybrid::dfa::Lazy::init_cache (1 samples, 0.02%)</title><rect x="44.6989%" y="421" width="0.0212%" height="15" fill="rgb(226,99,9)" fg:x="2108" fg:w="1"/><text x="44.9489%" y="431.50"></text></g><g><title>regex_automata::hybrid::dfa::Lazy::set_all_transitions (1 samples, 0.02%)</title><rect x="44.6989%" y="405" width="0.0212%" height="15" fill="rgb(222,228,8)" fg:x="2108" fg:w="1"/><text x="44.9489%" y="415.50"></text></g><g><title>&lt;regex_automata::util::alphabet::ByteClassRepresentatives as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="44.6989%" y="389" width="0.0212%" height="15" fill="rgb(209,96,22)" fg:x="2108" fg:w="1"/><text x="44.9489%" y="399.50"></text></g><g><title>regex_automata::util::alphabet::ByteClasses::get (1 samples, 0.02%)</title><rect x="44.6989%" y="373" width="0.0212%" height="15" fill="rgb(231,200,33)" fg:x="2108" fg:w="1"/><text x="44.9489%" y="383.50"></text></g><g><title>&lt;regex_automata::meta::strategy::ReverseInner as regex_automata::meta::strategy::Strategy&gt;::create_cache (2 samples, 0.04%)</title><rect x="44.6989%" y="533" width="0.0424%" height="15" fill="rgb(245,40,36)" fg:x="2108" fg:w="2"/><text x="44.9489%" y="543.50"></text></g><g><title>&lt;regex_automata::meta::strategy::Core as regex_automata::meta::strategy::Strategy&gt;::create_cache (1 samples, 0.02%)</title><rect x="44.7201%" y="517" width="0.0212%" height="15" fill="rgb(250,2,44)" fg:x="2109" fg:w="1"/><text x="44.9701%" y="527.50"></text></g><g><title>regex_automata::meta::wrappers::PikeVM::create_cache (1 samples, 0.02%)</title><rect x="44.7201%" y="501" width="0.0212%" height="15" fill="rgb(217,147,1)" fg:x="2109" fg:w="1"/><text x="44.9701%" y="511.50"></text></g><g><title>regex_automata::meta::wrappers::PikeVMCache::new (1 samples, 0.02%)</title><rect x="44.7201%" y="485" width="0.0212%" height="15" fill="rgb(211,6,33)" fg:x="2109" fg:w="1"/><text x="44.9701%" y="495.50"></text></g><g><title>regex_automata::nfa::thompson::pikevm::PikeVM::create_cache (1 samples, 0.02%)</title><rect x="44.7201%" y="469" width="0.0212%" height="15" fill="rgb(211,33,34)" fg:x="2109" fg:w="1"/><text x="44.9701%" y="479.50"></text></g><g><title>regex_automata::nfa::thompson::pikevm::Cache::new (1 samples, 0.02%)</title><rect x="44.7201%" y="453" width="0.0212%" height="15" fill="rgb(244,199,14)" fg:x="2109" fg:w="1"/><text x="44.9701%" y="463.50"></text></g><g><title>regex_automata::nfa::thompson::pikevm::ActiveStates::new (1 samples, 0.02%)</title><rect x="44.7201%" y="437" width="0.0212%" height="15" fill="rgb(220,13,3)" fg:x="2109" fg:w="1"/><text x="44.9701%" y="447.50"></text></g><g><title>regex_automata::nfa::thompson::pikevm::ActiveStates::reset (1 samples, 0.02%)</title><rect x="44.7201%" y="421" width="0.0212%" height="15" fill="rgb(243,194,33)" fg:x="2109" fg:w="1"/><text x="44.9701%" y="431.50"></text></g><g><title>regex_automata::nfa::thompson::pikevm::SlotTable::reset (1 samples, 0.02%)</title><rect x="44.7201%" y="405" width="0.0212%" height="15" fill="rgb(226,221,20)" fg:x="2109" fg:w="1"/><text x="44.9701%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (1 samples, 0.02%)</title><rect x="44.7201%" y="389" width="0.0212%" height="15" fill="rgb(249,199,35)" fg:x="2109" fg:w="1"/><text x="44.9701%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (1 samples, 0.02%)</title><rect x="44.7201%" y="373" width="0.0212%" height="15" fill="rgb(216,52,5)" fg:x="2109" fg:w="1"/><text x="44.9701%" y="383.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="44.7201%" y="357" width="0.0212%" height="15" fill="rgb(209,143,44)" fg:x="2109" fg:w="1"/><text x="44.9701%" y="367.50"></text></g><g><title>__memset_avx512_unaligned_erms (1 samples, 0.02%)</title><rect x="44.7201%" y="341" width="0.0212%" height="15" fill="rgb(240,145,53)" fg:x="2109" fg:w="1"/><text x="44.9701%" y="351.50"></text></g><g><title>regex_automata::util::sparse_set::SparseSet::resize (1 samples, 0.02%)</title><rect x="44.7413%" y="421" width="0.0212%" height="15" fill="rgb(219,206,13)" fg:x="2110" fg:w="1"/><text x="44.9913%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (1 samples, 0.02%)</title><rect x="44.7413%" y="405" width="0.0212%" height="15" fill="rgb(249,199,35)" fg:x="2110" fg:w="1"/><text x="44.9913%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (1 samples, 0.02%)</title><rect x="44.7413%" y="389" width="0.0212%" height="15" fill="rgb(216,52,5)" fg:x="2110" fg:w="1"/><text x="44.9913%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="44.7413%" y="373" width="0.0212%" height="15" fill="rgb(212,159,3)" fg:x="2110" fg:w="1"/><text x="44.9913%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="44.7413%" y="357" width="0.0212%" height="15" fill="rgb(231,142,39)" fg:x="2110" fg:w="1"/><text x="44.9913%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="44.7413%" y="341" width="0.0212%" height="15" fill="rgb(249,2,22)" fg:x="2110" fg:w="1"/><text x="44.9913%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="44.7413%" y="325" width="0.0212%" height="15" fill="rgb(254,53,35)" fg:x="2110" fg:w="1"/><text x="44.9913%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="44.7413%" y="309" width="0.0212%" height="15" fill="rgb(237,133,22)" fg:x="2110" fg:w="1"/><text x="44.9913%" y="319.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="44.7413%" y="293" width="0.0212%" height="15" fill="rgb(206,112,53)" fg:x="2110" fg:w="1"/><text x="44.9913%" y="303.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="44.7413%" y="277" width="0.0212%" height="15" fill="rgb(222,219,51)" fg:x="2110" fg:w="1"/><text x="44.9913%" y="287.50"></text></g><g><title>sysmalloc (1 samples, 0.02%)</title><rect x="44.7413%" y="261" width="0.0212%" height="15" fill="rgb(237,64,10)" fg:x="2110" fg:w="1"/><text x="44.9913%" y="271.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="44.7413%" y="245" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="2110" fg:w="1"/><text x="44.9913%" y="255.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="44.7413%" y="229" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="2110" fg:w="1"/><text x="44.9913%" y="239.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="44.7413%" y="213" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="2110" fg:w="1"/><text x="44.9913%" y="223.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="44.7413%" y="197" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="2110" fg:w="1"/><text x="44.9913%" y="207.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="44.7413%" y="181" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="2110" fg:w="1"/><text x="44.9913%" y="191.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="44.7413%" y="165" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="2110" fg:w="1"/><text x="44.9913%" y="175.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="44.7413%" y="149" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="2110" fg:w="1"/><text x="44.9913%" y="159.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.08%)</title><rect x="44.7625%" y="229" width="0.0848%" height="15" fill="rgb(210,204,4)" fg:x="2111" fg:w="4"/><text x="45.0125%" y="239.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.08%)</title><rect x="44.7625%" y="213" width="0.0848%" height="15" fill="rgb(210,204,4)" fg:x="2111" fg:w="4"/><text x="45.0125%" y="223.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="44.7625%" y="261" width="0.1060%" height="15" fill="rgb(210,204,4)" fg:x="2111" fg:w="5"/><text x="45.0125%" y="271.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="44.7625%" y="245" width="0.1060%" height="15" fill="rgb(210,204,4)" fg:x="2111" fg:w="5"/><text x="45.0125%" y="255.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="44.7625%" y="277" width="0.1272%" height="15" fill="rgb(210,204,4)" fg:x="2111" fg:w="6"/><text x="45.0125%" y="287.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.15%)</title><rect x="44.7625%" y="293" width="0.1484%" height="15" fill="rgb(210,204,4)" fg:x="2111" fg:w="7"/><text x="45.0125%" y="303.50"></text></g><g><title>[[kernel.kallsyms]] (13 samples, 0.28%)</title><rect x="44.7625%" y="341" width="0.2757%" height="15" fill="rgb(210,204,4)" fg:x="2111" fg:w="13"/><text x="45.0125%" y="351.50"></text></g><g><title>[[kernel.kallsyms]] (13 samples, 0.28%)</title><rect x="44.7625%" y="325" width="0.2757%" height="15" fill="rgb(210,204,4)" fg:x="2111" fg:w="13"/><text x="45.0125%" y="335.50"></text></g><g><title>[[kernel.kallsyms]] (13 samples, 0.28%)</title><rect x="44.7625%" y="309" width="0.2757%" height="15" fill="rgb(210,204,4)" fg:x="2111" fg:w="13"/><text x="45.0125%" y="319.50"></text></g><g><title>core::ptr::write (14 samples, 0.30%)</title><rect x="44.7625%" y="373" width="0.2969%" height="15" fill="rgb(209,143,44)" fg:x="2111" fg:w="14"/><text x="45.0125%" y="383.50"></text></g><g><title>__memset_avx512_unaligned_erms (14 samples, 0.30%)</title><rect x="44.7625%" y="357" width="0.2969%" height="15" fill="rgb(240,145,53)" fg:x="2111" fg:w="14"/><text x="45.0125%" y="367.50"></text></g><g><title>grow_heap (1 samples, 0.02%)</title><rect x="45.0594%" y="245" width="0.0212%" height="15" fill="rgb(231,135,3)" fg:x="2125" fg:w="1"/><text x="45.3094%" y="255.50"></text></g><g><title>__GI___mprotect (1 samples, 0.02%)</title><rect x="45.0594%" y="229" width="0.0212%" height="15" fill="rgb(209,155,30)" fg:x="2125" fg:w="1"/><text x="45.3094%" y="239.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="45.0594%" y="213" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="2125" fg:w="1"/><text x="45.3094%" y="223.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="45.0594%" y="197" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="2125" fg:w="1"/><text x="45.3094%" y="207.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="45.0594%" y="181" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="2125" fg:w="1"/><text x="45.3094%" y="191.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="45.0594%" y="165" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="2125" fg:w="1"/><text x="45.3094%" y="175.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="45.0594%" y="149" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="2125" fg:w="1"/><text x="45.3094%" y="159.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="45.0594%" y="133" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="2125" fg:w="1"/><text x="45.3094%" y="143.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="45.0594%" y="117" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="2125" fg:w="1"/><text x="45.3094%" y="127.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="45.0594%" y="101" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="2125" fg:w="1"/><text x="45.3094%" y="111.50"></text></g><g><title>regex_automata::meta::wrappers::PikeVM::create_cache (17 samples, 0.36%)</title><rect x="44.7413%" y="517" width="0.3605%" height="15" fill="rgb(217,147,1)" fg:x="2110" fg:w="17"/><text x="44.9913%" y="527.50"></text></g><g><title>regex_automata::meta::wrappers::PikeVMCache::new (17 samples, 0.36%)</title><rect x="44.7413%" y="501" width="0.3605%" height="15" fill="rgb(211,6,33)" fg:x="2110" fg:w="17"/><text x="44.9913%" y="511.50"></text></g><g><title>regex_automata::nfa::thompson::pikevm::PikeVM::create_cache (17 samples, 0.36%)</title><rect x="44.7413%" y="485" width="0.3605%" height="15" fill="rgb(211,33,34)" fg:x="2110" fg:w="17"/><text x="44.9913%" y="495.50"></text></g><g><title>regex_automata::nfa::thompson::pikevm::Cache::new (17 samples, 0.36%)</title><rect x="44.7413%" y="469" width="0.3605%" height="15" fill="rgb(244,199,14)" fg:x="2110" fg:w="17"/><text x="44.9913%" y="479.50"></text></g><g><title>regex_automata::nfa::thompson::pikevm::ActiveStates::new (17 samples, 0.36%)</title><rect x="44.7413%" y="453" width="0.3605%" height="15" fill="rgb(220,13,3)" fg:x="2110" fg:w="17"/><text x="44.9913%" y="463.50"></text></g><g><title>regex_automata::nfa::thompson::pikevm::ActiveStates::reset (17 samples, 0.36%)</title><rect x="44.7413%" y="437" width="0.3605%" height="15" fill="rgb(243,194,33)" fg:x="2110" fg:w="17"/><text x="44.9913%" y="447.50"></text></g><g><title>regex_automata::nfa::thompson::pikevm::SlotTable::reset (16 samples, 0.34%)</title><rect x="44.7625%" y="421" width="0.3393%" height="15" fill="rgb(226,221,20)" fg:x="2111" fg:w="16"/><text x="45.0125%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (16 samples, 0.34%)</title><rect x="44.7625%" y="405" width="0.3393%" height="15" fill="rgb(249,199,35)" fg:x="2111" fg:w="16"/><text x="45.0125%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (16 samples, 0.34%)</title><rect x="44.7625%" y="389" width="0.3393%" height="15" fill="rgb(216,52,5)" fg:x="2111" fg:w="16"/><text x="45.0125%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.04%)</title><rect x="45.0594%" y="373" width="0.0424%" height="15" fill="rgb(212,159,3)" fg:x="2125" fg:w="2"/><text x="45.3094%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.04%)</title><rect x="45.0594%" y="357" width="0.0424%" height="15" fill="rgb(231,142,39)" fg:x="2125" fg:w="2"/><text x="45.3094%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.04%)</title><rect x="45.0594%" y="341" width="0.0424%" height="15" fill="rgb(249,2,22)" fg:x="2125" fg:w="2"/><text x="45.3094%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.04%)</title><rect x="45.0594%" y="325" width="0.0424%" height="15" fill="rgb(254,53,35)" fg:x="2125" fg:w="2"/><text x="45.3094%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.04%)</title><rect x="45.0594%" y="309" width="0.0424%" height="15" fill="rgb(237,133,22)" fg:x="2125" fg:w="2"/><text x="45.3094%" y="319.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.04%)</title><rect x="45.0594%" y="293" width="0.0424%" height="15" fill="rgb(206,112,53)" fg:x="2125" fg:w="2"/><text x="45.3094%" y="303.50"></text></g><g><title>_int_malloc (2 samples, 0.04%)</title><rect x="45.0594%" y="277" width="0.0424%" height="15" fill="rgb(222,219,51)" fg:x="2125" fg:w="2"/><text x="45.3094%" y="287.50"></text></g><g><title>sysmalloc (2 samples, 0.04%)</title><rect x="45.0594%" y="261" width="0.0424%" height="15" fill="rgb(237,64,10)" fg:x="2125" fg:w="2"/><text x="45.3094%" y="271.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="45.0806%" y="245" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="2126" fg:w="1"/><text x="45.3306%" y="255.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="45.0806%" y="229" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="2126" fg:w="1"/><text x="45.3306%" y="239.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="45.0806%" y="213" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="2126" fg:w="1"/><text x="45.3306%" y="223.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="45.0806%" y="197" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="2126" fg:w="1"/><text x="45.3306%" y="207.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="45.0806%" y="181" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="2126" fg:w="1"/><text x="45.3306%" y="191.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="45.0806%" y="165" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="2126" fg:w="1"/><text x="45.3306%" y="175.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="45.0806%" y="149" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="2126" fg:w="1"/><text x="45.3306%" y="159.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="45.0806%" y="133" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="2126" fg:w="1"/><text x="45.3306%" y="143.50"></text></g><g><title>regex_automata::hybrid::dfa::Lazy::init_cache (1 samples, 0.02%)</title><rect x="45.1018%" y="405" width="0.0212%" height="15" fill="rgb(226,99,9)" fg:x="2127" fg:w="1"/><text x="45.3518%" y="415.50"></text></g><g><title>regex_automata::util::determinize::state::State::dead (1 samples, 0.02%)</title><rect x="45.1018%" y="389" width="0.0212%" height="15" fill="rgb(253,162,20)" fg:x="2127" fg:w="1"/><text x="45.3518%" y="399.50"></text></g><g><title>regex_automata::util::determinize::state::StateBuilderEmpty::into_matches (1 samples, 0.02%)</title><rect x="45.1018%" y="373" width="0.0212%" height="15" fill="rgb(227,111,32)" fg:x="2127" fg:w="1"/><text x="45.3518%" y="383.50"></text></g><g><title>regex_automata::util::pool::Pool&lt;T,F&gt;::get (21 samples, 0.45%)</title><rect x="44.6989%" y="613" width="0.4453%" height="15" fill="rgb(210,26,34)" fg:x="2108" fg:w="21"/><text x="44.9489%" y="623.50"></text></g><g><title>regex_automata::util::pool::inner::Pool&lt;T,F&gt;::get (21 samples, 0.45%)</title><rect x="44.6989%" y="597" width="0.4453%" height="15" fill="rgb(245,192,35)" fg:x="2108" fg:w="21"/><text x="44.9489%" y="607.50"></text></g><g><title>regex_automata::util::pool::inner::Pool&lt;T,F&gt;::get_slow (21 samples, 0.45%)</title><rect x="44.6989%" y="581" width="0.4453%" height="15" fill="rgb(239,82,48)" fg:x="2108" fg:w="21"/><text x="44.9489%" y="591.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (21 samples, 0.45%)</title><rect x="44.6989%" y="565" width="0.4453%" height="15" fill="rgb(249,36,21)" fg:x="2108" fg:w="21"/><text x="44.9489%" y="575.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir::{{closure}} (21 samples, 0.45%)</title><rect x="44.6989%" y="549" width="0.4453%" height="15" fill="rgb(234,153,14)" fg:x="2108" fg:w="21"/><text x="44.9489%" y="559.50"></text></g><g><title>&lt;regex_automata::meta::strategy::Core as regex_automata::meta::strategy::Strategy&gt;::create_cache (19 samples, 0.40%)</title><rect x="44.7413%" y="533" width="0.4029%" height="15" fill="rgb(250,2,44)" fg:x="2110" fg:w="19"/><text x="44.9913%" y="543.50"></text></g><g><title>regex_automata::meta::wrappers::Hybrid::create_cache (2 samples, 0.04%)</title><rect x="45.1018%" y="517" width="0.0424%" height="15" fill="rgb(221,96,53)" fg:x="2127" fg:w="2"/><text x="45.3518%" y="527.50"></text></g><g><title>regex_automata::meta::wrappers::HybridCache::new (2 samples, 0.04%)</title><rect x="45.1018%" y="501" width="0.0424%" height="15" fill="rgb(228,162,6)" fg:x="2127" fg:w="2"/><text x="45.3518%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.04%)</title><rect x="45.1018%" y="485" width="0.0424%" height="15" fill="rgb(254,35,30)" fg:x="2127" fg:w="2"/><text x="45.3518%" y="495.50"></text></g><g><title>regex_automata::meta::wrappers::HybridCache::new::{{closure}} (2 samples, 0.04%)</title><rect x="45.1018%" y="469" width="0.0424%" height="15" fill="rgb(247,196,35)" fg:x="2127" fg:w="2"/><text x="45.3518%" y="479.50"></text></g><g><title>regex_automata::hybrid::regex::Regex::create_cache (2 samples, 0.04%)</title><rect x="45.1018%" y="453" width="0.0424%" height="15" fill="rgb(224,197,49)" fg:x="2127" fg:w="2"/><text x="45.3518%" y="463.50"></text></g><g><title>regex_automata::hybrid::regex::Cache::new (2 samples, 0.04%)</title><rect x="45.1018%" y="437" width="0.0424%" height="15" fill="rgb(245,87,50)" fg:x="2127" fg:w="2"/><text x="45.3518%" y="447.50"></text></g><g><title>regex_automata::hybrid::dfa::Cache::new (2 samples, 0.04%)</title><rect x="45.1018%" y="421" width="0.0424%" height="15" fill="rgb(251,42,50)" fg:x="2127" fg:w="2"/><text x="45.3518%" y="431.50"></text></g><g><title>regex::regex::bytes::Regex::captures (24 samples, 0.51%)</title><rect x="44.6565%" y="693" width="0.5089%" height="15" fill="rgb(233,29,12)" fg:x="2106" fg:w="24"/><text x="44.9065%" y="703.50"></text></g><g><title>regex::regex::bytes::Regex::captures_at (24 samples, 0.51%)</title><rect x="44.6565%" y="677" width="0.5089%" height="15" fill="rgb(207,96,18)" fg:x="2106" fg:w="24"/><text x="44.9065%" y="687.50"></text></g><g><title>regex_automata::meta::regex::Regex::captures (22 samples, 0.47%)</title><rect x="44.6989%" y="661" width="0.4665%" height="15" fill="rgb(219,198,6)" fg:x="2108" fg:w="22"/><text x="44.9489%" y="671.50"></text></g><g><title>regex_automata::meta::regex::Regex::search_captures (22 samples, 0.47%)</title><rect x="44.6989%" y="645" width="0.4665%" height="15" fill="rgb(212,211,21)" fg:x="2108" fg:w="22"/><text x="44.9489%" y="655.50"></text></g><g><title>regex_automata::meta::regex::Regex::search_slots (22 samples, 0.47%)</title><rect x="44.6989%" y="629" width="0.4665%" height="15" fill="rgb(243,12,43)" fg:x="2108" fg:w="22"/><text x="44.9489%" y="639.50"></text></g><g><title>&lt;regex_automata::meta::strategy::Core as regex_automata::meta::strategy::Strategy&gt;::search_slots (1 samples, 0.02%)</title><rect x="45.1442%" y="613" width="0.0212%" height="15" fill="rgb(221,222,32)" fg:x="2129" fg:w="1"/><text x="45.3942%" y="623.50"></text></g><g><title>regex_automata::meta::strategy::Core::try_search_mayfail (1 samples, 0.02%)</title><rect x="45.1442%" y="597" width="0.0212%" height="15" fill="rgb(244,122,16)" fg:x="2129" fg:w="1"/><text x="45.3942%" y="607.50"></text></g><g><title>regex_automata::meta::wrappers::HybridEngine::try_search (1 samples, 0.02%)</title><rect x="45.1442%" y="581" width="0.0212%" height="15" fill="rgb(216,227,19)" fg:x="2129" fg:w="1"/><text x="45.3942%" y="591.50"></text></g><g><title>regex_automata::hybrid::regex::Regex::try_search (1 samples, 0.02%)</title><rect x="45.1442%" y="565" width="0.0212%" height="15" fill="rgb(234,124,32)" fg:x="2129" fg:w="1"/><text x="45.3942%" y="575.50"></text></g><g><title>regex_automata::hybrid::dfa::DFA::try_search_fwd (1 samples, 0.02%)</title><rect x="45.1442%" y="549" width="0.0212%" height="15" fill="rgb(209,194,30)" fg:x="2129" fg:w="1"/><text x="45.3942%" y="559.50"></text></g><g><title>regex_automata::hybrid::search::find_fwd (1 samples, 0.02%)</title><rect x="45.1442%" y="533" width="0.0212%" height="15" fill="rgb(254,161,34)" fg:x="2129" fg:w="1"/><text x="45.3942%" y="543.50"></text></g><g><title>regex_automata::hybrid::search::find_fwd_imp (1 samples, 0.02%)</title><rect x="45.1442%" y="517" width="0.0212%" height="15" fill="rgb(246,79,15)" fg:x="2129" fg:w="1"/><text x="45.3942%" y="527.50"></text></g><g><title>regex_automata::hybrid::dfa::DFA::next_state (1 samples, 0.02%)</title><rect x="45.1442%" y="501" width="0.0212%" height="15" fill="rgb(223,122,32)" fg:x="2129" fg:w="1"/><text x="45.3942%" y="511.50"></text></g><g><title>regex_automata::hybrid::dfa::Lazy::cache_next_state (1 samples, 0.02%)</title><rect x="45.1442%" y="485" width="0.0212%" height="15" fill="rgb(233,228,11)" fg:x="2129" fg:w="1"/><text x="45.3942%" y="495.50"></text></g><g><title>regex_automata::hybrid::dfa::Lazy::add_builder_state (1 samples, 0.02%)</title><rect x="45.1442%" y="469" width="0.0212%" height="15" fill="rgb(235,83,32)" fg:x="2129" fg:w="1"/><text x="45.3942%" y="479.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.02%)</title><rect x="45.1442%" y="453" width="0.0212%" height="15" fill="rgb(218,89,21)" fg:x="2129" fg:w="1"/><text x="45.3942%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.02%)</title><rect x="45.1442%" y="437" width="0.0212%" height="15" fill="rgb(207,60,33)" fg:x="2129" fg:w="1"/><text x="45.3942%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="45.1442%" y="421" width="0.0212%" height="15" fill="rgb(207,224,35)" fg:x="2129" fg:w="1"/><text x="45.3942%" y="431.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="45.1442%" y="405" width="0.0212%" height="15" fill="rgb(241,1,29)" fg:x="2129" fg:w="1"/><text x="45.3942%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="45.1442%" y="389" width="0.0212%" height="15" fill="rgb(222,198,6)" fg:x="2129" fg:w="1"/><text x="45.3942%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.02%)</title><rect x="45.1442%" y="373" width="0.0212%" height="15" fill="rgb(212,33,36)" fg:x="2129" fg:w="1"/><text x="45.3942%" y="383.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.02%)</title><rect x="45.1442%" y="357" width="0.0212%" height="15" fill="rgb(213,6,49)" fg:x="2129" fg:w="1"/><text x="45.3942%" y="367.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (1 samples, 0.02%)</title><rect x="45.1442%" y="341" width="0.0212%" height="15" fill="rgb(245,225,13)" fg:x="2129" fg:w="1"/><text x="45.3942%" y="351.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="45.1442%" y="325" width="0.0212%" height="15" fill="rgb(253,26,19)" fg:x="2129" fg:w="1"/><text x="45.3942%" y="335.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="45.1442%" y="309" width="0.0212%" height="15" fill="rgb(206,186,51)" fg:x="2129" fg:w="1"/><text x="45.3942%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="45.1442%" y="293" width="0.0212%" height="15" fill="rgb(236,225,40)" fg:x="2129" fg:w="1"/><text x="45.3942%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="45.1442%" y="277" width="0.0212%" height="15" fill="rgb(248,169,8)" fg:x="2129" fg:w="1"/><text x="45.3942%" y="287.50"></text></g><g><title>regex::builders::bytes::RegexBuilder::new (1 samples, 0.02%)</title><rect x="45.1654%" y="533" width="0.0212%" height="15" fill="rgb(246,66,5)" fg:x="2130" fg:w="1"/><text x="45.4154%" y="543.50"></text></g><g><title>regex::builders::Builder::new (1 samples, 0.02%)</title><rect x="45.1654%" y="517" width="0.0212%" height="15" fill="rgb(223,120,31)" fg:x="2130" fg:w="1"/><text x="45.4154%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.02%)</title><rect x="45.1654%" y="501" width="0.0212%" height="15" fill="rgb(205,186,49)" fg:x="2130" fg:w="1"/><text x="45.4154%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="45.1654%" y="485" width="0.0212%" height="15" fill="rgb(232,211,42)" fg:x="2130" fg:w="1"/><text x="45.4154%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.02%)</title><rect x="45.1654%" y="469" width="0.0212%" height="15" fill="rgb(214,146,48)" fg:x="2130" fg:w="1"/><text x="45.4154%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.02%)</title><rect x="45.1654%" y="453" width="0.0212%" height="15" fill="rgb(245,181,4)" fg:x="2130" fg:w="1"/><text x="45.4154%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="45.1654%" y="437" width="0.0212%" height="15" fill="rgb(242,69,50)" fg:x="2130" fg:w="1"/><text x="45.4154%" y="447.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="45.1654%" y="421" width="0.0212%" height="15" fill="rgb(238,117,12)" fg:x="2130" fg:w="1"/><text x="45.4154%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::by_ref_sized::ByRefSized&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="45.1654%" y="405" width="0.0212%" height="15" fill="rgb(217,183,5)" fg:x="2130" fg:w="1"/><text x="45.4154%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.02%)</title><rect x="45.1654%" y="389" width="0.0212%" height="15" fill="rgb(223,137,46)" fg:x="2130" fg:w="1"/><text x="45.4154%" y="399.50"></text></g><g><title>&lt;core::const_closure::ConstFnMutClosure&lt;&amp;mut A,Function&gt; as core::ops::function::FnMut&lt;ClosureArguments&gt;&gt;::call_mut (1 samples, 0.02%)</title><rect x="45.1654%" y="373" width="0.0212%" height="15" fill="rgb(206,27,14)" fg:x="2130" fg:w="1"/><text x="45.4154%" y="383.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.02%)</title><rect x="45.1654%" y="357" width="0.0212%" height="15" fill="rgb(235,49,44)" fg:x="2130" fg:w="1"/><text x="45.4154%" y="367.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_2_imp (1 samples, 0.02%)</title><rect x="45.1654%" y="341" width="0.0212%" height="15" fill="rgb(252,20,41)" fg:x="2130" fg:w="1"/><text x="45.4154%" y="351.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (1 samples, 0.02%)</title><rect x="45.1654%" y="325" width="0.0212%" height="15" fill="rgb(226,146,40)" fg:x="2130" fg:w="1"/><text x="45.4154%" y="335.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.02%)</title><rect x="45.1654%" y="309" width="0.0212%" height="15" fill="rgb(253,112,1)" fg:x="2130" fg:w="1"/><text x="45.4154%" y="319.50"></text></g><g><title>regex::builders::Builder::new::{{closure}} (1 samples, 0.02%)</title><rect x="45.1654%" y="293" width="0.0212%" height="15" fill="rgb(240,154,24)" fg:x="2130" fg:w="1"/><text x="45.4154%" y="303.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (1 samples, 0.02%)</title><rect x="45.1654%" y="277" width="0.0212%" height="15" fill="rgb(212,135,46)" fg:x="2130" fg:w="1"/><text x="45.4154%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.02%)</title><rect x="45.1654%" y="261" width="0.0212%" height="15" fill="rgb(229,24,43)" fg:x="2130" fg:w="1"/><text x="45.4154%" y="271.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.02%)</title><rect x="45.1654%" y="245" width="0.0212%" height="15" fill="rgb(240,68,32)" fg:x="2130" fg:w="1"/><text x="45.4154%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.02%)</title><rect x="45.1654%" y="229" width="0.0212%" height="15" fill="rgb(212,75,49)" fg:x="2130" fg:w="1"/><text x="45.4154%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.02%)</title><rect x="45.1654%" y="213" width="0.0212%" height="15" fill="rgb(209,26,30)" fg:x="2130" fg:w="1"/><text x="45.4154%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.02%)</title><rect x="45.1654%" y="197" width="0.0212%" height="15" fill="rgb(229,121,46)" fg:x="2130" fg:w="1"/><text x="45.4154%" y="207.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.02%)</title><rect x="45.1654%" y="181" width="0.0212%" height="15" fill="rgb(221,172,50)" fg:x="2130" fg:w="1"/><text x="45.4154%" y="191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.02%)</title><rect x="45.1654%" y="165" width="0.0212%" height="15" fill="rgb(216,42,52)" fg:x="2130" fg:w="1"/><text x="45.4154%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="45.1654%" y="149" width="0.0212%" height="15" fill="rgb(249,207,12)" fg:x="2130" fg:w="1"/><text x="45.4154%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="45.1654%" y="133" width="0.0212%" height="15" fill="rgb(224,194,14)" fg:x="2130" fg:w="1"/><text x="45.4154%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect x="45.1654%" y="117" width="0.0212%" height="15" fill="rgb(227,204,5)" fg:x="2130" fg:w="1"/><text x="45.4154%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="45.1654%" y="101" width="0.0212%" height="15" fill="rgb(231,114,21)" fg:x="2130" fg:w="1"/><text x="45.4154%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="45.1654%" y="85" width="0.0212%" height="15" fill="rgb(238,209,2)" fg:x="2130" fg:w="1"/><text x="45.4154%" y="95.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="45.1654%" y="69" width="0.0212%" height="15" fill="rgb(253,135,41)" fg:x="2130" fg:w="1"/><text x="45.4154%" y="79.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="45.1654%" y="53" width="0.0212%" height="15" fill="rgb(206,112,53)" fg:x="2130" fg:w="1"/><text x="45.4154%" y="63.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="45.1654%" y="37" width="0.0212%" height="15" fill="rgb(222,219,51)" fg:x="2130" fg:w="1"/><text x="45.4154%" y="47.50"></text></g><g><title>regex_automata::meta::regex::Builder::syntax (1 samples, 0.02%)</title><rect x="45.1866%" y="501" width="0.0212%" height="15" fill="rgb(215,136,10)" fg:x="2131" fg:w="1"/><text x="45.4366%" y="511.50"></text></g><g><title>regex_automata::util::syntax::Config::apply_hir (1 samples, 0.02%)</title><rect x="45.1866%" y="485" width="0.0212%" height="15" fill="rgb(238,9,26)" fg:x="2131" fg:w="1"/><text x="45.4366%" y="495.50"></text></g><g><title>regex_syntax::hir::translate::TranslatorBuilder::case_insensitive (1 samples, 0.02%)</title><rect x="45.1866%" y="469" width="0.0212%" height="15" fill="rgb(205,62,34)" fg:x="2131" fg:w="1"/><text x="45.4366%" y="479.50"></text></g><g><title>regex_automata::meta::regex::Builder::configure (1 samples, 0.02%)</title><rect x="45.2078%" y="501" width="0.0212%" height="15" fill="rgb(233,68,39)" fg:x="2132" fg:w="1"/><text x="45.4578%" y="511.50"></text></g><g><title>regex_syntax::ast::visitor::HeapVisitor::pop (1 samples, 0.02%)</title><rect x="45.2290%" y="421" width="0.0212%" height="15" fill="rgb(228,68,26)" fg:x="2133" fg:w="1"/><text x="45.4790%" y="431.50"></text></g><g><title>regex_syntax::ast::visitor::HeapVisitor::induct (1 samples, 0.02%)</title><rect x="45.2502%" y="421" width="0.0212%" height="15" fill="rgb(220,131,54)" fg:x="2134" fg:w="1"/><text x="45.5002%" y="431.50"></text></g><g><title>regex_syntax::ast::visitor::HeapVisitor::visit_class (1 samples, 0.02%)</title><rect x="45.2502%" y="405" width="0.0212%" height="15" fill="rgb(253,26,45)" fg:x="2134" fg:w="1"/><text x="45.5002%" y="415.50"></text></g><g><title>regex_syntax::ast::visitor::HeapVisitor::visit_class_post (1 samples, 0.02%)</title><rect x="45.2502%" y="389" width="0.0212%" height="15" fill="rgb(236,134,51)" fg:x="2134" fg:w="1"/><text x="45.5002%" y="399.50"></text></g><g><title>&lt;regex_syntax::hir::translate::TranslatorI as regex_syntax::ast::visitor::Visitor&gt;::visit_class_set_item_post (1 samples, 0.02%)</title><rect x="45.2502%" y="373" width="0.0212%" height="15" fill="rgb(209,145,6)" fg:x="2134" fg:w="1"/><text x="45.5002%" y="383.50"></text></g><g><title>regex_syntax::hir::translate::TranslatorI::push (1 samples, 0.02%)</title><rect x="45.2502%" y="357" width="0.0212%" height="15" fill="rgb(222,136,12)" fg:x="2134" fg:w="1"/><text x="45.5002%" y="367.50"></text></g><g><title>core::ptr::write (2 samples, 0.04%)</title><rect x="45.2714%" y="405" width="0.0424%" height="15" fill="rgb(209,143,44)" fg:x="2135" fg:w="2"/><text x="45.5214%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.06%)</title><rect x="45.2714%" y="421" width="0.0636%" height="15" fill="rgb(241,229,15)" fg:x="2135" fg:w="3"/><text x="45.5214%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.02%)</title><rect x="45.3138%" y="405" width="0.0212%" height="15" fill="rgb(230,126,2)" fg:x="2137" fg:w="1"/><text x="45.5638%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.02%)</title><rect x="45.3138%" y="389" width="0.0212%" height="15" fill="rgb(220,216,49)" fg:x="2137" fg:w="1"/><text x="45.5638%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.04%)</title><rect x="45.3350%" y="389" width="0.0424%" height="15" fill="rgb(241,229,15)" fg:x="2138" fg:w="2"/><text x="45.5850%" y="399.50"></text></g><g><title>core::ptr::write (2 samples, 0.04%)</title><rect x="45.3350%" y="373" width="0.0424%" height="15" fill="rgb(209,143,44)" fg:x="2138" fg:w="2"/><text x="45.5850%" y="383.50"></text></g><g><title>regex_syntax::hir::translate::TranslatorI::push (3 samples, 0.06%)</title><rect x="45.3350%" y="405" width="0.0636%" height="15" fill="rgb(222,136,12)" fg:x="2138" fg:w="3"/><text x="45.5850%" y="415.50"></text></g><g><title>&lt;regex_syntax::hir::translate::TranslatorI as regex_syntax::ast::visitor::Visitor&gt;::visit_pre (5 samples, 0.11%)</title><rect x="45.3350%" y="421" width="0.1060%" height="15" fill="rgb(210,165,12)" fg:x="2138" fg:w="5"/><text x="45.5850%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.02%)</title><rect x="45.4411%" y="341" width="0.0212%" height="15" fill="rgb(248,74,39)" fg:x="2143" fg:w="1"/><text x="45.6911%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="45.4411%" y="325" width="0.0212%" height="15" fill="rgb(239,196,40)" fg:x="2143" fg:w="1"/><text x="45.6911%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="45.4623%" y="341" width="0.0212%" height="15" fill="rgb(214,20,35)" fg:x="2144" fg:w="1"/><text x="45.7123%" y="351.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.02%)</title><rect x="45.4623%" y="325" width="0.0212%" height="15" fill="rgb(217,126,36)" fg:x="2144" fg:w="1"/><text x="45.7123%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.04%)</title><rect x="45.4835%" y="293" width="0.0424%" height="15" fill="rgb(254,53,35)" fg:x="2145" fg:w="2"/><text x="45.7335%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.04%)</title><rect x="45.4835%" y="277" width="0.0424%" height="15" fill="rgb(237,133,22)" fg:x="2145" fg:w="2"/><text x="45.7335%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.04%)</title><rect x="45.4835%" y="261" width="0.0424%" height="15" fill="rgb(237,156,49)" fg:x="2145" fg:w="2"/><text x="45.7335%" y="271.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.04%)</title><rect x="45.4835%" y="245" width="0.0424%" height="15" fill="rgb(214,150,36)" fg:x="2145" fg:w="2"/><text x="45.7335%" y="255.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.04%)</title><rect x="45.4835%" y="229" width="0.0424%" height="15" fill="rgb(254,47,34)" fg:x="2145" fg:w="2"/><text x="45.7335%" y="239.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.04%)</title><rect x="45.4835%" y="213" width="0.0424%" height="15" fill="rgb(254,73,4)" fg:x="2145" fg:w="2"/><text x="45.7335%" y="223.50"></text></g><g><title>regex_syntax::hir::translate::TranslatorI::push_char (5 samples, 0.11%)</title><rect x="45.4411%" y="405" width="0.1060%" height="15" fill="rgb(208,83,35)" fg:x="2143" fg:w="5"/><text x="45.6911%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (5 samples, 0.11%)</title><rect x="45.4411%" y="389" width="0.1060%" height="15" fill="rgb(243,52,34)" fg:x="2143" fg:w="5"/><text x="45.6911%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (5 samples, 0.11%)</title><rect x="45.4411%" y="373" width="0.1060%" height="15" fill="rgb(224,207,30)" fg:x="2143" fg:w="5"/><text x="45.6911%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (5 samples, 0.11%)</title><rect x="45.4411%" y="357" width="0.1060%" height="15" fill="rgb(251,49,54)" fg:x="2143" fg:w="5"/><text x="45.6911%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.06%)</title><rect x="45.4835%" y="341" width="0.0636%" height="15" fill="rgb(212,159,3)" fg:x="2145" fg:w="3"/><text x="45.7335%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.06%)</title><rect x="45.4835%" y="325" width="0.0636%" height="15" fill="rgb(231,142,39)" fg:x="2145" fg:w="3"/><text x="45.7335%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.06%)</title><rect x="45.4835%" y="309" width="0.0636%" height="15" fill="rgb(249,2,22)" fg:x="2145" fg:w="3"/><text x="45.7335%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="45.5471%" y="389" width="0.0212%" height="15" fill="rgb(241,229,15)" fg:x="2148" fg:w="1"/><text x="45.7971%" y="399.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="45.5471%" y="373" width="0.0212%" height="15" fill="rgb(209,143,44)" fg:x="2148" fg:w="1"/><text x="45.7971%" y="383.50"></text></g><g><title>regex_syntax::hir::translate::TranslatorI::push (2 samples, 0.04%)</title><rect x="45.5471%" y="405" width="0.0424%" height="15" fill="rgb(222,136,12)" fg:x="2148" fg:w="2"/><text x="45.7971%" y="415.50"></text></g><g><title>regex_syntax::hir::translate::TranslatorI::pop (1 samples, 0.02%)</title><rect x="45.5895%" y="389" width="0.0212%" height="15" fill="rgb(251,64,13)" fg:x="2150" fg:w="1"/><text x="45.8395%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (1 samples, 0.02%)</title><rect x="45.5895%" y="373" width="0.0212%" height="15" fill="rgb(216,0,40)" fg:x="2150" fg:w="1"/><text x="45.8395%" y="383.50"></text></g><g><title>core::ptr::read (1 samples, 0.02%)</title><rect x="45.5895%" y="357" width="0.0212%" height="15" fill="rgb(222,157,29)" fg:x="2150" fg:w="1"/><text x="45.8395%" y="367.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (1 samples, 0.02%)</title><rect x="45.5895%" y="341" width="0.0212%" height="15" fill="rgb(234,151,54)" fg:x="2150" fg:w="1"/><text x="45.8395%" y="351.50"></text></g><g><title>core::str::converts::from_utf8 (2 samples, 0.04%)</title><rect x="45.6107%" y="357" width="0.0424%" height="15" fill="rgb(248,147,30)" fg:x="2151" fg:w="2"/><text x="45.8607%" y="367.50"></text></g><g><title>core::str::validations::run_utf8_validation (2 samples, 0.04%)</title><rect x="45.6107%" y="341" width="0.0424%" height="15" fill="rgb(240,23,14)" fg:x="2151" fg:w="2"/><text x="45.8607%" y="351.50"></text></g><g><title>regex_syntax::hir::Properties::literal (3 samples, 0.06%)</title><rect x="45.6107%" y="373" width="0.0636%" height="15" fill="rgb(224,191,39)" fg:x="2151" fg:w="3"/><text x="45.8607%" y="383.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="45.6531%" y="357" width="0.0212%" height="15" fill="rgb(209,114,30)" fg:x="2153" fg:w="1"/><text x="45.9031%" y="367.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.02%)</title><rect x="45.6531%" y="341" width="0.0212%" height="15" fill="rgb(248,129,10)" fg:x="2153" fg:w="1"/><text x="45.9031%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="45.6531%" y="325" width="0.0212%" height="15" fill="rgb(231,114,21)" fg:x="2153" fg:w="1"/><text x="45.9031%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="45.6531%" y="309" width="0.0212%" height="15" fill="rgb(238,209,2)" fg:x="2153" fg:w="1"/><text x="45.9031%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="45.6531%" y="293" width="0.0212%" height="15" fill="rgb(253,135,41)" fg:x="2153" fg:w="1"/><text x="45.9031%" y="303.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="45.6531%" y="277" width="0.0212%" height="15" fill="rgb(206,112,53)" fg:x="2153" fg:w="1"/><text x="45.9031%" y="287.50"></text></g><g><title>arena_for_chunk (1 samples, 0.02%)</title><rect x="45.6743%" y="229" width="0.0212%" height="15" fill="rgb(234,26,42)" fg:x="2154" fg:w="1"/><text x="45.9243%" y="239.50"></text></g><g><title>arena_for_chunk (1 samples, 0.02%)</title><rect x="45.6743%" y="213" width="0.0212%" height="15" fill="rgb(234,26,42)" fg:x="2154" fg:w="1"/><text x="45.9243%" y="223.50"></text></g><g><title>heap_for_ptr (1 samples, 0.02%)</title><rect x="45.6743%" y="197" width="0.0212%" height="15" fill="rgb(232,140,25)" fg:x="2154" fg:w="1"/><text x="45.9243%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::shrink_to_fit (2 samples, 0.04%)</title><rect x="45.6743%" y="325" width="0.0424%" height="15" fill="rgb(242,210,14)" fg:x="2154" fg:w="2"/><text x="45.9243%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::shrink_to_fit (2 samples, 0.04%)</title><rect x="45.6743%" y="309" width="0.0424%" height="15" fill="rgb(226,51,15)" fg:x="2154" fg:w="2"/><text x="45.9243%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::shrink (2 samples, 0.04%)</title><rect x="45.6743%" y="293" width="0.0424%" height="15" fill="rgb(220,229,0)" fg:x="2154" fg:w="2"/><text x="45.9243%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::shrink (2 samples, 0.04%)</title><rect x="45.6743%" y="277" width="0.0424%" height="15" fill="rgb(225,20,48)" fg:x="2154" fg:w="2"/><text x="45.9243%" y="287.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.04%)</title><rect x="45.6743%" y="261" width="0.0424%" height="15" fill="rgb(254,47,34)" fg:x="2154" fg:w="2"/><text x="45.9243%" y="271.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.04%)</title><rect x="45.6743%" y="245" width="0.0424%" height="15" fill="rgb(254,73,4)" fg:x="2154" fg:w="2"/><text x="45.9243%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (3 samples, 0.06%)</title><rect x="45.6743%" y="341" width="0.0636%" height="15" fill="rgb(241,79,3)" fg:x="2154" fg:w="3"/><text x="45.9243%" y="351.50"></text></g><g><title>regex_syntax::hir::Hir::literal (7 samples, 0.15%)</title><rect x="45.6107%" y="389" width="0.1484%" height="15" fill="rgb(248,43,17)" fg:x="2151" fg:w="7"/><text x="45.8607%" y="399.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (4 samples, 0.08%)</title><rect x="45.6743%" y="373" width="0.0848%" height="15" fill="rgb(249,58,20)" fg:x="2154" fg:w="4"/><text x="45.9243%" y="383.50"></text></g><g><title>alloc::vec::&lt;impl core::convert::From&lt;alloc::vec::Vec&lt;T,A&gt;&gt; for alloc::boxed::Box&lt;[T],A&gt;&gt;::from (4 samples, 0.08%)</title><rect x="45.6743%" y="357" width="0.0848%" height="15" fill="rgb(222,176,43)" fg:x="2154" fg:w="4"/><text x="45.9243%" y="367.50"></text></g><g><title>regex_syntax::hir::translate::TranslatorI::pop_concat_expr (9 samples, 0.19%)</title><rect x="45.5895%" y="405" width="0.1908%" height="15" fill="rgb(213,98,0)" fg:x="2150" fg:w="9"/><text x="45.8395%" y="415.50"></text></g><g><title>regex_syntax::hir::translate::TranslatorI::pop_alt_expr (1 samples, 0.02%)</title><rect x="45.7803%" y="405" width="0.0212%" height="15" fill="rgb(240,162,44)" fg:x="2159" fg:w="1"/><text x="46.0303%" y="415.50"></text></g><g><title>regex_syntax::hir::Hir::literal (1 samples, 0.02%)</title><rect x="45.7803%" y="389" width="0.0212%" height="15" fill="rgb(248,43,17)" fg:x="2159" fg:w="1"/><text x="46.0303%" y="399.50"></text></g><g><title>regex_syntax::hir::Properties::literal (1 samples, 0.02%)</title><rect x="45.7803%" y="373" width="0.0212%" height="15" fill="rgb(224,191,39)" fg:x="2159" fg:w="1"/><text x="46.0303%" y="383.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="45.7803%" y="357" width="0.0212%" height="15" fill="rgb(209,114,30)" fg:x="2159" fg:w="1"/><text x="46.0303%" y="367.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.02%)</title><rect x="45.7803%" y="341" width="0.0212%" height="15" fill="rgb(248,129,10)" fg:x="2159" fg:w="1"/><text x="46.0303%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="45.7803%" y="325" width="0.0212%" height="15" fill="rgb(231,114,21)" fg:x="2159" fg:w="1"/><text x="46.0303%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="45.7803%" y="309" width="0.0212%" height="15" fill="rgb(238,209,2)" fg:x="2159" fg:w="1"/><text x="46.0303%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="45.7803%" y="293" width="0.0212%" height="15" fill="rgb(253,135,41)" fg:x="2159" fg:w="1"/><text x="46.0303%" y="303.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="45.7803%" y="277" width="0.0212%" height="15" fill="rgb(206,112,53)" fg:x="2159" fg:w="1"/><text x="46.0303%" y="287.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="45.7803%" y="261" width="0.0212%" height="15" fill="rgb(222,219,51)" fg:x="2159" fg:w="1"/><text x="46.0303%" y="271.50"></text></g><g><title>regex_syntax::hir::Hir::class (1 samples, 0.02%)</title><rect x="45.8015%" y="389" width="0.0212%" height="15" fill="rgb(241,125,31)" fg:x="2160" fg:w="1"/><text x="46.0515%" y="399.50"></text></g><g><title>regex_syntax::hir::ClassUnicode::new (1 samples, 0.02%)</title><rect x="45.8227%" y="389" width="0.0212%" height="15" fill="rgb(214,194,28)" fg:x="2161" fg:w="1"/><text x="46.0727%" y="399.50"></text></g><g><title>regex_syntax::hir::interval::IntervalSet&lt;I&gt;::new (1 samples, 0.02%)</title><rect x="45.8227%" y="373" width="0.0212%" height="15" fill="rgb(226,60,27)" fg:x="2161" fg:w="1"/><text x="46.0727%" y="383.50"></text></g><g><title>regex_syntax::hir::translate::TranslatorI::case_fold_char (3 samples, 0.06%)</title><rect x="45.8015%" y="405" width="0.0636%" height="15" fill="rgb(240,41,22)" fg:x="2160" fg:w="3"/><text x="46.0515%" y="415.50"></text></g><g><title>regex_syntax::hir::Hir::literal (5 samples, 0.11%)</title><rect x="45.8651%" y="389" width="0.1060%" height="15" fill="rgb(248,43,17)" fg:x="2163" fg:w="5"/><text x="46.1151%" y="399.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (5 samples, 0.11%)</title><rect x="45.8651%" y="373" width="0.1060%" height="15" fill="rgb(249,58,20)" fg:x="2163" fg:w="5"/><text x="46.1151%" y="383.50"></text></g><g><title>alloc::vec::&lt;impl core::convert::From&lt;alloc::vec::Vec&lt;T,A&gt;&gt; for alloc::boxed::Box&lt;[T],A&gt;&gt;::from (5 samples, 0.11%)</title><rect x="45.8651%" y="357" width="0.1060%" height="15" fill="rgb(222,176,43)" fg:x="2163" fg:w="5"/><text x="46.1151%" y="367.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="45.9712%" y="261" width="0.0212%" height="15" fill="rgb(222,219,51)" fg:x="2168" fg:w="1"/><text x="46.2212%" y="271.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="45.9712%" y="245" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="2168" fg:w="1"/><text x="46.2212%" y="255.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="45.9712%" y="229" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="2168" fg:w="1"/><text x="46.2212%" y="239.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="45.9712%" y="213" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="2168" fg:w="1"/><text x="46.2212%" y="223.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="45.9712%" y="197" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="2168" fg:w="1"/><text x="46.2212%" y="207.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="45.9712%" y="181" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="2168" fg:w="1"/><text x="46.2212%" y="191.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="45.9712%" y="165" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="2168" fg:w="1"/><text x="46.2212%" y="175.50"></text></g><g><title>regex_syntax::hir::Hir::into_parts (2 samples, 0.04%)</title><rect x="45.9712%" y="389" width="0.0424%" height="15" fill="rgb(217,98,50)" fg:x="2168" fg:w="2"/><text x="46.2212%" y="399.50"></text></g><g><title>regex_syntax::hir::Properties::empty (2 samples, 0.04%)</title><rect x="45.9712%" y="373" width="0.0424%" height="15" fill="rgb(222,71,35)" fg:x="2168" fg:w="2"/><text x="46.2212%" y="383.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.04%)</title><rect x="45.9712%" y="357" width="0.0424%" height="15" fill="rgb(209,114,30)" fg:x="2168" fg:w="2"/><text x="46.2212%" y="367.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.04%)</title><rect x="45.9712%" y="341" width="0.0424%" height="15" fill="rgb(248,129,10)" fg:x="2168" fg:w="2"/><text x="46.2212%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.04%)</title><rect x="45.9712%" y="325" width="0.0424%" height="15" fill="rgb(231,114,21)" fg:x="2168" fg:w="2"/><text x="46.2212%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.04%)</title><rect x="45.9712%" y="309" width="0.0424%" height="15" fill="rgb(238,209,2)" fg:x="2168" fg:w="2"/><text x="46.2212%" y="319.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.04%)</title><rect x="45.9712%" y="293" width="0.0424%" height="15" fill="rgb(253,135,41)" fg:x="2168" fg:w="2"/><text x="46.2212%" y="303.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.04%)</title><rect x="45.9712%" y="277" width="0.0424%" height="15" fill="rgb(206,112,53)" fg:x="2168" fg:w="2"/><text x="46.2212%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::hir::Properties&gt; (1 samples, 0.02%)</title><rect x="46.0136%" y="389" width="0.0212%" height="15" fill="rgb(249,111,12)" fg:x="2170" fg:w="1"/><text x="46.2636%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;regex_syntax::hir::PropertiesI&gt;&gt; (1 samples, 0.02%)</title><rect x="46.0136%" y="373" width="0.0212%" height="15" fill="rgb(237,14,7)" fg:x="2170" fg:w="1"/><text x="46.2636%" y="383.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.02%)</title><rect x="46.0136%" y="357" width="0.0212%" height="15" fill="rgb(241,6,19)" fg:x="2170" fg:w="1"/><text x="46.2636%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="46.0136%" y="341" width="0.0212%" height="15" fill="rgb(238,77,31)" fg:x="2170" fg:w="1"/><text x="46.2636%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="46.0136%" y="325" width="0.0212%" height="15" fill="rgb(227,15,28)" fg:x="2170" fg:w="1"/><text x="46.2636%" y="335.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="46.0136%" y="309" width="0.0212%" height="15" fill="rgb(247,8,17)" fg:x="2170" fg:w="1"/><text x="46.2636%" y="319.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="46.0136%" y="293" width="0.0212%" height="15" fill="rgb(221,113,48)" fg:x="2170" fg:w="1"/><text x="46.2636%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;regex_syntax::hir::Hir&gt;&gt; (1 samples, 0.02%)</title><rect x="46.0348%" y="389" width="0.0212%" height="15" fill="rgb(225,127,54)" fg:x="2171" fg:w="1"/><text x="46.2848%" y="399.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="46.0348%" y="373" width="0.0212%" height="15" fill="rgb(240,119,4)" fg:x="2171" fg:w="1"/><text x="46.2848%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;regex_syntax::hir::Hir,alloc::alloc::Global&gt;&gt; (1 samples, 0.02%)</title><rect x="46.0348%" y="357" width="0.0212%" height="15" fill="rgb(243,170,23)" fg:x="2171" fg:w="1"/><text x="46.2848%" y="367.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="46.0348%" y="341" width="0.0212%" height="15" fill="rgb(207,158,18)" fg:x="2171" fg:w="1"/><text x="46.2848%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;regex_syntax::hir::Hir&gt;&gt; (1 samples, 0.02%)</title><rect x="46.0348%" y="325" width="0.0212%" height="15" fill="rgb(244,42,48)" fg:x="2171" fg:w="1"/><text x="46.2848%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="46.0348%" y="309" width="0.0212%" height="15" fill="rgb(213,128,22)" fg:x="2171" fg:w="1"/><text x="46.2848%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="46.0348%" y="293" width="0.0212%" height="15" fill="rgb(238,77,31)" fg:x="2171" fg:w="1"/><text x="46.2848%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="46.0348%" y="277" width="0.0212%" height="15" fill="rgb(227,15,28)" fg:x="2171" fg:w="1"/><text x="46.2848%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[u8]&gt;&gt; (1 samples, 0.02%)</title><rect x="46.0560%" y="389" width="0.0212%" height="15" fill="rgb(219,194,9)" fg:x="2172" fg:w="1"/><text x="46.3060%" y="399.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.02%)</title><rect x="46.0560%" y="373" width="0.0212%" height="15" fill="rgb(241,6,19)" fg:x="2172" fg:w="1"/><text x="46.3060%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="46.0560%" y="357" width="0.0212%" height="15" fill="rgb(238,77,31)" fg:x="2172" fg:w="1"/><text x="46.3060%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="46.0560%" y="341" width="0.0212%" height="15" fill="rgb(227,15,28)" fg:x="2172" fg:w="1"/><text x="46.3060%" y="351.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="46.0560%" y="325" width="0.0212%" height="15" fill="rgb(247,8,17)" fg:x="2172" fg:w="1"/><text x="46.3060%" y="335.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="46.0560%" y="309" width="0.0212%" height="15" fill="rgb(221,113,48)" fg:x="2172" fg:w="1"/><text x="46.3060%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="46.0772%" y="389" width="0.0212%" height="15" fill="rgb(241,229,15)" fg:x="2173" fg:w="1"/><text x="46.3272%" y="399.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="46.0772%" y="373" width="0.0212%" height="15" fill="rgb(209,143,44)" fg:x="2173" fg:w="1"/><text x="46.3272%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.02%)</title><rect x="46.0984%" y="325" width="0.0212%" height="15" fill="rgb(222,107,1)" fg:x="2174" fg:w="1"/><text x="46.3484%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="46.0984%" y="309" width="0.0212%" height="15" fill="rgb(214,20,35)" fg:x="2174" fg:w="1"/><text x="46.3484%" y="319.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.02%)</title><rect x="46.0984%" y="293" width="0.0212%" height="15" fill="rgb(217,126,36)" fg:x="2174" fg:w="1"/><text x="46.3484%" y="303.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="46.1196%" y="213" width="0.0212%" height="15" fill="rgb(222,219,51)" fg:x="2175" fg:w="1"/><text x="46.3696%" y="223.50"></text></g><g><title>tcache_put (1 samples, 0.02%)</title><rect x="46.1196%" y="197" width="0.0212%" height="15" fill="rgb(227,177,28)" fg:x="2175" fg:w="1"/><text x="46.3696%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.06%)</title><rect x="46.0984%" y="389" width="0.0636%" height="15" fill="rgb(209,26,30)" fg:x="2174" fg:w="3"/><text x="46.3484%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.06%)</title><rect x="46.0984%" y="373" width="0.0636%" height="15" fill="rgb(229,121,46)" fg:x="2174" fg:w="3"/><text x="46.3484%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.06%)</title><rect x="46.0984%" y="357" width="0.0636%" height="15" fill="rgb(221,172,50)" fg:x="2174" fg:w="3"/><text x="46.3484%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.06%)</title><rect x="46.0984%" y="341" width="0.0636%" height="15" fill="rgb(216,42,52)" fg:x="2174" fg:w="3"/><text x="46.3484%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.04%)</title><rect x="46.1196%" y="325" width="0.0424%" height="15" fill="rgb(249,207,12)" fg:x="2175" fg:w="2"/><text x="46.3696%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.04%)</title><rect x="46.1196%" y="309" width="0.0424%" height="15" fill="rgb(224,194,14)" fg:x="2175" fg:w="2"/><text x="46.3696%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.04%)</title><rect x="46.1196%" y="293" width="0.0424%" height="15" fill="rgb(227,204,5)" fg:x="2175" fg:w="2"/><text x="46.3696%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.04%)</title><rect x="46.1196%" y="277" width="0.0424%" height="15" fill="rgb(231,114,21)" fg:x="2175" fg:w="2"/><text x="46.3696%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.04%)</title><rect x="46.1196%" y="261" width="0.0424%" height="15" fill="rgb(238,209,2)" fg:x="2175" fg:w="2"/><text x="46.3696%" y="271.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.04%)</title><rect x="46.1196%" y="245" width="0.0424%" height="15" fill="rgb(253,135,41)" fg:x="2175" fg:w="2"/><text x="46.3696%" y="255.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.04%)</title><rect x="46.1196%" y="229" width="0.0424%" height="15" fill="rgb(206,112,53)" fg:x="2175" fg:w="2"/><text x="46.3696%" y="239.50"></text></g><g><title>regex_syntax::hir::Hir::concat (15 samples, 0.32%)</title><rect x="45.8651%" y="405" width="0.3181%" height="15" fill="rgb(228,76,42)" fg:x="2163" fg:w="15"/><text x="46.1151%" y="415.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="46.1620%" y="389" width="0.0212%" height="15" fill="rgb(247,8,17)" fg:x="2177" fg:w="1"/><text x="46.4120%" y="399.50"></text></g><g><title>regex_syntax::hir::Hir::class (1 samples, 0.02%)</title><rect x="46.1832%" y="405" width="0.0212%" height="15" fill="rgb(241,125,31)" fg:x="2178" fg:w="1"/><text x="46.4332%" y="415.50"></text></g><g><title>regex_syntax::hir::Class::literal (1 samples, 0.02%)</title><rect x="46.1832%" y="389" width="0.0212%" height="15" fill="rgb(246,44,31)" fg:x="2178" fg:w="1"/><text x="46.4332%" y="399.50"></text></g><g><title>regex_syntax::hir::ClassUnicode::literal (1 samples, 0.02%)</title><rect x="46.1832%" y="373" width="0.0212%" height="15" fill="rgb(225,27,13)" fg:x="2178" fg:w="1"/><text x="46.4332%" y="383.50"></text></g><g><title>alloc::string::String::into_bytes (1 samples, 0.02%)</title><rect x="46.1832%" y="357" width="0.0212%" height="15" fill="rgb(235,119,45)" fg:x="2178" fg:w="1"/><text x="46.4332%" y="367.50"></text></g><g><title>regex_syntax::hir::Properties::alternation (1 samples, 0.02%)</title><rect x="46.2044%" y="389" width="0.0212%" height="15" fill="rgb(214,136,5)" fg:x="2179" fg:w="1"/><text x="46.4544%" y="399.50"></text></g><g><title>regex_syntax::hir::Properties::union (1 samples, 0.02%)</title><rect x="46.2044%" y="373" width="0.0212%" height="15" fill="rgb(229,61,24)" fg:x="2179" fg:w="1"/><text x="46.4544%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::hir::Hir&gt; (1 samples, 0.02%)</title><rect x="46.2256%" y="373" width="0.0212%" height="15" fill="rgb(244,216,7)" fg:x="2180" fg:w="1"/><text x="46.4756%" y="383.50"></text></g><g><title>regex_syntax::hir::Hir::into_parts (3 samples, 0.06%)</title><rect x="46.2256%" y="389" width="0.0636%" height="15" fill="rgb(217,98,50)" fg:x="2180" fg:w="3"/><text x="46.4756%" y="399.50"></text></g><g><title>core::mem::replace (2 samples, 0.04%)</title><rect x="46.2468%" y="373" width="0.0424%" height="15" fill="rgb(240,40,18)" fg:x="2181" fg:w="2"/><text x="46.4968%" y="383.50"></text></g><g><title>core::ptr::read (2 samples, 0.04%)</title><rect x="46.2468%" y="357" width="0.0424%" height="15" fill="rgb(222,157,29)" fg:x="2181" fg:w="2"/><text x="46.4968%" y="367.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (2 samples, 0.04%)</title><rect x="46.2468%" y="341" width="0.0424%" height="15" fill="rgb(234,151,54)" fg:x="2181" fg:w="2"/><text x="46.4968%" y="351.50"></text></g><g><title>regex_syntax::hir::Hir::alternation (6 samples, 0.13%)</title><rect x="46.2044%" y="405" width="0.1272%" height="15" fill="rgb(206,114,23)" fg:x="2179" fg:w="6"/><text x="46.4544%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.04%)</title><rect x="46.2892%" y="389" width="0.0424%" height="15" fill="rgb(241,229,15)" fg:x="2183" fg:w="2"/><text x="46.5392%" y="399.50"></text></g><g><title>core::ptr::write (2 samples, 0.04%)</title><rect x="46.2892%" y="373" width="0.0424%" height="15" fill="rgb(209,143,44)" fg:x="2183" fg:w="2"/><text x="46.5392%" y="383.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="46.3316%" y="389" width="0.0212%" height="15" fill="rgb(209,143,44)" fg:x="2185" fg:w="1"/><text x="46.5816%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.04%)</title><rect x="46.3316%" y="405" width="0.0424%" height="15" fill="rgb(241,229,15)" fg:x="2185" fg:w="2"/><text x="46.5816%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="46.3528%" y="389" width="0.0212%" height="15" fill="rgb(254,103,39)" fg:x="2186" fg:w="1"/><text x="46.6028%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="46.3528%" y="373" width="0.0212%" height="15" fill="rgb(254,53,35)" fg:x="2186" fg:w="1"/><text x="46.6028%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="46.3528%" y="357" width="0.0212%" height="15" fill="rgb(237,133,22)" fg:x="2186" fg:w="1"/><text x="46.6028%" y="367.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="46.3528%" y="341" width="0.0212%" height="15" fill="rgb(206,112,53)" fg:x="2186" fg:w="1"/><text x="46.6028%" y="351.50"></text></g><g><title>&lt;regex_syntax::hir::translate::TranslatorI as regex_syntax::ast::visitor::Visitor&gt;::visit_post (50 samples, 1.06%)</title><rect x="45.4411%" y="421" width="1.0602%" height="15" fill="rgb(207,12,29)" fg:x="2143" fg:w="50"/><text x="45.6911%" y="431.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (1 samples, 0.02%)</title><rect x="46.5013%" y="389" width="0.0212%" height="15" fill="rgb(252,84,39)" fg:x="2193" fg:w="1"/><text x="46.7513%" y="399.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (1 samples, 0.02%)</title><rect x="46.5013%" y="373" width="0.0212%" height="15" fill="rgb(208,49,23)" fg:x="2193" fg:w="1"/><text x="46.7513%" y="383.50"></text></g><g><title>core::cell::BorrowRefMut::new (1 samples, 0.02%)</title><rect x="46.5013%" y="357" width="0.0212%" height="15" fill="rgb(242,89,29)" fg:x="2193" fg:w="1"/><text x="46.7513%" y="367.50"></text></g><g><title>&lt;regex_syntax::hir::translate::TranslatorI as regex_syntax::ast::visitor::Visitor&gt;::visit_alternation_in (4 samples, 0.08%)</title><rect x="46.5013%" y="421" width="0.0848%" height="15" fill="rgb(208,41,30)" fg:x="2193" fg:w="4"/><text x="46.7513%" y="431.50"></text></g><g><title>regex_syntax::hir::translate::TranslatorI::push (4 samples, 0.08%)</title><rect x="46.5013%" y="405" width="0.0848%" height="15" fill="rgb(222,136,12)" fg:x="2193" fg:w="4"/><text x="46.7513%" y="415.50"></text></g><g><title>regex_syntax::hir::translate::Translator::translate (66 samples, 1.40%)</title><rect x="45.2290%" y="469" width="1.3995%" height="15" fill="rgb(212,73,14)" fg:x="2133" fg:w="66"/><text x="45.4790%" y="479.50"></text></g><g><title>regex_syntax::ast::visitor::visit (66 samples, 1.40%)</title><rect x="45.2290%" y="453" width="1.3995%" height="15" fill="rgb(209,184,21)" fg:x="2133" fg:w="66"/><text x="45.4790%" y="463.50"></text></g><g><title>regex_syntax::ast::visitor::HeapVisitor::visit (66 samples, 1.40%)</title><rect x="45.2290%" y="437" width="1.3995%" height="15" fill="rgb(253,224,17)" fg:x="2133" fg:w="66"/><text x="45.4790%" y="447.50"></text></g><g><title>regex_syntax::ast::parse::ParserBuilder::build (1 samples, 0.02%)</title><rect x="46.6285%" y="469" width="0.0212%" height="15" fill="rgb(233,135,38)" fg:x="2199" fg:w="1"/><text x="46.8785%" y="479.50"></text></g><g><title>regex_syntax::ast::visitor::HeapVisitor::visit_class (1 samples, 0.02%)</title><rect x="46.6497%" y="373" width="0.0212%" height="15" fill="rgb(253,26,45)" fg:x="2200" fg:w="1"/><text x="46.8997%" y="383.50"></text></g><g><title>regex_syntax::ast::visitor::HeapVisitor::visit_class_pre (1 samples, 0.02%)</title><rect x="46.6497%" y="357" width="0.0212%" height="15" fill="rgb(210,189,37)" fg:x="2200" fg:w="1"/><text x="46.8997%" y="367.50"></text></g><g><title>&lt;regex_syntax::ast::parse::NestLimiter&lt;P&gt; as regex_syntax::ast::visitor::Visitor&gt;::visit_class_set_item_pre (1 samples, 0.02%)</title><rect x="46.6497%" y="341" width="0.0212%" height="15" fill="rgb(211,95,3)" fg:x="2200" fg:w="1"/><text x="46.8997%" y="351.50"></text></g><g><title>regex_syntax::ast::visitor::HeapVisitor::induct (2 samples, 0.04%)</title><rect x="46.6497%" y="389" width="0.0424%" height="15" fill="rgb(220,131,54)" fg:x="2200" fg:w="2"/><text x="46.8997%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::is_empty (1 samples, 0.02%)</title><rect x="46.6709%" y="373" width="0.0212%" height="15" fill="rgb(242,223,10)" fg:x="2201" fg:w="1"/><text x="46.9209%" y="383.50"></text></g><g><title>&lt;regex_syntax::ast::parse::NestLimiter&lt;P&gt; as regex_syntax::ast::visitor::Visitor&gt;::visit_pre (1 samples, 0.02%)</title><rect x="46.6921%" y="389" width="0.0212%" height="15" fill="rgb(220,157,37)" fg:x="2202" fg:w="1"/><text x="46.9421%" y="399.50"></text></g><g><title>regex_syntax::ast::visitor::visit (4 samples, 0.08%)</title><rect x="46.6497%" y="421" width="0.0848%" height="15" fill="rgb(209,184,21)" fg:x="2200" fg:w="4"/><text x="46.8997%" y="431.50"></text></g><g><title>regex_syntax::ast::visitor::HeapVisitor::visit (4 samples, 0.08%)</title><rect x="46.6497%" y="405" width="0.0848%" height="15" fill="rgb(253,224,17)" fg:x="2200" fg:w="4"/><text x="46.8997%" y="415.50"></text></g><g><title>tcache_put (1 samples, 0.02%)</title><rect x="46.7345%" y="277" width="0.0212%" height="15" fill="rgb(227,177,28)" fg:x="2204" fg:w="1"/><text x="46.9845%" y="287.50"></text></g><g><title>_int_malloc (4 samples, 0.08%)</title><rect x="46.7345%" y="293" width="0.0848%" height="15" fill="rgb(222,219,51)" fg:x="2204" fg:w="4"/><text x="46.9845%" y="303.50"></text></g><g><title>alloc::alloc::exchange_malloc (5 samples, 0.11%)</title><rect x="46.7345%" y="373" width="0.1060%" height="15" fill="rgb(248,129,10)" fg:x="2204" fg:w="5"/><text x="46.9845%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.11%)</title><rect x="46.7345%" y="357" width="0.1060%" height="15" fill="rgb(231,114,21)" fg:x="2204" fg:w="5"/><text x="46.9845%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.11%)</title><rect x="46.7345%" y="341" width="0.1060%" height="15" fill="rgb(238,209,2)" fg:x="2204" fg:w="5"/><text x="46.9845%" y="351.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.11%)</title><rect x="46.7345%" y="325" width="0.1060%" height="15" fill="rgb(253,135,41)" fg:x="2204" fg:w="5"/><text x="46.9845%" y="335.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.11%)</title><rect x="46.7345%" y="309" width="0.1060%" height="15" fill="rgb(206,112,53)" fg:x="2204" fg:w="5"/><text x="46.9845%" y="319.50"></text></g><g><title>regex_syntax::ast::Ast::literal (6 samples, 0.13%)</title><rect x="46.7345%" y="405" width="0.1272%" height="15" fill="rgb(212,66,23)" fg:x="2204" fg:w="6"/><text x="46.9845%" y="415.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (6 samples, 0.13%)</title><rect x="46.7345%" y="389" width="0.1272%" height="15" fill="rgb(209,114,30)" fg:x="2204" fg:w="6"/><text x="46.9845%" y="399.50"></text></g><g><title>regex_syntax::ast::parse::Primitive::into_ast (7 samples, 0.15%)</title><rect x="46.7345%" y="421" width="0.1484%" height="15" fill="rgb(225,212,2)" fg:x="2204" fg:w="7"/><text x="46.9845%" y="431.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_capture_name (1 samples, 0.02%)</title><rect x="46.8830%" y="389" width="0.0212%" height="15" fill="rgb(241,170,13)" fg:x="2211" fg:w="1"/><text x="47.1330%" y="399.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::add_capture_name (1 samples, 0.02%)</title><rect x="46.8830%" y="373" width="0.0212%" height="15" fill="rgb(244,6,43)" fg:x="2211" fg:w="1"/><text x="47.1330%" y="383.50"></text></g><g><title>&lt;regex_syntax::ast::CaptureName as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="46.8830%" y="357" width="0.0212%" height="15" fill="rgb(221,215,29)" fg:x="2211" fg:w="1"/><text x="47.1330%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="46.8830%" y="341" width="0.0212%" height="15" fill="rgb(251,65,42)" fg:x="2211" fg:w="1"/><text x="47.1330%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="46.8830%" y="325" width="0.0212%" height="15" fill="rgb(239,104,10)" fg:x="2211" fg:w="1"/><text x="47.1330%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.02%)</title><rect x="46.8830%" y="309" width="0.0212%" height="15" fill="rgb(229,121,46)" fg:x="2211" fg:w="1"/><text x="47.1330%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.02%)</title><rect x="46.8830%" y="293" width="0.0212%" height="15" fill="rgb(221,172,50)" fg:x="2211" fg:w="1"/><text x="47.1330%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.02%)</title><rect x="46.8830%" y="277" width="0.0212%" height="15" fill="rgb(216,42,52)" fg:x="2211" fg:w="1"/><text x="47.1330%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="46.8830%" y="261" width="0.0212%" height="15" fill="rgb(249,207,12)" fg:x="2211" fg:w="1"/><text x="47.1330%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="46.8830%" y="245" width="0.0212%" height="15" fill="rgb(224,194,14)" fg:x="2211" fg:w="1"/><text x="47.1330%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect x="46.8830%" y="229" width="0.0212%" height="15" fill="rgb(227,204,5)" fg:x="2211" fg:w="1"/><text x="47.1330%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="46.8830%" y="213" width="0.0212%" height="15" fill="rgb(231,114,21)" fg:x="2211" fg:w="1"/><text x="47.1330%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="46.8830%" y="197" width="0.0212%" height="15" fill="rgb(238,209,2)" fg:x="2211" fg:w="1"/><text x="47.1330%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="46.8830%" y="181" width="0.0212%" height="15" fill="rgb(253,135,41)" fg:x="2211" fg:w="1"/><text x="47.1330%" y="191.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="46.8830%" y="165" width="0.0212%" height="15" fill="rgb(206,112,53)" fg:x="2211" fg:w="1"/><text x="47.1330%" y="175.50"></text></g><g><title>tcache_get (1 samples, 0.02%)</title><rect x="46.8830%" y="149" width="0.0212%" height="15" fill="rgb(227,126,51)" fg:x="2211" fg:w="1"/><text x="47.1330%" y="159.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::push_group (2 samples, 0.04%)</title><rect x="46.8830%" y="421" width="0.0424%" height="15" fill="rgb(218,85,47)" fg:x="2211" fg:w="2"/><text x="47.1330%" y="431.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_group (2 samples, 0.04%)</title><rect x="46.8830%" y="405" width="0.0424%" height="15" fill="rgb(237,110,47)" fg:x="2211" fg:w="2"/><text x="47.1330%" y="415.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::bump_space (1 samples, 0.02%)</title><rect x="46.9042%" y="389" width="0.0212%" height="15" fill="rgb(215,154,20)" fg:x="2212" fg:w="1"/><text x="47.1542%" y="399.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::span (1 samples, 0.02%)</title><rect x="46.9254%" y="405" width="0.0212%" height="15" fill="rgb(249,58,28)" fg:x="2213" fg:w="1"/><text x="47.1754%" y="415.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::pos (1 samples, 0.02%)</title><rect x="46.9254%" y="389" width="0.0212%" height="15" fill="rgb(205,216,50)" fg:x="2213" fg:w="1"/><text x="47.1754%" y="399.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (1 samples, 0.02%)</title><rect x="46.9254%" y="373" width="0.0212%" height="15" fill="rgb(211,150,53)" fg:x="2213" fg:w="1"/><text x="47.1754%" y="383.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="46.9466%" y="261" width="0.0212%" height="15" fill="rgb(222,219,51)" fg:x="2214" fg:w="1"/><text x="47.1966%" y="271.50"></text></g><g><title>checked_request2size (1 samples, 0.02%)</title><rect x="46.9466%" y="245" width="0.0212%" height="15" fill="rgb(236,198,42)" fg:x="2214" fg:w="1"/><text x="47.1966%" y="255.50"></text></g><g><title>regex_syntax::ast::Ast::concat (3 samples, 0.06%)</title><rect x="46.9466%" y="373" width="0.0636%" height="15" fill="rgb(251,13,11)" fg:x="2214" fg:w="3"/><text x="47.1966%" y="383.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (3 samples, 0.06%)</title><rect x="46.9466%" y="357" width="0.0636%" height="15" fill="rgb(209,114,30)" fg:x="2214" fg:w="3"/><text x="47.1966%" y="367.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.06%)</title><rect x="46.9466%" y="341" width="0.0636%" height="15" fill="rgb(248,129,10)" fg:x="2214" fg:w="3"/><text x="47.1966%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.06%)</title><rect x="46.9466%" y="325" width="0.0636%" height="15" fill="rgb(231,114,21)" fg:x="2214" fg:w="3"/><text x="47.1966%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.06%)</title><rect x="46.9466%" y="309" width="0.0636%" height="15" fill="rgb(238,209,2)" fg:x="2214" fg:w="3"/><text x="47.1966%" y="319.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.06%)</title><rect x="46.9466%" y="293" width="0.0636%" height="15" fill="rgb(253,135,41)" fg:x="2214" fg:w="3"/><text x="47.1966%" y="303.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.06%)</title><rect x="46.9466%" y="277" width="0.0636%" height="15" fill="rgb(206,112,53)" fg:x="2214" fg:w="3"/><text x="47.1966%" y="287.50"></text></g><g><title>regex_syntax::ast::Concat::into_ast (5 samples, 0.11%)</title><rect x="46.9466%" y="389" width="0.1060%" height="15" fill="rgb(210,199,15)" fg:x="2214" fg:w="5"/><text x="47.1966%" y="399.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::push_or_add_alternation (6 samples, 0.13%)</title><rect x="46.9466%" y="405" width="0.1272%" height="15" fill="rgb(210,56,29)" fg:x="2214" fg:w="6"/><text x="47.1966%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="47.0526%" y="389" width="0.0212%" height="15" fill="rgb(241,229,15)" fg:x="2219" fg:w="1"/><text x="47.3026%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="47.0526%" y="373" width="0.0212%" height="15" fill="rgb(254,103,39)" fg:x="2219" fg:w="1"/><text x="47.3026%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="47.0526%" y="357" width="0.0212%" height="15" fill="rgb(254,53,35)" fg:x="2219" fg:w="1"/><text x="47.3026%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="47.0526%" y="341" width="0.0212%" height="15" fill="rgb(237,133,22)" fg:x="2219" fg:w="1"/><text x="47.3026%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="47.0526%" y="325" width="0.0212%" height="15" fill="rgb(237,156,49)" fg:x="2219" fg:w="1"/><text x="47.3026%" y="335.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="47.0526%" y="309" width="0.0212%" height="15" fill="rgb(214,150,36)" fg:x="2219" fg:w="1"/><text x="47.3026%" y="319.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="47.0526%" y="293" width="0.0212%" height="15" fill="rgb(254,47,34)" fg:x="2219" fg:w="1"/><text x="47.3026%" y="303.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.02%)</title><rect x="47.0526%" y="277" width="0.0212%" height="15" fill="rgb(254,73,4)" fg:x="2219" fg:w="1"/><text x="47.3026%" y="287.50"></text></g><g><title>_int_realloc (1 samples, 0.02%)</title><rect x="47.0526%" y="261" width="0.0212%" height="15" fill="rgb(231,75,41)" fg:x="2219" fg:w="1"/><text x="47.3026%" y="271.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="47.0526%" y="245" width="0.0212%" height="15" fill="rgb(221,113,48)" fg:x="2219" fg:w="1"/><text x="47.3026%" y="255.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::bump (1 samples, 0.02%)</title><rect x="47.0738%" y="405" width="0.0212%" height="15" fill="rgb(207,165,29)" fg:x="2220" fg:w="1"/><text x="47.3238%" y="415.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::char (1 samples, 0.02%)</title><rect x="47.0738%" y="389" width="0.0212%" height="15" fill="rgb(206,73,47)" fg:x="2220" fg:w="1"/><text x="47.3238%" y="399.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::push_alternate (9 samples, 0.19%)</title><rect x="46.9254%" y="421" width="0.1908%" height="15" fill="rgb(224,168,6)" fg:x="2213" fg:w="9"/><text x="47.1754%" y="431.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::char (1 samples, 0.02%)</title><rect x="47.1162%" y="373" width="0.0212%" height="15" fill="rgb(206,73,47)" fg:x="2222" fg:w="1"/><text x="47.3662%" y="383.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::char_at (1 samples, 0.02%)</title><rect x="47.1162%" y="357" width="0.0212%" height="15" fill="rgb(220,224,36)" fg:x="2222" fg:w="1"/><text x="47.3662%" y="367.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (1 samples, 0.02%)</title><rect x="47.1162%" y="341" width="0.0212%" height="15" fill="rgb(248,180,43)" fg:x="2222" fg:w="1"/><text x="47.3662%" y="351.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (1 samples, 0.02%)</title><rect x="47.1162%" y="325" width="0.0212%" height="15" fill="rgb(235,73,17)" fg:x="2222" fg:w="1"/><text x="47.3662%" y="335.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (1 samples, 0.02%)</title><rect x="47.1162%" y="309" width="0.0212%" height="15" fill="rgb(227,45,20)" fg:x="2222" fg:w="1"/><text x="47.3662%" y="319.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_set_class_open (2 samples, 0.04%)</title><rect x="47.1162%" y="389" width="0.0424%" height="15" fill="rgb(208,128,52)" fg:x="2222" fg:w="2"/><text x="47.3662%" y="399.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::bump_and_bump_space (1 samples, 0.02%)</title><rect x="47.1374%" y="373" width="0.0212%" height="15" fill="rgb(215,129,12)" fg:x="2223" fg:w="1"/><text x="47.3874%" y="383.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::bump (1 samples, 0.02%)</title><rect x="47.1374%" y="357" width="0.0212%" height="15" fill="rgb(207,165,29)" fg:x="2223" fg:w="1"/><text x="47.3874%" y="367.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::char (1 samples, 0.02%)</title><rect x="47.1374%" y="341" width="0.0212%" height="15" fill="rgb(206,73,47)" fg:x="2223" fg:w="1"/><text x="47.3874%" y="351.50"></text></g><g><title>malloc_consolidate (1 samples, 0.02%)</title><rect x="47.1586%" y="293" width="0.0212%" height="15" fill="rgb(228,194,39)" fg:x="2224" fg:w="1"/><text x="47.4086%" y="303.50"></text></g><g><title>unlink_chunk (1 samples, 0.02%)</title><rect x="47.1586%" y="277" width="0.0212%" height="15" fill="rgb(223,20,30)" fg:x="2224" fg:w="1"/><text x="47.4086%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.04%)</title><rect x="47.1586%" y="389" width="0.0424%" height="15" fill="rgb(241,229,15)" fg:x="2224" fg:w="2"/><text x="47.4086%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.04%)</title><rect x="47.1586%" y="373" width="0.0424%" height="15" fill="rgb(254,103,39)" fg:x="2224" fg:w="2"/><text x="47.4086%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.04%)</title><rect x="47.1586%" y="357" width="0.0424%" height="15" fill="rgb(254,53,35)" fg:x="2224" fg:w="2"/><text x="47.4086%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.04%)</title><rect x="47.1586%" y="341" width="0.0424%" height="15" fill="rgb(237,133,22)" fg:x="2224" fg:w="2"/><text x="47.4086%" y="351.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.04%)</title><rect x="47.1586%" y="325" width="0.0424%" height="15" fill="rgb(206,112,53)" fg:x="2224" fg:w="2"/><text x="47.4086%" y="335.50"></text></g><g><title>_int_malloc (2 samples, 0.04%)</title><rect x="47.1586%" y="309" width="0.0424%" height="15" fill="rgb(222,219,51)" fg:x="2224" fg:w="2"/><text x="47.4086%" y="319.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::push_class_open (5 samples, 0.11%)</title><rect x="47.1162%" y="405" width="0.1060%" height="15" fill="rgb(208,186,32)" fg:x="2222" fg:w="5"/><text x="47.3662%" y="415.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.02%)</title><rect x="47.2010%" y="389" width="0.0212%" height="15" fill="rgb(217,126,36)" fg:x="2226" fg:w="1"/><text x="47.4510%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="47.2222%" y="373" width="0.0212%" height="15" fill="rgb(241,229,15)" fg:x="2227" fg:w="1"/><text x="47.4722%" y="383.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="47.2222%" y="357" width="0.0212%" height="15" fill="rgb(209,143,44)" fg:x="2227" fg:w="1"/><text x="47.4722%" y="367.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.02%)</title><rect x="47.2222%" y="341" width="0.0212%" height="15" fill="rgb(217,126,36)" fg:x="2227" fg:w="1"/><text x="47.4722%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (1 samples, 0.02%)</title><rect x="47.2434%" y="373" width="0.0212%" height="15" fill="rgb(216,0,40)" fg:x="2228" fg:w="1"/><text x="47.4934%" y="383.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::pop_class_op (4 samples, 0.08%)</title><rect x="47.2222%" y="389" width="0.0848%" height="15" fill="rgb(232,83,15)" fg:x="2227" fg:w="4"/><text x="47.4722%" y="399.50"></text></g><g><title>__memmove_avx512_unaligned_erms (2 samples, 0.04%)</title><rect x="47.2646%" y="373" width="0.0424%" height="15" fill="rgb(217,126,36)" fg:x="2229" fg:w="2"/><text x="47.5146%" y="383.50"></text></g><g><title>regex_syntax::ast::ClassSetUnion::into_item (1 samples, 0.02%)</title><rect x="47.3070%" y="389" width="0.0212%" height="15" fill="rgb(244,151,49)" fg:x="2231" fg:w="1"/><text x="47.5570%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.02%)</title><rect x="47.3070%" y="373" width="0.0212%" height="15" fill="rgb(212,186,21)" fg:x="2231" fg:w="1"/><text x="47.5570%" y="383.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.02%)</title><rect x="47.3070%" y="357" width="0.0212%" height="15" fill="rgb(217,126,36)" fg:x="2231" fg:w="1"/><text x="47.5570%" y="367.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::pop_class (6 samples, 0.13%)</title><rect x="47.2222%" y="405" width="0.1272%" height="15" fill="rgb(251,70,0)" fg:x="2227" fg:w="6"/><text x="47.4722%" y="415.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="47.3282%" y="389" width="0.0212%" height="15" fill="rgb(209,114,30)" fg:x="2232" fg:w="1"/><text x="47.5782%" y="399.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.02%)</title><rect x="47.3282%" y="373" width="0.0212%" height="15" fill="rgb(248,129,10)" fg:x="2232" fg:w="1"/><text x="47.5782%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="47.3282%" y="357" width="0.0212%" height="15" fill="rgb(231,114,21)" fg:x="2232" fg:w="1"/><text x="47.5782%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="47.3282%" y="341" width="0.0212%" height="15" fill="rgb(238,209,2)" fg:x="2232" fg:w="1"/><text x="47.5782%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="47.3282%" y="325" width="0.0212%" height="15" fill="rgb(253,135,41)" fg:x="2232" fg:w="1"/><text x="47.5782%" y="335.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="47.3282%" y="309" width="0.0212%" height="15" fill="rgb(206,112,53)" fg:x="2232" fg:w="1"/><text x="47.5782%" y="319.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="47.3282%" y="293" width="0.0212%" height="15" fill="rgb(222,219,51)" fg:x="2232" fg:w="1"/><text x="47.5782%" y="303.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::bump_if (1 samples, 0.02%)</title><rect x="47.3494%" y="389" width="0.0212%" height="15" fill="rgb(214,139,24)" fg:x="2233" fg:w="1"/><text x="47.5994%" y="399.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::count (1 samples, 0.02%)</title><rect x="47.3494%" y="373" width="0.0212%" height="15" fill="rgb(245,90,13)" fg:x="2233" fg:w="1"/><text x="47.5994%" y="383.50"></text></g><g><title>core::str::count::count_chars (1 samples, 0.02%)</title><rect x="47.3494%" y="357" width="0.0212%" height="15" fill="rgb(224,30,38)" fg:x="2233" fg:w="1"/><text x="47.5994%" y="367.50"></text></g><g><title>core::str::count::char_count_general_case (1 samples, 0.02%)</title><rect x="47.3494%" y="341" width="0.0212%" height="15" fill="rgb(245,107,41)" fg:x="2233" fg:w="1"/><text x="47.5994%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (1 samples, 0.02%)</title><rect x="47.3494%" y="325" width="0.0212%" height="15" fill="rgb(249,96,12)" fg:x="2233" fg:w="1"/><text x="47.5994%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.02%)</title><rect x="47.3494%" y="309" width="0.0212%" height="15" fill="rgb(223,184,13)" fg:x="2233" fg:w="1"/><text x="47.5994%" y="319.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.02%)</title><rect x="47.3494%" y="293" width="0.0212%" height="15" fill="rgb(218,75,1)" fg:x="2233" fg:w="1"/><text x="47.5994%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="47.3494%" y="277" width="0.0212%" height="15" fill="rgb(242,69,50)" fg:x="2233" fg:w="1"/><text x="47.5994%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.02%)</title><rect x="47.3494%" y="261" width="0.0212%" height="15" fill="rgb(214,12,39)" fg:x="2233" fg:w="1"/><text x="47.5994%" y="271.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="47.3494%" y="245" width="0.0212%" height="15" fill="rgb(236,210,2)" fg:x="2233" fg:w="1"/><text x="47.5994%" y="255.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::maybe_parse_ascii_class (2 samples, 0.04%)</title><rect x="47.3494%" y="405" width="0.0424%" height="15" fill="rgb(215,29,15)" fg:x="2233" fg:w="2"/><text x="47.5994%" y="415.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (1 samples, 0.02%)</title><rect x="47.3707%" y="389" width="0.0212%" height="15" fill="rgb(248,180,43)" fg:x="2234" fg:w="1"/><text x="47.6207%" y="399.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::index (1 samples, 0.02%)</title><rect x="47.3707%" y="373" width="0.0212%" height="15" fill="rgb(227,13,28)" fg:x="2234" fg:w="1"/><text x="47.6207%" y="383.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get (1 samples, 0.02%)</title><rect x="47.3707%" y="357" width="0.0212%" height="15" fill="rgb(246,210,26)" fg:x="2234" fg:w="1"/><text x="47.6207%" y="367.50"></text></g><g><title>regex_syntax::ast::ClassSetUnion::push (1 samples, 0.02%)</title><rect x="47.3919%" y="405" width="0.0212%" height="15" fill="rgb(213,104,13)" fg:x="2235" fg:w="1"/><text x="47.6419%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="47.3919%" y="389" width="0.0212%" height="15" fill="rgb(241,229,15)" fg:x="2235" fg:w="1"/><text x="47.6419%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="47.3919%" y="373" width="0.0212%" height="15" fill="rgb(254,103,39)" fg:x="2235" fg:w="1"/><text x="47.6419%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="47.3919%" y="357" width="0.0212%" height="15" fill="rgb(254,53,35)" fg:x="2235" fg:w="1"/><text x="47.6419%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="47.3919%" y="341" width="0.0212%" height="15" fill="rgb(237,133,22)" fg:x="2235" fg:w="1"/><text x="47.6419%" y="351.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="47.3919%" y="325" width="0.0212%" height="15" fill="rgb(243,191,43)" fg:x="2235" fg:w="1"/><text x="47.6419%" y="335.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="47.4131%" y="405" width="0.0212%" height="15" fill="rgb(245,132,34)" fg:x="2236" fg:w="1"/><text x="47.6631%" y="415.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.02%)</title><rect x="47.4131%" y="389" width="0.0212%" height="15" fill="rgb(217,126,36)" fg:x="2236" fg:w="1"/><text x="47.6631%" y="399.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_set_class (16 samples, 0.34%)</title><rect x="47.1162%" y="421" width="0.3393%" height="15" fill="rgb(248,118,21)" fg:x="2222" fg:w="16"/><text x="47.3662%" y="431.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::pos (1 samples, 0.02%)</title><rect x="47.4555%" y="389" width="0.0212%" height="15" fill="rgb(205,216,50)" fg:x="2238" fg:w="1"/><text x="47.7055%" y="399.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (1 samples, 0.02%)</title><rect x="47.4555%" y="373" width="0.0212%" height="15" fill="rgb(211,150,53)" fg:x="2238" fg:w="1"/><text x="47.7055%" y="383.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::span_char (2 samples, 0.04%)</title><rect x="47.4555%" y="405" width="0.0424%" height="15" fill="rgb(247,162,9)" fg:x="2238" fg:w="2"/><text x="47.7055%" y="415.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::char (1 samples, 0.02%)</title><rect x="47.4767%" y="389" width="0.0212%" height="15" fill="rgb(206,73,47)" fg:x="2239" fg:w="1"/><text x="47.7267%" y="399.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::bump (2 samples, 0.04%)</title><rect x="47.4979%" y="405" width="0.0424%" height="15" fill="rgb(207,165,29)" fg:x="2240" fg:w="2"/><text x="47.7479%" y="415.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::char (2 samples, 0.04%)</title><rect x="47.4979%" y="389" width="0.0424%" height="15" fill="rgb(206,73,47)" fg:x="2240" fg:w="2"/><text x="47.7479%" y="399.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::char_at (2 samples, 0.04%)</title><rect x="47.4979%" y="373" width="0.0424%" height="15" fill="rgb(220,224,36)" fg:x="2240" fg:w="2"/><text x="47.7479%" y="383.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (2 samples, 0.04%)</title><rect x="47.4979%" y="357" width="0.0424%" height="15" fill="rgb(248,180,43)" fg:x="2240" fg:w="2"/><text x="47.7479%" y="367.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (2 samples, 0.04%)</title><rect x="47.4979%" y="341" width="0.0424%" height="15" fill="rgb(235,73,17)" fg:x="2240" fg:w="2"/><text x="47.7479%" y="351.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (2 samples, 0.04%)</title><rect x="47.4979%" y="325" width="0.0424%" height="15" fill="rgb(227,45,20)" fg:x="2240" fg:w="2"/><text x="47.7479%" y="335.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_primitive (9 samples, 0.19%)</title><rect x="47.4555%" y="421" width="0.1908%" height="15" fill="rgb(214,58,42)" fg:x="2238" fg:w="9"/><text x="47.7055%" y="431.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::bump_space (1 samples, 0.02%)</title><rect x="47.6463%" y="421" width="0.0212%" height="15" fill="rgb(215,154,20)" fg:x="2247" fg:w="1"/><text x="47.8963%" y="431.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.02%)</title><rect x="47.6675%" y="357" width="0.0212%" height="15" fill="rgb(206,149,53)" fg:x="2248" fg:w="1"/><text x="47.9175%" y="367.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="47.6887%" y="357" width="0.0212%" height="15" fill="rgb(243,191,43)" fg:x="2249" fg:w="1"/><text x="47.9387%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.06%)</title><rect x="47.6675%" y="421" width="0.0636%" height="15" fill="rgb(241,229,15)" fg:x="2248" fg:w="3"/><text x="47.9175%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.06%)</title><rect x="47.6675%" y="405" width="0.0636%" height="15" fill="rgb(254,103,39)" fg:x="2248" fg:w="3"/><text x="47.9175%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.06%)</title><rect x="47.6675%" y="389" width="0.0636%" height="15" fill="rgb(254,53,35)" fg:x="2248" fg:w="3"/><text x="47.9175%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.06%)</title><rect x="47.6675%" y="373" width="0.0636%" height="15" fill="rgb(237,133,22)" fg:x="2248" fg:w="3"/><text x="47.9175%" y="383.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="47.7099%" y="357" width="0.0212%" height="15" fill="rgb(206,112,53)" fg:x="2250" fg:w="1"/><text x="47.9599%" y="367.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="47.7099%" y="341" width="0.0212%" height="15" fill="rgb(222,219,51)" fg:x="2250" fg:w="1"/><text x="47.9599%" y="351.50"></text></g><g><title>tcache_put (1 samples, 0.02%)</title><rect x="47.7099%" y="325" width="0.0212%" height="15" fill="rgb(227,177,28)" fg:x="2250" fg:w="1"/><text x="47.9599%" y="335.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (6 samples, 0.13%)</title><rect x="47.7311%" y="421" width="0.1272%" height="15" fill="rgb(245,132,34)" fg:x="2251" fg:w="6"/><text x="47.9811%" y="431.50"></text></g><g><title>regex_syntax::ast::parse::Parser::parse (58 samples, 1.23%)</title><rect x="46.6497%" y="469" width="1.2299%" height="15" fill="rgb(225,142,35)" fg:x="2200" fg:w="58"/><text x="46.8997%" y="479.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse (58 samples, 1.23%)</title><rect x="46.6497%" y="453" width="1.2299%" height="15" fill="rgb(254,60,41)" fg:x="2200" fg:w="58"/><text x="46.8997%" y="463.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_with_comments (58 samples, 1.23%)</title><rect x="46.6497%" y="437" width="1.2299%" height="15" fill="rgb(223,9,23)" fg:x="2200" fg:w="58"/><text x="46.8997%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::ast::parse::Parser&gt; (1 samples, 0.02%)</title><rect x="47.8796%" y="469" width="0.0212%" height="15" fill="rgb(243,97,31)" fg:x="2258" fg:w="1"/><text x="48.1296%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;regex_syntax::ast::parse::ClassState&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="47.8796%" y="453" width="0.0212%" height="15" fill="rgb(238,97,37)" fg:x="2258" fg:w="1"/><text x="48.1296%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;regex_syntax::ast::parse::ClassState&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="47.8796%" y="437" width="0.0212%" height="15" fill="rgb(211,52,39)" fg:x="2258" fg:w="1"/><text x="48.1296%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_syntax::ast::parse::ClassState&gt;&gt; (1 samples, 0.02%)</title><rect x="47.8796%" y="421" width="0.0212%" height="15" fill="rgb(248,119,24)" fg:x="2258" fg:w="1"/><text x="48.1296%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;regex_syntax::ast::parse::ClassState&gt;&gt; (1 samples, 0.02%)</title><rect x="47.8796%" y="405" width="0.0212%" height="15" fill="rgb(249,129,7)" fg:x="2258" fg:w="1"/><text x="48.1296%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="47.8796%" y="389" width="0.0212%" height="15" fill="rgb(213,128,22)" fg:x="2258" fg:w="1"/><text x="48.1296%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="47.8796%" y="373" width="0.0212%" height="15" fill="rgb(238,77,31)" fg:x="2258" fg:w="1"/><text x="48.1296%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="47.8796%" y="357" width="0.0212%" height="15" fill="rgb(227,15,28)" fg:x="2258" fg:w="1"/><text x="48.1296%" y="367.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="47.8796%" y="341" width="0.0212%" height="15" fill="rgb(247,8,17)" fg:x="2258" fg:w="1"/><text x="48.1296%" y="351.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="47.8796%" y="325" width="0.0212%" height="15" fill="rgb(221,113,48)" fg:x="2258" fg:w="1"/><text x="48.1296%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::hir::Hir&gt; (4 samples, 0.08%)</title><rect x="47.9008%" y="389" width="0.0848%" height="15" fill="rgb(244,216,7)" fg:x="2259" fg:w="4"/><text x="48.1508%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::hir::Properties&gt; (4 samples, 0.08%)</title><rect x="47.9008%" y="373" width="0.0848%" height="15" fill="rgb(249,111,12)" fg:x="2259" fg:w="4"/><text x="48.1508%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;regex_syntax::hir::PropertiesI&gt;&gt; (4 samples, 0.08%)</title><rect x="47.9008%" y="357" width="0.0848%" height="15" fill="rgb(237,14,7)" fg:x="2259" fg:w="4"/><text x="48.1508%" y="367.50"></text></g><g><title>alloc::alloc::box_free (4 samples, 0.08%)</title><rect x="47.9008%" y="341" width="0.0848%" height="15" fill="rgb(241,6,19)" fg:x="2259" fg:w="4"/><text x="48.1508%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.08%)</title><rect x="47.9008%" y="325" width="0.0848%" height="15" fill="rgb(238,77,31)" fg:x="2259" fg:w="4"/><text x="48.1508%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.08%)</title><rect x="47.9008%" y="309" width="0.0848%" height="15" fill="rgb(227,15,28)" fg:x="2259" fg:w="4"/><text x="48.1508%" y="319.50"></text></g><g><title>__GI___libc_free (4 samples, 0.08%)</title><rect x="47.9008%" y="293" width="0.0848%" height="15" fill="rgb(247,8,17)" fg:x="2259" fg:w="4"/><text x="48.1508%" y="303.50"></text></g><g><title>_int_free (4 samples, 0.08%)</title><rect x="47.9008%" y="277" width="0.0848%" height="15" fill="rgb(221,113,48)" fg:x="2259" fg:w="4"/><text x="48.1508%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_syntax::hir::Hir&gt;&gt; (1 samples, 0.02%)</title><rect x="47.9856%" y="389" width="0.0212%" height="15" fill="rgb(206,118,12)" fg:x="2263" fg:w="1"/><text x="48.2356%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;regex_syntax::hir::Hir&gt;&gt; (1 samples, 0.02%)</title><rect x="47.9856%" y="373" width="0.0212%" height="15" fill="rgb(244,42,48)" fg:x="2263" fg:w="1"/><text x="48.2356%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="47.9856%" y="357" width="0.0212%" height="15" fill="rgb(213,128,22)" fg:x="2263" fg:w="1"/><text x="48.2356%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="47.9856%" y="341" width="0.0212%" height="15" fill="rgb(238,77,31)" fg:x="2263" fg:w="1"/><text x="48.2356%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="47.9856%" y="325" width="0.0212%" height="15" fill="rgb(227,15,28)" fg:x="2263" fg:w="1"/><text x="48.2356%" y="335.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="47.9856%" y="309" width="0.0212%" height="15" fill="rgb(247,8,17)" fg:x="2263" fg:w="1"/><text x="48.2356%" y="319.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="47.9856%" y="293" width="0.0212%" height="15" fill="rgb(221,113,48)" fg:x="2263" fg:w="1"/><text x="48.2356%" y="303.50"></text></g><g><title>malloc_consolidate (1 samples, 0.02%)</title><rect x="47.9856%" y="277" width="0.0212%" height="15" fill="rgb(228,194,39)" fg:x="2263" fg:w="1"/><text x="48.2356%" y="287.50"></text></g><g><title>unlink_chunk (1 samples, 0.02%)</title><rect x="47.9856%" y="261" width="0.0212%" height="15" fill="rgb(223,20,30)" fg:x="2263" fg:w="1"/><text x="48.2356%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.02%)</title><rect x="48.0068%" y="389" width="0.0212%" height="15" fill="rgb(205,186,49)" fg:x="2264" fg:w="1"/><text x="48.2568%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="48.0068%" y="373" width="0.0212%" height="15" fill="rgb(232,211,42)" fg:x="2264" fg:w="1"/><text x="48.2568%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.02%)</title><rect x="48.0068%" y="357" width="0.0212%" height="15" fill="rgb(214,146,48)" fg:x="2264" fg:w="1"/><text x="48.2568%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="48.0068%" y="341" width="0.0212%" height="15" fill="rgb(212,159,3)" fg:x="2264" fg:w="1"/><text x="48.2568%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="48.0068%" y="325" width="0.0212%" height="15" fill="rgb(231,142,39)" fg:x="2264" fg:w="1"/><text x="48.2568%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="48.0068%" y="309" width="0.0212%" height="15" fill="rgb(249,2,22)" fg:x="2264" fg:w="1"/><text x="48.2568%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="48.0068%" y="293" width="0.0212%" height="15" fill="rgb(254,53,35)" fg:x="2264" fg:w="1"/><text x="48.2568%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="48.0068%" y="277" width="0.0212%" height="15" fill="rgb(237,133,22)" fg:x="2264" fg:w="1"/><text x="48.2568%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="48.0068%" y="261" width="0.0212%" height="15" fill="rgb(237,156,49)" fg:x="2264" fg:w="1"/><text x="48.2568%" y="271.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="48.0068%" y="245" width="0.0212%" height="15" fill="rgb(214,150,36)" fg:x="2264" fg:w="1"/><text x="48.2568%" y="255.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="48.0068%" y="229" width="0.0212%" height="15" fill="rgb(254,47,34)" fg:x="2264" fg:w="1"/><text x="48.2568%" y="239.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.02%)</title><rect x="48.0068%" y="213" width="0.0212%" height="15" fill="rgb(254,73,4)" fg:x="2264" fg:w="1"/><text x="48.2568%" y="223.50"></text></g><g><title>_int_realloc (1 samples, 0.02%)</title><rect x="48.0068%" y="197" width="0.0212%" height="15" fill="rgb(231,75,41)" fg:x="2264" fg:w="1"/><text x="48.2568%" y="207.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="48.0068%" y="181" width="0.0212%" height="15" fill="rgb(222,219,51)" fg:x="2264" fg:w="1"/><text x="48.2568%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_syntax::hir::Hir&gt;&gt; (7 samples, 0.15%)</title><rect x="47.9008%" y="469" width="0.1484%" height="15" fill="rgb(206,118,12)" fg:x="2259" fg:w="7"/><text x="48.1508%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.15%)</title><rect x="47.9008%" y="453" width="0.1484%" height="15" fill="rgb(249,14,2)" fg:x="2259" fg:w="7"/><text x="48.1508%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;[regex_syntax::hir::Hir]&gt; (7 samples, 0.15%)</title><rect x="47.9008%" y="437" width="0.1484%" height="15" fill="rgb(240,58,42)" fg:x="2259" fg:w="7"/><text x="48.1508%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::hir::Hir&gt; (7 samples, 0.15%)</title><rect x="47.9008%" y="421" width="0.1484%" height="15" fill="rgb(244,216,7)" fg:x="2259" fg:w="7"/><text x="48.1508%" y="431.50"></text></g><g><title>&lt;regex_syntax::hir::Hir as core::ops::drop::Drop&gt;::drop (7 samples, 0.15%)</title><rect x="47.9008%" y="405" width="0.1484%" height="15" fill="rgb(251,195,49)" fg:x="2259" fg:w="7"/><text x="48.1508%" y="415.50"></text></g><g><title>__GI___libc_free (3 samples, 0.06%)</title><rect x="48.0492%" y="373" width="0.0636%" height="15" fill="rgb(247,8,17)" fg:x="2266" fg:w="3"/><text x="48.2992%" y="383.50"></text></g><g><title>_int_free (3 samples, 0.06%)</title><rect x="48.0492%" y="357" width="0.0636%" height="15" fill="rgb(221,113,48)" fg:x="2266" fg:w="3"/><text x="48.2992%" y="367.50"></text></g><g><title>&lt;regex_syntax::ast::Ast as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="48.1128%" y="373" width="0.0424%" height="15" fill="rgb(238,18,15)" fg:x="2269" fg:w="2"/><text x="48.3628%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::ast::Ast&gt; (6 samples, 0.13%)</title><rect x="48.0492%" y="389" width="0.1272%" height="15" fill="rgb(216,180,24)" fg:x="2266" fg:w="6"/><text x="48.2992%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="48.1764%" y="325" width="0.0212%" height="15" fill="rgb(241,229,15)" fg:x="2272" fg:w="1"/><text x="48.4264%" y="335.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="48.1764%" y="309" width="0.0212%" height="15" fill="rgb(209,143,44)" fg:x="2272" fg:w="1"/><text x="48.4264%" y="319.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.02%)</title><rect x="48.1764%" y="293" width="0.0212%" height="15" fill="rgb(217,126,36)" fg:x="2272" fg:w="1"/><text x="48.4264%" y="303.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.02%)</title><rect x="48.1976%" y="325" width="0.0212%" height="15" fill="rgb(248,129,10)" fg:x="2273" fg:w="1"/><text x="48.4476%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="48.1976%" y="309" width="0.0212%" height="15" fill="rgb(231,114,21)" fg:x="2273" fg:w="1"/><text x="48.4476%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="48.1976%" y="293" width="0.0212%" height="15" fill="rgb(238,209,2)" fg:x="2273" fg:w="1"/><text x="48.4476%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="48.1976%" y="277" width="0.0212%" height="15" fill="rgb(253,135,41)" fg:x="2273" fg:w="1"/><text x="48.4476%" y="287.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="48.1976%" y="261" width="0.0212%" height="15" fill="rgb(206,112,53)" fg:x="2273" fg:w="1"/><text x="48.4476%" y="271.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="48.1976%" y="245" width="0.0212%" height="15" fill="rgb(222,219,51)" fg:x="2273" fg:w="1"/><text x="48.4476%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.02%)</title><rect x="48.2188%" y="277" width="0.0212%" height="15" fill="rgb(245,181,4)" fg:x="2274" fg:w="1"/><text x="48.4688%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="48.2188%" y="261" width="0.0212%" height="15" fill="rgb(242,69,50)" fg:x="2274" fg:w="1"/><text x="48.4688%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.02%)</title><rect x="48.2188%" y="245" width="0.0212%" height="15" fill="rgb(214,12,39)" fg:x="2274" fg:w="1"/><text x="48.4688%" y="255.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.02%)</title><rect x="48.2188%" y="229" width="0.0212%" height="15" fill="rgb(253,112,1)" fg:x="2274" fg:w="1"/><text x="48.4688%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.02%)</title><rect x="48.2188%" y="213" width="0.0212%" height="15" fill="rgb(245,36,31)" fg:x="2274" fg:w="1"/><text x="48.4688%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::{{closure}} (1 samples, 0.02%)</title><rect x="48.2188%" y="197" width="0.0212%" height="15" fill="rgb(221,227,48)" fg:x="2274" fg:w="1"/><text x="48.4688%" y="207.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="48.2188%" y="181" width="0.0212%" height="15" fill="rgb(209,143,44)" fg:x="2274" fg:w="1"/><text x="48.4688%" y="191.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.02%)</title><rect x="48.2188%" y="165" width="0.0212%" height="15" fill="rgb(217,126,36)" fg:x="2274" fg:w="1"/><text x="48.4688%" y="175.50"></text></g><g><title>unlink_chunk (2 samples, 0.04%)</title><rect x="48.2400%" y="85" width="0.0424%" height="15" fill="rgb(223,20,30)" fg:x="2275" fg:w="2"/><text x="48.4900%" y="95.50"></text></g><g><title>malloc_consolidate (4 samples, 0.08%)</title><rect x="48.2400%" y="101" width="0.0848%" height="15" fill="rgb(228,194,39)" fg:x="2275" fg:w="4"/><text x="48.4900%" y="111.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;regex_syntax::ast::ClassBracketed&gt;&gt; (12 samples, 0.25%)</title><rect x="48.1764%" y="389" width="0.2545%" height="15" fill="rgb(216,49,34)" fg:x="2272" fg:w="12"/><text x="48.4264%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::ast::ClassBracketed&gt; (12 samples, 0.25%)</title><rect x="48.1764%" y="373" width="0.2545%" height="15" fill="rgb(233,178,20)" fg:x="2272" fg:w="12"/><text x="48.4264%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::ast::ClassSet&gt; (12 samples, 0.25%)</title><rect x="48.1764%" y="357" width="0.2545%" height="15" fill="rgb(218,161,37)" fg:x="2272" fg:w="12"/><text x="48.4264%" y="367.50"></text></g><g><title>&lt;regex_syntax::ast::ClassSet as core::ops::drop::Drop&gt;::drop (12 samples, 0.25%)</title><rect x="48.1764%" y="341" width="0.2545%" height="15" fill="rgb(227,212,36)" fg:x="2272" fg:w="12"/><text x="48.4264%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (10 samples, 0.21%)</title><rect x="48.2188%" y="325" width="0.2120%" height="15" fill="rgb(205,186,49)" fg:x="2274" fg:w="10"/><text x="48.4688%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (10 samples, 0.21%)</title><rect x="48.2188%" y="309" width="0.2120%" height="15" fill="rgb(232,211,42)" fg:x="2274" fg:w="10"/><text x="48.4688%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (10 samples, 0.21%)</title><rect x="48.2188%" y="293" width="0.2120%" height="15" fill="rgb(214,146,48)" fg:x="2274" fg:w="10"/><text x="48.4688%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (9 samples, 0.19%)</title><rect x="48.2400%" y="277" width="0.1908%" height="15" fill="rgb(212,159,3)" fg:x="2275" fg:w="9"/><text x="48.4900%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.19%)</title><rect x="48.2400%" y="261" width="0.1908%" height="15" fill="rgb(231,142,39)" fg:x="2275" fg:w="9"/><text x="48.4900%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.19%)</title><rect x="48.2400%" y="245" width="0.1908%" height="15" fill="rgb(249,2,22)" fg:x="2275" fg:w="9"/><text x="48.4900%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (9 samples, 0.19%)</title><rect x="48.2400%" y="229" width="0.1908%" height="15" fill="rgb(254,53,35)" fg:x="2275" fg:w="9"/><text x="48.4900%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.19%)</title><rect x="48.2400%" y="213" width="0.1908%" height="15" fill="rgb(237,133,22)" fg:x="2275" fg:w="9"/><text x="48.4900%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (9 samples, 0.19%)</title><rect x="48.2400%" y="197" width="0.1908%" height="15" fill="rgb(237,156,49)" fg:x="2275" fg:w="9"/><text x="48.4900%" y="207.50"></text></g><g><title>alloc::alloc::Global::grow_impl (9 samples, 0.19%)</title><rect x="48.2400%" y="181" width="0.1908%" height="15" fill="rgb(214,150,36)" fg:x="2275" fg:w="9"/><text x="48.4900%" y="191.50"></text></g><g><title>alloc::alloc::realloc (9 samples, 0.19%)</title><rect x="48.2400%" y="165" width="0.1908%" height="15" fill="rgb(254,47,34)" fg:x="2275" fg:w="9"/><text x="48.4900%" y="175.50"></text></g><g><title>__GI___libc_realloc (9 samples, 0.19%)</title><rect x="48.2400%" y="149" width="0.1908%" height="15" fill="rgb(254,73,4)" fg:x="2275" fg:w="9"/><text x="48.4900%" y="159.50"></text></g><g><title>_int_realloc (9 samples, 0.19%)</title><rect x="48.2400%" y="133" width="0.1908%" height="15" fill="rgb(231,75,41)" fg:x="2275" fg:w="9"/><text x="48.4900%" y="143.50"></text></g><g><title>_int_malloc (9 samples, 0.19%)</title><rect x="48.2400%" y="117" width="0.1908%" height="15" fill="rgb(222,219,51)" fg:x="2275" fg:w="9"/><text x="48.4900%" y="127.50"></text></g><g><title>_int_free (7 samples, 0.15%)</title><rect x="48.4309%" y="373" width="0.1484%" height="15" fill="rgb(221,113,48)" fg:x="2284" fg:w="7"/><text x="48.6809%" y="383.50"></text></g><g><title>__GI___libc_free (8 samples, 0.17%)</title><rect x="48.4309%" y="389" width="0.1696%" height="15" fill="rgb(247,8,17)" fg:x="2284" fg:w="8"/><text x="48.6809%" y="399.50"></text></g><g><title>&lt;regex_syntax::ast::Ast as core::ops::drop::Drop&gt;::drop::{{closure}} (1 samples, 0.02%)</title><rect x="48.6005%" y="389" width="0.0212%" height="15" fill="rgb(247,83,50)" fg:x="2292" fg:w="1"/><text x="48.8505%" y="399.50"></text></g><g><title>regex_syntax::ast::Ast::empty (1 samples, 0.02%)</title><rect x="48.6005%" y="373" width="0.0212%" height="15" fill="rgb(233,124,28)" fg:x="2292" fg:w="1"/><text x="48.8505%" y="383.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="48.6005%" y="357" width="0.0212%" height="15" fill="rgb(209,114,30)" fg:x="2292" fg:w="1"/><text x="48.8505%" y="367.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.02%)</title><rect x="48.6005%" y="341" width="0.0212%" height="15" fill="rgb(248,129,10)" fg:x="2292" fg:w="1"/><text x="48.8505%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="48.6005%" y="325" width="0.0212%" height="15" fill="rgb(231,114,21)" fg:x="2292" fg:w="1"/><text x="48.8505%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="48.6005%" y="309" width="0.0212%" height="15" fill="rgb(238,209,2)" fg:x="2292" fg:w="1"/><text x="48.8505%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="48.6005%" y="293" width="0.0212%" height="15" fill="rgb(253,135,41)" fg:x="2292" fg:w="1"/><text x="48.8505%" y="303.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="48.6005%" y="277" width="0.0212%" height="15" fill="rgb(206,112,53)" fg:x="2292" fg:w="1"/><text x="48.8505%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.02%)</title><rect x="48.6217%" y="357" width="0.0212%" height="15" fill="rgb(214,146,48)" fg:x="2293" fg:w="1"/><text x="48.8717%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.02%)</title><rect x="48.6217%" y="341" width="0.0212%" height="15" fill="rgb(245,181,4)" fg:x="2293" fg:w="1"/><text x="48.8717%" y="351.50"></text></g><g><title>regex::builders::bytes::RegexBuilder::build (164 samples, 3.48%)</title><rect x="45.1866%" y="533" width="3.4775%" height="15" fill="rgb(236,76,51)" fg:x="2131" fg:w="164"/><text x="45.4366%" y="543.50">reg..</text></g><g><title>regex::builders::Builder::build_one_bytes (164 samples, 3.48%)</title><rect x="45.1866%" y="517" width="3.4775%" height="15" fill="rgb(233,102,7)" fg:x="2131" fg:w="164"/><text x="45.4366%" y="527.50">reg..</text></g><g><title>regex_automata::meta::regex::Builder::build (162 samples, 3.44%)</title><rect x="45.2290%" y="501" width="3.4351%" height="15" fill="rgb(212,33,22)" fg:x="2133" fg:w="162"/><text x="45.4790%" y="511.50">reg..</text></g><g><title>regex_automata::meta::regex::Builder::build_many (162 samples, 3.44%)</title><rect x="45.2290%" y="485" width="3.4351%" height="15" fill="rgb(236,25,32)" fg:x="2133" fg:w="162"/><text x="45.4790%" y="495.50">reg..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_syntax::ast::Ast&gt;&gt; (29 samples, 0.61%)</title><rect x="48.0492%" y="469" width="0.6149%" height="15" fill="rgb(234,216,45)" fg:x="2266" fg:w="29"/><text x="48.2992%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.61%)</title><rect x="48.0492%" y="453" width="0.6149%" height="15" fill="rgb(249,14,2)" fg:x="2266" fg:w="29"/><text x="48.2992%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;[regex_syntax::ast::Ast]&gt; (29 samples, 0.61%)</title><rect x="48.0492%" y="437" width="0.6149%" height="15" fill="rgb(216,112,18)" fg:x="2266" fg:w="29"/><text x="48.2992%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::ast::Ast&gt; (29 samples, 0.61%)</title><rect x="48.0492%" y="421" width="0.6149%" height="15" fill="rgb(216,180,24)" fg:x="2266" fg:w="29"/><text x="48.2992%" y="431.50"></text></g><g><title>&lt;regex_syntax::ast::Ast as core::ops::drop::Drop&gt;::drop (29 samples, 0.61%)</title><rect x="48.0492%" y="405" width="0.6149%" height="15" fill="rgb(238,18,15)" fg:x="2266" fg:w="29"/><text x="48.2992%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2 samples, 0.04%)</title><rect x="48.6217%" y="389" width="0.0424%" height="15" fill="rgb(205,186,49)" fg:x="2293" fg:w="2"/><text x="48.8717%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.04%)</title><rect x="48.6217%" y="373" width="0.0424%" height="15" fill="rgb(232,211,42)" fg:x="2293" fg:w="2"/><text x="48.8717%" y="383.50"></text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::blockzero_analysis_syslines (190 samples, 4.03%)</title><rect x="44.6565%" y="805" width="4.0288%" height="15" fill="rgb(208,15,47)" fg:x="2106" fg:w="190"/><text x="44.9065%" y="815.50">s4li..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_sysline_in_block (190 samples, 4.03%)</title><rect x="44.6565%" y="789" width="4.0288%" height="15" fill="rgb(243,65,52)" fg:x="2106" fg:w="190"/><text x="44.9065%" y="799.50">s4li..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_sysline_in_block_year (190 samples, 4.03%)</title><rect x="44.6565%" y="773" width="4.0288%" height="15" fill="rgb(253,177,51)" fg:x="2106" fg:w="190"/><text x="44.9065%" y="783.50">s4li..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::parse_datetime_in_line_cached (190 samples, 4.03%)</title><rect x="44.6565%" y="757" width="4.0288%" height="15" fill="rgb(231,75,50)" fg:x="2106" fg:w="190"/><text x="44.9065%" y="767.50">s4li..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::parse_datetime_in_line (190 samples, 4.03%)</title><rect x="44.6565%" y="741" width="4.0288%" height="15" fill="rgb(234,54,15)" fg:x="2106" fg:w="190"/><text x="44.9065%" y="751.50">s4li..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_datetime_in_line (190 samples, 4.03%)</title><rect x="44.6565%" y="725" width="4.0288%" height="15" fill="rgb(212,53,9)" fg:x="2106" fg:w="190"/><text x="44.9065%" y="735.50">s4li..</text></g><g><title>s4lib::data::datetime::bytes_to_regex_to_datetime (190 samples, 4.03%)</title><rect x="44.6565%" y="709" width="4.0288%" height="15" fill="rgb(252,84,36)" fg:x="2106" fg:w="190"/><text x="44.9065%" y="719.50">s4li..</text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref (166 samples, 3.52%)</title><rect x="45.1654%" y="693" width="3.5199%" height="15" fill="rgb(217,15,43)" fg:x="2130" fg:w="166"/><text x="45.4154%" y="703.50">&lt;s4..</text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref::__stability (166 samples, 3.52%)</title><rect x="45.1654%" y="677" width="3.5199%" height="15" fill="rgb(239,165,48)" fg:x="2130" fg:w="166"/><text x="45.4154%" y="687.50">&lt;s4..</text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (166 samples, 3.52%)</title><rect x="45.1654%" y="661" width="3.5199%" height="15" fill="rgb(235,175,8)" fg:x="2130" fg:w="166"/><text x="45.4154%" y="671.50">laz..</text></g><g><title>std::sync::once::Once::call_once (166 samples, 3.52%)</title><rect x="45.1654%" y="645" width="3.5199%" height="15" fill="rgb(247,17,47)" fg:x="2130" fg:w="166"/><text x="45.4154%" y="655.50">std..</text></g><g><title>std::sys_common::once::futex::Once::call (166 samples, 3.52%)</title><rect x="45.1654%" y="629" width="3.5199%" height="15" fill="rgb(246,168,49)" fg:x="2130" fg:w="166"/><text x="45.4154%" y="639.50">std..</text></g><g><title>std::sync::once::Once::call_once::{{closure}} (166 samples, 3.52%)</title><rect x="45.1654%" y="613" width="3.5199%" height="15" fill="rgb(237,63,35)" fg:x="2130" fg:w="166"/><text x="45.4154%" y="623.50">std..</text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}} (166 samples, 3.52%)</title><rect x="45.1654%" y="597" width="3.5199%" height="15" fill="rgb(238,7,51)" fg:x="2130" fg:w="166"/><text x="45.4154%" y="607.50">laz..</text></g><g><title>core::ops::function::FnOnce::call_once (166 samples, 3.52%)</title><rect x="45.1654%" y="581" width="3.5199%" height="15" fill="rgb(210,80,10)" fg:x="2130" fg:w="166"/><text x="45.4154%" y="591.50">cor..</text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref::__static_ref_initialize (166 samples, 3.52%)</title><rect x="45.1654%" y="565" width="3.5199%" height="15" fill="rgb(205,24,29)" fg:x="2130" fg:w="166"/><text x="45.4154%" y="575.50">&lt;s4..</text></g><g><title>regex::regex::bytes::Regex::new (166 samples, 3.52%)</title><rect x="45.1654%" y="549" width="3.5199%" height="15" fill="rgb(246,224,25)" fg:x="2130" fg:w="166"/><text x="45.4154%" y="559.50">reg..</text></g><g><title>core::ptr::drop_in_place&lt;regex::builders::bytes::RegexBuilder&gt; (1 samples, 0.02%)</title><rect x="48.6641%" y="533" width="0.0212%" height="15" fill="rgb(230,157,28)" fg:x="2295" fg:w="1"/><text x="48.9141%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex::builders::Builder&gt; (1 samples, 0.02%)</title><rect x="48.6641%" y="517" width="0.0212%" height="15" fill="rgb(221,229,11)" fg:x="2295" fg:w="1"/><text x="48.9141%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (1 samples, 0.02%)</title><rect x="48.6641%" y="501" width="0.0212%" height="15" fill="rgb(251,147,36)" fg:x="2295" fg:w="1"/><text x="48.9141%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="48.6641%" y="485" width="0.0212%" height="15" fill="rgb(249,14,2)" fg:x="2295" fg:w="1"/><text x="48.9141%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (1 samples, 0.02%)</title><rect x="48.6641%" y="469" width="0.0212%" height="15" fill="rgb(252,61,44)" fg:x="2295" fg:w="1"/><text x="48.9141%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.02%)</title><rect x="48.6641%" y="453" width="0.0212%" height="15" fill="rgb(209,164,15)" fg:x="2295" fg:w="1"/><text x="48.9141%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="48.6641%" y="437" width="0.0212%" height="15" fill="rgb(248,33,49)" fg:x="2295" fg:w="1"/><text x="48.9141%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="48.6641%" y="421" width="0.0212%" height="15" fill="rgb(208,40,33)" fg:x="2295" fg:w="1"/><text x="48.9141%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="48.6641%" y="405" width="0.0212%" height="15" fill="rgb(213,128,22)" fg:x="2295" fg:w="1"/><text x="48.9141%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="48.6641%" y="389" width="0.0212%" height="15" fill="rgb(238,77,31)" fg:x="2295" fg:w="1"/><text x="48.9141%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="48.6641%" y="373" width="0.0212%" height="15" fill="rgb(227,15,28)" fg:x="2295" fg:w="1"/><text x="48.9141%" y="383.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="48.6641%" y="357" width="0.0212%" height="15" fill="rgb(247,8,17)" fg:x="2295" fg:w="1"/><text x="48.9141%" y="367.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="48.6641%" y="341" width="0.0212%" height="15" fill="rgb(221,113,48)" fg:x="2295" fg:w="1"/><text x="48.9141%" y="351.50"></text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::process_stage1_blockzero_analysis (191 samples, 4.05%)</title><rect x="44.6565%" y="837" width="4.0500%" height="15" fill="rgb(214,107,3)" fg:x="2106" fg:w="191"/><text x="44.9065%" y="847.50">s4li..</text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::blockzero_analysis (191 samples, 4.05%)</title><rect x="44.6565%" y="821" width="4.0500%" height="15" fill="rgb(228,176,28)" fg:x="2106" fg:w="191"/><text x="44.9065%" y="831.50">s4li..</text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::blockzero_analysis_lines (1 samples, 0.02%)</title><rect x="48.6853%" y="805" width="0.0212%" height="15" fill="rgb(254,203,44)" fg:x="2296" fg:w="1"/><text x="48.9353%" y="815.50"></text></g><g><title>&lt;s4lib::readers::syslogprocessor::BLOCKZERO_ANALYSIS_LINE_COUNT_MIN_MAP as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="48.6853%" y="789" width="0.0212%" height="15" fill="rgb(238,138,17)" fg:x="2296" fg:w="1"/><text x="48.9353%" y="799.50"></text></g><g><title>&lt;s4lib::readers::syslogprocessor::BLOCKZERO_ANALYSIS_LINE_COUNT_MIN_MAP as core::ops::deref::Deref&gt;::deref::__stability (1 samples, 0.02%)</title><rect x="48.6853%" y="773" width="0.0212%" height="15" fill="rgb(213,153,3)" fg:x="2296" fg:w="1"/><text x="48.9353%" y="783.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (1 samples, 0.02%)</title><rect x="48.6853%" y="757" width="0.0212%" height="15" fill="rgb(235,175,8)" fg:x="2296" fg:w="1"/><text x="48.9353%" y="767.50"></text></g><g><title>std::sync::once::Once::call_once (1 samples, 0.02%)</title><rect x="48.6853%" y="741" width="0.0212%" height="15" fill="rgb(247,17,47)" fg:x="2296" fg:w="1"/><text x="48.9353%" y="751.50"></text></g><g><title>std::sys_common::once::futex::Once::call (1 samples, 0.02%)</title><rect x="48.6853%" y="725" width="0.0212%" height="15" fill="rgb(246,168,49)" fg:x="2296" fg:w="1"/><text x="48.9353%" y="735.50"></text></g><g><title>std::sync::once::Once::call_once::{{closure}} (1 samples, 0.02%)</title><rect x="48.6853%" y="709" width="0.0212%" height="15" fill="rgb(237,63,35)" fg:x="2296" fg:w="1"/><text x="48.9353%" y="719.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}} (1 samples, 0.02%)</title><rect x="48.6853%" y="693" width="0.0212%" height="15" fill="rgb(238,7,51)" fg:x="2296" fg:w="1"/><text x="48.9353%" y="703.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.02%)</title><rect x="48.6853%" y="677" width="0.0212%" height="15" fill="rgb(210,80,10)" fg:x="2296" fg:w="1"/><text x="48.9353%" y="687.50"></text></g><g><title>&lt;s4lib::readers::syslogprocessor::BLOCKZERO_ANALYSIS_LINE_COUNT_MIN_MAP as core::ops::deref::Deref&gt;::deref::__static_ref_initialize (1 samples, 0.02%)</title><rect x="48.6853%" y="661" width="0.0212%" height="15" fill="rgb(233,158,15)" fg:x="2296" fg:w="1"/><text x="48.9353%" y="671.50"></text></g><g><title>rangemap::map::RangeMap&lt;K,V&gt;::insert (1 samples, 0.02%)</title><rect x="48.6853%" y="645" width="0.0212%" height="15" fill="rgb(216,177,54)" fg:x="2296" fg:w="1"/><text x="48.9353%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect x="48.6853%" y="629" width="0.0212%" height="15" fill="rgb(213,87,31)" fg:x="2296" fg:w="1"/><text x="48.9353%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect x="48.6853%" y="613" width="0.0212%" height="15" fill="rgb(217,123,23)" fg:x="2296" fg:w="1"/><text x="48.9353%" y="623.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.02%)</title><rect x="48.6853%" y="597" width="0.0212%" height="15" fill="rgb(231,80,37)" fg:x="2296" fg:w="1"/><text x="48.9353%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="48.6853%" y="581" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="2296" fg:w="1"/><text x="48.9353%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="48.6853%" y="565" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="2296" fg:w="1"/><text x="48.9353%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="48.6853%" y="549" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="2296" fg:w="1"/><text x="48.9353%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="48.6853%" y="533" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="2296" fg:w="1"/><text x="48.9353%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="48.6853%" y="517" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="2296" fg:w="1"/><text x="48.9353%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="48.6853%" y="501" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="2296" fg:w="1"/><text x="48.9353%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="48.6853%" y="485" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="2296" fg:w="1"/><text x="48.9353%" y="495.50"></text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::new (1 samples, 0.02%)</title><rect x="48.7065%" y="837" width="0.0212%" height="15" fill="rgb(223,11,33)" fg:x="2297" fg:w="1"/><text x="48.9565%" y="847.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="48.7065%" y="821" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="2297" fg:w="1"/><text x="48.9565%" y="831.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::fileoffset_last (2 samples, 0.04%)</title><rect x="48.7277%" y="805" width="0.0424%" height="15" fill="rgb(205,180,41)" fg:x="2298" fg:w="2"/><text x="48.9777%" y="815.50"></text></g><g><title>s4lib::readers::linereader::LineReader::fileoffset_last (2 samples, 0.04%)</title><rect x="48.7277%" y="789" width="0.0424%" height="15" fill="rgb(209,48,38)" fg:x="2298" fg:w="2"/><text x="48.9777%" y="799.50"></text></g><g><title>s4lib::readers::blockreader::BlockReader::fileoffset_last (2 samples, 0.04%)</title><rect x="48.7277%" y="773" width="0.0424%" height="15" fill="rgb(235,150,22)" fg:x="2298" fg:w="2"/><text x="48.9777%" y="783.50"></text></g><g><title>s4lib::readers::blockreader::BlockReader::filesz (2 samples, 0.04%)</title><rect x="48.7277%" y="757" width="0.0424%" height="15" fill="rgb(228,225,28)" fg:x="2298" fg:w="2"/><text x="48.9777%" y="767.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::is_sysline_last (3 samples, 0.06%)</title><rect x="48.7277%" y="821" width="0.0636%" height="15" fill="rgb(220,0,42)" fg:x="2298" fg:w="3"/><text x="48.9777%" y="831.50"></text></g><g><title>s4lib::data::sysline::Sysline::fileoffset_end (1 samples, 0.02%)</title><rect x="48.7701%" y="805" width="0.0212%" height="15" fill="rgb(227,96,30)" fg:x="2300" fg:w="1"/><text x="49.0201%" y="815.50"></text></g><g><title>s4lib::data::line::Line::fileoffset_end (1 samples, 0.02%)</title><rect x="48.7701%" y="789" width="0.0212%" height="15" fill="rgb(250,37,25)" fg:x="2300" fg:w="1"/><text x="49.0201%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 0.02%)</title><rect x="48.7701%" y="773" width="0.0212%" height="15" fill="rgb(228,217,33)" fg:x="2300" fg:w="1"/><text x="49.0201%" y="783.50"></text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::is_sysline_last (4 samples, 0.08%)</title><rect x="48.7277%" y="837" width="0.0848%" height="15" fill="rgb(249,126,46)" fg:x="2298" fg:w="4"/><text x="48.9777%" y="847.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="48.7913%" y="821" width="0.0212%" height="15" fill="rgb(210,59,24)" fg:x="2301" fg:w="1"/><text x="49.0413%" y="831.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::inner (1 samples, 0.02%)</title><rect x="48.7913%" y="805" width="0.0212%" height="15" fill="rgb(232,202,24)" fg:x="2301" fg:w="1"/><text x="49.0413%" y="815.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.02%)</title><rect x="48.7913%" y="789" width="0.0212%" height="15" fill="rgb(221,185,31)" fg:x="2301" fg:w="1"/><text x="49.0413%" y="799.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::ezcheck_slice (1 samples, 0.02%)</title><rect x="48.8126%" y="709" width="0.0212%" height="15" fill="rgb(243,206,21)" fg:x="2302" fg:w="1"/><text x="49.0626%" y="719.50"></text></g><g><title>s4lib::data::line::LinePart::len (1 samples, 0.02%)</title><rect x="48.8338%" y="677" width="0.0212%" height="15" fill="rgb(222,137,3)" fg:x="2303" fg:w="1"/><text x="49.0838%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.02%)</title><rect x="48.8550%" y="677" width="0.0212%" height="15" fill="rgb(215,149,39)" fg:x="2304" fg:w="1"/><text x="49.1050%" y="687.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect x="48.8550%" y="661" width="0.0212%" height="15" fill="rgb(250,51,46)" fg:x="2304" fg:w="1"/><text x="49.1050%" y="671.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect x="48.8550%" y="645" width="0.0212%" height="15" fill="rgb(254,116,45)" fg:x="2304" fg:w="1"/><text x="49.1050%" y="655.50"></text></g><g><title>s4lib::data::line::Line::len (3 samples, 0.06%)</title><rect x="48.8338%" y="709" width="0.0636%" height="15" fill="rgb(213,111,4)" fg:x="2303" fg:w="3"/><text x="49.0838%" y="719.50"></text></g><g><title>s4lib::data::line::Line::fileoffset_end (3 samples, 0.06%)</title><rect x="48.8338%" y="693" width="0.0636%" height="15" fill="rgb(250,37,25)" fg:x="2303" fg:w="3"/><text x="49.0838%" y="703.50"></text></g><g><title>__rdl_alloc (1 samples, 0.02%)</title><rect x="48.8974%" y="597" width="0.0212%" height="15" fill="rgb(241,201,43)" fg:x="2306" fg:w="1"/><text x="49.1474%" y="607.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.02%)</title><rect x="48.8974%" y="581" width="0.0212%" height="15" fill="rgb(221,138,53)" fg:x="2306" fg:w="1"/><text x="49.1474%" y="591.50"></text></g><g><title>tcache_get (1 samples, 0.02%)</title><rect x="48.9186%" y="581" width="0.0212%" height="15" fill="rgb(227,126,51)" fg:x="2307" fg:w="1"/><text x="49.1686%" y="591.50"></text></g><g><title>checked_request2size (1 samples, 0.02%)</title><rect x="48.9398%" y="581" width="0.0212%" height="15" fill="rgb(236,198,42)" fg:x="2308" fg:w="1"/><text x="49.1898%" y="591.50"></text></g><g><title>arena_for_chunk (2 samples, 0.04%)</title><rect x="48.9610%" y="581" width="0.0424%" height="15" fill="rgb(234,26,42)" fg:x="2309" fg:w="2"/><text x="49.2110%" y="591.50"></text></g><g><title>arena_for_chunk (2 samples, 0.04%)</title><rect x="48.9610%" y="565" width="0.0424%" height="15" fill="rgb(234,26,42)" fg:x="2309" fg:w="2"/><text x="49.2110%" y="575.50"></text></g><g><title>heap_for_ptr (2 samples, 0.04%)</title><rect x="48.9610%" y="549" width="0.0424%" height="15" fill="rgb(232,140,25)" fg:x="2309" fg:w="2"/><text x="49.2110%" y="559.50"></text></g><g><title>tcache_put (2 samples, 0.04%)</title><rect x="49.0034%" y="565" width="0.0424%" height="15" fill="rgb(227,177,28)" fg:x="2311" fg:w="2"/><text x="49.2534%" y="575.50"></text></g><g><title>_int_malloc (14 samples, 0.30%)</title><rect x="49.0034%" y="581" width="0.2969%" height="15" fill="rgb(222,219,51)" fg:x="2311" fg:w="14"/><text x="49.2534%" y="591.50"></text></g><g><title>s4lib::data::line::LinePart::block_boxptr_ab (29 samples, 0.61%)</title><rect x="48.8974%" y="693" width="0.6149%" height="15" fill="rgb(217,228,51)" fg:x="2306" fg:w="29"/><text x="49.1474%" y="703.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (29 samples, 0.61%)</title><rect x="48.8974%" y="677" width="0.6149%" height="15" fill="rgb(209,114,30)" fg:x="2306" fg:w="29"/><text x="49.1474%" y="687.50"></text></g><g><title>alloc::alloc::exchange_malloc (29 samples, 0.61%)</title><rect x="48.8974%" y="661" width="0.6149%" height="15" fill="rgb(248,129,10)" fg:x="2306" fg:w="29"/><text x="49.1474%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (29 samples, 0.61%)</title><rect x="48.8974%" y="645" width="0.6149%" height="15" fill="rgb(231,114,21)" fg:x="2306" fg:w="29"/><text x="49.1474%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (29 samples, 0.61%)</title><rect x="48.8974%" y="629" width="0.6149%" height="15" fill="rgb(238,209,2)" fg:x="2306" fg:w="29"/><text x="49.1474%" y="639.50"></text></g><g><title>alloc::alloc::alloc (29 samples, 0.61%)</title><rect x="48.8974%" y="613" width="0.6149%" height="15" fill="rgb(253,135,41)" fg:x="2306" fg:w="29"/><text x="49.1474%" y="623.50"></text></g><g><title>__GI___libc_malloc (28 samples, 0.59%)</title><rect x="48.9186%" y="597" width="0.5937%" height="15" fill="rgb(206,112,53)" fg:x="2307" fg:w="28"/><text x="49.1686%" y="607.50"></text></g><g><title>s4lib::data::line::Line::len (1 samples, 0.02%)</title><rect x="49.5123%" y="693" width="0.0212%" height="15" fill="rgb(213,111,4)" fg:x="2335" fg:w="1"/><text x="49.7623%" y="703.50"></text></g><g><title>s4lib::data::line::Line::fileoffset_end (1 samples, 0.02%)</title><rect x="49.5123%" y="677" width="0.0212%" height="15" fill="rgb(250,37,25)" fg:x="2335" fg:w="1"/><text x="49.7623%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 0.02%)</title><rect x="49.5123%" y="661" width="0.0212%" height="15" fill="rgb(228,217,33)" fg:x="2335" fg:w="1"/><text x="49.7623%" y="671.50"></text></g><g><title>s4lib::data::line::Line::get_boxptrs (31 samples, 0.66%)</title><rect x="48.8974%" y="709" width="0.6573%" height="15" fill="rgb(211,81,2)" fg:x="2306" fg:w="31"/><text x="49.1474%" y="719.50"></text></g><g><title>s4lib::data::datetime::u8_to_str (18 samples, 0.38%)</title><rect x="49.5547%" y="693" width="0.3817%" height="15" fill="rgb(224,133,45)" fg:x="2337" fg:w="18"/><text x="49.8047%" y="703.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::is_ascii (18 samples, 0.38%)</title><rect x="49.5547%" y="677" width="0.3817%" height="15" fill="rgb(218,219,34)" fg:x="2337" fg:w="18"/><text x="49.8047%" y="687.50"></text></g><g><title>core::slice::ascii::is_ascii (18 samples, 0.38%)</title><rect x="49.5547%" y="661" width="0.3817%" height="15" fill="rgb(224,171,44)" fg:x="2337" fg:w="18"/><text x="49.8047%" y="671.50"></text></g><g><title>core::str::&lt;impl str&gt;::contains (1 samples, 0.02%)</title><rect x="49.9364%" y="661" width="0.0212%" height="15" fill="rgb(232,132,2)" fg:x="2355" fg:w="1"/><text x="50.1864%" y="671.50"></text></g><g><title>&lt;char as core::str::pattern::Pattern&gt;::is_contained_in (1 samples, 0.02%)</title><rect x="49.9364%" y="645" width="0.0212%" height="15" fill="rgb(230,108,31)" fg:x="2355" fg:w="1"/><text x="50.1864%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (1 samples, 0.02%)</title><rect x="49.9364%" y="629" width="0.0212%" height="15" fill="rgb(210,77,11)" fg:x="2355" fg:w="1"/><text x="50.1864%" y="639.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceContains&gt;::slice_contains (1 samples, 0.02%)</title><rect x="49.9364%" y="613" width="0.0212%" height="15" fill="rgb(214,173,33)" fg:x="2355" fg:w="1"/><text x="50.1864%" y="623.50"></text></g><g><title>core::slice::memchr::memchr (1 samples, 0.02%)</title><rect x="49.9364%" y="597" width="0.0212%" height="15" fill="rgb(217,73,38)" fg:x="2355" fg:w="1"/><text x="50.1864%" y="607.50"></text></g><g><title>core::slice::memchr::memchr_naive (1 samples, 0.02%)</title><rect x="49.9364%" y="581" width="0.0212%" height="15" fill="rgb(251,103,8)" fg:x="2355" fg:w="1"/><text x="50.1864%" y="591.50"></text></g><g><title>core::str::&lt;impl str&gt;::chars (1 samples, 0.02%)</title><rect x="49.9576%" y="661" width="0.0212%" height="15" fill="rgb(242,117,19)" fg:x="2356" fg:w="1"/><text x="50.2076%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.02%)</title><rect x="49.9576%" y="645" width="0.0212%" height="15" fill="rgb(237,71,22)" fg:x="2356" fg:w="1"/><text x="50.2076%" y="655.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="49.9576%" y="629" width="0.0212%" height="15" fill="rgb(246,6,40)" fg:x="2356" fg:w="1"/><text x="50.2076%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.02%)</title><rect x="49.9576%" y="613" width="0.0212%" height="15" fill="rgb(236,102,29)" fg:x="2356" fg:w="1"/><text x="50.2076%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.02%)</title><rect x="49.9576%" y="597" width="0.0212%" height="15" fill="rgb(233,185,1)" fg:x="2356" fg:w="1"/><text x="50.2076%" y="607.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="49.9788%" y="661" width="0.0212%" height="15" fill="rgb(242,166,4)" fg:x="2357" fg:w="1"/><text x="50.2288%" y="671.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.02%)</title><rect x="49.9788%" y="645" width="0.0212%" height="15" fill="rgb(245,139,50)" fg:x="2357" fg:w="1"/><text x="50.2288%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="50.0000%" y="661" width="0.0212%" height="15" fill="rgb(210,172,26)" fg:x="2358" fg:w="1"/><text x="50.2500%" y="671.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 0.02%)</title><rect x="50.0000%" y="645" width="0.0212%" height="15" fill="rgb(230,127,28)" fg:x="2358" fg:w="1"/><text x="50.2500%" y="655.50"></text></g><g><title>core::str::validations::next_code_point_reverse (1 samples, 0.02%)</title><rect x="50.0000%" y="629" width="0.0212%" height="15" fill="rgb(246,163,17)" fg:x="2358" fg:w="1"/><text x="50.2500%" y="639.50"></text></g><g><title>s4lib::data::datetime::datetime_from_str_workaround_Issue660 (7 samples, 0.15%)</title><rect x="49.9364%" y="677" width="0.1484%" height="15" fill="rgb(224,18,26)" fg:x="2355" fg:w="7"/><text x="50.1864%" y="687.50"></text></g><g><title>chrono::duration::Duration::num_seconds (1 samples, 0.02%)</title><rect x="50.0848%" y="549" width="0.0212%" height="15" fill="rgb(243,221,52)" fg:x="2362" fg:w="1"/><text x="50.3348%" y="559.50"></text></g><g><title>chrono::duration::Duration::num_nanoseconds (1 samples, 0.02%)</title><rect x="50.1060%" y="549" width="0.0212%" height="15" fill="rgb(222,34,22)" fg:x="2363" fg:w="1"/><text x="50.3560%" y="559.50"></text></g><g><title>chrono::duration::Duration::num_seconds (1 samples, 0.02%)</title><rect x="50.1060%" y="533" width="0.0212%" height="15" fill="rgb(243,221,52)" fg:x="2363" fg:w="1"/><text x="50.3560%" y="543.50"></text></g><g><title>chrono::naive::time::NaiveTime::overflowing_add_signed (3 samples, 0.06%)</title><rect x="50.0848%" y="565" width="0.0636%" height="15" fill="rgb(232,49,1)" fg:x="2362" fg:w="3"/><text x="50.3348%" y="575.50"></text></g><g><title>chrono::naive::date::NaiveDate::checked_add_signed (2 samples, 0.04%)</title><rect x="50.1484%" y="565" width="0.0424%" height="15" fill="rgb(246,229,39)" fg:x="2365" fg:w="2"/><text x="50.3984%" y="575.50"></text></g><g><title>chrono::naive::date::NaiveDate::add_days (2 samples, 0.04%)</title><rect x="50.1484%" y="549" width="0.0424%" height="15" fill="rgb(234,211,4)" fg:x="2365" fg:w="2"/><text x="50.3984%" y="559.50"></text></g><g><title>&lt;chrono::naive::datetime::NaiveDateTime as core::ops::arith::Add&lt;chrono::duration::Duration&gt;&gt;::add (32 samples, 0.68%)</title><rect x="50.0848%" y="597" width="0.6785%" height="15" fill="rgb(218,14,38)" fg:x="2362" fg:w="32"/><text x="50.3348%" y="607.50"></text></g><g><title>chrono::naive::datetime::NaiveDateTime::checked_add_signed (32 samples, 0.68%)</title><rect x="50.0848%" y="581" width="0.6785%" height="15" fill="rgb(230,97,7)" fg:x="2362" fg:w="32"/><text x="50.3348%" y="591.50"></text></g><g><title>chrono::offset::fixed::&lt;impl core::ops::arith::Sub&lt;chrono::offset::fixed::FixedOffset&gt; for chrono::naive::datetime::NaiveDateTime&gt;::sub (33 samples, 0.70%)</title><rect x="50.0848%" y="629" width="0.6997%" height="15" fill="rgb(253,9,6)" fg:x="2362" fg:w="33"/><text x="50.3348%" y="639.50"></text></g><g><title>chrono::offset::fixed::add_with_leapsecond (33 samples, 0.70%)</title><rect x="50.0848%" y="613" width="0.6997%" height="15" fill="rgb(232,33,4)" fg:x="2362" fg:w="33"/><text x="50.3348%" y="623.50"></text></g><g><title>&lt;chrono::naive::datetime::NaiveDateTime as chrono::traits::Timelike&gt;::with_nanosecond (1 samples, 0.02%)</title><rect x="50.7634%" y="597" width="0.0212%" height="15" fill="rgb(218,24,20)" fg:x="2394" fg:w="1"/><text x="51.0134%" y="607.50"></text></g><g><title>&lt;chrono::naive::time::NaiveTime as chrono::traits::Timelike&gt;::with_nanosecond (1 samples, 0.02%)</title><rect x="50.7634%" y="581" width="0.0212%" height="15" fill="rgb(205,1,26)" fg:x="2394" fg:w="1"/><text x="51.0134%" y="591.50"></text></g><g><title>chrono::offset::LocalResult&lt;T&gt;::map (34 samples, 0.72%)</title><rect x="50.0848%" y="661" width="0.7209%" height="15" fill="rgb(224,169,52)" fg:x="2362" fg:w="34"/><text x="50.3348%" y="671.50"></text></g><g><title>chrono::offset::TimeZone::from_local_datetime::{{closure}} (34 samples, 0.72%)</title><rect x="50.0848%" y="645" width="0.7209%" height="15" fill="rgb(212,118,1)" fg:x="2362" fg:w="34"/><text x="50.3348%" y="655.50"></text></g><g><title>&lt;chrono::offset::fixed::FixedOffset as chrono::offset::Offset&gt;::fix (1 samples, 0.02%)</title><rect x="50.7846%" y="629" width="0.0212%" height="15" fill="rgb(224,132,26)" fg:x="2395" fg:w="1"/><text x="51.0346%" y="639.50"></text></g><g><title>chrono::offset::TimeZone::from_local_datetime (35 samples, 0.74%)</title><rect x="50.0848%" y="677" width="0.7422%" height="15" fill="rgb(244,75,24)" fg:x="2362" fg:w="35"/><text x="50.3348%" y="687.50"></text></g><g><title>&lt;chrono::offset::fixed::FixedOffset as chrono::offset::TimeZone&gt;::offset_from_local_datetime (1 samples, 0.02%)</title><rect x="50.8058%" y="661" width="0.0212%" height="15" fill="rgb(205,66,21)" fg:x="2396" fg:w="1"/><text x="51.0558%" y="671.50"></text></g><g><title>chrono::offset::LocalResult&lt;T&gt;::earliest (6 samples, 0.13%)</title><rect x="50.8270%" y="677" width="0.1272%" height="15" fill="rgb(210,86,45)" fg:x="2397" fg:w="6"/><text x="51.0770%" y="687.50"></text></g><g><title>chrono::naive::datetime::NaiveDateTime::timestamp (2 samples, 0.04%)</title><rect x="50.9542%" y="645" width="0.0424%" height="15" fill="rgb(241,185,3)" fg:x="2403" fg:w="2"/><text x="51.2042%" y="655.50"></text></g><g><title>chrono::traits::Datelike::num_days_from_ce (2 samples, 0.04%)</title><rect x="50.9542%" y="629" width="0.0424%" height="15" fill="rgb(230,80,52)" fg:x="2403" fg:w="2"/><text x="51.2042%" y="639.50"></text></g><g><title>chrono::naive::date::NaiveDate::weeks_from (1 samples, 0.02%)</title><rect x="50.9966%" y="613" width="0.0212%" height="15" fill="rgb(233,46,40)" fg:x="2405" fg:w="1"/><text x="51.2466%" y="623.50"></text></g><g><title>chrono::naive::date::NaiveDate::weekday (1 samples, 0.02%)</title><rect x="50.9966%" y="597" width="0.0212%" height="15" fill="rgb(231,162,41)" fg:x="2405" fg:w="1"/><text x="51.2466%" y="607.50"></text></g><g><title>chrono::naive::internals::Of::weekday (1 samples, 0.02%)</title><rect x="50.9966%" y="581" width="0.0212%" height="15" fill="rgb(250,99,35)" fg:x="2405" fg:w="1"/><text x="51.2466%" y="591.50"></text></g><g><title>chrono::naive::internals::weekday_from_u32_mod7 (1 samples, 0.02%)</title><rect x="50.9966%" y="565" width="0.0212%" height="15" fill="rgb(224,180,3)" fg:x="2405" fg:w="1"/><text x="51.2466%" y="575.50"></text></g><g><title>chrono::naive::internals::YearFlags::nisoweeks (3 samples, 0.06%)</title><rect x="51.0178%" y="581" width="0.0636%" height="15" fill="rgb(215,94,5)" fg:x="2406" fg:w="3"/><text x="51.2678%" y="591.50"></text></g><g><title>chrono::naive::internals::YearFlags::from_year (1 samples, 0.02%)</title><rect x="51.0814%" y="581" width="0.0212%" height="15" fill="rgb(243,208,22)" fg:x="2409" fg:w="1"/><text x="51.3314%" y="591.50"></text></g><g><title>core::num::&lt;impl i32&gt;::rem_euclid (1 samples, 0.02%)</title><rect x="51.0814%" y="565" width="0.0212%" height="15" fill="rgb(242,32,7)" fg:x="2409" fg:w="1"/><text x="51.3314%" y="575.50"></text></g><g><title>&lt;chrono::naive::date::NaiveDate as chrono::traits::Datelike&gt;::iso_week (5 samples, 0.11%)</title><rect x="51.0178%" y="613" width="0.1060%" height="15" fill="rgb(246,203,8)" fg:x="2406" fg:w="5"/><text x="51.2678%" y="623.50"></text></g><g><title>chrono::naive::isoweek::iso_week_from_yof (5 samples, 0.11%)</title><rect x="51.0178%" y="597" width="0.1060%" height="15" fill="rgb(254,192,23)" fg:x="2406" fg:w="5"/><text x="51.2678%" y="607.50"></text></g><g><title>chrono::format::parsed::Parsed::to_naive_date (7 samples, 0.15%)</title><rect x="50.9966%" y="645" width="0.1484%" height="15" fill="rgb(229,218,38)" fg:x="2405" fg:w="7"/><text x="51.2466%" y="655.50"></text></g><g><title>chrono::format::parsed::Parsed::to_naive_date::{{closure}} (7 samples, 0.15%)</title><rect x="50.9966%" y="629" width="0.1484%" height="15" fill="rgb(236,92,8)" fg:x="2405" fg:w="7"/><text x="51.2466%" y="639.50"></text></g><g><title>chrono::format::parsed::Parsed::to_naive_datetime_with_offset (11 samples, 0.23%)</title><rect x="50.9542%" y="661" width="0.2332%" height="15" fill="rgb(248,123,23)" fg:x="2403" fg:w="11"/><text x="51.2042%" y="671.50"></text></g><g><title>chrono::format::parsed::Parsed::new (1 samples, 0.02%)</title><rect x="51.1874%" y="661" width="0.0212%" height="15" fill="rgb(226,19,23)" fg:x="2414" fg:w="1"/><text x="51.4374%" y="671.50"></text></g><g><title>&lt;chrono::format::parsed::Parsed as core::default::Default&gt;::default (1 samples, 0.02%)</title><rect x="51.1874%" y="645" width="0.0212%" height="15" fill="rgb(205,85,37)" fg:x="2414" fg:w="1"/><text x="51.4374%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_first (3 samples, 0.06%)</title><rect x="51.2087%" y="613" width="0.0636%" height="15" fill="rgb(206,202,51)" fg:x="2415" fg:w="3"/><text x="51.4587%" y="623.50"></text></g><g><title>chrono::format::strftime::StrftimeItems::parse_next_item (1 samples, 0.02%)</title><rect x="51.2723%" y="613" width="0.0212%" height="15" fill="rgb(237,67,12)" fg:x="2418" fg:w="1"/><text x="51.5223%" y="623.50"></text></g><g><title>&lt;chrono::format::strftime::StrftimeItems as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.17%)</title><rect x="51.2087%" y="629" width="0.1696%" height="15" fill="rgb(244,120,2)" fg:x="2415" fg:w="8"/><text x="51.4587%" y="639.50"></text></g><g><title>chrono::format::parse::parse_internal (100 samples, 2.12%)</title><rect x="51.2087%" y="645" width="2.1204%" height="15" fill="rgb(254,10,23)" fg:x="2415" fg:w="100"/><text x="51.4587%" y="655.50">c..</text></g><g><title>chrono::format::parse::parse (102 samples, 2.16%)</title><rect x="51.2087%" y="661" width="2.1628%" height="15" fill="rgb(248,184,2)" fg:x="2415" fg:w="102"/><text x="51.4587%" y="671.50">c..</text></g><g><title>s4lib::data::datetime::datetime_parse_from_str (163 samples, 3.46%)</title><rect x="49.9364%" y="693" width="3.4563%" height="15" fill="rgb(242,206,13)" fg:x="2355" fg:w="163"/><text x="50.1864%" y="703.50">s4l..</text></g><g><title>chrono::naive::datetime::NaiveDateTime::parse_from_str (115 samples, 2.44%)</title><rect x="50.9542%" y="677" width="2.4385%" height="15" fill="rgb(217,43,10)" fg:x="2403" fg:w="115"/><text x="51.2042%" y="687.50">ch..</text></g><g><title>regex::regex::bytes::Match::as_bytes (2 samples, 0.04%)</title><rect x="53.3927%" y="677" width="0.0424%" height="15" fill="rgb(213,42,20)" fg:x="2518" fg:w="2"/><text x="53.6427%" y="687.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.04%)</title><rect x="53.3927%" y="661" width="0.0424%" height="15" fill="rgb(250,51,46)" fg:x="2518" fg:w="2"/><text x="53.6427%" y="671.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.04%)</title><rect x="53.3927%" y="645" width="0.0424%" height="15" fill="rgb(242,192,3)" fg:x="2518" fg:w="2"/><text x="53.6427%" y="655.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.02%)</title><rect x="53.4351%" y="533" width="0.0212%" height="15" fill="rgb(254,20,38)" fg:x="2520" fg:w="1"/><text x="53.6851%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (13 samples, 0.28%)</title><rect x="53.4563%" y="533" width="0.2757%" height="15" fill="rgb(208,119,11)" fg:x="2521" fg:w="13"/><text x="53.7063%" y="543.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (13 samples, 0.28%)</title><rect x="53.4563%" y="517" width="0.2757%" height="15" fill="rgb(218,185,12)" fg:x="2521" fg:w="13"/><text x="53.7063%" y="527.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (13 samples, 0.28%)</title><rect x="53.4563%" y="501" width="0.2757%" height="15" fill="rgb(254,162,47)" fg:x="2521" fg:w="13"/><text x="53.7063%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (13 samples, 0.28%)</title><rect x="53.4563%" y="485" width="0.2757%" height="15" fill="rgb(242,44,7)" fg:x="2521" fg:w="13"/><text x="53.7063%" y="495.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (13 samples, 0.28%)</title><rect x="53.4563%" y="469" width="0.2757%" height="15" fill="rgb(216,62,21)" fg:x="2521" fg:w="13"/><text x="53.7063%" y="479.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (13 samples, 0.28%)</title><rect x="53.4563%" y="453" width="0.2757%" height="15" fill="rgb(221,225,42)" fg:x="2521" fg:w="13"/><text x="53.7063%" y="463.50"></text></g><g><title>__memcmp_evex_movbe (13 samples, 0.28%)</title><rect x="53.4563%" y="437" width="0.2757%" height="15" fill="rgb(253,103,40)" fg:x="2521" fg:w="13"/><text x="53.7063%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (15 samples, 0.32%)</title><rect x="53.4351%" y="581" width="0.3181%" height="15" fill="rgb(230,119,31)" fg:x="2520" fg:w="15"/><text x="53.6851%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (15 samples, 0.32%)</title><rect x="53.4351%" y="565" width="0.3181%" height="15" fill="rgb(252,63,32)" fg:x="2520" fg:w="15"/><text x="53.6851%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (15 samples, 0.32%)</title><rect x="53.4351%" y="549" width="0.3181%" height="15" fill="rgb(248,7,52)" fg:x="2520" fg:w="15"/><text x="53.6851%" y="559.50"></text></g><g><title>core::hash::sip::u8to64_le (6 samples, 0.13%)</title><rect x="53.7532%" y="437" width="0.1272%" height="15" fill="rgb(221,52,24)" fg:x="2535" fg:w="6"/><text x="54.0032%" y="447.50"></text></g><g><title>core::cmp::min (2 samples, 0.04%)</title><rect x="53.8804%" y="437" width="0.0424%" height="15" fill="rgb(235,43,0)" fg:x="2541" fg:w="2"/><text x="54.1304%" y="447.50"></text></g><g><title>core::cmp::Ord::min (2 samples, 0.04%)</title><rect x="53.8804%" y="421" width="0.0424%" height="15" fill="rgb(224,229,41)" fg:x="2541" fg:w="2"/><text x="54.1304%" y="431.50"></text></g><g><title>core::hash::Hasher::write_u8 (22 samples, 0.47%)</title><rect x="53.7532%" y="469" width="0.4665%" height="15" fill="rgb(226,117,6)" fg:x="2535" fg:w="22"/><text x="54.0032%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (22 samples, 0.47%)</title><rect x="53.7532%" y="453" width="0.4665%" height="15" fill="rgb(236,225,40)" fg:x="2535" fg:w="22"/><text x="54.0032%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.06%)</title><rect x="54.2197%" y="437" width="0.0636%" height="15" fill="rgb(214,20,35)" fg:x="2557" fg:w="3"/><text x="54.4697%" y="447.50"></text></g><g><title>core::hash::sip::u8to64_le (6 samples, 0.13%)</title><rect x="54.2197%" y="453" width="0.1272%" height="15" fill="rgb(221,52,24)" fg:x="2557" fg:w="6"/><text x="54.4697%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (19 samples, 0.40%)</title><rect x="54.2197%" y="469" width="0.4029%" height="15" fill="rgb(236,225,40)" fg:x="2557" fg:w="19"/><text x="54.4697%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (42 samples, 0.89%)</title><rect x="53.7532%" y="549" width="0.8906%" height="15" fill="rgb(212,33,36)" fg:x="2535" fg:w="42"/><text x="54.0032%" y="559.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (42 samples, 0.89%)</title><rect x="53.7532%" y="533" width="0.8906%" height="15" fill="rgb(250,187,26)" fg:x="2535" fg:w="42"/><text x="54.0032%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (42 samples, 0.89%)</title><rect x="53.7532%" y="517" width="0.8906%" height="15" fill="rgb(208,211,8)" fg:x="2535" fg:w="42"/><text x="54.0032%" y="527.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (42 samples, 0.89%)</title><rect x="53.7532%" y="501" width="0.8906%" height="15" fill="rgb(206,132,37)" fg:x="2535" fg:w="42"/><text x="54.0032%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (42 samples, 0.89%)</title><rect x="53.7532%" y="485" width="0.8906%" height="15" fill="rgb(243,187,24)" fg:x="2535" fg:w="42"/><text x="54.0032%" y="495.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (4 samples, 0.08%)</title><rect x="54.6438%" y="501" width="0.0848%" height="15" fill="rgb(243,151,10)" fg:x="2577" fg:w="4"/><text x="54.8938%" y="511.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (7 samples, 0.15%)</title><rect x="54.6438%" y="533" width="0.1484%" height="15" fill="rgb(236,55,46)" fg:x="2577" fg:w="7"/><text x="54.8938%" y="543.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (7 samples, 0.15%)</title><rect x="54.6438%" y="517" width="0.1484%" height="15" fill="rgb(245,60,19)" fg:x="2577" fg:w="7"/><text x="54.8938%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (9 samples, 0.19%)</title><rect x="54.6438%" y="549" width="0.1908%" height="15" fill="rgb(210,60,43)" fg:x="2577" fg:w="9"/><text x="54.8938%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.06%)</title><rect x="54.8346%" y="485" width="0.0636%" height="15" fill="rgb(233,55,45)" fg:x="2586" fg:w="3"/><text x="55.0846%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (18 samples, 0.38%)</title><rect x="54.8982%" y="485" width="0.3817%" height="15" fill="rgb(223,143,42)" fg:x="2589" fg:w="18"/><text x="55.1482%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (35 samples, 0.74%)</title><rect x="54.8346%" y="501" width="0.7422%" height="15" fill="rgb(215,158,9)" fg:x="2586" fg:w="35"/><text x="55.0846%" y="511.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.06%)</title><rect x="55.5768%" y="485" width="0.0636%" height="15" fill="rgb(223,143,42)" fg:x="2621" fg:w="3"/><text x="55.8268%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.11%)</title><rect x="55.5768%" y="501" width="0.1060%" height="15" fill="rgb(248,169,8)" fg:x="2621" fg:w="5"/><text x="55.8268%" y="511.50"></text></g><g><title>hashbrown::map::make_hash (126 samples, 2.67%)</title><rect x="53.7532%" y="581" width="2.6718%" height="15" fill="rgb(241,1,29)" fg:x="2535" fg:w="126"/><text x="54.0032%" y="591.50">ha..</text></g><g><title>core::hash::BuildHasher::hash_one (126 samples, 2.67%)</title><rect x="53.7532%" y="565" width="2.6718%" height="15" fill="rgb(222,198,6)" fg:x="2535" fg:w="126"/><text x="54.0032%" y="575.50">co..</text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (75 samples, 1.59%)</title><rect x="54.8346%" y="549" width="1.5903%" height="15" fill="rgb(218,214,24)" fg:x="2586" fg:w="75"/><text x="55.0846%" y="559.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (75 samples, 1.59%)</title><rect x="54.8346%" y="533" width="1.5903%" height="15" fill="rgb(230,187,21)" fg:x="2586" fg:w="75"/><text x="55.0846%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (75 samples, 1.59%)</title><rect x="54.8346%" y="517" width="1.5903%" height="15" fill="rgb(244,191,49)" fg:x="2586" fg:w="75"/><text x="55.0846%" y="527.50"></text></g><g><title>regex_automata::util::captures::GroupInfo::to_index (142 samples, 3.01%)</title><rect x="53.4351%" y="645" width="3.0110%" height="15" fill="rgb(250,225,43)" fg:x="2520" fg:w="142"/><text x="53.6851%" y="655.50">reg..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (142 samples, 3.01%)</title><rect x="53.4351%" y="629" width="3.0110%" height="15" fill="rgb(218,89,21)" fg:x="2520" fg:w="142"/><text x="53.6851%" y="639.50">std..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (142 samples, 3.01%)</title><rect x="53.4351%" y="613" width="3.0110%" height="15" fill="rgb(207,60,33)" fg:x="2520" fg:w="142"/><text x="53.6851%" y="623.50">has..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (142 samples, 3.01%)</title><rect x="53.4351%" y="597" width="3.0110%" height="15" fill="rgb(207,224,35)" fg:x="2520" fg:w="142"/><text x="53.6851%" y="607.50">has..</text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.02%)</title><rect x="56.4461%" y="629" width="0.0212%" height="15" fill="rgb(249,177,43)" fg:x="2662" fg:w="1"/><text x="56.6961%" y="639.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.02%)</title><rect x="56.4461%" y="613" width="0.0212%" height="15" fill="rgb(237,40,33)" fg:x="2662" fg:w="1"/><text x="56.6961%" y="623.50"></text></g><g><title>regex_automata::util::captures::Captures::get_group (4 samples, 0.08%)</title><rect x="56.4461%" y="645" width="0.0848%" height="15" fill="rgb(242,65,7)" fg:x="2662" fg:w="4"/><text x="56.6961%" y="655.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.04%)</title><rect x="56.5310%" y="645" width="0.0424%" height="15" fill="rgb(228,37,54)" fg:x="2666" fg:w="2"/><text x="56.7810%" y="655.50"></text></g><g><title>regex_automata::util::captures::Captures::get_group_by_name (158 samples, 3.35%)</title><rect x="53.4351%" y="661" width="3.3503%" height="15" fill="rgb(243,115,33)" fg:x="2520" fg:w="158"/><text x="53.6851%" y="671.50">reg..</text></g><g><title>core::option::Option&lt;T&gt;::map (6 samples, 0.13%)</title><rect x="56.7854%" y="661" width="0.1272%" height="15" fill="rgb(254,35,30)" fg:x="2678" fg:w="6"/><text x="57.0354%" y="671.50"></text></g><g><title>regex::regex::bytes::Captures::name (165 samples, 3.50%)</title><rect x="53.4351%" y="677" width="3.4987%" height="15" fill="rgb(227,58,29)" fg:x="2520" fg:w="165"/><text x="53.6851%" y="687.50">reg..</text></g><g><title>__memmove_avx512_unaligned_erms (7 samples, 0.15%)</title><rect x="56.9338%" y="645" width="0.1484%" height="15" fill="rgb(217,126,36)" fg:x="2685" fg:w="7"/><text x="57.1838%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (8 samples, 0.17%)</title><rect x="56.9338%" y="677" width="0.1696%" height="15" fill="rgb(218,193,48)" fg:x="2685" fg:w="8"/><text x="57.1838%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.17%)</title><rect x="56.9338%" y="661" width="0.1696%" height="15" fill="rgb(214,20,35)" fg:x="2685" fg:w="8"/><text x="57.1838%" y="671.50"></text></g><g><title>__memmove_avx512_unaligned_erms (4 samples, 0.08%)</title><rect x="57.1035%" y="677" width="0.0848%" height="15" fill="rgb(217,126,36)" fg:x="2693" fg:w="4"/><text x="57.3535%" y="687.50"></text></g><g><title>s4lib::data::datetime::captures_to_buffer_bytes (181 samples, 3.84%)</title><rect x="53.3927%" y="693" width="3.8380%" height="15" fill="rgb(241,188,28)" fg:x="2518" fg:w="181"/><text x="53.6427%" y="703.50">s4li..</text></g><g><title>regex_automata::util::captures::GroupInfo::slot_len (1 samples, 0.02%)</title><rect x="57.2307%" y="629" width="0.0212%" height="15" fill="rgb(209,192,18)" fg:x="2699" fg:w="1"/><text x="57.4807%" y="639.50"></text></g><g><title>regex_automata::util::captures::GroupInfoInner::small_slot_len (1 samples, 0.02%)</title><rect x="57.2307%" y="613" width="0.0212%" height="15" fill="rgb(250,151,21)" fg:x="2699" fg:w="1"/><text x="57.4807%" y="623.50"></text></g><g><title>__rdl_alloc (1 samples, 0.02%)</title><rect x="57.2519%" y="501" width="0.0212%" height="15" fill="rgb(241,201,43)" fg:x="2700" fg:w="1"/><text x="57.5019%" y="511.50"></text></g><g><title>tcache_get (9 samples, 0.19%)</title><rect x="57.2731%" y="485" width="0.1908%" height="15" fill="rgb(227,126,51)" fg:x="2701" fg:w="9"/><text x="57.5231%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.23%)</title><rect x="57.2519%" y="597" width="0.2332%" height="15" fill="rgb(249,207,12)" fg:x="2700" fg:w="11"/><text x="57.5019%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.23%)</title><rect x="57.2519%" y="581" width="0.2332%" height="15" fill="rgb(224,194,14)" fg:x="2700" fg:w="11"/><text x="57.5019%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.23%)</title><rect x="57.2519%" y="565" width="0.2332%" height="15" fill="rgb(227,204,5)" fg:x="2700" fg:w="11"/><text x="57.5019%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.23%)</title><rect x="57.2519%" y="549" width="0.2332%" height="15" fill="rgb(231,114,21)" fg:x="2700" fg:w="11"/><text x="57.5019%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.23%)</title><rect x="57.2519%" y="533" width="0.2332%" height="15" fill="rgb(238,209,2)" fg:x="2700" fg:w="11"/><text x="57.5019%" y="543.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.23%)</title><rect x="57.2519%" y="517" width="0.2332%" height="15" fill="rgb(253,135,41)" fg:x="2700" fg:w="11"/><text x="57.5019%" y="527.50"></text></g><g><title>__GI___libc_malloc (10 samples, 0.21%)</title><rect x="57.2731%" y="501" width="0.2120%" height="15" fill="rgb(206,112,53)" fg:x="2701" fg:w="10"/><text x="57.5231%" y="511.50"></text></g><g><title>regex_automata::util::captures::Captures::all (17 samples, 0.36%)</title><rect x="57.2307%" y="645" width="0.3605%" height="15" fill="rgb(237,153,33)" fg:x="2699" fg:w="17"/><text x="57.4807%" y="655.50"></text></g><g><title>alloc::vec::from_elem (16 samples, 0.34%)</title><rect x="57.2519%" y="629" width="0.3393%" height="15" fill="rgb(208,109,54)" fg:x="2700" fg:w="16"/><text x="57.5019%" y="639.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (16 samples, 0.34%)</title><rect x="57.2519%" y="613" width="0.3393%" height="15" fill="rgb(228,177,24)" fg:x="2700" fg:w="16"/><text x="57.5019%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (5 samples, 0.11%)</title><rect x="57.4852%" y="597" width="0.1060%" height="15" fill="rgb(216,52,5)" fg:x="2711" fg:w="5"/><text x="57.7352%" y="607.50"></text></g><g><title>core::ptr::write (5 samples, 0.11%)</title><rect x="57.4852%" y="581" width="0.1060%" height="15" fill="rgb(209,143,44)" fg:x="2711" fg:w="5"/><text x="57.7352%" y="591.50"></text></g><g><title>__memset_avx512_unaligned_erms (5 samples, 0.11%)</title><rect x="57.4852%" y="565" width="0.1060%" height="15" fill="rgb(240,145,53)" fg:x="2711" fg:w="5"/><text x="57.7352%" y="575.50"></text></g><g><title>&lt;regex_automata::meta::strategy::Core as regex_automata::meta::strategy::Strategy&gt;::group_info (1 samples, 0.02%)</title><rect x="57.5912%" y="629" width="0.0212%" height="15" fill="rgb(210,54,31)" fg:x="2716" fg:w="1"/><text x="57.8412%" y="639.50"></text></g><g><title>regex_automata::meta::regex::Regex::group_info (2 samples, 0.04%)</title><rect x="57.5912%" y="645" width="0.0424%" height="15" fill="rgb(248,217,14)" fg:x="2716" fg:w="2"/><text x="57.8412%" y="655.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="57.6124%" y="629" width="0.0212%" height="15" fill="rgb(210,59,24)" fg:x="2717" fg:w="1"/><text x="57.8624%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.02%)</title><rect x="57.6336%" y="613" width="0.0212%" height="15" fill="rgb(205,16,17)" fg:x="2718" fg:w="1"/><text x="57.8836%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.02%)</title><rect x="57.6336%" y="597" width="0.0212%" height="15" fill="rgb(233,140,51)" fg:x="2718" fg:w="1"/><text x="57.8836%" y="607.50"></text></g><g><title>&lt;regex_automata::util::captures::GroupInfo as core::clone::Clone&gt;::clone (8 samples, 0.17%)</title><rect x="57.6336%" y="645" width="0.1696%" height="15" fill="rgb(248,35,12)" fg:x="2718" fg:w="8"/><text x="57.8836%" y="655.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (8 samples, 0.17%)</title><rect x="57.6336%" y="629" width="0.1696%" height="15" fill="rgb(247,105,42)" fg:x="2718" fg:w="8"/><text x="57.8836%" y="639.50"></text></g><g><title>regex_automata::meta::regex::Regex::create_captures (28 samples, 0.59%)</title><rect x="57.2307%" y="661" width="0.5937%" height="15" fill="rgb(205,86,9)" fg:x="2699" fg:w="28"/><text x="57.4807%" y="671.50"></text></g><g><title>regex_automata::util::pool::Pool&lt;T,F&gt;::get (1 samples, 0.02%)</title><rect x="57.8244%" y="613" width="0.0212%" height="15" fill="rgb(210,26,34)" fg:x="2727" fg:w="1"/><text x="58.0744%" y="623.50"></text></g><g><title>regex_automata::util::pool::inner::Pool&lt;T,F&gt;::get (1 samples, 0.02%)</title><rect x="57.8244%" y="597" width="0.0212%" height="15" fill="rgb(245,192,35)" fg:x="2727" fg:w="1"/><text x="58.0744%" y="607.50"></text></g><g><title>regex_automata::util::pool::inner::Pool&lt;T,F&gt;::guard_owned (1 samples, 0.02%)</title><rect x="57.8244%" y="581" width="0.0212%" height="15" fill="rgb(232,29,0)" fg:x="2727" fg:w="1"/><text x="58.0744%" y="591.50"></text></g><g><title>&lt;regex_automata::util::pool::PoolGuard&lt;T,F&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.02%)</title><rect x="57.8456%" y="613" width="0.0212%" height="15" fill="rgb(254,216,35)" fg:x="2728" fg:w="1"/><text x="58.0956%" y="623.50"></text></g><g><title>regex_automata::util::pool::inner::PoolGuard&lt;T,F&gt;::value_mut (1 samples, 0.02%)</title><rect x="57.8456%" y="597" width="0.0212%" height="15" fill="rgb(240,103,47)" fg:x="2728" fg:w="1"/><text x="58.0956%" y="607.50"></text></g><g><title>regex_automata::util::search::Input::anchored (2 samples, 0.04%)</title><rect x="57.8668%" y="597" width="0.0424%" height="15" fill="rgb(212,194,4)" fg:x="2729" fg:w="2"/><text x="58.1168%" y="607.50"></text></g><g><title>regex_automata::util::search::Match::new (1 samples, 0.02%)</title><rect x="57.9092%" y="549" width="0.0212%" height="15" fill="rgb(241,222,48)" fg:x="2731" fg:w="1"/><text x="58.1592%" y="559.50"></text></g><g><title>regex_automata::hybrid::id::LazyStateID::is_tagged (11 samples, 0.23%)</title><rect x="57.9304%" y="501" width="0.2332%" height="15" fill="rgb(239,48,3)" fg:x="2732" fg:w="11"/><text x="58.1804%" y="511.50"></text></g><g><title>regex_automata::hybrid::dfa::DFA::next_state_untagged_unchecked (16 samples, 0.34%)</title><rect x="58.1637%" y="501" width="0.3393%" height="15" fill="rgb(222,34,27)" fg:x="2743" fg:w="16"/><text x="58.4137%" y="511.50"></text></g><g><title>regex_automata::util::alphabet::ByteClasses::get (2 samples, 0.04%)</title><rect x="58.5030%" y="485" width="0.0424%" height="15" fill="rgb(231,200,33)" fg:x="2759" fg:w="2"/><text x="58.7530%" y="495.50"></text></g><g><title>regex_automata::hybrid::id::LazyStateID::is_unknown (3 samples, 0.06%)</title><rect x="58.5454%" y="485" width="0.0636%" height="15" fill="rgb(222,7,45)" fg:x="2761" fg:w="3"/><text x="58.7954%" y="495.50"></text></g><g><title>regex_automata::hybrid::id::LazyStateID::as_usize_untagged (1 samples, 0.02%)</title><rect x="58.6090%" y="485" width="0.0212%" height="15" fill="rgb(209,227,13)" fg:x="2764" fg:w="1"/><text x="58.8590%" y="495.50"></text></g><g><title>regex_automata::hybrid::dfa::DFA::next_state (7 samples, 0.15%)</title><rect x="58.5030%" y="501" width="0.1484%" height="15" fill="rgb(223,122,32)" fg:x="2759" fg:w="7"/><text x="58.7530%" y="511.50"></text></g><g><title>regex_automata::hybrid::dfa::DFA::try_search_fwd (35 samples, 0.74%)</title><rect x="57.9304%" y="549" width="0.7422%" height="15" fill="rgb(209,194,30)" fg:x="2732" fg:w="35"/><text x="58.1804%" y="559.50"></text></g><g><title>regex_automata::hybrid::search::find_fwd (35 samples, 0.74%)</title><rect x="57.9304%" y="533" width="0.7422%" height="15" fill="rgb(254,161,34)" fg:x="2732" fg:w="35"/><text x="58.1804%" y="543.50"></text></g><g><title>regex_automata::hybrid::search::find_fwd_imp (35 samples, 0.74%)</title><rect x="57.9304%" y="517" width="0.7422%" height="15" fill="rgb(246,79,15)" fg:x="2732" fg:w="35"/><text x="58.1804%" y="527.50"></text></g><g><title>regex_automata::meta::strategy::Core::try_search_mayfail (47 samples, 1.00%)</title><rect x="57.9092%" y="597" width="0.9966%" height="15" fill="rgb(244,122,16)" fg:x="2731" fg:w="47"/><text x="58.1592%" y="607.50"></text></g><g><title>regex_automata::meta::wrappers::HybridEngine::try_search (47 samples, 1.00%)</title><rect x="57.9092%" y="581" width="0.9966%" height="15" fill="rgb(216,227,19)" fg:x="2731" fg:w="47"/><text x="58.1592%" y="591.50"></text></g><g><title>regex_automata::hybrid::regex::Regex::try_search (47 samples, 1.00%)</title><rect x="57.9092%" y="565" width="0.9966%" height="15" fill="rgb(234,124,32)" fg:x="2731" fg:w="47"/><text x="58.1592%" y="575.50"></text></g><g><title>regex_automata::meta::wrappers::OnePass::get (3 samples, 0.06%)</title><rect x="58.9059%" y="581" width="0.0636%" height="15" fill="rgb(226,48,16)" fg:x="2778" fg:w="3"/><text x="59.1559%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (3 samples, 0.06%)</title><rect x="58.9059%" y="565" width="0.0636%" height="15" fill="rgb(235,45,53)" fg:x="2778" fg:w="3"/><text x="59.1559%" y="575.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::NFA::has_empty (1 samples, 0.02%)</title><rect x="58.9695%" y="549" width="0.0212%" height="15" fill="rgb(216,213,28)" fg:x="2781" fg:w="1"/><text x="59.2195%" y="559.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="58.9695%" y="533" width="0.0212%" height="15" fill="rgb(210,59,24)" fg:x="2781" fg:w="1"/><text x="59.2195%" y="543.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::inner (1 samples, 0.02%)</title><rect x="58.9695%" y="517" width="0.0212%" height="15" fill="rgb(232,202,24)" fg:x="2781" fg:w="1"/><text x="59.2195%" y="527.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.02%)</title><rect x="58.9695%" y="501" width="0.0212%" height="15" fill="rgb(221,185,31)" fg:x="2781" fg:w="1"/><text x="59.2195%" y="511.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::Transition::matches_byte (2 samples, 0.04%)</title><rect x="58.9907%" y="421" width="0.0424%" height="15" fill="rgb(209,159,11)" fg:x="2782" fg:w="2"/><text x="59.2407%" y="431.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::SparseTransitions::matches::{{closure}} (14 samples, 0.30%)</title><rect x="58.9907%" y="453" width="0.2969%" height="15" fill="rgb(249,48,1)" fg:x="2782" fg:w="14"/><text x="59.2407%" y="463.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::SparseTransitions::matches_byte (14 samples, 0.30%)</title><rect x="58.9907%" y="437" width="0.2969%" height="15" fill="rgb(218,204,19)" fg:x="2782" fg:w="14"/><text x="59.2407%" y="447.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::SparseTransitions::matches (15 samples, 0.32%)</title><rect x="58.9907%" y="485" width="0.3181%" height="15" fill="rgb(232,144,32)" fg:x="2782" fg:w="15"/><text x="59.2407%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (15 samples, 0.32%)</title><rect x="58.9907%" y="469" width="0.3181%" height="15" fill="rgb(225,8,7)" fg:x="2782" fg:w="15"/><text x="59.2407%" y="479.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::NFA::state (6 samples, 0.13%)</title><rect x="59.3087%" y="485" width="0.1272%" height="15" fill="rgb(232,57,43)" fg:x="2797" fg:w="6"/><text x="59.5587%" y="495.50"></text></g><g><title>regex_automata::util::primitives::&lt;impl core::ops::index::Index&lt;regex_automata::util::primitives::StateID&gt; for [T]&gt;::index (6 samples, 0.13%)</title><rect x="59.3087%" y="469" width="0.1272%" height="15" fill="rgb(221,218,26)" fg:x="2797" fg:w="6"/><text x="59.5587%" y="479.50"></text></g><g><title>regex_automata::util::primitives::StateID::as_usize (2 samples, 0.04%)</title><rect x="59.4360%" y="469" width="0.0424%" height="15" fill="rgb(219,134,51)" fg:x="2803" fg:w="2"/><text x="59.6860%" y="479.50"></text></g><g><title>regex_automata::util::primitives::SmallIndex::as_usize (2 samples, 0.04%)</title><rect x="59.4360%" y="453" width="0.0424%" height="15" fill="rgb(206,80,48)" fg:x="2803" fg:w="2"/><text x="59.6860%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (2 samples, 0.04%)</title><rect x="59.4784%" y="469" width="0.0424%" height="15" fill="rgb(215,149,39)" fg:x="2805" fg:w="2"/><text x="59.7284%" y="479.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.04%)</title><rect x="59.4784%" y="453" width="0.0424%" height="15" fill="rgb(250,51,46)" fg:x="2805" fg:w="2"/><text x="59.7284%" y="463.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.04%)</title><rect x="59.4784%" y="437" width="0.0424%" height="15" fill="rgb(254,116,45)" fg:x="2805" fg:w="2"/><text x="59.7284%" y="447.50"></text></g><g><title>regex_automata::nfa::thompson::backtrack::Visited::insert (51 samples, 1.08%)</title><rect x="59.4360%" y="485" width="1.0814%" height="15" fill="rgb(230,207,22)" fg:x="2803" fg:w="51"/><text x="59.6860%" y="495.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="60.5174%" y="469" width="0.0212%" height="15" fill="rgb(209,143,44)" fg:x="2854" fg:w="1"/><text x="60.7674%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.02%)</title><rect x="60.5386%" y="469" width="0.0212%" height="15" fill="rgb(248,74,39)" fg:x="2855" fg:w="1"/><text x="60.7886%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="60.5386%" y="453" width="0.0212%" height="15" fill="rgb(239,196,40)" fg:x="2855" fg:w="1"/><text x="60.7886%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.11%)</title><rect x="60.5174%" y="485" width="0.1060%" height="15" fill="rgb(241,229,15)" fg:x="2854" fg:w="5"/><text x="60.7674%" y="495.50"></text></g><g><title>regex_automata::nfa::thompson::backtrack::BoundedBacktracker::step (98 samples, 2.08%)</title><rect x="58.9907%" y="501" width="2.0780%" height="15" fill="rgb(236,64,1)" fg:x="2782" fg:w="98"/><text x="59.2407%" y="511.50">r..</text></g><g><title>regex_automata::nfa::thompson::backtrack::BoundedBacktracker::backtrack (99 samples, 2.10%)</title><rect x="58.9907%" y="517" width="2.0992%" height="15" fill="rgb(240,43,20)" fg:x="2782" fg:w="99"/><text x="59.2407%" y="527.50">r..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (1 samples, 0.02%)</title><rect x="61.0687%" y="501" width="0.0212%" height="15" fill="rgb(216,0,40)" fg:x="2880" fg:w="1"/><text x="61.3187%" y="511.50"></text></g><g><title>core::ptr::read (1 samples, 0.02%)</title><rect x="61.0687%" y="485" width="0.0212%" height="15" fill="rgb(222,157,29)" fg:x="2880" fg:w="1"/><text x="61.3187%" y="495.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (1 samples, 0.02%)</title><rect x="61.0687%" y="469" width="0.0212%" height="15" fill="rgb(234,151,54)" fg:x="2880" fg:w="1"/><text x="61.3187%" y="479.50"></text></g><g><title>regex_automata::nfa::thompson::backtrack::BoundedBacktracker::search_imp (100 samples, 2.12%)</title><rect x="58.9907%" y="533" width="2.1204%" height="15" fill="rgb(207,186,34)" fg:x="2782" fg:w="100"/><text x="59.2407%" y="543.50">r..</text></g><g><title>__memset_avx512_unaligned_erms (1 samples, 0.02%)</title><rect x="61.0899%" y="517" width="0.0212%" height="15" fill="rgb(240,145,53)" fg:x="2881" fg:w="1"/><text x="61.3399%" y="527.50"></text></g><g><title>regex_automata::nfa::thompson::backtrack::BoundedBacktracker::try_search_slots_imp (101 samples, 2.14%)</title><rect x="58.9907%" y="549" width="2.1416%" height="15" fill="rgb(254,24,16)" fg:x="2782" fg:w="101"/><text x="59.2407%" y="559.50">r..</text></g><g><title>regex_automata::meta::wrappers::BoundedBacktrackerEngine::search_slots (114 samples, 2.42%)</title><rect x="58.9695%" y="581" width="2.4173%" height="15" fill="rgb(224,210,15)" fg:x="2781" fg:w="114"/><text x="59.2195%" y="591.50">re..</text></g><g><title>regex_automata::nfa::thompson::backtrack::BoundedBacktracker::try_search_slots (114 samples, 2.42%)</title><rect x="58.9695%" y="565" width="2.4173%" height="15" fill="rgb(223,178,39)" fg:x="2781" fg:w="114"/><text x="59.2195%" y="575.50">re..</text></g><g><title>regex_automata::util::search::Span::len (1 samples, 0.02%)</title><rect x="61.3868%" y="565" width="0.0212%" height="15" fill="rgb(209,63,39)" fg:x="2895" fg:w="1"/><text x="61.6368%" y="575.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_sub (1 samples, 0.02%)</title><rect x="61.3868%" y="549" width="0.0212%" height="15" fill="rgb(231,196,32)" fg:x="2895" fg:w="1"/><text x="61.6368%" y="559.50"></text></g><g><title>regex_automata::meta::wrappers::BoundedBacktrackerEngine::max_haystack_len (8 samples, 0.17%)</title><rect x="61.4080%" y="565" width="0.1696%" height="15" fill="rgb(238,216,2)" fg:x="2896" fg:w="8"/><text x="61.6580%" y="575.50"></text></g><g><title>regex_automata::nfa::thompson::backtrack::BoundedBacktracker::max_haystack_len (8 samples, 0.17%)</title><rect x="61.4080%" y="549" width="0.1696%" height="15" fill="rgb(249,67,16)" fg:x="2896" fg:w="8"/><text x="61.6580%" y="559.50"></text></g><g><title>regex_automata::meta::wrappers::BoundedBacktracker::get (15 samples, 0.32%)</title><rect x="61.3868%" y="581" width="0.3181%" height="15" fill="rgb(240,223,16)" fg:x="2895" fg:w="15"/><text x="61.6368%" y="591.50"></text></g><g><title>regex_automata::meta::strategy::Core::search_slots_nofail (142 samples, 3.01%)</title><rect x="58.9059%" y="597" width="3.0110%" height="15" fill="rgb(248,164,40)" fg:x="2778" fg:w="142"/><text x="59.1559%" y="607.50">reg..</text></g><g><title>&lt;regex_automata::util::search::Input as core::clone::Clone&gt;::clone (2 samples, 0.04%)</title><rect x="61.9169%" y="597" width="0.0424%" height="15" fill="rgb(215,48,50)" fg:x="2920" fg:w="2"/><text x="62.1669%" y="607.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for &amp;T&gt;::clone (2 samples, 0.04%)</title><rect x="61.9169%" y="581" width="0.0424%" height="15" fill="rgb(229,51,20)" fg:x="2920" fg:w="2"/><text x="62.1669%" y="591.50"></text></g><g><title>&lt;regex_automata::meta::strategy::Core as regex_automata::meta::strategy::Strategy&gt;::search_slots (203 samples, 4.30%)</title><rect x="57.8668%" y="613" width="4.3045%" height="15" fill="rgb(221,222,32)" fg:x="2729" fg:w="203"/><text x="58.1168%" y="623.50">&lt;rege..</text></g><g><title>regex_automata::meta::regex::Regex::captures (209 samples, 4.43%)</title><rect x="57.8244%" y="661" width="4.4317%" height="15" fill="rgb(219,198,6)" fg:x="2727" fg:w="209"/><text x="58.0744%" y="671.50">regex..</text></g><g><title>regex_automata::meta::regex::Regex::search_captures (209 samples, 4.43%)</title><rect x="57.8244%" y="645" width="4.4317%" height="15" fill="rgb(212,211,21)" fg:x="2727" fg:w="209"/><text x="58.0744%" y="655.50">regex..</text></g><g><title>regex_automata::meta::regex::Regex::search_slots (209 samples, 4.43%)</title><rect x="57.8244%" y="629" width="4.4317%" height="15" fill="rgb(243,12,43)" fg:x="2727" fg:w="209"/><text x="58.0744%" y="639.50">regex..</text></g><g><title>regex::regex::bytes::Regex::static_captures_len (1 samples, 0.02%)</title><rect x="62.2561%" y="661" width="0.0212%" height="15" fill="rgb(214,216,2)" fg:x="2936" fg:w="1"/><text x="62.5061%" y="671.50"></text></g><g><title>regex_automata::meta::regex::Regex::static_captures_len (1 samples, 0.02%)</title><rect x="62.2561%" y="645" width="0.0212%" height="15" fill="rgb(249,128,0)" fg:x="2936" fg:w="1"/><text x="62.5061%" y="655.50"></text></g><g><title>regex_automata::meta::regex::RegexInfo::props_union (1 samples, 0.02%)</title><rect x="62.2561%" y="629" width="0.0212%" height="15" fill="rgb(233,168,47)" fg:x="2936" fg:w="1"/><text x="62.5061%" y="639.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="62.2561%" y="613" width="0.0212%" height="15" fill="rgb(210,59,24)" fg:x="2936" fg:w="1"/><text x="62.5061%" y="623.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::inner (1 samples, 0.02%)</title><rect x="62.2561%" y="597" width="0.0212%" height="15" fill="rgb(232,202,24)" fg:x="2936" fg:w="1"/><text x="62.5061%" y="607.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.02%)</title><rect x="62.2561%" y="581" width="0.0212%" height="15" fill="rgb(221,185,31)" fg:x="2936" fg:w="1"/><text x="62.5061%" y="591.50"></text></g><g><title>regex::regex::bytes::Regex::captures (240 samples, 5.09%)</title><rect x="57.2307%" y="693" width="5.0891%" height="15" fill="rgb(233,29,12)" fg:x="2699" fg:w="240"/><text x="57.4807%" y="703.50">regex:..</text></g><g><title>regex::regex::bytes::Regex::captures_at (240 samples, 5.09%)</title><rect x="57.2307%" y="677" width="5.0891%" height="15" fill="rgb(207,96,18)" fg:x="2699" fg:w="240"/><text x="57.4807%" y="687.50">regex:..</text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.02%)</title><rect x="62.3198%" y="549" width="0.0212%" height="15" fill="rgb(209,34,41)" fg:x="2939" fg:w="1"/><text x="62.5698%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.02%)</title><rect x="62.3198%" y="533" width="0.0212%" height="15" fill="rgb(241,196,44)" fg:x="2939" fg:w="1"/><text x="62.5698%" y="543.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.02%)</title><rect x="62.3410%" y="549" width="0.0212%" height="15" fill="rgb(254,196,3)" fg:x="2940" fg:w="1"/><text x="62.5910%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.02%)</title><rect x="62.3410%" y="533" width="0.0212%" height="15" fill="rgb(254,11,22)" fg:x="2940" fg:w="1"/><text x="62.5910%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="62.3410%" y="517" width="0.0212%" height="15" fill="rgb(214,20,35)" fg:x="2940" fg:w="1"/><text x="62.5910%" y="527.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.02%)</title><rect x="62.3622%" y="549" width="0.0212%" height="15" fill="rgb(254,20,38)" fg:x="2941" fg:w="1"/><text x="62.6122%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (4 samples, 0.08%)</title><rect x="62.3834%" y="549" width="0.0848%" height="15" fill="rgb(208,119,11)" fg:x="2942" fg:w="4"/><text x="62.6334%" y="559.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (4 samples, 0.08%)</title><rect x="62.3834%" y="533" width="0.0848%" height="15" fill="rgb(218,185,12)" fg:x="2942" fg:w="4"/><text x="62.6334%" y="543.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (4 samples, 0.08%)</title><rect x="62.3834%" y="517" width="0.0848%" height="15" fill="rgb(254,162,47)" fg:x="2942" fg:w="4"/><text x="62.6334%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.08%)</title><rect x="62.3834%" y="501" width="0.0848%" height="15" fill="rgb(242,44,7)" fg:x="2942" fg:w="4"/><text x="62.6334%" y="511.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (4 samples, 0.08%)</title><rect x="62.3834%" y="485" width="0.0848%" height="15" fill="rgb(216,62,21)" fg:x="2942" fg:w="4"/><text x="62.6334%" y="495.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (4 samples, 0.08%)</title><rect x="62.3834%" y="469" width="0.0848%" height="15" fill="rgb(221,225,42)" fg:x="2942" fg:w="4"/><text x="62.6334%" y="479.50"></text></g><g><title>__memcmp_evex_movbe (4 samples, 0.08%)</title><rect x="62.3834%" y="453" width="0.0848%" height="15" fill="rgb(253,103,40)" fg:x="2942" fg:w="4"/><text x="62.6334%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (9 samples, 0.19%)</title><rect x="62.3198%" y="597" width="0.1908%" height="15" fill="rgb(230,119,31)" fg:x="2939" fg:w="9"/><text x="62.5698%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (9 samples, 0.19%)</title><rect x="62.3198%" y="581" width="0.1908%" height="15" fill="rgb(252,63,32)" fg:x="2939" fg:w="9"/><text x="62.5698%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (9 samples, 0.19%)</title><rect x="62.3198%" y="565" width="0.1908%" height="15" fill="rgb(248,7,52)" fg:x="2939" fg:w="9"/><text x="62.5698%" y="575.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.02%)</title><rect x="62.5106%" y="453" width="0.0212%" height="15" fill="rgb(221,52,24)" fg:x="2948" fg:w="1"/><text x="62.7606%" y="463.50"></text></g><g><title>core::hash::Hasher::write_u8 (3 samples, 0.06%)</title><rect x="62.5106%" y="485" width="0.0636%" height="15" fill="rgb(226,117,6)" fg:x="2948" fg:w="3"/><text x="62.7606%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.06%)</title><rect x="62.5106%" y="469" width="0.0636%" height="15" fill="rgb(236,225,40)" fg:x="2948" fg:w="3"/><text x="62.7606%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="62.5742%" y="453" width="0.0212%" height="15" fill="rgb(214,20,35)" fg:x="2951" fg:w="1"/><text x="62.8242%" y="463.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.04%)</title><rect x="62.5742%" y="469" width="0.0424%" height="15" fill="rgb(221,52,24)" fg:x="2951" fg:w="2"/><text x="62.8242%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (8 samples, 0.17%)</title><rect x="62.5106%" y="565" width="0.1696%" height="15" fill="rgb(212,33,36)" fg:x="2948" fg:w="8"/><text x="62.7606%" y="575.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (8 samples, 0.17%)</title><rect x="62.5106%" y="549" width="0.1696%" height="15" fill="rgb(250,187,26)" fg:x="2948" fg:w="8"/><text x="62.7606%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (8 samples, 0.17%)</title><rect x="62.5106%" y="533" width="0.1696%" height="15" fill="rgb(208,211,8)" fg:x="2948" fg:w="8"/><text x="62.7606%" y="543.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (8 samples, 0.17%)</title><rect x="62.5106%" y="517" width="0.1696%" height="15" fill="rgb(206,132,37)" fg:x="2948" fg:w="8"/><text x="62.7606%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (8 samples, 0.17%)</title><rect x="62.5106%" y="501" width="0.1696%" height="15" fill="rgb(243,187,24)" fg:x="2948" fg:w="8"/><text x="62.7606%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.11%)</title><rect x="62.5742%" y="485" width="0.1060%" height="15" fill="rgb(236,225,40)" fg:x="2951" fg:w="5"/><text x="62.8242%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.04%)</title><rect x="62.6802%" y="501" width="0.0424%" height="15" fill="rgb(233,55,45)" fg:x="2956" fg:w="2"/><text x="62.9302%" y="511.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="62.7226%" y="501" width="0.0212%" height="15" fill="rgb(223,143,42)" fg:x="2958" fg:w="1"/><text x="62.9726%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (4 samples, 0.08%)</title><rect x="62.6802%" y="517" width="0.0848%" height="15" fill="rgb(215,158,9)" fg:x="2956" fg:w="4"/><text x="62.9302%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="62.7651%" y="517" width="0.0212%" height="15" fill="rgb(248,169,8)" fg:x="2960" fg:w="1"/><text x="63.0151%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="62.7651%" y="501" width="0.0212%" height="15" fill="rgb(223,143,42)" fg:x="2960" fg:w="1"/><text x="63.0151%" y="511.50"></text></g><g><title>regex_automata::util::captures::GroupInfo::to_index (23 samples, 0.49%)</title><rect x="62.3198%" y="661" width="0.4877%" height="15" fill="rgb(250,225,43)" fg:x="2939" fg:w="23"/><text x="62.5698%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (23 samples, 0.49%)</title><rect x="62.3198%" y="645" width="0.4877%" height="15" fill="rgb(218,89,21)" fg:x="2939" fg:w="23"/><text x="62.5698%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (23 samples, 0.49%)</title><rect x="62.3198%" y="629" width="0.4877%" height="15" fill="rgb(207,60,33)" fg:x="2939" fg:w="23"/><text x="62.5698%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (23 samples, 0.49%)</title><rect x="62.3198%" y="613" width="0.4877%" height="15" fill="rgb(207,224,35)" fg:x="2939" fg:w="23"/><text x="62.5698%" y="623.50"></text></g><g><title>hashbrown::map::make_hash (14 samples, 0.30%)</title><rect x="62.5106%" y="597" width="0.2969%" height="15" fill="rgb(241,1,29)" fg:x="2948" fg:w="14"/><text x="62.7606%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (14 samples, 0.30%)</title><rect x="62.5106%" y="581" width="0.2969%" height="15" fill="rgb(222,198,6)" fg:x="2948" fg:w="14"/><text x="62.7606%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (6 samples, 0.13%)</title><rect x="62.6802%" y="565" width="0.1272%" height="15" fill="rgb(218,214,24)" fg:x="2956" fg:w="6"/><text x="62.9302%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (6 samples, 0.13%)</title><rect x="62.6802%" y="549" width="0.1272%" height="15" fill="rgb(230,187,21)" fg:x="2956" fg:w="6"/><text x="62.9302%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (6 samples, 0.13%)</title><rect x="62.6802%" y="533" width="0.1272%" height="15" fill="rgb(244,191,49)" fg:x="2956" fg:w="6"/><text x="62.9302%" y="543.50"></text></g><g><title>regex::regex::bytes::Captures::name (24 samples, 0.51%)</title><rect x="62.3198%" y="693" width="0.5089%" height="15" fill="rgb(227,58,29)" fg:x="2939" fg:w="24"/><text x="62.5698%" y="703.50"></text></g><g><title>regex_automata::util::captures::Captures::get_group_by_name (24 samples, 0.51%)</title><rect x="62.3198%" y="677" width="0.5089%" height="15" fill="rgb(243,115,33)" fg:x="2939" fg:w="24"/><text x="62.5698%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex::regex::bytes::Captures&gt; (6 samples, 0.13%)</title><rect x="62.8287%" y="693" width="0.1272%" height="15" fill="rgb(230,156,32)" fg:x="2963" fg:w="6"/><text x="63.0787%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::util::captures::Captures&gt; (6 samples, 0.13%)</title><rect x="62.8287%" y="677" width="0.1272%" height="15" fill="rgb(225,86,11)" fg:x="2963" fg:w="6"/><text x="63.0787%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::util::captures::GroupInfo&gt; (6 samples, 0.13%)</title><rect x="62.8287%" y="661" width="0.1272%" height="15" fill="rgb(232,182,23)" fg:x="2963" fg:w="6"/><text x="63.0787%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;regex_automata::util::captures::GroupInfoInner&gt;&gt; (6 samples, 0.13%)</title><rect x="62.8287%" y="645" width="0.1272%" height="15" fill="rgb(236,30,13)" fg:x="2963" fg:w="6"/><text x="63.0787%" y="655.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.13%)</title><rect x="62.8287%" y="629" width="0.1272%" height="15" fill="rgb(220,153,15)" fg:x="2963" fg:w="6"/><text x="63.0787%" y="639.50"></text></g><g><title>__rust_dealloc (2 samples, 0.04%)</title><rect x="62.9559%" y="693" width="0.0424%" height="15" fill="rgb(241,15,46)" fg:x="2969" fg:w="2"/><text x="63.2059%" y="703.50"></text></g><g><title>tcache_put (3 samples, 0.06%)</title><rect x="62.9983%" y="661" width="0.0636%" height="15" fill="rgb(227,177,28)" fg:x="2971" fg:w="3"/><text x="63.2483%" y="671.50"></text></g><g><title>_int_free (8 samples, 0.17%)</title><rect x="62.9983%" y="677" width="0.1696%" height="15" fill="rgb(221,113,48)" fg:x="2971" fg:w="8"/><text x="63.2483%" y="687.50"></text></g><g><title>__GI___libc_free (11 samples, 0.23%)</title><rect x="62.9983%" y="693" width="0.2332%" height="15" fill="rgb(247,8,17)" fg:x="2971" fg:w="11"/><text x="63.2483%" y="703.50"></text></g><g><title>s4lib::data::datetime::bytes_to_regex_to_datetime (648 samples, 13.74%)</title><rect x="49.5547%" y="709" width="13.7405%" height="15" fill="rgb(252,84,36)" fg:x="2337" fg:w="648"/><text x="49.8047%" y="719.50">s4lib::data::datetime..</text></g><g><title>__rdl_dealloc (1 samples, 0.02%)</title><rect x="63.2952%" y="645" width="0.0212%" height="15" fill="rgb(243,203,32)" fg:x="2985" fg:w="1"/><text x="63.5452%" y="655.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.02%)</title><rect x="63.2952%" y="629" width="0.0212%" height="15" fill="rgb(226,81,10)" fg:x="2985" fg:w="1"/><text x="63.5452%" y="639.50"></text></g><g><title>arena_for_chunk (1 samples, 0.02%)</title><rect x="63.3164%" y="629" width="0.0212%" height="15" fill="rgb(234,26,42)" fg:x="2986" fg:w="1"/><text x="63.5664%" y="639.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="63.3376%" y="629" width="0.0212%" height="15" fill="rgb(221,113,48)" fg:x="2987" fg:w="1"/><text x="63.5876%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;&amp;[u8]&gt;&gt; (5 samples, 0.11%)</title><rect x="63.2952%" y="709" width="0.1060%" height="15" fill="rgb(221,44,14)" fg:x="2985" fg:w="5"/><text x="63.5452%" y="719.50"></text></g><g><title>alloc::alloc::box_free (5 samples, 0.11%)</title><rect x="63.2952%" y="693" width="0.1060%" height="15" fill="rgb(241,6,19)" fg:x="2985" fg:w="5"/><text x="63.5452%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.11%)</title><rect x="63.2952%" y="677" width="0.1060%" height="15" fill="rgb(238,77,31)" fg:x="2985" fg:w="5"/><text x="63.5452%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.11%)</title><rect x="63.2952%" y="661" width="0.1060%" height="15" fill="rgb(227,15,28)" fg:x="2985" fg:w="5"/><text x="63.5452%" y="671.50"></text></g><g><title>__GI___libc_free (4 samples, 0.08%)</title><rect x="63.3164%" y="645" width="0.0848%" height="15" fill="rgb(247,8,17)" fg:x="2986" fg:w="4"/><text x="63.5664%" y="655.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_datetime_in_line (709 samples, 15.03%)</title><rect x="48.8126%" y="725" width="15.0339%" height="15" fill="rgb(212,53,9)" fg:x="2302" fg:w="709"/><text x="49.0626%" y="735.50">s4lib::readers::sysline..</text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="63.8465%" y="549" width="0.0212%" height="15" fill="rgb(243,191,43)" fg:x="3011" fg:w="1"/><text x="64.0965%" y="559.50"></text></g><g><title>_int_malloc (3 samples, 0.06%)</title><rect x="63.8677%" y="533" width="0.0636%" height="15" fill="rgb(222,219,51)" fg:x="3012" fg:w="3"/><text x="64.1177%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (9 samples, 0.19%)</title><rect x="63.8465%" y="661" width="0.1908%" height="15" fill="rgb(253,154,22)" fg:x="3011" fg:w="9"/><text x="64.0965%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9 samples, 0.19%)</title><rect x="63.8465%" y="645" width="0.1908%" height="15" fill="rgb(249,207,12)" fg:x="3011" fg:w="9"/><text x="64.0965%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9 samples, 0.19%)</title><rect x="63.8465%" y="629" width="0.1908%" height="15" fill="rgb(224,194,14)" fg:x="3011" fg:w="9"/><text x="64.0965%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (9 samples, 0.19%)</title><rect x="63.8465%" y="613" width="0.1908%" height="15" fill="rgb(227,204,5)" fg:x="3011" fg:w="9"/><text x="64.0965%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.19%)</title><rect x="63.8465%" y="597" width="0.1908%" height="15" fill="rgb(231,114,21)" fg:x="3011" fg:w="9"/><text x="64.0965%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.19%)</title><rect x="63.8465%" y="581" width="0.1908%" height="15" fill="rgb(238,209,2)" fg:x="3011" fg:w="9"/><text x="64.0965%" y="591.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.19%)</title><rect x="63.8465%" y="565" width="0.1908%" height="15" fill="rgb(253,135,41)" fg:x="3011" fg:w="9"/><text x="64.0965%" y="575.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.17%)</title><rect x="63.8677%" y="549" width="0.1696%" height="15" fill="rgb(206,112,53)" fg:x="3012" fg:w="8"/><text x="64.1177%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.04%)</title><rect x="64.0373%" y="645" width="0.0424%" height="15" fill="rgb(222,168,45)" fg:x="3020" fg:w="2"/><text x="64.2873%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.04%)</title><rect x="64.0373%" y="629" width="0.0424%" height="15" fill="rgb(206,81,30)" fg:x="3020" fg:w="2"/><text x="64.2873%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.08%)</title><rect x="64.0373%" y="661" width="0.0848%" height="15" fill="rgb(232,211,42)" fg:x="3020" fg:w="4"/><text x="64.2873%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (23 samples, 0.49%)</title><rect x="63.8465%" y="677" width="0.4877%" height="15" fill="rgb(232,14,28)" fg:x="3011" fg:w="23"/><text x="64.0965%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (50 samples, 1.06%)</title><rect x="63.8465%" y="693" width="1.0602%" height="15" fill="rgb(227,158,43)" fg:x="3011" fg:w="50"/><text x="64.0965%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (52 samples, 1.10%)</title><rect x="63.8465%" y="709" width="1.1026%" height="15" fill="rgb(247,137,3)" fg:x="3011" fg:w="52"/><text x="64.0965%" y="719.50"></text></g><g><title>itertools::Itertools::sorted_by (53 samples, 1.12%)</title><rect x="63.8465%" y="725" width="1.1238%" height="15" fill="rgb(225,164,23)" fg:x="3011" fg:w="53"/><text x="64.0965%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::iter (2 samples, 0.04%)</title><rect x="64.9703%" y="725" width="0.0424%" height="15" fill="rgb(232,124,44)" fg:x="3064" fg:w="2"/><text x="65.2203%" y="735.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="65.0127%" y="709" width="0.0212%" height="15" fill="rgb(221,113,48)" fg:x="3066" fg:w="1"/><text x="65.2627%" y="719.50"></text></g><g><title>free_perturb (1 samples, 0.02%)</title><rect x="65.0127%" y="693" width="0.0212%" height="15" fill="rgb(226,150,2)" fg:x="3066" fg:w="1"/><text x="65.2627%" y="703.50"></text></g><g><title>__GI___libc_free (2 samples, 0.04%)</title><rect x="65.0127%" y="725" width="0.0424%" height="15" fill="rgb(247,8,17)" fg:x="3066" fg:w="2"/><text x="65.2627%" y="735.50"></text></g><g><title>core::cmp::max (1 samples, 0.02%)</title><rect x="65.0551%" y="597" width="0.0212%" height="15" fill="rgb(230,43,15)" fg:x="3068" fg:w="1"/><text x="65.3051%" y="607.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.02%)</title><rect x="65.0551%" y="581" width="0.0212%" height="15" fill="rgb(238,229,26)" fg:x="3068" fg:w="1"/><text x="65.3051%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="65.0551%" y="565" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="3068" fg:w="1"/><text x="65.3051%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="65.0551%" y="549" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="3068" fg:w="1"/><text x="65.3051%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="65.0551%" y="533" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="3068" fg:w="1"/><text x="65.3051%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="65.0551%" y="517" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="3068" fg:w="1"/><text x="65.3051%" y="527.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (2 samples, 0.04%)</title><rect x="65.0763%" y="581" width="0.0424%" height="15" fill="rgb(206,149,53)" fg:x="3069" fg:w="2"/><text x="65.3263%" y="591.50"></text></g><g><title>arena_for_chunk (1 samples, 0.02%)</title><rect x="65.1187%" y="565" width="0.0212%" height="15" fill="rgb(234,26,42)" fg:x="3071" fg:w="1"/><text x="65.3687%" y="575.50"></text></g><g><title>tcache_put (5 samples, 0.11%)</title><rect x="65.1399%" y="549" width="0.1060%" height="15" fill="rgb(227,177,28)" fg:x="3072" fg:w="5"/><text x="65.3899%" y="559.50"></text></g><g><title>_int_malloc (13 samples, 0.28%)</title><rect x="65.1399%" y="565" width="0.2757%" height="15" fill="rgb(222,219,51)" fg:x="3072" fg:w="13"/><text x="65.3899%" y="575.50"></text></g><g><title>__GI___libc_malloc (18 samples, 0.38%)</title><rect x="65.1187%" y="581" width="0.3817%" height="15" fill="rgb(206,112,53)" fg:x="3071" fg:w="18"/><text x="65.3687%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (22 samples, 0.47%)</title><rect x="65.0551%" y="725" width="0.4665%" height="15" fill="rgb(226,167,9)" fg:x="3068" fg:w="22"/><text x="65.3051%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (22 samples, 0.47%)</title><rect x="65.0551%" y="709" width="0.4665%" height="15" fill="rgb(231,42,29)" fg:x="3068" fg:w="22"/><text x="65.3051%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (22 samples, 0.47%)</title><rect x="65.0551%" y="693" width="0.4665%" height="15" fill="rgb(232,211,42)" fg:x="3068" fg:w="22"/><text x="65.3051%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (22 samples, 0.47%)</title><rect x="65.0551%" y="677" width="0.4665%" height="15" fill="rgb(214,146,48)" fg:x="3068" fg:w="22"/><text x="65.3051%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (22 samples, 0.47%)</title><rect x="65.0551%" y="661" width="0.4665%" height="15" fill="rgb(212,159,3)" fg:x="3068" fg:w="22"/><text x="65.3051%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (22 samples, 0.47%)</title><rect x="65.0551%" y="645" width="0.4665%" height="15" fill="rgb(231,142,39)" fg:x="3068" fg:w="22"/><text x="65.3051%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (22 samples, 0.47%)</title><rect x="65.0551%" y="629" width="0.4665%" height="15" fill="rgb(249,2,22)" fg:x="3068" fg:w="22"/><text x="65.3051%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (22 samples, 0.47%)</title><rect x="65.0551%" y="613" width="0.4665%" height="15" fill="rgb(254,53,35)" fg:x="3068" fg:w="22"/><text x="65.3051%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (21 samples, 0.45%)</title><rect x="65.0763%" y="597" width="0.4453%" height="15" fill="rgb(237,133,22)" fg:x="3069" fg:w="21"/><text x="65.3263%" y="607.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::parse_datetime_in_line (796 samples, 16.88%)</title><rect x="48.8126%" y="741" width="16.8787%" height="15" fill="rgb(234,54,15)" fg:x="2302" fg:w="796"/><text x="49.0626%" y="751.50">s4lib::readers::syslinerea..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove (1 samples, 0.02%)</title><rect x="65.6913%" y="645" width="0.0212%" height="15" fill="rgb(219,134,36)" fg:x="3098" fg:w="1"/><text x="65.9413%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::erase_no_drop (1 samples, 0.02%)</title><rect x="65.6913%" y="629" width="0.0212%" height="15" fill="rgb(214,49,6)" fg:x="3098" fg:w="1"/><text x="65.9413%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner::erase (1 samples, 0.02%)</title><rect x="65.6913%" y="613" width="0.0212%" height="15" fill="rgb(241,127,40)" fg:x="3098" fg:w="1"/><text x="65.9413%" y="623.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (1 samples, 0.02%)</title><rect x="65.6913%" y="597" width="0.0212%" height="15" fill="rgb(251,162,0)" fg:x="3098" fg:w="1"/><text x="65.9413%" y="607.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.02%)</title><rect x="65.6913%" y="581" width="0.0212%" height="15" fill="rgb(209,34,41)" fg:x="3098" fg:w="1"/><text x="65.9413%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (1 samples, 0.02%)</title><rect x="65.6913%" y="565" width="0.0212%" height="15" fill="rgb(253,141,32)" fg:x="3098" fg:w="1"/><text x="65.9413%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.02%)</title><rect x="65.7125%" y="613" width="0.0212%" height="15" fill="rgb(209,34,41)" fg:x="3099" fg:w="1"/><text x="65.9625%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.02%)</title><rect x="65.7125%" y="597" width="0.0212%" height="15" fill="rgb(241,196,44)" fg:x="3099" fg:w="1"/><text x="65.9625%" y="607.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.02%)</title><rect x="65.7337%" y="613" width="0.0212%" height="15" fill="rgb(254,20,38)" fg:x="3100" fg:w="1"/><text x="65.9837%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (4 samples, 0.08%)</title><rect x="65.6913%" y="661" width="0.0848%" height="15" fill="rgb(215,93,43)" fg:x="3098" fg:w="4"/><text x="65.9413%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.06%)</title><rect x="65.7125%" y="645" width="0.0636%" height="15" fill="rgb(252,63,32)" fg:x="3099" fg:w="3"/><text x="65.9625%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (3 samples, 0.06%)</title><rect x="65.7125%" y="629" width="0.0636%" height="15" fill="rgb(243,218,21)" fg:x="3099" fg:w="3"/><text x="65.9625%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner::probe_seq (1 samples, 0.02%)</title><rect x="65.7549%" y="613" width="0.0212%" height="15" fill="rgb(215,108,52)" fg:x="3101" fg:w="1"/><text x="66.0049%" y="623.50"></text></g><g><title>&lt;lru::KeyRef&lt;K&gt; as core::hash::Hash&gt;::hash (1 samples, 0.02%)</title><rect x="65.7761%" y="645" width="0.0212%" height="15" fill="rgb(238,110,49)" fg:x="3102" fg:w="1"/><text x="66.0261%" y="655.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (1 samples, 0.02%)</title><rect x="65.7761%" y="629" width="0.0212%" height="15" fill="rgb(213,18,30)" fg:x="3102" fg:w="1"/><text x="66.0261%" y="639.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (1 samples, 0.02%)</title><rect x="65.7761%" y="613" width="0.0212%" height="15" fill="rgb(228,200,49)" fg:x="3102" fg:w="1"/><text x="66.0261%" y="623.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1 samples, 0.02%)</title><rect x="65.7761%" y="597" width="0.0212%" height="15" fill="rgb(243,175,12)" fg:x="3102" fg:w="1"/><text x="66.0261%" y="607.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.02%)</title><rect x="65.7761%" y="581" width="0.0212%" height="15" fill="rgb(253,180,14)" fg:x="3102" fg:w="1"/><text x="66.0261%" y="591.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.02%)</title><rect x="65.7761%" y="565" width="0.0212%" height="15" fill="rgb(250,179,17)" fg:x="3102" fg:w="1"/><text x="66.0261%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (6 samples, 0.13%)</title><rect x="65.6913%" y="693" width="0.1272%" height="15" fill="rgb(230,19,42)" fg:x="3098" fg:w="6"/><text x="65.9413%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (6 samples, 0.13%)</title><rect x="65.6913%" y="677" width="0.1272%" height="15" fill="rgb(208,183,29)" fg:x="3098" fg:w="6"/><text x="65.9413%" y="687.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.04%)</title><rect x="65.7761%" y="661" width="0.0424%" height="15" fill="rgb(241,1,29)" fg:x="3102" fg:w="2"/><text x="66.0261%" y="671.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="65.7973%" y="645" width="0.0212%" height="15" fill="rgb(233,144,3)" fg:x="3103" fg:w="1"/><text x="66.0473%" y="655.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.02%)</title><rect x="65.7973%" y="629" width="0.0212%" height="15" fill="rgb(253,180,14)" fg:x="3103" fg:w="1"/><text x="66.0473%" y="639.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.02%)</title><rect x="65.7973%" y="613" width="0.0212%" height="15" fill="rgb(250,179,17)" fg:x="3103" fg:w="1"/><text x="66.0473%" y="623.50"></text></g><g><title>lru::LruCache&lt;K,V,S&gt;::replace_or_create_node (7 samples, 0.15%)</title><rect x="65.6913%" y="709" width="0.1484%" height="15" fill="rgb(235,6,33)" fg:x="3098" fg:w="7"/><text x="65.9413%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner::record_item_insert_at (1 samples, 0.02%)</title><rect x="65.8397%" y="677" width="0.0212%" height="15" fill="rgb(254,84,38)" fg:x="3105" fg:w="1"/><text x="66.0897%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner::set_ctrl_h2 (1 samples, 0.02%)</title><rect x="65.8397%" y="661" width="0.0212%" height="15" fill="rgb(240,81,36)" fg:x="3105" fg:w="1"/><text x="66.0897%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner::set_ctrl (1 samples, 0.02%)</title><rect x="65.8397%" y="645" width="0.0212%" height="15" fill="rgb(249,179,13)" fg:x="3105" fg:w="1"/><text x="66.0897%" y="655.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (1 samples, 0.02%)</title><rect x="65.8397%" y="629" width="0.0212%" height="15" fill="rgb(212,215,37)" fg:x="3105" fg:w="1"/><text x="66.0897%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (1 samples, 0.02%)</title><rect x="65.8609%" y="677" width="0.0212%" height="15" fill="rgb(228,127,18)" fg:x="3106" fg:w="1"/><text x="66.1109%" y="687.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.02%)</title><rect x="65.8609%" y="661" width="0.0212%" height="15" fill="rgb(235,214,16)" fg:x="3106" fg:w="1"/><text x="66.1109%" y="671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.02%)</title><rect x="65.8609%" y="645" width="0.0212%" height="15" fill="rgb(224,197,7)" fg:x="3106" fg:w="1"/><text x="66.1109%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="65.8609%" y="629" width="0.0212%" height="15" fill="rgb(239,196,40)" fg:x="3106" fg:w="1"/><text x="66.1109%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (3 samples, 0.06%)</title><rect x="65.8397%" y="693" width="0.0636%" height="15" fill="rgb(218,104,39)" fg:x="3105" fg:w="3"/><text x="66.0897%" y="703.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (1 samples, 0.02%)</title><rect x="65.8821%" y="677" width="0.0212%" height="15" fill="rgb(216,51,12)" fg:x="3107" fg:w="1"/><text x="66.1321%" y="687.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.02%)</title><rect x="65.8821%" y="661" width="0.0212%" height="15" fill="rgb(205,52,49)" fg:x="3107" fg:w="1"/><text x="66.1321%" y="671.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="65.8821%" y="645" width="0.0212%" height="15" fill="rgb(209,143,44)" fg:x="3107" fg:w="1"/><text x="66.1321%" y="655.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (3 samples, 0.06%)</title><rect x="65.9033%" y="661" width="0.0636%" height="15" fill="rgb(209,34,41)" fg:x="3108" fg:w="3"/><text x="66.1533%" y="671.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (3 samples, 0.06%)</title><rect x="65.9033%" y="645" width="0.0636%" height="15" fill="rgb(241,196,44)" fg:x="3108" fg:w="3"/><text x="66.1533%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_bucket_full (6 samples, 0.13%)</title><rect x="65.9669%" y="645" width="0.1272%" height="15" fill="rgb(216,46,33)" fg:x="3111" fg:w="6"/><text x="66.2169%" y="655.50"></text></g><g><title>hashbrown::raw::is_full (6 samples, 0.13%)</title><rect x="65.9669%" y="629" width="0.1272%" height="15" fill="rgb(239,41,17)" fg:x="3111" fg:w="6"/><text x="66.2169%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner::fix_insert_slot (7 samples, 0.15%)</title><rect x="65.9669%" y="661" width="0.1484%" height="15" fill="rgb(235,172,34)" fg:x="3111" fg:w="7"/><text x="66.2169%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (16 samples, 0.34%)</title><rect x="65.8397%" y="709" width="0.3393%" height="15" fill="rgb(228,156,5)" fg:x="3105" fg:w="16"/><text x="66.0897%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (13 samples, 0.28%)</title><rect x="65.9033%" y="693" width="0.2757%" height="15" fill="rgb(236,164,17)" fg:x="3108" fg:w="13"/><text x="66.1533%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (13 samples, 0.28%)</title><rect x="65.9033%" y="677" width="0.2757%" height="15" fill="rgb(209,5,27)" fg:x="3108" fg:w="13"/><text x="66.1533%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.06%)</title><rect x="66.1154%" y="661" width="0.0636%" height="15" fill="rgb(238,118,47)" fg:x="3118" fg:w="3"/><text x="66.3654%" y="671.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (4 samples, 0.08%)</title><rect x="66.1790%" y="629" width="0.0848%" height="15" fill="rgb(209,34,41)" fg:x="3121" fg:w="4"/><text x="66.4290%" y="639.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (4 samples, 0.08%)</title><rect x="66.1790%" y="613" width="0.0848%" height="15" fill="rgb(241,196,44)" fg:x="3121" fg:w="4"/><text x="66.4290%" y="623.50"></text></g><g><title>lru::LruCache&lt;K,V,S&gt;::capturing_put (29 samples, 0.61%)</title><rect x="65.6913%" y="725" width="0.6149%" height="15" fill="rgb(218,66,15)" fg:x="3098" fg:w="29"/><text x="65.9413%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (6 samples, 0.13%)</title><rect x="66.1790%" y="709" width="0.1272%" height="15" fill="rgb(207,58,42)" fg:x="3121" fg:w="6"/><text x="66.4290%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (6 samples, 0.13%)</title><rect x="66.1790%" y="693" width="0.1272%" height="15" fill="rgb(243,133,17)" fg:x="3121" fg:w="6"/><text x="66.4290%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (6 samples, 0.13%)</title><rect x="66.1790%" y="677" width="0.1272%" height="15" fill="rgb(231,28,3)" fg:x="3121" fg:w="6"/><text x="66.4290%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.13%)</title><rect x="66.1790%" y="661" width="0.1272%" height="15" fill="rgb(252,63,32)" fg:x="3121" fg:w="6"/><text x="66.4290%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (6 samples, 0.13%)</title><rect x="66.1790%" y="645" width="0.1272%" height="15" fill="rgb(243,218,21)" fg:x="3121" fg:w="6"/><text x="66.4290%" y="655.50"></text></g><g><title>hashbrown::raw::h2 (2 samples, 0.04%)</title><rect x="66.2638%" y="629" width="0.0424%" height="15" fill="rgb(254,20,38)" fg:x="3125" fg:w="2"/><text x="66.5138%" y="639.50"></text></g><g><title>lru::LruCache&lt;K,V,S&gt;::put (31 samples, 0.66%)</title><rect x="65.6913%" y="741" width="0.6573%" height="15" fill="rgb(244,170,33)" fg:x="3098" fg:w="31"/><text x="65.9413%" y="751.50"></text></g><g><title>lru::LruCache&lt;K,V,S&gt;::detach (8 samples, 0.17%)</title><rect x="66.3486%" y="725" width="0.1696%" height="15" fill="rgb(239,138,31)" fg:x="3129" fg:w="8"/><text x="66.5986%" y="735.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.02%)</title><rect x="66.5182%" y="645" width="0.0212%" height="15" fill="rgb(209,34,41)" fg:x="3137" fg:w="1"/><text x="66.7682%" y="655.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.02%)</title><rect x="66.5182%" y="629" width="0.0212%" height="15" fill="rgb(241,196,44)" fg:x="3137" fg:w="1"/><text x="66.7682%" y="639.50"></text></g><g><title>hashbrown::raw::h2 (7 samples, 0.15%)</title><rect x="66.5394%" y="645" width="0.1484%" height="15" fill="rgb(254,20,38)" fg:x="3138" fg:w="7"/><text x="66.7894%" y="655.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.02%)</title><rect x="66.6879%" y="629" width="0.0212%" height="15" fill="rgb(218,185,12)" fg:x="3145" fg:w="1"/><text x="66.9379%" y="639.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (1 samples, 0.02%)</title><rect x="66.6879%" y="613" width="0.0212%" height="15" fill="rgb(249,88,53)" fg:x="3145" fg:w="1"/><text x="66.9379%" y="623.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="66.6879%" y="597" width="0.0212%" height="15" fill="rgb(242,44,7)" fg:x="3145" fg:w="1"/><text x="66.9379%" y="607.50"></text></g><g><title>&lt;lru::KeyWrapper&lt;K&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="66.6879%" y="581" width="0.0212%" height="15" fill="rgb(225,27,25)" fg:x="3145" fg:w="1"/><text x="66.9379%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u64&gt;::eq (1 samples, 0.02%)</title><rect x="66.6879%" y="565" width="0.0212%" height="15" fill="rgb(227,166,24)" fg:x="3145" fg:w="1"/><text x="66.9379%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (3 samples, 0.06%)</title><rect x="66.6879%" y="645" width="0.0636%" height="15" fill="rgb(208,119,11)" fg:x="3145" fg:w="3"/><text x="66.9379%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (16 samples, 0.34%)</title><rect x="66.5182%" y="693" width="0.3393%" height="15" fill="rgb(231,28,3)" fg:x="3137" fg:w="16"/><text x="66.7682%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (16 samples, 0.34%)</title><rect x="66.5182%" y="677" width="0.3393%" height="15" fill="rgb(252,63,32)" fg:x="3137" fg:w="16"/><text x="66.7682%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (16 samples, 0.34%)</title><rect x="66.5182%" y="661" width="0.3393%" height="15" fill="rgb(243,218,21)" fg:x="3137" fg:w="16"/><text x="66.7682%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.11%)</title><rect x="66.7515%" y="645" width="0.1060%" height="15" fill="rgb(238,118,47)" fg:x="3148" fg:w="5"/><text x="67.0015%" y="655.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (5 samples, 0.11%)</title><rect x="66.7515%" y="629" width="0.1060%" height="15" fill="rgb(214,132,50)" fg:x="3148" fg:w="5"/><text x="67.0015%" y="639.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.06%)</title><rect x="66.8575%" y="693" width="0.0636%" height="15" fill="rgb(241,1,29)" fg:x="3153" fg:w="3"/><text x="67.1075%" y="703.50"></text></g><g><title>&lt;lru::KeyWrapper&lt;K&gt; as core::hash::Hash&gt;::hash (3 samples, 0.06%)</title><rect x="66.8575%" y="677" width="0.0636%" height="15" fill="rgb(223,41,5)" fg:x="3153" fg:w="3"/><text x="67.1075%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (3 samples, 0.06%)</title><rect x="66.8575%" y="661" width="0.0636%" height="15" fill="rgb(213,18,30)" fg:x="3153" fg:w="3"/><text x="67.1075%" y="671.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (3 samples, 0.06%)</title><rect x="66.8575%" y="645" width="0.0636%" height="15" fill="rgb(228,200,49)" fg:x="3153" fg:w="3"/><text x="67.1075%" y="655.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (3 samples, 0.06%)</title><rect x="66.8575%" y="629" width="0.0636%" height="15" fill="rgb(243,175,12)" fg:x="3153" fg:w="3"/><text x="67.1075%" y="639.50"></text></g><g><title>ahash::operations::folded_multiply (3 samples, 0.06%)</title><rect x="66.8575%" y="613" width="0.0636%" height="15" fill="rgb(253,180,14)" fg:x="3153" fg:w="3"/><text x="67.1075%" y="623.50"></text></g><g><title>lru::LruCache&lt;K,V,S&gt;::get (32 samples, 0.68%)</title><rect x="66.3486%" y="741" width="0.6785%" height="15" fill="rgb(207,105,41)" fg:x="3129" fg:w="32"/><text x="66.5986%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (24 samples, 0.51%)</title><rect x="66.5182%" y="725" width="0.5089%" height="15" fill="rgb(207,58,42)" fg:x="3137" fg:w="24"/><text x="66.7682%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (24 samples, 0.51%)</title><rect x="66.5182%" y="709" width="0.5089%" height="15" fill="rgb(243,133,17)" fg:x="3137" fg:w="24"/><text x="66.7682%" y="719.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::parse_datetime_in_line_cached (865 samples, 18.34%)</title><rect x="48.8126%" y="757" width="18.3418%" height="15" fill="rgb(231,75,50)" fg:x="2302" fg:w="865"/><text x="49.0626%" y="767.50">s4lib::readers::syslinereader..</text></g><g><title>s4lib::data::sysline::Sysline::fileoffset_end (1 samples, 0.02%)</title><rect x="67.1544%" y="741" width="0.0212%" height="15" fill="rgb(227,96,30)" fg:x="3167" fg:w="1"/><text x="67.4044%" y="751.50"></text></g><g><title>s4lib::data::line::Line::fileoffset_end (1 samples, 0.02%)</title><rect x="67.1544%" y="725" width="0.0212%" height="15" fill="rgb(250,37,25)" fg:x="3167" fg:w="1"/><text x="67.4044%" y="735.50"></text></g><g><title>s4lib::data::line::LinePart::len (1 samples, 0.02%)</title><rect x="67.1544%" y="709" width="0.0212%" height="15" fill="rgb(222,137,3)" fg:x="3167" fg:w="1"/><text x="67.4044%" y="719.50"></text></g><g><title>s4lib::data::sysline::Sysline::fileoffset_begin (1 samples, 0.02%)</title><rect x="67.1756%" y="741" width="0.0212%" height="15" fill="rgb(208,14,46)" fg:x="3168" fg:w="1"/><text x="67.4256%" y="751.50"></text></g><g><title>rangemap::map::RangeMap&lt;K,V&gt;::adjust_touching_ranges_for_insert (1 samples, 0.02%)</title><rect x="67.1968%" y="725" width="0.0212%" height="15" fill="rgb(242,14,22)" fg:x="3169" fg:w="1"/><text x="67.4468%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_upper_bound_index (1 samples, 0.02%)</title><rect x="67.2180%" y="661" width="0.0212%" height="15" fill="rgb(221,199,33)" fg:x="3170" fg:w="1"/><text x="67.4680%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1 samples, 0.02%)</title><rect x="67.2180%" y="645" width="0.0212%" height="15" fill="rgb(233,132,38)" fg:x="3170" fg:w="1"/><text x="67.4680%" y="655.50"></text></g><g><title>&lt;rangemap::range_wrapper::RangeStartWrapper&lt;T&gt; as core::cmp::Ord&gt;::cmp (16 samples, 0.34%)</title><rect x="67.2392%" y="629" width="0.3393%" height="15" fill="rgb(213,83,29)" fg:x="3171" fg:w="16"/><text x="67.4892%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (16 samples, 0.34%)</title><rect x="67.2392%" y="613" width="0.3393%" height="15" fill="rgb(231,0,6)" fg:x="3171" fg:w="16"/><text x="67.4892%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.04%)</title><rect x="67.5785%" y="629" width="0.0424%" height="15" fill="rgb(210,50,14)" fg:x="3187" fg:w="2"/><text x="67.8285%" y="639.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.04%)</title><rect x="67.5785%" y="613" width="0.0424%" height="15" fill="rgb(236,210,2)" fg:x="3187" fg:w="2"/><text x="67.8285%" y="623.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_lower_bound_index (39 samples, 0.83%)</title><rect x="67.2392%" y="661" width="0.8270%" height="15" fill="rgb(234,13,12)" fg:x="3171" fg:w="39"/><text x="67.4892%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (39 samples, 0.83%)</title><rect x="67.2392%" y="645" width="0.8270%" height="15" fill="rgb(233,132,38)" fg:x="3171" fg:w="39"/><text x="67.4892%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (4 samples, 0.08%)</title><rect x="68.0662%" y="661" width="0.0848%" height="15" fill="rgb(220,1,36)" fg:x="3210" fg:w="4"/><text x="68.3162%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::force (4 samples, 0.08%)</title><rect x="68.0662%" y="645" width="0.0848%" height="15" fill="rgb(222,161,34)" fg:x="3210" fg:w="4"/><text x="68.3162%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::descend (3 samples, 0.06%)</title><rect x="68.1510%" y="661" width="0.0636%" height="15" fill="rgb(248,159,27)" fg:x="3214" fg:w="3"/><text x="68.4010%" y="671.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (3 samples, 0.06%)</title><rect x="68.1510%" y="645" width="0.0636%" height="15" fill="rgb(232,132,36)" fg:x="3214" fg:w="3"/><text x="68.4010%" y="655.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (3 samples, 0.06%)</title><rect x="68.1510%" y="629" width="0.0636%" height="15" fill="rgb(243,160,27)" fg:x="3214" fg:w="3"/><text x="68.4010%" y="639.50"></text></g><g><title>core::ptr::read (3 samples, 0.06%)</title><rect x="68.1510%" y="613" width="0.0636%" height="15" fill="rgb(222,157,29)" fg:x="3214" fg:w="3"/><text x="68.4010%" y="623.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree_for_bifurcation (54 samples, 1.15%)</title><rect x="67.2180%" y="677" width="1.1450%" height="15" fill="rgb(224,149,14)" fg:x="3170" fg:w="54"/><text x="67.4680%" y="687.50"></text></g><g><title>&lt;rangemap::range_wrapper::RangeStartWrapper&lt;T&gt; as core::cmp::Ord&gt;::cmp (8 samples, 0.17%)</title><rect x="68.3630%" y="629" width="0.1696%" height="15" fill="rgb(213,83,29)" fg:x="3224" fg:w="8"/><text x="68.6130%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (8 samples, 0.17%)</title><rect x="68.3630%" y="613" width="0.1696%" height="15" fill="rgb(231,0,6)" fg:x="3224" fg:w="8"/><text x="68.6130%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="68.5327%" y="629" width="0.0212%" height="15" fill="rgb(210,50,14)" fg:x="3232" fg:w="1"/><text x="68.7827%" y="639.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="68.5327%" y="613" width="0.0212%" height="15" fill="rgb(236,210,2)" fg:x="3232" fg:w="1"/><text x="68.7827%" y="623.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::find_upper_bound_edge (25 samples, 0.53%)</title><rect x="68.3630%" y="677" width="0.5301%" height="15" fill="rgb(233,228,1)" fg:x="3224" fg:w="25"/><text x="68.6130%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_upper_bound_index (25 samples, 0.53%)</title><rect x="68.3630%" y="661" width="0.5301%" height="15" fill="rgb(221,199,33)" fg:x="3224" fg:w="25"/><text x="68.6130%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (25 samples, 0.53%)</title><rect x="68.3630%" y="645" width="0.5301%" height="15" fill="rgb(233,132,38)" fg:x="3224" fg:w="25"/><text x="68.6130%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (1 samples, 0.02%)</title><rect x="68.8931%" y="677" width="0.0212%" height="15" fill="rgb(220,1,36)" fg:x="3249" fg:w="1"/><text x="69.1431%" y="687.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::force (1 samples, 0.02%)</title><rect x="68.8931%" y="661" width="0.0212%" height="15" fill="rgb(222,161,34)" fg:x="3249" fg:w="1"/><text x="69.1431%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::descend (10 samples, 0.21%)</title><rect x="68.9143%" y="677" width="0.2120%" height="15" fill="rgb(248,159,27)" fg:x="3250" fg:w="10"/><text x="69.1643%" y="687.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (10 samples, 0.21%)</title><rect x="68.9143%" y="661" width="0.2120%" height="15" fill="rgb(232,132,36)" fg:x="3250" fg:w="10"/><text x="69.1643%" y="671.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (10 samples, 0.21%)</title><rect x="68.9143%" y="645" width="0.2120%" height="15" fill="rgb(243,160,27)" fg:x="3250" fg:w="10"/><text x="69.1643%" y="655.50"></text></g><g><title>core::ptr::read (10 samples, 0.21%)</title><rect x="68.9143%" y="629" width="0.2120%" height="15" fill="rgb(222,157,29)" fg:x="3250" fg:w="10"/><text x="69.1643%" y="639.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::find_leaf_edges_spanning_range (92 samples, 1.95%)</title><rect x="67.2180%" y="693" width="1.9508%" height="15" fill="rgb(254,228,40)" fg:x="3170" fg:w="92"/><text x="67.4680%" y="703.50">a..</text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;BorrowType,K,V&gt;::none (2 samples, 0.04%)</title><rect x="69.1264%" y="677" width="0.0424%" height="15" fill="rgb(252,80,18)" fg:x="3260" fg:w="2"/><text x="69.3764%" y="687.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::range_search (94 samples, 1.99%)</title><rect x="67.2180%" y="709" width="1.9932%" height="15" fill="rgb(231,205,12)" fg:x="3170" fg:w="94"/><text x="67.4680%" y="719.50">a..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::range (101 samples, 2.14%)</title><rect x="67.2180%" y="725" width="2.1416%" height="15" fill="rgb(253,189,7)" fg:x="3170" fg:w="101"/><text x="67.4680%" y="735.50">a..</text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (2 samples, 0.04%)</title><rect x="69.3596%" y="661" width="0.0424%" height="15" fill="rgb(239,197,30)" fg:x="3271" fg:w="2"/><text x="69.6096%" y="671.50"></text></g><g><title>tcache_put (1 samples, 0.02%)</title><rect x="69.4020%" y="517" width="0.0212%" height="15" fill="rgb(227,177,28)" fg:x="3273" fg:w="1"/><text x="69.6520%" y="527.50"></text></g><g><title>_int_malloc (3 samples, 0.06%)</title><rect x="69.4020%" y="533" width="0.0636%" height="15" fill="rgb(222,219,51)" fg:x="3273" fg:w="3"/><text x="69.6520%" y="543.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (4 samples, 0.08%)</title><rect x="69.4020%" y="645" width="0.0848%" height="15" fill="rgb(254,11,13)" fg:x="3273" fg:w="4"/><text x="69.6520%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (4 samples, 0.08%)</title><rect x="69.4020%" y="629" width="0.0848%" height="15" fill="rgb(225,5,54)" fg:x="3273" fg:w="4"/><text x="69.6520%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (4 samples, 0.08%)</title><rect x="69.4020%" y="613" width="0.0848%" height="15" fill="rgb(249,175,32)" fg:x="3273" fg:w="4"/><text x="69.6520%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.08%)</title><rect x="69.4020%" y="597" width="0.0848%" height="15" fill="rgb(231,114,21)" fg:x="3273" fg:w="4"/><text x="69.6520%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.08%)</title><rect x="69.4020%" y="581" width="0.0848%" height="15" fill="rgb(238,209,2)" fg:x="3273" fg:w="4"/><text x="69.6520%" y="591.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.08%)</title><rect x="69.4020%" y="565" width="0.0848%" height="15" fill="rgb(253,135,41)" fg:x="3273" fg:w="4"/><text x="69.6520%" y="575.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.08%)</title><rect x="69.4020%" y="549" width="0.0848%" height="15" fill="rgb(206,112,53)" fg:x="3273" fg:w="4"/><text x="69.6520%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::split (5 samples, 0.11%)</title><rect x="69.4020%" y="661" width="0.1060%" height="15" fill="rgb(250,43,14)" fg:x="3273" fg:w="5"/><text x="69.6520%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::split_leaf_data (1 samples, 0.02%)</title><rect x="69.4869%" y="645" width="0.0212%" height="15" fill="rgb(207,201,2)" fg:x="3277" fg:w="1"/><text x="69.7369%" y="655.50"></text></g><g><title>alloc::collections::btree::node::move_to_slice (1 samples, 0.02%)</title><rect x="69.4869%" y="629" width="0.0212%" height="15" fill="rgb(229,148,31)" fg:x="3277" fg:w="1"/><text x="69.7369%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="69.4869%" y="613" width="0.0212%" height="15" fill="rgb(214,20,35)" fg:x="3277" fg:w="1"/><text x="69.7369%" y="623.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.02%)</title><rect x="69.4869%" y="597" width="0.0212%" height="15" fill="rgb(217,126,36)" fg:x="3277" fg:w="1"/><text x="69.7369%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (8 samples, 0.17%)</title><rect x="69.3596%" y="677" width="0.1696%" height="15" fill="rgb(208,76,5)" fg:x="3271" fg:w="8"/><text x="69.6096%" y="687.50"></text></g><g><title>alloc::collections::btree::node::InternalNode&lt;K,V&gt;::new (1 samples, 0.02%)</title><rect x="69.5293%" y="645" width="0.0212%" height="15" fill="rgb(245,98,49)" fg:x="3279" fg:w="1"/><text x="69.7793%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (1 samples, 0.02%)</title><rect x="69.5293%" y="629" width="0.0212%" height="15" fill="rgb(225,5,54)" fg:x="3279" fg:w="1"/><text x="69.7793%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (1 samples, 0.02%)</title><rect x="69.5293%" y="613" width="0.0212%" height="15" fill="rgb(249,175,32)" fg:x="3279" fg:w="1"/><text x="69.7793%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="69.5293%" y="597" width="0.0212%" height="15" fill="rgb(231,114,21)" fg:x="3279" fg:w="1"/><text x="69.7793%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="69.5293%" y="581" width="0.0212%" height="15" fill="rgb(238,209,2)" fg:x="3279" fg:w="1"/><text x="69.7793%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="69.5293%" y="565" width="0.0212%" height="15" fill="rgb(253,135,41)" fg:x="3279" fg:w="1"/><text x="69.7793%" y="575.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="69.5293%" y="549" width="0.0212%" height="15" fill="rgb(206,112,53)" fg:x="3279" fg:w="1"/><text x="69.7793%" y="559.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="69.5293%" y="533" width="0.0212%" height="15" fill="rgb(222,219,51)" fg:x="3279" fg:w="1"/><text x="69.7793%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::KV&gt;::split (2 samples, 0.04%)</title><rect x="69.5293%" y="661" width="0.0424%" height="15" fill="rgb(226,229,6)" fg:x="3279" fg:w="2"/><text x="69.7793%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::split_leaf_data (1 samples, 0.02%)</title><rect x="69.5505%" y="645" width="0.0212%" height="15" fill="rgb(207,201,2)" fg:x="3280" fg:w="1"/><text x="69.8005%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (3 samples, 0.06%)</title><rect x="69.5293%" y="677" width="0.0636%" height="15" fill="rgb(230,151,5)" fg:x="3279" fg:w="3"/><text x="69.7793%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (1 samples, 0.02%)</title><rect x="69.5717%" y="661" width="0.0212%" height="15" fill="rgb(247,138,51)" fg:x="3281" fg:w="1"/><text x="69.8217%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;::correct_childrens_parent_links (1 samples, 0.02%)</title><rect x="69.5717%" y="645" width="0.0212%" height="15" fill="rgb(221,119,48)" fg:x="3281" fg:w="1"/><text x="69.8217%" y="655.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.02%)</title><rect x="69.5717%" y="629" width="0.0212%" height="15" fill="rgb(246,165,53)" fg:x="3281" fg:w="1"/><text x="69.8217%" y="639.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.02%)</title><rect x="69.5717%" y="613" width="0.0212%" height="15" fill="rgb(226,134,37)" fg:x="3281" fg:w="1"/><text x="69.8217%" y="623.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (15 samples, 0.32%)</title><rect x="69.3596%" y="693" width="0.3181%" height="15" fill="rgb(231,80,37)" fg:x="3271" fg:w="15"/><text x="69.6096%" y="703.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (16 samples, 0.34%)</title><rect x="69.3596%" y="709" width="0.3393%" height="15" fill="rgb(217,123,23)" fg:x="3271" fg:w="16"/><text x="69.6096%" y="719.50"></text></g><g><title>&lt;rangemap::range_wrapper::RangeStartWrapper&lt;T&gt; as core::cmp::Ord&gt;::cmp (13 samples, 0.28%)</title><rect x="69.6989%" y="645" width="0.2757%" height="15" fill="rgb(213,83,29)" fg:x="3287" fg:w="13"/><text x="69.9489%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (13 samples, 0.28%)</title><rect x="69.6989%" y="629" width="0.2757%" height="15" fill="rgb(231,0,6)" fg:x="3287" fg:w="13"/><text x="69.9489%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.11%)</title><rect x="69.9746%" y="645" width="0.1060%" height="15" fill="rgb(210,50,14)" fg:x="3300" fg:w="5"/><text x="70.2246%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.11%)</title><rect x="69.9746%" y="629" width="0.1060%" height="15" fill="rgb(236,210,2)" fg:x="3300" fg:w="5"/><text x="70.2246%" y="639.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (40 samples, 0.85%)</title><rect x="69.6989%" y="677" width="0.8482%" height="15" fill="rgb(220,202,26)" fg:x="3287" fg:w="40"/><text x="69.9489%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (40 samples, 0.85%)</title><rect x="69.6989%" y="661" width="0.8482%" height="15" fill="rgb(233,132,38)" fg:x="3287" fg:w="40"/><text x="69.9489%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (1 samples, 0.02%)</title><rect x="70.5471%" y="677" width="0.0212%" height="15" fill="rgb(220,1,36)" fg:x="3327" fg:w="1"/><text x="70.7971%" y="687.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::force (1 samples, 0.02%)</title><rect x="70.5471%" y="661" width="0.0212%" height="15" fill="rgb(222,161,34)" fg:x="3327" fg:w="1"/><text x="70.7971%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (43 samples, 0.91%)</title><rect x="69.6989%" y="709" width="0.9118%" height="15" fill="rgb(219,192,38)" fg:x="3287" fg:w="43"/><text x="69.9489%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (43 samples, 0.91%)</title><rect x="69.6989%" y="693" width="0.9118%" height="15" fill="rgb(217,165,36)" fg:x="3287" fg:w="43"/><text x="69.9489%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::descend (2 samples, 0.04%)</title><rect x="70.5683%" y="677" width="0.0424%" height="15" fill="rgb(248,159,27)" fg:x="3328" fg:w="2"/><text x="70.8183%" y="687.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (2 samples, 0.04%)</title><rect x="70.5683%" y="661" width="0.0424%" height="15" fill="rgb(232,132,36)" fg:x="3328" fg:w="2"/><text x="70.8183%" y="671.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (2 samples, 0.04%)</title><rect x="70.5683%" y="645" width="0.0424%" height="15" fill="rgb(243,160,27)" fg:x="3328" fg:w="2"/><text x="70.8183%" y="655.50"></text></g><g><title>core::ptr::read (2 samples, 0.04%)</title><rect x="70.5683%" y="629" width="0.0424%" height="15" fill="rgb(222,157,29)" fg:x="3328" fg:w="2"/><text x="70.8183%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (60 samples, 1.27%)</title><rect x="69.3596%" y="725" width="1.2723%" height="15" fill="rgb(213,87,31)" fg:x="3271" fg:w="60"/><text x="69.6096%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="70.6319%" y="725" width="0.0212%" height="15" fill="rgb(243,42,17)" fg:x="3331" fg:w="1"/><text x="70.8819%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.02%)</title><rect x="70.6319%" y="709" width="0.0212%" height="15" fill="rgb(221,194,39)" fg:x="3331" fg:w="1"/><text x="70.8819%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.02%)</title><rect x="70.6319%" y="693" width="0.0212%" height="15" fill="rgb(236,204,6)" fg:x="3331" fg:w="1"/><text x="70.8819%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.02%)</title><rect x="70.6319%" y="677" width="0.0212%" height="15" fill="rgb(235,223,1)" fg:x="3331" fg:w="1"/><text x="70.8819%" y="687.50"></text></g><g><title>core::iter::traits::double_ended::DoubleEndedIterator::try_rfold (1 samples, 0.02%)</title><rect x="70.6319%" y="661" width="0.0212%" height="15" fill="rgb(234,211,29)" fg:x="3331" fg:w="1"/><text x="70.8819%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (1 samples, 0.02%)</title><rect x="70.6319%" y="645" width="0.0212%" height="15" fill="rgb(254,182,22)" fg:x="3331" fg:w="1"/><text x="70.8819%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="70.6531%" y="629" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="3332" fg:w="1"/><text x="70.9031%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="70.6531%" y="613" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="3332" fg:w="1"/><text x="70.9031%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="70.6531%" y="597" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="3332" fg:w="1"/><text x="70.9031%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="70.6531%" y="581" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="3332" fg:w="1"/><text x="70.9031%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="70.6531%" y="565" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="3332" fg:w="1"/><text x="70.9031%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="70.6531%" y="549" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="3332" fg:w="1"/><text x="70.9031%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="70.6531%" y="533" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="3332" fg:w="1"/><text x="70.9031%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="70.6531%" y="517" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="3332" fg:w="1"/><text x="70.9031%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Range&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.08%)</title><rect x="70.6531%" y="725" width="0.0848%" height="15" fill="rgb(236,1,36)" fg:x="3332" fg:w="4"/><text x="70.9031%" y="735.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_checked (4 samples, 0.08%)</title><rect x="70.6531%" y="709" width="0.0848%" height="15" fill="rgb(218,69,39)" fg:x="3332" fg:w="4"/><text x="70.9031%" y="719.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;BorrowType,K,V&gt;::perform_next_checked (4 samples, 0.08%)</title><rect x="70.6531%" y="693" width="0.0848%" height="15" fill="rgb(207,64,14)" fg:x="3332" fg:w="4"/><text x="70.9031%" y="703.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;BorrowType,K,V&gt;::is_empty (4 samples, 0.08%)</title><rect x="70.6531%" y="677" width="0.0848%" height="15" fill="rgb(216,21,47)" fg:x="3332" fg:w="4"/><text x="70.9031%" y="687.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.08%)</title><rect x="70.6531%" y="661" width="0.0848%" height="15" fill="rgb(237,219,30)" fg:x="3332" fg:w="4"/><text x="70.9031%" y="671.50"></text></g><g><title>&lt;T as core::option::SpecOptionPartialEq&gt;::eq (4 samples, 0.08%)</title><rect x="70.6531%" y="645" width="0.0848%" height="15" fill="rgb(232,161,7)" fg:x="3332" fg:w="4"/><text x="70.9031%" y="655.50"></text></g><g><title>rangemap::map::RangeMap&lt;K,V&gt;::insert (170 samples, 3.60%)</title><rect x="67.1968%" y="741" width="3.6047%" height="15" fill="rgb(216,177,54)" fg:x="3169" fg:w="170"/><text x="67.4468%" y="751.50">rang..</text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="70.8015%" y="645" width="0.0212%" height="15" fill="rgb(243,191,43)" fg:x="3339" fg:w="1"/><text x="71.0515%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (3 samples, 0.06%)</title><rect x="70.8015%" y="725" width="0.0636%" height="15" fill="rgb(209,114,30)" fg:x="3339" fg:w="3"/><text x="71.0515%" y="735.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.06%)</title><rect x="70.8015%" y="709" width="0.0636%" height="15" fill="rgb(248,129,10)" fg:x="3339" fg:w="3"/><text x="71.0515%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.06%)</title><rect x="70.8015%" y="693" width="0.0636%" height="15" fill="rgb(231,114,21)" fg:x="3339" fg:w="3"/><text x="71.0515%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.06%)</title><rect x="70.8015%" y="677" width="0.0636%" height="15" fill="rgb(238,209,2)" fg:x="3339" fg:w="3"/><text x="71.0515%" y="687.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.06%)</title><rect x="70.8015%" y="661" width="0.0636%" height="15" fill="rgb(253,135,41)" fg:x="3339" fg:w="3"/><text x="71.0515%" y="671.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.04%)</title><rect x="70.8227%" y="645" width="0.0424%" height="15" fill="rgb(206,112,53)" fg:x="3340" fg:w="2"/><text x="71.0727%" y="655.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (4 samples, 0.08%)</title><rect x="70.8015%" y="741" width="0.0848%" height="15" fill="rgb(221,10,3)" fg:x="3339" fg:w="4"/><text x="71.0515%" y="751.50"></text></g><g><title>_int_malloc (5 samples, 0.11%)</title><rect x="70.8863%" y="549" width="0.1060%" height="15" fill="rgb(222,219,51)" fg:x="3343" fg:w="5"/><text x="71.1363%" y="559.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (8 samples, 0.17%)</title><rect x="70.8863%" y="661" width="0.1696%" height="15" fill="rgb(254,11,13)" fg:x="3343" fg:w="8"/><text x="71.1363%" y="671.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (8 samples, 0.17%)</title><rect x="70.8863%" y="645" width="0.1696%" height="15" fill="rgb(225,5,54)" fg:x="3343" fg:w="8"/><text x="71.1363%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (8 samples, 0.17%)</title><rect x="70.8863%" y="629" width="0.1696%" height="15" fill="rgb(249,175,32)" fg:x="3343" fg:w="8"/><text x="71.1363%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.17%)</title><rect x="70.8863%" y="613" width="0.1696%" height="15" fill="rgb(231,114,21)" fg:x="3343" fg:w="8"/><text x="71.1363%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.17%)</title><rect x="70.8863%" y="597" width="0.1696%" height="15" fill="rgb(238,209,2)" fg:x="3343" fg:w="8"/><text x="71.1363%" y="607.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.17%)</title><rect x="70.8863%" y="581" width="0.1696%" height="15" fill="rgb(253,135,41)" fg:x="3343" fg:w="8"/><text x="71.1363%" y="591.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.17%)</title><rect x="70.8863%" y="565" width="0.1696%" height="15" fill="rgb(206,112,53)" fg:x="3343" fg:w="8"/><text x="71.1363%" y="575.50"></text></g><g><title>alloc::collections::btree::node::move_to_slice (1 samples, 0.02%)</title><rect x="71.0560%" y="645" width="0.0212%" height="15" fill="rgb(229,148,31)" fg:x="3351" fg:w="1"/><text x="71.3060%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="71.0560%" y="629" width="0.0212%" height="15" fill="rgb(214,20,35)" fg:x="3351" fg:w="1"/><text x="71.3060%" y="639.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.02%)</title><rect x="71.0560%" y="613" width="0.0212%" height="15" fill="rgb(217,126,36)" fg:x="3351" fg:w="1"/><text x="71.3060%" y="623.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::split (10 samples, 0.21%)</title><rect x="70.8863%" y="677" width="0.2120%" height="15" fill="rgb(250,43,14)" fg:x="3343" fg:w="10"/><text x="71.1363%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::split_leaf_data (2 samples, 0.04%)</title><rect x="71.0560%" y="661" width="0.0424%" height="15" fill="rgb(207,201,2)" fg:x="3351" fg:w="2"/><text x="71.3060%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (11 samples, 0.23%)</title><rect x="70.8863%" y="693" width="0.2332%" height="15" fill="rgb(208,76,5)" fg:x="3343" fg:w="11"/><text x="71.1363%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (1 samples, 0.02%)</title><rect x="71.1196%" y="693" width="0.0212%" height="15" fill="rgb(230,151,5)" fg:x="3354" fg:w="1"/><text x="71.3696%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::KV&gt;::split (1 samples, 0.02%)</title><rect x="71.1196%" y="677" width="0.0212%" height="15" fill="rgb(226,229,6)" fg:x="3354" fg:w="1"/><text x="71.3696%" y="687.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal&gt;::from_new_internal (1 samples, 0.02%)</title><rect x="71.1196%" y="661" width="0.0212%" height="15" fill="rgb(251,9,31)" fg:x="3354" fg:w="1"/><text x="71.3696%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;::correct_all_childrens_parent_links (1 samples, 0.02%)</title><rect x="71.1196%" y="645" width="0.0212%" height="15" fill="rgb(254,208,19)" fg:x="3354" fg:w="1"/><text x="71.3696%" y="655.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;::correct_childrens_parent_links (1 samples, 0.02%)</title><rect x="71.1196%" y="629" width="0.0212%" height="15" fill="rgb(221,119,48)" fg:x="3354" fg:w="1"/><text x="71.3696%" y="639.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::correct_parent_link (1 samples, 0.02%)</title><rect x="71.1196%" y="613" width="0.0212%" height="15" fill="rgb(248,76,10)" fg:x="3354" fg:w="1"/><text x="71.3696%" y="623.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::descend (1 samples, 0.02%)</title><rect x="71.1196%" y="597" width="0.0212%" height="15" fill="rgb(248,159,27)" fg:x="3354" fg:w="1"/><text x="71.3696%" y="607.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (1 samples, 0.02%)</title><rect x="71.1196%" y="581" width="0.0212%" height="15" fill="rgb(232,132,36)" fg:x="3354" fg:w="1"/><text x="71.3696%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (1 samples, 0.02%)</title><rect x="71.1196%" y="565" width="0.0212%" height="15" fill="rgb(243,160,27)" fg:x="3354" fg:w="1"/><text x="71.3696%" y="575.50"></text></g><g><title>core::ptr::read (1 samples, 0.02%)</title><rect x="71.1196%" y="549" width="0.0212%" height="15" fill="rgb(222,157,29)" fg:x="3354" fg:w="1"/><text x="71.3696%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (13 samples, 0.28%)</title><rect x="70.8863%" y="709" width="0.2757%" height="15" fill="rgb(231,80,37)" fg:x="3343" fg:w="13"/><text x="71.1363%" y="719.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (17 samples, 0.36%)</title><rect x="70.8863%" y="725" width="0.3605%" height="15" fill="rgb(217,123,23)" fg:x="3343" fg:w="17"/><text x="71.1363%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (3 samples, 0.06%)</title><rect x="71.2468%" y="661" width="0.0636%" height="15" fill="rgb(231,0,6)" fg:x="3360" fg:w="3"/><text x="71.4968%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.06%)</title><rect x="71.3104%" y="661" width="0.0636%" height="15" fill="rgb(210,50,14)" fg:x="3363" fg:w="3"/><text x="71.5604%" y="671.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.06%)</title><rect x="71.3104%" y="645" width="0.0636%" height="15" fill="rgb(236,210,2)" fg:x="3363" fg:w="3"/><text x="71.5604%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (24 samples, 0.51%)</title><rect x="70.8863%" y="741" width="0.5089%" height="15" fill="rgb(213,87,31)" fg:x="3343" fg:w="24"/><text x="71.1363%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (7 samples, 0.15%)</title><rect x="71.2468%" y="725" width="0.1484%" height="15" fill="rgb(219,192,38)" fg:x="3360" fg:w="7"/><text x="71.4968%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (7 samples, 0.15%)</title><rect x="71.2468%" y="709" width="0.1484%" height="15" fill="rgb(217,165,36)" fg:x="3360" fg:w="7"/><text x="71.4968%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (7 samples, 0.15%)</title><rect x="71.2468%" y="693" width="0.1484%" height="15" fill="rgb(220,202,26)" fg:x="3360" fg:w="7"/><text x="71.4968%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (7 samples, 0.15%)</title><rect x="71.2468%" y="677" width="0.1484%" height="15" fill="rgb(233,132,38)" fg:x="3360" fg:w="7"/><text x="71.4968%" y="687.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="71.3953%" y="741" width="0.0212%" height="15" fill="rgb(247,105,42)" fg:x="3367" fg:w="1"/><text x="71.6453%" y="751.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::insert_sysline (202 samples, 4.28%)</title><rect x="67.1544%" y="757" width="4.2833%" height="15" fill="rgb(207,59,0)" fg:x="3167" fg:w="202"/><text x="67.4044%" y="767.50">s4lib..</text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1 samples, 0.02%)</title><rect x="71.4377%" y="645" width="0.0212%" height="15" fill="rgb(233,132,38)" fg:x="3369" fg:w="1"/><text x="71.6877%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="71.4377%" y="629" width="0.0212%" height="15" fill="rgb(210,50,14)" fg:x="3369" fg:w="1"/><text x="71.6877%" y="639.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="71.4377%" y="613" width="0.0212%" height="15" fill="rgb(236,210,2)" fg:x="3369" fg:w="1"/><text x="71.6877%" y="623.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_upper_bound_index (2 samples, 0.04%)</title><rect x="71.4377%" y="661" width="0.0424%" height="15" fill="rgb(221,199,33)" fg:x="3369" fg:w="2"/><text x="71.6877%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_lower_bound_index (1 samples, 0.02%)</title><rect x="71.4801%" y="661" width="0.0212%" height="15" fill="rgb(234,13,12)" fg:x="3371" fg:w="1"/><text x="71.7301%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree_for_bifurcation (7 samples, 0.15%)</title><rect x="71.4377%" y="677" width="0.1484%" height="15" fill="rgb(224,149,14)" fg:x="3369" fg:w="7"/><text x="71.6877%" y="687.50"></text></g><g><title>&lt;(core::ops::range::Bound&lt;T&gt;,core::ops::range::Bound&lt;T&gt;) as core::ops::range::RangeBounds&lt;T&gt;&gt;::start_bound (4 samples, 0.08%)</title><rect x="71.5013%" y="661" width="0.0848%" height="15" fill="rgb(219,142,11)" fg:x="3372" fg:w="4"/><text x="71.7513%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (1 samples, 0.02%)</title><rect x="71.5861%" y="629" width="0.0212%" height="15" fill="rgb(243,28,29)" fg:x="3376" fg:w="1"/><text x="71.8361%" y="639.50"></text></g><g><title>&lt;rangemap::range_wrapper::RangeStartWrapper&lt;T&gt; as core::cmp::Ord&gt;::cmp (7 samples, 0.15%)</title><rect x="71.6073%" y="629" width="0.1484%" height="15" fill="rgb(213,83,29)" fg:x="3377" fg:w="7"/><text x="71.8573%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (7 samples, 0.15%)</title><rect x="71.6073%" y="613" width="0.1484%" height="15" fill="rgb(231,0,6)" fg:x="3377" fg:w="7"/><text x="71.8573%" y="623.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::find_upper_bound_edge (13 samples, 0.28%)</title><rect x="71.5861%" y="677" width="0.2757%" height="15" fill="rgb(233,228,1)" fg:x="3376" fg:w="13"/><text x="71.8361%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_upper_bound_index (13 samples, 0.28%)</title><rect x="71.5861%" y="661" width="0.2757%" height="15" fill="rgb(221,199,33)" fg:x="3376" fg:w="13"/><text x="71.8361%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (13 samples, 0.28%)</title><rect x="71.5861%" y="645" width="0.2757%" height="15" fill="rgb(233,132,38)" fg:x="3376" fg:w="13"/><text x="71.8361%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::descend (4 samples, 0.08%)</title><rect x="71.8617%" y="677" width="0.0848%" height="15" fill="rgb(248,159,27)" fg:x="3389" fg:w="4"/><text x="72.1117%" y="687.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (4 samples, 0.08%)</title><rect x="71.8617%" y="661" width="0.0848%" height="15" fill="rgb(232,132,36)" fg:x="3389" fg:w="4"/><text x="72.1117%" y="671.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (4 samples, 0.08%)</title><rect x="71.8617%" y="645" width="0.0848%" height="15" fill="rgb(243,160,27)" fg:x="3389" fg:w="4"/><text x="72.1117%" y="655.50"></text></g><g><title>core::ptr::read (4 samples, 0.08%)</title><rect x="71.8617%" y="629" width="0.0848%" height="15" fill="rgb(222,157,29)" fg:x="3389" fg:w="4"/><text x="72.1117%" y="639.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::find_leaf_edges_spanning_range (28 samples, 0.59%)</title><rect x="71.4377%" y="693" width="0.5937%" height="15" fill="rgb(254,228,40)" fg:x="3369" fg:w="28"/><text x="71.6877%" y="703.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::range_search (38 samples, 0.81%)</title><rect x="71.4377%" y="709" width="0.8058%" height="15" fill="rgb(231,205,12)" fg:x="3369" fg:w="38"/><text x="71.6877%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::range (55 samples, 1.17%)</title><rect x="71.4377%" y="725" width="1.1662%" height="15" fill="rgb(253,189,7)" fg:x="3369" fg:w="55"/><text x="71.6877%" y="735.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;BorrowType,K,V&gt;::is_empty (1 samples, 0.02%)</title><rect x="72.6039%" y="677" width="0.0212%" height="15" fill="rgb(216,21,47)" fg:x="3424" fg:w="1"/><text x="72.8539%" y="687.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="72.6039%" y="661" width="0.0212%" height="15" fill="rgb(237,219,30)" fg:x="3424" fg:w="1"/><text x="72.8539%" y="671.50"></text></g><g><title>&lt;T as core::option::SpecOptionPartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="72.6039%" y="645" width="0.0212%" height="15" fill="rgb(232,161,7)" fg:x="3424" fg:w="1"/><text x="72.8539%" y="655.50"></text></g><g><title>rangemap::map::RangeMap&lt;K,V&gt;::get_key_value (57 samples, 1.21%)</title><rect x="71.4377%" y="741" width="1.2087%" height="15" fill="rgb(220,117,10)" fg:x="3369" fg:w="57"/><text x="71.6877%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::Range&lt;K,V&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (2 samples, 0.04%)</title><rect x="72.6039%" y="725" width="0.0424%" height="15" fill="rgb(245,20,31)" fg:x="3424" fg:w="2"/><text x="72.8539%" y="735.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_back_checked (2 samples, 0.04%)</title><rect x="72.6039%" y="709" width="0.0424%" height="15" fill="rgb(238,49,26)" fg:x="3424" fg:w="2"/><text x="72.8539%" y="719.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;BorrowType,K,V&gt;::perform_next_back_checked (2 samples, 0.04%)</title><rect x="72.6039%" y="693" width="0.0424%" height="15" fill="rgb(253,30,25)" fg:x="3424" fg:w="2"/><text x="72.8539%" y="703.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (4 samples, 0.08%)</title><rect x="72.6463%" y="645" width="0.0848%" height="15" fill="rgb(209,34,41)" fg:x="3426" fg:w="4"/><text x="72.8963%" y="655.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (4 samples, 0.08%)</title><rect x="72.6463%" y="629" width="0.0848%" height="15" fill="rgb(241,196,44)" fg:x="3426" fg:w="4"/><text x="72.8963%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (6 samples, 0.13%)</title><rect x="72.6463%" y="693" width="0.1272%" height="15" fill="rgb(231,28,3)" fg:x="3426" fg:w="6"/><text x="72.8963%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.13%)</title><rect x="72.6463%" y="677" width="0.1272%" height="15" fill="rgb(252,63,32)" fg:x="3426" fg:w="6"/><text x="72.8963%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (6 samples, 0.13%)</title><rect x="72.6463%" y="661" width="0.1272%" height="15" fill="rgb(243,218,21)" fg:x="3426" fg:w="6"/><text x="72.8963%" y="671.50"></text></g><g><title>hashbrown::raw::h2 (2 samples, 0.04%)</title><rect x="72.7311%" y="645" width="0.0424%" height="15" fill="rgb(254,20,38)" fg:x="3430" fg:w="2"/><text x="72.9811%" y="655.50"></text></g><g><title>lru::LruCache&lt;K,V,S&gt;::get (7 samples, 0.15%)</title><rect x="72.6463%" y="741" width="0.1484%" height="15" fill="rgb(207,105,41)" fg:x="3426" fg:w="7"/><text x="72.8963%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (7 samples, 0.15%)</title><rect x="72.6463%" y="725" width="0.1484%" height="15" fill="rgb(207,58,42)" fg:x="3426" fg:w="7"/><text x="72.8963%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (7 samples, 0.15%)</title><rect x="72.6463%" y="709" width="0.1484%" height="15" fill="rgb(243,133,17)" fg:x="3426" fg:w="7"/><text x="72.8963%" y="719.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="72.7735%" y="693" width="0.0212%" height="15" fill="rgb(241,1,29)" fg:x="3432" fg:w="1"/><text x="73.0235%" y="703.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="72.7735%" y="677" width="0.0212%" height="15" fill="rgb(233,144,3)" fg:x="3432" fg:w="1"/><text x="73.0235%" y="687.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.02%)</title><rect x="72.7735%" y="661" width="0.0212%" height="15" fill="rgb(253,180,14)" fg:x="3432" fg:w="1"/><text x="73.0235%" y="671.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.02%)</title><rect x="72.7735%" y="645" width="0.0212%" height="15" fill="rgb(250,179,17)" fg:x="3432" fg:w="1"/><text x="73.0235%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (3 samples, 0.06%)</title><rect x="72.7947%" y="661" width="0.0636%" height="15" fill="rgb(231,0,6)" fg:x="3433" fg:w="3"/><text x="73.0447%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.04%)</title><rect x="72.8584%" y="661" width="0.0424%" height="15" fill="rgb(210,50,14)" fg:x="3436" fg:w="2"/><text x="73.1084%" y="671.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.04%)</title><rect x="72.8584%" y="645" width="0.0424%" height="15" fill="rgb(236,210,2)" fg:x="3436" fg:w="2"/><text x="73.1084%" y="655.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (11 samples, 0.23%)</title><rect x="72.7947%" y="693" width="0.2332%" height="15" fill="rgb(220,202,26)" fg:x="3433" fg:w="11"/><text x="73.0447%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (11 samples, 0.23%)</title><rect x="72.7947%" y="677" width="0.2332%" height="15" fill="rgb(233,132,38)" fg:x="3433" fg:w="11"/><text x="73.0447%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (5 samples, 0.11%)</title><rect x="73.0280%" y="693" width="0.1060%" height="15" fill="rgb(220,1,36)" fg:x="3444" fg:w="5"/><text x="73.2780%" y="703.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::force (5 samples, 0.11%)</title><rect x="73.0280%" y="677" width="0.1060%" height="15" fill="rgb(222,161,34)" fg:x="3444" fg:w="5"/><text x="73.2780%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (18 samples, 0.38%)</title><rect x="72.7947%" y="741" width="0.3817%" height="15" fill="rgb(222,9,43)" fg:x="3433" fg:w="18"/><text x="73.0447%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (18 samples, 0.38%)</title><rect x="72.7947%" y="725" width="0.3817%" height="15" fill="rgb(242,164,29)" fg:x="3433" fg:w="18"/><text x="73.0447%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (18 samples, 0.38%)</title><rect x="72.7947%" y="709" width="0.3817%" height="15" fill="rgb(217,165,36)" fg:x="3433" fg:w="18"/><text x="73.0447%" y="719.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::descend (2 samples, 0.04%)</title><rect x="73.1340%" y="693" width="0.0424%" height="15" fill="rgb(248,159,27)" fg:x="3449" fg:w="2"/><text x="73.3840%" y="703.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (2 samples, 0.04%)</title><rect x="73.1340%" y="677" width="0.0424%" height="15" fill="rgb(232,132,36)" fg:x="3449" fg:w="2"/><text x="73.3840%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (2 samples, 0.04%)</title><rect x="73.1340%" y="661" width="0.0424%" height="15" fill="rgb(243,160,27)" fg:x="3449" fg:w="2"/><text x="73.3840%" y="671.50"></text></g><g><title>core::ptr::read (2 samples, 0.04%)</title><rect x="73.1340%" y="645" width="0.0424%" height="15" fill="rgb(222,157,29)" fg:x="3449" fg:w="2"/><text x="73.3840%" y="655.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::check_store (86 samples, 1.82%)</title><rect x="71.4377%" y="757" width="1.8236%" height="15" fill="rgb(240,122,8)" fg:x="3369" fg:w="86"/><text x="71.6877%" y="767.50">s..</text></g><g><title>alloc::collections::btree::node::splitpoint (2 samples, 0.04%)</title><rect x="73.2612%" y="661" width="0.0424%" height="15" fill="rgb(206,145,12)" fg:x="3455" fg:w="2"/><text x="73.5112%" y="671.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="73.3036%" y="549" width="0.0212%" height="15" fill="rgb(243,191,43)" fg:x="3457" fg:w="1"/><text x="73.5536%" y="559.50"></text></g><g><title>tcache_get (2 samples, 0.04%)</title><rect x="73.3249%" y="533" width="0.0424%" height="15" fill="rgb(227,126,51)" fg:x="3458" fg:w="2"/><text x="73.5749%" y="543.50"></text></g><g><title>_int_malloc (3 samples, 0.06%)</title><rect x="73.3673%" y="533" width="0.0636%" height="15" fill="rgb(222,219,51)" fg:x="3460" fg:w="3"/><text x="73.6173%" y="543.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (9 samples, 0.19%)</title><rect x="73.3036%" y="645" width="0.1908%" height="15" fill="rgb(254,11,13)" fg:x="3457" fg:w="9"/><text x="73.5536%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (9 samples, 0.19%)</title><rect x="73.3036%" y="629" width="0.1908%" height="15" fill="rgb(225,5,54)" fg:x="3457" fg:w="9"/><text x="73.5536%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (9 samples, 0.19%)</title><rect x="73.3036%" y="613" width="0.1908%" height="15" fill="rgb(249,175,32)" fg:x="3457" fg:w="9"/><text x="73.5536%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.19%)</title><rect x="73.3036%" y="597" width="0.1908%" height="15" fill="rgb(231,114,21)" fg:x="3457" fg:w="9"/><text x="73.5536%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.19%)</title><rect x="73.3036%" y="581" width="0.1908%" height="15" fill="rgb(238,209,2)" fg:x="3457" fg:w="9"/><text x="73.5536%" y="591.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.19%)</title><rect x="73.3036%" y="565" width="0.1908%" height="15" fill="rgb(253,135,41)" fg:x="3457" fg:w="9"/><text x="73.5536%" y="575.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.17%)</title><rect x="73.3249%" y="549" width="0.1696%" height="15" fill="rgb(206,112,53)" fg:x="3458" fg:w="8"/><text x="73.5749%" y="559.50"></text></g><g><title>__memmove_avx512_unaligned_erms (3 samples, 0.06%)</title><rect x="73.4945%" y="597" width="0.0636%" height="15" fill="rgb(217,126,36)" fg:x="3466" fg:w="3"/><text x="73.7445%" y="607.50"></text></g><g><title>alloc::collections::btree::node::move_to_slice (4 samples, 0.08%)</title><rect x="73.4945%" y="629" width="0.0848%" height="15" fill="rgb(229,148,31)" fg:x="3466" fg:w="4"/><text x="73.7445%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.08%)</title><rect x="73.4945%" y="613" width="0.0848%" height="15" fill="rgb(214,20,35)" fg:x="3466" fg:w="4"/><text x="73.7445%" y="623.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::split (14 samples, 0.30%)</title><rect x="73.3036%" y="661" width="0.2969%" height="15" fill="rgb(250,43,14)" fg:x="3457" fg:w="14"/><text x="73.5536%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::split_leaf_data (5 samples, 0.11%)</title><rect x="73.4945%" y="645" width="0.1060%" height="15" fill="rgb(207,201,2)" fg:x="3466" fg:w="5"/><text x="73.7445%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (17 samples, 0.36%)</title><rect x="73.2612%" y="677" width="0.3605%" height="15" fill="rgb(208,76,5)" fg:x="3455" fg:w="17"/><text x="73.5112%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (1 samples, 0.02%)</title><rect x="73.6005%" y="661" width="0.0212%" height="15" fill="rgb(248,26,15)" fg:x="3471" fg:w="1"/><text x="73.8505%" y="671.50"></text></g><g><title>alloc::collections::btree::node::InternalNode&lt;K,V&gt;::new (1 samples, 0.02%)</title><rect x="73.6217%" y="645" width="0.0212%" height="15" fill="rgb(245,98,49)" fg:x="3472" fg:w="1"/><text x="73.8717%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (1 samples, 0.02%)</title><rect x="73.6217%" y="629" width="0.0212%" height="15" fill="rgb(225,5,54)" fg:x="3472" fg:w="1"/><text x="73.8717%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (1 samples, 0.02%)</title><rect x="73.6217%" y="613" width="0.0212%" height="15" fill="rgb(249,175,32)" fg:x="3472" fg:w="1"/><text x="73.8717%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="73.6217%" y="597" width="0.0212%" height="15" fill="rgb(231,114,21)" fg:x="3472" fg:w="1"/><text x="73.8717%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="73.6217%" y="581" width="0.0212%" height="15" fill="rgb(238,209,2)" fg:x="3472" fg:w="1"/><text x="73.8717%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="73.6217%" y="565" width="0.0212%" height="15" fill="rgb(253,135,41)" fg:x="3472" fg:w="1"/><text x="73.8717%" y="575.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="73.6217%" y="549" width="0.0212%" height="15" fill="rgb(206,112,53)" fg:x="3472" fg:w="1"/><text x="73.8717%" y="559.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="73.6217%" y="533" width="0.0212%" height="15" fill="rgb(222,219,51)" fg:x="3472" fg:w="1"/><text x="73.8717%" y="543.50"></text></g><g><title>unlink_chunk (1 samples, 0.02%)</title><rect x="73.6217%" y="517" width="0.0212%" height="15" fill="rgb(223,20,30)" fg:x="3472" fg:w="1"/><text x="73.8717%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::split_leaf_data (1 samples, 0.02%)</title><rect x="73.6429%" y="645" width="0.0212%" height="15" fill="rgb(207,201,2)" fg:x="3473" fg:w="1"/><text x="73.8929%" y="655.50"></text></g><g><title>alloc::collections::btree::node::move_to_slice (1 samples, 0.02%)</title><rect x="73.6429%" y="629" width="0.0212%" height="15" fill="rgb(229,148,31)" fg:x="3473" fg:w="1"/><text x="73.8929%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="73.6429%" y="613" width="0.0212%" height="15" fill="rgb(214,20,35)" fg:x="3473" fg:w="1"/><text x="73.8929%" y="623.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.02%)</title><rect x="73.6429%" y="597" width="0.0212%" height="15" fill="rgb(217,126,36)" fg:x="3473" fg:w="1"/><text x="73.8929%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (3 samples, 0.06%)</title><rect x="73.6217%" y="677" width="0.0636%" height="15" fill="rgb(230,151,5)" fg:x="3472" fg:w="3"/><text x="73.8717%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::KV&gt;::split (3 samples, 0.06%)</title><rect x="73.6217%" y="661" width="0.0636%" height="15" fill="rgb(226,229,6)" fg:x="3472" fg:w="3"/><text x="73.8717%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (24 samples, 0.51%)</title><rect x="73.2612%" y="693" width="0.5089%" height="15" fill="rgb(231,80,37)" fg:x="3455" fg:w="24"/><text x="73.5112%" y="703.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (43 samples, 0.91%)</title><rect x="73.2612%" y="709" width="0.9118%" height="15" fill="rgb(217,123,23)" fg:x="3455" fg:w="43"/><text x="73.5112%" y="719.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (9 samples, 0.19%)</title><rect x="74.1730%" y="645" width="0.1908%" height="15" fill="rgb(231,0,6)" fg:x="3498" fg:w="9"/><text x="74.4230%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.06%)</title><rect x="74.3639%" y="645" width="0.0636%" height="15" fill="rgb(210,50,14)" fg:x="3507" fg:w="3"/><text x="74.6139%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.06%)</title><rect x="74.3639%" y="629" width="0.0636%" height="15" fill="rgb(236,210,2)" fg:x="3507" fg:w="3"/><text x="74.6139%" y="639.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (23 samples, 0.49%)</title><rect x="74.1730%" y="677" width="0.4877%" height="15" fill="rgb(220,202,26)" fg:x="3498" fg:w="23"/><text x="74.4230%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (23 samples, 0.49%)</title><rect x="74.1730%" y="661" width="0.4877%" height="15" fill="rgb(233,132,38)" fg:x="3498" fg:w="23"/><text x="74.4230%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (3 samples, 0.06%)</title><rect x="74.6607%" y="677" width="0.0636%" height="15" fill="rgb(220,1,36)" fg:x="3521" fg:w="3"/><text x="74.9107%" y="687.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::force (3 samples, 0.06%)</title><rect x="74.6607%" y="661" width="0.0636%" height="15" fill="rgb(222,161,34)" fg:x="3521" fg:w="3"/><text x="74.9107%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (27 samples, 0.57%)</title><rect x="74.1730%" y="693" width="0.5725%" height="15" fill="rgb(217,165,36)" fg:x="3498" fg:w="27"/><text x="74.4230%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::descend (1 samples, 0.02%)</title><rect x="74.7243%" y="677" width="0.0212%" height="15" fill="rgb(248,159,27)" fg:x="3524" fg:w="1"/><text x="74.9743%" y="687.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (1 samples, 0.02%)</title><rect x="74.7243%" y="661" width="0.0212%" height="15" fill="rgb(232,132,36)" fg:x="3524" fg:w="1"/><text x="74.9743%" y="671.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (1 samples, 0.02%)</title><rect x="74.7243%" y="645" width="0.0212%" height="15" fill="rgb(243,160,27)" fg:x="3524" fg:w="1"/><text x="74.9743%" y="655.50"></text></g><g><title>core::ptr::read (1 samples, 0.02%)</title><rect x="74.7243%" y="629" width="0.0212%" height="15" fill="rgb(222,157,29)" fg:x="3524" fg:w="1"/><text x="74.9743%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (28 samples, 0.59%)</title><rect x="74.1730%" y="709" width="0.5937%" height="15" fill="rgb(219,192,38)" fg:x="3498" fg:w="28"/><text x="74.4230%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (77 samples, 1.63%)</title><rect x="73.2612%" y="725" width="1.6327%" height="15" fill="rgb(213,87,31)" fg:x="3455" fg:w="77"/><text x="73.5112%" y="735.50"></text></g><g><title>s4lib::readers::linereader::LineReader::insert_line (78 samples, 1.65%)</title><rect x="73.2612%" y="741" width="1.6539%" height="15" fill="rgb(244,220,49)" fg:x="3455" fg:w="78"/><text x="73.5112%" y="751.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="74.8940%" y="725" width="0.0212%" height="15" fill="rgb(247,105,42)" fg:x="3532" fg:w="1"/><text x="75.1440%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (9 samples, 0.19%)</title><rect x="74.9152%" y="629" width="0.1908%" height="15" fill="rgb(231,0,6)" fg:x="3533" fg:w="9"/><text x="75.1652%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.04%)</title><rect x="75.1060%" y="629" width="0.0424%" height="15" fill="rgb(210,50,14)" fg:x="3542" fg:w="2"/><text x="75.3560%" y="639.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.04%)</title><rect x="75.1060%" y="613" width="0.0424%" height="15" fill="rgb(236,210,2)" fg:x="3542" fg:w="2"/><text x="75.3560%" y="623.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (36 samples, 0.76%)</title><rect x="74.9152%" y="645" width="0.7634%" height="15" fill="rgb(233,132,38)" fg:x="3533" fg:w="36"/><text x="75.1652%" y="655.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_lower_bound_index (37 samples, 0.78%)</title><rect x="74.9152%" y="661" width="0.7846%" height="15" fill="rgb(234,13,12)" fg:x="3533" fg:w="37"/><text x="75.1652%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree_for_bifurcation (39 samples, 0.83%)</title><rect x="74.9152%" y="677" width="0.8270%" height="15" fill="rgb(224,149,14)" fg:x="3533" fg:w="39"/><text x="75.1652%" y="687.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::find_leaf_edges_spanning_range (40 samples, 0.85%)</title><rect x="74.9152%" y="693" width="0.8482%" height="15" fill="rgb(254,228,40)" fg:x="3533" fg:w="40"/><text x="75.1652%" y="703.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::range_search (42 samples, 0.89%)</title><rect x="74.9152%" y="709" width="0.8906%" height="15" fill="rgb(231,205,12)" fg:x="3533" fg:w="42"/><text x="75.1652%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::range (43 samples, 0.91%)</title><rect x="74.9152%" y="725" width="0.9118%" height="15" fill="rgb(253,189,7)" fg:x="3533" fg:w="43"/><text x="75.1652%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (6 samples, 0.13%)</title><rect x="75.8270%" y="661" width="0.1272%" height="15" fill="rgb(231,0,6)" fg:x="3576" fg:w="6"/><text x="76.0770%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (15 samples, 0.32%)</title><rect x="75.8270%" y="693" width="0.3181%" height="15" fill="rgb(220,202,26)" fg:x="3576" fg:w="15"/><text x="76.0770%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (15 samples, 0.32%)</title><rect x="75.8270%" y="677" width="0.3181%" height="15" fill="rgb(233,132,38)" fg:x="3576" fg:w="15"/><text x="76.0770%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (16 samples, 0.34%)</title><rect x="75.8270%" y="725" width="0.3393%" height="15" fill="rgb(242,164,29)" fg:x="3576" fg:w="16"/><text x="76.0770%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (16 samples, 0.34%)</title><rect x="75.8270%" y="709" width="0.3393%" height="15" fill="rgb(217,165,36)" fg:x="3576" fg:w="16"/><text x="76.0770%" y="719.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::descend (1 samples, 0.02%)</title><rect x="76.1450%" y="693" width="0.0212%" height="15" fill="rgb(248,159,27)" fg:x="3591" fg:w="1"/><text x="76.3950%" y="703.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (1 samples, 0.02%)</title><rect x="76.1450%" y="677" width="0.0212%" height="15" fill="rgb(232,132,36)" fg:x="3591" fg:w="1"/><text x="76.3950%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (1 samples, 0.02%)</title><rect x="76.1450%" y="661" width="0.0212%" height="15" fill="rgb(243,160,27)" fg:x="3591" fg:w="1"/><text x="76.3950%" y="671.50"></text></g><g><title>core::ptr::read (1 samples, 0.02%)</title><rect x="76.1450%" y="645" width="0.0212%" height="15" fill="rgb(222,157,29)" fg:x="3591" fg:w="1"/><text x="76.3950%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.02%)</title><rect x="76.1662%" y="709" width="0.0212%" height="15" fill="rgb(205,16,17)" fg:x="3592" fg:w="1"/><text x="76.4162%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.02%)</title><rect x="76.1662%" y="693" width="0.0212%" height="15" fill="rgb(233,140,51)" fg:x="3592" fg:w="1"/><text x="76.4162%" y="703.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.06%)</title><rect x="76.1662%" y="725" width="0.0636%" height="15" fill="rgb(247,105,42)" fg:x="3592" fg:w="3"/><text x="76.4162%" y="735.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;BorrowType,K,V&gt;::is_empty (1 samples, 0.02%)</title><rect x="76.2299%" y="677" width="0.0212%" height="15" fill="rgb(216,21,47)" fg:x="3595" fg:w="1"/><text x="76.4799%" y="687.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="76.2299%" y="661" width="0.0212%" height="15" fill="rgb(237,219,30)" fg:x="3595" fg:w="1"/><text x="76.4799%" y="671.50"></text></g><g><title>&lt;T as core::option::SpecOptionPartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="76.2299%" y="645" width="0.0212%" height="15" fill="rgb(232,161,7)" fg:x="3595" fg:w="1"/><text x="76.4799%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,HandleType&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="76.2299%" y="629" width="0.0212%" height="15" fill="rgb(234,4,11)" fg:x="3595" fg:w="1"/><text x="76.4799%" y="639.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::eq (1 samples, 0.02%)</title><rect x="76.2299%" y="613" width="0.0212%" height="15" fill="rgb(218,212,33)" fg:x="3595" fg:w="1"/><text x="76.4799%" y="623.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="76.2299%" y="597" width="0.0212%" height="15" fill="rgb(209,114,46)" fg:x="3595" fg:w="1"/><text x="76.4799%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (1 samples, 0.02%)</title><rect x="76.2511%" y="645" width="0.0212%" height="15" fill="rgb(207,127,11)" fg:x="3596" fg:w="1"/><text x="76.5011%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (1 samples, 0.02%)</title><rect x="76.2511%" y="629" width="0.0212%" height="15" fill="rgb(241,228,36)" fg:x="3596" fg:w="1"/><text x="76.5011%" y="639.50"></text></g><g><title>alloc::collections::btree::mem::replace (3 samples, 0.06%)</title><rect x="76.2511%" y="677" width="0.0636%" height="15" fill="rgb(225,213,27)" fg:x="3596" fg:w="3"/><text x="76.5011%" y="687.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;BorrowType,K,V&gt;::perform_next_checked::{{closure}} (3 samples, 0.06%)</title><rect x="76.2511%" y="661" width="0.0636%" height="15" fill="rgb(230,169,19)" fg:x="3596" fg:w="3"/><text x="76.5011%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Range&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.11%)</title><rect x="76.2299%" y="725" width="0.1060%" height="15" fill="rgb(236,1,36)" fg:x="3595" fg:w="5"/><text x="76.4799%" y="735.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_checked (5 samples, 0.11%)</title><rect x="76.2299%" y="709" width="0.1060%" height="15" fill="rgb(218,69,39)" fg:x="3595" fg:w="5"/><text x="76.4799%" y="719.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;BorrowType,K,V&gt;::perform_next_checked (5 samples, 0.11%)</title><rect x="76.2299%" y="693" width="0.1060%" height="15" fill="rgb(207,64,14)" fg:x="3595" fg:w="5"/><text x="76.4799%" y="703.50"></text></g><g><title>s4lib::readers::linereader::LineReader::get_linep (69 samples, 1.46%)</title><rect x="74.9152%" y="741" width="1.4631%" height="15" fill="rgb(238,59,24)" fg:x="3533" fg:w="69"/><text x="75.1652%" y="751.50"></text></g><g><title>s4lib::readers::linereader::LineReader::filesz (2 samples, 0.04%)</title><rect x="76.3783%" y="741" width="0.0424%" height="15" fill="rgb(239,189,46)" fg:x="3602" fg:w="2"/><text x="76.6283%" y="751.50"></text></g><g><title>s4lib::readers::blockreader::BlockReader::filesz (2 samples, 0.04%)</title><rect x="76.3783%" y="725" width="0.0424%" height="15" fill="rgb(228,225,28)" fg:x="3602" fg:w="2"/><text x="76.6283%" y="735.50"></text></g><g><title>s4lib::readers::blockreader::BlockReader::file_offset_at_block_offset (4 samples, 0.08%)</title><rect x="76.4207%" y="709" width="0.0848%" height="15" fill="rgb(211,123,17)" fg:x="3604" fg:w="4"/><text x="76.6707%" y="719.50"></text></g><g><title>s4lib::readers::linereader::LineReader::file_offset_at_block_offset_index (5 samples, 0.11%)</title><rect x="76.4207%" y="741" width="0.1060%" height="15" fill="rgb(254,95,39)" fg:x="3604" fg:w="5"/><text x="76.6707%" y="751.50"></text></g><g><title>s4lib::readers::blockreader::BlockReader::file_offset_at_block_offset_index (5 samples, 0.11%)</title><rect x="76.4207%" y="725" width="0.1060%" height="15" fill="rgb(212,96,24)" fg:x="3604" fg:w="5"/><text x="76.6707%" y="735.50"></text></g><g><title>lru::LruCache&lt;K,V,S&gt;::detach (7 samples, 0.15%)</title><rect x="76.5267%" y="709" width="0.1484%" height="15" fill="rgb(239,138,31)" fg:x="3609" fg:w="7"/><text x="76.7767%" y="719.50"></text></g><g><title>lru::LruCache&lt;K,V,S&gt;::attach (1 samples, 0.02%)</title><rect x="76.6751%" y="709" width="0.0212%" height="15" fill="rgb(233,79,40)" fg:x="3616" fg:w="1"/><text x="76.9251%" y="719.50"></text></g><g><title>hashbrown::raw::h2 (3 samples, 0.06%)</title><rect x="76.6964%" y="629" width="0.0636%" height="15" fill="rgb(254,20,38)" fg:x="3617" fg:w="3"/><text x="76.9464%" y="639.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (1 samples, 0.02%)</title><rect x="76.7600%" y="613" width="0.0212%" height="15" fill="rgb(206,32,25)" fg:x="3620" fg:w="1"/><text x="77.0100%" y="623.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="76.7600%" y="597" width="0.0212%" height="15" fill="rgb(250,48,27)" fg:x="3620" fg:w="1"/><text x="77.0100%" y="607.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.02%)</title><rect x="76.7600%" y="581" width="0.0212%" height="15" fill="rgb(224,197,7)" fg:x="3620" fg:w="1"/><text x="77.0100%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="76.7600%" y="565" width="0.0212%" height="15" fill="rgb(239,196,40)" fg:x="3620" fg:w="1"/><text x="77.0100%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (2 samples, 0.04%)</title><rect x="76.7600%" y="629" width="0.0424%" height="15" fill="rgb(208,119,11)" fg:x="3620" fg:w="2"/><text x="77.0100%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (6 samples, 0.13%)</title><rect x="76.6964%" y="677" width="0.1272%" height="15" fill="rgb(231,28,3)" fg:x="3617" fg:w="6"/><text x="76.9464%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.13%)</title><rect x="76.6964%" y="661" width="0.1272%" height="15" fill="rgb(252,63,32)" fg:x="3617" fg:w="6"/><text x="76.9464%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (6 samples, 0.13%)</title><rect x="76.6964%" y="645" width="0.1272%" height="15" fill="rgb(243,218,21)" fg:x="3617" fg:w="6"/><text x="76.9464%" y="655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="76.8236%" y="645" width="0.0212%" height="15" fill="rgb(223,143,42)" fg:x="3623" fg:w="1"/><text x="77.0736%" y="655.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.04%)</title><rect x="76.8236%" y="677" width="0.0424%" height="15" fill="rgb(241,1,29)" fg:x="3623" fg:w="2"/><text x="77.0736%" y="687.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (2 samples, 0.04%)</title><rect x="76.8236%" y="661" width="0.0424%" height="15" fill="rgb(233,144,3)" fg:x="3623" fg:w="2"/><text x="77.0736%" y="671.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.02%)</title><rect x="76.8448%" y="645" width="0.0212%" height="15" fill="rgb(253,180,14)" fg:x="3624" fg:w="1"/><text x="77.0948%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (9 samples, 0.19%)</title><rect x="76.6964%" y="709" width="0.1908%" height="15" fill="rgb(207,58,42)" fg:x="3617" fg:w="9"/><text x="76.9464%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (9 samples, 0.19%)</title><rect x="76.6964%" y="693" width="0.1908%" height="15" fill="rgb(243,133,17)" fg:x="3617" fg:w="9"/><text x="76.9464%" y="703.50"></text></g><g><title>lru::LruCache&lt;K,V,S&gt;::get (18 samples, 0.38%)</title><rect x="76.5267%" y="725" width="0.3817%" height="15" fill="rgb(207,105,41)" fg:x="3609" fg:w="18"/><text x="76.7767%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (13 samples, 0.28%)</title><rect x="76.9084%" y="709" width="0.2757%" height="15" fill="rgb(205,16,17)" fg:x="3627" fg:w="13"/><text x="77.1584%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_add (13 samples, 0.28%)</title><rect x="76.9084%" y="693" width="0.2757%" height="15" fill="rgb(233,140,51)" fg:x="3627" fg:w="13"/><text x="77.1584%" y="703.50"></text></g><g><title>s4lib::readers::linereader::LineReader::check_store_LRU (33 samples, 0.70%)</title><rect x="76.5267%" y="741" width="0.6997%" height="15" fill="rgb(208,26,7)" fg:x="3609" fg:w="33"/><text x="76.7767%" y="751.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (15 samples, 0.32%)</title><rect x="76.9084%" y="725" width="0.3181%" height="15" fill="rgb(247,105,42)" fg:x="3627" fg:w="15"/><text x="77.1584%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (6 samples, 0.13%)</title><rect x="77.2265%" y="613" width="0.1272%" height="15" fill="rgb(231,0,6)" fg:x="3642" fg:w="6"/><text x="77.4765%" y="623.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (2 samples, 0.04%)</title><rect x="77.3537%" y="613" width="0.0424%" height="15" fill="rgb(243,28,29)" fg:x="3648" fg:w="2"/><text x="77.6037%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.08%)</title><rect x="77.3961%" y="613" width="0.0848%" height="15" fill="rgb(210,50,14)" fg:x="3650" fg:w="4"/><text x="77.6461%" y="623.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.08%)</title><rect x="77.3961%" y="597" width="0.0848%" height="15" fill="rgb(236,210,2)" fg:x="3650" fg:w="4"/><text x="77.6461%" y="607.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_lower_bound_index (43 samples, 0.91%)</title><rect x="77.2265%" y="645" width="0.9118%" height="15" fill="rgb(234,13,12)" fg:x="3642" fg:w="43"/><text x="77.4765%" y="655.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (43 samples, 0.91%)</title><rect x="77.2265%" y="629" width="0.9118%" height="15" fill="rgb(233,132,38)" fg:x="3642" fg:w="43"/><text x="77.4765%" y="639.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::find_leaf_edges_spanning_range (50 samples, 1.06%)</title><rect x="77.2265%" y="677" width="1.0602%" height="15" fill="rgb(254,228,40)" fg:x="3642" fg:w="50"/><text x="77.4765%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree_for_bifurcation (50 samples, 1.06%)</title><rect x="77.2265%" y="661" width="1.0602%" height="15" fill="rgb(224,149,14)" fg:x="3642" fg:w="50"/><text x="77.4765%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::descend (7 samples, 0.15%)</title><rect x="78.1383%" y="645" width="0.1484%" height="15" fill="rgb(248,159,27)" fg:x="3685" fg:w="7"/><text x="78.3883%" y="655.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (7 samples, 0.15%)</title><rect x="78.1383%" y="629" width="0.1484%" height="15" fill="rgb(232,132,36)" fg:x="3685" fg:w="7"/><text x="78.3883%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (7 samples, 0.15%)</title><rect x="78.1383%" y="613" width="0.1484%" height="15" fill="rgb(243,160,27)" fg:x="3685" fg:w="7"/><text x="78.3883%" y="623.50"></text></g><g><title>core::ptr::read (7 samples, 0.15%)</title><rect x="78.1383%" y="597" width="0.1484%" height="15" fill="rgb(222,157,29)" fg:x="3685" fg:w="7"/><text x="78.3883%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::range_search (52 samples, 1.10%)</title><rect x="77.2265%" y="693" width="1.1026%" height="15" fill="rgb(231,205,12)" fg:x="3642" fg:w="52"/><text x="77.4765%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::range (56 samples, 1.19%)</title><rect x="77.2265%" y="709" width="1.1874%" height="15" fill="rgb(253,189,7)" fg:x="3642" fg:w="56"/><text x="77.4765%" y="719.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;BorrowType,K,V&gt;::is_empty (6 samples, 0.13%)</title><rect x="78.4139%" y="661" width="0.1272%" height="15" fill="rgb(216,21,47)" fg:x="3698" fg:w="6"/><text x="78.6639%" y="671.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.13%)</title><rect x="78.4139%" y="645" width="0.1272%" height="15" fill="rgb(237,219,30)" fg:x="3698" fg:w="6"/><text x="78.6639%" y="655.50"></text></g><g><title>&lt;T as core::option::SpecOptionPartialEq&gt;::eq (6 samples, 0.13%)</title><rect x="78.4139%" y="629" width="0.1272%" height="15" fill="rgb(232,161,7)" fg:x="3698" fg:w="6"/><text x="78.6639%" y="639.50"></text></g><g><title>s4lib::readers::linereader::LineReader::get_linep (63 samples, 1.34%)</title><rect x="77.2265%" y="725" width="1.3359%" height="15" fill="rgb(238,59,24)" fg:x="3642" fg:w="63"/><text x="77.4765%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::Range&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.15%)</title><rect x="78.4139%" y="709" width="0.1484%" height="15" fill="rgb(236,1,36)" fg:x="3698" fg:w="7"/><text x="78.6639%" y="719.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_checked (7 samples, 0.15%)</title><rect x="78.4139%" y="693" width="0.1484%" height="15" fill="rgb(218,69,39)" fg:x="3698" fg:w="7"/><text x="78.6639%" y="703.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;BorrowType,K,V&gt;::perform_next_checked (7 samples, 0.15%)</title><rect x="78.4139%" y="677" width="0.1484%" height="15" fill="rgb(207,64,14)" fg:x="3698" fg:w="7"/><text x="78.6639%" y="687.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (6 samples, 0.13%)</title><rect x="78.5623%" y="645" width="0.1272%" height="15" fill="rgb(231,0,6)" fg:x="3705" fg:w="6"/><text x="78.8123%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="78.6896%" y="645" width="0.0212%" height="15" fill="rgb(210,50,14)" fg:x="3711" fg:w="1"/><text x="78.9396%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="78.6896%" y="629" width="0.0212%" height="15" fill="rgb(236,210,2)" fg:x="3711" fg:w="1"/><text x="78.9396%" y="639.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (13 samples, 0.28%)</title><rect x="78.5623%" y="677" width="0.2757%" height="15" fill="rgb(220,202,26)" fg:x="3705" fg:w="13"/><text x="78.8123%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (13 samples, 0.28%)</title><rect x="78.5623%" y="661" width="0.2757%" height="15" fill="rgb(233,132,38)" fg:x="3705" fg:w="13"/><text x="78.8123%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (4 samples, 0.08%)</title><rect x="78.8380%" y="677" width="0.0848%" height="15" fill="rgb(220,1,36)" fg:x="3718" fg:w="4"/><text x="79.0880%" y="687.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::force (4 samples, 0.08%)</title><rect x="78.8380%" y="661" width="0.0848%" height="15" fill="rgb(222,161,34)" fg:x="3718" fg:w="4"/><text x="79.0880%" y="671.50"></text></g><g><title>s4lib::readers::linereader::LineReader::check_store (81 samples, 1.72%)</title><rect x="77.2265%" y="741" width="1.7176%" height="15" fill="rgb(215,197,25)" fg:x="3642" fg:w="81"/><text x="77.4765%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (18 samples, 0.38%)</title><rect x="78.5623%" y="725" width="0.3817%" height="15" fill="rgb(222,9,43)" fg:x="3705" fg:w="18"/><text x="78.8123%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (18 samples, 0.38%)</title><rect x="78.5623%" y="709" width="0.3817%" height="15" fill="rgb(242,164,29)" fg:x="3705" fg:w="18"/><text x="78.8123%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (18 samples, 0.38%)</title><rect x="78.5623%" y="693" width="0.3817%" height="15" fill="rgb(217,165,36)" fg:x="3705" fg:w="18"/><text x="78.8123%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::descend (1 samples, 0.02%)</title><rect x="78.9228%" y="677" width="0.0212%" height="15" fill="rgb(248,159,27)" fg:x="3722" fg:w="1"/><text x="79.1728%" y="687.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (1 samples, 0.02%)</title><rect x="78.9228%" y="661" width="0.0212%" height="15" fill="rgb(232,132,36)" fg:x="3722" fg:w="1"/><text x="79.1728%" y="671.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (1 samples, 0.02%)</title><rect x="78.9228%" y="645" width="0.0212%" height="15" fill="rgb(243,160,27)" fg:x="3722" fg:w="1"/><text x="79.1728%" y="655.50"></text></g><g><title>core::ptr::read (1 samples, 0.02%)</title><rect x="78.9228%" y="629" width="0.0212%" height="15" fill="rgb(222,157,29)" fg:x="3722" fg:w="1"/><text x="79.1728%" y="639.50"></text></g><g><title>s4lib::readers::linereader::LineReader::blockoffset_last (1 samples, 0.02%)</title><rect x="78.9440%" y="741" width="0.0212%" height="15" fill="rgb(238,25,50)" fg:x="3723" fg:w="1"/><text x="79.1940%" y="751.50"></text></g><g><title>s4lib::readers::blockreader::BlockReader::blockoffset_last (1 samples, 0.02%)</title><rect x="78.9440%" y="725" width="0.0212%" height="15" fill="rgb(212,28,18)" fg:x="3723" fg:w="1"/><text x="79.1940%" y="735.50"></text></g><g><title>s4lib::readers::blockreader::BlockReader::count_blocks (1 samples, 0.02%)</title><rect x="78.9440%" y="709" width="0.0212%" height="15" fill="rgb(218,200,44)" fg:x="3723" fg:w="1"/><text x="79.1940%" y="719.50"></text></g><g><title>s4lib::readers::linereader::LineReader::block_offset_at_file_offset (1 samples, 0.02%)</title><rect x="78.9652%" y="741" width="0.0212%" height="15" fill="rgb(219,1,9)" fg:x="3724" fg:w="1"/><text x="79.2152%" y="751.50"></text></g><g><title>s4lib::readers::blockreader::BlockReader::block_offset_at_file_offset (1 samples, 0.02%)</title><rect x="78.9652%" y="725" width="0.0212%" height="15" fill="rgb(245,212,10)" fg:x="3724" fg:w="1"/><text x="79.2152%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="78.9864%" y="325" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="3725" fg:w="1"/><text x="79.2364%" y="335.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.08%)</title><rect x="78.9864%" y="341" width="0.0848%" height="15" fill="rgb(210,204,4)" fg:x="3725" fg:w="4"/><text x="79.2364%" y="351.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="78.9864%" y="373" width="0.1272%" height="15" fill="rgb(210,204,4)" fg:x="3725" fg:w="6"/><text x="79.2364%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="78.9864%" y="357" width="0.1272%" height="15" fill="rgb(210,204,4)" fg:x="3725" fg:w="6"/><text x="79.2364%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 0.21%)</title><rect x="78.9864%" y="405" width="0.2120%" height="15" fill="rgb(210,204,4)" fg:x="3725" fg:w="10"/><text x="79.2364%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 0.21%)</title><rect x="78.9864%" y="389" width="0.2120%" height="15" fill="rgb(210,204,4)" fg:x="3725" fg:w="10"/><text x="79.2364%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.23%)</title><rect x="78.9864%" y="437" width="0.2332%" height="15" fill="rgb(210,204,4)" fg:x="3725" fg:w="11"/><text x="79.2364%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.23%)</title><rect x="78.9864%" y="421" width="0.2332%" height="15" fill="rgb(210,204,4)" fg:x="3725" fg:w="11"/><text x="79.2364%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (12 samples, 0.25%)</title><rect x="78.9864%" y="453" width="0.2545%" height="15" fill="rgb(210,204,4)" fg:x="3725" fg:w="12"/><text x="79.2364%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (29 samples, 0.61%)</title><rect x="78.9864%" y="469" width="0.6149%" height="15" fill="rgb(210,204,4)" fg:x="3725" fg:w="29"/><text x="79.2364%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (30 samples, 0.64%)</title><rect x="78.9864%" y="485" width="0.6361%" height="15" fill="rgb(210,204,4)" fg:x="3725" fg:w="30"/><text x="79.2364%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (31 samples, 0.66%)</title><rect x="78.9864%" y="501" width="0.6573%" height="15" fill="rgb(210,204,4)" fg:x="3725" fg:w="31"/><text x="79.2364%" y="511.50"></text></g><g><title>std::io::Read::read_to_end (35 samples, 0.74%)</title><rect x="78.9864%" y="709" width="0.7422%" height="15" fill="rgb(223,102,22)" fg:x="3725" fg:w="35"/><text x="79.2364%" y="719.50"></text></g><g><title>std::io::default_read_to_end (35 samples, 0.74%)</title><rect x="78.9864%" y="693" width="0.7422%" height="15" fill="rgb(213,103,49)" fg:x="3725" fg:w="35"/><text x="79.2364%" y="703.50"></text></g><g><title>&lt;std::io::Take&lt;T&gt; as std::io::Read&gt;::read_buf (35 samples, 0.74%)</title><rect x="78.9864%" y="677" width="0.7422%" height="15" fill="rgb(217,31,20)" fg:x="3725" fg:w="35"/><text x="79.2364%" y="687.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Read&gt;::read_buf (35 samples, 0.74%)</title><rect x="78.9864%" y="661" width="0.7422%" height="15" fill="rgb(253,203,2)" fg:x="3725" fg:w="35"/><text x="79.2364%" y="671.50"></text></g><g><title>std::sys::unix::fs::File::read_buf (35 samples, 0.74%)</title><rect x="78.9864%" y="645" width="0.7422%" height="15" fill="rgb(240,23,8)" fg:x="3725" fg:w="35"/><text x="79.2364%" y="655.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read_buf (35 samples, 0.74%)</title><rect x="78.9864%" y="629" width="0.7422%" height="15" fill="rgb(233,98,11)" fg:x="3725" fg:w="35"/><text x="79.2364%" y="639.50"></text></g><g><title>__GI___libc_read (35 samples, 0.74%)</title><rect x="78.9864%" y="613" width="0.7422%" height="15" fill="rgb(206,204,24)" fg:x="3725" fg:w="35"/><text x="79.2364%" y="623.50"></text></g><g><title>__GI___libc_read (35 samples, 0.74%)</title><rect x="78.9864%" y="597" width="0.7422%" height="15" fill="rgb(206,204,24)" fg:x="3725" fg:w="35"/><text x="79.2364%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (35 samples, 0.74%)</title><rect x="78.9864%" y="581" width="0.7422%" height="15" fill="rgb(210,204,4)" fg:x="3725" fg:w="35"/><text x="79.2364%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (35 samples, 0.74%)</title><rect x="78.9864%" y="565" width="0.7422%" height="15" fill="rgb(210,204,4)" fg:x="3725" fg:w="35"/><text x="79.2364%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (35 samples, 0.74%)</title><rect x="78.9864%" y="549" width="0.7422%" height="15" fill="rgb(210,204,4)" fg:x="3725" fg:w="35"/><text x="79.2364%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (35 samples, 0.74%)</title><rect x="78.9864%" y="533" width="0.7422%" height="15" fill="rgb(210,204,4)" fg:x="3725" fg:w="35"/><text x="79.2364%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (35 samples, 0.74%)</title><rect x="78.9864%" y="517" width="0.7422%" height="15" fill="rgb(210,204,4)" fg:x="3725" fg:w="35"/><text x="79.2364%" y="527.50"></text></g><g><title>sysmalloc (1 samples, 0.02%)</title><rect x="79.7286%" y="565" width="0.0212%" height="15" fill="rgb(237,64,10)" fg:x="3760" fg:w="1"/><text x="79.9786%" y="575.50"></text></g><g><title>grow_heap (1 samples, 0.02%)</title><rect x="79.7286%" y="549" width="0.0212%" height="15" fill="rgb(231,135,3)" fg:x="3760" fg:w="1"/><text x="79.9786%" y="559.50"></text></g><g><title>__GI___mprotect (1 samples, 0.02%)</title><rect x="79.7286%" y="533" width="0.0212%" height="15" fill="rgb(209,155,30)" fg:x="3760" fg:w="1"/><text x="79.9786%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="79.7286%" y="517" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="3760" fg:w="1"/><text x="79.9786%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="79.7286%" y="501" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="3760" fg:w="1"/><text x="79.9786%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="79.7286%" y="485" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="3760" fg:w="1"/><text x="79.9786%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="79.7286%" y="469" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="3760" fg:w="1"/><text x="79.9786%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="79.7286%" y="453" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="3760" fg:w="1"/><text x="79.9786%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="79.7286%" y="437" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="3760" fg:w="1"/><text x="79.9786%" y="447.50"></text></g><g><title>malloc_consolidate (2 samples, 0.04%)</title><rect x="79.7498%" y="565" width="0.0424%" height="15" fill="rgb(228,194,39)" fg:x="3761" fg:w="2"/><text x="79.9998%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.08%)</title><rect x="79.7286%" y="709" width="0.0848%" height="15" fill="rgb(253,154,22)" fg:x="3760" fg:w="4"/><text x="79.9786%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.08%)</title><rect x="79.7286%" y="693" width="0.0848%" height="15" fill="rgb(249,207,12)" fg:x="3760" fg:w="4"/><text x="79.9786%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.08%)</title><rect x="79.7286%" y="677" width="0.0848%" height="15" fill="rgb(224,194,14)" fg:x="3760" fg:w="4"/><text x="79.9786%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.08%)</title><rect x="79.7286%" y="661" width="0.0848%" height="15" fill="rgb(227,204,5)" fg:x="3760" fg:w="4"/><text x="79.9786%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.08%)</title><rect x="79.7286%" y="645" width="0.0848%" height="15" fill="rgb(231,114,21)" fg:x="3760" fg:w="4"/><text x="79.9786%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.08%)</title><rect x="79.7286%" y="629" width="0.0848%" height="15" fill="rgb(238,209,2)" fg:x="3760" fg:w="4"/><text x="79.9786%" y="639.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.08%)</title><rect x="79.7286%" y="613" width="0.0848%" height="15" fill="rgb(253,135,41)" fg:x="3760" fg:w="4"/><text x="79.9786%" y="623.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.08%)</title><rect x="79.7286%" y="597" width="0.0848%" height="15" fill="rgb(206,112,53)" fg:x="3760" fg:w="4"/><text x="79.9786%" y="607.50"></text></g><g><title>_int_malloc (4 samples, 0.08%)</title><rect x="79.7286%" y="581" width="0.0848%" height="15" fill="rgb(222,219,51)" fg:x="3760" fg:w="4"/><text x="79.9786%" y="591.50"></text></g><g><title>s4lib::readers::blockreader::BlockReader::read_block_File (40 samples, 0.85%)</title><rect x="78.9864%" y="725" width="0.8482%" height="15" fill="rgb(225,77,14)" fg:x="3725" fg:w="40"/><text x="79.2364%" y="735.50"></text></g><g><title>&lt;std::fs::File as std::io::Seek&gt;::seek (1 samples, 0.02%)</title><rect x="79.8134%" y="709" width="0.0212%" height="15" fill="rgb(215,206,30)" fg:x="3764" fg:w="1"/><text x="80.0634%" y="719.50"></text></g><g><title>std::sys::unix::fs::File::seek (1 samples, 0.02%)</title><rect x="79.8134%" y="693" width="0.0212%" height="15" fill="rgb(218,15,12)" fg:x="3764" fg:w="1"/><text x="80.0634%" y="703.50"></text></g><g><title>__lseek64 (1 samples, 0.02%)</title><rect x="79.8134%" y="677" width="0.0212%" height="15" fill="rgb(209,121,14)" fg:x="3764" fg:w="1"/><text x="80.0634%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="79.8134%" y="661" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="3764" fg:w="1"/><text x="80.0634%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="79.8134%" y="645" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="3764" fg:w="1"/><text x="80.0634%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="79.8134%" y="629" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="3764" fg:w="1"/><text x="80.0634%" y="639.50"></text></g><g><title>s4lib::readers::blockreader::BlockReader::count_blocks (1 samples, 0.02%)</title><rect x="79.8346%" y="709" width="0.0212%" height="15" fill="rgb(218,200,44)" fg:x="3765" fg:w="1"/><text x="80.0846%" y="719.50"></text></g><g><title>s4lib::readers::blockreader::BlockReader::blockoffset_last (2 samples, 0.04%)</title><rect x="79.8346%" y="725" width="0.0424%" height="15" fill="rgb(212,28,18)" fg:x="3765" fg:w="2"/><text x="80.0846%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (2 samples, 0.04%)</title><rect x="79.8770%" y="677" width="0.0424%" height="15" fill="rgb(231,28,3)" fg:x="3767" fg:w="2"/><text x="80.1270%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.04%)</title><rect x="79.8770%" y="661" width="0.0424%" height="15" fill="rgb(252,63,32)" fg:x="3767" fg:w="2"/><text x="80.1270%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (2 samples, 0.04%)</title><rect x="79.8770%" y="645" width="0.0424%" height="15" fill="rgb(243,218,21)" fg:x="3767" fg:w="2"/><text x="80.1270%" y="655.50"></text></g><g><title>hashbrown::raw::h2 (2 samples, 0.04%)</title><rect x="79.8770%" y="629" width="0.0424%" height="15" fill="rgb(254,20,38)" fg:x="3767" fg:w="2"/><text x="80.1270%" y="639.50"></text></g><g><title>lru::LruCache&lt;K,V,S&gt;::get (3 samples, 0.06%)</title><rect x="79.8770%" y="725" width="0.0636%" height="15" fill="rgb(207,105,41)" fg:x="3767" fg:w="3"/><text x="80.1270%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (3 samples, 0.06%)</title><rect x="79.8770%" y="709" width="0.0636%" height="15" fill="rgb(207,58,42)" fg:x="3767" fg:w="3"/><text x="80.1270%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (3 samples, 0.06%)</title><rect x="79.8770%" y="693" width="0.0636%" height="15" fill="rgb(243,133,17)" fg:x="3767" fg:w="3"/><text x="80.1270%" y="703.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="79.9194%" y="677" width="0.0212%" height="15" fill="rgb(241,1,29)" fg:x="3769" fg:w="1"/><text x="80.1694%" y="687.50"></text></g><g><title>&lt;lru::KeyWrapper&lt;K&gt; as core::hash::Hash&gt;::hash (1 samples, 0.02%)</title><rect x="79.9194%" y="661" width="0.0212%" height="15" fill="rgb(223,41,5)" fg:x="3769" fg:w="1"/><text x="80.1694%" y="671.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (1 samples, 0.02%)</title><rect x="79.9194%" y="645" width="0.0212%" height="15" fill="rgb(213,18,30)" fg:x="3769" fg:w="1"/><text x="80.1694%" y="655.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (1 samples, 0.02%)</title><rect x="79.9194%" y="629" width="0.0212%" height="15" fill="rgb(228,200,49)" fg:x="3769" fg:w="1"/><text x="80.1694%" y="639.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1 samples, 0.02%)</title><rect x="79.9194%" y="613" width="0.0212%" height="15" fill="rgb(243,175,12)" fg:x="3769" fg:w="1"/><text x="80.1694%" y="623.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T,A&gt;::contains (1 samples, 0.02%)</title><rect x="79.9406%" y="725" width="0.0212%" height="15" fill="rgb(222,27,32)" fg:x="3770" fg:w="1"/><text x="80.1906%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (1 samples, 0.02%)</title><rect x="79.9406%" y="709" width="0.0212%" height="15" fill="rgb(222,9,43)" fg:x="3770" fg:w="1"/><text x="80.1906%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (1 samples, 0.02%)</title><rect x="79.9406%" y="693" width="0.0212%" height="15" fill="rgb(242,164,29)" fg:x="3770" fg:w="1"/><text x="80.1906%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1 samples, 0.02%)</title><rect x="79.9406%" y="677" width="0.0212%" height="15" fill="rgb(217,165,36)" fg:x="3770" fg:w="1"/><text x="80.1906%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1 samples, 0.02%)</title><rect x="79.9406%" y="661" width="0.0212%" height="15" fill="rgb(220,202,26)" fg:x="3770" fg:w="1"/><text x="80.1906%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1 samples, 0.02%)</title><rect x="79.9406%" y="645" width="0.0212%" height="15" fill="rgb(233,132,38)" fg:x="3770" fg:w="1"/><text x="80.1906%" y="655.50"></text></g><g><title>s4lib::readers::blockreader::BlockReader::read_block (64 samples, 1.36%)</title><rect x="78.9864%" y="741" width="1.3571%" height="15" fill="rgb(226,163,28)" fg:x="3725" fg:w="64"/><text x="79.2364%" y="751.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (18 samples, 0.38%)</title><rect x="79.9618%" y="725" width="0.3817%" height="15" fill="rgb(247,105,42)" fg:x="3771" fg:w="18"/><text x="80.2118%" y="735.50"></text></g><g><title>s4lib::data::line::LinePart::new (15 samples, 0.32%)</title><rect x="80.3435%" y="741" width="0.3181%" height="15" fill="rgb(208,153,11)" fg:x="3789" fg:w="15"/><text x="80.5935%" y="751.50"></text></g><g><title>core::ptr::write (4 samples, 0.08%)</title><rect x="80.6616%" y="709" width="0.0848%" height="15" fill="rgb(209,143,44)" fg:x="3804" fg:w="4"/><text x="80.9116%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (5 samples, 0.11%)</title><rect x="80.6616%" y="725" width="0.1060%" height="15" fill="rgb(222,129,7)" fg:x="3804" fg:w="5"/><text x="80.9116%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="80.7464%" y="709" width="0.0212%" height="15" fill="rgb(212,159,3)" fg:x="3808" fg:w="1"/><text x="80.9964%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="80.7464%" y="693" width="0.0212%" height="15" fill="rgb(231,142,39)" fg:x="3808" fg:w="1"/><text x="80.9964%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="80.7464%" y="677" width="0.0212%" height="15" fill="rgb(249,2,22)" fg:x="3808" fg:w="1"/><text x="80.9964%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="80.7464%" y="661" width="0.0212%" height="15" fill="rgb(254,53,35)" fg:x="3808" fg:w="1"/><text x="80.9964%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="80.7464%" y="645" width="0.0212%" height="15" fill="rgb(237,133,22)" fg:x="3808" fg:w="1"/><text x="80.9964%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="80.7464%" y="629" width="0.0212%" height="15" fill="rgb(237,156,49)" fg:x="3808" fg:w="1"/><text x="80.9964%" y="639.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="80.7464%" y="613" width="0.0212%" height="15" fill="rgb(214,150,36)" fg:x="3808" fg:w="1"/><text x="80.9964%" y="623.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="80.7464%" y="597" width="0.0212%" height="15" fill="rgb(254,47,34)" fg:x="3808" fg:w="1"/><text x="80.9964%" y="607.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.02%)</title><rect x="80.7464%" y="581" width="0.0212%" height="15" fill="rgb(254,73,4)" fg:x="3808" fg:w="1"/><text x="80.9964%" y="591.50"></text></g><g><title>_int_realloc (1 samples, 0.02%)</title><rect x="80.7464%" y="565" width="0.0212%" height="15" fill="rgb(231,75,41)" fg:x="3808" fg:w="1"/><text x="80.9964%" y="575.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="80.7464%" y="549" width="0.0212%" height="15" fill="rgb(222,219,51)" fg:x="3808" fg:w="1"/><text x="80.9964%" y="559.50"></text></g><g><title>s4lib::data::line::Line::prepend (8 samples, 0.17%)</title><rect x="80.6616%" y="741" width="0.1696%" height="15" fill="rgb(233,15,35)" fg:x="3804" fg:w="8"/><text x="80.9116%" y="751.50"></text></g><g><title>__rust_alloc (2 samples, 0.04%)</title><rect x="80.8312%" y="597" width="0.0424%" height="15" fill="rgb(243,191,43)" fg:x="3812" fg:w="2"/><text x="81.0812%" y="607.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.02%)</title><rect x="80.8736%" y="581" width="0.0212%" height="15" fill="rgb(221,138,53)" fg:x="3814" fg:w="1"/><text x="81.1236%" y="591.50"></text></g><g><title>__rdl_alloc (8 samples, 0.17%)</title><rect x="80.8736%" y="597" width="0.1696%" height="15" fill="rgb(241,201,43)" fg:x="3814" fg:w="8"/><text x="81.1236%" y="607.50"></text></g><g><title>tcache_get (1 samples, 0.02%)</title><rect x="81.0433%" y="581" width="0.0212%" height="15" fill="rgb(227,126,51)" fg:x="3822" fg:w="1"/><text x="81.2933%" y="591.50"></text></g><g><title>checked_request2size (4 samples, 0.08%)</title><rect x="81.0645%" y="581" width="0.0848%" height="15" fill="rgb(236,198,42)" fg:x="3823" fg:w="4"/><text x="81.3145%" y="591.50"></text></g><g><title>tcache_put (4 samples, 0.08%)</title><rect x="81.1493%" y="565" width="0.0848%" height="15" fill="rgb(227,177,28)" fg:x="3827" fg:w="4"/><text x="81.3993%" y="575.50"></text></g><g><title>_int_malloc (6 samples, 0.13%)</title><rect x="81.1493%" y="581" width="0.1272%" height="15" fill="rgb(222,219,51)" fg:x="3827" fg:w="6"/><text x="81.3993%" y="591.50"></text></g><g><title>s4lib::data::line::Line::new (35 samples, 0.74%)</title><rect x="80.8312%" y="741" width="0.7422%" height="15" fill="rgb(249,127,27)" fg:x="3812" fg:w="35"/><text x="81.0812%" y="751.50"></text></g><g><title>&lt;s4lib::data::line::Line as core::default::Default&gt;::default (35 samples, 0.74%)</title><rect x="80.8312%" y="725" width="0.7422%" height="15" fill="rgb(214,47,30)" fg:x="3812" fg:w="35"/><text x="81.0812%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (35 samples, 0.74%)</title><rect x="80.8312%" y="709" width="0.7422%" height="15" fill="rgb(253,154,22)" fg:x="3812" fg:w="35"/><text x="81.0812%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (35 samples, 0.74%)</title><rect x="80.8312%" y="693" width="0.7422%" height="15" fill="rgb(249,207,12)" fg:x="3812" fg:w="35"/><text x="81.0812%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (35 samples, 0.74%)</title><rect x="80.8312%" y="677" width="0.7422%" height="15" fill="rgb(224,194,14)" fg:x="3812" fg:w="35"/><text x="81.0812%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (35 samples, 0.74%)</title><rect x="80.8312%" y="661" width="0.7422%" height="15" fill="rgb(227,204,5)" fg:x="3812" fg:w="35"/><text x="81.0812%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (35 samples, 0.74%)</title><rect x="80.8312%" y="645" width="0.7422%" height="15" fill="rgb(231,114,21)" fg:x="3812" fg:w="35"/><text x="81.0812%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (35 samples, 0.74%)</title><rect x="80.8312%" y="629" width="0.7422%" height="15" fill="rgb(238,209,2)" fg:x="3812" fg:w="35"/><text x="81.0812%" y="639.50"></text></g><g><title>alloc::alloc::alloc (35 samples, 0.74%)</title><rect x="80.8312%" y="613" width="0.7422%" height="15" fill="rgb(253,135,41)" fg:x="3812" fg:w="35"/><text x="81.0812%" y="623.50"></text></g><g><title>__GI___libc_malloc (25 samples, 0.53%)</title><rect x="81.0433%" y="597" width="0.5301%" height="15" fill="rgb(206,112,53)" fg:x="3822" fg:w="25"/><text x="81.2933%" y="607.50"></text></g><g><title>s4lib::data::line::LinePart::len (1 samples, 0.02%)</title><rect x="81.5734%" y="725" width="0.0212%" height="15" fill="rgb(222,137,3)" fg:x="3847" fg:w="1"/><text x="81.8234%" y="735.50"></text></g><g><title>s4lib::data::line::Line::fileoffset_end (3 samples, 0.06%)</title><rect x="81.5734%" y="741" width="0.0636%" height="15" fill="rgb(250,37,25)" fg:x="3847" fg:w="3"/><text x="81.8234%" y="751.50"></text></g><g><title>s4lib::common::ResultS3::Found (1 samples, 0.02%)</title><rect x="81.6370%" y="741" width="0.0212%" height="15" fill="rgb(247,223,36)" fg:x="3850" fg:w="1"/><text x="81.8870%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove (1 samples, 0.02%)</title><rect x="81.6582%" y="645" width="0.0212%" height="15" fill="rgb(219,134,36)" fg:x="3851" fg:w="1"/><text x="81.9082%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::erase_no_drop (1 samples, 0.02%)</title><rect x="81.6582%" y="629" width="0.0212%" height="15" fill="rgb(214,49,6)" fg:x="3851" fg:w="1"/><text x="81.9082%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner::erase (1 samples, 0.02%)</title><rect x="81.6582%" y="613" width="0.0212%" height="15" fill="rgb(241,127,40)" fg:x="3851" fg:w="1"/><text x="81.9082%" y="623.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.02%)</title><rect x="81.6582%" y="597" width="0.0212%" height="15" fill="rgb(254,196,3)" fg:x="3851" fg:w="1"/><text x="81.9082%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.02%)</title><rect x="81.6582%" y="581" width="0.0212%" height="15" fill="rgb(254,11,22)" fg:x="3851" fg:w="1"/><text x="81.9082%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="81.6582%" y="565" width="0.0212%" height="15" fill="rgb(214,20,35)" fg:x="3851" fg:w="1"/><text x="81.9082%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.04%)</title><rect x="81.6794%" y="613" width="0.0424%" height="15" fill="rgb(209,34,41)" fg:x="3852" fg:w="2"/><text x="81.9294%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.04%)</title><rect x="81.6794%" y="597" width="0.0424%" height="15" fill="rgb(241,196,44)" fg:x="3852" fg:w="2"/><text x="81.9294%" y="607.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.02%)</title><rect x="81.7218%" y="613" width="0.0212%" height="15" fill="rgb(254,20,38)" fg:x="3854" fg:w="1"/><text x="81.9718%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (6 samples, 0.13%)</title><rect x="81.6582%" y="661" width="0.1272%" height="15" fill="rgb(215,93,43)" fg:x="3851" fg:w="6"/><text x="81.9082%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.11%)</title><rect x="81.6794%" y="645" width="0.1060%" height="15" fill="rgb(252,63,32)" fg:x="3852" fg:w="5"/><text x="81.9294%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (5 samples, 0.11%)</title><rect x="81.6794%" y="629" width="0.1060%" height="15" fill="rgb(243,218,21)" fg:x="3852" fg:w="5"/><text x="81.9294%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner::probe_seq (2 samples, 0.04%)</title><rect x="81.7430%" y="613" width="0.0424%" height="15" fill="rgb(215,108,52)" fg:x="3855" fg:w="2"/><text x="81.9930%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (7 samples, 0.15%)</title><rect x="81.6582%" y="693" width="0.1484%" height="15" fill="rgb(230,19,42)" fg:x="3851" fg:w="7"/><text x="81.9082%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (7 samples, 0.15%)</title><rect x="81.6582%" y="677" width="0.1484%" height="15" fill="rgb(208,183,29)" fg:x="3851" fg:w="7"/><text x="81.9082%" y="687.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="81.7854%" y="661" width="0.0212%" height="15" fill="rgb(241,1,29)" fg:x="3857" fg:w="1"/><text x="82.0354%" y="671.50"></text></g><g><title>&lt;lru::KeyRef&lt;K&gt; as core::hash::Hash&gt;::hash (1 samples, 0.02%)</title><rect x="81.7854%" y="645" width="0.0212%" height="15" fill="rgb(238,110,49)" fg:x="3857" fg:w="1"/><text x="82.0354%" y="655.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (1 samples, 0.02%)</title><rect x="81.7854%" y="629" width="0.0212%" height="15" fill="rgb(213,18,30)" fg:x="3857" fg:w="1"/><text x="82.0354%" y="639.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (1 samples, 0.02%)</title><rect x="81.7854%" y="613" width="0.0212%" height="15" fill="rgb(228,200,49)" fg:x="3857" fg:w="1"/><text x="82.0354%" y="623.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1 samples, 0.02%)</title><rect x="81.7854%" y="597" width="0.0212%" height="15" fill="rgb(243,175,12)" fg:x="3857" fg:w="1"/><text x="82.0354%" y="607.50"></text></g><g><title>lru::LruCache&lt;K,V,S&gt;::replace_or_create_node (11 samples, 0.23%)</title><rect x="81.6582%" y="709" width="0.2332%" height="15" fill="rgb(235,6,33)" fg:x="3851" fg:w="11"/><text x="81.9082%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner::set_ctrl_h2 (1 samples, 0.02%)</title><rect x="81.8914%" y="661" width="0.0212%" height="15" fill="rgb(240,81,36)" fg:x="3862" fg:w="1"/><text x="82.1414%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner::set_ctrl (1 samples, 0.02%)</title><rect x="81.8914%" y="645" width="0.0212%" height="15" fill="rgb(249,179,13)" fg:x="3862" fg:w="1"/><text x="82.1414%" y="655.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (1 samples, 0.02%)</title><rect x="81.8914%" y="629" width="0.0212%" height="15" fill="rgb(212,215,37)" fg:x="3862" fg:w="1"/><text x="82.1414%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (2 samples, 0.04%)</title><rect x="81.8914%" y="693" width="0.0424%" height="15" fill="rgb(218,104,39)" fg:x="3862" fg:w="2"/><text x="82.1414%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner::record_item_insert_at (2 samples, 0.04%)</title><rect x="81.8914%" y="677" width="0.0424%" height="15" fill="rgb(254,84,38)" fg:x="3862" fg:w="2"/><text x="82.1414%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_bucket_full (13 samples, 0.28%)</title><rect x="81.9338%" y="645" width="0.2757%" height="15" fill="rgb(216,46,33)" fg:x="3864" fg:w="13"/><text x="82.1838%" y="655.50"></text></g><g><title>hashbrown::raw::is_full (13 samples, 0.28%)</title><rect x="81.9338%" y="629" width="0.2757%" height="15" fill="rgb(239,41,17)" fg:x="3864" fg:w="13"/><text x="82.1838%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner::fix_insert_slot (15 samples, 0.32%)</title><rect x="81.9338%" y="661" width="0.3181%" height="15" fill="rgb(235,172,34)" fg:x="3864" fg:w="15"/><text x="82.1838%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot_in_group (1 samples, 0.02%)</title><rect x="82.2519%" y="661" width="0.0212%" height="15" fill="rgb(244,103,4)" fg:x="3879" fg:w="1"/><text x="82.5019%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (2 samples, 0.04%)</title><rect x="82.2731%" y="661" width="0.0424%" height="15" fill="rgb(235,131,19)" fg:x="3880" fg:w="2"/><text x="82.5231%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (2 samples, 0.04%)</title><rect x="82.2731%" y="645" width="0.0424%" height="15" fill="rgb(212,88,23)" fg:x="3880" fg:w="2"/><text x="82.5231%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (21 samples, 0.45%)</title><rect x="81.8914%" y="709" width="0.4453%" height="15" fill="rgb(228,156,5)" fg:x="3862" fg:w="21"/><text x="82.1414%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (19 samples, 0.40%)</title><rect x="81.9338%" y="693" width="0.4029%" height="15" fill="rgb(236,164,17)" fg:x="3864" fg:w="19"/><text x="82.1838%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (19 samples, 0.40%)</title><rect x="81.9338%" y="677" width="0.4029%" height="15" fill="rgb(209,5,27)" fg:x="3864" fg:w="19"/><text x="82.1838%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::is_empty (1 samples, 0.02%)</title><rect x="82.3367%" y="677" width="0.0212%" height="15" fill="rgb(231,50,20)" fg:x="3883" fg:w="1"/><text x="82.5867%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::len (1 samples, 0.02%)</title><rect x="82.3367%" y="661" width="0.0212%" height="15" fill="rgb(251,32,14)" fg:x="3883" fg:w="1"/><text x="82.5867%" y="671.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.02%)</title><rect x="82.3579%" y="629" width="0.0212%" height="15" fill="rgb(209,34,41)" fg:x="3884" fg:w="1"/><text x="82.6079%" y="639.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.02%)</title><rect x="82.3579%" y="613" width="0.0212%" height="15" fill="rgb(241,196,44)" fg:x="3884" fg:w="1"/><text x="82.6079%" y="623.50"></text></g><g><title>hashbrown::raw::h2 (5 samples, 0.11%)</title><rect x="82.3791%" y="629" width="0.1060%" height="15" fill="rgb(254,20,38)" fg:x="3885" fg:w="5"/><text x="82.6291%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (7 samples, 0.15%)</title><rect x="82.3579%" y="677" width="0.1484%" height="15" fill="rgb(231,28,3)" fg:x="3884" fg:w="7"/><text x="82.6079%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (7 samples, 0.15%)</title><rect x="82.3579%" y="661" width="0.1484%" height="15" fill="rgb(252,63,32)" fg:x="3884" fg:w="7"/><text x="82.6079%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (7 samples, 0.15%)</title><rect x="82.3579%" y="645" width="0.1484%" height="15" fill="rgb(243,218,21)" fg:x="3884" fg:w="7"/><text x="82.6079%" y="655.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="82.4852%" y="629" width="0.0212%" height="15" fill="rgb(238,118,47)" fg:x="3890" fg:w="1"/><text x="82.7352%" y="639.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.02%)</title><rect x="82.4852%" y="613" width="0.0212%" height="15" fill="rgb(236,184,9)" fg:x="3890" fg:w="1"/><text x="82.7352%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (9 samples, 0.19%)</title><rect x="82.3367%" y="709" width="0.1908%" height="15" fill="rgb(207,58,42)" fg:x="3883" fg:w="9"/><text x="82.5867%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (9 samples, 0.19%)</title><rect x="82.3367%" y="693" width="0.1908%" height="15" fill="rgb(243,133,17)" fg:x="3883" fg:w="9"/><text x="82.5867%" y="703.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="82.5064%" y="677" width="0.0212%" height="15" fill="rgb(241,1,29)" fg:x="3891" fg:w="1"/><text x="82.7564%" y="687.50"></text></g><g><title>&lt;lru::KeyRef&lt;K&gt; as core::hash::Hash&gt;::hash (1 samples, 0.02%)</title><rect x="82.5064%" y="661" width="0.0212%" height="15" fill="rgb(238,110,49)" fg:x="3891" fg:w="1"/><text x="82.7564%" y="671.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (1 samples, 0.02%)</title><rect x="82.5064%" y="645" width="0.0212%" height="15" fill="rgb(213,18,30)" fg:x="3891" fg:w="1"/><text x="82.7564%" y="655.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (1 samples, 0.02%)</title><rect x="82.5064%" y="629" width="0.0212%" height="15" fill="rgb(228,200,49)" fg:x="3891" fg:w="1"/><text x="82.7564%" y="639.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1 samples, 0.02%)</title><rect x="82.5064%" y="613" width="0.0212%" height="15" fill="rgb(243,175,12)" fg:x="3891" fg:w="1"/><text x="82.7564%" y="623.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.02%)</title><rect x="82.5064%" y="597" width="0.0212%" height="15" fill="rgb(253,180,14)" fg:x="3891" fg:w="1"/><text x="82.7564%" y="607.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.02%)</title><rect x="82.5064%" y="581" width="0.0212%" height="15" fill="rgb(250,179,17)" fg:x="3891" fg:w="1"/><text x="82.7564%" y="591.50"></text></g><g><title>lru::LruCache&lt;K,V,S&gt;::capturing_put (44 samples, 0.93%)</title><rect x="81.6582%" y="725" width="0.9330%" height="15" fill="rgb(218,66,15)" fg:x="3851" fg:w="44"/><text x="81.9082%" y="735.50"></text></g><g><title>lru::LruCache&lt;K,V,S&gt;::put (48 samples, 1.02%)</title><rect x="81.6582%" y="741" width="1.0178%" height="15" fill="rgb(244,170,33)" fg:x="3851" fg:w="48"/><text x="81.9082%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;s4lib::common::ResultS3&lt;(u64,alloc::sync::Arc&lt;s4lib::data::line::Line&gt;),std::io::error::Error&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="82.6760%" y="741" width="0.0212%" height="15" fill="rgb(206,65,20)" fg:x="3899" fg:w="1"/><text x="82.9260%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;s4lib::data::line::Line&gt;&gt; (5 samples, 0.11%)</title><rect x="82.6972%" y="741" width="0.1060%" height="15" fill="rgb(213,100,24)" fg:x="3900" fg:w="5"/><text x="82.9472%" y="751.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.11%)</title><rect x="82.6972%" y="725" width="0.1060%" height="15" fill="rgb(220,153,15)" fg:x="3900" fg:w="5"/><text x="82.9472%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (21 samples, 0.45%)</title><rect x="82.8032%" y="661" width="0.4453%" height="15" fill="rgb(231,0,6)" fg:x="3905" fg:w="21"/><text x="83.0532%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (33 samples, 0.70%)</title><rect x="82.8032%" y="693" width="0.6997%" height="15" fill="rgb(220,202,26)" fg:x="3905" fg:w="33"/><text x="83.0532%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (33 samples, 0.70%)</title><rect x="82.8032%" y="677" width="0.6997%" height="15" fill="rgb(233,132,38)" fg:x="3905" fg:w="33"/><text x="83.0532%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (3 samples, 0.06%)</title><rect x="83.5030%" y="693" width="0.0636%" height="15" fill="rgb(220,1,36)" fg:x="3938" fg:w="3"/><text x="83.7530%" y="703.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::force (3 samples, 0.06%)</title><rect x="83.5030%" y="677" width="0.0636%" height="15" fill="rgb(222,161,34)" fg:x="3938" fg:w="3"/><text x="83.7530%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (42 samples, 0.89%)</title><rect x="82.8032%" y="741" width="0.8906%" height="15" fill="rgb(222,9,43)" fg:x="3905" fg:w="42"/><text x="83.0532%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (42 samples, 0.89%)</title><rect x="82.8032%" y="725" width="0.8906%" height="15" fill="rgb(242,164,29)" fg:x="3905" fg:w="42"/><text x="83.0532%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (42 samples, 0.89%)</title><rect x="82.8032%" y="709" width="0.8906%" height="15" fill="rgb(217,165,36)" fg:x="3905" fg:w="42"/><text x="83.0532%" y="719.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::descend (6 samples, 0.13%)</title><rect x="83.5666%" y="693" width="0.1272%" height="15" fill="rgb(248,159,27)" fg:x="3941" fg:w="6"/><text x="83.8166%" y="703.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (6 samples, 0.13%)</title><rect x="83.5666%" y="677" width="0.1272%" height="15" fill="rgb(232,132,36)" fg:x="3941" fg:w="6"/><text x="83.8166%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (6 samples, 0.13%)</title><rect x="83.5666%" y="661" width="0.1272%" height="15" fill="rgb(243,160,27)" fg:x="3941" fg:w="6"/><text x="83.8166%" y="671.50"></text></g><g><title>core::ptr::read (6 samples, 0.13%)</title><rect x="83.5666%" y="645" width="0.1272%" height="15" fill="rgb(222,157,29)" fg:x="3941" fg:w="6"/><text x="83.8166%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (23 samples, 0.49%)</title><rect x="83.6938%" y="741" width="0.4877%" height="15" fill="rgb(215,149,39)" fg:x="3947" fg:w="23"/><text x="83.9438%" y="751.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (23 samples, 0.49%)</title><rect x="83.6938%" y="725" width="0.4877%" height="15" fill="rgb(250,51,46)" fg:x="3947" fg:w="23"/><text x="83.9438%" y="735.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (23 samples, 0.49%)</title><rect x="83.6938%" y="709" width="0.4877%" height="15" fill="rgb(254,116,45)" fg:x="3947" fg:w="23"/><text x="83.9438%" y="719.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="84.1815%" y="741" width="0.0212%" height="15" fill="rgb(247,105,42)" fg:x="3970" fg:w="1"/><text x="84.4315%" y="751.50"></text></g><g><title>s4lib::readers::linereader::LineReader::find_line (614 samples, 13.02%)</title><rect x="73.2612%" y="757" width="13.0195%" height="15" fill="rgb(238,98,28)" fg:x="3455" fg:w="614"/><text x="73.5112%" y="767.50">s4lib::readers::line..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (1 samples, 0.02%)</title><rect x="86.2807%" y="709" width="0.0212%" height="15" fill="rgb(230,19,42)" fg:x="4069" fg:w="1"/><text x="86.5307%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (1 samples, 0.02%)</title><rect x="86.2807%" y="693" width="0.0212%" height="15" fill="rgb(208,183,29)" fg:x="4069" fg:w="1"/><text x="86.5307%" y="703.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="86.2807%" y="677" width="0.0212%" height="15" fill="rgb(241,1,29)" fg:x="4069" fg:w="1"/><text x="86.5307%" y="687.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="86.2807%" y="661" width="0.0212%" height="15" fill="rgb(233,144,3)" fg:x="4069" fg:w="1"/><text x="86.5307%" y="671.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.02%)</title><rect x="86.2807%" y="645" width="0.0212%" height="15" fill="rgb(253,180,14)" fg:x="4069" fg:w="1"/><text x="86.5307%" y="655.50"></text></g><g><title>lru::LruCache&lt;K,V,S&gt;::replace_or_create_node (2 samples, 0.04%)</title><rect x="86.2807%" y="725" width="0.0424%" height="15" fill="rgb(235,6,33)" fg:x="4069" fg:w="2"/><text x="86.5307%" y="735.50"></text></g><g><title>hashbrown::raw::RawTableInner::set_ctrl_h2 (1 samples, 0.02%)</title><rect x="86.3232%" y="677" width="0.0212%" height="15" fill="rgb(240,81,36)" fg:x="4071" fg:w="1"/><text x="86.5732%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner::set_ctrl (1 samples, 0.02%)</title><rect x="86.3232%" y="661" width="0.0212%" height="15" fill="rgb(249,179,13)" fg:x="4071" fg:w="1"/><text x="86.5732%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner::record_item_insert_at (2 samples, 0.04%)</title><rect x="86.3232%" y="693" width="0.0424%" height="15" fill="rgb(254,84,38)" fg:x="4071" fg:w="2"/><text x="86.5732%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (1 samples, 0.02%)</title><rect x="86.3656%" y="693" width="0.0212%" height="15" fill="rgb(228,127,18)" fg:x="4073" fg:w="1"/><text x="86.6156%" y="703.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.02%)</title><rect x="86.3656%" y="677" width="0.0212%" height="15" fill="rgb(235,214,16)" fg:x="4073" fg:w="1"/><text x="86.6156%" y="687.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.02%)</title><rect x="86.3656%" y="661" width="0.0212%" height="15" fill="rgb(224,197,7)" fg:x="4073" fg:w="1"/><text x="86.6156%" y="671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="86.3656%" y="645" width="0.0212%" height="15" fill="rgb(239,196,40)" fg:x="4073" fg:w="1"/><text x="86.6156%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (4 samples, 0.08%)</title><rect x="86.3232%" y="709" width="0.0848%" height="15" fill="rgb(218,104,39)" fg:x="4071" fg:w="4"/><text x="86.5732%" y="719.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (1 samples, 0.02%)</title><rect x="86.3868%" y="693" width="0.0212%" height="15" fill="rgb(216,51,12)" fg:x="4074" fg:w="1"/><text x="86.6368%" y="703.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.02%)</title><rect x="86.3868%" y="677" width="0.0212%" height="15" fill="rgb(205,52,49)" fg:x="4074" fg:w="1"/><text x="86.6368%" y="687.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="86.3868%" y="661" width="0.0212%" height="15" fill="rgb(209,143,44)" fg:x="4074" fg:w="1"/><text x="86.6368%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_bucket_full (10 samples, 0.21%)</title><rect x="86.4080%" y="661" width="0.2120%" height="15" fill="rgb(216,46,33)" fg:x="4075" fg:w="10"/><text x="86.6580%" y="671.50"></text></g><g><title>hashbrown::raw::is_full (10 samples, 0.21%)</title><rect x="86.4080%" y="645" width="0.2120%" height="15" fill="rgb(239,41,17)" fg:x="4075" fg:w="10"/><text x="86.6580%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner::fix_insert_slot (14 samples, 0.30%)</title><rect x="86.4080%" y="677" width="0.2969%" height="15" fill="rgb(235,172,34)" fg:x="4075" fg:w="14"/><text x="86.6580%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot_in_group (2 samples, 0.04%)</title><rect x="86.7048%" y="677" width="0.0424%" height="15" fill="rgb(244,103,4)" fg:x="4089" fg:w="2"/><text x="86.9548%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (22 samples, 0.47%)</title><rect x="86.3232%" y="725" width="0.4665%" height="15" fill="rgb(228,156,5)" fg:x="4071" fg:w="22"/><text x="86.5732%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (18 samples, 0.38%)</title><rect x="86.4080%" y="709" width="0.3817%" height="15" fill="rgb(236,164,17)" fg:x="4075" fg:w="18"/><text x="86.6580%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (18 samples, 0.38%)</title><rect x="86.4080%" y="693" width="0.3817%" height="15" fill="rgb(209,5,27)" fg:x="4075" fg:w="18"/><text x="86.6580%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.04%)</title><rect x="86.7472%" y="677" width="0.0424%" height="15" fill="rgb(238,118,47)" fg:x="4091" fg:w="2"/><text x="86.9972%" y="687.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.04%)</title><rect x="86.7897%" y="645" width="0.0424%" height="15" fill="rgb(209,34,41)" fg:x="4093" fg:w="2"/><text x="87.0397%" y="655.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.04%)</title><rect x="86.7897%" y="629" width="0.0424%" height="15" fill="rgb(241,196,44)" fg:x="4093" fg:w="2"/><text x="87.0397%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (9 samples, 0.19%)</title><rect x="86.7897%" y="725" width="0.1908%" height="15" fill="rgb(207,58,42)" fg:x="4093" fg:w="9"/><text x="87.0397%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (9 samples, 0.19%)</title><rect x="86.7897%" y="709" width="0.1908%" height="15" fill="rgb(243,133,17)" fg:x="4093" fg:w="9"/><text x="87.0397%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (9 samples, 0.19%)</title><rect x="86.7897%" y="693" width="0.1908%" height="15" fill="rgb(231,28,3)" fg:x="4093" fg:w="9"/><text x="87.0397%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (9 samples, 0.19%)</title><rect x="86.7897%" y="677" width="0.1908%" height="15" fill="rgb(252,63,32)" fg:x="4093" fg:w="9"/><text x="87.0397%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (9 samples, 0.19%)</title><rect x="86.7897%" y="661" width="0.1908%" height="15" fill="rgb(243,218,21)" fg:x="4093" fg:w="9"/><text x="87.0397%" y="671.50"></text></g><g><title>hashbrown::raw::h2 (7 samples, 0.15%)</title><rect x="86.8321%" y="645" width="0.1484%" height="15" fill="rgb(254,20,38)" fg:x="4095" fg:w="7"/><text x="87.0821%" y="655.50"></text></g><g><title>lru::LruCache&lt;K,V,S&gt;::put (46 samples, 0.98%)</title><rect x="86.2807%" y="757" width="0.9754%" height="15" fill="rgb(244,170,33)" fg:x="4069" fg:w="46"/><text x="86.5307%" y="767.50"></text></g><g><title>lru::LruCache&lt;K,V,S&gt;::capturing_put (46 samples, 0.98%)</title><rect x="86.2807%" y="741" width="0.9754%" height="15" fill="rgb(218,66,15)" fg:x="4069" fg:w="46"/><text x="86.5307%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;s4lib::common::ResultS3&lt;(u64,alloc::sync::Arc&lt;s4lib::data::sysline::Sysline&gt;),std::io::error::Error&gt;&gt;&gt; (2 samples, 0.04%)</title><rect x="87.2561%" y="757" width="0.0424%" height="15" fill="rgb(236,19,4)" fg:x="4115" fg:w="2"/><text x="87.5061%" y="767.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="87.2986%" y="757" width="0.0212%" height="15" fill="rgb(247,105,42)" fg:x="4117" fg:w="1"/><text x="87.5486%" y="767.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_sysline (1,821 samples, 38.61%)</title><rect x="48.8126%" y="789" width="38.6132%" height="15" fill="rgb(223,164,31)" fg:x="2302" fg:w="1821"/><text x="49.0626%" y="799.50">s4lib::readers::syslinereader::SyslineReader::find_sysline</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_sysline_year (1,821 samples, 38.61%)</title><rect x="48.8126%" y="773" width="38.6132%" height="15" fill="rgb(234,169,18)" fg:x="2302" fg:w="1821"/><text x="49.0626%" y="783.50">s4lib::readers::syslinereader::SyslineReader::find_sysline_year</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::filesz (1 samples, 0.02%)</title><rect x="87.4258%" y="789" width="0.0212%" height="15" fill="rgb(249,210,18)" fg:x="4123" fg:w="1"/><text x="87.6758%" y="799.50"></text></g><g><title>s4lib::readers::linereader::LineReader::filesz (1 samples, 0.02%)</title><rect x="87.4258%" y="773" width="0.0212%" height="15" fill="rgb(239,189,46)" fg:x="4123" fg:w="1"/><text x="87.6758%" y="783.50"></text></g><g><title>s4lib::readers::blockreader::BlockReader::filesz (1 samples, 0.02%)</title><rect x="87.4258%" y="757" width="0.0212%" height="15" fill="rgb(228,225,28)" fg:x="4123" fg:w="1"/><text x="87.6758%" y="767.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_sysline_at_datetime_filter_binary_search (1,823 samples, 38.66%)</title><rect x="48.8126%" y="805" width="38.6556%" height="15" fill="rgb(206,70,45)" fg:x="2302" fg:w="1823"/><text x="49.0626%" y="815.50">s4lib::readers::syslinereader::SyslineReader::find_sysline_at_d..</text></g><g><title>s4lib::common::ResultS3::Found (1 samples, 0.02%)</title><rect x="87.4682%" y="805" width="0.0212%" height="15" fill="rgb(247,223,36)" fg:x="4125" fg:w="1"/><text x="87.7182%" y="815.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_sysline_between_datetime_filters (1,825 samples, 38.70%)</title><rect x="48.8126%" y="821" width="38.6980%" height="15" fill="rgb(241,74,20)" fg:x="2302" fg:w="1825"/><text x="49.0626%" y="831.50">s4lib::readers::syslinereader::SyslineReader::find_sysline_betw..</text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::find_sysline_between_datetime_filters (1,829 samples, 38.78%)</title><rect x="48.8126%" y="837" width="38.7829%" height="15" fill="rgb(205,32,8)" fg:x="2302" fg:w="1829"/><text x="49.0626%" y="847.50">s4lib::readers::syslogprocessor::SyslogProcessor::find_sysline_..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="87.5954%" y="725" width="0.0212%" height="15" fill="rgb(248,33,49)" fg:x="4131" fg:w="1"/><text x="87.8454%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="87.5954%" y="709" width="0.0212%" height="15" fill="rgb(208,40,33)" fg:x="4131" fg:w="1"/><text x="87.8454%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="87.5954%" y="693" width="0.0212%" height="15" fill="rgb(213,128,22)" fg:x="4131" fg:w="1"/><text x="87.8454%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="87.5954%" y="677" width="0.0212%" height="15" fill="rgb(238,77,31)" fg:x="4131" fg:w="1"/><text x="87.8454%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="87.5954%" y="661" width="0.0212%" height="15" fill="rgb(227,15,28)" fg:x="4131" fg:w="1"/><text x="87.8454%" y="671.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="87.5954%" y="645" width="0.0212%" height="15" fill="rgb(247,8,17)" fg:x="4131" fg:w="1"/><text x="87.8454%" y="655.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="87.5954%" y="629" width="0.0212%" height="15" fill="rgb(221,113,48)" fg:x="4131" fg:w="1"/><text x="87.8454%" y="639.50"></text></g><g><title>malloc_consolidate (1 samples, 0.02%)</title><rect x="87.5954%" y="613" width="0.0212%" height="15" fill="rgb(228,194,39)" fg:x="4131" fg:w="1"/><text x="87.8454%" y="623.50"></text></g><g><title>s4lib::readers::blockreader::BlockReader::drop_block (2 samples, 0.04%)</title><rect x="87.5954%" y="741" width="0.0424%" height="15" fill="rgb(211,150,42)" fg:x="4131" fg:w="2"/><text x="87.8454%" y="751.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.02%)</title><rect x="87.6378%" y="645" width="0.0212%" height="15" fill="rgb(250,179,17)" fg:x="4133" fg:w="1"/><text x="87.8878%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (2 samples, 0.04%)</title><rect x="87.6378%" y="725" width="0.0424%" height="15" fill="rgb(230,19,42)" fg:x="4133" fg:w="2"/><text x="87.8878%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (2 samples, 0.04%)</title><rect x="87.6378%" y="709" width="0.0424%" height="15" fill="rgb(208,183,29)" fg:x="4133" fg:w="2"/><text x="87.8878%" y="719.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.04%)</title><rect x="87.6378%" y="693" width="0.0424%" height="15" fill="rgb(241,1,29)" fg:x="4133" fg:w="2"/><text x="87.8878%" y="703.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (2 samples, 0.04%)</title><rect x="87.6378%" y="677" width="0.0424%" height="15" fill="rgb(233,144,3)" fg:x="4133" fg:w="2"/><text x="87.8878%" y="687.50"></text></g><g><title>ahash::operations::folded_multiply (2 samples, 0.04%)</title><rect x="87.6378%" y="661" width="0.0424%" height="15" fill="rgb(253,180,14)" fg:x="4133" fg:w="2"/><text x="87.8878%" y="671.50"></text></g><g><title>lru::LruCache&lt;K,V,S&gt;::pop (4 samples, 0.08%)</title><rect x="87.6378%" y="741" width="0.0848%" height="15" fill="rgb(238,169,40)" fg:x="4133" fg:w="4"/><text x="87.8878%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;s4lib::data::line::Line&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="87.7226%" y="741" width="0.0212%" height="15" fill="rgb(208,41,42)" fg:x="4137" fg:w="1"/><text x="87.9726%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;s4lib::data::line::Line&gt;&gt; (1 samples, 0.02%)</title><rect x="87.7226%" y="725" width="0.0212%" height="15" fill="rgb(213,100,24)" fg:x="4137" fg:w="1"/><text x="87.9726%" y="735.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="87.7226%" y="709" width="0.0212%" height="15" fill="rgb(220,153,15)" fg:x="4137" fg:w="1"/><text x="87.9726%" y="719.50"></text></g><g><title>__GI___libc_free (2 samples, 0.04%)</title><rect x="87.7439%" y="709" width="0.0424%" height="15" fill="rgb(247,8,17)" fg:x="4138" fg:w="2"/><text x="87.9939%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;s4lib::data::line::LinePart&gt; (3 samples, 0.06%)</title><rect x="87.7863%" y="677" width="0.0636%" height="15" fill="rgb(240,36,49)" fg:x="4140" fg:w="3"/><text x="88.0363%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (3 samples, 0.06%)</title><rect x="87.7863%" y="661" width="0.0636%" height="15" fill="rgb(232,202,51)" fg:x="4140" fg:w="3"/><text x="88.0363%" y="671.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.06%)</title><rect x="87.7863%" y="645" width="0.0636%" height="15" fill="rgb(220,153,15)" fg:x="4140" fg:w="3"/><text x="88.0363%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::take::Take&lt;alloc::vec::into_iter::IntoIter&lt;s4lib::data::line::LinePart&gt;&gt;&gt; (7 samples, 0.15%)</title><rect x="87.7439%" y="741" width="0.1484%" height="15" fill="rgb(227,155,44)" fg:x="4138" fg:w="7"/><text x="87.9939%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;s4lib::data::line::LinePart&gt;&gt; (7 samples, 0.15%)</title><rect x="87.7439%" y="725" width="0.1484%" height="15" fill="rgb(214,46,18)" fg:x="4138" fg:w="7"/><text x="87.9939%" y="735.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.11%)</title><rect x="87.7863%" y="709" width="0.1060%" height="15" fill="rgb(240,119,4)" fg:x="4140" fg:w="5"/><text x="88.0363%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;[s4lib::data::line::LinePart]&gt; (5 samples, 0.11%)</title><rect x="87.7863%" y="693" width="0.1060%" height="15" fill="rgb(228,195,10)" fg:x="4140" fg:w="5"/><text x="88.0363%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.06%)</title><rect x="87.8923%" y="693" width="0.0636%" height="15" fill="rgb(238,77,31)" fg:x="4145" fg:w="3"/><text x="88.1423%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.06%)</title><rect x="87.8923%" y="677" width="0.0636%" height="15" fill="rgb(227,15,28)" fg:x="4145" fg:w="3"/><text x="88.1423%" y="687.50"></text></g><g><title>__GI___libc_free (3 samples, 0.06%)</title><rect x="87.8923%" y="661" width="0.0636%" height="15" fill="rgb(247,8,17)" fg:x="4145" fg:w="3"/><text x="88.1423%" y="671.50"></text></g><g><title>_int_free (3 samples, 0.06%)</title><rect x="87.8923%" y="645" width="0.0636%" height="15" fill="rgb(221,113,48)" fg:x="4145" fg:w="3"/><text x="88.1423%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;s4lib::data::line::Line&gt;&gt; (4 samples, 0.08%)</title><rect x="87.8923%" y="725" width="0.0848%" height="15" fill="rgb(228,217,6)" fg:x="4145" fg:w="4"/><text x="88.1423%" y="735.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.08%)</title><rect x="87.8923%" y="709" width="0.0848%" height="15" fill="rgb(205,138,54)" fg:x="4145" fg:w="4"/><text x="88.1423%" y="719.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::try_unwrap (19 samples, 0.40%)</title><rect x="87.8923%" y="741" width="0.4029%" height="15" fill="rgb(221,73,3)" fg:x="4145" fg:w="19"/><text x="88.1423%" y="751.50"></text></g><g><title>alloc::collections::btree::node::BalancingContext&lt;K,V&gt;::merge_tracking_child_edge (3 samples, 0.06%)</title><rect x="88.2952%" y="645" width="0.0636%" height="15" fill="rgb(253,74,36)" fg:x="4164" fg:w="3"/><text x="88.5452%" y="655.50"></text></g><g><title>alloc::collections::btree::node::BalancingContext&lt;K,V&gt;::merge_tracking_child (3 samples, 0.06%)</title><rect x="88.2952%" y="629" width="0.0636%" height="15" fill="rgb(241,205,47)" fg:x="4164" fg:w="3"/><text x="88.5452%" y="639.50"></text></g><g><title>alloc::collections::btree::node::BalancingContext&lt;K,V&gt;::do_merge (3 samples, 0.06%)</title><rect x="88.2952%" y="613" width="0.0636%" height="15" fill="rgb(246,103,50)" fg:x="4164" fg:w="3"/><text x="88.5452%" y="623.50"></text></g><g><title>__GI___libc_free (3 samples, 0.06%)</title><rect x="88.2952%" y="597" width="0.0636%" height="15" fill="rgb(247,8,17)" fg:x="4164" fg:w="3"/><text x="88.5452%" y="607.50"></text></g><g><title>_int_free (3 samples, 0.06%)</title><rect x="88.2952%" y="581" width="0.0636%" height="15" fill="rgb(221,113,48)" fg:x="4164" fg:w="3"/><text x="88.5452%" y="591.50"></text></g><g><title>alloc::collections::btree::fix::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::fix_node_and_affected_ancestors (1 samples, 0.02%)</title><rect x="88.3588%" y="645" width="0.0212%" height="15" fill="rgb(246,153,49)" fg:x="4167" fg:w="1"/><text x="88.6088%" y="655.50"></text></g><g><title>alloc::collections::btree::fix::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::fix_node_through_parent (1 samples, 0.02%)</title><rect x="88.3588%" y="629" width="0.0212%" height="15" fill="rgb(209,146,22)" fg:x="4167" fg:w="1"/><text x="88.6088%" y="639.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (8 samples, 0.17%)</title><rect x="88.2952%" y="661" width="0.1696%" height="15" fill="rgb(212,166,45)" fg:x="4164" fg:w="8"/><text x="88.5452%" y="671.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (11 samples, 0.23%)</title><rect x="88.2952%" y="677" width="0.2332%" height="15" fill="rgb(223,155,52)" fg:x="4164" fg:w="11"/><text x="88.5452%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove (14 samples, 0.30%)</title><rect x="88.2952%" y="741" width="0.2969%" height="15" fill="rgb(224,108,5)" fg:x="4164" fg:w="14"/><text x="88.5452%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove_entry (14 samples, 0.30%)</title><rect x="88.2952%" y="725" width="0.2969%" height="15" fill="rgb(245,136,18)" fg:x="4164" fg:w="14"/><text x="88.5452%" y="735.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::remove_entry (14 samples, 0.30%)</title><rect x="88.2952%" y="709" width="0.2969%" height="15" fill="rgb(227,63,43)" fg:x="4164" fg:w="14"/><text x="88.5452%" y="719.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::remove_kv (14 samples, 0.30%)</title><rect x="88.2952%" y="693" width="0.2969%" height="15" fill="rgb(211,181,27)" fg:x="4164" fg:w="14"/><text x="88.5452%" y="703.50"></text></g><g><title>s4lib::readers::linereader::LineReader::drop_line (48 samples, 1.02%)</title><rect x="87.5954%" y="757" width="1.0178%" height="15" fill="rgb(246,194,20)" fg:x="4131" fg:w="48"/><text x="87.8454%" y="767.50"></text></g><g><title>arena_for_chunk (1 samples, 0.02%)</title><rect x="88.6132%" y="725" width="0.0212%" height="15" fill="rgb(234,26,42)" fg:x="4179" fg:w="1"/><text x="88.8632%" y="735.50"></text></g><g><title>arena_for_chunk (1 samples, 0.02%)</title><rect x="88.6132%" y="709" width="0.0212%" height="15" fill="rgb(234,26,42)" fg:x="4179" fg:w="1"/><text x="88.8632%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::sync::Arc&lt;s4lib::data::line::Line&gt;&gt;&gt; (6 samples, 0.13%)</title><rect x="88.6132%" y="757" width="0.1272%" height="15" fill="rgb(247,12,38)" fg:x="4179" fg:w="6"/><text x="88.8632%" y="767.50"></text></g><g><title>__GI___libc_free (6 samples, 0.13%)</title><rect x="88.6132%" y="741" width="0.1272%" height="15" fill="rgb(247,8,17)" fg:x="4179" fg:w="6"/><text x="88.8632%" y="751.50"></text></g><g><title>_int_free (5 samples, 0.11%)</title><rect x="88.6344%" y="725" width="0.1060%" height="15" fill="rgb(221,113,48)" fg:x="4180" fg:w="5"/><text x="88.8844%" y="735.50"></text></g><g><title>s4lib::readers::linereader::LineReader::drop_lines (55 samples, 1.17%)</title><rect x="87.5954%" y="773" width="1.1662%" height="15" fill="rgb(214,84,44)" fg:x="4131" fg:w="55"/><text x="87.8454%" y="783.50"></text></g><g><title>s4lib::data::sysline::Sysline::fileoffset_begin (3 samples, 0.06%)</title><rect x="88.7617%" y="773" width="0.0636%" height="15" fill="rgb(208,14,46)" fg:x="4186" fg:w="3"/><text x="89.0117%" y="783.50"></text></g><g><title>s4lib::data::line::Line::fileoffset_begin (3 samples, 0.06%)</title><rect x="88.7617%" y="757" width="0.0636%" height="15" fill="rgb(222,95,29)" fg:x="4186" fg:w="3"/><text x="89.0117%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (3 samples, 0.06%)</title><rect x="88.7617%" y="741" width="0.0636%" height="15" fill="rgb(215,149,39)" fg:x="4186" fg:w="3"/><text x="89.0117%" y="751.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (3 samples, 0.06%)</title><rect x="88.7617%" y="725" width="0.0636%" height="15" fill="rgb(250,51,46)" fg:x="4186" fg:w="3"/><text x="89.0117%" y="735.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (3 samples, 0.06%)</title><rect x="88.7617%" y="709" width="0.0636%" height="15" fill="rgb(254,116,45)" fg:x="4186" fg:w="3"/><text x="89.0117%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner::probe_seq (1 samples, 0.02%)</title><rect x="88.8253%" y="677" width="0.0212%" height="15" fill="rgb(215,108,52)" fg:x="4189" fg:w="1"/><text x="89.0753%" y="687.50"></text></g><g><title>lru::LruCache&lt;K,V,S&gt;::pop (2 samples, 0.04%)</title><rect x="88.8253%" y="773" width="0.0424%" height="15" fill="rgb(238,169,40)" fg:x="4189" fg:w="2"/><text x="89.0753%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (2 samples, 0.04%)</title><rect x="88.8253%" y="757" width="0.0424%" height="15" fill="rgb(230,19,42)" fg:x="4189" fg:w="2"/><text x="89.0753%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (2 samples, 0.04%)</title><rect x="88.8253%" y="741" width="0.0424%" height="15" fill="rgb(208,183,29)" fg:x="4189" fg:w="2"/><text x="89.0753%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (2 samples, 0.04%)</title><rect x="88.8253%" y="725" width="0.0424%" height="15" fill="rgb(215,93,43)" fg:x="4189" fg:w="2"/><text x="89.0753%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.04%)</title><rect x="88.8253%" y="709" width="0.0424%" height="15" fill="rgb(252,63,32)" fg:x="4189" fg:w="2"/><text x="89.0753%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (2 samples, 0.04%)</title><rect x="88.8253%" y="693" width="0.0424%" height="15" fill="rgb(243,218,21)" fg:x="4189" fg:w="2"/><text x="89.0753%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="88.8465%" y="677" width="0.0212%" height="15" fill="rgb(238,118,47)" fg:x="4190" fg:w="1"/><text x="89.0965%" y="687.50"></text></g><g><title>arena_for_chunk (1 samples, 0.02%)</title><rect x="88.8677%" y="677" width="0.0212%" height="15" fill="rgb(234,26,42)" fg:x="4191" fg:w="1"/><text x="89.1177%" y="687.50"></text></g><g><title>arena_for_chunk (1 samples, 0.02%)</title><rect x="88.8677%" y="661" width="0.0212%" height="15" fill="rgb(234,26,42)" fg:x="4191" fg:w="1"/><text x="89.1177%" y="671.50"></text></g><g><title>heap_for_ptr (1 samples, 0.02%)</title><rect x="88.8677%" y="645" width="0.0212%" height="15" fill="rgb(232,140,25)" fg:x="4191" fg:w="1"/><text x="89.1177%" y="655.50"></text></g><g><title>_int_free (5 samples, 0.11%)</title><rect x="88.8889%" y="677" width="0.1060%" height="15" fill="rgb(221,113,48)" fg:x="4192" fg:w="5"/><text x="89.1389%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.17%)</title><rect x="88.8677%" y="725" width="0.1696%" height="15" fill="rgb(238,77,31)" fg:x="4191" fg:w="8"/><text x="89.1177%" y="735.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.17%)</title><rect x="88.8677%" y="709" width="0.1696%" height="15" fill="rgb(227,15,28)" fg:x="4191" fg:w="8"/><text x="89.1177%" y="719.50"></text></g><g><title>__GI___libc_free (8 samples, 0.17%)</title><rect x="88.8677%" y="693" width="0.1696%" height="15" fill="rgb(247,8,17)" fg:x="4191" fg:w="8"/><text x="89.1177%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;s4lib::data::sysline::Sysline&gt;&gt; (39 samples, 0.83%)</title><rect x="88.8677%" y="757" width="0.8270%" height="15" fill="rgb(237,210,34)" fg:x="4191" fg:w="39"/><text x="89.1177%" y="767.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (39 samples, 0.83%)</title><rect x="88.8677%" y="741" width="0.8270%" height="15" fill="rgb(205,138,54)" fg:x="4191" fg:w="39"/><text x="89.1177%" y="751.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::try_unwrap (42 samples, 0.89%)</title><rect x="88.8677%" y="773" width="0.8906%" height="15" fill="rgb(221,73,3)" fg:x="4191" fg:w="42"/><text x="89.1177%" y="783.50"></text></g><g><title>alloc::collections::btree::node::BalancingContext&lt;K,V&gt;::merge_tracking_child_edge (1 samples, 0.02%)</title><rect x="89.7583%" y="677" width="0.0212%" height="15" fill="rgb(253,74,36)" fg:x="4233" fg:w="1"/><text x="90.0083%" y="687.50"></text></g><g><title>alloc::collections::btree::node::BalancingContext&lt;K,V&gt;::merge_tracking_child (1 samples, 0.02%)</title><rect x="89.7583%" y="661" width="0.0212%" height="15" fill="rgb(241,205,47)" fg:x="4233" fg:w="1"/><text x="90.0083%" y="671.50"></text></g><g><title>alloc::collections::btree::node::BalancingContext&lt;K,V&gt;::do_merge (1 samples, 0.02%)</title><rect x="89.7583%" y="645" width="0.0212%" height="15" fill="rgb(246,103,50)" fg:x="4233" fg:w="1"/><text x="90.0083%" y="655.50"></text></g><g><title>alloc::collections::btree::node::slice_remove (1 samples, 0.02%)</title><rect x="89.7583%" y="629" width="0.0212%" height="15" fill="rgb(209,6,4)" fg:x="4233" fg:w="1"/><text x="90.0083%" y="639.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.02%)</title><rect x="89.7583%" y="613" width="0.0212%" height="15" fill="rgb(221,136,15)" fg:x="4233" fg:w="1"/><text x="90.0083%" y="623.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.02%)</title><rect x="89.7583%" y="597" width="0.0212%" height="15" fill="rgb(217,126,36)" fg:x="4233" fg:w="1"/><text x="90.0083%" y="607.50"></text></g><g><title>alloc::collections::btree::node::BalancingContext&lt;K,V&gt;::merge_tracking_parent (3 samples, 0.06%)</title><rect x="89.7795%" y="645" width="0.0636%" height="15" fill="rgb(254,215,2)" fg:x="4234" fg:w="3"/><text x="90.0295%" y="655.50"></text></g><g><title>alloc::collections::btree::node::BalancingContext&lt;K,V&gt;::do_merge (3 samples, 0.06%)</title><rect x="89.7795%" y="629" width="0.0636%" height="15" fill="rgb(246,103,50)" fg:x="4234" fg:w="3"/><text x="90.0295%" y="639.50"></text></g><g><title>alloc::collections::btree::node::move_to_slice (3 samples, 0.06%)</title><rect x="89.7795%" y="613" width="0.0636%" height="15" fill="rgb(229,148,31)" fg:x="4234" fg:w="3"/><text x="90.0295%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.06%)</title><rect x="89.7795%" y="597" width="0.0636%" height="15" fill="rgb(214,20,35)" fg:x="4234" fg:w="3"/><text x="90.0295%" y="607.50"></text></g><g><title>__memmove_avx512_unaligned_erms (3 samples, 0.06%)</title><rect x="89.7795%" y="581" width="0.0636%" height="15" fill="rgb(217,126,36)" fg:x="4234" fg:w="3"/><text x="90.0295%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::remove_kv (5 samples, 0.11%)</title><rect x="89.7583%" y="725" width="0.1060%" height="15" fill="rgb(211,181,27)" fg:x="4233" fg:w="5"/><text x="90.0083%" y="735.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (5 samples, 0.11%)</title><rect x="89.7583%" y="709" width="0.1060%" height="15" fill="rgb(223,155,52)" fg:x="4233" fg:w="5"/><text x="90.0083%" y="719.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (5 samples, 0.11%)</title><rect x="89.7583%" y="693" width="0.1060%" height="15" fill="rgb(212,166,45)" fg:x="4233" fg:w="5"/><text x="90.0083%" y="703.50"></text></g><g><title>alloc::collections::btree::fix::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::fix_node_and_affected_ancestors (4 samples, 0.08%)</title><rect x="89.7795%" y="677" width="0.0848%" height="15" fill="rgb(246,153,49)" fg:x="4234" fg:w="4"/><text x="90.0295%" y="687.50"></text></g><g><title>alloc::collections::btree::fix::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::fix_node_through_parent (4 samples, 0.08%)</title><rect x="89.7795%" y="661" width="0.0848%" height="15" fill="rgb(209,146,22)" fg:x="4234" fg:w="4"/><text x="90.0295%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::remove_entry (6 samples, 0.13%)</title><rect x="89.7583%" y="741" width="0.1272%" height="15" fill="rgb(227,63,43)" fg:x="4233" fg:w="6"/><text x="90.0083%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove (8 samples, 0.17%)</title><rect x="89.7583%" y="773" width="0.1696%" height="15" fill="rgb(224,108,5)" fg:x="4233" fg:w="8"/><text x="90.0083%" y="783.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove_entry (8 samples, 0.17%)</title><rect x="89.7583%" y="757" width="0.1696%" height="15" fill="rgb(245,136,18)" fg:x="4233" fg:w="8"/><text x="90.0083%" y="767.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::drop_sysline (111 samples, 2.35%)</title><rect x="87.5954%" y="789" width="2.3537%" height="15" fill="rgb(224,6,32)" fg:x="4131" fg:w="111"/><text x="87.8454%" y="799.50">s..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u64&gt;&gt; (1 samples, 0.02%)</title><rect x="89.9491%" y="789" width="0.0212%" height="15" fill="rgb(239,123,7)" fg:x="4242" fg:w="1"/><text x="90.1991%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u64&gt;&gt; (1 samples, 0.02%)</title><rect x="89.9491%" y="773" width="0.0212%" height="15" fill="rgb(242,71,32)" fg:x="4242" fg:w="1"/><text x="90.1991%" y="783.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="89.9491%" y="757" width="0.0212%" height="15" fill="rgb(213,128,22)" fg:x="4242" fg:w="1"/><text x="90.1991%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="89.9491%" y="741" width="0.0212%" height="15" fill="rgb(238,77,31)" fg:x="4242" fg:w="1"/><text x="90.1991%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="89.9491%" y="725" width="0.0212%" height="15" fill="rgb(227,15,28)" fg:x="4242" fg:w="1"/><text x="90.1991%" y="735.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="89.9491%" y="709" width="0.0212%" height="15" fill="rgb(247,8,17)" fg:x="4242" fg:w="1"/><text x="90.1991%" y="719.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="89.9491%" y="693" width="0.0212%" height="15" fill="rgb(221,113,48)" fg:x="4242" fg:w="1"/><text x="90.1991%" y="703.50"></text></g><g><title>malloc_consolidate (1 samples, 0.02%)</title><rect x="89.9491%" y="677" width="0.0212%" height="15" fill="rgb(228,194,39)" fg:x="4242" fg:w="1"/><text x="90.1991%" y="687.50"></text></g><g><title>sysmalloc (1 samples, 0.02%)</title><rect x="89.9703%" y="645" width="0.0212%" height="15" fill="rgb(237,64,10)" fg:x="4243" fg:w="1"/><text x="90.2203%" y="655.50"></text></g><g><title>grow_heap (1 samples, 0.02%)</title><rect x="89.9703%" y="629" width="0.0212%" height="15" fill="rgb(231,135,3)" fg:x="4243" fg:w="1"/><text x="90.2203%" y="639.50"></text></g><g><title>__GI___mprotect (1 samples, 0.02%)</title><rect x="89.9703%" y="613" width="0.0212%" height="15" fill="rgb(209,155,30)" fg:x="4243" fg:w="1"/><text x="90.2203%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="89.9703%" y="597" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="4243" fg:w="1"/><text x="90.2203%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="89.9703%" y="581" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="4243" fg:w="1"/><text x="90.2203%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="89.9703%" y="565" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="4243" fg:w="1"/><text x="90.2203%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="89.9703%" y="549" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="4243" fg:w="1"/><text x="90.2203%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="89.9703%" y="533" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="4243" fg:w="1"/><text x="90.2203%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="89.9703%" y="517" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="4243" fg:w="1"/><text x="90.2203%" y="527.50"></text></g><g><title>unlink_chunk (3 samples, 0.06%)</title><rect x="89.9915%" y="629" width="0.0636%" height="15" fill="rgb(223,20,30)" fg:x="4244" fg:w="3"/><text x="90.2415%" y="639.50"></text></g><g><title>malloc_consolidate (24 samples, 0.51%)</title><rect x="89.9915%" y="645" width="0.5089%" height="15" fill="rgb(228,194,39)" fg:x="4244" fg:w="24"/><text x="90.2415%" y="655.50"></text></g><g><title>_int_malloc (41 samples, 0.87%)</title><rect x="89.9703%" y="661" width="0.8694%" height="15" fill="rgb(222,219,51)" fg:x="4243" fg:w="41"/><text x="90.2203%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (42 samples, 0.89%)</title><rect x="89.9703%" y="789" width="0.8906%" height="15" fill="rgb(253,154,22)" fg:x="4243" fg:w="42"/><text x="90.2203%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (42 samples, 0.89%)</title><rect x="89.9703%" y="773" width="0.8906%" height="15" fill="rgb(249,207,12)" fg:x="4243" fg:w="42"/><text x="90.2203%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (42 samples, 0.89%)</title><rect x="89.9703%" y="757" width="0.8906%" height="15" fill="rgb(224,194,14)" fg:x="4243" fg:w="42"/><text x="90.2203%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (42 samples, 0.89%)</title><rect x="89.9703%" y="741" width="0.8906%" height="15" fill="rgb(227,204,5)" fg:x="4243" fg:w="42"/><text x="90.2203%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (42 samples, 0.89%)</title><rect x="89.9703%" y="725" width="0.8906%" height="15" fill="rgb(231,114,21)" fg:x="4243" fg:w="42"/><text x="90.2203%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (42 samples, 0.89%)</title><rect x="89.9703%" y="709" width="0.8906%" height="15" fill="rgb(238,209,2)" fg:x="4243" fg:w="42"/><text x="90.2203%" y="719.50"></text></g><g><title>alloc::alloc::alloc (42 samples, 0.89%)</title><rect x="89.9703%" y="693" width="0.8906%" height="15" fill="rgb(253,135,41)" fg:x="4243" fg:w="42"/><text x="90.2203%" y="703.50"></text></g><g><title>__GI___libc_malloc (42 samples, 0.89%)</title><rect x="89.9703%" y="677" width="0.8906%" height="15" fill="rgb(206,112,53)" fg:x="4243" fg:w="42"/><text x="90.2203%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="90.8609%" y="789" width="0.0212%" height="15" fill="rgb(241,229,15)" fg:x="4285" fg:w="1"/><text x="91.1109%" y="799.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="90.8609%" y="773" width="0.0212%" height="15" fill="rgb(209,143,44)" fg:x="4285" fg:w="1"/><text x="91.1109%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (2 samples, 0.04%)</title><rect x="90.8821%" y="661" width="0.0424%" height="15" fill="rgb(228,217,33)" fg:x="4286" fg:w="2"/><text x="91.1321%" y="671.50"></text></g><g><title>s4lib::data::line::Line::blockoffset_last (9 samples, 0.19%)</title><rect x="90.8821%" y="677" width="0.1908%" height="15" fill="rgb(226,185,29)" fg:x="4286" fg:w="9"/><text x="91.1321%" y="687.50"></text></g><g><title>s4lib::data::sysline::Sysline::blockoffset_last (11 samples, 0.23%)</title><rect x="90.8821%" y="693" width="0.2332%" height="15" fill="rgb(221,37,13)" fg:x="4286" fg:w="11"/><text x="91.1321%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (19 samples, 0.40%)</title><rect x="90.8821%" y="741" width="0.4029%" height="15" fill="rgb(248,210,1)" fg:x="4286" fg:w="19"/><text x="91.1321%" y="751.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (19 samples, 0.40%)</title><rect x="90.8821%" y="725" width="0.4029%" height="15" fill="rgb(225,224,16)" fg:x="4286" fg:w="19"/><text x="91.1321%" y="735.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::drop_data::{{closure}} (19 samples, 0.40%)</title><rect x="90.8821%" y="709" width="0.4029%" height="15" fill="rgb(217,86,28)" fg:x="4286" fg:w="19"/><text x="91.1321%" y="719.50"></text></g><g><title>core::ptr::read (1 samples, 0.02%)</title><rect x="91.2850%" y="677" width="0.0212%" height="15" fill="rgb(222,157,29)" fg:x="4305" fg:w="1"/><text x="91.5350%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.04%)</title><rect x="91.2850%" y="741" width="0.0424%" height="15" fill="rgb(206,81,30)" fg:x="4305" fg:w="2"/><text x="91.5350%" y="751.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (2 samples, 0.04%)</title><rect x="91.2850%" y="725" width="0.0424%" height="15" fill="rgb(231,66,5)" fg:x="4305" fg:w="2"/><text x="91.5350%" y="735.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (2 samples, 0.04%)</title><rect x="91.2850%" y="709" width="0.0424%" height="15" fill="rgb(218,200,14)" fg:x="4305" fg:w="2"/><text x="91.5350%" y="719.50"></text></g><g><title>alloc::collections::btree::mem::replace (2 samples, 0.04%)</title><rect x="91.2850%" y="693" width="0.0424%" height="15" fill="rgb(225,213,27)" fg:x="4305" fg:w="2"/><text x="91.5350%" y="703.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::{{closure}} (1 samples, 0.02%)</title><rect x="91.3062%" y="677" width="0.0212%" height="15" fill="rgb(212,91,44)" fg:x="4306" fg:w="1"/><text x="91.5562%" y="687.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (1 samples, 0.02%)</title><rect x="91.3062%" y="661" width="0.0212%" height="15" fill="rgb(207,127,11)" fg:x="4306" fg:w="1"/><text x="91.5562%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (1 samples, 0.02%)</title><rect x="91.3062%" y="645" width="0.0212%" height="15" fill="rgb(241,228,36)" fg:x="4306" fg:w="1"/><text x="91.5562%" y="655.50"></text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::drop_data (180 samples, 3.82%)</title><rect x="87.5954%" y="821" width="3.8168%" height="15" fill="rgb(215,155,30)" fg:x="4131" fg:w="180"/><text x="87.8454%" y="831.50">s4li..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::drop_data (180 samples, 3.82%)</title><rect x="87.5954%" y="805" width="3.8168%" height="15" fill="rgb(244,67,10)" fg:x="4131" fg:w="180"/><text x="87.8454%" y="815.50">s4li..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.53%)</title><rect x="90.8821%" y="789" width="0.5301%" height="15" fill="rgb(243,42,17)" fg:x="4286" fg:w="25"/><text x="91.1321%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (25 samples, 0.53%)</title><rect x="90.8821%" y="773" width="0.5301%" height="15" fill="rgb(221,194,39)" fg:x="4286" fg:w="25"/><text x="91.1321%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (25 samples, 0.53%)</title><rect x="90.8821%" y="757" width="0.5301%" height="15" fill="rgb(223,137,46)" fg:x="4286" fg:w="25"/><text x="91.1321%" y="767.50"></text></g><g><title>s4lib::data::sysline::Sysline::blockoffset_first (4 samples, 0.08%)</title><rect x="91.4122%" y="821" width="0.0848%" height="15" fill="rgb(251,210,40)" fg:x="4311" fg:w="4"/><text x="91.6622%" y="831.50"></text></g><g><title>s4lib::data::line::Line::blockoffset_first (4 samples, 0.08%)</title><rect x="91.4122%" y="805" width="0.0848%" height="15" fill="rgb(233,228,30)" fg:x="4311" fg:w="4"/><text x="91.6622%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (4 samples, 0.08%)</title><rect x="91.4122%" y="789" width="0.0848%" height="15" fill="rgb(215,149,39)" fg:x="4311" fg:w="4"/><text x="91.6622%" y="799.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (4 samples, 0.08%)</title><rect x="91.4122%" y="773" width="0.0848%" height="15" fill="rgb(250,51,46)" fg:x="4311" fg:w="4"/><text x="91.6622%" y="783.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (4 samples, 0.08%)</title><rect x="91.4122%" y="757" width="0.0848%" height="15" fill="rgb(254,116,45)" fg:x="4311" fg:w="4"/><text x="91.6622%" y="767.50"></text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::drop_data_try (189 samples, 4.01%)</title><rect x="87.5954%" y="837" width="4.0076%" height="15" fill="rgb(244,39,16)" fg:x="4131" fg:w="189"/><text x="87.8454%" y="847.50">s4li..</text></g><g><title>core::sync::atomic::spin_loop_hint (1 samples, 0.02%)</title><rect x="91.6031%" y="773" width="0.0212%" height="15" fill="rgb(242,61,0)" fg:x="4320" fg:w="1"/><text x="91.8531%" y="783.50"></text></g><g><title>core::hint::spin_loop (1 samples, 0.02%)</title><rect x="91.6031%" y="757" width="0.0212%" height="15" fill="rgb(241,144,6)" fg:x="4320" fg:w="1"/><text x="91.8531%" y="767.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (1 samples, 0.02%)</title><rect x="91.6031%" y="741" width="0.0212%" height="15" fill="rgb(213,129,2)" fg:x="4320" fg:w="1"/><text x="91.8531%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="91.6243%" y="661" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="4321" fg:w="1"/><text x="91.8743%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="91.6243%" y="645" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="4321" fg:w="1"/><text x="91.8743%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="91.6243%" y="629" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="4321" fg:w="1"/><text x="91.8743%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.04%)</title><rect x="91.6243%" y="725" width="0.0424%" height="15" fill="rgb(210,204,4)" fg:x="4321" fg:w="2"/><text x="91.8743%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.04%)</title><rect x="91.6243%" y="709" width="0.0424%" height="15" fill="rgb(210,204,4)" fg:x="4321" fg:w="2"/><text x="91.8743%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.04%)</title><rect x="91.6243%" y="693" width="0.0424%" height="15" fill="rgb(210,204,4)" fg:x="4321" fg:w="2"/><text x="91.8743%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.04%)</title><rect x="91.6243%" y="677" width="0.0424%" height="15" fill="rgb(210,204,4)" fg:x="4321" fg:w="2"/><text x="91.8743%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.06%)</title><rect x="91.6243%" y="757" width="0.0636%" height="15" fill="rgb(210,204,4)" fg:x="4321" fg:w="3"/><text x="91.8743%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.06%)</title><rect x="91.6243%" y="741" width="0.0636%" height="15" fill="rgb(210,204,4)" fg:x="4321" fg:w="3"/><text x="91.8743%" y="751.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (5 samples, 0.11%)</title><rect x="91.6031%" y="789" width="0.1060%" height="15" fill="rgb(224,200,25)" fg:x="4320" fg:w="5"/><text x="91.8531%" y="799.50"></text></g><g><title>__GI___sched_yield (4 samples, 0.08%)</title><rect x="91.6243%" y="773" width="0.0848%" height="15" fill="rgb(225,197,10)" fg:x="4321" fg:w="4"/><text x="91.8743%" y="783.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (5 samples, 0.11%)</title><rect x="91.7091%" y="757" width="0.1060%" height="15" fill="rgb(234,45,50)" fg:x="4325" fg:w="5"/><text x="91.9591%" y="767.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (5 samples, 0.11%)</title><rect x="91.7091%" y="741" width="0.1060%" height="15" fill="rgb(247,66,5)" fg:x="4325" fg:w="5"/><text x="91.9591%" y="751.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.02%)</title><rect x="91.8151%" y="693" width="0.0212%" height="15" fill="rgb(221,136,15)" fg:x="4330" fg:w="1"/><text x="92.0651%" y="703.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.02%)</title><rect x="91.8151%" y="677" width="0.0212%" height="15" fill="rgb(217,126,36)" fg:x="4330" fg:w="1"/><text x="92.0651%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.04%)</title><rect x="91.8151%" y="741" width="0.0424%" height="15" fill="rgb(254,35,30)" fg:x="4330" fg:w="2"/><text x="92.0651%" y="751.50"></text></g><g><title>crossbeam_channel::waker::Waker::try_select::{{closure}} (2 samples, 0.04%)</title><rect x="91.8151%" y="725" width="0.0424%" height="15" fill="rgb(213,3,5)" fg:x="4330" fg:w="2"/><text x="92.0651%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (2 samples, 0.04%)</title><rect x="91.8151%" y="709" width="0.0424%" height="15" fill="rgb(251,147,16)" fg:x="4330" fg:w="2"/><text x="92.0651%" y="719.50"></text></g><g><title>[unknown] (4 samples, 0.08%)</title><rect x="91.8575%" y="629" width="0.0848%" height="15" fill="rgb(227,28,50)" fg:x="4332" fg:w="4"/><text x="92.1075%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.06%)</title><rect x="91.9423%" y="501" width="0.0636%" height="15" fill="rgb(210,204,4)" fg:x="4336" fg:w="3"/><text x="92.1923%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.08%)</title><rect x="91.9423%" y="517" width="0.0848%" height="15" fill="rgb(210,204,4)" fg:x="4336" fg:w="4"/><text x="92.1923%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="91.9423%" y="533" width="0.1060%" height="15" fill="rgb(210,204,4)" fg:x="4336" fg:w="5"/><text x="92.1923%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.15%)</title><rect x="91.9423%" y="549" width="0.1484%" height="15" fill="rgb(210,204,4)" fg:x="4336" fg:w="7"/><text x="92.1923%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 0.21%)</title><rect x="91.9423%" y="565" width="0.2120%" height="15" fill="rgb(210,204,4)" fg:x="4336" fg:w="10"/><text x="92.1923%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.23%)</title><rect x="91.9423%" y="597" width="0.2332%" height="15" fill="rgb(210,204,4)" fg:x="4336" fg:w="11"/><text x="92.1923%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.23%)</title><rect x="91.9423%" y="581" width="0.2332%" height="15" fill="rgb(210,204,4)" fg:x="4336" fg:w="11"/><text x="92.1923%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (12 samples, 0.25%)</title><rect x="91.9423%" y="629" width="0.2545%" height="15" fill="rgb(210,204,4)" fg:x="4336" fg:w="12"/><text x="92.1923%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (12 samples, 0.25%)</title><rect x="91.9423%" y="613" width="0.2545%" height="15" fill="rgb(210,204,4)" fg:x="4336" fg:w="12"/><text x="92.1923%" y="623.50"></text></g><g><title>syscall (17 samples, 0.36%)</title><rect x="91.8575%" y="645" width="0.3605%" height="15" fill="rgb(207,84,5)" fg:x="4332" fg:w="17"/><text x="92.1075%" y="655.50"></text></g><g><title>std::sys::unix::futex::futex_wake (18 samples, 0.38%)</title><rect x="91.8575%" y="661" width="0.3817%" height="15" fill="rgb(220,16,22)" fg:x="4332" fg:w="18"/><text x="92.1075%" y="671.50"></text></g><g><title>crossbeam_channel::context::Context::unpark (20 samples, 0.42%)</title><rect x="91.8575%" y="709" width="0.4241%" height="15" fill="rgb(234,126,29)" fg:x="4332" fg:w="20"/><text x="92.1075%" y="719.50"></text></g><g><title>std::thread::Thread::unpark (20 samples, 0.42%)</title><rect x="91.8575%" y="693" width="0.4241%" height="15" fill="rgb(211,180,25)" fg:x="4332" fg:w="20"/><text x="92.1075%" y="703.50"></text></g><g><title>std::sys_common::thread_parker::futex::Parker::unpark (20 samples, 0.42%)</title><rect x="91.8575%" y="677" width="0.4241%" height="15" fill="rgb(226,145,31)" fg:x="4332" fg:w="20"/><text x="92.1075%" y="687.50"></text></g><g><title>crossbeam_channel::context::Context::try_select (3 samples, 0.06%)</title><rect x="92.2816%" y="709" width="0.0636%" height="15" fill="rgb(254,149,10)" fg:x="4352" fg:w="3"/><text x="92.5316%" y="719.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (3 samples, 0.06%)</title><rect x="92.2816%" y="693" width="0.0636%" height="15" fill="rgb(206,149,53)" fg:x="4352" fg:w="3"/><text x="92.5316%" y="703.50"></text></g><g><title>core::cmp::PartialEq::ne (1 samples, 0.02%)</title><rect x="92.3452%" y="709" width="0.0212%" height="15" fill="rgb(238,191,27)" fg:x="4355" fg:w="1"/><text x="92.5952%" y="719.50"></text></g><g><title>&lt;std::thread::ThreadId as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="92.3452%" y="693" width="0.0212%" height="15" fill="rgb(232,5,27)" fg:x="4355" fg:w="1"/><text x="92.5952%" y="703.50"></text></g><g><title>&lt;core::num::nonzero::NonZeroU64 as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="92.3452%" y="677" width="0.0212%" height="15" fill="rgb(218,33,41)" fg:x="4355" fg:w="1"/><text x="92.5952%" y="687.50"></text></g><g><title>crossbeam_channel::waker::Waker::try_select (27 samples, 0.57%)</title><rect x="91.8151%" y="757" width="0.5725%" height="15" fill="rgb(226,5,34)" fg:x="4330" fg:w="27"/><text x="92.0651%" y="767.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (25 samples, 0.53%)</title><rect x="91.8575%" y="741" width="0.5301%" height="15" fill="rgb(232,40,12)" fg:x="4332" fg:w="25"/><text x="92.1075%" y="751.50"></text></g><g><title>crossbeam_channel::waker::Waker::try_select::{{closure}} (25 samples, 0.53%)</title><rect x="91.8575%" y="725" width="0.5301%" height="15" fill="rgb(213,3,5)" fg:x="4332" fg:w="25"/><text x="92.1075%" y="735.50"></text></g><g><title>crossbeam_channel::waker::Waker::notify (1 samples, 0.02%)</title><rect x="92.3876%" y="757" width="0.0212%" height="15" fill="rgb(246,94,29)" fg:x="4357" fg:w="1"/><text x="92.6376%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicBool::store (1 samples, 0.02%)</title><rect x="92.4088%" y="757" width="0.0212%" height="15" fill="rgb(248,145,44)" fg:x="4358" fg:w="1"/><text x="92.6588%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_store (1 samples, 0.02%)</title><rect x="92.4088%" y="741" width="0.0212%" height="15" fill="rgb(242,62,30)" fg:x="4358" fg:w="1"/><text x="92.6588%" y="751.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (5 samples, 0.11%)</title><rect x="92.4300%" y="725" width="0.1060%" height="15" fill="rgb(220,179,46)" fg:x="4359" fg:w="5"/><text x="92.6800%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;crossbeam_channel::waker::Waker&gt;&gt; (8 samples, 0.17%)</title><rect x="92.4300%" y="757" width="0.1696%" height="15" fill="rgb(247,227,24)" fg:x="4359" fg:w="8"/><text x="92.6800%" y="767.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.17%)</title><rect x="92.4300%" y="741" width="0.1696%" height="15" fill="rgb(212,177,19)" fg:x="4359" fg:w="8"/><text x="92.6800%" y="751.50"></text></g><g><title>std::sync::poison::Flag::done (3 samples, 0.06%)</title><rect x="92.5360%" y="725" width="0.0636%" height="15" fill="rgb(232,10,11)" fg:x="4364" fg:w="3"/><text x="92.7860%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;crossbeam_channel::waker::Entry&gt;&gt; (6 samples, 0.13%)</title><rect x="92.5997%" y="757" width="0.1272%" height="15" fill="rgb(241,87,2)" fg:x="4367" fg:w="6"/><text x="92.8497%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_channel::waker::Entry&gt; (6 samples, 0.13%)</title><rect x="92.5997%" y="741" width="0.1272%" height="15" fill="rgb(211,110,50)" fg:x="4367" fg:w="6"/><text x="92.8497%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_channel::context::Context&gt; (6 samples, 0.13%)</title><rect x="92.5997%" y="725" width="0.1272%" height="15" fill="rgb(208,207,32)" fg:x="4367" fg:w="6"/><text x="92.8497%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;crossbeam_channel::context::Inner&gt;&gt; (6 samples, 0.13%)</title><rect x="92.5997%" y="709" width="0.1272%" height="15" fill="rgb(212,156,49)" fg:x="4367" fg:w="6"/><text x="92.8497%" y="719.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.13%)</title><rect x="92.5997%" y="693" width="0.1272%" height="15" fill="rgb(220,153,15)" fg:x="4367" fg:w="6"/><text x="92.8497%" y="703.50"></text></g><g><title>crossbeam_channel::waker::SyncWaker::notify (49 samples, 1.04%)</title><rect x="91.7091%" y="773" width="1.0390%" height="15" fill="rgb(222,105,38)" fg:x="4325" fg:w="49"/><text x="91.9591%" y="783.50"></text></g><g><title>crossbeam_channel::flavors::array::Channel&lt;T&gt;::write (96 samples, 2.04%)</title><rect x="91.7091%" y="789" width="2.0356%" height="15" fill="rgb(217,57,9)" fg:x="4325" fg:w="96"/><text x="91.9591%" y="799.50">c..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (47 samples, 1.00%)</title><rect x="92.7481%" y="773" width="0.9966%" height="15" fill="rgb(205,52,49)" fg:x="4374" fg:w="47"/><text x="92.9981%" y="783.50"></text></g><g><title>core::ptr::write (47 samples, 1.00%)</title><rect x="92.7481%" y="757" width="0.9966%" height="15" fill="rgb(209,143,44)" fg:x="4374" fg:w="47"/><text x="92.9981%" y="767.50"></text></g><g><title>__memmove_avx512_unaligned_erms (47 samples, 1.00%)</title><rect x="92.7481%" y="741" width="0.9966%" height="15" fill="rgb(217,126,36)" fg:x="4374" fg:w="47"/><text x="92.9981%" y="751.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::spin (1 samples, 0.02%)</title><rect x="93.7447%" y="773" width="0.0212%" height="15" fill="rgb(216,8,3)" fg:x="4421" fg:w="1"/><text x="93.9947%" y="783.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.02%)</title><rect x="93.7447%" y="757" width="0.0212%" height="15" fill="rgb(246,165,53)" fg:x="4421" fg:w="1"/><text x="93.9947%" y="767.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.02%)</title><rect x="93.7447%" y="741" width="0.0212%" height="15" fill="rgb(226,134,37)" fg:x="4421" fg:w="1"/><text x="93.9947%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::lt (1 samples, 0.02%)</title><rect x="93.7447%" y="725" width="0.0212%" height="15" fill="rgb(206,149,10)" fg:x="4421" fg:w="1"/><text x="93.9947%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (2 samples, 0.04%)</title><rect x="93.7659%" y="773" width="0.0424%" height="15" fill="rgb(231,90,36)" fg:x="4422" fg:w="2"/><text x="94.0159%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (2 samples, 0.04%)</title><rect x="93.7659%" y="757" width="0.0424%" height="15" fill="rgb(245,38,10)" fg:x="4422" fg:w="2"/><text x="94.0159%" y="767.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="93.8083%" y="773" width="0.0212%" height="15" fill="rgb(213,95,25)" fg:x="4424" fg:w="1"/><text x="94.0583%" y="783.50"></text></g><g><title>crossbeam_channel::flavors::array::Channel&lt;T&gt;::start_send (7 samples, 0.15%)</title><rect x="93.7447%" y="789" width="0.1484%" height="15" fill="rgb(243,179,43)" fg:x="4421" fg:w="7"/><text x="93.9947%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="93.8931%" y="453" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="4428" fg:w="1"/><text x="94.1431%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.04%)</title><rect x="93.8931%" y="469" width="0.0424%" height="15" fill="rgb(210,204,4)" fg:x="4428" fg:w="2"/><text x="94.1431%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.06%)</title><rect x="93.8931%" y="501" width="0.0636%" height="15" fill="rgb(210,204,4)" fg:x="4428" fg:w="3"/><text x="94.1431%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.06%)</title><rect x="93.8931%" y="485" width="0.0636%" height="15" fill="rgb(210,204,4)" fg:x="4428" fg:w="3"/><text x="94.1431%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.08%)</title><rect x="93.8931%" y="517" width="0.0848%" height="15" fill="rgb(210,204,4)" fg:x="4428" fg:w="4"/><text x="94.1431%" y="527.50"></text></g><g><title>std::thread::park (5 samples, 0.11%)</title><rect x="93.8931%" y="693" width="0.1060%" height="15" fill="rgb(253,209,8)" fg:x="4428" fg:w="5"/><text x="94.1431%" y="703.50"></text></g><g><title>std::sys_common::thread_parker::futex::Parker::park (5 samples, 0.11%)</title><rect x="93.8931%" y="677" width="0.1060%" height="15" fill="rgb(252,86,25)" fg:x="4428" fg:w="5"/><text x="94.1431%" y="687.50"></text></g><g><title>std::sys::unix::futex::futex_wait (5 samples, 0.11%)</title><rect x="93.8931%" y="661" width="0.1060%" height="15" fill="rgb(219,16,26)" fg:x="4428" fg:w="5"/><text x="94.1431%" y="671.50"></text></g><g><title>syscall (5 samples, 0.11%)</title><rect x="93.8931%" y="645" width="0.1060%" height="15" fill="rgb(207,84,5)" fg:x="4428" fg:w="5"/><text x="94.1431%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="93.8931%" y="629" width="0.1060%" height="15" fill="rgb(210,204,4)" fg:x="4428" fg:w="5"/><text x="94.1431%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="93.8931%" y="613" width="0.1060%" height="15" fill="rgb(210,204,4)" fg:x="4428" fg:w="5"/><text x="94.1431%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="93.8931%" y="597" width="0.1060%" height="15" fill="rgb(210,204,4)" fg:x="4428" fg:w="5"/><text x="94.1431%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="93.8931%" y="581" width="0.1060%" height="15" fill="rgb(210,204,4)" fg:x="4428" fg:w="5"/><text x="94.1431%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="93.8931%" y="565" width="0.1060%" height="15" fill="rgb(210,204,4)" fg:x="4428" fg:w="5"/><text x="94.1431%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="93.8931%" y="549" width="0.1060%" height="15" fill="rgb(210,204,4)" fg:x="4428" fg:w="5"/><text x="94.1431%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="93.8931%" y="533" width="0.1060%" height="15" fill="rgb(210,204,4)" fg:x="4428" fg:w="5"/><text x="94.1431%" y="543.50"></text></g><g><title>crossbeam_channel::context::Context::with (6 samples, 0.13%)</title><rect x="93.8931%" y="789" width="0.1272%" height="15" fill="rgb(249,203,42)" fg:x="4428" fg:w="6"/><text x="94.1431%" y="799.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.13%)</title><rect x="93.8931%" y="773" width="0.1272%" height="15" fill="rgb(235,136,14)" fg:x="4428" fg:w="6"/><text x="94.1431%" y="783.50"></text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (6 samples, 0.13%)</title><rect x="93.8931%" y="757" width="0.1272%" height="15" fill="rgb(251,136,16)" fg:x="4428" fg:w="6"/><text x="94.1431%" y="767.50"></text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (6 samples, 0.13%)</title><rect x="93.8931%" y="741" width="0.1272%" height="15" fill="rgb(251,136,16)" fg:x="4428" fg:w="6"/><text x="94.1431%" y="751.50"></text></g><g><title>crossbeam_channel::flavors::array::Channel&lt;T&gt;::send::{{closure}} (6 samples, 0.13%)</title><rect x="93.8931%" y="725" width="0.1272%" height="15" fill="rgb(249,130,37)" fg:x="4428" fg:w="6"/><text x="94.1431%" y="735.50"></text></g><g><title>crossbeam_channel::context::Context::wait_until (6 samples, 0.13%)</title><rect x="93.8931%" y="709" width="0.1272%" height="15" fill="rgb(218,28,27)" fg:x="4428" fg:w="6"/><text x="94.1431%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.02%)</title><rect x="93.9992%" y="693" width="0.0212%" height="15" fill="rgb(219,73,27)" fg:x="4433" fg:w="1"/><text x="94.2492%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="93.9992%" y="677" width="0.0212%" height="15" fill="rgb(208,10,34)" fg:x="4433" fg:w="1"/><text x="94.2492%" y="687.50"></text></g><g><title>__memmove_avx512_unaligned_erms (5 samples, 0.11%)</title><rect x="94.0204%" y="789" width="0.1060%" height="15" fill="rgb(217,126,36)" fg:x="4434" fg:w="5"/><text x="94.2704%" y="799.50"></text></g><g><title>&lt;crossbeam_channel::flavors::zero::ZeroToken as core::default::Default&gt;::default (1 samples, 0.02%)</title><rect x="94.1264%" y="773" width="0.0212%" height="15" fill="rgb(219,207,27)" fg:x="4439" fg:w="1"/><text x="94.3764%" y="783.50"></text></g><g><title>&lt;crossbeam_channel::select::Token as core::default::Default&gt;::default (3 samples, 0.06%)</title><rect x="94.1264%" y="789" width="0.0636%" height="15" fill="rgb(221,86,49)" fg:x="4439" fg:w="3"/><text x="94.3764%" y="799.50"></text></g><g><title>crossbeam_channel::flavors::array::Channel&lt;T&gt;::send (127 samples, 2.69%)</title><rect x="91.6031%" y="805" width="2.6930%" height="15" fill="rgb(239,129,18)" fg:x="4320" fg:w="127"/><text x="91.8531%" y="815.50">cr..</text></g><g><title>__memmove_avx512_unaligned_erms (7 samples, 0.15%)</title><rect x="94.2960%" y="805" width="0.1484%" height="15" fill="rgb(217,126,36)" fg:x="4447" fg:w="7"/><text x="94.5460%" y="815.50"></text></g><g><title>&lt;crossbeam_channel::counter::Sender&lt;C&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="94.4444%" y="805" width="0.0212%" height="15" fill="rgb(235,116,41)" fg:x="4454" fg:w="1"/><text x="94.6944%" y="815.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (137 samples, 2.91%)</title><rect x="91.6031%" y="821" width="2.9050%" height="15" fill="rgb(211,156,23)" fg:x="4320" fg:w="137"/><text x="91.8531%" y="831.50">cr..</text></g><g><title>s4::chan_send (141 samples, 2.99%)</title><rect x="91.6031%" y="837" width="2.9898%" height="15" fill="rgb(244,11,25)" fg:x="4320" fg:w="141"/><text x="91.8531%" y="847.50">s4:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;s4lib::data::sysline::Sysline&gt;&gt; (3 samples, 0.06%)</title><rect x="94.5929%" y="837" width="0.0636%" height="15" fill="rgb(216,215,37)" fg:x="4461" fg:w="3"/><text x="94.8429%" y="847.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.06%)</title><rect x="94.5929%" y="821" width="0.0636%" height="15" fill="rgb(220,153,15)" fg:x="4461" fg:w="3"/><text x="94.8429%" y="831.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="94.6565%" y="837" width="0.0212%" height="15" fill="rgb(247,105,42)" fg:x="4464" fg:w="1"/><text x="94.9065%" y="847.50"></text></g><g><title>__clone3 (2,362 samples, 50.08%)</title><rect x="44.6565%" y="1093" width="50.0848%" height="15" fill="rgb(252,169,8)" fg:x="2106" fg:w="2362"/><text x="44.9065%" y="1103.50">__clone3</text></g><g><title>start_thread (2,362 samples, 50.08%)</title><rect x="44.6565%" y="1077" width="50.0848%" height="15" fill="rgb(209,148,13)" fg:x="2106" fg:w="2362"/><text x="44.9065%" y="1087.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (2,362 samples, 50.08%)</title><rect x="44.6565%" y="1061" width="50.0848%" height="15" fill="rgb(215,36,0)" fg:x="2106" fg:w="2362"/><text x="44.9065%" y="1071.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2,362 samples, 50.08%)</title><rect x="44.6565%" y="1045" width="50.0848%" height="15" fill="rgb(228,202,16)" fg:x="2106" fg:w="2362"/><text x="44.9065%" y="1055.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2,362 samples, 50.08%)</title><rect x="44.6565%" y="1029" width="50.0848%" height="15" fill="rgb(228,202,16)" fg:x="2106" fg:w="2362"/><text x="44.9065%" y="1039.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2,362 samples, 50.08%)</title><rect x="44.6565%" y="1013" width="50.0848%" height="15" fill="rgb(218,104,40)" fg:x="2106" fg:w="2362"/><text x="44.9065%" y="1023.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (2,362 samples, 50.08%)</title><rect x="44.6565%" y="997" width="50.0848%" height="15" fill="rgb(249,4,49)" fg:x="2106" fg:w="2362"/><text x="44.9065%" y="1007.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>std::panic::catch_unwind (2,362 samples, 50.08%)</title><rect x="44.6565%" y="981" width="50.0848%" height="15" fill="rgb(216,75,8)" fg:x="2106" fg:w="2362"/><text x="44.9065%" y="991.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (2,362 samples, 50.08%)</title><rect x="44.6565%" y="965" width="50.0848%" height="15" fill="rgb(212,61,29)" fg:x="2106" fg:w="2362"/><text x="44.9065%" y="975.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (2,362 samples, 50.08%)</title><rect x="44.6565%" y="949" width="50.0848%" height="15" fill="rgb(232,162,46)" fg:x="2106" fg:w="2362"/><text x="44.9065%" y="959.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2,362 samples, 50.08%)</title><rect x="44.6565%" y="933" width="50.0848%" height="15" fill="rgb(230,83,13)" fg:x="2106" fg:w="2362"/><text x="44.9065%" y="943.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (2,362 samples, 50.08%)</title><rect x="44.6565%" y="917" width="50.0848%" height="15" fill="rgb(214,132,49)" fg:x="2106" fg:w="2362"/><text x="44.9065%" y="927.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2,362 samples, 50.08%)</title><rect x="44.6565%" y="901" width="50.0848%" height="15" fill="rgb(210,88,34)" fg:x="2106" fg:w="2362"/><text x="44.9065%" y="911.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>s4::processing_loop::{{closure}} (2,362 samples, 50.08%)</title><rect x="44.6565%" y="885" width="50.0848%" height="15" fill="rgb(245,19,23)" fg:x="2106" fg:w="2362"/><text x="44.9065%" y="895.50">s4::processing_loop::{{closure}}</text></g><g><title>s4::exec_fileprocessor_thread (2,362 samples, 50.08%)</title><rect x="44.6565%" y="869" width="50.0848%" height="15" fill="rgb(245,49,27)" fg:x="2106" fg:w="2362"/><text x="44.9065%" y="879.50">s4::exec_fileprocessor_thread</text></g><g><title>s4::exec_syslogprocessor (2,362 samples, 50.08%)</title><rect x="44.6565%" y="853" width="50.0848%" height="15" fill="rgb(229,116,34)" fg:x="2106" fg:w="2362"/><text x="44.9065%" y="863.50">s4::exec_syslogprocessor</text></g><g><title>regex_automata::meta::strategy::ReverseInner::new (1 samples, 0.02%)</title><rect x="94.7413%" y="885" width="0.0212%" height="15" fill="rgb(225,146,32)" fg:x="4468" fg:w="1"/><text x="94.9913%" y="895.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_from_hir (1 samples, 0.02%)</title><rect x="94.7413%" y="869" width="0.0212%" height="15" fill="rgb(210,66,46)" fg:x="4468" fg:w="1"/><text x="94.9913%" y="879.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (1 samples, 0.02%)</title><rect x="94.7413%" y="853" width="0.0212%" height="15" fill="rgb(226,42,16)" fg:x="4468" fg:w="1"/><text x="94.9913%" y="863.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (1 samples, 0.02%)</title><rect x="94.7413%" y="837" width="0.0212%" height="15" fill="rgb(242,129,17)" fg:x="4468" fg:w="1"/><text x="94.9913%" y="847.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (1 samples, 0.02%)</title><rect x="94.7413%" y="821" width="0.0212%" height="15" fill="rgb(247,137,3)" fg:x="4468" fg:w="1"/><text x="94.9913%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="94.7413%" y="805" width="0.0212%" height="15" fill="rgb(214,109,53)" fg:x="4468" fg:w="1"/><text x="94.9913%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.02%)</title><rect x="94.7413%" y="789" width="0.0212%" height="15" fill="rgb(254,35,30)" fg:x="4468" fg:w="1"/><text x="94.9913%" y="799.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.02%)</title><rect x="94.7413%" y="773" width="0.0212%" height="15" fill="rgb(226,169,23)" fg:x="4468" fg:w="1"/><text x="94.9913%" y="783.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile::{{closure}} (1 samples, 0.02%)</title><rect x="94.7413%" y="757" width="0.0212%" height="15" fill="rgb(218,216,52)" fg:x="4468" fg:w="1"/><text x="94.9913%" y="767.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 0.02%)</title><rect x="94.7413%" y="741" width="0.0212%" height="15" fill="rgb(235,200,16)" fg:x="4468" fg:w="1"/><text x="94.9913%" y="751.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.02%)</title><rect x="94.7413%" y="725" width="0.0212%" height="15" fill="rgb(213,34,18)" fg:x="4468" fg:w="1"/><text x="94.9913%" y="735.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (1 samples, 0.02%)</title><rect x="94.7413%" y="709" width="0.0212%" height="15" fill="rgb(253,35,22)" fg:x="4468" fg:w="1"/><text x="94.9913%" y="719.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (1 samples, 0.02%)</title><rect x="94.7413%" y="693" width="0.0212%" height="15" fill="rgb(247,137,3)" fg:x="4468" fg:w="1"/><text x="94.9913%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="94.7413%" y="677" width="0.0212%" height="15" fill="rgb(214,109,53)" fg:x="4468" fg:w="1"/><text x="94.9913%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.02%)</title><rect x="94.7413%" y="661" width="0.0212%" height="15" fill="rgb(254,35,30)" fg:x="4468" fg:w="1"/><text x="94.9913%" y="671.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.02%)</title><rect x="94.7413%" y="645" width="0.0212%" height="15" fill="rgb(226,169,23)" fg:x="4468" fg:w="1"/><text x="94.9913%" y="655.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice::{{closure}} (1 samples, 0.02%)</title><rect x="94.7413%" y="629" width="0.0212%" height="15" fill="rgb(223,145,12)" fg:x="4468" fg:w="1"/><text x="94.9913%" y="639.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.02%)</title><rect x="94.7413%" y="613" width="0.0212%" height="15" fill="rgb(213,34,18)" fg:x="4468" fg:w="1"/><text x="94.9913%" y="623.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class (1 samples, 0.02%)</title><rect x="94.7413%" y="597" width="0.0212%" height="15" fill="rgb(246,38,12)" fg:x="4468" fg:w="1"/><text x="94.9913%" y="607.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class_reverse_with_suffix (1 samples, 0.02%)</title><rect x="94.7413%" y="581" width="0.0212%" height="15" fill="rgb(227,194,49)" fg:x="4468" fg:w="1"/><text x="94.9913%" y="591.50"></text></g><g><title>regex_automata::nfa::thompson::map::Utf8SuffixMap::clear (1 samples, 0.02%)</title><rect x="94.7413%" y="565" width="0.0212%" height="15" fill="rgb(236,113,3)" fg:x="4468" fg:w="1"/><text x="94.9913%" y="575.50"></text></g><g><title>alloc::vec::from_elem (1 samples, 0.02%)</title><rect x="94.7413%" y="549" width="0.0212%" height="15" fill="rgb(208,109,54)" fg:x="4468" fg:w="1"/><text x="94.9913%" y="559.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1 samples, 0.02%)</title><rect x="94.7413%" y="533" width="0.0212%" height="15" fill="rgb(228,177,24)" fg:x="4468" fg:w="1"/><text x="94.9913%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="94.7413%" y="517" width="0.0212%" height="15" fill="rgb(249,207,12)" fg:x="4468" fg:w="1"/><text x="94.9913%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="94.7413%" y="501" width="0.0212%" height="15" fill="rgb(224,194,14)" fg:x="4468" fg:w="1"/><text x="94.9913%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect x="94.7413%" y="485" width="0.0212%" height="15" fill="rgb(227,204,5)" fg:x="4468" fg:w="1"/><text x="94.9913%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="94.7413%" y="469" width="0.0212%" height="15" fill="rgb(231,114,21)" fg:x="4468" fg:w="1"/><text x="94.9913%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="94.7413%" y="453" width="0.0212%" height="15" fill="rgb(238,209,2)" fg:x="4468" fg:w="1"/><text x="94.9913%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="94.7413%" y="437" width="0.0212%" height="15" fill="rgb(253,135,41)" fg:x="4468" fg:w="1"/><text x="94.9913%" y="447.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="94.7413%" y="421" width="0.0212%" height="15" fill="rgb(206,112,53)" fg:x="4468" fg:w="1"/><text x="94.9913%" y="431.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="94.7413%" y="405" width="0.0212%" height="15" fill="rgb(222,219,51)" fg:x="4468" fg:w="1"/><text x="94.9913%" y="415.50"></text></g><g><title>malloc_consolidate (1 samples, 0.02%)</title><rect x="94.7413%" y="389" width="0.0212%" height="15" fill="rgb(228,194,39)" fg:x="4468" fg:w="1"/><text x="94.9913%" y="399.50"></text></g><g><title>unlink_chunk (1 samples, 0.02%)</title><rect x="94.7413%" y="373" width="0.0212%" height="15" fill="rgb(223,20,30)" fg:x="4468" fg:w="1"/><text x="94.9913%" y="383.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::compile (1 samples, 0.02%)</title><rect x="94.7625%" y="597" width="0.0212%" height="15" fill="rgb(233,39,2)" fg:x="4469" fg:w="1"/><text x="95.0125%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="94.7625%" y="581" width="0.0212%" height="15" fill="rgb(241,229,15)" fg:x="4469" fg:w="1"/><text x="95.0125%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="94.7625%" y="565" width="0.0212%" height="15" fill="rgb(254,103,39)" fg:x="4469" fg:w="1"/><text x="95.0125%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="94.7625%" y="549" width="0.0212%" height="15" fill="rgb(254,53,35)" fg:x="4469" fg:w="1"/><text x="95.0125%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="94.7625%" y="533" width="0.0212%" height="15" fill="rgb(237,133,22)" fg:x="4469" fg:w="1"/><text x="95.0125%" y="543.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="94.7625%" y="517" width="0.0212%" height="15" fill="rgb(206,112,53)" fg:x="4469" fg:w="1"/><text x="95.0125%" y="527.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="94.7625%" y="501" width="0.0212%" height="15" fill="rgb(222,219,51)" fg:x="4469" fg:w="1"/><text x="95.0125%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="94.7625%" y="485" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="4469" fg:w="1"/><text x="95.0125%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="94.7625%" y="469" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="4469" fg:w="1"/><text x="95.0125%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="94.7625%" y="453" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="4469" fg:w="1"/><text x="95.0125%" y="463.50"></text></g><g><title>malloc_consolidate (1 samples, 0.02%)</title><rect x="94.7837%" y="405" width="0.0212%" height="15" fill="rgb(228,194,39)" fg:x="4470" fg:w="1"/><text x="95.0337%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.06%)</title><rect x="94.7625%" y="709" width="0.0636%" height="15" fill="rgb(214,109,53)" fg:x="4469" fg:w="3"/><text x="95.0125%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.06%)</title><rect x="94.7625%" y="693" width="0.0636%" height="15" fill="rgb(254,35,30)" fg:x="4469" fg:w="3"/><text x="95.0125%" y="703.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (3 samples, 0.06%)</title><rect x="94.7625%" y="677" width="0.0636%" height="15" fill="rgb(226,169,23)" fg:x="4469" fg:w="3"/><text x="95.0125%" y="687.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (3 samples, 0.06%)</title><rect x="94.7625%" y="661" width="0.0636%" height="15" fill="rgb(205,130,14)" fg:x="4469" fg:w="3"/><text x="95.0125%" y="671.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (3 samples, 0.06%)</title><rect x="94.7625%" y="645" width="0.0636%" height="15" fill="rgb(235,200,16)" fg:x="4469" fg:w="3"/><text x="95.0125%" y="655.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (3 samples, 0.06%)</title><rect x="94.7625%" y="629" width="0.0636%" height="15" fill="rgb(213,34,18)" fg:x="4469" fg:w="3"/><text x="95.0125%" y="639.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (3 samples, 0.06%)</title><rect x="94.7625%" y="613" width="0.0636%" height="15" fill="rgb(253,35,22)" fg:x="4469" fg:w="3"/><text x="95.0125%" y="623.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::add (2 samples, 0.04%)</title><rect x="94.7837%" y="597" width="0.0424%" height="15" fill="rgb(247,201,32)" fg:x="4470" fg:w="2"/><text x="95.0337%" y="607.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::get_or_add_state (2 samples, 0.04%)</title><rect x="94.7837%" y="581" width="0.0424%" height="15" fill="rgb(249,22,31)" fg:x="4470" fg:w="2"/><text x="95.0337%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.04%)</title><rect x="94.7837%" y="565" width="0.0424%" height="15" fill="rgb(241,229,15)" fg:x="4470" fg:w="2"/><text x="95.0337%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.04%)</title><rect x="94.7837%" y="549" width="0.0424%" height="15" fill="rgb(254,103,39)" fg:x="4470" fg:w="2"/><text x="95.0337%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.04%)</title><rect x="94.7837%" y="533" width="0.0424%" height="15" fill="rgb(254,53,35)" fg:x="4470" fg:w="2"/><text x="95.0337%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.04%)</title><rect x="94.7837%" y="517" width="0.0424%" height="15" fill="rgb(237,133,22)" fg:x="4470" fg:w="2"/><text x="95.0337%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.04%)</title><rect x="94.7837%" y="501" width="0.0424%" height="15" fill="rgb(237,156,49)" fg:x="4470" fg:w="2"/><text x="95.0337%" y="511.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.04%)</title><rect x="94.7837%" y="485" width="0.0424%" height="15" fill="rgb(214,150,36)" fg:x="4470" fg:w="2"/><text x="95.0337%" y="495.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.04%)</title><rect x="94.7837%" y="469" width="0.0424%" height="15" fill="rgb(254,47,34)" fg:x="4470" fg:w="2"/><text x="95.0337%" y="479.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.04%)</title><rect x="94.7837%" y="453" width="0.0424%" height="15" fill="rgb(254,73,4)" fg:x="4470" fg:w="2"/><text x="95.0337%" y="463.50"></text></g><g><title>_int_realloc (2 samples, 0.04%)</title><rect x="94.7837%" y="437" width="0.0424%" height="15" fill="rgb(231,75,41)" fg:x="4470" fg:w="2"/><text x="95.0337%" y="447.50"></text></g><g><title>_int_malloc (2 samples, 0.04%)</title><rect x="94.7837%" y="421" width="0.0424%" height="15" fill="rgb(222,219,51)" fg:x="4470" fg:w="2"/><text x="95.0337%" y="431.50"></text></g><g><title>std::sys_common::once::futex::Once::call (5 samples, 0.11%)</title><rect x="94.7413%" y="1077" width="0.1060%" height="15" fill="rgb(246,168,49)" fg:x="4468" fg:w="5"/><text x="94.9913%" y="1087.50"></text></g><g><title>std::sync::once::Once::call_once::{{closure}} (5 samples, 0.11%)</title><rect x="94.7413%" y="1061" width="0.1060%" height="15" fill="rgb(237,63,35)" fg:x="4468" fg:w="5"/><text x="94.9913%" y="1071.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}} (5 samples, 0.11%)</title><rect x="94.7413%" y="1045" width="0.1060%" height="15" fill="rgb(238,7,51)" fg:x="4468" fg:w="5"/><text x="94.9913%" y="1055.50"></text></g><g><title>core::ops::function::FnOnce::call_once (5 samples, 0.11%)</title><rect x="94.7413%" y="1029" width="0.1060%" height="15" fill="rgb(210,80,10)" fg:x="4468" fg:w="5"/><text x="94.9913%" y="1039.50"></text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref::__static_ref_initialize (5 samples, 0.11%)</title><rect x="94.7413%" y="1013" width="0.1060%" height="15" fill="rgb(205,24,29)" fg:x="4468" fg:w="5"/><text x="94.9913%" y="1023.50"></text></g><g><title>regex::regex::bytes::Regex::new (5 samples, 0.11%)</title><rect x="94.7413%" y="997" width="0.1060%" height="15" fill="rgb(246,224,25)" fg:x="4468" fg:w="5"/><text x="94.9913%" y="1007.50"></text></g><g><title>regex::builders::bytes::RegexBuilder::build (5 samples, 0.11%)</title><rect x="94.7413%" y="981" width="0.1060%" height="15" fill="rgb(236,76,51)" fg:x="4468" fg:w="5"/><text x="94.9913%" y="991.50"></text></g><g><title>regex::builders::Builder::build_one_bytes (5 samples, 0.11%)</title><rect x="94.7413%" y="965" width="0.1060%" height="15" fill="rgb(233,102,7)" fg:x="4468" fg:w="5"/><text x="94.9913%" y="975.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (5 samples, 0.11%)</title><rect x="94.7413%" y="949" width="0.1060%" height="15" fill="rgb(212,33,22)" fg:x="4468" fg:w="5"/><text x="94.9913%" y="959.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many (5 samples, 0.11%)</title><rect x="94.7413%" y="933" width="0.1060%" height="15" fill="rgb(236,25,32)" fg:x="4468" fg:w="5"/><text x="94.9913%" y="943.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (5 samples, 0.11%)</title><rect x="94.7413%" y="917" width="0.1060%" height="15" fill="rgb(250,142,30)" fg:x="4468" fg:w="5"/><text x="94.9913%" y="927.50"></text></g><g><title>regex_automata::meta::strategy::new (5 samples, 0.11%)</title><rect x="94.7413%" y="901" width="0.1060%" height="15" fill="rgb(243,171,22)" fg:x="4468" fg:w="5"/><text x="94.9913%" y="911.50"></text></g><g><title>regex_automata::meta::strategy::Core::new (4 samples, 0.08%)</title><rect x="94.7625%" y="885" width="0.0848%" height="15" fill="rgb(222,69,27)" fg:x="4469" fg:w="4"/><text x="95.0125%" y="895.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (4 samples, 0.08%)</title><rect x="94.7625%" y="869" width="0.0848%" height="15" fill="rgb(226,42,16)" fg:x="4469" fg:w="4"/><text x="95.0125%" y="879.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (4 samples, 0.08%)</title><rect x="94.7625%" y="853" width="0.0848%" height="15" fill="rgb(242,129,17)" fg:x="4469" fg:w="4"/><text x="95.0125%" y="863.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (4 samples, 0.08%)</title><rect x="94.7625%" y="837" width="0.0848%" height="15" fill="rgb(247,137,3)" fg:x="4469" fg:w="4"/><text x="95.0125%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.08%)</title><rect x="94.7625%" y="821" width="0.0848%" height="15" fill="rgb(214,109,53)" fg:x="4469" fg:w="4"/><text x="95.0125%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.08%)</title><rect x="94.7625%" y="805" width="0.0848%" height="15" fill="rgb(254,35,30)" fg:x="4469" fg:w="4"/><text x="95.0125%" y="815.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (4 samples, 0.08%)</title><rect x="94.7625%" y="789" width="0.0848%" height="15" fill="rgb(226,169,23)" fg:x="4469" fg:w="4"/><text x="95.0125%" y="799.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile::{{closure}} (4 samples, 0.08%)</title><rect x="94.7625%" y="773" width="0.0848%" height="15" fill="rgb(218,216,52)" fg:x="4469" fg:w="4"/><text x="95.0125%" y="783.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (4 samples, 0.08%)</title><rect x="94.7625%" y="757" width="0.0848%" height="15" fill="rgb(235,200,16)" fg:x="4469" fg:w="4"/><text x="95.0125%" y="767.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (4 samples, 0.08%)</title><rect x="94.7625%" y="741" width="0.0848%" height="15" fill="rgb(213,34,18)" fg:x="4469" fg:w="4"/><text x="95.0125%" y="751.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (4 samples, 0.08%)</title><rect x="94.7625%" y="725" width="0.0848%" height="15" fill="rgb(210,105,37)" fg:x="4469" fg:w="4"/><text x="95.0125%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 0.02%)</title><rect x="94.8261%" y="709" width="0.0212%" height="15" fill="rgb(222,94,14)" fg:x="4472" fg:w="1"/><text x="95.0761%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.02%)</title><rect x="94.8261%" y="693" width="0.0212%" height="15" fill="rgb(254,35,30)" fg:x="4472" fg:w="1"/><text x="95.0761%" y="703.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.02%)</title><rect x="94.8261%" y="677" width="0.0212%" height="15" fill="rgb(226,169,23)" fg:x="4472" fg:w="1"/><text x="95.0761%" y="687.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (1 samples, 0.02%)</title><rect x="94.8261%" y="661" width="0.0212%" height="15" fill="rgb(205,130,14)" fg:x="4472" fg:w="1"/><text x="95.0761%" y="671.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 0.02%)</title><rect x="94.8261%" y="645" width="0.0212%" height="15" fill="rgb(235,200,16)" fg:x="4472" fg:w="1"/><text x="95.0761%" y="655.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.02%)</title><rect x="94.8261%" y="629" width="0.0212%" height="15" fill="rgb(213,34,18)" fg:x="4472" fg:w="1"/><text x="95.0761%" y="639.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (1 samples, 0.02%)</title><rect x="94.8261%" y="613" width="0.0212%" height="15" fill="rgb(253,35,22)" fg:x="4472" fg:w="1"/><text x="95.0761%" y="623.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::compile (1 samples, 0.02%)</title><rect x="94.8261%" y="597" width="0.0212%" height="15" fill="rgb(233,39,2)" fg:x="4472" fg:w="1"/><text x="95.0761%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="94.8261%" y="581" width="0.0212%" height="15" fill="rgb(241,229,15)" fg:x="4472" fg:w="1"/><text x="95.0761%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="94.8261%" y="565" width="0.0212%" height="15" fill="rgb(254,103,39)" fg:x="4472" fg:w="1"/><text x="95.0761%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="94.8261%" y="549" width="0.0212%" height="15" fill="rgb(254,53,35)" fg:x="4472" fg:w="1"/><text x="95.0761%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="94.8261%" y="533" width="0.0212%" height="15" fill="rgb(237,133,22)" fg:x="4472" fg:w="1"/><text x="95.0761%" y="543.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="94.8261%" y="517" width="0.0212%" height="15" fill="rgb(206,112,53)" fg:x="4472" fg:w="1"/><text x="95.0761%" y="527.50"></text></g><g><title>regex_automata::util::primitives::&lt;impl core::ops::index::Index&lt;regex_automata::util::primitives::StateID&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect x="94.8473%" y="581" width="0.0212%" height="15" fill="rgb(221,218,26)" fg:x="4473" fg:w="1"/><text x="95.0973%" y="591.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::State::remap (4 samples, 0.08%)</title><rect x="94.8473%" y="597" width="0.0848%" height="15" fill="rgb(206,94,36)" fg:x="4473" fg:w="4"/><text x="95.0973%" y="607.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::Inner::remap (5 samples, 0.11%)</title><rect x="94.8473%" y="613" width="0.1060%" height="15" fill="rgb(232,176,30)" fg:x="4473" fg:w="5"/><text x="95.0973%" y="623.50"></text></g><g><title>regex_automata::util::alphabet::ByteClassSet::set_range (4 samples, 0.08%)</title><rect x="94.9534%" y="597" width="0.0848%" height="15" fill="rgb(234,204,30)" fg:x="4478" fg:w="4"/><text x="95.2034%" y="607.50"></text></g><g><title>regex_automata::util::alphabet::ByteSet::add (4 samples, 0.08%)</title><rect x="94.9534%" y="581" width="0.0848%" height="15" fill="rgb(228,133,21)" fg:x="4478" fg:w="4"/><text x="95.2034%" y="591.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::Inner::add (6 samples, 0.13%)</title><rect x="94.9534%" y="613" width="0.1272%" height="15" fill="rgb(212,0,0)" fg:x="4478" fg:w="6"/><text x="95.2034%" y="623.50"></text></g><g><title>__rdl_alloc (1 samples, 0.02%)</title><rect x="95.0806%" y="453" width="0.0212%" height="15" fill="rgb(241,201,43)" fg:x="4484" fg:w="1"/><text x="95.3306%" y="463.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="95.1018%" y="453" width="0.0212%" height="15" fill="rgb(206,112,53)" fg:x="4485" fg:w="1"/><text x="95.3518%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.06%)</title><rect x="95.0806%" y="613" width="0.0636%" height="15" fill="rgb(209,26,30)" fg:x="4484" fg:w="3"/><text x="95.3306%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.06%)</title><rect x="95.0806%" y="597" width="0.0636%" height="15" fill="rgb(229,121,46)" fg:x="4484" fg:w="3"/><text x="95.3306%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.06%)</title><rect x="95.0806%" y="581" width="0.0636%" height="15" fill="rgb(221,172,50)" fg:x="4484" fg:w="3"/><text x="95.3306%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.06%)</title><rect x="95.0806%" y="565" width="0.0636%" height="15" fill="rgb(216,42,52)" fg:x="4484" fg:w="3"/><text x="95.3306%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.06%)</title><rect x="95.0806%" y="549" width="0.0636%" height="15" fill="rgb(249,207,12)" fg:x="4484" fg:w="3"/><text x="95.3306%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.06%)</title><rect x="95.0806%" y="533" width="0.0636%" height="15" fill="rgb(224,194,14)" fg:x="4484" fg:w="3"/><text x="95.3306%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.06%)</title><rect x="95.0806%" y="517" width="0.0636%" height="15" fill="rgb(227,204,5)" fg:x="4484" fg:w="3"/><text x="95.3306%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.06%)</title><rect x="95.0806%" y="501" width="0.0636%" height="15" fill="rgb(231,114,21)" fg:x="4484" fg:w="3"/><text x="95.3306%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.06%)</title><rect x="95.0806%" y="485" width="0.0636%" height="15" fill="rgb(238,209,2)" fg:x="4484" fg:w="3"/><text x="95.3306%" y="495.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.06%)</title><rect x="95.0806%" y="469" width="0.0636%" height="15" fill="rgb(253,135,41)" fg:x="4484" fg:w="3"/><text x="95.3306%" y="479.50"></text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::process_stage1_blockzero_analysis (16 samples, 0.34%)</title><rect x="94.8473%" y="1077" width="0.3393%" height="15" fill="rgb(214,107,3)" fg:x="4473" fg:w="16"/><text x="95.0973%" y="1087.50"></text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::blockzero_analysis (16 samples, 0.34%)</title><rect x="94.8473%" y="1061" width="0.3393%" height="15" fill="rgb(228,176,28)" fg:x="4473" fg:w="16"/><text x="95.0973%" y="1071.50"></text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::blockzero_analysis_syslines (16 samples, 0.34%)</title><rect x="94.8473%" y="1045" width="0.3393%" height="15" fill="rgb(208,15,47)" fg:x="4473" fg:w="16"/><text x="95.0973%" y="1055.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_sysline_in_block (16 samples, 0.34%)</title><rect x="94.8473%" y="1029" width="0.3393%" height="15" fill="rgb(243,65,52)" fg:x="4473" fg:w="16"/><text x="95.0973%" y="1039.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_sysline_in_block_year (16 samples, 0.34%)</title><rect x="94.8473%" y="1013" width="0.3393%" height="15" fill="rgb(253,177,51)" fg:x="4473" fg:w="16"/><text x="95.0973%" y="1023.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::parse_datetime_in_line_cached (16 samples, 0.34%)</title><rect x="94.8473%" y="997" width="0.3393%" height="15" fill="rgb(231,75,50)" fg:x="4473" fg:w="16"/><text x="95.0973%" y="1007.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::parse_datetime_in_line (16 samples, 0.34%)</title><rect x="94.8473%" y="981" width="0.3393%" height="15" fill="rgb(234,54,15)" fg:x="4473" fg:w="16"/><text x="95.0973%" y="991.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_datetime_in_line (16 samples, 0.34%)</title><rect x="94.8473%" y="965" width="0.3393%" height="15" fill="rgb(212,53,9)" fg:x="4473" fg:w="16"/><text x="95.0973%" y="975.50"></text></g><g><title>s4lib::data::datetime::bytes_to_regex_to_datetime (16 samples, 0.34%)</title><rect x="94.8473%" y="949" width="0.3393%" height="15" fill="rgb(252,84,36)" fg:x="4473" fg:w="16"/><text x="95.0973%" y="959.50"></text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref (16 samples, 0.34%)</title><rect x="94.8473%" y="933" width="0.3393%" height="15" fill="rgb(217,15,43)" fg:x="4473" fg:w="16"/><text x="95.0973%" y="943.50"></text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref::__stability (16 samples, 0.34%)</title><rect x="94.8473%" y="917" width="0.3393%" height="15" fill="rgb(239,165,48)" fg:x="4473" fg:w="16"/><text x="95.0973%" y="927.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (16 samples, 0.34%)</title><rect x="94.8473%" y="901" width="0.3393%" height="15" fill="rgb(235,175,8)" fg:x="4473" fg:w="16"/><text x="95.0973%" y="911.50"></text></g><g><title>std::sync::once::Once::call_once (16 samples, 0.34%)</title><rect x="94.8473%" y="885" width="0.3393%" height="15" fill="rgb(247,17,47)" fg:x="4473" fg:w="16"/><text x="95.0973%" y="895.50"></text></g><g><title>std::sys_common::once::futex::Once::call (16 samples, 0.34%)</title><rect x="94.8473%" y="869" width="0.3393%" height="15" fill="rgb(246,168,49)" fg:x="4473" fg:w="16"/><text x="95.0973%" y="879.50"></text></g><g><title>std::sync::once::Once::call_once::{{closure}} (16 samples, 0.34%)</title><rect x="94.8473%" y="853" width="0.3393%" height="15" fill="rgb(237,63,35)" fg:x="4473" fg:w="16"/><text x="95.0973%" y="863.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}} (16 samples, 0.34%)</title><rect x="94.8473%" y="837" width="0.3393%" height="15" fill="rgb(238,7,51)" fg:x="4473" fg:w="16"/><text x="95.0973%" y="847.50"></text></g><g><title>core::ops::function::FnOnce::call_once (16 samples, 0.34%)</title><rect x="94.8473%" y="821" width="0.3393%" height="15" fill="rgb(210,80,10)" fg:x="4473" fg:w="16"/><text x="95.0973%" y="831.50"></text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref::__static_ref_initialize (16 samples, 0.34%)</title><rect x="94.8473%" y="805" width="0.3393%" height="15" fill="rgb(205,24,29)" fg:x="4473" fg:w="16"/><text x="95.0973%" y="815.50"></text></g><g><title>regex::regex::bytes::Regex::new (16 samples, 0.34%)</title><rect x="94.8473%" y="789" width="0.3393%" height="15" fill="rgb(246,224,25)" fg:x="4473" fg:w="16"/><text x="95.0973%" y="799.50"></text></g><g><title>regex::builders::bytes::RegexBuilder::build (16 samples, 0.34%)</title><rect x="94.8473%" y="773" width="0.3393%" height="15" fill="rgb(236,76,51)" fg:x="4473" fg:w="16"/><text x="95.0973%" y="783.50"></text></g><g><title>regex::builders::Builder::build_one_bytes (16 samples, 0.34%)</title><rect x="94.8473%" y="757" width="0.3393%" height="15" fill="rgb(233,102,7)" fg:x="4473" fg:w="16"/><text x="95.0973%" y="767.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (16 samples, 0.34%)</title><rect x="94.8473%" y="741" width="0.3393%" height="15" fill="rgb(212,33,22)" fg:x="4473" fg:w="16"/><text x="95.0973%" y="751.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many (16 samples, 0.34%)</title><rect x="94.8473%" y="725" width="0.3393%" height="15" fill="rgb(236,25,32)" fg:x="4473" fg:w="16"/><text x="95.0973%" y="735.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (16 samples, 0.34%)</title><rect x="94.8473%" y="709" width="0.3393%" height="15" fill="rgb(250,142,30)" fg:x="4473" fg:w="16"/><text x="95.0973%" y="719.50"></text></g><g><title>regex_automata::meta::strategy::new (16 samples, 0.34%)</title><rect x="94.8473%" y="693" width="0.3393%" height="15" fill="rgb(243,171,22)" fg:x="4473" fg:w="16"/><text x="95.0973%" y="703.50"></text></g><g><title>regex_automata::meta::strategy::Core::new (16 samples, 0.34%)</title><rect x="94.8473%" y="677" width="0.3393%" height="15" fill="rgb(222,69,27)" fg:x="4473" fg:w="16"/><text x="95.0973%" y="687.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (16 samples, 0.34%)</title><rect x="94.8473%" y="661" width="0.3393%" height="15" fill="rgb(226,42,16)" fg:x="4473" fg:w="16"/><text x="95.0973%" y="671.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (16 samples, 0.34%)</title><rect x="94.8473%" y="645" width="0.3393%" height="15" fill="rgb(242,129,17)" fg:x="4473" fg:w="16"/><text x="95.0973%" y="655.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::build (16 samples, 0.34%)</title><rect x="94.8473%" y="629" width="0.3393%" height="15" fill="rgb(205,136,15)" fg:x="4473" fg:w="16"/><text x="95.0973%" y="639.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="95.1866%" y="485" width="0.0212%" height="15" fill="rgb(222,219,51)" fg:x="4489" fg:w="1"/><text x="95.4366%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.04%)</title><rect x="95.1866%" y="517" width="0.0424%" height="15" fill="rgb(237,133,22)" fg:x="4489" fg:w="2"/><text x="95.4366%" y="527.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.04%)</title><rect x="95.1866%" y="501" width="0.0424%" height="15" fill="rgb(206,112,53)" fg:x="4489" fg:w="2"/><text x="95.4366%" y="511.50"></text></g><g><title>regex_syntax::hir::literal::Seq::optimize_for_prefix_by_preference (3 samples, 0.06%)</title><rect x="95.1866%" y="709" width="0.0636%" height="15" fill="rgb(206,179,34)" fg:x="4489" fg:w="3"/><text x="95.4366%" y="719.50"></text></g><g><title>regex_syntax::hir::literal::Seq::optimize_by_preference (3 samples, 0.06%)</title><rect x="95.1866%" y="693" width="0.0636%" height="15" fill="rgb(208,121,1)" fg:x="4489" fg:w="3"/><text x="95.4366%" y="703.50"></text></g><g><title>regex_syntax::hir::literal::PreferenceTrie::minimize (3 samples, 0.06%)</title><rect x="95.1866%" y="677" width="0.0636%" height="15" fill="rgb(240,28,15)" fg:x="4489" fg:w="3"/><text x="95.4366%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut (3 samples, 0.06%)</title><rect x="95.1866%" y="661" width="0.0636%" height="15" fill="rgb(208,159,28)" fg:x="4489" fg:w="3"/><text x="95.4366%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut::process_loop (3 samples, 0.06%)</title><rect x="95.1866%" y="645" width="0.0636%" height="15" fill="rgb(227,228,3)" fg:x="4489" fg:w="3"/><text x="95.4366%" y="655.50"></text></g><g><title>regex_syntax::hir::literal::PreferenceTrie::minimize::{{closure}} (3 samples, 0.06%)</title><rect x="95.1866%" y="629" width="0.0636%" height="15" fill="rgb(234,110,33)" fg:x="4489" fg:w="3"/><text x="95.4366%" y="639.50"></text></g><g><title>regex_syntax::hir::literal::PreferenceTrie::insert (3 samples, 0.06%)</title><rect x="95.1866%" y="613" width="0.0636%" height="15" fill="rgb(208,38,45)" fg:x="4489" fg:w="3"/><text x="95.4366%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (3 samples, 0.06%)</title><rect x="95.1866%" y="597" width="0.0636%" height="15" fill="rgb(222,129,7)" fg:x="4489" fg:w="3"/><text x="95.4366%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.06%)</title><rect x="95.1866%" y="581" width="0.0636%" height="15" fill="rgb(212,159,3)" fg:x="4489" fg:w="3"/><text x="95.4366%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.06%)</title><rect x="95.1866%" y="565" width="0.0636%" height="15" fill="rgb(231,142,39)" fg:x="4489" fg:w="3"/><text x="95.4366%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.06%)</title><rect x="95.1866%" y="549" width="0.0636%" height="15" fill="rgb(249,2,22)" fg:x="4489" fg:w="3"/><text x="95.4366%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.06%)</title><rect x="95.1866%" y="533" width="0.0636%" height="15" fill="rgb(254,53,35)" fg:x="4489" fg:w="3"/><text x="95.4366%" y="543.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::extract_concat (1 samples, 0.02%)</title><rect x="95.2502%" y="693" width="0.0212%" height="15" fill="rgb(215,217,42)" fg:x="4492" fg:w="1"/><text x="95.5002%" y="703.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::cross (1 samples, 0.02%)</title><rect x="95.2502%" y="677" width="0.0212%" height="15" fill="rgb(248,169,31)" fg:x="4492" fg:w="1"/><text x="95.5002%" y="687.50"></text></g><g><title>regex_syntax::hir::literal::Seq::cross_forward (1 samples, 0.02%)</title><rect x="95.2502%" y="661" width="0.0212%" height="15" fill="rgb(228,175,28)" fg:x="4492" fg:w="1"/><text x="95.5002%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="95.2502%" y="645" width="0.0212%" height="15" fill="rgb(241,229,15)" fg:x="4492" fg:w="1"/><text x="95.5002%" y="655.50"></text></g><g><title>regex_automata::meta::strategy::ReverseInner::new (5 samples, 0.11%)</title><rect x="95.1866%" y="757" width="0.1060%" height="15" fill="rgb(225,146,32)" fg:x="4489" fg:w="5"/><text x="95.4366%" y="767.50"></text></g><g><title>regex_automata::meta::reverse_inner::extract (5 samples, 0.11%)</title><rect x="95.1866%" y="741" width="0.1060%" height="15" fill="rgb(209,78,45)" fg:x="4489" fg:w="5"/><text x="95.4366%" y="751.50"></text></g><g><title>regex_automata::meta::reverse_inner::prefilter (5 samples, 0.11%)</title><rect x="95.1866%" y="725" width="0.1060%" height="15" fill="rgb(221,50,42)" fg:x="4489" fg:w="5"/><text x="95.4366%" y="735.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::extract (2 samples, 0.04%)</title><rect x="95.2502%" y="709" width="0.0424%" height="15" fill="rgb(242,28,8)" fg:x="4492" fg:w="2"/><text x="95.5002%" y="719.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::extract_alternation (1 samples, 0.02%)</title><rect x="95.2714%" y="693" width="0.0212%" height="15" fill="rgb(236,31,24)" fg:x="4493" fg:w="1"/><text x="95.5214%" y="703.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::union (1 samples, 0.02%)</title><rect x="95.2714%" y="677" width="0.0212%" height="15" fill="rgb(253,75,3)" fg:x="4493" fg:w="1"/><text x="95.5214%" y="687.50"></text></g><g><title>regex_syntax::hir::literal::Seq::union (1 samples, 0.02%)</title><rect x="95.2714%" y="661" width="0.0212%" height="15" fill="rgb(226,117,51)" fg:x="4493" fg:w="1"/><text x="95.5214%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.02%)</title><rect x="95.2714%" y="645" width="0.0212%" height="15" fill="rgb(205,186,49)" fg:x="4493" fg:w="1"/><text x="95.5214%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="95.2714%" y="629" width="0.0212%" height="15" fill="rgb(232,211,42)" fg:x="4493" fg:w="1"/><text x="95.5214%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.02%)</title><rect x="95.2714%" y="613" width="0.0212%" height="15" fill="rgb(214,146,48)" fg:x="4493" fg:w="1"/><text x="95.5214%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.02%)</title><rect x="95.2714%" y="597" width="0.0212%" height="15" fill="rgb(245,181,4)" fg:x="4493" fg:w="1"/><text x="95.5214%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.02%)</title><rect x="95.2714%" y="581" width="0.0212%" height="15" fill="rgb(214,12,39)" fg:x="4493" fg:w="1"/><text x="95.5214%" y="591.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (1 samples, 0.02%)</title><rect x="95.2926%" y="709" width="0.0212%" height="15" fill="rgb(247,137,3)" fg:x="4494" fg:w="1"/><text x="95.5426%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="95.2926%" y="693" width="0.0212%" height="15" fill="rgb(214,109,53)" fg:x="4494" fg:w="1"/><text x="95.5426%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.02%)</title><rect x="95.2926%" y="677" width="0.0212%" height="15" fill="rgb(254,35,30)" fg:x="4494" fg:w="1"/><text x="95.5426%" y="687.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.02%)</title><rect x="95.2926%" y="661" width="0.0212%" height="15" fill="rgb(226,169,23)" fg:x="4494" fg:w="1"/><text x="95.5426%" y="671.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile::{{closure}} (1 samples, 0.02%)</title><rect x="95.2926%" y="645" width="0.0212%" height="15" fill="rgb(218,216,52)" fg:x="4494" fg:w="1"/><text x="95.5426%" y="655.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 0.02%)</title><rect x="95.2926%" y="629" width="0.0212%" height="15" fill="rgb(235,200,16)" fg:x="4494" fg:w="1"/><text x="95.5426%" y="639.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.02%)</title><rect x="95.2926%" y="613" width="0.0212%" height="15" fill="rgb(213,34,18)" fg:x="4494" fg:w="1"/><text x="95.5426%" y="623.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (1 samples, 0.02%)</title><rect x="95.2926%" y="597" width="0.0212%" height="15" fill="rgb(210,105,37)" fg:x="4494" fg:w="1"/><text x="95.5426%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="95.2926%" y="581" width="0.0212%" height="15" fill="rgb(214,109,53)" fg:x="4494" fg:w="1"/><text x="95.5426%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.02%)</title><rect x="95.2926%" y="565" width="0.0212%" height="15" fill="rgb(254,35,30)" fg:x="4494" fg:w="1"/><text x="95.5426%" y="575.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.02%)</title><rect x="95.2926%" y="549" width="0.0212%" height="15" fill="rgb(226,169,23)" fg:x="4494" fg:w="1"/><text x="95.5426%" y="559.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (1 samples, 0.02%)</title><rect x="95.2926%" y="533" width="0.0212%" height="15" fill="rgb(205,130,14)" fg:x="4494" fg:w="1"/><text x="95.5426%" y="543.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 0.02%)</title><rect x="95.2926%" y="517" width="0.0212%" height="15" fill="rgb(235,200,16)" fg:x="4494" fg:w="1"/><text x="95.5426%" y="527.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::add_capture_end (1 samples, 0.02%)</title><rect x="95.2926%" y="501" width="0.0212%" height="15" fill="rgb(236,172,18)" fg:x="4494" fg:w="1"/><text x="95.5426%" y="511.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add_capture_end (1 samples, 0.02%)</title><rect x="95.2926%" y="485" width="0.0212%" height="15" fill="rgb(232,193,12)" fg:x="4494" fg:w="1"/><text x="95.5426%" y="495.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add (1 samples, 0.02%)</title><rect x="95.2926%" y="469" width="0.0212%" height="15" fill="rgb(253,91,29)" fg:x="4494" fg:w="1"/><text x="95.5426%" y="479.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::Inner::set_captures (1 samples, 0.02%)</title><rect x="95.3138%" y="693" width="0.0212%" height="15" fill="rgb(254,224,34)" fg:x="4495" fg:w="1"/><text x="95.5638%" y="703.50"></text></g><g><title>regex_automata::util::captures::GroupInfo::new (1 samples, 0.02%)</title><rect x="95.3138%" y="677" width="0.0212%" height="15" fill="rgb(209,86,2)" fg:x="4495" fg:w="1"/><text x="95.5638%" y="687.50"></text></g><g><title>regex_automata::util::captures::GroupInfoInner::add_explicit_group (1 samples, 0.02%)</title><rect x="95.3138%" y="661" width="0.0212%" height="15" fill="rgb(232,40,15)" fg:x="4495" fg:w="1"/><text x="95.5638%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.02%)</title><rect x="95.3138%" y="645" width="0.0212%" height="15" fill="rgb(237,8,32)" fg:x="4495" fg:w="1"/><text x="95.5638%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="95.3138%" y="629" width="0.0212%" height="15" fill="rgb(228,156,5)" fg:x="4495" fg:w="1"/><text x="95.5638%" y="639.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.02%)</title><rect x="95.3138%" y="613" width="0.0212%" height="15" fill="rgb(221,125,3)" fg:x="4495" fg:w="1"/><text x="95.5638%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="95.3138%" y="597" width="0.0212%" height="15" fill="rgb(222,198,6)" fg:x="4495" fg:w="1"/><text x="95.5638%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="95.3138%" y="581" width="0.0212%" height="15" fill="rgb(218,214,24)" fg:x="4495" fg:w="1"/><text x="95.5638%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="95.3138%" y="565" width="0.0212%" height="15" fill="rgb(230,187,21)" fg:x="4495" fg:w="1"/><text x="95.5638%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="95.3138%" y="549" width="0.0212%" height="15" fill="rgb(244,191,49)" fg:x="4495" fg:w="1"/><text x="95.5638%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="95.3138%" y="533" width="0.0212%" height="15" fill="rgb(215,158,9)" fg:x="4495" fg:w="1"/><text x="95.5638%" y="543.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::parse_datetime_in_line_cached (8 samples, 0.17%)</title><rect x="95.1866%" y="1077" width="0.1696%" height="15" fill="rgb(231,75,50)" fg:x="4489" fg:w="8"/><text x="95.4366%" y="1087.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::parse_datetime_in_line (8 samples, 0.17%)</title><rect x="95.1866%" y="1061" width="0.1696%" height="15" fill="rgb(234,54,15)" fg:x="4489" fg:w="8"/><text x="95.4366%" y="1071.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_datetime_in_line (8 samples, 0.17%)</title><rect x="95.1866%" y="1045" width="0.1696%" height="15" fill="rgb(212,53,9)" fg:x="4489" fg:w="8"/><text x="95.4366%" y="1055.50"></text></g><g><title>s4lib::data::datetime::bytes_to_regex_to_datetime (8 samples, 0.17%)</title><rect x="95.1866%" y="1029" width="0.1696%" height="15" fill="rgb(252,84,36)" fg:x="4489" fg:w="8"/><text x="95.4366%" y="1039.50"></text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref (8 samples, 0.17%)</title><rect x="95.1866%" y="1013" width="0.1696%" height="15" fill="rgb(217,15,43)" fg:x="4489" fg:w="8"/><text x="95.4366%" y="1023.50"></text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref::__stability (8 samples, 0.17%)</title><rect x="95.1866%" y="997" width="0.1696%" height="15" fill="rgb(239,165,48)" fg:x="4489" fg:w="8"/><text x="95.4366%" y="1007.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (8 samples, 0.17%)</title><rect x="95.1866%" y="981" width="0.1696%" height="15" fill="rgb(235,175,8)" fg:x="4489" fg:w="8"/><text x="95.4366%" y="991.50"></text></g><g><title>std::sync::once::Once::call_once (8 samples, 0.17%)</title><rect x="95.1866%" y="965" width="0.1696%" height="15" fill="rgb(247,17,47)" fg:x="4489" fg:w="8"/><text x="95.4366%" y="975.50"></text></g><g><title>std::sys_common::once::futex::Once::call (8 samples, 0.17%)</title><rect x="95.1866%" y="949" width="0.1696%" height="15" fill="rgb(246,168,49)" fg:x="4489" fg:w="8"/><text x="95.4366%" y="959.50"></text></g><g><title>std::sync::once::Once::call_once::{{closure}} (8 samples, 0.17%)</title><rect x="95.1866%" y="933" width="0.1696%" height="15" fill="rgb(237,63,35)" fg:x="4489" fg:w="8"/><text x="95.4366%" y="943.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}} (8 samples, 0.17%)</title><rect x="95.1866%" y="917" width="0.1696%" height="15" fill="rgb(238,7,51)" fg:x="4489" fg:w="8"/><text x="95.4366%" y="927.50"></text></g><g><title>core::ops::function::FnOnce::call_once (8 samples, 0.17%)</title><rect x="95.1866%" y="901" width="0.1696%" height="15" fill="rgb(210,80,10)" fg:x="4489" fg:w="8"/><text x="95.4366%" y="911.50"></text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref::__static_ref_initialize (8 samples, 0.17%)</title><rect x="95.1866%" y="885" width="0.1696%" height="15" fill="rgb(205,24,29)" fg:x="4489" fg:w="8"/><text x="95.4366%" y="895.50"></text></g><g><title>regex::regex::bytes::Regex::new (8 samples, 0.17%)</title><rect x="95.1866%" y="869" width="0.1696%" height="15" fill="rgb(246,224,25)" fg:x="4489" fg:w="8"/><text x="95.4366%" y="879.50"></text></g><g><title>regex::builders::bytes::RegexBuilder::build (8 samples, 0.17%)</title><rect x="95.1866%" y="853" width="0.1696%" height="15" fill="rgb(236,76,51)" fg:x="4489" fg:w="8"/><text x="95.4366%" y="863.50"></text></g><g><title>regex::builders::Builder::build_one_bytes (8 samples, 0.17%)</title><rect x="95.1866%" y="837" width="0.1696%" height="15" fill="rgb(233,102,7)" fg:x="4489" fg:w="8"/><text x="95.4366%" y="847.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (8 samples, 0.17%)</title><rect x="95.1866%" y="821" width="0.1696%" height="15" fill="rgb(212,33,22)" fg:x="4489" fg:w="8"/><text x="95.4366%" y="831.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many (8 samples, 0.17%)</title><rect x="95.1866%" y="805" width="0.1696%" height="15" fill="rgb(236,25,32)" fg:x="4489" fg:w="8"/><text x="95.4366%" y="815.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (8 samples, 0.17%)</title><rect x="95.1866%" y="789" width="0.1696%" height="15" fill="rgb(250,142,30)" fg:x="4489" fg:w="8"/><text x="95.4366%" y="799.50"></text></g><g><title>regex_automata::meta::strategy::new (8 samples, 0.17%)</title><rect x="95.1866%" y="773" width="0.1696%" height="15" fill="rgb(243,171,22)" fg:x="4489" fg:w="8"/><text x="95.4366%" y="783.50"></text></g><g><title>regex_automata::meta::strategy::Core::new (3 samples, 0.06%)</title><rect x="95.2926%" y="757" width="0.0636%" height="15" fill="rgb(222,69,27)" fg:x="4494" fg:w="3"/><text x="95.5426%" y="767.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (3 samples, 0.06%)</title><rect x="95.2926%" y="741" width="0.0636%" height="15" fill="rgb(226,42,16)" fg:x="4494" fg:w="3"/><text x="95.5426%" y="751.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (3 samples, 0.06%)</title><rect x="95.2926%" y="725" width="0.0636%" height="15" fill="rgb(242,129,17)" fg:x="4494" fg:w="3"/><text x="95.5426%" y="735.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::build (2 samples, 0.04%)</title><rect x="95.3138%" y="709" width="0.0424%" height="15" fill="rgb(205,136,15)" fg:x="4495" fg:w="2"/><text x="95.5638%" y="719.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::Inner::into_nfa (1 samples, 0.02%)</title><rect x="95.3350%" y="693" width="0.0212%" height="15" fill="rgb(253,86,8)" fg:x="4496" fg:w="1"/><text x="95.5850%" y="703.50"></text></g><g><title>regex_automata::util::alphabet::ByteClassSet::byte_classes (1 samples, 0.02%)</title><rect x="95.3350%" y="677" width="0.0212%" height="15" fill="rgb(211,195,22)" fg:x="4496" fg:w="1"/><text x="95.5850%" y="687.50"></text></g><g><title>regex_automata::util::alphabet::ByteSet::contains (1 samples, 0.02%)</title><rect x="95.3350%" y="661" width="0.0212%" height="15" fill="rgb(229,229,29)" fg:x="4496" fg:w="1"/><text x="95.5850%" y="671.50"></text></g><g><title>regex_automata::meta::strategy::ReverseInner::new (1 samples, 0.02%)</title><rect x="95.3562%" y="741" width="0.0212%" height="15" fill="rgb(225,146,32)" fg:x="4497" fg:w="1"/><text x="95.6062%" y="751.50"></text></g><g><title>regex_automata::meta::wrappers::ReverseHybrid::new (1 samples, 0.02%)</title><rect x="95.3562%" y="725" width="0.0212%" height="15" fill="rgb(209,205,6)" fg:x="4497" fg:w="1"/><text x="95.6062%" y="735.50"></text></g><g><title>regex_automata::meta::wrappers::ReverseHybridEngine::new (1 samples, 0.02%)</title><rect x="95.3562%" y="709" width="0.0212%" height="15" fill="rgb(227,225,36)" fg:x="4497" fg:w="1"/><text x="95.6062%" y="719.50"></text></g><g><title>regex_automata::hybrid::dfa::Builder::new (1 samples, 0.02%)</title><rect x="95.3562%" y="693" width="0.0212%" height="15" fill="rgb(240,102,25)" fg:x="4497" fg:w="1"/><text x="95.6062%" y="703.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.02%)</title><rect x="95.3562%" y="677" width="0.0212%" height="15" fill="rgb(217,126,36)" fg:x="4497" fg:w="1"/><text x="95.6062%" y="687.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (1 samples, 0.02%)</title><rect x="95.3774%" y="693" width="0.0212%" height="15" fill="rgb(247,137,3)" fg:x="4498" fg:w="1"/><text x="95.6274%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="95.3774%" y="677" width="0.0212%" height="15" fill="rgb(214,109,53)" fg:x="4498" fg:w="1"/><text x="95.6274%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.02%)</title><rect x="95.3774%" y="661" width="0.0212%" height="15" fill="rgb(254,35,30)" fg:x="4498" fg:w="1"/><text x="95.6274%" y="671.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.02%)</title><rect x="95.3774%" y="645" width="0.0212%" height="15" fill="rgb(226,169,23)" fg:x="4498" fg:w="1"/><text x="95.6274%" y="655.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile::{{closure}} (1 samples, 0.02%)</title><rect x="95.3774%" y="629" width="0.0212%" height="15" fill="rgb(218,216,52)" fg:x="4498" fg:w="1"/><text x="95.6274%" y="639.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 0.02%)</title><rect x="95.3774%" y="613" width="0.0212%" height="15" fill="rgb(235,200,16)" fg:x="4498" fg:w="1"/><text x="95.6274%" y="623.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.02%)</title><rect x="95.3774%" y="597" width="0.0212%" height="15" fill="rgb(213,34,18)" fg:x="4498" fg:w="1"/><text x="95.6274%" y="607.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (1 samples, 0.02%)</title><rect x="95.3774%" y="581" width="0.0212%" height="15" fill="rgb(210,105,37)" fg:x="4498" fg:w="1"/><text x="95.6274%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="95.3774%" y="565" width="0.0212%" height="15" fill="rgb(214,109,53)" fg:x="4498" fg:w="1"/><text x="95.6274%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.02%)</title><rect x="95.3774%" y="549" width="0.0212%" height="15" fill="rgb(254,35,30)" fg:x="4498" fg:w="1"/><text x="95.6274%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.02%)</title><rect x="95.3774%" y="533" width="0.0212%" height="15" fill="rgb(226,169,23)" fg:x="4498" fg:w="1"/><text x="95.6274%" y="543.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (1 samples, 0.02%)</title><rect x="95.3774%" y="517" width="0.0212%" height="15" fill="rgb(205,130,14)" fg:x="4498" fg:w="1"/><text x="95.6274%" y="527.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::Inner::add (2 samples, 0.04%)</title><rect x="95.3986%" y="677" width="0.0424%" height="15" fill="rgb(212,0,0)" fg:x="4499" fg:w="2"/><text x="95.6486%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.04%)</title><rect x="95.3986%" y="661" width="0.0424%" height="15" fill="rgb(241,229,15)" fg:x="4499" fg:w="2"/><text x="95.6486%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.04%)</title><rect x="95.3986%" y="645" width="0.0424%" height="15" fill="rgb(254,103,39)" fg:x="4499" fg:w="2"/><text x="95.6486%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.04%)</title><rect x="95.3986%" y="629" width="0.0424%" height="15" fill="rgb(254,53,35)" fg:x="4499" fg:w="2"/><text x="95.6486%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.04%)</title><rect x="95.3986%" y="613" width="0.0424%" height="15" fill="rgb(237,133,22)" fg:x="4499" fg:w="2"/><text x="95.6486%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.04%)</title><rect x="95.3986%" y="597" width="0.0424%" height="15" fill="rgb(237,156,49)" fg:x="4499" fg:w="2"/><text x="95.6486%" y="607.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.04%)</title><rect x="95.3986%" y="581" width="0.0424%" height="15" fill="rgb(214,150,36)" fg:x="4499" fg:w="2"/><text x="95.6486%" y="591.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.04%)</title><rect x="95.3986%" y="565" width="0.0424%" height="15" fill="rgb(254,47,34)" fg:x="4499" fg:w="2"/><text x="95.6486%" y="575.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.04%)</title><rect x="95.3986%" y="549" width="0.0424%" height="15" fill="rgb(254,73,4)" fg:x="4499" fg:w="2"/><text x="95.6486%" y="559.50"></text></g><g><title>_int_realloc (2 samples, 0.04%)</title><rect x="95.3986%" y="533" width="0.0424%" height="15" fill="rgb(231,75,41)" fg:x="4499" fg:w="2"/><text x="95.6486%" y="543.50"></text></g><g><title>__memmove_avx512_unaligned_erms (2 samples, 0.04%)</title><rect x="95.3986%" y="517" width="0.0424%" height="15" fill="rgb(217,126,36)" fg:x="4499" fg:w="2"/><text x="95.6486%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (1 samples, 0.02%)</title><rect x="95.4411%" y="677" width="0.0212%" height="15" fill="rgb(249,199,35)" fg:x="4501" fg:w="1"/><text x="95.6911%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (1 samples, 0.02%)</title><rect x="95.4411%" y="661" width="0.0212%" height="15" fill="rgb(216,52,5)" fg:x="4501" fg:w="1"/><text x="95.6911%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="95.4411%" y="645" width="0.0212%" height="15" fill="rgb(212,159,3)" fg:x="4501" fg:w="1"/><text x="95.6911%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="95.4411%" y="629" width="0.0212%" height="15" fill="rgb(231,142,39)" fg:x="4501" fg:w="1"/><text x="95.6911%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="95.4411%" y="613" width="0.0212%" height="15" fill="rgb(249,2,22)" fg:x="4501" fg:w="1"/><text x="95.6911%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="95.4411%" y="597" width="0.0212%" height="15" fill="rgb(254,53,35)" fg:x="4501" fg:w="1"/><text x="95.6911%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="95.4411%" y="581" width="0.0212%" height="15" fill="rgb(237,133,22)" fg:x="4501" fg:w="1"/><text x="95.6911%" y="591.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="95.4411%" y="565" width="0.0212%" height="15" fill="rgb(206,112,53)" fg:x="4501" fg:w="1"/><text x="95.6911%" y="575.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="95.4411%" y="549" width="0.0212%" height="15" fill="rgb(222,219,51)" fg:x="4501" fg:w="1"/><text x="95.6911%" y="559.50"></text></g><g><title>malloc_consolidate (1 samples, 0.02%)</title><rect x="95.4411%" y="533" width="0.0212%" height="15" fill="rgb(228,194,39)" fg:x="4501" fg:w="1"/><text x="95.6911%" y="543.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_sysline_in_block_year (7 samples, 0.15%)</title><rect x="95.3562%" y="1077" width="0.1484%" height="15" fill="rgb(253,177,51)" fg:x="4497" fg:w="7"/><text x="95.6062%" y="1087.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::parse_datetime_in_line_cached (7 samples, 0.15%)</title><rect x="95.3562%" y="1061" width="0.1484%" height="15" fill="rgb(231,75,50)" fg:x="4497" fg:w="7"/><text x="95.6062%" y="1071.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::parse_datetime_in_line (7 samples, 0.15%)</title><rect x="95.3562%" y="1045" width="0.1484%" height="15" fill="rgb(234,54,15)" fg:x="4497" fg:w="7"/><text x="95.6062%" y="1055.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_datetime_in_line (7 samples, 0.15%)</title><rect x="95.3562%" y="1029" width="0.1484%" height="15" fill="rgb(212,53,9)" fg:x="4497" fg:w="7"/><text x="95.6062%" y="1039.50"></text></g><g><title>s4lib::data::datetime::bytes_to_regex_to_datetime (7 samples, 0.15%)</title><rect x="95.3562%" y="1013" width="0.1484%" height="15" fill="rgb(252,84,36)" fg:x="4497" fg:w="7"/><text x="95.6062%" y="1023.50"></text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref (7 samples, 0.15%)</title><rect x="95.3562%" y="997" width="0.1484%" height="15" fill="rgb(217,15,43)" fg:x="4497" fg:w="7"/><text x="95.6062%" y="1007.50"></text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref::__stability (7 samples, 0.15%)</title><rect x="95.3562%" y="981" width="0.1484%" height="15" fill="rgb(239,165,48)" fg:x="4497" fg:w="7"/><text x="95.6062%" y="991.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (7 samples, 0.15%)</title><rect x="95.3562%" y="965" width="0.1484%" height="15" fill="rgb(235,175,8)" fg:x="4497" fg:w="7"/><text x="95.6062%" y="975.50"></text></g><g><title>std::sync::once::Once::call_once (7 samples, 0.15%)</title><rect x="95.3562%" y="949" width="0.1484%" height="15" fill="rgb(247,17,47)" fg:x="4497" fg:w="7"/><text x="95.6062%" y="959.50"></text></g><g><title>std::sys_common::once::futex::Once::call (7 samples, 0.15%)</title><rect x="95.3562%" y="933" width="0.1484%" height="15" fill="rgb(246,168,49)" fg:x="4497" fg:w="7"/><text x="95.6062%" y="943.50"></text></g><g><title>std::sync::once::Once::call_once::{{closure}} (7 samples, 0.15%)</title><rect x="95.3562%" y="917" width="0.1484%" height="15" fill="rgb(237,63,35)" fg:x="4497" fg:w="7"/><text x="95.6062%" y="927.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}} (7 samples, 0.15%)</title><rect x="95.3562%" y="901" width="0.1484%" height="15" fill="rgb(238,7,51)" fg:x="4497" fg:w="7"/><text x="95.6062%" y="911.50"></text></g><g><title>core::ops::function::FnOnce::call_once (7 samples, 0.15%)</title><rect x="95.3562%" y="885" width="0.1484%" height="15" fill="rgb(210,80,10)" fg:x="4497" fg:w="7"/><text x="95.6062%" y="895.50"></text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref::__static_ref_initialize (7 samples, 0.15%)</title><rect x="95.3562%" y="869" width="0.1484%" height="15" fill="rgb(205,24,29)" fg:x="4497" fg:w="7"/><text x="95.6062%" y="879.50"></text></g><g><title>regex::regex::bytes::Regex::new (7 samples, 0.15%)</title><rect x="95.3562%" y="853" width="0.1484%" height="15" fill="rgb(246,224,25)" fg:x="4497" fg:w="7"/><text x="95.6062%" y="863.50"></text></g><g><title>regex::builders::bytes::RegexBuilder::build (7 samples, 0.15%)</title><rect x="95.3562%" y="837" width="0.1484%" height="15" fill="rgb(236,76,51)" fg:x="4497" fg:w="7"/><text x="95.6062%" y="847.50"></text></g><g><title>regex::builders::Builder::build_one_bytes (7 samples, 0.15%)</title><rect x="95.3562%" y="821" width="0.1484%" height="15" fill="rgb(233,102,7)" fg:x="4497" fg:w="7"/><text x="95.6062%" y="831.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (7 samples, 0.15%)</title><rect x="95.3562%" y="805" width="0.1484%" height="15" fill="rgb(212,33,22)" fg:x="4497" fg:w="7"/><text x="95.6062%" y="815.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many (7 samples, 0.15%)</title><rect x="95.3562%" y="789" width="0.1484%" height="15" fill="rgb(236,25,32)" fg:x="4497" fg:w="7"/><text x="95.6062%" y="799.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (7 samples, 0.15%)</title><rect x="95.3562%" y="773" width="0.1484%" height="15" fill="rgb(250,142,30)" fg:x="4497" fg:w="7"/><text x="95.6062%" y="783.50"></text></g><g><title>regex_automata::meta::strategy::new (7 samples, 0.15%)</title><rect x="95.3562%" y="757" width="0.1484%" height="15" fill="rgb(243,171,22)" fg:x="4497" fg:w="7"/><text x="95.6062%" y="767.50"></text></g><g><title>regex_automata::meta::strategy::Core::new (6 samples, 0.13%)</title><rect x="95.3774%" y="741" width="0.1272%" height="15" fill="rgb(222,69,27)" fg:x="4498" fg:w="6"/><text x="95.6274%" y="751.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (6 samples, 0.13%)</title><rect x="95.3774%" y="725" width="0.1272%" height="15" fill="rgb(226,42,16)" fg:x="4498" fg:w="6"/><text x="95.6274%" y="735.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (6 samples, 0.13%)</title><rect x="95.3774%" y="709" width="0.1272%" height="15" fill="rgb(242,129,17)" fg:x="4498" fg:w="6"/><text x="95.6274%" y="719.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::build (5 samples, 0.11%)</title><rect x="95.3986%" y="693" width="0.1060%" height="15" fill="rgb(205,136,15)" fg:x="4499" fg:w="5"/><text x="95.6486%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.04%)</title><rect x="95.4623%" y="677" width="0.0424%" height="15" fill="rgb(209,26,30)" fg:x="4502" fg:w="2"/><text x="95.7123%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.04%)</title><rect x="95.4623%" y="661" width="0.0424%" height="15" fill="rgb(229,121,46)" fg:x="4502" fg:w="2"/><text x="95.7123%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.04%)</title><rect x="95.4623%" y="645" width="0.0424%" height="15" fill="rgb(221,172,50)" fg:x="4502" fg:w="2"/><text x="95.7123%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.04%)</title><rect x="95.4623%" y="629" width="0.0424%" height="15" fill="rgb(216,42,52)" fg:x="4502" fg:w="2"/><text x="95.7123%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.04%)</title><rect x="95.4623%" y="613" width="0.0424%" height="15" fill="rgb(249,207,12)" fg:x="4502" fg:w="2"/><text x="95.7123%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.04%)</title><rect x="95.4623%" y="597" width="0.0424%" height="15" fill="rgb(224,194,14)" fg:x="4502" fg:w="2"/><text x="95.7123%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.04%)</title><rect x="95.4623%" y="581" width="0.0424%" height="15" fill="rgb(227,204,5)" fg:x="4502" fg:w="2"/><text x="95.7123%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.04%)</title><rect x="95.4623%" y="565" width="0.0424%" height="15" fill="rgb(231,114,21)" fg:x="4502" fg:w="2"/><text x="95.7123%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.04%)</title><rect x="95.4623%" y="549" width="0.0424%" height="15" fill="rgb(238,209,2)" fg:x="4502" fg:w="2"/><text x="95.7123%" y="559.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.04%)</title><rect x="95.4623%" y="533" width="0.0424%" height="15" fill="rgb(253,135,41)" fg:x="4502" fg:w="2"/><text x="95.7123%" y="543.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.04%)</title><rect x="95.4623%" y="517" width="0.0424%" height="15" fill="rgb(206,112,53)" fg:x="4502" fg:w="2"/><text x="95.7123%" y="527.50"></text></g><g><title>_int_malloc (2 samples, 0.04%)</title><rect x="95.4623%" y="501" width="0.0424%" height="15" fill="rgb(222,219,51)" fg:x="4502" fg:w="2"/><text x="95.7123%" y="511.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_from_hir (1 samples, 0.02%)</title><rect x="95.5047%" y="773" width="0.0212%" height="15" fill="rgb(210,66,46)" fg:x="4504" fg:w="1"/><text x="95.7547%" y="783.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (1 samples, 0.02%)</title><rect x="95.5047%" y="757" width="0.0212%" height="15" fill="rgb(226,42,16)" fg:x="4504" fg:w="1"/><text x="95.7547%" y="767.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (1 samples, 0.02%)</title><rect x="95.5047%" y="741" width="0.0212%" height="15" fill="rgb(242,129,17)" fg:x="4504" fg:w="1"/><text x="95.7547%" y="751.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (1 samples, 0.02%)</title><rect x="95.5047%" y="725" width="0.0212%" height="15" fill="rgb(247,137,3)" fg:x="4504" fg:w="1"/><text x="95.7547%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="95.5047%" y="709" width="0.0212%" height="15" fill="rgb(214,109,53)" fg:x="4504" fg:w="1"/><text x="95.7547%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.02%)</title><rect x="95.5047%" y="693" width="0.0212%" height="15" fill="rgb(254,35,30)" fg:x="4504" fg:w="1"/><text x="95.7547%" y="703.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.02%)</title><rect x="95.5047%" y="677" width="0.0212%" height="15" fill="rgb(226,169,23)" fg:x="4504" fg:w="1"/><text x="95.7547%" y="687.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile::{{closure}} (1 samples, 0.02%)</title><rect x="95.5047%" y="661" width="0.0212%" height="15" fill="rgb(218,216,52)" fg:x="4504" fg:w="1"/><text x="95.7547%" y="671.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 0.02%)</title><rect x="95.5047%" y="645" width="0.0212%" height="15" fill="rgb(235,200,16)" fg:x="4504" fg:w="1"/><text x="95.7547%" y="655.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.02%)</title><rect x="95.5047%" y="629" width="0.0212%" height="15" fill="rgb(213,34,18)" fg:x="4504" fg:w="1"/><text x="95.7547%" y="639.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (1 samples, 0.02%)</title><rect x="95.5047%" y="613" width="0.0212%" height="15" fill="rgb(210,105,37)" fg:x="4504" fg:w="1"/><text x="95.7547%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 0.02%)</title><rect x="95.5047%" y="597" width="0.0212%" height="15" fill="rgb(222,94,14)" fg:x="4504" fg:w="1"/><text x="95.7547%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.02%)</title><rect x="95.5047%" y="581" width="0.0212%" height="15" fill="rgb(254,35,30)" fg:x="4504" fg:w="1"/><text x="95.7547%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.02%)</title><rect x="95.5047%" y="565" width="0.0212%" height="15" fill="rgb(226,169,23)" fg:x="4504" fg:w="1"/><text x="95.7547%" y="575.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (1 samples, 0.02%)</title><rect x="95.5047%" y="549" width="0.0212%" height="15" fill="rgb(205,130,14)" fg:x="4504" fg:w="1"/><text x="95.7547%" y="559.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.02%)</title><rect x="95.5047%" y="533" width="0.0212%" height="15" fill="rgb(213,34,18)" fg:x="4504" fg:w="1"/><text x="95.7547%" y="543.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (1 samples, 0.02%)</title><rect x="95.5047%" y="517" width="0.0212%" height="15" fill="rgb(253,35,22)" fg:x="4504" fg:w="1"/><text x="95.7547%" y="527.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::add (1 samples, 0.02%)</title><rect x="95.5047%" y="501" width="0.0212%" height="15" fill="rgb(247,201,32)" fg:x="4504" fg:w="1"/><text x="95.7547%" y="511.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::get_or_add_state (1 samples, 0.02%)</title><rect x="95.5047%" y="485" width="0.0212%" height="15" fill="rgb(249,22,31)" fg:x="4504" fg:w="1"/><text x="95.7547%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by_key (1 samples, 0.02%)</title><rect x="95.5047%" y="469" width="0.0212%" height="15" fill="rgb(219,159,10)" fg:x="4504" fg:w="1"/><text x="95.7547%" y="479.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.02%)</title><rect x="95.5047%" y="453" width="0.0212%" height="15" fill="rgb(252,87,43)" fg:x="4504" fg:w="1"/><text x="95.7547%" y="463.50"></text></g><g><title>regex_automata::meta::strategy::ReverseInner::new (2 samples, 0.04%)</title><rect x="95.5047%" y="789" width="0.0424%" height="15" fill="rgb(225,146,32)" fg:x="4504" fg:w="2"/><text x="95.7547%" y="799.50"></text></g><g><title>regex_automata::meta::reverse_inner::extract (1 samples, 0.02%)</title><rect x="95.5259%" y="773" width="0.0212%" height="15" fill="rgb(209,78,45)" fg:x="4505" fg:w="1"/><text x="95.7759%" y="783.50"></text></g><g><title>regex_automata::meta::reverse_inner::prefilter (1 samples, 0.02%)</title><rect x="95.5259%" y="757" width="0.0212%" height="15" fill="rgb(221,50,42)" fg:x="4505" fg:w="1"/><text x="95.7759%" y="767.50"></text></g><g><title>regex_syntax::hir::literal::Seq::optimize_for_prefix_by_preference (1 samples, 0.02%)</title><rect x="95.5259%" y="741" width="0.0212%" height="15" fill="rgb(206,179,34)" fg:x="4505" fg:w="1"/><text x="95.7759%" y="751.50"></text></g><g><title>regex_syntax::hir::literal::Seq::optimize_by_preference (1 samples, 0.02%)</title><rect x="95.5259%" y="725" width="0.0212%" height="15" fill="rgb(208,121,1)" fg:x="4505" fg:w="1"/><text x="95.7759%" y="735.50"></text></g><g><title>regex_syntax::hir::literal::PreferenceTrie::minimize (1 samples, 0.02%)</title><rect x="95.5259%" y="709" width="0.0212%" height="15" fill="rgb(240,28,15)" fg:x="4505" fg:w="1"/><text x="95.7759%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut (1 samples, 0.02%)</title><rect x="95.5259%" y="693" width="0.0212%" height="15" fill="rgb(208,159,28)" fg:x="4505" fg:w="1"/><text x="95.7759%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut::process_loop (1 samples, 0.02%)</title><rect x="95.5259%" y="677" width="0.0212%" height="15" fill="rgb(227,228,3)" fg:x="4505" fg:w="1"/><text x="95.7759%" y="687.50"></text></g><g><title>regex_syntax::hir::literal::PreferenceTrie::minimize::{{closure}} (1 samples, 0.02%)</title><rect x="95.5259%" y="661" width="0.0212%" height="15" fill="rgb(234,110,33)" fg:x="4505" fg:w="1"/><text x="95.7759%" y="671.50"></text></g><g><title>regex_syntax::hir::literal::PreferenceTrie::insert (1 samples, 0.02%)</title><rect x="95.5259%" y="645" width="0.0212%" height="15" fill="rgb(208,38,45)" fg:x="4505" fg:w="1"/><text x="95.7759%" y="655.50"></text></g><g><title>regex_syntax::hir::literal::PreferenceTrie::create_state (1 samples, 0.02%)</title><rect x="95.5259%" y="629" width="0.0212%" height="15" fill="rgb(224,202,5)" fg:x="4505" fg:w="1"/><text x="95.7759%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="95.5259%" y="613" width="0.0212%" height="15" fill="rgb(241,229,15)" fg:x="4505" fg:w="1"/><text x="95.7759%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="95.5259%" y="597" width="0.0212%" height="15" fill="rgb(254,103,39)" fg:x="4505" fg:w="1"/><text x="95.7759%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="95.5259%" y="581" width="0.0212%" height="15" fill="rgb(254,53,35)" fg:x="4505" fg:w="1"/><text x="95.7759%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="95.5259%" y="565" width="0.0212%" height="15" fill="rgb(237,133,22)" fg:x="4505" fg:w="1"/><text x="95.7759%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="95.5259%" y="549" width="0.0212%" height="15" fill="rgb(237,156,49)" fg:x="4505" fg:w="1"/><text x="95.7759%" y="559.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="95.5259%" y="533" width="0.0212%" height="15" fill="rgb(214,150,36)" fg:x="4505" fg:w="1"/><text x="95.7759%" y="543.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="95.5259%" y="517" width="0.0212%" height="15" fill="rgb(254,47,34)" fg:x="4505" fg:w="1"/><text x="95.7759%" y="527.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.02%)</title><rect x="95.5259%" y="501" width="0.0212%" height="15" fill="rgb(254,73,4)" fg:x="4505" fg:w="1"/><text x="95.7759%" y="511.50"></text></g><g><title>_int_realloc (1 samples, 0.02%)</title><rect x="95.5259%" y="485" width="0.0212%" height="15" fill="rgb(231,75,41)" fg:x="4505" fg:w="1"/><text x="95.7759%" y="495.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="95.5259%" y="469" width="0.0212%" height="15" fill="rgb(222,219,51)" fg:x="4505" fg:w="1"/><text x="95.7759%" y="479.50"></text></g><g><title>malloc_consolidate (1 samples, 0.02%)</title><rect x="95.5259%" y="453" width="0.0212%" height="15" fill="rgb(228,194,39)" fg:x="4505" fg:w="1"/><text x="95.7759%" y="463.50"></text></g><g><title>unlink_chunk (1 samples, 0.02%)</title><rect x="95.5259%" y="437" width="0.0212%" height="15" fill="rgb(223,20,30)" fg:x="4505" fg:w="1"/><text x="95.7759%" y="447.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::State::add_match (1 samples, 0.02%)</title><rect x="95.5471%" y="485" width="0.0212%" height="15" fill="rgb(206,206,41)" fg:x="4506" fg:w="1"/><text x="95.7971%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="95.5471%" y="469" width="0.0212%" height="15" fill="rgb(241,229,15)" fg:x="4506" fg:w="1"/><text x="95.7971%" y="479.50"></text></g><g><title>core::ptr::write (7 samples, 0.15%)</title><rect x="95.5683%" y="453" width="0.1484%" height="15" fill="rgb(209,143,44)" fg:x="4507" fg:w="7"/><text x="95.8183%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (8 samples, 0.17%)</title><rect x="95.5683%" y="469" width="0.1696%" height="15" fill="rgb(241,229,15)" fg:x="4507" fg:w="8"/><text x="95.8183%" y="479.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::add (10 samples, 0.21%)</title><rect x="95.5471%" y="501" width="0.2120%" height="15" fill="rgb(247,201,32)" fg:x="4506" fg:w="10"/><text x="95.7971%" y="511.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::get_or_add_state (9 samples, 0.19%)</title><rect x="95.5683%" y="485" width="0.1908%" height="15" fill="rgb(249,22,31)" fg:x="4507" fg:w="9"/><text x="95.8183%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (1 samples, 0.02%)</title><rect x="95.7379%" y="469" width="0.0212%" height="15" fill="rgb(222,129,7)" fg:x="4515" fg:w="1"/><text x="95.9879%" y="479.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.02%)</title><rect x="95.7379%" y="453" width="0.0212%" height="15" fill="rgb(221,136,15)" fg:x="4515" fg:w="1"/><text x="95.9879%" y="463.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.02%)</title><rect x="95.7379%" y="437" width="0.0212%" height="15" fill="rgb(217,126,36)" fg:x="4515" fg:w="1"/><text x="95.9879%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_automata::nfa::thompson::literal_trie::Transition&gt;&gt; (1 samples, 0.02%)</title><rect x="95.7591%" y="421" width="0.0212%" height="15" fill="rgb(242,32,21)" fg:x="4516" fg:w="1"/><text x="96.0091%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;regex_automata::nfa::thompson::literal_trie::Transition&gt;&gt; (1 samples, 0.02%)</title><rect x="95.7591%" y="405" width="0.0212%" height="15" fill="rgb(216,209,43)" fg:x="4516" fg:w="1"/><text x="96.0091%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="95.7591%" y="389" width="0.0212%" height="15" fill="rgb(213,128,22)" fg:x="4516" fg:w="1"/><text x="96.0091%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="95.7591%" y="373" width="0.0212%" height="15" fill="rgb(238,77,31)" fg:x="4516" fg:w="1"/><text x="96.0091%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="95.7591%" y="357" width="0.0212%" height="15" fill="rgb(227,15,28)" fg:x="4516" fg:w="1"/><text x="96.0091%" y="367.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="95.7591%" y="341" width="0.0212%" height="15" fill="rgb(247,8,17)" fg:x="4516" fg:w="1"/><text x="96.0091%" y="351.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="95.7591%" y="325" width="0.0212%" height="15" fill="rgb(221,113,48)" fg:x="4516" fg:w="1"/><text x="96.0091%" y="335.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (12 samples, 0.25%)</title><rect x="95.5471%" y="549" width="0.2545%" height="15" fill="rgb(235,200,16)" fg:x="4506" fg:w="12"/><text x="95.7971%" y="559.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (12 samples, 0.25%)</title><rect x="95.5471%" y="533" width="0.2545%" height="15" fill="rgb(213,34,18)" fg:x="4506" fg:w="12"/><text x="95.7971%" y="543.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (12 samples, 0.25%)</title><rect x="95.5471%" y="517" width="0.2545%" height="15" fill="rgb(253,35,22)" fg:x="4506" fg:w="12"/><text x="95.7971%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::literal_trie::LiteralTrie&gt; (2 samples, 0.04%)</title><rect x="95.7591%" y="501" width="0.0424%" height="15" fill="rgb(244,70,29)" fg:x="4516" fg:w="2"/><text x="96.0091%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_automata::nfa::thompson::literal_trie::State&gt;&gt; (2 samples, 0.04%)</title><rect x="95.7591%" y="485" width="0.0424%" height="15" fill="rgb(227,19,7)" fg:x="4516" fg:w="2"/><text x="96.0091%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="95.7591%" y="469" width="0.0424%" height="15" fill="rgb(249,14,2)" fg:x="4516" fg:w="2"/><text x="96.0091%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;[regex_automata::nfa::thompson::literal_trie::State]&gt; (2 samples, 0.04%)</title><rect x="95.7591%" y="453" width="0.0424%" height="15" fill="rgb(241,61,51)" fg:x="4516" fg:w="2"/><text x="96.0091%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::literal_trie::State&gt; (2 samples, 0.04%)</title><rect x="95.7591%" y="437" width="0.0424%" height="15" fill="rgb(245,189,53)" fg:x="4516" fg:w="2"/><text x="96.0091%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt; (1 samples, 0.02%)</title><rect x="95.7803%" y="421" width="0.0212%" height="15" fill="rgb(213,102,40)" fg:x="4517" fg:w="1"/><text x="96.0303%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize)&gt;&gt; (1 samples, 0.02%)</title><rect x="95.7803%" y="405" width="0.0212%" height="15" fill="rgb(243,139,46)" fg:x="4517" fg:w="1"/><text x="96.0303%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="95.7803%" y="389" width="0.0212%" height="15" fill="rgb(213,128,22)" fg:x="4517" fg:w="1"/><text x="96.0303%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.28%)</title><rect x="95.5471%" y="613" width="0.2757%" height="15" fill="rgb(214,109,53)" fg:x="4506" fg:w="13"/><text x="95.7971%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (13 samples, 0.28%)</title><rect x="95.5471%" y="597" width="0.2757%" height="15" fill="rgb(254,35,30)" fg:x="4506" fg:w="13"/><text x="95.7971%" y="607.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (13 samples, 0.28%)</title><rect x="95.5471%" y="581" width="0.2757%" height="15" fill="rgb(226,169,23)" fg:x="4506" fg:w="13"/><text x="95.7971%" y="591.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (13 samples, 0.28%)</title><rect x="95.5471%" y="565" width="0.2757%" height="15" fill="rgb(205,130,14)" fg:x="4506" fg:w="13"/><text x="95.7971%" y="575.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_bounded (1 samples, 0.02%)</title><rect x="95.8015%" y="549" width="0.0212%" height="15" fill="rgb(214,135,45)" fg:x="4518" fg:w="1"/><text x="96.0515%" y="559.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.02%)</title><rect x="95.8015%" y="533" width="0.0212%" height="15" fill="rgb(213,34,18)" fg:x="4518" fg:w="1"/><text x="96.0515%" y="543.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class (1 samples, 0.02%)</title><rect x="95.8015%" y="517" width="0.0212%" height="15" fill="rgb(246,38,12)" fg:x="4518" fg:w="1"/><text x="96.0515%" y="527.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::add_empty (1 samples, 0.02%)</title><rect x="95.8015%" y="501" width="0.0212%" height="15" fill="rgb(245,57,0)" fg:x="4518" fg:w="1"/><text x="96.0515%" y="511.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add_empty (1 samples, 0.02%)</title><rect x="95.8015%" y="485" width="0.0212%" height="15" fill="rgb(233,49,21)" fg:x="4518" fg:w="1"/><text x="96.0515%" y="495.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add (1 samples, 0.02%)</title><rect x="95.8015%" y="469" width="0.0212%" height="15" fill="rgb(253,91,29)" fg:x="4518" fg:w="1"/><text x="96.0515%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="95.8015%" y="453" width="0.0212%" height="15" fill="rgb(241,229,15)" fg:x="4518" fg:w="1"/><text x="96.0515%" y="463.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by_key (5 samples, 0.11%)</title><rect x="95.8227%" y="469" width="0.1060%" height="15" fill="rgb(219,159,10)" fg:x="4519" fg:w="5"/><text x="96.0727%" y="479.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (5 samples, 0.11%)</title><rect x="95.8227%" y="453" width="0.1060%" height="15" fill="rgb(252,87,43)" fg:x="4519" fg:w="5"/><text x="96.0727%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.04%)</title><rect x="95.9288%" y="469" width="0.0424%" height="15" fill="rgb(241,229,15)" fg:x="4524" fg:w="2"/><text x="96.1788%" y="479.50"></text></g><g><title>core::ptr::write (2 samples, 0.04%)</title><rect x="95.9288%" y="453" width="0.0424%" height="15" fill="rgb(209,143,44)" fg:x="4524" fg:w="2"/><text x="96.1788%" y="463.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::add (8 samples, 0.17%)</title><rect x="95.8227%" y="501" width="0.1696%" height="15" fill="rgb(247,201,32)" fg:x="4519" fg:w="8"/><text x="96.0727%" y="511.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::get_or_add_state (8 samples, 0.17%)</title><rect x="95.8227%" y="485" width="0.1696%" height="15" fill="rgb(249,22,31)" fg:x="4519" fg:w="8"/><text x="96.0727%" y="495.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (22 samples, 0.47%)</title><rect x="95.5471%" y="773" width="0.4665%" height="15" fill="rgb(226,42,16)" fg:x="4506" fg:w="22"/><text x="95.7971%" y="783.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (22 samples, 0.47%)</title><rect x="95.5471%" y="757" width="0.4665%" height="15" fill="rgb(242,129,17)" fg:x="4506" fg:w="22"/><text x="95.7971%" y="767.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (22 samples, 0.47%)</title><rect x="95.5471%" y="741" width="0.4665%" height="15" fill="rgb(247,137,3)" fg:x="4506" fg:w="22"/><text x="95.7971%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.47%)</title><rect x="95.5471%" y="725" width="0.4665%" height="15" fill="rgb(214,109,53)" fg:x="4506" fg:w="22"/><text x="95.7971%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (22 samples, 0.47%)</title><rect x="95.5471%" y="709" width="0.4665%" height="15" fill="rgb(254,35,30)" fg:x="4506" fg:w="22"/><text x="95.7971%" y="719.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (22 samples, 0.47%)</title><rect x="95.5471%" y="693" width="0.4665%" height="15" fill="rgb(226,169,23)" fg:x="4506" fg:w="22"/><text x="95.7971%" y="703.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile::{{closure}} (22 samples, 0.47%)</title><rect x="95.5471%" y="677" width="0.4665%" height="15" fill="rgb(218,216,52)" fg:x="4506" fg:w="22"/><text x="95.7971%" y="687.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (22 samples, 0.47%)</title><rect x="95.5471%" y="661" width="0.4665%" height="15" fill="rgb(235,200,16)" fg:x="4506" fg:w="22"/><text x="95.7971%" y="671.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (22 samples, 0.47%)</title><rect x="95.5471%" y="645" width="0.4665%" height="15" fill="rgb(213,34,18)" fg:x="4506" fg:w="22"/><text x="95.7971%" y="655.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (22 samples, 0.47%)</title><rect x="95.5471%" y="629" width="0.4665%" height="15" fill="rgb(210,105,37)" fg:x="4506" fg:w="22"/><text x="95.7971%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (9 samples, 0.19%)</title><rect x="95.8227%" y="613" width="0.1908%" height="15" fill="rgb(222,94,14)" fg:x="4519" fg:w="9"/><text x="96.0727%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (9 samples, 0.19%)</title><rect x="95.8227%" y="597" width="0.1908%" height="15" fill="rgb(254,35,30)" fg:x="4519" fg:w="9"/><text x="96.0727%" y="607.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (9 samples, 0.19%)</title><rect x="95.8227%" y="581" width="0.1908%" height="15" fill="rgb(226,169,23)" fg:x="4519" fg:w="9"/><text x="96.0727%" y="591.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (9 samples, 0.19%)</title><rect x="95.8227%" y="565" width="0.1908%" height="15" fill="rgb(205,130,14)" fg:x="4519" fg:w="9"/><text x="96.0727%" y="575.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (9 samples, 0.19%)</title><rect x="95.8227%" y="549" width="0.1908%" height="15" fill="rgb(235,200,16)" fg:x="4519" fg:w="9"/><text x="96.0727%" y="559.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (9 samples, 0.19%)</title><rect x="95.8227%" y="533" width="0.1908%" height="15" fill="rgb(213,34,18)" fg:x="4519" fg:w="9"/><text x="96.0727%" y="543.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (9 samples, 0.19%)</title><rect x="95.8227%" y="517" width="0.1908%" height="15" fill="rgb(253,35,22)" fg:x="4519" fg:w="9"/><text x="96.0727%" y="527.50"></text></g><g><title>regex_automata::dfa::onepass::InternalBuilder::new (1 samples, 0.02%)</title><rect x="96.0136%" y="725" width="0.0212%" height="15" fill="rgb(239,182,22)" fg:x="4528" fg:w="1"/><text x="96.2636%" y="735.50"></text></g><g><title>regex_automata::util::sparse_set::SparseSet::new (1 samples, 0.02%)</title><rect x="96.0136%" y="709" width="0.0212%" height="15" fill="rgb(244,107,37)" fg:x="4528" fg:w="1"/><text x="96.2636%" y="719.50"></text></g><g><title>regex_automata::util::sparse_set::SparseSet::resize (1 samples, 0.02%)</title><rect x="96.0136%" y="693" width="0.0212%" height="15" fill="rgb(219,206,13)" fg:x="4528" fg:w="1"/><text x="96.2636%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (1 samples, 0.02%)</title><rect x="96.0136%" y="677" width="0.0212%" height="15" fill="rgb(249,199,35)" fg:x="4528" fg:w="1"/><text x="96.2636%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (1 samples, 0.02%)</title><rect x="96.0136%" y="661" width="0.0212%" height="15" fill="rgb(216,52,5)" fg:x="4528" fg:w="1"/><text x="96.2636%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="96.0136%" y="645" width="0.0212%" height="15" fill="rgb(212,159,3)" fg:x="4528" fg:w="1"/><text x="96.2636%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="96.0136%" y="629" width="0.0212%" height="15" fill="rgb(231,142,39)" fg:x="4528" fg:w="1"/><text x="96.2636%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="96.0136%" y="613" width="0.0212%" height="15" fill="rgb(249,2,22)" fg:x="4528" fg:w="1"/><text x="96.2636%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="96.0136%" y="597" width="0.0212%" height="15" fill="rgb(254,53,35)" fg:x="4528" fg:w="1"/><text x="96.2636%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="96.0136%" y="581" width="0.0212%" height="15" fill="rgb(237,133,22)" fg:x="4528" fg:w="1"/><text x="96.2636%" y="591.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="96.0136%" y="565" width="0.0212%" height="15" fill="rgb(206,112,53)" fg:x="4528" fg:w="1"/><text x="96.2636%" y="575.50"></text></g><g><title>regex_automata::dfa::onepass::InternalBuilder::stack_push (1 samples, 0.02%)</title><rect x="96.0348%" y="709" width="0.0212%" height="15" fill="rgb(206,207,22)" fg:x="4529" fg:w="1"/><text x="96.2848%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="96.0560%" y="613" width="0.0212%" height="15" fill="rgb(212,159,3)" fg:x="4530" fg:w="1"/><text x="96.3060%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="96.0560%" y="597" width="0.0212%" height="15" fill="rgb(231,142,39)" fg:x="4530" fg:w="1"/><text x="96.3060%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="96.0772%" y="405" width="0.1272%" height="15" fill="rgb(210,204,4)" fg:x="4531" fg:w="6"/><text x="96.3272%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="96.0772%" y="389" width="0.1272%" height="15" fill="rgb(210,204,4)" fg:x="4531" fg:w="6"/><text x="96.3272%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.15%)</title><rect x="96.0772%" y="437" width="0.1484%" height="15" fill="rgb(210,204,4)" fg:x="4531" fg:w="7"/><text x="96.3272%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.15%)</title><rect x="96.0772%" y="421" width="0.1484%" height="15" fill="rgb(210,204,4)" fg:x="4531" fg:w="7"/><text x="96.3272%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (9 samples, 0.19%)</title><rect x="96.0560%" y="661" width="0.1908%" height="15" fill="rgb(205,186,49)" fg:x="4530" fg:w="9"/><text x="96.3060%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (9 samples, 0.19%)</title><rect x="96.0560%" y="645" width="0.1908%" height="15" fill="rgb(232,211,42)" fg:x="4530" fg:w="9"/><text x="96.3060%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (9 samples, 0.19%)</title><rect x="96.0560%" y="629" width="0.1908%" height="15" fill="rgb(214,146,48)" fg:x="4530" fg:w="9"/><text x="96.3060%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (8 samples, 0.17%)</title><rect x="96.0772%" y="613" width="0.1696%" height="15" fill="rgb(242,133,26)" fg:x="4531" fg:w="8"/><text x="96.3272%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (8 samples, 0.17%)</title><rect x="96.0772%" y="597" width="0.1696%" height="15" fill="rgb(223,137,46)" fg:x="4531" fg:w="8"/><text x="96.3272%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each::check::{{closure}} (8 samples, 0.17%)</title><rect x="96.0772%" y="581" width="0.1696%" height="15" fill="rgb(234,154,36)" fg:x="4531" fg:w="8"/><text x="96.3272%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::{{closure}} (8 samples, 0.17%)</title><rect x="96.0772%" y="565" width="0.1696%" height="15" fill="rgb(221,227,48)" fg:x="4531" fg:w="8"/><text x="96.3272%" y="575.50"></text></g><g><title>core::ptr::write (8 samples, 0.17%)</title><rect x="96.0772%" y="549" width="0.1696%" height="15" fill="rgb(209,143,44)" fg:x="4531" fg:w="8"/><text x="96.3272%" y="559.50"></text></g><g><title>__memset_avx512_unaligned_erms (8 samples, 0.17%)</title><rect x="96.0772%" y="533" width="0.1696%" height="15" fill="rgb(240,145,53)" fg:x="4531" fg:w="8"/><text x="96.3272%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.17%)</title><rect x="96.0772%" y="517" width="0.1696%" height="15" fill="rgb(210,204,4)" fg:x="4531" fg:w="8"/><text x="96.3272%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.17%)</title><rect x="96.0772%" y="501" width="0.1696%" height="15" fill="rgb(210,204,4)" fg:x="4531" fg:w="8"/><text x="96.3272%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.17%)</title><rect x="96.0772%" y="485" width="0.1696%" height="15" fill="rgb(210,204,4)" fg:x="4531" fg:w="8"/><text x="96.3272%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.17%)</title><rect x="96.0772%" y="469" width="0.1696%" height="15" fill="rgb(210,204,4)" fg:x="4531" fg:w="8"/><text x="96.3272%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.17%)</title><rect x="96.0772%" y="453" width="0.1696%" height="15" fill="rgb(210,204,4)" fg:x="4531" fg:w="8"/><text x="96.3272%" y="463.50"></text></g><g><title>regex_automata::dfa::onepass::InternalBuilder::add_dfa_state_for_nfa_state (10 samples, 0.21%)</title><rect x="96.0560%" y="693" width="0.2120%" height="15" fill="rgb(226,222,5)" fg:x="4530" fg:w="10"/><text x="96.3060%" y="703.50"></text></g><g><title>regex_automata::dfa::onepass::InternalBuilder::add_empty_state (10 samples, 0.21%)</title><rect x="96.0560%" y="677" width="0.2120%" height="15" fill="rgb(249,155,54)" fg:x="4530" fg:w="10"/><text x="96.3060%" y="687.50"></text></g><g><title>regex_automata::dfa::onepass::InternalBuilder::compile_transition (11 samples, 0.23%)</title><rect x="96.0560%" y="709" width="0.2332%" height="15" fill="rgb(230,62,50)" fg:x="4530" fg:w="11"/><text x="96.3060%" y="719.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_datetime_in_line (38 samples, 0.81%)</title><rect x="95.5047%" y="1077" width="0.8058%" height="15" fill="rgb(212,53,9)" fg:x="4504" fg:w="38"/><text x="95.7547%" y="1087.50"></text></g><g><title>s4lib::data::datetime::bytes_to_regex_to_datetime (38 samples, 0.81%)</title><rect x="95.5047%" y="1061" width="0.8058%" height="15" fill="rgb(252,84,36)" fg:x="4504" fg:w="38"/><text x="95.7547%" y="1071.50"></text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref (38 samples, 0.81%)</title><rect x="95.5047%" y="1045" width="0.8058%" height="15" fill="rgb(217,15,43)" fg:x="4504" fg:w="38"/><text x="95.7547%" y="1055.50"></text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref::__stability (38 samples, 0.81%)</title><rect x="95.5047%" y="1029" width="0.8058%" height="15" fill="rgb(239,165,48)" fg:x="4504" fg:w="38"/><text x="95.7547%" y="1039.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (38 samples, 0.81%)</title><rect x="95.5047%" y="1013" width="0.8058%" height="15" fill="rgb(235,175,8)" fg:x="4504" fg:w="38"/><text x="95.7547%" y="1023.50"></text></g><g><title>std::sync::once::Once::call_once (38 samples, 0.81%)</title><rect x="95.5047%" y="997" width="0.8058%" height="15" fill="rgb(247,17,47)" fg:x="4504" fg:w="38"/><text x="95.7547%" y="1007.50"></text></g><g><title>std::sys_common::once::futex::Once::call (38 samples, 0.81%)</title><rect x="95.5047%" y="981" width="0.8058%" height="15" fill="rgb(246,168,49)" fg:x="4504" fg:w="38"/><text x="95.7547%" y="991.50"></text></g><g><title>std::sync::once::Once::call_once::{{closure}} (38 samples, 0.81%)</title><rect x="95.5047%" y="965" width="0.8058%" height="15" fill="rgb(237,63,35)" fg:x="4504" fg:w="38"/><text x="95.7547%" y="975.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}} (38 samples, 0.81%)</title><rect x="95.5047%" y="949" width="0.8058%" height="15" fill="rgb(238,7,51)" fg:x="4504" fg:w="38"/><text x="95.7547%" y="959.50"></text></g><g><title>core::ops::function::FnOnce::call_once (38 samples, 0.81%)</title><rect x="95.5047%" y="933" width="0.8058%" height="15" fill="rgb(210,80,10)" fg:x="4504" fg:w="38"/><text x="95.7547%" y="943.50"></text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref::__static_ref_initialize (38 samples, 0.81%)</title><rect x="95.5047%" y="917" width="0.8058%" height="15" fill="rgb(205,24,29)" fg:x="4504" fg:w="38"/><text x="95.7547%" y="927.50"></text></g><g><title>regex::regex::bytes::Regex::new (38 samples, 0.81%)</title><rect x="95.5047%" y="901" width="0.8058%" height="15" fill="rgb(246,224,25)" fg:x="4504" fg:w="38"/><text x="95.7547%" y="911.50"></text></g><g><title>regex::builders::bytes::RegexBuilder::build (38 samples, 0.81%)</title><rect x="95.5047%" y="885" width="0.8058%" height="15" fill="rgb(236,76,51)" fg:x="4504" fg:w="38"/><text x="95.7547%" y="895.50"></text></g><g><title>regex::builders::Builder::build_one_bytes (38 samples, 0.81%)</title><rect x="95.5047%" y="869" width="0.8058%" height="15" fill="rgb(233,102,7)" fg:x="4504" fg:w="38"/><text x="95.7547%" y="879.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (38 samples, 0.81%)</title><rect x="95.5047%" y="853" width="0.8058%" height="15" fill="rgb(212,33,22)" fg:x="4504" fg:w="38"/><text x="95.7547%" y="863.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many (38 samples, 0.81%)</title><rect x="95.5047%" y="837" width="0.8058%" height="15" fill="rgb(236,25,32)" fg:x="4504" fg:w="38"/><text x="95.7547%" y="847.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (38 samples, 0.81%)</title><rect x="95.5047%" y="821" width="0.8058%" height="15" fill="rgb(250,142,30)" fg:x="4504" fg:w="38"/><text x="95.7547%" y="831.50"></text></g><g><title>regex_automata::meta::strategy::new (38 samples, 0.81%)</title><rect x="95.5047%" y="805" width="0.8058%" height="15" fill="rgb(243,171,22)" fg:x="4504" fg:w="38"/><text x="95.7547%" y="815.50"></text></g><g><title>regex_automata::meta::strategy::Core::new (36 samples, 0.76%)</title><rect x="95.5471%" y="789" width="0.7634%" height="15" fill="rgb(222,69,27)" fg:x="4506" fg:w="36"/><text x="95.7971%" y="799.50"></text></g><g><title>regex_automata::meta::wrappers::OnePass::new (14 samples, 0.30%)</title><rect x="96.0136%" y="773" width="0.2969%" height="15" fill="rgb(235,224,47)" fg:x="4528" fg:w="14"/><text x="96.2636%" y="783.50"></text></g><g><title>regex_automata::meta::wrappers::OnePassEngine::new (14 samples, 0.30%)</title><rect x="96.0136%" y="757" width="0.2969%" height="15" fill="rgb(247,185,25)" fg:x="4528" fg:w="14"/><text x="96.2636%" y="767.50"></text></g><g><title>regex_automata::dfa::onepass::Builder::build_from_nfa (14 samples, 0.30%)</title><rect x="96.0136%" y="741" width="0.2969%" height="15" fill="rgb(209,62,19)" fg:x="4528" fg:w="14"/><text x="96.2636%" y="751.50"></text></g><g><title>regex_automata::dfa::onepass::InternalBuilder::build (13 samples, 0.28%)</title><rect x="96.0348%" y="725" width="0.2757%" height="15" fill="rgb(206,107,24)" fg:x="4529" fg:w="13"/><text x="96.2848%" y="735.50"></text></g><g><title>regex_automata::meta::strategy::ReverseInner::new (1 samples, 0.02%)</title><rect x="96.3104%" y="805" width="0.0212%" height="15" fill="rgb(225,146,32)" fg:x="4542" fg:w="1"/><text x="96.5604%" y="815.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_from_hir (1 samples, 0.02%)</title><rect x="96.3104%" y="789" width="0.0212%" height="15" fill="rgb(210,66,46)" fg:x="4542" fg:w="1"/><text x="96.5604%" y="799.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (1 samples, 0.02%)</title><rect x="96.3104%" y="773" width="0.0212%" height="15" fill="rgb(226,42,16)" fg:x="4542" fg:w="1"/><text x="96.5604%" y="783.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (1 samples, 0.02%)</title><rect x="96.3104%" y="757" width="0.0212%" height="15" fill="rgb(242,129,17)" fg:x="4542" fg:w="1"/><text x="96.5604%" y="767.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (1 samples, 0.02%)</title><rect x="96.3104%" y="741" width="0.0212%" height="15" fill="rgb(247,137,3)" fg:x="4542" fg:w="1"/><text x="96.5604%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="96.3104%" y="725" width="0.0212%" height="15" fill="rgb(214,109,53)" fg:x="4542" fg:w="1"/><text x="96.5604%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.02%)</title><rect x="96.3104%" y="709" width="0.0212%" height="15" fill="rgb(254,35,30)" fg:x="4542" fg:w="1"/><text x="96.5604%" y="719.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.02%)</title><rect x="96.3104%" y="693" width="0.0212%" height="15" fill="rgb(226,169,23)" fg:x="4542" fg:w="1"/><text x="96.5604%" y="703.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile::{{closure}} (1 samples, 0.02%)</title><rect x="96.3104%" y="677" width="0.0212%" height="15" fill="rgb(218,216,52)" fg:x="4542" fg:w="1"/><text x="96.5604%" y="687.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 0.02%)</title><rect x="96.3104%" y="661" width="0.0212%" height="15" fill="rgb(235,200,16)" fg:x="4542" fg:w="1"/><text x="96.5604%" y="671.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.02%)</title><rect x="96.3104%" y="645" width="0.0212%" height="15" fill="rgb(213,34,18)" fg:x="4542" fg:w="1"/><text x="96.5604%" y="655.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (1 samples, 0.02%)</title><rect x="96.3104%" y="629" width="0.0212%" height="15" fill="rgb(210,105,37)" fg:x="4542" fg:w="1"/><text x="96.5604%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 0.02%)</title><rect x="96.3104%" y="613" width="0.0212%" height="15" fill="rgb(222,94,14)" fg:x="4542" fg:w="1"/><text x="96.5604%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.02%)</title><rect x="96.3104%" y="597" width="0.0212%" height="15" fill="rgb(254,35,30)" fg:x="4542" fg:w="1"/><text x="96.5604%" y="607.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.02%)</title><rect x="96.3104%" y="581" width="0.0212%" height="15" fill="rgb(226,169,23)" fg:x="4542" fg:w="1"/><text x="96.5604%" y="591.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (1 samples, 0.02%)</title><rect x="96.3104%" y="565" width="0.0212%" height="15" fill="rgb(205,130,14)" fg:x="4542" fg:w="1"/><text x="96.5604%" y="575.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.02%)</title><rect x="96.3104%" y="549" width="0.0212%" height="15" fill="rgb(213,34,18)" fg:x="4542" fg:w="1"/><text x="96.5604%" y="559.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (1 samples, 0.02%)</title><rect x="96.3104%" y="533" width="0.0212%" height="15" fill="rgb(253,35,22)" fg:x="4542" fg:w="1"/><text x="96.5604%" y="543.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::add (1 samples, 0.02%)</title><rect x="96.3104%" y="517" width="0.0212%" height="15" fill="rgb(247,201,32)" fg:x="4542" fg:w="1"/><text x="96.5604%" y="527.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::get_or_add_state (1 samples, 0.02%)</title><rect x="96.3104%" y="501" width="0.0212%" height="15" fill="rgb(249,22,31)" fg:x="4542" fg:w="1"/><text x="96.5604%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="96.3104%" y="485" width="0.0212%" height="15" fill="rgb(241,229,15)" fg:x="4542" fg:w="1"/><text x="96.5604%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="96.3104%" y="469" width="0.0212%" height="15" fill="rgb(254,103,39)" fg:x="4542" fg:w="1"/><text x="96.5604%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="96.3104%" y="453" width="0.0212%" height="15" fill="rgb(254,53,35)" fg:x="4542" fg:w="1"/><text x="96.5604%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="96.3104%" y="437" width="0.0212%" height="15" fill="rgb(237,133,22)" fg:x="4542" fg:w="1"/><text x="96.5604%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="96.3104%" y="421" width="0.0212%" height="15" fill="rgb(237,156,49)" fg:x="4542" fg:w="1"/><text x="96.5604%" y="431.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="96.3104%" y="405" width="0.0212%" height="15" fill="rgb(214,150,36)" fg:x="4542" fg:w="1"/><text x="96.5604%" y="415.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="96.3104%" y="389" width="0.0212%" height="15" fill="rgb(254,47,34)" fg:x="4542" fg:w="1"/><text x="96.5604%" y="399.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.02%)</title><rect x="96.3104%" y="373" width="0.0212%" height="15" fill="rgb(254,73,4)" fg:x="4542" fg:w="1"/><text x="96.5604%" y="383.50"></text></g><g><title>_int_realloc (1 samples, 0.02%)</title><rect x="96.3104%" y="357" width="0.0212%" height="15" fill="rgb(231,75,41)" fg:x="4542" fg:w="1"/><text x="96.5604%" y="367.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="96.3104%" y="341" width="0.0212%" height="15" fill="rgb(222,219,51)" fg:x="4542" fg:w="1"/><text x="96.5604%" y="351.50"></text></g><g><title>regex_automata::util::primitives::&lt;impl core::ops::index::Index&lt;regex_automata::util::primitives::StateID&gt; for alloc::vec::Vec&lt;T&gt;&gt;::index (2 samples, 0.04%)</title><rect x="96.3316%" y="501" width="0.0424%" height="15" fill="rgb(228,13,3)" fg:x="4543" fg:w="2"/><text x="96.5816%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (2 samples, 0.04%)</title><rect x="96.3316%" y="485" width="0.0424%" height="15" fill="rgb(215,149,39)" fg:x="4543" fg:w="2"/><text x="96.5816%" y="495.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.04%)</title><rect x="96.3316%" y="469" width="0.0424%" height="15" fill="rgb(250,51,46)" fg:x="4543" fg:w="2"/><text x="96.5816%" y="479.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.04%)</title><rect x="96.3316%" y="453" width="0.0424%" height="15" fill="rgb(254,116,45)" fg:x="4543" fg:w="2"/><text x="96.5816%" y="463.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add_union (1 samples, 0.02%)</title><rect x="96.3740%" y="501" width="0.0212%" height="15" fill="rgb(247,38,8)" fg:x="4545" fg:w="1"/><text x="96.6240%" y="511.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add_range (1 samples, 0.02%)</title><rect x="96.3953%" y="501" width="0.0212%" height="15" fill="rgb(245,83,34)" fg:x="4546" fg:w="1"/><text x="96.6453%" y="511.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add (1 samples, 0.02%)</title><rect x="96.3953%" y="485" width="0.0212%" height="15" fill="rgb(253,91,29)" fg:x="4546" fg:w="1"/><text x="96.6453%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="96.3953%" y="469" width="0.0212%" height="15" fill="rgb(241,229,15)" fg:x="4546" fg:w="1"/><text x="96.6453%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_automata::nfa::thompson::nfa::Transition&gt;&gt; (1 samples, 0.02%)</title><rect x="96.4165%" y="501" width="0.0212%" height="15" fill="rgb(207,29,6)" fg:x="4547" fg:w="1"/><text x="96.6665%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;regex_automata::nfa::thompson::nfa::Transition&gt;&gt; (1 samples, 0.02%)</title><rect x="96.4165%" y="485" width="0.0212%" height="15" fill="rgb(228,146,49)" fg:x="4547" fg:w="1"/><text x="96.6665%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="96.4165%" y="469" width="0.0212%" height="15" fill="rgb(213,128,22)" fg:x="4547" fg:w="1"/><text x="96.6665%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="96.4165%" y="453" width="0.0212%" height="15" fill="rgb(238,77,31)" fg:x="4547" fg:w="1"/><text x="96.6665%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="96.4165%" y="437" width="0.0212%" height="15" fill="rgb(227,15,28)" fg:x="4547" fg:w="1"/><text x="96.6665%" y="447.50"></text></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect x="96.4165%" y="421" width="0.0212%" height="15" fill="rgb(241,15,46)" fg:x="4547" fg:w="1"/><text x="96.6665%" y="431.50"></text></g><g><title>core::mem::replace (1 samples, 0.02%)</title><rect x="96.4377%" y="501" width="0.0212%" height="15" fill="rgb(240,40,18)" fg:x="4548" fg:w="1"/><text x="96.6877%" y="511.50"></text></g><g><title>core::ptr::read (1 samples, 0.02%)</title><rect x="96.4377%" y="485" width="0.0212%" height="15" fill="rgb(222,157,29)" fg:x="4548" fg:w="1"/><text x="96.6877%" y="495.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (1 samples, 0.02%)</title><rect x="96.4377%" y="469" width="0.0212%" height="15" fill="rgb(234,151,54)" fg:x="4548" fg:w="1"/><text x="96.6877%" y="479.50"></text></g><g><title>core::cmp::max (2 samples, 0.04%)</title><rect x="96.4589%" y="453" width="0.0424%" height="15" fill="rgb(230,43,15)" fg:x="4549" fg:w="2"/><text x="96.7089%" y="463.50"></text></g><g><title>core::cmp::Ord::max (2 samples, 0.04%)</title><rect x="96.4589%" y="437" width="0.0424%" height="15" fill="rgb(238,229,26)" fg:x="4549" fg:w="2"/><text x="96.7089%" y="447.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="96.5013%" y="437" width="0.0212%" height="15" fill="rgb(206,112,53)" fg:x="4551" fg:w="1"/><text x="96.7513%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="96.5225%" y="437" width="0.0212%" height="15" fill="rgb(237,156,49)" fg:x="4552" fg:w="1"/><text x="96.7725%" y="447.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="96.5225%" y="421" width="0.0212%" height="15" fill="rgb(214,150,36)" fg:x="4552" fg:w="1"/><text x="96.7725%" y="431.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="96.5225%" y="405" width="0.0212%" height="15" fill="rgb(254,47,34)" fg:x="4552" fg:w="1"/><text x="96.7725%" y="415.50"></text></g><g><title>__rdl_realloc (1 samples, 0.02%)</title><rect x="96.5225%" y="389" width="0.0212%" height="15" fill="rgb(218,79,16)" fg:x="4552" fg:w="1"/><text x="96.7725%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.11%)</title><rect x="96.4589%" y="469" width="0.1060%" height="15" fill="rgb(254,53,35)" fg:x="4549" fg:w="5"/><text x="96.7089%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.06%)</title><rect x="96.5013%" y="453" width="0.0636%" height="15" fill="rgb(237,133,22)" fg:x="4551" fg:w="3"/><text x="96.7513%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (8 samples, 0.17%)</title><rect x="96.4589%" y="501" width="0.1696%" height="15" fill="rgb(241,229,15)" fg:x="4549" fg:w="8"/><text x="96.7089%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (8 samples, 0.17%)</title><rect x="96.4589%" y="485" width="0.1696%" height="15" fill="rgb(254,103,39)" fg:x="4549" fg:w="8"/><text x="96.7089%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::is_empty (1 samples, 0.02%)</title><rect x="96.6285%" y="501" width="0.0212%" height="15" fill="rgb(242,223,10)" fg:x="4557" fg:w="1"/><text x="96.8785%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 0.02%)</title><rect x="96.6285%" y="485" width="0.0212%" height="15" fill="rgb(228,217,33)" fg:x="4557" fg:w="1"/><text x="96.8785%" y="495.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::compile (17 samples, 0.36%)</title><rect x="96.3316%" y="517" width="0.3605%" height="15" fill="rgb(233,39,2)" fg:x="4543" fg:w="17"/><text x="96.5816%" y="527.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.02%)</title><rect x="96.6921%" y="421" width="0.0212%" height="15" fill="rgb(206,149,53)" fg:x="4560" fg:w="1"/><text x="96.9421%" y="431.50"></text></g><g><title>tcache_get (1 samples, 0.02%)</title><rect x="96.7133%" y="405" width="0.0212%" height="15" fill="rgb(227,126,51)" fg:x="4561" fg:w="1"/><text x="96.9633%" y="415.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::State::add_match (3 samples, 0.06%)</title><rect x="96.6921%" y="501" width="0.0636%" height="15" fill="rgb(206,206,41)" fg:x="4560" fg:w="3"/><text x="96.9421%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.06%)</title><rect x="96.6921%" y="485" width="0.0636%" height="15" fill="rgb(241,229,15)" fg:x="4560" fg:w="3"/><text x="96.9421%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.06%)</title><rect x="96.6921%" y="469" width="0.0636%" height="15" fill="rgb(254,103,39)" fg:x="4560" fg:w="3"/><text x="96.9421%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.06%)</title><rect x="96.6921%" y="453" width="0.0636%" height="15" fill="rgb(254,53,35)" fg:x="4560" fg:w="3"/><text x="96.9421%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.06%)</title><rect x="96.6921%" y="437" width="0.0636%" height="15" fill="rgb(237,133,22)" fg:x="4560" fg:w="3"/><text x="96.9421%" y="447.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.04%)</title><rect x="96.7133%" y="421" width="0.0424%" height="15" fill="rgb(206,112,53)" fg:x="4561" fg:w="2"/><text x="96.9633%" y="431.50"></text></g><g><title>unlink_chunk (1 samples, 0.02%)</title><rect x="96.7557%" y="341" width="0.0212%" height="15" fill="rgb(223,20,30)" fg:x="4563" fg:w="1"/><text x="97.0057%" y="351.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="96.7769%" y="341" width="0.0212%" height="15" fill="rgb(221,113,48)" fg:x="4564" fg:w="1"/><text x="97.0269%" y="351.50"></text></g><g><title>unlink_chunk (1 samples, 0.02%)</title><rect x="96.7769%" y="325" width="0.0212%" height="15" fill="rgb(223,20,30)" fg:x="4564" fg:w="1"/><text x="97.0269%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.06%)</title><rect x="96.7557%" y="485" width="0.0636%" height="15" fill="rgb(241,229,15)" fg:x="4563" fg:w="3"/><text x="97.0057%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.06%)</title><rect x="96.7557%" y="469" width="0.0636%" height="15" fill="rgb(254,103,39)" fg:x="4563" fg:w="3"/><text x="97.0057%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.06%)</title><rect x="96.7557%" y="453" width="0.0636%" height="15" fill="rgb(254,53,35)" fg:x="4563" fg:w="3"/><text x="97.0057%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.06%)</title><rect x="96.7557%" y="437" width="0.0636%" height="15" fill="rgb(237,133,22)" fg:x="4563" fg:w="3"/><text x="97.0057%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.06%)</title><rect x="96.7557%" y="421" width="0.0636%" height="15" fill="rgb(237,156,49)" fg:x="4563" fg:w="3"/><text x="97.0057%" y="431.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.06%)</title><rect x="96.7557%" y="405" width="0.0636%" height="15" fill="rgb(214,150,36)" fg:x="4563" fg:w="3"/><text x="97.0057%" y="415.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.06%)</title><rect x="96.7557%" y="389" width="0.0636%" height="15" fill="rgb(254,47,34)" fg:x="4563" fg:w="3"/><text x="97.0057%" y="399.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.06%)</title><rect x="96.7557%" y="373" width="0.0636%" height="15" fill="rgb(254,73,4)" fg:x="4563" fg:w="3"/><text x="97.0057%" y="383.50"></text></g><g><title>_int_realloc (3 samples, 0.06%)</title><rect x="96.7557%" y="357" width="0.0636%" height="15" fill="rgb(231,75,41)" fg:x="4563" fg:w="3"/><text x="97.0057%" y="367.50"></text></g><g><title>_int_malloc (4 samples, 0.08%)</title><rect x="96.8193%" y="373" width="0.0848%" height="15" fill="rgb(222,219,51)" fg:x="4566" fg:w="4"/><text x="97.0693%" y="383.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.11%)</title><rect x="96.8193%" y="389" width="0.1060%" height="15" fill="rgb(206,112,53)" fg:x="4566" fg:w="5"/><text x="97.0693%" y="399.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::add (12 samples, 0.25%)</title><rect x="96.6921%" y="517" width="0.2545%" height="15" fill="rgb(247,201,32)" fg:x="4560" fg:w="12"/><text x="96.9421%" y="527.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::get_or_add_state (9 samples, 0.19%)</title><rect x="96.7557%" y="501" width="0.1908%" height="15" fill="rgb(249,22,31)" fg:x="4563" fg:w="9"/><text x="97.0057%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (6 samples, 0.13%)</title><rect x="96.8193%" y="485" width="0.1272%" height="15" fill="rgb(222,129,7)" fg:x="4566" fg:w="6"/><text x="97.0693%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (6 samples, 0.13%)</title><rect x="96.8193%" y="469" width="0.1272%" height="15" fill="rgb(212,159,3)" fg:x="4566" fg:w="6"/><text x="97.0693%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.13%)</title><rect x="96.8193%" y="453" width="0.1272%" height="15" fill="rgb(231,142,39)" fg:x="4566" fg:w="6"/><text x="97.0693%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.13%)</title><rect x="96.8193%" y="437" width="0.1272%" height="15" fill="rgb(249,2,22)" fg:x="4566" fg:w="6"/><text x="97.0693%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.13%)</title><rect x="96.8193%" y="421" width="0.1272%" height="15" fill="rgb(254,53,35)" fg:x="4566" fg:w="6"/><text x="97.0693%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.13%)</title><rect x="96.8193%" y="405" width="0.1272%" height="15" fill="rgb(237,133,22)" fg:x="4566" fg:w="6"/><text x="97.0693%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="96.9254%" y="389" width="0.0212%" height="15" fill="rgb(237,156,49)" fg:x="4571" fg:w="1"/><text x="97.1754%" y="399.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="96.9254%" y="373" width="0.0212%" height="15" fill="rgb(214,150,36)" fg:x="4571" fg:w="1"/><text x="97.1754%" y="383.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="96.9254%" y="357" width="0.0212%" height="15" fill="rgb(254,47,34)" fg:x="4571" fg:w="1"/><text x="97.1754%" y="367.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.02%)</title><rect x="96.9254%" y="341" width="0.0212%" height="15" fill="rgb(254,73,4)" fg:x="4571" fg:w="1"/><text x="97.1754%" y="351.50"></text></g><g><title>_int_realloc (1 samples, 0.02%)</title><rect x="96.9254%" y="325" width="0.0212%" height="15" fill="rgb(231,75,41)" fg:x="4571" fg:w="1"/><text x="97.1754%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;regex_automata::nfa::thompson::literal_trie::State&gt;&gt; (1 samples, 0.02%)</title><rect x="96.9466%" y="485" width="0.0212%" height="15" fill="rgb(227,72,15)" fg:x="4572" fg:w="1"/><text x="97.1966%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="96.9466%" y="469" width="0.0212%" height="15" fill="rgb(213,128,22)" fg:x="4572" fg:w="1"/><text x="97.1966%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="96.9466%" y="453" width="0.0212%" height="15" fill="rgb(238,77,31)" fg:x="4572" fg:w="1"/><text x="97.1966%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="96.9466%" y="437" width="0.0212%" height="15" fill="rgb(227,15,28)" fg:x="4572" fg:w="1"/><text x="97.1966%" y="447.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="96.9466%" y="421" width="0.0212%" height="15" fill="rgb(247,8,17)" fg:x="4572" fg:w="1"/><text x="97.1966%" y="431.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="96.9466%" y="405" width="0.0212%" height="15" fill="rgb(221,113,48)" fg:x="4572" fg:w="1"/><text x="97.1966%" y="415.50"></text></g><g><title>malloc_consolidate (1 samples, 0.02%)</title><rect x="96.9466%" y="389" width="0.0212%" height="15" fill="rgb(228,194,39)" fg:x="4572" fg:w="1"/><text x="97.1966%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_automata::nfa::thompson::literal_trie::Transition&gt;&gt; (2 samples, 0.04%)</title><rect x="96.9678%" y="437" width="0.0424%" height="15" fill="rgb(242,32,21)" fg:x="4573" fg:w="2"/><text x="97.2178%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;regex_automata::nfa::thompson::literal_trie::Transition&gt;&gt; (2 samples, 0.04%)</title><rect x="96.9678%" y="421" width="0.0424%" height="15" fill="rgb(216,209,43)" fg:x="4573" fg:w="2"/><text x="97.2178%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="96.9678%" y="405" width="0.0424%" height="15" fill="rgb(213,128,22)" fg:x="4573" fg:w="2"/><text x="97.2178%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.04%)</title><rect x="96.9678%" y="389" width="0.0424%" height="15" fill="rgb(238,77,31)" fg:x="4573" fg:w="2"/><text x="97.2178%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.04%)</title><rect x="96.9678%" y="373" width="0.0424%" height="15" fill="rgb(227,15,28)" fg:x="4573" fg:w="2"/><text x="97.2178%" y="383.50"></text></g><g><title>__GI___libc_free (2 samples, 0.04%)</title><rect x="96.9678%" y="357" width="0.0424%" height="15" fill="rgb(247,8,17)" fg:x="4573" fg:w="2"/><text x="97.2178%" y="367.50"></text></g><g><title>_int_free (2 samples, 0.04%)</title><rect x="96.9678%" y="341" width="0.0424%" height="15" fill="rgb(221,113,48)" fg:x="4573" fg:w="2"/><text x="97.2178%" y="351.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (33 samples, 0.70%)</title><rect x="96.3316%" y="565" width="0.6997%" height="15" fill="rgb(235,200,16)" fg:x="4543" fg:w="33"/><text x="96.5816%" y="575.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (33 samples, 0.70%)</title><rect x="96.3316%" y="549" width="0.6997%" height="15" fill="rgb(213,34,18)" fg:x="4543" fg:w="33"/><text x="96.5816%" y="559.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (33 samples, 0.70%)</title><rect x="96.3316%" y="533" width="0.6997%" height="15" fill="rgb(253,35,22)" fg:x="4543" fg:w="33"/><text x="96.5816%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::literal_trie::LiteralTrie&gt; (4 samples, 0.08%)</title><rect x="96.9466%" y="517" width="0.0848%" height="15" fill="rgb(244,70,29)" fg:x="4572" fg:w="4"/><text x="97.1966%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_automata::nfa::thompson::literal_trie::State&gt;&gt; (4 samples, 0.08%)</title><rect x="96.9466%" y="501" width="0.0848%" height="15" fill="rgb(227,19,7)" fg:x="4572" fg:w="4"/><text x="97.1966%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.06%)</title><rect x="96.9678%" y="485" width="0.0636%" height="15" fill="rgb(249,14,2)" fg:x="4573" fg:w="3"/><text x="97.2178%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[regex_automata::nfa::thompson::literal_trie::State]&gt; (3 samples, 0.06%)</title><rect x="96.9678%" y="469" width="0.0636%" height="15" fill="rgb(241,61,51)" fg:x="4573" fg:w="3"/><text x="97.2178%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::literal_trie::State&gt; (3 samples, 0.06%)</title><rect x="96.9678%" y="453" width="0.0636%" height="15" fill="rgb(245,189,53)" fg:x="4573" fg:w="3"/><text x="97.2178%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt; (1 samples, 0.02%)</title><rect x="97.0102%" y="437" width="0.0212%" height="15" fill="rgb(213,102,40)" fg:x="4575" fg:w="1"/><text x="97.2602%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize)&gt;&gt; (1 samples, 0.02%)</title><rect x="97.0102%" y="421" width="0.0212%" height="15" fill="rgb(243,139,46)" fg:x="4575" fg:w="1"/><text x="97.2602%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="97.0102%" y="405" width="0.0212%" height="15" fill="rgb(213,128,22)" fg:x="4575" fg:w="1"/><text x="97.2602%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="97.0102%" y="389" width="0.0212%" height="15" fill="rgb(238,77,31)" fg:x="4575" fg:w="1"/><text x="97.2602%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="97.0102%" y="373" width="0.0212%" height="15" fill="rgb(227,15,28)" fg:x="4575" fg:w="1"/><text x="97.2602%" y="383.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="97.0102%" y="357" width="0.0212%" height="15" fill="rgb(247,8,17)" fg:x="4575" fg:w="1"/><text x="97.2602%" y="367.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="97.0102%" y="341" width="0.0212%" height="15" fill="rgb(221,113,48)" fg:x="4575" fg:w="1"/><text x="97.2602%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.72%)</title><rect x="96.3316%" y="629" width="0.7209%" height="15" fill="rgb(214,109,53)" fg:x="4543" fg:w="34"/><text x="96.5816%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (34 samples, 0.72%)</title><rect x="96.3316%" y="613" width="0.7209%" height="15" fill="rgb(254,35,30)" fg:x="4543" fg:w="34"/><text x="96.5816%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (34 samples, 0.72%)</title><rect x="96.3316%" y="597" width="0.7209%" height="15" fill="rgb(226,169,23)" fg:x="4543" fg:w="34"/><text x="96.5816%" y="607.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (34 samples, 0.72%)</title><rect x="96.3316%" y="581" width="0.7209%" height="15" fill="rgb(205,130,14)" fg:x="4543" fg:w="34"/><text x="96.5816%" y="591.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.02%)</title><rect x="97.0314%" y="565" width="0.0212%" height="15" fill="rgb(213,34,18)" fg:x="4576" fg:w="1"/><text x="97.2814%" y="575.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_repetition (1 samples, 0.02%)</title><rect x="97.0314%" y="549" width="0.0212%" height="15" fill="rgb(205,23,25)" fg:x="4576" fg:w="1"/><text x="97.2814%" y="559.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_zero_or_one (1 samples, 0.02%)</title><rect x="97.0314%" y="533" width="0.0212%" height="15" fill="rgb(240,227,44)" fg:x="4576" fg:w="1"/><text x="97.2814%" y="543.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::add_empty (1 samples, 0.02%)</title><rect x="97.0314%" y="517" width="0.0212%" height="15" fill="rgb(245,57,0)" fg:x="4576" fg:w="1"/><text x="97.2814%" y="527.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add_empty (1 samples, 0.02%)</title><rect x="97.0314%" y="501" width="0.0212%" height="15" fill="rgb(233,49,21)" fg:x="4576" fg:w="1"/><text x="97.2814%" y="511.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add (1 samples, 0.02%)</title><rect x="97.0314%" y="485" width="0.0212%" height="15" fill="rgb(253,91,29)" fg:x="4576" fg:w="1"/><text x="97.2814%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="97.0314%" y="469" width="0.0212%" height="15" fill="rgb(241,229,15)" fg:x="4576" fg:w="1"/><text x="97.2814%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="97.0314%" y="453" width="0.0212%" height="15" fill="rgb(254,103,39)" fg:x="4576" fg:w="1"/><text x="97.2814%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="97.0314%" y="437" width="0.0212%" height="15" fill="rgb(254,53,35)" fg:x="4576" fg:w="1"/><text x="97.2814%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="97.0314%" y="421" width="0.0212%" height="15" fill="rgb(237,133,22)" fg:x="4576" fg:w="1"/><text x="97.2814%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="97.0314%" y="405" width="0.0212%" height="15" fill="rgb(237,156,49)" fg:x="4576" fg:w="1"/><text x="97.2814%" y="415.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="97.0314%" y="389" width="0.0212%" height="15" fill="rgb(214,150,36)" fg:x="4576" fg:w="1"/><text x="97.2814%" y="399.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="97.0314%" y="373" width="0.0212%" height="15" fill="rgb(254,47,34)" fg:x="4576" fg:w="1"/><text x="97.2814%" y="383.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.02%)</title><rect x="97.0314%" y="357" width="0.0212%" height="15" fill="rgb(254,73,4)" fg:x="4576" fg:w="1"/><text x="97.2814%" y="367.50"></text></g><g><title>_int_realloc (1 samples, 0.02%)</title><rect x="97.0314%" y="341" width="0.0212%" height="15" fill="rgb(231,75,41)" fg:x="4576" fg:w="1"/><text x="97.2814%" y="351.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="97.0314%" y="325" width="0.0212%" height="15" fill="rgb(222,219,51)" fg:x="4576" fg:w="1"/><text x="97.2814%" y="335.50"></text></g><g><title>sysmalloc (1 samples, 0.02%)</title><rect x="97.0314%" y="309" width="0.0212%" height="15" fill="rgb(237,64,10)" fg:x="4576" fg:w="1"/><text x="97.2814%" y="319.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="97.0314%" y="293" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="4576" fg:w="1"/><text x="97.2814%" y="303.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="97.0314%" y="277" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="4576" fg:w="1"/><text x="97.2814%" y="287.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="97.0314%" y="261" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="4576" fg:w="1"/><text x="97.2814%" y="271.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="97.0314%" y="245" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="4576" fg:w="1"/><text x="97.2814%" y="255.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="97.0314%" y="229" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="4576" fg:w="1"/><text x="97.2814%" y="239.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="97.0314%" y="213" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="4576" fg:w="1"/><text x="97.2814%" y="223.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="97.0314%" y="197" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="4576" fg:w="1"/><text x="97.2814%" y="207.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::Frame::new (1 samples, 0.02%)</title><rect x="97.0526%" y="501" width="0.0212%" height="15" fill="rgb(208,143,39)" fg:x="4577" fg:w="1"/><text x="97.3026%" y="511.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::State::chunks (1 samples, 0.02%)</title><rect x="97.0526%" y="485" width="0.0212%" height="15" fill="rgb(208,39,20)" fg:x="4577" fg:w="1"/><text x="97.3026%" y="495.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::State::active_chunk (1 samples, 0.02%)</title><rect x="97.0526%" y="469" width="0.0212%" height="15" fill="rgb(212,119,10)" fg:x="4577" fg:w="1"/><text x="97.3026%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.02%)</title><rect x="97.0526%" y="453" width="0.0212%" height="15" fill="rgb(215,149,39)" fg:x="4577" fg:w="1"/><text x="97.3026%" y="463.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect x="97.0526%" y="437" width="0.0212%" height="15" fill="rgb(250,51,46)" fg:x="4577" fg:w="1"/><text x="97.3026%" y="447.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect x="97.0526%" y="421" width="0.0212%" height="15" fill="rgb(220,192,19)" fg:x="4577" fg:w="1"/><text x="97.3026%" y="431.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add (1 samples, 0.02%)</title><rect x="97.0738%" y="485" width="0.0212%" height="15" fill="rgb(253,91,29)" fg:x="4578" fg:w="1"/><text x="97.3238%" y="495.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::check_size_limit (1 samples, 0.02%)</title><rect x="97.0738%" y="469" width="0.0212%" height="15" fill="rgb(235,140,32)" fg:x="4578" fg:w="1"/><text x="97.3238%" y="479.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add_sparse (2 samples, 0.04%)</title><rect x="97.0738%" y="501" width="0.0424%" height="15" fill="rgb(233,153,44)" fg:x="4578" fg:w="2"/><text x="97.3238%" y="511.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add_range (1 samples, 0.02%)</title><rect x="97.1162%" y="501" width="0.0212%" height="15" fill="rgb(245,83,34)" fg:x="4580" fg:w="1"/><text x="97.3662%" y="511.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add (1 samples, 0.02%)</title><rect x="97.1162%" y="485" width="0.0212%" height="15" fill="rgb(253,91,29)" fg:x="4580" fg:w="1"/><text x="97.3662%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="97.1162%" y="469" width="0.0212%" height="15" fill="rgb(241,229,15)" fg:x="4580" fg:w="1"/><text x="97.3662%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_automata::nfa::thompson::nfa::Transition&gt;&gt; (1 samples, 0.02%)</title><rect x="97.1374%" y="501" width="0.0212%" height="15" fill="rgb(207,29,6)" fg:x="4581" fg:w="1"/><text x="97.3874%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;regex_automata::nfa::thompson::nfa::Transition&gt;&gt; (1 samples, 0.02%)</title><rect x="97.1374%" y="485" width="0.0212%" height="15" fill="rgb(228,146,49)" fg:x="4581" fg:w="1"/><text x="97.3874%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="97.1374%" y="469" width="0.0212%" height="15" fill="rgb(213,128,22)" fg:x="4581" fg:w="1"/><text x="97.3874%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="97.1374%" y="453" width="0.0212%" height="15" fill="rgb(238,77,31)" fg:x="4581" fg:w="1"/><text x="97.3874%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="97.1374%" y="437" width="0.0212%" height="15" fill="rgb(227,15,28)" fg:x="4581" fg:w="1"/><text x="97.3874%" y="447.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="97.1374%" y="421" width="0.0212%" height="15" fill="rgb(247,8,17)" fg:x="4581" fg:w="1"/><text x="97.3874%" y="431.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="97.1374%" y="405" width="0.0212%" height="15" fill="rgb(221,113,48)" fg:x="4581" fg:w="1"/><text x="97.3874%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="97.1586%" y="453" width="0.0212%" height="15" fill="rgb(237,133,22)" fg:x="4582" fg:w="1"/><text x="97.4086%" y="463.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="97.1586%" y="437" width="0.0212%" height="15" fill="rgb(206,112,53)" fg:x="4582" fg:w="1"/><text x="97.4086%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.04%)</title><rect x="97.1586%" y="485" width="0.0424%" height="15" fill="rgb(254,103,39)" fg:x="4582" fg:w="2"/><text x="97.4086%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.04%)</title><rect x="97.1586%" y="469" width="0.0424%" height="15" fill="rgb(254,53,35)" fg:x="4582" fg:w="2"/><text x="97.4086%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.06%)</title><rect x="97.1586%" y="501" width="0.0636%" height="15" fill="rgb(241,229,15)" fg:x="4582" fg:w="3"/><text x="97.4086%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="97.2222%" y="501" width="0.0212%" height="15" fill="rgb(236,210,2)" fg:x="4585" fg:w="1"/><text x="97.4722%" y="511.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::compile (12 samples, 0.25%)</title><rect x="97.0526%" y="517" width="0.2545%" height="15" fill="rgb(233,39,2)" fg:x="4577" fg:w="12"/><text x="97.3026%" y="527.50"></text></g><g><title>unlink_chunk (1 samples, 0.02%)</title><rect x="97.3070%" y="389" width="0.0212%" height="15" fill="rgb(223,20,30)" fg:x="4589" fg:w="1"/><text x="97.5570%" y="399.50"></text></g><g><title>tcache_get (1 samples, 0.02%)</title><rect x="97.3282%" y="389" width="0.0212%" height="15" fill="rgb(227,126,51)" fg:x="4590" fg:w="1"/><text x="97.5782%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.06%)</title><rect x="97.3070%" y="437" width="0.0636%" height="15" fill="rgb(237,133,22)" fg:x="4589" fg:w="3"/><text x="97.5570%" y="447.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.06%)</title><rect x="97.3070%" y="421" width="0.0636%" height="15" fill="rgb(206,112,53)" fg:x="4589" fg:w="3"/><text x="97.5570%" y="431.50"></text></g><g><title>_int_malloc (3 samples, 0.06%)</title><rect x="97.3070%" y="405" width="0.0636%" height="15" fill="rgb(222,219,51)" fg:x="4589" fg:w="3"/><text x="97.5570%" y="415.50"></text></g><g><title>checked_request2size (1 samples, 0.02%)</title><rect x="97.3494%" y="389" width="0.0212%" height="15" fill="rgb(236,198,42)" fg:x="4591" fg:w="1"/><text x="97.5994%" y="399.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::State::add_match (4 samples, 0.08%)</title><rect x="97.3070%" y="501" width="0.0848%" height="15" fill="rgb(206,206,41)" fg:x="4589" fg:w="4"/><text x="97.5570%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.08%)</title><rect x="97.3070%" y="485" width="0.0848%" height="15" fill="rgb(241,229,15)" fg:x="4589" fg:w="4"/><text x="97.5570%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.08%)</title><rect x="97.3070%" y="469" width="0.0848%" height="15" fill="rgb(254,103,39)" fg:x="4589" fg:w="4"/><text x="97.5570%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.08%)</title><rect x="97.3070%" y="453" width="0.0848%" height="15" fill="rgb(254,53,35)" fg:x="4589" fg:w="4"/><text x="97.5570%" y="463.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="97.3707%" y="437" width="0.0212%" height="15" fill="rgb(245,132,34)" fg:x="4592" fg:w="1"/><text x="97.6207%" y="447.50"></text></g><g><title>_int_realloc (1 samples, 0.02%)</title><rect x="97.3919%" y="357" width="0.0212%" height="15" fill="rgb(231,75,41)" fg:x="4593" fg:w="1"/><text x="97.6419%" y="367.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.02%)</title><rect x="97.3919%" y="341" width="0.0212%" height="15" fill="rgb(217,126,36)" fg:x="4593" fg:w="1"/><text x="97.6419%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.04%)</title><rect x="97.3919%" y="485" width="0.0424%" height="15" fill="rgb(241,229,15)" fg:x="4593" fg:w="2"/><text x="97.6419%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.04%)</title><rect x="97.3919%" y="469" width="0.0424%" height="15" fill="rgb(254,103,39)" fg:x="4593" fg:w="2"/><text x="97.6419%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.04%)</title><rect x="97.3919%" y="453" width="0.0424%" height="15" fill="rgb(254,53,35)" fg:x="4593" fg:w="2"/><text x="97.6419%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.04%)</title><rect x="97.3919%" y="437" width="0.0424%" height="15" fill="rgb(237,133,22)" fg:x="4593" fg:w="2"/><text x="97.6419%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.04%)</title><rect x="97.3919%" y="421" width="0.0424%" height="15" fill="rgb(237,156,49)" fg:x="4593" fg:w="2"/><text x="97.6419%" y="431.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.04%)</title><rect x="97.3919%" y="405" width="0.0424%" height="15" fill="rgb(214,150,36)" fg:x="4593" fg:w="2"/><text x="97.6419%" y="415.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.04%)</title><rect x="97.3919%" y="389" width="0.0424%" height="15" fill="rgb(254,47,34)" fg:x="4593" fg:w="2"/><text x="97.6419%" y="399.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.04%)</title><rect x="97.3919%" y="373" width="0.0424%" height="15" fill="rgb(254,73,4)" fg:x="4593" fg:w="2"/><text x="97.6419%" y="383.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::add (7 samples, 0.15%)</title><rect x="97.3070%" y="517" width="0.1484%" height="15" fill="rgb(247,201,32)" fg:x="4589" fg:w="7"/><text x="97.5570%" y="527.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::get_or_add_state (3 samples, 0.06%)</title><rect x="97.3919%" y="501" width="0.0636%" height="15" fill="rgb(249,22,31)" fg:x="4593" fg:w="3"/><text x="97.6419%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (1 samples, 0.02%)</title><rect x="97.4343%" y="485" width="0.0212%" height="15" fill="rgb(222,129,7)" fg:x="4595" fg:w="1"/><text x="97.6843%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="97.4343%" y="469" width="0.0212%" height="15" fill="rgb(212,159,3)" fg:x="4595" fg:w="1"/><text x="97.6843%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="97.4343%" y="453" width="0.0212%" height="15" fill="rgb(231,142,39)" fg:x="4595" fg:w="1"/><text x="97.6843%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="97.4343%" y="437" width="0.0212%" height="15" fill="rgb(249,2,22)" fg:x="4595" fg:w="1"/><text x="97.6843%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="97.4343%" y="421" width="0.0212%" height="15" fill="rgb(254,53,35)" fg:x="4595" fg:w="1"/><text x="97.6843%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="97.4343%" y="405" width="0.0212%" height="15" fill="rgb(237,133,22)" fg:x="4595" fg:w="1"/><text x="97.6843%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="97.4343%" y="389" width="0.0212%" height="15" fill="rgb(237,156,49)" fg:x="4595" fg:w="1"/><text x="97.6843%" y="399.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="97.4343%" y="373" width="0.0212%" height="15" fill="rgb(214,150,36)" fg:x="4595" fg:w="1"/><text x="97.6843%" y="383.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="97.4343%" y="357" width="0.0212%" height="15" fill="rgb(254,47,34)" fg:x="4595" fg:w="1"/><text x="97.6843%" y="367.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.02%)</title><rect x="97.4343%" y="341" width="0.0212%" height="15" fill="rgb(254,73,4)" fg:x="4595" fg:w="1"/><text x="97.6843%" y="351.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (1 samples, 0.02%)</title><rect x="97.4555%" y="517" width="0.0212%" height="15" fill="rgb(247,137,3)" fg:x="4596" fg:w="1"/><text x="97.7055%" y="527.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::add_union (1 samples, 0.02%)</title><rect x="97.4555%" y="501" width="0.0212%" height="15" fill="rgb(243,161,28)" fg:x="4596" fg:w="1"/><text x="97.7055%" y="511.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add_union (1 samples, 0.02%)</title><rect x="97.4555%" y="485" width="0.0212%" height="15" fill="rgb(247,38,8)" fg:x="4596" fg:w="1"/><text x="97.7055%" y="495.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add (1 samples, 0.02%)</title><rect x="97.4555%" y="469" width="0.0212%" height="15" fill="rgb(253,91,29)" fg:x="4596" fg:w="1"/><text x="97.7055%" y="479.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (21 samples, 0.45%)</title><rect x="97.0526%" y="565" width="0.4453%" height="15" fill="rgb(235,200,16)" fg:x="4577" fg:w="21"/><text x="97.3026%" y="575.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (21 samples, 0.45%)</title><rect x="97.0526%" y="549" width="0.4453%" height="15" fill="rgb(213,34,18)" fg:x="4577" fg:w="21"/><text x="97.3026%" y="559.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (21 samples, 0.45%)</title><rect x="97.0526%" y="533" width="0.4453%" height="15" fill="rgb(253,35,22)" fg:x="4577" fg:w="21"/><text x="97.3026%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::literal_trie::LiteralTrie&gt; (1 samples, 0.02%)</title><rect x="97.4767%" y="517" width="0.0212%" height="15" fill="rgb(244,70,29)" fg:x="4597" fg:w="1"/><text x="97.7267%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_automata::nfa::thompson::literal_trie::State&gt;&gt; (1 samples, 0.02%)</title><rect x="97.4767%" y="501" width="0.0212%" height="15" fill="rgb(227,19,7)" fg:x="4597" fg:w="1"/><text x="97.7267%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;regex_automata::nfa::thompson::literal_trie::State&gt;&gt; (1 samples, 0.02%)</title><rect x="97.4767%" y="485" width="0.0212%" height="15" fill="rgb(227,72,15)" fg:x="4597" fg:w="1"/><text x="97.7267%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="97.4767%" y="469" width="0.0212%" height="15" fill="rgb(213,128,22)" fg:x="4597" fg:w="1"/><text x="97.7267%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="97.4767%" y="453" width="0.0212%" height="15" fill="rgb(238,77,31)" fg:x="4597" fg:w="1"/><text x="97.7267%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="97.4767%" y="437" width="0.0212%" height="15" fill="rgb(227,15,28)" fg:x="4597" fg:w="1"/><text x="97.7267%" y="447.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="97.4767%" y="421" width="0.0212%" height="15" fill="rgb(247,8,17)" fg:x="4597" fg:w="1"/><text x="97.7267%" y="431.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="97.4767%" y="405" width="0.0212%" height="15" fill="rgb(221,113,48)" fg:x="4597" fg:w="1"/><text x="97.7267%" y="415.50"></text></g><g><title>malloc_consolidate (1 samples, 0.02%)</title><rect x="97.4767%" y="389" width="0.0212%" height="15" fill="rgb(228,194,39)" fg:x="4597" fg:w="1"/><text x="97.7267%" y="399.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (56 samples, 1.19%)</title><rect x="96.3316%" y="789" width="1.1874%" height="15" fill="rgb(226,42,16)" fg:x="4543" fg:w="56"/><text x="96.5816%" y="799.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (56 samples, 1.19%)</title><rect x="96.3316%" y="773" width="1.1874%" height="15" fill="rgb(242,129,17)" fg:x="4543" fg:w="56"/><text x="96.5816%" y="783.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (56 samples, 1.19%)</title><rect x="96.3316%" y="757" width="1.1874%" height="15" fill="rgb(247,137,3)" fg:x="4543" fg:w="56"/><text x="96.5816%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (56 samples, 1.19%)</title><rect x="96.3316%" y="741" width="1.1874%" height="15" fill="rgb(214,109,53)" fg:x="4543" fg:w="56"/><text x="96.5816%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (56 samples, 1.19%)</title><rect x="96.3316%" y="725" width="1.1874%" height="15" fill="rgb(254,35,30)" fg:x="4543" fg:w="56"/><text x="96.5816%" y="735.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (56 samples, 1.19%)</title><rect x="96.3316%" y="709" width="1.1874%" height="15" fill="rgb(226,169,23)" fg:x="4543" fg:w="56"/><text x="96.5816%" y="719.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile::{{closure}} (56 samples, 1.19%)</title><rect x="96.3316%" y="693" width="1.1874%" height="15" fill="rgb(218,216,52)" fg:x="4543" fg:w="56"/><text x="96.5816%" y="703.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (56 samples, 1.19%)</title><rect x="96.3316%" y="677" width="1.1874%" height="15" fill="rgb(235,200,16)" fg:x="4543" fg:w="56"/><text x="96.5816%" y="687.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (56 samples, 1.19%)</title><rect x="96.3316%" y="661" width="1.1874%" height="15" fill="rgb(213,34,18)" fg:x="4543" fg:w="56"/><text x="96.5816%" y="671.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (56 samples, 1.19%)</title><rect x="96.3316%" y="645" width="1.1874%" height="15" fill="rgb(210,105,37)" fg:x="4543" fg:w="56"/><text x="96.5816%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (22 samples, 0.47%)</title><rect x="97.0526%" y="629" width="0.4665%" height="15" fill="rgb(222,94,14)" fg:x="4577" fg:w="22"/><text x="97.3026%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (22 samples, 0.47%)</title><rect x="97.0526%" y="613" width="0.4665%" height="15" fill="rgb(254,35,30)" fg:x="4577" fg:w="22"/><text x="97.3026%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (22 samples, 0.47%)</title><rect x="97.0526%" y="597" width="0.4665%" height="15" fill="rgb(226,169,23)" fg:x="4577" fg:w="22"/><text x="97.3026%" y="607.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (22 samples, 0.47%)</title><rect x="97.0526%" y="581" width="0.4665%" height="15" fill="rgb(205,130,14)" fg:x="4577" fg:w="22"/><text x="97.3026%" y="591.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_bounded (1 samples, 0.02%)</title><rect x="97.4979%" y="565" width="0.0212%" height="15" fill="rgb(214,135,45)" fg:x="4598" fg:w="1"/><text x="97.7479%" y="575.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_exactly (1 samples, 0.02%)</title><rect x="97.4979%" y="549" width="0.0212%" height="15" fill="rgb(240,41,50)" fg:x="4598" fg:w="1"/><text x="97.7479%" y="559.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (1 samples, 0.02%)</title><rect x="97.4979%" y="533" width="0.0212%" height="15" fill="rgb(210,105,37)" fg:x="4598" fg:w="1"/><text x="97.7479%" y="543.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.02%)</title><rect x="97.4979%" y="517" width="0.0212%" height="15" fill="rgb(213,34,18)" fg:x="4598" fg:w="1"/><text x="97.7479%" y="527.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class (1 samples, 0.02%)</title><rect x="97.4979%" y="501" width="0.0212%" height="15" fill="rgb(246,38,12)" fg:x="4598" fg:w="1"/><text x="97.7479%" y="511.50"></text></g><g><title>regex_syntax::hir::ClassUnicode::is_ascii (1 samples, 0.02%)</title><rect x="97.4979%" y="485" width="0.0212%" height="15" fill="rgb(227,95,3)" fg:x="4598" fg:w="1"/><text x="97.7479%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or (1 samples, 0.02%)</title><rect x="97.4979%" y="469" width="0.0212%" height="15" fill="rgb(246,82,18)" fg:x="4598" fg:w="1"/><text x="97.7479%" y="479.50"></text></g><g><title>regex_syntax::hir::ClassUnicode::is_ascii::{{closure}} (1 samples, 0.02%)</title><rect x="97.4979%" y="453" width="0.0212%" height="15" fill="rgb(248,123,45)" fg:x="4598" fg:w="1"/><text x="97.7479%" y="463.50"></text></g><g><title>regex_automata::dfa::remapper::Remapper::remap::{{closure}} (3 samples, 0.06%)</title><rect x="97.5191%" y="661" width="0.0636%" height="15" fill="rgb(205,70,50)" fg:x="4599" fg:w="3"/><text x="97.7691%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (3 samples, 0.06%)</title><rect x="97.5191%" y="645" width="0.0636%" height="15" fill="rgb(215,149,39)" fg:x="4599" fg:w="3"/><text x="97.7691%" y="655.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (3 samples, 0.06%)</title><rect x="97.5191%" y="629" width="0.0636%" height="15" fill="rgb(250,51,46)" fg:x="4599" fg:w="3"/><text x="97.7691%" y="639.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (3 samples, 0.06%)</title><rect x="97.5191%" y="613" width="0.0636%" height="15" fill="rgb(254,116,45)" fg:x="4599" fg:w="3"/><text x="97.7691%" y="623.50"></text></g><g><title>regex_automata::dfa::onepass::InternalBuilder::shuffle_states (4 samples, 0.08%)</title><rect x="97.5191%" y="725" width="0.0848%" height="15" fill="rgb(235,45,9)" fg:x="4599" fg:w="4"/><text x="97.7691%" y="735.50"></text></g><g><title>regex_automata::dfa::remapper::Remapper::remap (4 samples, 0.08%)</title><rect x="97.5191%" y="709" width="0.0848%" height="15" fill="rgb(246,37,46)" fg:x="4599" fg:w="4"/><text x="97.7691%" y="719.50"></text></g><g><title>regex_automata::dfa::remapper::onepass::&lt;impl regex_automata::dfa::remapper::Remappable for regex_automata::dfa::onepass::DFA&gt;::remap (4 samples, 0.08%)</title><rect x="97.5191%" y="693" width="0.0848%" height="15" fill="rgb(220,104,28)" fg:x="4599" fg:w="4"/><text x="97.7691%" y="703.50"></text></g><g><title>regex_automata::dfa::onepass::DFA::remap (4 samples, 0.08%)</title><rect x="97.5191%" y="677" width="0.0848%" height="15" fill="rgb(220,12,22)" fg:x="4599" fg:w="4"/><text x="97.7691%" y="687.50"></text></g><g><title>regex_automata::dfa::onepass::Transition::set_state_id (1 samples, 0.02%)</title><rect x="97.5827%" y="661" width="0.0212%" height="15" fill="rgb(215,47,0)" fg:x="4602" fg:w="1"/><text x="97.8327%" y="671.50"></text></g><g><title>regex_automata::dfa::onepass::Transition::new (1 samples, 0.02%)</title><rect x="97.5827%" y="645" width="0.0212%" height="15" fill="rgb(253,131,4)" fg:x="4602" fg:w="1"/><text x="97.8327%" y="655.50"></text></g><g><title>s4lib::data::datetime::bytes_to_regex_to_datetime (62 samples, 1.31%)</title><rect x="96.3104%" y="1077" width="1.3147%" height="15" fill="rgb(252,84,36)" fg:x="4542" fg:w="62"/><text x="96.5604%" y="1087.50"></text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref (62 samples, 1.31%)</title><rect x="96.3104%" y="1061" width="1.3147%" height="15" fill="rgb(217,15,43)" fg:x="4542" fg:w="62"/><text x="96.5604%" y="1071.50"></text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref::__stability (62 samples, 1.31%)</title><rect x="96.3104%" y="1045" width="1.3147%" height="15" fill="rgb(239,165,48)" fg:x="4542" fg:w="62"/><text x="96.5604%" y="1055.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (62 samples, 1.31%)</title><rect x="96.3104%" y="1029" width="1.3147%" height="15" fill="rgb(235,175,8)" fg:x="4542" fg:w="62"/><text x="96.5604%" y="1039.50"></text></g><g><title>std::sync::once::Once::call_once (62 samples, 1.31%)</title><rect x="96.3104%" y="1013" width="1.3147%" height="15" fill="rgb(247,17,47)" fg:x="4542" fg:w="62"/><text x="96.5604%" y="1023.50"></text></g><g><title>std::sys_common::once::futex::Once::call (62 samples, 1.31%)</title><rect x="96.3104%" y="997" width="1.3147%" height="15" fill="rgb(246,168,49)" fg:x="4542" fg:w="62"/><text x="96.5604%" y="1007.50"></text></g><g><title>std::sync::once::Once::call_once::{{closure}} (62 samples, 1.31%)</title><rect x="96.3104%" y="981" width="1.3147%" height="15" fill="rgb(237,63,35)" fg:x="4542" fg:w="62"/><text x="96.5604%" y="991.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}} (62 samples, 1.31%)</title><rect x="96.3104%" y="965" width="1.3147%" height="15" fill="rgb(238,7,51)" fg:x="4542" fg:w="62"/><text x="96.5604%" y="975.50"></text></g><g><title>core::ops::function::FnOnce::call_once (62 samples, 1.31%)</title><rect x="96.3104%" y="949" width="1.3147%" height="15" fill="rgb(210,80,10)" fg:x="4542" fg:w="62"/><text x="96.5604%" y="959.50"></text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref::__static_ref_initialize (62 samples, 1.31%)</title><rect x="96.3104%" y="933" width="1.3147%" height="15" fill="rgb(205,24,29)" fg:x="4542" fg:w="62"/><text x="96.5604%" y="943.50"></text></g><g><title>regex::regex::bytes::Regex::new (62 samples, 1.31%)</title><rect x="96.3104%" y="917" width="1.3147%" height="15" fill="rgb(246,224,25)" fg:x="4542" fg:w="62"/><text x="96.5604%" y="927.50"></text></g><g><title>regex::builders::bytes::RegexBuilder::build (62 samples, 1.31%)</title><rect x="96.3104%" y="901" width="1.3147%" height="15" fill="rgb(236,76,51)" fg:x="4542" fg:w="62"/><text x="96.5604%" y="911.50"></text></g><g><title>regex::builders::Builder::build_one_bytes (62 samples, 1.31%)</title><rect x="96.3104%" y="885" width="1.3147%" height="15" fill="rgb(233,102,7)" fg:x="4542" fg:w="62"/><text x="96.5604%" y="895.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (62 samples, 1.31%)</title><rect x="96.3104%" y="869" width="1.3147%" height="15" fill="rgb(212,33,22)" fg:x="4542" fg:w="62"/><text x="96.5604%" y="879.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many (62 samples, 1.31%)</title><rect x="96.3104%" y="853" width="1.3147%" height="15" fill="rgb(236,25,32)" fg:x="4542" fg:w="62"/><text x="96.5604%" y="863.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (62 samples, 1.31%)</title><rect x="96.3104%" y="837" width="1.3147%" height="15" fill="rgb(250,142,30)" fg:x="4542" fg:w="62"/><text x="96.5604%" y="847.50"></text></g><g><title>regex_automata::meta::strategy::new (62 samples, 1.31%)</title><rect x="96.3104%" y="821" width="1.3147%" height="15" fill="rgb(243,171,22)" fg:x="4542" fg:w="62"/><text x="96.5604%" y="831.50"></text></g><g><title>regex_automata::meta::strategy::Core::new (61 samples, 1.29%)</title><rect x="96.3316%" y="805" width="1.2935%" height="15" fill="rgb(222,69,27)" fg:x="4543" fg:w="61"/><text x="96.5816%" y="815.50"></text></g><g><title>regex_automata::meta::wrappers::OnePass::new (5 samples, 0.11%)</title><rect x="97.5191%" y="789" width="0.1060%" height="15" fill="rgb(235,224,47)" fg:x="4599" fg:w="5"/><text x="97.7691%" y="799.50"></text></g><g><title>regex_automata::meta::wrappers::OnePassEngine::new (5 samples, 0.11%)</title><rect x="97.5191%" y="773" width="0.1060%" height="15" fill="rgb(247,185,25)" fg:x="4599" fg:w="5"/><text x="97.7691%" y="783.50"></text></g><g><title>regex_automata::dfa::onepass::Builder::build_from_nfa (5 samples, 0.11%)</title><rect x="97.5191%" y="757" width="0.1060%" height="15" fill="rgb(209,62,19)" fg:x="4599" fg:w="5"/><text x="97.7691%" y="767.50"></text></g><g><title>regex_automata::dfa::onepass::InternalBuilder::build (5 samples, 0.11%)</title><rect x="97.5191%" y="741" width="0.1060%" height="15" fill="rgb(206,107,24)" fg:x="4599" fg:w="5"/><text x="97.7691%" y="751.50"></text></g><g><title>regex_automata::dfa::onepass::InternalBuilder::add_start_state (1 samples, 0.02%)</title><rect x="97.6039%" y="725" width="0.0212%" height="15" fill="rgb(245,13,2)" fg:x="4603" fg:w="1"/><text x="97.8539%" y="735.50"></text></g><g><title>regex_automata::dfa::onepass::InternalBuilder::add_dfa_state_for_nfa_state (1 samples, 0.02%)</title><rect x="97.6039%" y="709" width="0.0212%" height="15" fill="rgb(226,222,5)" fg:x="4603" fg:w="1"/><text x="97.8539%" y="719.50"></text></g><g><title>regex_automata::dfa::onepass::InternalBuilder::add_empty_state (1 samples, 0.02%)</title><rect x="97.6039%" y="693" width="0.0212%" height="15" fill="rgb(249,155,54)" fg:x="4603" fg:w="1"/><text x="97.8539%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.02%)</title><rect x="97.6039%" y="677" width="0.0212%" height="15" fill="rgb(205,186,49)" fg:x="4603" fg:w="1"/><text x="97.8539%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="97.6039%" y="661" width="0.0212%" height="15" fill="rgb(232,211,42)" fg:x="4603" fg:w="1"/><text x="97.8539%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.02%)</title><rect x="97.6039%" y="645" width="0.0212%" height="15" fill="rgb(214,146,48)" fg:x="4603" fg:w="1"/><text x="97.8539%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="97.6039%" y="629" width="0.0212%" height="15" fill="rgb(212,159,3)" fg:x="4603" fg:w="1"/><text x="97.8539%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="97.6039%" y="613" width="0.0212%" height="15" fill="rgb(231,142,39)" fg:x="4603" fg:w="1"/><text x="97.8539%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="97.6039%" y="597" width="0.0212%" height="15" fill="rgb(249,2,22)" fg:x="4603" fg:w="1"/><text x="97.8539%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="97.6039%" y="581" width="0.0212%" height="15" fill="rgb(254,53,35)" fg:x="4603" fg:w="1"/><text x="97.8539%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="97.6039%" y="565" width="0.0212%" height="15" fill="rgb(237,133,22)" fg:x="4603" fg:w="1"/><text x="97.8539%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="97.6039%" y="549" width="0.0212%" height="15" fill="rgb(237,156,49)" fg:x="4603" fg:w="1"/><text x="97.8539%" y="559.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="97.6039%" y="533" width="0.0212%" height="15" fill="rgb(214,150,36)" fg:x="4603" fg:w="1"/><text x="97.8539%" y="543.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="97.6039%" y="517" width="0.0212%" height="15" fill="rgb(254,47,34)" fg:x="4603" fg:w="1"/><text x="97.8539%" y="527.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.02%)</title><rect x="97.6039%" y="501" width="0.0212%" height="15" fill="rgb(254,73,4)" fg:x="4603" fg:w="1"/><text x="97.8539%" y="511.50"></text></g><g><title>_int_realloc (1 samples, 0.02%)</title><rect x="97.6039%" y="485" width="0.0212%" height="15" fill="rgb(231,75,41)" fg:x="4603" fg:w="1"/><text x="97.8539%" y="495.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="97.6039%" y="469" width="0.0212%" height="15" fill="rgb(222,219,51)" fg:x="4603" fg:w="1"/><text x="97.8539%" y="479.50"></text></g><g><title>regex_syntax::hir::literal::PreferenceTrie::root (1 samples, 0.02%)</title><rect x="97.6251%" y="517" width="0.0212%" height="15" fill="rgb(249,191,47)" fg:x="4604" fg:w="1"/><text x="97.8751%" y="527.50"></text></g><g><title>regex_syntax::hir::literal::PreferenceTrie::create_state (1 samples, 0.02%)</title><rect x="97.6463%" y="517" width="0.0212%" height="15" fill="rgb(224,202,5)" fg:x="4605" fg:w="1"/><text x="97.8963%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="97.6463%" y="501" width="0.0212%" height="15" fill="rgb(241,229,15)" fg:x="4605" fg:w="1"/><text x="97.8963%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="97.6463%" y="485" width="0.0212%" height="15" fill="rgb(254,103,39)" fg:x="4605" fg:w="1"/><text x="97.8963%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="97.6463%" y="469" width="0.0212%" height="15" fill="rgb(254,53,35)" fg:x="4605" fg:w="1"/><text x="97.8963%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="97.6463%" y="453" width="0.0212%" height="15" fill="rgb(237,133,22)" fg:x="4605" fg:w="1"/><text x="97.8963%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="97.6463%" y="437" width="0.0212%" height="15" fill="rgb(237,156,49)" fg:x="4605" fg:w="1"/><text x="97.8963%" y="447.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="97.6463%" y="421" width="0.0212%" height="15" fill="rgb(214,150,36)" fg:x="4605" fg:w="1"/><text x="97.8963%" y="431.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="97.6463%" y="405" width="0.0212%" height="15" fill="rgb(254,47,34)" fg:x="4605" fg:w="1"/><text x="97.8963%" y="415.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.02%)</title><rect x="97.6463%" y="389" width="0.0212%" height="15" fill="rgb(254,73,4)" fg:x="4605" fg:w="1"/><text x="97.8963%" y="399.50"></text></g><g><title>_int_realloc (1 samples, 0.02%)</title><rect x="97.6463%" y="373" width="0.0212%" height="15" fill="rgb(231,75,41)" fg:x="4605" fg:w="1"/><text x="97.8963%" y="383.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="97.6463%" y="357" width="0.0212%" height="15" fill="rgb(222,219,51)" fg:x="4605" fg:w="1"/><text x="97.8963%" y="367.50"></text></g><g><title>malloc_consolidate (1 samples, 0.02%)</title><rect x="97.6463%" y="341" width="0.0212%" height="15" fill="rgb(228,194,39)" fg:x="4605" fg:w="1"/><text x="97.8963%" y="351.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="97.6675%" y="421" width="0.0212%" height="15" fill="rgb(206,112,53)" fg:x="4606" fg:w="1"/><text x="97.9175%" y="431.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="97.6675%" y="405" width="0.0212%" height="15" fill="rgb(222,219,51)" fg:x="4606" fg:w="1"/><text x="97.9175%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (2 samples, 0.04%)</title><rect x="97.6675%" y="517" width="0.0424%" height="15" fill="rgb(222,129,7)" fg:x="4606" fg:w="2"/><text x="97.9175%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.04%)</title><rect x="97.6675%" y="501" width="0.0424%" height="15" fill="rgb(212,159,3)" fg:x="4606" fg:w="2"/><text x="97.9175%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.04%)</title><rect x="97.6675%" y="485" width="0.0424%" height="15" fill="rgb(231,142,39)" fg:x="4606" fg:w="2"/><text x="97.9175%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.04%)</title><rect x="97.6675%" y="469" width="0.0424%" height="15" fill="rgb(249,2,22)" fg:x="4606" fg:w="2"/><text x="97.9175%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.04%)</title><rect x="97.6675%" y="453" width="0.0424%" height="15" fill="rgb(254,53,35)" fg:x="4606" fg:w="2"/><text x="97.9175%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.04%)</title><rect x="97.6675%" y="437" width="0.0424%" height="15" fill="rgb(237,133,22)" fg:x="4606" fg:w="2"/><text x="97.9175%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="97.6887%" y="421" width="0.0212%" height="15" fill="rgb(237,156,49)" fg:x="4607" fg:w="1"/><text x="97.9387%" y="431.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="97.6887%" y="405" width="0.0212%" height="15" fill="rgb(214,150,36)" fg:x="4607" fg:w="1"/><text x="97.9387%" y="415.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="97.6887%" y="389" width="0.0212%" height="15" fill="rgb(254,47,34)" fg:x="4607" fg:w="1"/><text x="97.9387%" y="399.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.02%)</title><rect x="97.6887%" y="373" width="0.0212%" height="15" fill="rgb(254,73,4)" fg:x="4607" fg:w="1"/><text x="97.9387%" y="383.50"></text></g><g><title>_int_realloc (1 samples, 0.02%)</title><rect x="97.6887%" y="357" width="0.0212%" height="15" fill="rgb(231,75,41)" fg:x="4607" fg:w="1"/><text x="97.9387%" y="367.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="97.6887%" y="341" width="0.0212%" height="15" fill="rgb(222,219,51)" fg:x="4607" fg:w="1"/><text x="97.9387%" y="351.50"></text></g><g><title>regex_syntax::hir::literal::PreferenceTrie::minimize::{{closure}} (7 samples, 0.15%)</title><rect x="97.6251%" y="549" width="0.1484%" height="15" fill="rgb(234,110,33)" fg:x="4604" fg:w="7"/><text x="97.8751%" y="559.50"></text></g><g><title>regex_syntax::hir::literal::PreferenceTrie::insert (7 samples, 0.15%)</title><rect x="97.6251%" y="533" width="0.1484%" height="15" fill="rgb(208,38,45)" fg:x="4604" fg:w="7"/><text x="97.8751%" y="543.50"></text></g><g><title>regex_syntax::hir::literal::Seq::optimize_for_prefix_by_preference (8 samples, 0.17%)</title><rect x="97.6251%" y="629" width="0.1696%" height="15" fill="rgb(206,179,34)" fg:x="4604" fg:w="8"/><text x="97.8751%" y="639.50"></text></g><g><title>regex_syntax::hir::literal::Seq::optimize_by_preference (8 samples, 0.17%)</title><rect x="97.6251%" y="613" width="0.1696%" height="15" fill="rgb(208,121,1)" fg:x="4604" fg:w="8"/><text x="97.8751%" y="623.50"></text></g><g><title>regex_syntax::hir::literal::PreferenceTrie::minimize (8 samples, 0.17%)</title><rect x="97.6251%" y="597" width="0.1696%" height="15" fill="rgb(240,28,15)" fg:x="4604" fg:w="8"/><text x="97.8751%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut (8 samples, 0.17%)</title><rect x="97.6251%" y="581" width="0.1696%" height="15" fill="rgb(208,159,28)" fg:x="4604" fg:w="8"/><text x="97.8751%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut::process_loop (8 samples, 0.17%)</title><rect x="97.6251%" y="565" width="0.1696%" height="15" fill="rgb(227,228,3)" fg:x="4604" fg:w="8"/><text x="97.8751%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::hir::literal::Literal&gt; (1 samples, 0.02%)</title><rect x="97.7735%" y="549" width="0.0212%" height="15" fill="rgb(229,58,2)" fg:x="4611" fg:w="1"/><text x="98.0235%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="97.7735%" y="533" width="0.0212%" height="15" fill="rgb(248,33,49)" fg:x="4611" fg:w="1"/><text x="98.0235%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="97.7735%" y="517" width="0.0212%" height="15" fill="rgb(208,40,33)" fg:x="4611" fg:w="1"/><text x="98.0235%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="97.7735%" y="501" width="0.0212%" height="15" fill="rgb(213,128,22)" fg:x="4611" fg:w="1"/><text x="98.0235%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="97.7735%" y="485" width="0.0212%" height="15" fill="rgb(238,77,31)" fg:x="4611" fg:w="1"/><text x="98.0235%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="97.7735%" y="469" width="0.0212%" height="15" fill="rgb(227,15,28)" fg:x="4611" fg:w="1"/><text x="98.0235%" y="479.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="97.7735%" y="453" width="0.0212%" height="15" fill="rgb(247,8,17)" fg:x="4611" fg:w="1"/><text x="98.0235%" y="463.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="97.7735%" y="437" width="0.0212%" height="15" fill="rgb(221,113,48)" fg:x="4611" fg:w="1"/><text x="98.0235%" y="447.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::extract_concat (1 samples, 0.02%)</title><rect x="97.7947%" y="581" width="0.0212%" height="15" fill="rgb(215,217,42)" fg:x="4612" fg:w="1"/><text x="98.0447%" y="591.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::cross (1 samples, 0.02%)</title><rect x="97.7947%" y="565" width="0.0212%" height="15" fill="rgb(248,169,31)" fg:x="4612" fg:w="1"/><text x="98.0447%" y="575.50"></text></g><g><title>regex_syntax::hir::literal::Seq::cross_forward (1 samples, 0.02%)</title><rect x="97.7947%" y="549" width="0.0212%" height="15" fill="rgb(228,175,28)" fg:x="4612" fg:w="1"/><text x="98.0447%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="97.7947%" y="533" width="0.0212%" height="15" fill="rgb(241,229,15)" fg:x="4612" fg:w="1"/><text x="98.0447%" y="543.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="97.7947%" y="517" width="0.0212%" height="15" fill="rgb(209,143,44)" fg:x="4612" fg:w="1"/><text x="98.0447%" y="527.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::extract (2 samples, 0.04%)</title><rect x="97.7947%" y="597" width="0.0424%" height="15" fill="rgb(242,28,8)" fg:x="4612" fg:w="2"/><text x="98.0447%" y="607.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::extract_alternation (1 samples, 0.02%)</title><rect x="97.8159%" y="581" width="0.0212%" height="15" fill="rgb(236,31,24)" fg:x="4613" fg:w="1"/><text x="98.0659%" y="591.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::union (1 samples, 0.02%)</title><rect x="97.8159%" y="565" width="0.0212%" height="15" fill="rgb(253,75,3)" fg:x="4613" fg:w="1"/><text x="98.0659%" y="575.50"></text></g><g><title>regex_syntax::hir::literal::Seq::union (1 samples, 0.02%)</title><rect x="97.8159%" y="549" width="0.0212%" height="15" fill="rgb(226,117,51)" fg:x="4613" fg:w="1"/><text x="98.0659%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.02%)</title><rect x="97.8159%" y="533" width="0.0212%" height="15" fill="rgb(205,186,49)" fg:x="4613" fg:w="1"/><text x="98.0659%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="97.8159%" y="517" width="0.0212%" height="15" fill="rgb(232,211,42)" fg:x="4613" fg:w="1"/><text x="98.0659%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.02%)</title><rect x="97.8159%" y="501" width="0.0212%" height="15" fill="rgb(214,146,48)" fg:x="4613" fg:w="1"/><text x="98.0659%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="97.8159%" y="485" width="0.0212%" height="15" fill="rgb(212,159,3)" fg:x="4613" fg:w="1"/><text x="98.0659%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="97.8159%" y="469" width="0.0212%" height="15" fill="rgb(231,142,39)" fg:x="4613" fg:w="1"/><text x="98.0659%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="97.8159%" y="453" width="0.0212%" height="15" fill="rgb(249,2,22)" fg:x="4613" fg:w="1"/><text x="98.0659%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="97.8159%" y="437" width="0.0212%" height="15" fill="rgb(254,53,35)" fg:x="4613" fg:w="1"/><text x="98.0659%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="97.8159%" y="421" width="0.0212%" height="15" fill="rgb(237,133,22)" fg:x="4613" fg:w="1"/><text x="98.0659%" y="431.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="97.8159%" y="405" width="0.0212%" height="15" fill="rgb(206,112,53)" fg:x="4613" fg:w="1"/><text x="98.0659%" y="415.50"></text></g><g><title>regex_automata::util::prefilter::prefixes (12 samples, 0.25%)</title><rect x="97.6251%" y="645" width="0.2545%" height="15" fill="rgb(209,67,19)" fg:x="4604" fg:w="12"/><text x="97.8751%" y="655.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::extract (4 samples, 0.08%)</title><rect x="97.7947%" y="629" width="0.0848%" height="15" fill="rgb(242,28,8)" fg:x="4612" fg:w="4"/><text x="98.0447%" y="639.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::extract_concat (4 samples, 0.08%)</title><rect x="97.7947%" y="613" width="0.0848%" height="15" fill="rgb(215,217,42)" fg:x="4612" fg:w="4"/><text x="98.0447%" y="623.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::cross (2 samples, 0.04%)</title><rect x="97.8372%" y="597" width="0.0424%" height="15" fill="rgb(248,169,31)" fg:x="4614" fg:w="2"/><text x="98.0872%" y="607.50"></text></g><g><title>regex_syntax::hir::literal::Seq::cross_forward (2 samples, 0.04%)</title><rect x="97.8372%" y="581" width="0.0424%" height="15" fill="rgb(228,175,28)" fg:x="4614" fg:w="2"/><text x="98.0872%" y="591.50"></text></g><g><title>regex_syntax::hir::literal::Literal::extend (2 samples, 0.04%)</title><rect x="97.8372%" y="565" width="0.0424%" height="15" fill="rgb(220,123,45)" fg:x="4614" fg:w="2"/><text x="98.0872%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.04%)</title><rect x="97.8372%" y="549" width="0.0424%" height="15" fill="rgb(243,52,34)" fg:x="4614" fg:w="2"/><text x="98.0872%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.04%)</title><rect x="97.8372%" y="533" width="0.0424%" height="15" fill="rgb(224,207,30)" fg:x="4614" fg:w="2"/><text x="98.0872%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.04%)</title><rect x="97.8372%" y="517" width="0.0424%" height="15" fill="rgb(251,49,54)" fg:x="4614" fg:w="2"/><text x="98.0872%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.04%)</title><rect x="97.8372%" y="501" width="0.0424%" height="15" fill="rgb(214,20,35)" fg:x="4614" fg:w="2"/><text x="98.0872%" y="511.50"></text></g><g><title>__memmove_avx512_unaligned_erms (2 samples, 0.04%)</title><rect x="97.8372%" y="485" width="0.0424%" height="15" fill="rgb(217,126,36)" fg:x="4614" fg:w="2"/><text x="98.0872%" y="495.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::extract_concat (1 samples, 0.02%)</title><rect x="97.8796%" y="565" width="0.0212%" height="15" fill="rgb(215,217,42)" fg:x="4616" fg:w="1"/><text x="98.1296%" y="575.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::extract (1 samples, 0.02%)</title><rect x="97.8796%" y="549" width="0.0212%" height="15" fill="rgb(242,28,8)" fg:x="4616" fg:w="1"/><text x="98.1296%" y="559.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::extract_repetition (1 samples, 0.02%)</title><rect x="97.8796%" y="533" width="0.0212%" height="15" fill="rgb(207,26,40)" fg:x="4616" fg:w="1"/><text x="98.1296%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::hir::literal::Seq&gt; (1 samples, 0.02%)</title><rect x="97.8796%" y="517" width="0.0212%" height="15" fill="rgb(205,156,42)" fg:x="4616" fg:w="1"/><text x="98.1296%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::Vec&lt;regex_syntax::hir::literal::Literal&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="97.8796%" y="501" width="0.0212%" height="15" fill="rgb(206,64,7)" fg:x="4616" fg:w="1"/><text x="98.1296%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_syntax::hir::literal::Literal&gt;&gt; (1 samples, 0.02%)</title><rect x="97.8796%" y="485" width="0.0212%" height="15" fill="rgb(252,181,15)" fg:x="4616" fg:w="1"/><text x="98.1296%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;regex_syntax::hir::literal::Literal&gt;&gt; (1 samples, 0.02%)</title><rect x="97.8796%" y="469" width="0.0212%" height="15" fill="rgb(208,149,54)" fg:x="4616" fg:w="1"/><text x="98.1296%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="97.8796%" y="453" width="0.0212%" height="15" fill="rgb(213,128,22)" fg:x="4616" fg:w="1"/><text x="98.1296%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="97.8796%" y="437" width="0.0212%" height="15" fill="rgb(238,77,31)" fg:x="4616" fg:w="1"/><text x="98.1296%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="97.8796%" y="421" width="0.0212%" height="15" fill="rgb(227,15,28)" fg:x="4616" fg:w="1"/><text x="98.1296%" y="431.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="97.8796%" y="405" width="0.0212%" height="15" fill="rgb(247,8,17)" fg:x="4616" fg:w="1"/><text x="98.1296%" y="415.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="97.8796%" y="389" width="0.0212%" height="15" fill="rgb(221,113,48)" fg:x="4616" fg:w="1"/><text x="98.1296%" y="399.50"></text></g><g><title>regex_automata::meta::strategy::ReverseSuffix::new (2 samples, 0.04%)</title><rect x="97.8796%" y="645" width="0.0424%" height="15" fill="rgb(210,64,50)" fg:x="4616" fg:w="2"/><text x="98.1296%" y="655.50"></text></g><g><title>regex_automata::util::prefilter::suffixes (2 samples, 0.04%)</title><rect x="97.8796%" y="629" width="0.0424%" height="15" fill="rgb(229,215,53)" fg:x="4616" fg:w="2"/><text x="98.1296%" y="639.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::extract (2 samples, 0.04%)</title><rect x="97.8796%" y="613" width="0.0424%" height="15" fill="rgb(242,28,8)" fg:x="4616" fg:w="2"/><text x="98.1296%" y="623.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::extract_concat (2 samples, 0.04%)</title><rect x="97.8796%" y="597" width="0.0424%" height="15" fill="rgb(215,217,42)" fg:x="4616" fg:w="2"/><text x="98.1296%" y="607.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::extract (2 samples, 0.04%)</title><rect x="97.8796%" y="581" width="0.0424%" height="15" fill="rgb(242,28,8)" fg:x="4616" fg:w="2"/><text x="98.1296%" y="591.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::extract_alternation (1 samples, 0.02%)</title><rect x="97.9008%" y="565" width="0.0212%" height="15" fill="rgb(236,31,24)" fg:x="4617" fg:w="1"/><text x="98.1508%" y="575.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::union (1 samples, 0.02%)</title><rect x="97.9008%" y="549" width="0.0212%" height="15" fill="rgb(253,75,3)" fg:x="4617" fg:w="1"/><text x="98.1508%" y="559.50"></text></g><g><title>regex_syntax::hir::literal::Seq::union (1 samples, 0.02%)</title><rect x="97.9008%" y="533" width="0.0212%" height="15" fill="rgb(226,117,51)" fg:x="4617" fg:w="1"/><text x="98.1508%" y="543.50"></text></g><g><title>regex_syntax::hir::literal::Seq::dedup (1 samples, 0.02%)</title><rect x="97.9008%" y="517" width="0.0212%" height="15" fill="rgb(244,184,3)" fg:x="4617" fg:w="1"/><text x="98.1508%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::dedup_by (1 samples, 0.02%)</title><rect x="97.9008%" y="501" width="0.0212%" height="15" fill="rgb(212,107,25)" fg:x="4617" fg:w="1"/><text x="98.1508%" y="511.50"></text></g><g><title>regex_syntax::hir::literal::Seq::dedup::{{closure}} (1 samples, 0.02%)</title><rect x="97.9008%" y="485" width="0.0212%" height="15" fill="rgb(224,159,7)" fg:x="4617" fg:w="1"/><text x="98.1508%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (1 samples, 0.02%)</title><rect x="97.9008%" y="469" width="0.0212%" height="15" fill="rgb(220,44,45)" fg:x="4617" fg:w="1"/><text x="98.1508%" y="479.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::ne (1 samples, 0.02%)</title><rect x="97.9008%" y="453" width="0.0212%" height="15" fill="rgb(241,62,31)" fg:x="4617" fg:w="1"/><text x="98.1508%" y="463.50"></text></g><g><title>core::slice::cmp::SlicePartialEq::not_equal (1 samples, 0.02%)</title><rect x="97.9008%" y="437" width="0.0212%" height="15" fill="rgb(226,12,20)" fg:x="4617" fg:w="1"/><text x="98.1508%" y="447.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.02%)</title><rect x="97.9008%" y="421" width="0.0212%" height="15" fill="rgb(221,225,42)" fg:x="4617" fg:w="1"/><text x="98.1508%" y="431.50"></text></g><g><title>__memcmp_evex_movbe (1 samples, 0.02%)</title><rect x="97.9008%" y="405" width="0.0212%" height="15" fill="rgb(253,103,40)" fg:x="4617" fg:w="1"/><text x="98.1508%" y="415.50"></text></g><g><title>regex_syntax::hir::Hir::concat (1 samples, 0.02%)</title><rect x="97.9220%" y="597" width="0.0212%" height="15" fill="rgb(228,76,42)" fg:x="4618" fg:w="1"/><text x="98.1720%" y="607.50"></text></g><g><title>regex_syntax::hir::Hir::into_parts (1 samples, 0.02%)</title><rect x="97.9220%" y="581" width="0.0212%" height="15" fill="rgb(217,98,50)" fg:x="4618" fg:w="1"/><text x="98.1720%" y="591.50"></text></g><g><title>core::mem::replace (1 samples, 0.02%)</title><rect x="97.9220%" y="565" width="0.0212%" height="15" fill="rgb(240,40,18)" fg:x="4618" fg:w="1"/><text x="98.1720%" y="575.50"></text></g><g><title>core::ptr::read (1 samples, 0.02%)</title><rect x="97.9220%" y="549" width="0.0212%" height="15" fill="rgb(222,157,29)" fg:x="4618" fg:w="1"/><text x="98.1720%" y="559.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (1 samples, 0.02%)</title><rect x="97.9220%" y="533" width="0.0212%" height="15" fill="rgb(234,151,54)" fg:x="4618" fg:w="1"/><text x="98.1720%" y="543.50"></text></g><g><title>regex_automata::meta::strategy::ReverseInner::new (2 samples, 0.04%)</title><rect x="97.9220%" y="645" width="0.0424%" height="15" fill="rgb(225,146,32)" fg:x="4618" fg:w="2"/><text x="98.1720%" y="655.50"></text></g><g><title>regex_automata::meta::reverse_inner::extract (2 samples, 0.04%)</title><rect x="97.9220%" y="629" width="0.0424%" height="15" fill="rgb(209,78,45)" fg:x="4618" fg:w="2"/><text x="98.1720%" y="639.50"></text></g><g><title>regex_automata::meta::reverse_inner::top_concat (2 samples, 0.04%)</title><rect x="97.9220%" y="613" width="0.0424%" height="15" fill="rgb(211,177,54)" fg:x="4618" fg:w="2"/><text x="98.1720%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.02%)</title><rect x="97.9432%" y="597" width="0.0212%" height="15" fill="rgb(222,213,17)" fg:x="4619" fg:w="1"/><text x="98.1932%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="97.9432%" y="581" width="0.0212%" height="15" fill="rgb(247,137,3)" fg:x="4619" fg:w="1"/><text x="98.1932%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="97.9432%" y="565" width="0.0212%" height="15" fill="rgb(227,158,43)" fg:x="4619" fg:w="1"/><text x="98.1932%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="97.9432%" y="549" width="0.0212%" height="15" fill="rgb(232,14,28)" fg:x="4619" fg:w="1"/><text x="98.1932%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="97.9432%" y="533" width="0.0212%" height="15" fill="rgb(232,211,42)" fg:x="4619" fg:w="1"/><text x="98.1932%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.02%)</title><rect x="97.9432%" y="517" width="0.0212%" height="15" fill="rgb(214,146,48)" fg:x="4619" fg:w="1"/><text x="98.1932%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.02%)</title><rect x="97.9432%" y="501" width="0.0212%" height="15" fill="rgb(245,181,4)" fg:x="4619" fg:w="1"/><text x="98.1932%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="97.9432%" y="485" width="0.0212%" height="15" fill="rgb(242,69,50)" fg:x="4619" fg:w="1"/><text x="98.1932%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.02%)</title><rect x="97.9432%" y="469" width="0.0212%" height="15" fill="rgb(214,12,39)" fg:x="4619" fg:w="1"/><text x="98.1932%" y="479.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.02%)</title><rect x="97.9432%" y="453" width="0.0212%" height="15" fill="rgb(253,112,1)" fg:x="4619" fg:w="1"/><text x="98.1932%" y="463.50"></text></g><g><title>regex_automata::meta::reverse_inner::top_concat::{{closure}} (1 samples, 0.02%)</title><rect x="97.9432%" y="437" width="0.0212%" height="15" fill="rgb(215,49,37)" fg:x="4619" fg:w="1"/><text x="98.1932%" y="447.50"></text></g><g><title>regex_automata::meta::reverse_inner::flatten (1 samples, 0.02%)</title><rect x="97.9432%" y="421" width="0.0212%" height="15" fill="rgb(250,32,35)" fg:x="4619" fg:w="1"/><text x="98.1932%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.02%)</title><rect x="97.9432%" y="405" width="0.0212%" height="15" fill="rgb(222,213,17)" fg:x="4619" fg:w="1"/><text x="98.1932%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="97.9432%" y="389" width="0.0212%" height="15" fill="rgb(247,137,3)" fg:x="4619" fg:w="1"/><text x="98.1932%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="97.9432%" y="373" width="0.0212%" height="15" fill="rgb(227,158,43)" fg:x="4619" fg:w="1"/><text x="98.1932%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="97.9432%" y="357" width="0.0212%" height="15" fill="rgb(232,14,28)" fg:x="4619" fg:w="1"/><text x="98.1932%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="97.9432%" y="341" width="0.0212%" height="15" fill="rgb(232,211,42)" fg:x="4619" fg:w="1"/><text x="98.1932%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.02%)</title><rect x="97.9432%" y="325" width="0.0212%" height="15" fill="rgb(214,146,48)" fg:x="4619" fg:w="1"/><text x="98.1932%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.02%)</title><rect x="97.9432%" y="309" width="0.0212%" height="15" fill="rgb(245,181,4)" fg:x="4619" fg:w="1"/><text x="98.1932%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="97.9432%" y="293" width="0.0212%" height="15" fill="rgb(242,69,50)" fg:x="4619" fg:w="1"/><text x="98.1932%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.02%)</title><rect x="97.9432%" y="277" width="0.0212%" height="15" fill="rgb(214,12,39)" fg:x="4619" fg:w="1"/><text x="98.1932%" y="287.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.02%)</title><rect x="97.9432%" y="261" width="0.0212%" height="15" fill="rgb(253,112,1)" fg:x="4619" fg:w="1"/><text x="98.1932%" y="271.50"></text></g><g><title>regex_automata::meta::reverse_inner::flatten::{{closure}} (1 samples, 0.02%)</title><rect x="97.9432%" y="245" width="0.0212%" height="15" fill="rgb(239,98,19)" fg:x="4619" fg:w="1"/><text x="98.1932%" y="255.50"></text></g><g><title>regex_automata::meta::reverse_inner::flatten (1 samples, 0.02%)</title><rect x="97.9432%" y="229" width="0.0212%" height="15" fill="rgb(250,32,35)" fg:x="4619" fg:w="1"/><text x="98.1932%" y="239.50"></text></g><g><title>regex_syntax::hir::Hir::literal (1 samples, 0.02%)</title><rect x="97.9432%" y="213" width="0.0212%" height="15" fill="rgb(248,43,17)" fg:x="4619" fg:w="1"/><text x="98.1932%" y="223.50"></text></g><g><title>regex_syntax::hir::Properties::literal (1 samples, 0.02%)</title><rect x="97.9432%" y="197" width="0.0212%" height="15" fill="rgb(224,191,39)" fg:x="4619" fg:w="1"/><text x="98.1932%" y="207.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="97.9432%" y="181" width="0.0212%" height="15" fill="rgb(209,114,30)" fg:x="4619" fg:w="1"/><text x="98.1932%" y="191.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.02%)</title><rect x="97.9432%" y="165" width="0.0212%" height="15" fill="rgb(248,129,10)" fg:x="4619" fg:w="1"/><text x="98.1932%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="97.9432%" y="149" width="0.0212%" height="15" fill="rgb(231,114,21)" fg:x="4619" fg:w="1"/><text x="98.1932%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="97.9432%" y="133" width="0.0212%" height="15" fill="rgb(238,209,2)" fg:x="4619" fg:w="1"/><text x="98.1932%" y="143.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="97.9432%" y="117" width="0.0212%" height="15" fill="rgb(253,135,41)" fg:x="4619" fg:w="1"/><text x="98.1932%" y="127.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="97.9432%" y="101" width="0.0212%" height="15" fill="rgb(206,112,53)" fg:x="4619" fg:w="1"/><text x="98.1932%" y="111.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;regex_automata::nfa::thompson::map::Utf8BoundedEntry&gt;&gt; (1 samples, 0.02%)</title><rect x="97.9644%" y="533" width="0.0212%" height="15" fill="rgb(209,15,40)" fg:x="4620" fg:w="1"/><text x="98.2144%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="97.9644%" y="517" width="0.0212%" height="15" fill="rgb(213,128,22)" fg:x="4620" fg:w="1"/><text x="98.2144%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="97.9644%" y="501" width="0.0212%" height="15" fill="rgb(238,77,31)" fg:x="4620" fg:w="1"/><text x="98.2144%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="97.9644%" y="485" width="0.0212%" height="15" fill="rgb(227,15,28)" fg:x="4620" fg:w="1"/><text x="98.2144%" y="495.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="97.9644%" y="469" width="0.0212%" height="15" fill="rgb(247,8,17)" fg:x="4620" fg:w="1"/><text x="98.2144%" y="479.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="97.9644%" y="453" width="0.0212%" height="15" fill="rgb(221,113,48)" fg:x="4620" fg:w="1"/><text x="98.2144%" y="463.50"></text></g><g><title>malloc_consolidate (1 samples, 0.02%)</title><rect x="97.9644%" y="437" width="0.0212%" height="15" fill="rgb(228,194,39)" fg:x="4620" fg:w="1"/><text x="98.2144%" y="447.50"></text></g><g><title>unlink_chunk (1 samples, 0.02%)</title><rect x="97.9644%" y="421" width="0.0212%" height="15" fill="rgb(223,20,30)" fg:x="4620" fg:w="1"/><text x="98.2144%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;regex_automata::nfa::thompson::compiler::Utf8State&gt;&gt; (6 samples, 0.13%)</title><rect x="97.9644%" y="613" width="0.1272%" height="15" fill="rgb(247,24,16)" fg:x="4620" fg:w="6"/><text x="98.2144%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;regex_automata::nfa::thompson::compiler::Utf8State&gt;&gt; (6 samples, 0.13%)</title><rect x="97.9644%" y="597" width="0.1272%" height="15" fill="rgb(239,113,24)" fg:x="4620" fg:w="6"/><text x="98.2144%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::compiler::Utf8State&gt; (6 samples, 0.13%)</title><rect x="97.9644%" y="581" width="0.1272%" height="15" fill="rgb(250,143,15)" fg:x="4620" fg:w="6"/><text x="98.2144%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::map::Utf8BoundedMap&gt; (6 samples, 0.13%)</title><rect x="97.9644%" y="565" width="0.1272%" height="15" fill="rgb(224,100,47)" fg:x="4620" fg:w="6"/><text x="98.2144%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_automata::nfa::thompson::map::Utf8BoundedEntry&gt;&gt; (6 samples, 0.13%)</title><rect x="97.9644%" y="549" width="0.1272%" height="15" fill="rgb(219,69,19)" fg:x="4620" fg:w="6"/><text x="98.2144%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.11%)</title><rect x="97.9856%" y="533" width="0.1060%" height="15" fill="rgb(249,14,2)" fg:x="4621" fg:w="5"/><text x="98.2356%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[regex_automata::nfa::thompson::map::Utf8BoundedEntry]&gt; (5 samples, 0.11%)</title><rect x="97.9856%" y="517" width="0.1060%" height="15" fill="rgb(228,140,11)" fg:x="4621" fg:w="5"/><text x="98.2356%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::map::Utf8BoundedEntry&gt; (5 samples, 0.11%)</title><rect x="97.9856%" y="501" width="0.1060%" height="15" fill="rgb(247,188,9)" fg:x="4621" fg:w="5"/><text x="98.2356%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_automata::nfa::thompson::nfa::Transition&gt;&gt; (5 samples, 0.11%)</title><rect x="97.9856%" y="485" width="0.1060%" height="15" fill="rgb(207,29,6)" fg:x="4621" fg:w="5"/><text x="98.2356%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;regex_automata::nfa::thompson::nfa::Transition&gt;&gt; (5 samples, 0.11%)</title><rect x="97.9856%" y="469" width="0.1060%" height="15" fill="rgb(228,146,49)" fg:x="4621" fg:w="5"/><text x="98.2356%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.11%)</title><rect x="97.9856%" y="453" width="0.1060%" height="15" fill="rgb(213,128,22)" fg:x="4621" fg:w="5"/><text x="98.2356%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (5 samples, 0.11%)</title><rect x="97.9856%" y="437" width="0.1060%" height="15" fill="rgb(253,185,17)" fg:x="4621" fg:w="5"/><text x="98.2356%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;regex_automata::nfa::thompson::builder::State&gt;&gt; (1 samples, 0.02%)</title><rect x="98.0916%" y="549" width="0.0212%" height="15" fill="rgb(253,22,30)" fg:x="4626" fg:w="1"/><text x="98.3416%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="98.0916%" y="533" width="0.0212%" height="15" fill="rgb(213,128,22)" fg:x="4626" fg:w="1"/><text x="98.3416%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="98.0916%" y="517" width="0.0212%" height="15" fill="rgb(238,77,31)" fg:x="4626" fg:w="1"/><text x="98.3416%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="98.0916%" y="501" width="0.0212%" height="15" fill="rgb(227,15,28)" fg:x="4626" fg:w="1"/><text x="98.3416%" y="511.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="98.0916%" y="485" width="0.0212%" height="15" fill="rgb(247,8,17)" fg:x="4626" fg:w="1"/><text x="98.3416%" y="495.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="98.0916%" y="469" width="0.0212%" height="15" fill="rgb(221,113,48)" fg:x="4626" fg:w="1"/><text x="98.3416%" y="479.50"></text></g><g><title>malloc_consolidate (1 samples, 0.02%)</title><rect x="98.0916%" y="453" width="0.0212%" height="15" fill="rgb(228,194,39)" fg:x="4626" fg:w="1"/><text x="98.3416%" y="463.50"></text></g><g><title>__GI___libc_free (6 samples, 0.13%)</title><rect x="98.1128%" y="501" width="0.1272%" height="15" fill="rgb(247,8,17)" fg:x="4627" fg:w="6"/><text x="98.3628%" y="511.50"></text></g><g><title>_int_free (6 samples, 0.13%)</title><rect x="98.1128%" y="485" width="0.1272%" height="15" fill="rgb(221,113,48)" fg:x="4627" fg:w="6"/><text x="98.3628%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::builder::State&gt; (7 samples, 0.15%)</title><rect x="98.1128%" y="517" width="0.1484%" height="15" fill="rgb(207,220,38)" fg:x="4627" fg:w="7"/><text x="98.3628%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_automata::nfa::thompson::builder::State&gt;&gt; (9 samples, 0.19%)</title><rect x="98.0916%" y="565" width="0.1908%" height="15" fill="rgb(209,117,28)" fg:x="4626" fg:w="9"/><text x="98.3416%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.17%)</title><rect x="98.1128%" y="549" width="0.1696%" height="15" fill="rgb(249,14,2)" fg:x="4627" fg:w="8"/><text x="98.3628%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;[regex_automata::nfa::thompson::builder::State]&gt; (8 samples, 0.17%)</title><rect x="98.1128%" y="533" width="0.1696%" height="15" fill="rgb(227,197,38)" fg:x="4627" fg:w="8"/><text x="98.3628%" y="543.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="98.2824%" y="405" width="0.0212%" height="15" fill="rgb(221,113,48)" fg:x="4635" fg:w="1"/><text x="98.5324%" y="415.50"></text></g><g><title>regex_automata::meta::strategy::Core::new (17 samples, 0.36%)</title><rect x="97.9644%" y="645" width="0.3605%" height="15" fill="rgb(222,69,27)" fg:x="4620" fg:w="17"/><text x="98.2144%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::compiler::Compiler&gt; (17 samples, 0.36%)</title><rect x="97.9644%" y="629" width="0.3605%" height="15" fill="rgb(213,189,36)" fg:x="4620" fg:w="17"/><text x="98.2144%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;regex_automata::nfa::thompson::builder::Builder&gt;&gt; (11 samples, 0.23%)</title><rect x="98.0916%" y="613" width="0.2332%" height="15" fill="rgb(234,58,54)" fg:x="4626" fg:w="11"/><text x="98.3416%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;regex_automata::nfa::thompson::builder::Builder&gt;&gt; (11 samples, 0.23%)</title><rect x="98.0916%" y="597" width="0.2332%" height="15" fill="rgb(211,168,54)" fg:x="4626" fg:w="11"/><text x="98.3416%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::builder::Builder&gt; (11 samples, 0.23%)</title><rect x="98.0916%" y="581" width="0.2332%" height="15" fill="rgb(236,9,46)" fg:x="4626" fg:w="11"/><text x="98.3416%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;core::option::Option&lt;alloc::sync::Arc&lt;str&gt;&gt;&gt;&gt;&gt; (2 samples, 0.04%)</title><rect x="98.2824%" y="565" width="0.0424%" height="15" fill="rgb(245,16,54)" fg:x="4635" fg:w="2"/><text x="98.5324%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="98.2824%" y="549" width="0.0424%" height="15" fill="rgb(249,14,2)" fg:x="4635" fg:w="2"/><text x="98.5324%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;core::option::Option&lt;alloc::sync::Arc&lt;str&gt;&gt;&gt;]&gt; (2 samples, 0.04%)</title><rect x="98.2824%" y="533" width="0.0424%" height="15" fill="rgb(241,35,17)" fg:x="4635" fg:w="2"/><text x="98.5324%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;alloc::sync::Arc&lt;str&gt;&gt;&gt;&gt; (2 samples, 0.04%)</title><rect x="98.2824%" y="517" width="0.0424%" height="15" fill="rgb(205,17,28)" fg:x="4635" fg:w="2"/><text x="98.5324%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="98.2824%" y="501" width="0.0424%" height="15" fill="rgb(249,14,2)" fg:x="4635" fg:w="2"/><text x="98.5324%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::option::Option&lt;alloc::sync::Arc&lt;str&gt;&gt;]&gt; (2 samples, 0.04%)</title><rect x="98.2824%" y="485" width="0.0424%" height="15" fill="rgb(244,110,33)" fg:x="4635" fg:w="2"/><text x="98.5324%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;str&gt;&gt;&gt; (2 samples, 0.04%)</title><rect x="98.2824%" y="469" width="0.0424%" height="15" fill="rgb(212,114,8)" fg:x="4635" fg:w="2"/><text x="98.5324%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;str&gt;&gt; (2 samples, 0.04%)</title><rect x="98.2824%" y="453" width="0.0424%" height="15" fill="rgb(246,19,8)" fg:x="4635" fg:w="2"/><text x="98.5324%" y="463.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="98.2824%" y="437" width="0.0424%" height="15" fill="rgb(220,153,15)" fg:x="4635" fg:w="2"/><text x="98.5324%" y="447.50"></text></g><g><title>__GI___libc_free (2 samples, 0.04%)</title><rect x="98.2824%" y="421" width="0.0424%" height="15" fill="rgb(247,8,17)" fg:x="4635" fg:w="2"/><text x="98.5324%" y="431.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="98.3249%" y="645" width="0.0212%" height="15" fill="rgb(221,10,3)" fg:x="4637" fg:w="1"/><text x="98.5749%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="98.3249%" y="629" width="0.0212%" height="15" fill="rgb(209,114,30)" fg:x="4637" fg:w="1"/><text x="98.5749%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.02%)</title><rect x="98.3249%" y="613" width="0.0212%" height="15" fill="rgb(248,129,10)" fg:x="4637" fg:w="1"/><text x="98.5749%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="98.3249%" y="597" width="0.0212%" height="15" fill="rgb(231,114,21)" fg:x="4637" fg:w="1"/><text x="98.5749%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="98.3249%" y="581" width="0.0212%" height="15" fill="rgb(238,209,2)" fg:x="4637" fg:w="1"/><text x="98.5749%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="98.3249%" y="565" width="0.0212%" height="15" fill="rgb(253,135,41)" fg:x="4637" fg:w="1"/><text x="98.5749%" y="575.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="98.3249%" y="549" width="0.0212%" height="15" fill="rgb(206,112,53)" fg:x="4637" fg:w="1"/><text x="98.5749%" y="559.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="98.3249%" y="533" width="0.0212%" height="15" fill="rgb(222,219,51)" fg:x="4637" fg:w="1"/><text x="98.5749%" y="543.50"></text></g><g><title>malloc_consolidate (1 samples, 0.02%)</title><rect x="98.3249%" y="517" width="0.0212%" height="15" fill="rgb(228,194,39)" fg:x="4637" fg:w="1"/><text x="98.5749%" y="527.50"></text></g><g><title>unlink_chunk (1 samples, 0.02%)</title><rect x="98.3249%" y="501" width="0.0212%" height="15" fill="rgb(223,20,30)" fg:x="4637" fg:w="1"/><text x="98.5749%" y="511.50"></text></g><g><title>s4::exec_fileprocessor_thread (35 samples, 0.74%)</title><rect x="97.6251%" y="1077" width="0.7422%" height="15" fill="rgb(245,49,27)" fg:x="4604" fg:w="35"/><text x="97.8751%" y="1087.50"></text></g><g><title>s4::exec_syslogprocessor (35 samples, 0.74%)</title><rect x="97.6251%" y="1061" width="0.7422%" height="15" fill="rgb(229,116,34)" fg:x="4604" fg:w="35"/><text x="97.8751%" y="1071.50"></text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::process_stage1_blockzero_analysis (35 samples, 0.74%)</title><rect x="97.6251%" y="1045" width="0.7422%" height="15" fill="rgb(214,107,3)" fg:x="4604" fg:w="35"/><text x="97.8751%" y="1055.50"></text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::blockzero_analysis (35 samples, 0.74%)</title><rect x="97.6251%" y="1029" width="0.7422%" height="15" fill="rgb(228,176,28)" fg:x="4604" fg:w="35"/><text x="97.8751%" y="1039.50"></text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::blockzero_analysis_syslines (35 samples, 0.74%)</title><rect x="97.6251%" y="1013" width="0.7422%" height="15" fill="rgb(208,15,47)" fg:x="4604" fg:w="35"/><text x="97.8751%" y="1023.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_sysline_in_block (35 samples, 0.74%)</title><rect x="97.6251%" y="997" width="0.7422%" height="15" fill="rgb(243,65,52)" fg:x="4604" fg:w="35"/><text x="97.8751%" y="1007.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_sysline_in_block_year (35 samples, 0.74%)</title><rect x="97.6251%" y="981" width="0.7422%" height="15" fill="rgb(253,177,51)" fg:x="4604" fg:w="35"/><text x="97.8751%" y="991.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::parse_datetime_in_line_cached (35 samples, 0.74%)</title><rect x="97.6251%" y="965" width="0.7422%" height="15" fill="rgb(231,75,50)" fg:x="4604" fg:w="35"/><text x="97.8751%" y="975.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::parse_datetime_in_line (35 samples, 0.74%)</title><rect x="97.6251%" y="949" width="0.7422%" height="15" fill="rgb(234,54,15)" fg:x="4604" fg:w="35"/><text x="97.8751%" y="959.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_datetime_in_line (35 samples, 0.74%)</title><rect x="97.6251%" y="933" width="0.7422%" height="15" fill="rgb(212,53,9)" fg:x="4604" fg:w="35"/><text x="97.8751%" y="943.50"></text></g><g><title>s4lib::data::datetime::bytes_to_regex_to_datetime (35 samples, 0.74%)</title><rect x="97.6251%" y="917" width="0.7422%" height="15" fill="rgb(252,84,36)" fg:x="4604" fg:w="35"/><text x="97.8751%" y="927.50"></text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref (35 samples, 0.74%)</title><rect x="97.6251%" y="901" width="0.7422%" height="15" fill="rgb(217,15,43)" fg:x="4604" fg:w="35"/><text x="97.8751%" y="911.50"></text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref::__stability (35 samples, 0.74%)</title><rect x="97.6251%" y="885" width="0.7422%" height="15" fill="rgb(239,165,48)" fg:x="4604" fg:w="35"/><text x="97.8751%" y="895.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (35 samples, 0.74%)</title><rect x="97.6251%" y="869" width="0.7422%" height="15" fill="rgb(235,175,8)" fg:x="4604" fg:w="35"/><text x="97.8751%" y="879.50"></text></g><g><title>std::sync::once::Once::call_once (35 samples, 0.74%)</title><rect x="97.6251%" y="853" width="0.7422%" height="15" fill="rgb(247,17,47)" fg:x="4604" fg:w="35"/><text x="97.8751%" y="863.50"></text></g><g><title>std::sys_common::once::futex::Once::call (35 samples, 0.74%)</title><rect x="97.6251%" y="837" width="0.7422%" height="15" fill="rgb(246,168,49)" fg:x="4604" fg:w="35"/><text x="97.8751%" y="847.50"></text></g><g><title>std::sync::once::Once::call_once::{{closure}} (35 samples, 0.74%)</title><rect x="97.6251%" y="821" width="0.7422%" height="15" fill="rgb(237,63,35)" fg:x="4604" fg:w="35"/><text x="97.8751%" y="831.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}} (35 samples, 0.74%)</title><rect x="97.6251%" y="805" width="0.7422%" height="15" fill="rgb(238,7,51)" fg:x="4604" fg:w="35"/><text x="97.8751%" y="815.50"></text></g><g><title>core::ops::function::FnOnce::call_once (35 samples, 0.74%)</title><rect x="97.6251%" y="789" width="0.7422%" height="15" fill="rgb(210,80,10)" fg:x="4604" fg:w="35"/><text x="97.8751%" y="799.50"></text></g><g><title>&lt;s4lib::data::datetime::DATETIME_PARSE_DATAS_REGEX_VEC as core::ops::deref::Deref&gt;::deref::__static_ref_initialize (35 samples, 0.74%)</title><rect x="97.6251%" y="773" width="0.7422%" height="15" fill="rgb(205,24,29)" fg:x="4604" fg:w="35"/><text x="97.8751%" y="783.50"></text></g><g><title>regex::regex::bytes::Regex::new (35 samples, 0.74%)</title><rect x="97.6251%" y="757" width="0.7422%" height="15" fill="rgb(246,224,25)" fg:x="4604" fg:w="35"/><text x="97.8751%" y="767.50"></text></g><g><title>regex::builders::bytes::RegexBuilder::build (35 samples, 0.74%)</title><rect x="97.6251%" y="741" width="0.7422%" height="15" fill="rgb(236,76,51)" fg:x="4604" fg:w="35"/><text x="97.8751%" y="751.50"></text></g><g><title>regex::builders::Builder::build_one_bytes (35 samples, 0.74%)</title><rect x="97.6251%" y="725" width="0.7422%" height="15" fill="rgb(233,102,7)" fg:x="4604" fg:w="35"/><text x="97.8751%" y="735.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (35 samples, 0.74%)</title><rect x="97.6251%" y="709" width="0.7422%" height="15" fill="rgb(212,33,22)" fg:x="4604" fg:w="35"/><text x="97.8751%" y="719.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many (35 samples, 0.74%)</title><rect x="97.6251%" y="693" width="0.7422%" height="15" fill="rgb(236,25,32)" fg:x="4604" fg:w="35"/><text x="97.8751%" y="703.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (35 samples, 0.74%)</title><rect x="97.6251%" y="677" width="0.7422%" height="15" fill="rgb(250,142,30)" fg:x="4604" fg:w="35"/><text x="97.8751%" y="687.50"></text></g><g><title>regex_automata::meta::strategy::new (35 samples, 0.74%)</title><rect x="97.6251%" y="661" width="0.7422%" height="15" fill="rgb(243,171,22)" fg:x="4604" fg:w="35"/><text x="97.8751%" y="671.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.02%)</title><rect x="98.3461%" y="645" width="0.0212%" height="15" fill="rgb(217,126,36)" fg:x="4638" fg:w="1"/><text x="98.5961%" y="655.50"></text></g><g><title>aho_corasick::util::alphabet::ByteClassSet::byte_classes (1 samples, 0.02%)</title><rect x="98.3673%" y="885" width="0.0212%" height="15" fill="rgb(206,94,23)" fg:x="4639" fg:w="1"/><text x="98.6173%" y="895.50"></text></g><g><title>aho_corasick::util::alphabet::ByteSet::contains (1 samples, 0.02%)</title><rect x="98.3673%" y="869" width="0.0212%" height="15" fill="rgb(235,156,8)" fg:x="4639" fg:w="1"/><text x="98.6173%" y="879.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Compiler::fill_failure_transitions (1 samples, 0.02%)</title><rect x="98.3885%" y="885" width="0.0212%" height="15" fill="rgb(242,200,7)" fg:x="4640" fg:w="1"/><text x="98.6385%" y="895.50"></text></g><g><title>&lt;aho_corasick::util::primitives::StateID as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="98.3885%" y="869" width="0.0212%" height="15" fill="rgb(216,203,14)" fg:x="4640" fg:w="1"/><text x="98.6385%" y="879.50"></text></g><g><title>&lt;aho_corasick::util::primitives::SmallIndex as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="98.3885%" y="853" width="0.0212%" height="15" fill="rgb(220,107,36)" fg:x="4640" fg:w="1"/><text x="98.6385%" y="863.50"></text></g><g><title>aho_corasick::util::alphabet::ByteClassSet::set_range (1 samples, 0.02%)</title><rect x="98.4097%" y="869" width="0.0212%" height="15" fill="rgb(206,69,46)" fg:x="4641" fg:w="1"/><text x="98.6597%" y="879.50"></text></g><g><title>&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="98.4309%" y="837" width="0.0212%" height="15" fill="rgb(219,209,28)" fg:x="4642" fg:w="1"/><text x="98.6809%" y="847.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::NFA::iter_trans::{{closure}} (1 samples, 0.02%)</title><rect x="98.4309%" y="821" width="0.0212%" height="15" fill="rgb(219,167,0)" fg:x="4642" fg:w="1"/><text x="98.6809%" y="831.50"></text></g><g><title>&lt;aho_corasick::util::primitives::StateID as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="98.4309%" y="805" width="0.0212%" height="15" fill="rgb(216,203,14)" fg:x="4642" fg:w="1"/><text x="98.6809%" y="815.50"></text></g><g><title>&lt;aho_corasick::util::primitives::SmallIndex as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="98.4309%" y="789" width="0.0212%" height="15" fill="rgb(220,107,36)" fg:x="4642" fg:w="1"/><text x="98.6809%" y="799.50"></text></g><g><title>regex_automata::meta::strategy::ReverseInner::new (5 samples, 0.11%)</title><rect x="98.3673%" y="1061" width="0.1060%" height="15" fill="rgb(225,146,32)" fg:x="4639" fg:w="5"/><text x="98.6173%" y="1071.50"></text></g><g><title>regex_automata::meta::reverse_inner::extract (5 samples, 0.11%)</title><rect x="98.3673%" y="1045" width="0.1060%" height="15" fill="rgb(209,78,45)" fg:x="4639" fg:w="5"/><text x="98.6173%" y="1055.50"></text></g><g><title>regex_automata::meta::reverse_inner::prefilter (5 samples, 0.11%)</title><rect x="98.3673%" y="1029" width="0.1060%" height="15" fill="rgb(221,50,42)" fg:x="4639" fg:w="5"/><text x="98.6173%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (5 samples, 0.11%)</title><rect x="98.3673%" y="1013" width="0.1060%" height="15" fill="rgb(225,8,7)" fg:x="4639" fg:w="5"/><text x="98.6173%" y="1023.50"></text></g><g><title>regex_automata::meta::reverse_inner::prefilter::{{closure}} (5 samples, 0.11%)</title><rect x="98.3673%" y="997" width="0.1060%" height="15" fill="rgb(234,195,1)" fg:x="4639" fg:w="5"/><text x="98.6173%" y="1007.50"></text></g><g><title>regex_automata::util::prefilter::Prefilter::new (5 samples, 0.11%)</title><rect x="98.3673%" y="981" width="0.1060%" height="15" fill="rgb(227,199,27)" fg:x="4639" fg:w="5"/><text x="98.6173%" y="991.50"></text></g><g><title>regex_automata::util::prefilter::Choice::new (5 samples, 0.11%)</title><rect x="98.3673%" y="965" width="0.1060%" height="15" fill="rgb(243,64,33)" fg:x="4639" fg:w="5"/><text x="98.6173%" y="975.50"></text></g><g><title>regex_automata::util::prefilter::teddy::Teddy::new (5 samples, 0.11%)</title><rect x="98.3673%" y="949" width="0.1060%" height="15" fill="rgb(207,155,0)" fg:x="4639" fg:w="5"/><text x="98.6173%" y="959.50"></text></g><g><title>aho_corasick::dfa::Builder::build (5 samples, 0.11%)</title><rect x="98.3673%" y="933" width="0.1060%" height="15" fill="rgb(212,91,25)" fg:x="4639" fg:w="5"/><text x="98.6173%" y="943.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Builder::build (5 samples, 0.11%)</title><rect x="98.3673%" y="917" width="0.1060%" height="15" fill="rgb(235,33,22)" fg:x="4639" fg:w="5"/><text x="98.6173%" y="927.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Compiler::compile (5 samples, 0.11%)</title><rect x="98.3673%" y="901" width="0.1060%" height="15" fill="rgb(253,203,15)" fg:x="4639" fg:w="5"/><text x="98.6173%" y="911.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Compiler::build_trie (3 samples, 0.06%)</title><rect x="98.4097%" y="885" width="0.0636%" height="15" fill="rgb(206,127,45)" fg:x="4641" fg:w="3"/><text x="98.6597%" y="895.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::NFA::follow_transition (2 samples, 0.04%)</title><rect x="98.4309%" y="869" width="0.0424%" height="15" fill="rgb(245,172,39)" fg:x="4642" fg:w="2"/><text x="98.6809%" y="879.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::NFA::follow_transition_sparse (2 samples, 0.04%)</title><rect x="98.4309%" y="853" width="0.0424%" height="15" fill="rgb(231,136,53)" fg:x="4642" fg:w="2"/><text x="98.6809%" y="863.50"></text></g><g><title>regex_automata::util::alphabet::ByteSet::contains (3 samples, 0.06%)</title><rect x="98.4733%" y="965" width="0.0636%" height="15" fill="rgb(229,229,29)" fg:x="4644" fg:w="3"/><text x="98.7233%" y="975.50"></text></g><g><title>regex_automata::meta::strategy::Core::new (4 samples, 0.08%)</title><rect x="98.4733%" y="1061" width="0.0848%" height="15" fill="rgb(222,69,27)" fg:x="4644" fg:w="4"/><text x="98.7233%" y="1071.50"></text></g><g><title>regex_automata::meta::wrappers::Hybrid::new (4 samples, 0.08%)</title><rect x="98.4733%" y="1045" width="0.0848%" height="15" fill="rgb(227,93,26)" fg:x="4644" fg:w="4"/><text x="98.7233%" y="1055.50"></text></g><g><title>regex_automata::meta::wrappers::HybridEngine::new (4 samples, 0.08%)</title><rect x="98.4733%" y="1029" width="0.0848%" height="15" fill="rgb(206,223,9)" fg:x="4644" fg:w="4"/><text x="98.7233%" y="1039.50"></text></g><g><title>regex_automata::hybrid::dfa::Builder::build_from_nfa (4 samples, 0.08%)</title><rect x="98.4733%" y="1013" width="0.0848%" height="15" fill="rgb(218,121,20)" fg:x="4644" fg:w="4"/><text x="98.7233%" y="1023.50"></text></g><g><title>regex_automata::hybrid::dfa::Config::byte_classes_from_nfa (4 samples, 0.08%)</title><rect x="98.4733%" y="997" width="0.0848%" height="15" fill="rgb(224,75,48)" fg:x="4644" fg:w="4"/><text x="98.7233%" y="1007.50"></text></g><g><title>regex_automata::util::alphabet::ByteClassSet::byte_classes (4 samples, 0.08%)</title><rect x="98.4733%" y="981" width="0.0848%" height="15" fill="rgb(211,195,22)" fg:x="4644" fg:w="4"/><text x="98.7233%" y="991.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.02%)</title><rect x="98.5369%" y="965" width="0.0212%" height="15" fill="rgb(212,186,21)" fg:x="4647" fg:w="1"/><text x="98.7869%" y="975.50"></text></g><g><title>regex_automata::meta::strategy::new (10 samples, 0.21%)</title><rect x="98.3673%" y="1077" width="0.2120%" height="15" fill="rgb(243,171,22)" fg:x="4639" fg:w="10"/><text x="98.6173%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.02%)</title><rect x="98.5581%" y="1061" width="0.0212%" height="15" fill="rgb(225,8,7)" fg:x="4648" fg:w="1"/><text x="98.8081%" y="1071.50"></text></g><g><title>regex_automata::meta::strategy::new::{{closure}} (1 samples, 0.02%)</title><rect x="98.5581%" y="1045" width="0.0212%" height="15" fill="rgb(238,100,15)" fg:x="4648" fg:w="1"/><text x="98.8081%" y="1055.50"></text></g><g><title>regex_automata::util::prefilter::Prefilter::new (1 samples, 0.02%)</title><rect x="98.5581%" y="1029" width="0.0212%" height="15" fill="rgb(227,199,27)" fg:x="4648" fg:w="1"/><text x="98.8081%" y="1039.50"></text></g><g><title>regex_automata::util::prefilter::Choice::new (1 samples, 0.02%)</title><rect x="98.5581%" y="1013" width="0.0212%" height="15" fill="rgb(243,64,33)" fg:x="4648" fg:w="1"/><text x="98.8081%" y="1023.50"></text></g><g><title>regex_automata::util::prefilter::teddy::Teddy::new (1 samples, 0.02%)</title><rect x="98.5581%" y="997" width="0.0212%" height="15" fill="rgb(207,155,0)" fg:x="4648" fg:w="1"/><text x="98.8081%" y="1007.50"></text></g><g><title>aho_corasick::dfa::Builder::build (1 samples, 0.02%)</title><rect x="98.5581%" y="981" width="0.0212%" height="15" fill="rgb(212,91,25)" fg:x="4648" fg:w="1"/><text x="98.8081%" y="991.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Builder::build (1 samples, 0.02%)</title><rect x="98.5581%" y="965" width="0.0212%" height="15" fill="rgb(235,33,22)" fg:x="4648" fg:w="1"/><text x="98.8081%" y="975.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Compiler::compile (1 samples, 0.02%)</title><rect x="98.5581%" y="949" width="0.0212%" height="15" fill="rgb(253,203,15)" fg:x="4648" fg:w="1"/><text x="98.8081%" y="959.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Compiler::shuffle (1 samples, 0.02%)</title><rect x="98.5581%" y="933" width="0.0212%" height="15" fill="rgb(236,25,7)" fg:x="4648" fg:w="1"/><text x="98.8081%" y="943.50"></text></g><g><title>aho_corasick::util::remapper::Remapper::remap (1 samples, 0.02%)</title><rect x="98.5581%" y="917" width="0.0212%" height="15" fill="rgb(226,227,45)" fg:x="4648" fg:w="1"/><text x="98.8081%" y="927.50"></text></g><g><title>&lt;aho_corasick::nfa::noncontiguous::NFA as aho_corasick::util::remapper::Remappable&gt;::remap (1 samples, 0.02%)</title><rect x="98.5581%" y="901" width="0.0212%" height="15" fill="rgb(226,108,34)" fg:x="4648" fg:w="1"/><text x="98.8081%" y="911.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::NFA::remap (1 samples, 0.02%)</title><rect x="98.5581%" y="885" width="0.0212%" height="15" fill="rgb(254,74,25)" fg:x="4648" fg:w="1"/><text x="98.8081%" y="895.50"></text></g><g><title>aho_corasick::util::remapper::Remapper::remap::{{closure}} (1 samples, 0.02%)</title><rect x="98.5581%" y="869" width="0.0212%" height="15" fill="rgb(250,185,3)" fg:x="4648" fg:w="1"/><text x="98.8081%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.02%)</title><rect x="98.5581%" y="853" width="0.0212%" height="15" fill="rgb(215,149,39)" fg:x="4648" fg:w="1"/><text x="98.8081%" y="863.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect x="98.5581%" y="837" width="0.0212%" height="15" fill="rgb(250,51,46)" fg:x="4648" fg:w="1"/><text x="98.8081%" y="847.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect x="98.5581%" y="821" width="0.0212%" height="15" fill="rgb(254,116,45)" fg:x="4648" fg:w="1"/><text x="98.8081%" y="831.50"></text></g><g><title>aho_corasick::util::alphabet::ByteClasses::get (3 samples, 0.06%)</title><rect x="98.5793%" y="821" width="0.0636%" height="15" fill="rgb(251,98,47)" fg:x="4649" fg:w="3"/><text x="98.8293%" y="831.50"></text></g><g><title>regex_automata::util::prefilter::teddy::Teddy::new (4 samples, 0.08%)</title><rect x="98.5793%" y="901" width="0.0848%" height="15" fill="rgb(207,155,0)" fg:x="4649" fg:w="4"/><text x="98.8293%" y="911.50"></text></g><g><title>aho_corasick::dfa::Builder::build (4 samples, 0.08%)</title><rect x="98.5793%" y="885" width="0.0848%" height="15" fill="rgb(212,91,25)" fg:x="4649" fg:w="4"/><text x="98.8293%" y="895.50"></text></g><g><title>aho_corasick::dfa::Builder::build_from_noncontiguous (4 samples, 0.08%)</title><rect x="98.5793%" y="869" width="0.0848%" height="15" fill="rgb(231,220,22)" fg:x="4649" fg:w="4"/><text x="98.8293%" y="879.50"></text></g><g><title>aho_corasick::dfa::Builder::finish_build_one_start (4 samples, 0.08%)</title><rect x="98.5793%" y="853" width="0.0848%" height="15" fill="rgb(242,31,54)" fg:x="4649" fg:w="4"/><text x="98.8293%" y="863.50"></text></g><g><title>aho_corasick::dfa::sparse_iter (4 samples, 0.08%)</title><rect x="98.5793%" y="837" width="0.0848%" height="15" fill="rgb(223,225,36)" fg:x="4649" fg:w="4"/><text x="98.8293%" y="847.50"></text></g><g><title>aho_corasick::dfa::Builder::finish_build_one_start::{{closure}} (1 samples, 0.02%)</title><rect x="98.6429%" y="821" width="0.0212%" height="15" fill="rgb(251,205,26)" fg:x="4652" fg:w="1"/><text x="98.8929%" y="831.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::next (1 samples, 0.02%)</title><rect x="98.6641%" y="821" width="0.0212%" height="15" fill="rgb(229,74,25)" fg:x="4653" fg:w="1"/><text x="98.9141%" y="831.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_next (1 samples, 0.02%)</title><rect x="98.6641%" y="805" width="0.0212%" height="15" fill="rgb(205,65,32)" fg:x="4653" fg:w="1"/><text x="98.9141%" y="815.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.02%)</title><rect x="98.6641%" y="789" width="0.0212%" height="15" fill="rgb(232,29,30)" fg:x="4653" fg:w="1"/><text x="98.9141%" y="799.50"></text></g><g><title>regex_automata::meta::strategy::ReverseInner::new (6 samples, 0.13%)</title><rect x="98.5793%" y="1013" width="0.1272%" height="15" fill="rgb(225,146,32)" fg:x="4649" fg:w="6"/><text x="98.8293%" y="1023.50"></text></g><g><title>regex_automata::meta::reverse_inner::extract (6 samples, 0.13%)</title><rect x="98.5793%" y="997" width="0.1272%" height="15" fill="rgb(209,78,45)" fg:x="4649" fg:w="6"/><text x="98.8293%" y="1007.50"></text></g><g><title>regex_automata::meta::reverse_inner::prefilter (6 samples, 0.13%)</title><rect x="98.5793%" y="981" width="0.1272%" height="15" fill="rgb(221,50,42)" fg:x="4649" fg:w="6"/><text x="98.8293%" y="991.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (6 samples, 0.13%)</title><rect x="98.5793%" y="965" width="0.1272%" height="15" fill="rgb(225,8,7)" fg:x="4649" fg:w="6"/><text x="98.8293%" y="975.50"></text></g><g><title>regex_automata::meta::reverse_inner::prefilter::{{closure}} (6 samples, 0.13%)</title><rect x="98.5793%" y="949" width="0.1272%" height="15" fill="rgb(234,195,1)" fg:x="4649" fg:w="6"/><text x="98.8293%" y="959.50"></text></g><g><title>regex_automata::util::prefilter::Prefilter::new (6 samples, 0.13%)</title><rect x="98.5793%" y="933" width="0.1272%" height="15" fill="rgb(227,199,27)" fg:x="4649" fg:w="6"/><text x="98.8293%" y="943.50"></text></g><g><title>regex_automata::util::prefilter::Choice::new (6 samples, 0.13%)</title><rect x="98.5793%" y="917" width="0.1272%" height="15" fill="rgb(243,64,33)" fg:x="4649" fg:w="6"/><text x="98.8293%" y="927.50"></text></g><g><title>regex_automata::util::prefilter::aho_corasick::AhoCorasick::new (2 samples, 0.04%)</title><rect x="98.6641%" y="901" width="0.0424%" height="15" fill="rgb(212,202,50)" fg:x="4653" fg:w="2"/><text x="98.9141%" y="911.50"></text></g><g><title>aho_corasick::ahocorasick::AhoCorasickBuilder::build (2 samples, 0.04%)</title><rect x="98.6641%" y="885" width="0.0424%" height="15" fill="rgb(223,55,42)" fg:x="4653" fg:w="2"/><text x="98.9141%" y="895.50"></text></g><g><title>aho_corasick::dfa::Builder::build_from_noncontiguous (2 samples, 0.04%)</title><rect x="98.6641%" y="869" width="0.0424%" height="15" fill="rgb(231,220,22)" fg:x="4653" fg:w="2"/><text x="98.9141%" y="879.50"></text></g><g><title>aho_corasick::dfa::Builder::finish_build_both_starts (2 samples, 0.04%)</title><rect x="98.6641%" y="853" width="0.0424%" height="15" fill="rgb(216,25,9)" fg:x="4653" fg:w="2"/><text x="98.9141%" y="863.50"></text></g><g><title>aho_corasick::dfa::sparse_iter (2 samples, 0.04%)</title><rect x="98.6641%" y="837" width="0.0424%" height="15" fill="rgb(223,225,36)" fg:x="4653" fg:w="2"/><text x="98.9141%" y="847.50"></text></g><g><title>&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="98.6853%" y="821" width="0.0212%" height="15" fill="rgb(219,209,28)" fg:x="4654" fg:w="1"/><text x="98.9353%" y="831.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::NFA::iter_trans::{{closure}} (1 samples, 0.02%)</title><rect x="98.6853%" y="805" width="0.0212%" height="15" fill="rgb(219,167,0)" fg:x="4654" fg:w="1"/><text x="98.9353%" y="815.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="98.7065%" y="405" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="4655" fg:w="1"/><text x="98.9565%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="98.7065%" y="389" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="4655" fg:w="1"/><text x="98.9565%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="98.7065%" y="373" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="4655" fg:w="1"/><text x="98.9565%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="98.7065%" y="357" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="4655" fg:w="1"/><text x="98.9565%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="98.7065%" y="341" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="4655" fg:w="1"/><text x="98.9565%" y="351.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="98.7065%" y="325" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="4655" fg:w="1"/><text x="98.9565%" y="335.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="98.7065%" y="309" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="4655" fg:w="1"/><text x="98.9565%" y="319.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="98.7065%" y="293" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="4655" fg:w="1"/><text x="98.9565%" y="303.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="98.7065%" y="277" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="4655" fg:w="1"/><text x="98.9565%" y="287.50"></text></g><g><title>core::ptr::write (2 samples, 0.04%)</title><rect x="98.7065%" y="421" width="0.0424%" height="15" fill="rgb(209,143,44)" fg:x="4655" fg:w="2"/><text x="98.9565%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.02%)</title><rect x="98.7489%" y="389" width="0.0212%" height="15" fill="rgb(232,29,30)" fg:x="4657" fg:w="1"/><text x="98.9989%" y="399.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.04%)</title><rect x="98.7489%" y="421" width="0.0424%" height="15" fill="rgb(246,165,53)" fg:x="4657" fg:w="2"/><text x="98.9989%" y="431.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.04%)</title><rect x="98.7489%" y="405" width="0.0424%" height="15" fill="rgb(226,134,37)" fg:x="4657" fg:w="2"/><text x="98.9989%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.13%)</title><rect x="98.7065%" y="837" width="0.1272%" height="15" fill="rgb(214,109,53)" fg:x="4655" fg:w="6"/><text x="98.9565%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6 samples, 0.13%)</title><rect x="98.7065%" y="821" width="0.1272%" height="15" fill="rgb(254,35,30)" fg:x="4655" fg:w="6"/><text x="98.9565%" y="831.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (6 samples, 0.13%)</title><rect x="98.7065%" y="805" width="0.1272%" height="15" fill="rgb(226,169,23)" fg:x="4655" fg:w="6"/><text x="98.9565%" y="815.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (6 samples, 0.13%)</title><rect x="98.7065%" y="789" width="0.1272%" height="15" fill="rgb(205,130,14)" fg:x="4655" fg:w="6"/><text x="98.9565%" y="799.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (6 samples, 0.13%)</title><rect x="98.7065%" y="773" width="0.1272%" height="15" fill="rgb(235,200,16)" fg:x="4655" fg:w="6"/><text x="98.9565%" y="783.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (6 samples, 0.13%)</title><rect x="98.7065%" y="757" width="0.1272%" height="15" fill="rgb(213,34,18)" fg:x="4655" fg:w="6"/><text x="98.9565%" y="767.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (6 samples, 0.13%)</title><rect x="98.7065%" y="741" width="0.1272%" height="15" fill="rgb(253,35,22)" fg:x="4655" fg:w="6"/><text x="98.9565%" y="751.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (6 samples, 0.13%)</title><rect x="98.7065%" y="725" width="0.1272%" height="15" fill="rgb(247,137,3)" fg:x="4655" fg:w="6"/><text x="98.9565%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.13%)</title><rect x="98.7065%" y="709" width="0.1272%" height="15" fill="rgb(214,109,53)" fg:x="4655" fg:w="6"/><text x="98.9565%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6 samples, 0.13%)</title><rect x="98.7065%" y="693" width="0.1272%" height="15" fill="rgb(254,35,30)" fg:x="4655" fg:w="6"/><text x="98.9565%" y="703.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (6 samples, 0.13%)</title><rect x="98.7065%" y="677" width="0.1272%" height="15" fill="rgb(226,169,23)" fg:x="4655" fg:w="6"/><text x="98.9565%" y="687.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice::{{closure}} (6 samples, 0.13%)</title><rect x="98.7065%" y="661" width="0.1272%" height="15" fill="rgb(223,145,12)" fg:x="4655" fg:w="6"/><text x="98.9565%" y="671.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (6 samples, 0.13%)</title><rect x="98.7065%" y="645" width="0.1272%" height="15" fill="rgb(213,34,18)" fg:x="4655" fg:w="6"/><text x="98.9565%" y="655.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (6 samples, 0.13%)</title><rect x="98.7065%" y="629" width="0.1272%" height="15" fill="rgb(210,105,37)" fg:x="4655" fg:w="6"/><text x="98.9565%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.13%)</title><rect x="98.7065%" y="613" width="0.1272%" height="15" fill="rgb(214,109,53)" fg:x="4655" fg:w="6"/><text x="98.9565%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6 samples, 0.13%)</title><rect x="98.7065%" y="597" width="0.1272%" height="15" fill="rgb(254,35,30)" fg:x="4655" fg:w="6"/><text x="98.9565%" y="607.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (6 samples, 0.13%)</title><rect x="98.7065%" y="581" width="0.1272%" height="15" fill="rgb(226,169,23)" fg:x="4655" fg:w="6"/><text x="98.9565%" y="591.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (6 samples, 0.13%)</title><rect x="98.7065%" y="565" width="0.1272%" height="15" fill="rgb(205,130,14)" fg:x="4655" fg:w="6"/><text x="98.9565%" y="575.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (6 samples, 0.13%)</title><rect x="98.7065%" y="549" width="0.1272%" height="15" fill="rgb(213,34,18)" fg:x="4655" fg:w="6"/><text x="98.9565%" y="559.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class (6 samples, 0.13%)</title><rect x="98.7065%" y="533" width="0.1272%" height="15" fill="rgb(246,38,12)" fg:x="4655" fg:w="6"/><text x="98.9565%" y="543.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::new (6 samples, 0.13%)</title><rect x="98.7065%" y="517" width="0.1272%" height="15" fill="rgb(211,200,20)" fg:x="4655" fg:w="6"/><text x="98.9565%" y="527.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8State::clear (6 samples, 0.13%)</title><rect x="98.7065%" y="501" width="0.1272%" height="15" fill="rgb(241,127,0)" fg:x="4655" fg:w="6"/><text x="98.9565%" y="511.50"></text></g><g><title>regex_automata::nfa::thompson::map::Utf8BoundedMap::clear (6 samples, 0.13%)</title><rect x="98.7065%" y="485" width="0.1272%" height="15" fill="rgb(207,86,25)" fg:x="4655" fg:w="6"/><text x="98.9565%" y="495.50"></text></g><g><title>alloc::vec::from_elem (6 samples, 0.13%)</title><rect x="98.7065%" y="469" width="0.1272%" height="15" fill="rgb(208,109,54)" fg:x="4655" fg:w="6"/><text x="98.9565%" y="479.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (6 samples, 0.13%)</title><rect x="98.7065%" y="453" width="0.1272%" height="15" fill="rgb(228,177,24)" fg:x="4655" fg:w="6"/><text x="98.9565%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (6 samples, 0.13%)</title><rect x="98.7065%" y="437" width="0.1272%" height="15" fill="rgb(216,52,5)" fg:x="4655" fg:w="6"/><text x="98.9565%" y="447.50"></text></g><g><title>&lt;alloc::vec::ExtendElement&lt;T&gt; as alloc::vec::ExtendWith&lt;T&gt;&gt;::next (2 samples, 0.04%)</title><rect x="98.7913%" y="421" width="0.0424%" height="15" fill="rgb(216,123,15)" fg:x="4659" fg:w="2"/><text x="99.0413%" y="431.50"></text></g><g><title>&lt;regex_automata::nfa::thompson::map::Utf8BoundedEntry as core::clone::Clone&gt;::clone (2 samples, 0.04%)</title><rect x="98.7913%" y="405" width="0.0424%" height="15" fill="rgb(211,18,41)" fg:x="4659" fg:w="2"/><text x="99.0413%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.04%)</title><rect x="98.7913%" y="389" width="0.0424%" height="15" fill="rgb(239,104,10)" fg:x="4659" fg:w="2"/><text x="99.0413%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.04%)</title><rect x="98.7913%" y="373" width="0.0424%" height="15" fill="rgb(229,121,46)" fg:x="4659" fg:w="2"/><text x="99.0413%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.04%)</title><rect x="98.7913%" y="357" width="0.0424%" height="15" fill="rgb(221,172,50)" fg:x="4659" fg:w="2"/><text x="99.0413%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.04%)</title><rect x="98.7913%" y="341" width="0.0424%" height="15" fill="rgb(216,42,52)" fg:x="4659" fg:w="2"/><text x="99.0413%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.04%)</title><rect x="98.7913%" y="325" width="0.0424%" height="15" fill="rgb(222,107,1)" fg:x="4659" fg:w="2"/><text x="99.0413%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.04%)</title><rect x="98.7913%" y="309" width="0.0424%" height="15" fill="rgb(214,20,35)" fg:x="4659" fg:w="2"/><text x="99.0413%" y="319.50"></text></g><g><title>__memmove_avx512_unaligned_erms (2 samples, 0.04%)</title><rect x="98.7913%" y="293" width="0.0424%" height="15" fill="rgb(217,126,36)" fg:x="4659" fg:w="2"/><text x="99.0413%" y="303.50"></text></g><g><title>regex_automata::meta::strategy::Core::new (7 samples, 0.15%)</title><rect x="98.7065%" y="1013" width="0.1484%" height="15" fill="rgb(222,69,27)" fg:x="4655" fg:w="7"/><text x="98.9565%" y="1023.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (7 samples, 0.15%)</title><rect x="98.7065%" y="997" width="0.1484%" height="15" fill="rgb(226,42,16)" fg:x="4655" fg:w="7"/><text x="98.9565%" y="1007.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (7 samples, 0.15%)</title><rect x="98.7065%" y="981" width="0.1484%" height="15" fill="rgb(242,129,17)" fg:x="4655" fg:w="7"/><text x="98.9565%" y="991.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (7 samples, 0.15%)</title><rect x="98.7065%" y="965" width="0.1484%" height="15" fill="rgb(247,137,3)" fg:x="4655" fg:w="7"/><text x="98.9565%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.15%)</title><rect x="98.7065%" y="949" width="0.1484%" height="15" fill="rgb(214,109,53)" fg:x="4655" fg:w="7"/><text x="98.9565%" y="959.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (7 samples, 0.15%)</title><rect x="98.7065%" y="933" width="0.1484%" height="15" fill="rgb(254,35,30)" fg:x="4655" fg:w="7"/><text x="98.9565%" y="943.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (7 samples, 0.15%)</title><rect x="98.7065%" y="917" width="0.1484%" height="15" fill="rgb(226,169,23)" fg:x="4655" fg:w="7"/><text x="98.9565%" y="927.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile::{{closure}} (7 samples, 0.15%)</title><rect x="98.7065%" y="901" width="0.1484%" height="15" fill="rgb(218,216,52)" fg:x="4655" fg:w="7"/><text x="98.9565%" y="911.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (7 samples, 0.15%)</title><rect x="98.7065%" y="885" width="0.1484%" height="15" fill="rgb(235,200,16)" fg:x="4655" fg:w="7"/><text x="98.9565%" y="895.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (7 samples, 0.15%)</title><rect x="98.7065%" y="869" width="0.1484%" height="15" fill="rgb(213,34,18)" fg:x="4655" fg:w="7"/><text x="98.9565%" y="879.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (7 samples, 0.15%)</title><rect x="98.7065%" y="853" width="0.1484%" height="15" fill="rgb(210,105,37)" fg:x="4655" fg:w="7"/><text x="98.9565%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 0.02%)</title><rect x="98.8338%" y="837" width="0.0212%" height="15" fill="rgb(222,94,14)" fg:x="4661" fg:w="1"/><text x="99.0838%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.02%)</title><rect x="98.8338%" y="821" width="0.0212%" height="15" fill="rgb(254,35,30)" fg:x="4661" fg:w="1"/><text x="99.0838%" y="831.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.02%)</title><rect x="98.8338%" y="805" width="0.0212%" height="15" fill="rgb(226,169,23)" fg:x="4661" fg:w="1"/><text x="99.0838%" y="815.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (1 samples, 0.02%)</title><rect x="98.8338%" y="789" width="0.0212%" height="15" fill="rgb(205,130,14)" fg:x="4661" fg:w="1"/><text x="99.0838%" y="799.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 0.02%)</title><rect x="98.8338%" y="773" width="0.0212%" height="15" fill="rgb(235,200,16)" fg:x="4661" fg:w="1"/><text x="99.0838%" y="783.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.02%)</title><rect x="98.8338%" y="757" width="0.0212%" height="15" fill="rgb(213,34,18)" fg:x="4661" fg:w="1"/><text x="99.0838%" y="767.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (1 samples, 0.02%)</title><rect x="98.8338%" y="741" width="0.0212%" height="15" fill="rgb(253,35,22)" fg:x="4661" fg:w="1"/><text x="99.0838%" y="751.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (1 samples, 0.02%)</title><rect x="98.8338%" y="725" width="0.0212%" height="15" fill="rgb(247,137,3)" fg:x="4661" fg:w="1"/><text x="99.0838%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="98.8338%" y="709" width="0.0212%" height="15" fill="rgb(214,109,53)" fg:x="4661" fg:w="1"/><text x="99.0838%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.02%)</title><rect x="98.8338%" y="693" width="0.0212%" height="15" fill="rgb(254,35,30)" fg:x="4661" fg:w="1"/><text x="99.0838%" y="703.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.02%)</title><rect x="98.8338%" y="677" width="0.0212%" height="15" fill="rgb(226,169,23)" fg:x="4661" fg:w="1"/><text x="99.0838%" y="687.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice::{{closure}} (1 samples, 0.02%)</title><rect x="98.8338%" y="661" width="0.0212%" height="15" fill="rgb(223,145,12)" fg:x="4661" fg:w="1"/><text x="99.0838%" y="671.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.02%)</title><rect x="98.8338%" y="645" width="0.0212%" height="15" fill="rgb(213,34,18)" fg:x="4661" fg:w="1"/><text x="99.0838%" y="655.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (1 samples, 0.02%)</title><rect x="98.8338%" y="629" width="0.0212%" height="15" fill="rgb(210,105,37)" fg:x="4661" fg:w="1"/><text x="99.0838%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 0.02%)</title><rect x="98.8338%" y="613" width="0.0212%" height="15" fill="rgb(222,94,14)" fg:x="4661" fg:w="1"/><text x="99.0838%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.02%)</title><rect x="98.8338%" y="597" width="0.0212%" height="15" fill="rgb(254,35,30)" fg:x="4661" fg:w="1"/><text x="99.0838%" y="607.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.02%)</title><rect x="98.8338%" y="581" width="0.0212%" height="15" fill="rgb(226,169,23)" fg:x="4661" fg:w="1"/><text x="99.0838%" y="591.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (1 samples, 0.02%)</title><rect x="98.8338%" y="565" width="0.0212%" height="15" fill="rgb(205,130,14)" fg:x="4661" fg:w="1"/><text x="99.0838%" y="575.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.02%)</title><rect x="98.8338%" y="549" width="0.0212%" height="15" fill="rgb(213,34,18)" fg:x="4661" fg:w="1"/><text x="99.0838%" y="559.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class (1 samples, 0.02%)</title><rect x="98.8338%" y="533" width="0.0212%" height="15" fill="rgb(246,38,12)" fg:x="4661" fg:w="1"/><text x="99.0838%" y="543.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::add_empty (1 samples, 0.02%)</title><rect x="98.8338%" y="517" width="0.0212%" height="15" fill="rgb(245,57,0)" fg:x="4661" fg:w="1"/><text x="99.0838%" y="527.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add_empty (1 samples, 0.02%)</title><rect x="98.8338%" y="501" width="0.0212%" height="15" fill="rgb(233,49,21)" fg:x="4661" fg:w="1"/><text x="99.0838%" y="511.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add (1 samples, 0.02%)</title><rect x="98.8338%" y="485" width="0.0212%" height="15" fill="rgb(253,91,29)" fg:x="4661" fg:w="1"/><text x="99.0838%" y="495.50"></text></g><g><title>aho_corasick::packed::api::Builder::build (1 samples, 0.02%)</title><rect x="98.8550%" y="933" width="0.0212%" height="15" fill="rgb(245,1,41)" fg:x="4662" fg:w="1"/><text x="99.1050%" y="943.50"></text></g><g><title>aho_corasick::packed::api::Builder::build_teddy (1 samples, 0.02%)</title><rect x="98.8550%" y="917" width="0.0212%" height="15" fill="rgb(225,159,12)" fg:x="4662" fg:w="1"/><text x="99.1050%" y="927.50"></text></g><g><title>aho_corasick::packed::teddy::builder::Builder::build (1 samples, 0.02%)</title><rect x="98.8550%" y="901" width="0.0212%" height="15" fill="rgb(235,121,30)" fg:x="4662" fg:w="1"/><text x="99.1050%" y="911.50"></text></g><g><title>aho_corasick::packed::teddy::builder::Builder::build_imp (1 samples, 0.02%)</title><rect x="98.8550%" y="885" width="0.0212%" height="15" fill="rgb(237,147,11)" fg:x="4662" fg:w="1"/><text x="99.1050%" y="895.50"></text></g><g><title>aho_corasick::packed::teddy::builder::x86_64::FatAVX2&lt;3_usize&gt;::new (1 samples, 0.02%)</title><rect x="98.8550%" y="869" width="0.0212%" height="15" fill="rgb(226,175,4)" fg:x="4662" fg:w="1"/><text x="99.1050%" y="879.50"></text></g><g><title>aho_corasick::packed::teddy::builder::x86_64::FatAVX2&lt;3_usize&gt;::new_unchecked (1 samples, 0.02%)</title><rect x="98.8550%" y="853" width="0.0212%" height="15" fill="rgb(208,2,1)" fg:x="4662" fg:w="1"/><text x="99.1050%" y="863.50"></text></g><g><title>aho_corasick::packed::teddy::generic::Fat&lt;V,_&gt;::new (1 samples, 0.02%)</title><rect x="98.8550%" y="837" width="0.0212%" height="15" fill="rgb(246,12,28)" fg:x="4662" fg:w="1"/><text x="99.1050%" y="847.50"></text></g><g><title>aho_corasick::packed::teddy::generic::Teddy&lt;_&gt;::new (1 samples, 0.02%)</title><rect x="98.8550%" y="821" width="0.0212%" height="15" fill="rgb(246,138,28)" fg:x="4662" fg:w="1"/><text x="99.1050%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::boxed::Box&lt;[u8]&gt;,usize&gt;&gt; (1 samples, 0.02%)</title><rect x="98.8550%" y="805" width="0.0212%" height="15" fill="rgb(248,116,8)" fg:x="4662" fg:w="1"/><text x="99.1050%" y="815.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="98.8550%" y="789" width="0.0212%" height="15" fill="rgb(225,171,22)" fg:x="4662" fg:w="1"/><text x="99.1050%" y="799.50"></text></g><g><title>core::mem::drop (1 samples, 0.02%)</title><rect x="98.8550%" y="773" width="0.0212%" height="15" fill="rgb(253,152,51)" fg:x="4662" fg:w="1"/><text x="99.1050%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::boxed::Box&lt;[u8]&gt;,usize&gt;&gt; (1 samples, 0.02%)</title><rect x="98.8550%" y="757" width="0.0212%" height="15" fill="rgb(235,122,40)" fg:x="4662" fg:w="1"/><text x="99.1050%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="98.8550%" y="741" width="0.0212%" height="15" fill="rgb(240,72,17)" fg:x="4662" fg:w="1"/><text x="99.1050%" y="751.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::NFA::follow_transition (1 samples, 0.02%)</title><rect x="98.8762%" y="869" width="0.0212%" height="15" fill="rgb(245,172,39)" fg:x="4663" fg:w="1"/><text x="99.1262%" y="879.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::NFA::follow_transition_sparse (1 samples, 0.02%)</title><rect x="98.8762%" y="853" width="0.0212%" height="15" fill="rgb(231,136,53)" fg:x="4663" fg:w="1"/><text x="99.1262%" y="863.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Compiler::build_trie (2 samples, 0.04%)</title><rect x="98.8762%" y="885" width="0.0424%" height="15" fill="rgb(206,127,45)" fg:x="4663" fg:w="2"/><text x="99.1262%" y="895.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::NFA::add_transition (1 samples, 0.02%)</title><rect x="98.8974%" y="869" width="0.0212%" height="15" fill="rgb(213,191,43)" fg:x="4664" fg:w="1"/><text x="99.1474%" y="879.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (17 samples, 0.36%)</title><rect x="98.5793%" y="1077" width="0.3605%" height="15" fill="rgb(212,33,22)" fg:x="4649" fg:w="17"/><text x="98.8293%" y="1087.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many (17 samples, 0.36%)</title><rect x="98.5793%" y="1061" width="0.3605%" height="15" fill="rgb(236,25,32)" fg:x="4649" fg:w="17"/><text x="98.8293%" y="1071.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (17 samples, 0.36%)</title><rect x="98.5793%" y="1045" width="0.3605%" height="15" fill="rgb(250,142,30)" fg:x="4649" fg:w="17"/><text x="98.8293%" y="1055.50"></text></g><g><title>regex_automata::meta::strategy::new (17 samples, 0.36%)</title><rect x="98.5793%" y="1029" width="0.3605%" height="15" fill="rgb(243,171,22)" fg:x="4649" fg:w="17"/><text x="98.8293%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (4 samples, 0.08%)</title><rect x="98.8550%" y="1013" width="0.0848%" height="15" fill="rgb(225,8,7)" fg:x="4662" fg:w="4"/><text x="99.1050%" y="1023.50"></text></g><g><title>regex_automata::meta::strategy::new::{{closure}} (4 samples, 0.08%)</title><rect x="98.8550%" y="997" width="0.0848%" height="15" fill="rgb(238,100,15)" fg:x="4662" fg:w="4"/><text x="99.1050%" y="1007.50"></text></g><g><title>regex_automata::util::prefilter::Prefilter::new (4 samples, 0.08%)</title><rect x="98.8550%" y="981" width="0.0848%" height="15" fill="rgb(227,199,27)" fg:x="4662" fg:w="4"/><text x="99.1050%" y="991.50"></text></g><g><title>regex_automata::util::prefilter::Choice::new (4 samples, 0.08%)</title><rect x="98.8550%" y="965" width="0.0848%" height="15" fill="rgb(243,64,33)" fg:x="4662" fg:w="4"/><text x="99.1050%" y="975.50"></text></g><g><title>regex_automata::util::prefilter::teddy::Teddy::new (4 samples, 0.08%)</title><rect x="98.8550%" y="949" width="0.0848%" height="15" fill="rgb(207,155,0)" fg:x="4662" fg:w="4"/><text x="99.1050%" y="959.50"></text></g><g><title>aho_corasick::dfa::Builder::build (3 samples, 0.06%)</title><rect x="98.8762%" y="933" width="0.0636%" height="15" fill="rgb(212,91,25)" fg:x="4663" fg:w="3"/><text x="99.1262%" y="943.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Builder::build (3 samples, 0.06%)</title><rect x="98.8762%" y="917" width="0.0636%" height="15" fill="rgb(235,33,22)" fg:x="4663" fg:w="3"/><text x="99.1262%" y="927.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Compiler::compile (3 samples, 0.06%)</title><rect x="98.8762%" y="901" width="0.0636%" height="15" fill="rgb(253,203,15)" fg:x="4663" fg:w="3"/><text x="99.1262%" y="911.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Compiler::add_unanchored_start_state_loop (1 samples, 0.02%)</title><rect x="98.9186%" y="885" width="0.0212%" height="15" fill="rgb(237,137,51)" fg:x="4665" fg:w="1"/><text x="99.1686%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="98.9398%" y="789" width="0.0212%" height="15" fill="rgb(214,109,53)" fg:x="4666" fg:w="1"/><text x="99.1898%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.02%)</title><rect x="98.9398%" y="773" width="0.0212%" height="15" fill="rgb(254,35,30)" fg:x="4666" fg:w="1"/><text x="99.1898%" y="783.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.02%)</title><rect x="98.9398%" y="757" width="0.0212%" height="15" fill="rgb(226,169,23)" fg:x="4666" fg:w="1"/><text x="99.1898%" y="767.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (1 samples, 0.02%)</title><rect x="98.9398%" y="741" width="0.0212%" height="15" fill="rgb(205,130,14)" fg:x="4666" fg:w="1"/><text x="99.1898%" y="751.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 0.02%)</title><rect x="98.9398%" y="725" width="0.0212%" height="15" fill="rgb(235,200,16)" fg:x="4666" fg:w="1"/><text x="99.1898%" y="735.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.02%)</title><rect x="98.9398%" y="709" width="0.0212%" height="15" fill="rgb(213,34,18)" fg:x="4666" fg:w="1"/><text x="99.1898%" y="719.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (1 samples, 0.02%)</title><rect x="98.9398%" y="693" width="0.0212%" height="15" fill="rgb(253,35,22)" fg:x="4666" fg:w="1"/><text x="99.1898%" y="703.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::compile (1 samples, 0.02%)</title><rect x="98.9398%" y="677" width="0.0212%" height="15" fill="rgb(233,39,2)" fg:x="4666" fg:w="1"/><text x="99.1898%" y="687.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add_union (1 samples, 0.02%)</title><rect x="98.9398%" y="661" width="0.0212%" height="15" fill="rgb(247,38,8)" fg:x="4666" fg:w="1"/><text x="99.1898%" y="671.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add (1 samples, 0.02%)</title><rect x="98.9398%" y="645" width="0.0212%" height="15" fill="rgb(253,91,29)" fg:x="4666" fg:w="1"/><text x="99.1898%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="98.9398%" y="629" width="0.0212%" height="15" fill="rgb(241,229,15)" fg:x="4666" fg:w="1"/><text x="99.1898%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="98.9398%" y="613" width="0.0212%" height="15" fill="rgb(254,103,39)" fg:x="4666" fg:w="1"/><text x="99.1898%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="98.9398%" y="597" width="0.0212%" height="15" fill="rgb(254,53,35)" fg:x="4666" fg:w="1"/><text x="99.1898%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="98.9398%" y="581" width="0.0212%" height="15" fill="rgb(237,133,22)" fg:x="4666" fg:w="1"/><text x="99.1898%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="98.9398%" y="565" width="0.0212%" height="15" fill="rgb(237,156,49)" fg:x="4666" fg:w="1"/><text x="99.1898%" y="575.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="98.9398%" y="549" width="0.0212%" height="15" fill="rgb(214,150,36)" fg:x="4666" fg:w="1"/><text x="99.1898%" y="559.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="98.9398%" y="533" width="0.0212%" height="15" fill="rgb(254,47,34)" fg:x="4666" fg:w="1"/><text x="99.1898%" y="543.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.02%)</title><rect x="98.9398%" y="517" width="0.0212%" height="15" fill="rgb(254,73,4)" fg:x="4666" fg:w="1"/><text x="99.1898%" y="527.50"></text></g><g><title>_int_realloc (1 samples, 0.02%)</title><rect x="98.9398%" y="501" width="0.0212%" height="15" fill="rgb(231,75,41)" fg:x="4666" fg:w="1"/><text x="99.1898%" y="511.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="98.9398%" y="485" width="0.0212%" height="15" fill="rgb(222,219,51)" fg:x="4666" fg:w="1"/><text x="99.1898%" y="495.50"></text></g><g><title>sysmalloc (1 samples, 0.02%)</title><rect x="98.9398%" y="469" width="0.0212%" height="15" fill="rgb(237,64,10)" fg:x="4666" fg:w="1"/><text x="99.1898%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="98.9398%" y="453" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="4666" fg:w="1"/><text x="99.1898%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="98.9398%" y="437" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="4666" fg:w="1"/><text x="99.1898%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="98.9398%" y="421" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="4666" fg:w="1"/><text x="99.1898%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="98.9398%" y="405" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="4666" fg:w="1"/><text x="99.1898%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="98.9398%" y="389" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="4666" fg:w="1"/><text x="99.1898%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="98.9398%" y="373" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="4666" fg:w="1"/><text x="99.1898%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="98.9398%" y="357" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="4666" fg:w="1"/><text x="99.1898%" y="367.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::compile (1 samples, 0.02%)</title><rect x="98.9610%" y="677" width="0.0212%" height="15" fill="rgb(233,39,2)" fg:x="4667" fg:w="1"/><text x="99.2110%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="98.9610%" y="661" width="0.0212%" height="15" fill="rgb(241,229,15)" fg:x="4667" fg:w="1"/><text x="99.2110%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="98.9610%" y="645" width="0.0212%" height="15" fill="rgb(254,103,39)" fg:x="4667" fg:w="1"/><text x="99.2110%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="98.9610%" y="629" width="0.0212%" height="15" fill="rgb(254,53,35)" fg:x="4667" fg:w="1"/><text x="99.2110%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="98.9610%" y="613" width="0.0212%" height="15" fill="rgb(237,133,22)" fg:x="4667" fg:w="1"/><text x="99.2110%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="98.9610%" y="597" width="0.0212%" height="15" fill="rgb(237,156,49)" fg:x="4667" fg:w="1"/><text x="99.2110%" y="607.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="98.9610%" y="581" width="0.0212%" height="15" fill="rgb(214,150,36)" fg:x="4667" fg:w="1"/><text x="99.2110%" y="591.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="98.9610%" y="565" width="0.0212%" height="15" fill="rgb(254,47,34)" fg:x="4667" fg:w="1"/><text x="99.2110%" y="575.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.02%)</title><rect x="98.9610%" y="549" width="0.0212%" height="15" fill="rgb(254,73,4)" fg:x="4667" fg:w="1"/><text x="99.2110%" y="559.50"></text></g><g><title>_int_realloc (1 samples, 0.02%)</title><rect x="98.9610%" y="533" width="0.0212%" height="15" fill="rgb(231,75,41)" fg:x="4667" fg:w="1"/><text x="99.2110%" y="543.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="98.9610%" y="517" width="0.0212%" height="15" fill="rgb(222,219,51)" fg:x="4667" fg:w="1"/><text x="99.2110%" y="527.50"></text></g><g><title>regex_automata::nfa::thompson::map::Utf8SuffixMap::clear (1 samples, 0.02%)</title><rect x="98.9822%" y="549" width="0.0212%" height="15" fill="rgb(236,113,3)" fg:x="4668" fg:w="1"/><text x="99.2322%" y="559.50"></text></g><g><title>alloc::vec::from_elem (1 samples, 0.02%)</title><rect x="98.9822%" y="533" width="0.0212%" height="15" fill="rgb(208,109,54)" fg:x="4668" fg:w="1"/><text x="99.2322%" y="543.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1 samples, 0.02%)</title><rect x="98.9822%" y="517" width="0.0212%" height="15" fill="rgb(228,177,24)" fg:x="4668" fg:w="1"/><text x="99.2322%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (1 samples, 0.02%)</title><rect x="98.9822%" y="501" width="0.0212%" height="15" fill="rgb(216,52,5)" fg:x="4668" fg:w="1"/><text x="99.2322%" y="511.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="98.9822%" y="485" width="0.0212%" height="15" fill="rgb(209,143,44)" fg:x="4668" fg:w="1"/><text x="99.2322%" y="495.50"></text></g><g><title>regex::regex::bytes::Regex::new (4 samples, 0.08%)</title><rect x="98.9398%" y="1077" width="0.0848%" height="15" fill="rgb(246,224,25)" fg:x="4666" fg:w="4"/><text x="99.1898%" y="1087.50"></text></g><g><title>regex::builders::bytes::RegexBuilder::build (4 samples, 0.08%)</title><rect x="98.9398%" y="1061" width="0.0848%" height="15" fill="rgb(236,76,51)" fg:x="4666" fg:w="4"/><text x="99.1898%" y="1071.50"></text></g><g><title>regex::builders::Builder::build_one_bytes (4 samples, 0.08%)</title><rect x="98.9398%" y="1045" width="0.0848%" height="15" fill="rgb(233,102,7)" fg:x="4666" fg:w="4"/><text x="99.1898%" y="1055.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (4 samples, 0.08%)</title><rect x="98.9398%" y="1029" width="0.0848%" height="15" fill="rgb(212,33,22)" fg:x="4666" fg:w="4"/><text x="99.1898%" y="1039.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many (4 samples, 0.08%)</title><rect x="98.9398%" y="1013" width="0.0848%" height="15" fill="rgb(236,25,32)" fg:x="4666" fg:w="4"/><text x="99.1898%" y="1023.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (4 samples, 0.08%)</title><rect x="98.9398%" y="997" width="0.0848%" height="15" fill="rgb(250,142,30)" fg:x="4666" fg:w="4"/><text x="99.1898%" y="1007.50"></text></g><g><title>regex_automata::meta::strategy::new (4 samples, 0.08%)</title><rect x="98.9398%" y="981" width="0.0848%" height="15" fill="rgb(243,171,22)" fg:x="4666" fg:w="4"/><text x="99.1898%" y="991.50"></text></g><g><title>regex_automata::meta::strategy::Core::new (4 samples, 0.08%)</title><rect x="98.9398%" y="965" width="0.0848%" height="15" fill="rgb(222,69,27)" fg:x="4666" fg:w="4"/><text x="99.1898%" y="975.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (4 samples, 0.08%)</title><rect x="98.9398%" y="949" width="0.0848%" height="15" fill="rgb(226,42,16)" fg:x="4666" fg:w="4"/><text x="99.1898%" y="959.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (4 samples, 0.08%)</title><rect x="98.9398%" y="933" width="0.0848%" height="15" fill="rgb(242,129,17)" fg:x="4666" fg:w="4"/><text x="99.1898%" y="943.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (4 samples, 0.08%)</title><rect x="98.9398%" y="917" width="0.0848%" height="15" fill="rgb(247,137,3)" fg:x="4666" fg:w="4"/><text x="99.1898%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.08%)</title><rect x="98.9398%" y="901" width="0.0848%" height="15" fill="rgb(214,109,53)" fg:x="4666" fg:w="4"/><text x="99.1898%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.08%)</title><rect x="98.9398%" y="885" width="0.0848%" height="15" fill="rgb(254,35,30)" fg:x="4666" fg:w="4"/><text x="99.1898%" y="895.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (4 samples, 0.08%)</title><rect x="98.9398%" y="869" width="0.0848%" height="15" fill="rgb(226,169,23)" fg:x="4666" fg:w="4"/><text x="99.1898%" y="879.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile::{{closure}} (4 samples, 0.08%)</title><rect x="98.9398%" y="853" width="0.0848%" height="15" fill="rgb(218,216,52)" fg:x="4666" fg:w="4"/><text x="99.1898%" y="863.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (4 samples, 0.08%)</title><rect x="98.9398%" y="837" width="0.0848%" height="15" fill="rgb(235,200,16)" fg:x="4666" fg:w="4"/><text x="99.1898%" y="847.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (4 samples, 0.08%)</title><rect x="98.9398%" y="821" width="0.0848%" height="15" fill="rgb(213,34,18)" fg:x="4666" fg:w="4"/><text x="99.1898%" y="831.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (4 samples, 0.08%)</title><rect x="98.9398%" y="805" width="0.0848%" height="15" fill="rgb(210,105,37)" fg:x="4666" fg:w="4"/><text x="99.1898%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (3 samples, 0.06%)</title><rect x="98.9610%" y="789" width="0.0636%" height="15" fill="rgb(222,94,14)" fg:x="4667" fg:w="3"/><text x="99.2110%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.06%)</title><rect x="98.9610%" y="773" width="0.0636%" height="15" fill="rgb(254,35,30)" fg:x="4667" fg:w="3"/><text x="99.2110%" y="783.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (3 samples, 0.06%)</title><rect x="98.9610%" y="757" width="0.0636%" height="15" fill="rgb(226,169,23)" fg:x="4667" fg:w="3"/><text x="99.2110%" y="767.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (3 samples, 0.06%)</title><rect x="98.9610%" y="741" width="0.0636%" height="15" fill="rgb(205,130,14)" fg:x="4667" fg:w="3"/><text x="99.2110%" y="751.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (3 samples, 0.06%)</title><rect x="98.9610%" y="725" width="0.0636%" height="15" fill="rgb(235,200,16)" fg:x="4667" fg:w="3"/><text x="99.2110%" y="735.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (3 samples, 0.06%)</title><rect x="98.9610%" y="709" width="0.0636%" height="15" fill="rgb(213,34,18)" fg:x="4667" fg:w="3"/><text x="99.2110%" y="719.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (3 samples, 0.06%)</title><rect x="98.9610%" y="693" width="0.0636%" height="15" fill="rgb(253,35,22)" fg:x="4667" fg:w="3"/><text x="99.2110%" y="703.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (2 samples, 0.04%)</title><rect x="98.9822%" y="677" width="0.0424%" height="15" fill="rgb(247,137,3)" fg:x="4668" fg:w="2"/><text x="99.2322%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.04%)</title><rect x="98.9822%" y="661" width="0.0424%" height="15" fill="rgb(214,109,53)" fg:x="4668" fg:w="2"/><text x="99.2322%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.04%)</title><rect x="98.9822%" y="645" width="0.0424%" height="15" fill="rgb(254,35,30)" fg:x="4668" fg:w="2"/><text x="99.2322%" y="655.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.04%)</title><rect x="98.9822%" y="629" width="0.0424%" height="15" fill="rgb(226,169,23)" fg:x="4668" fg:w="2"/><text x="99.2322%" y="639.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice::{{closure}} (2 samples, 0.04%)</title><rect x="98.9822%" y="613" width="0.0424%" height="15" fill="rgb(223,145,12)" fg:x="4668" fg:w="2"/><text x="99.2322%" y="623.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (2 samples, 0.04%)</title><rect x="98.9822%" y="597" width="0.0424%" height="15" fill="rgb(213,34,18)" fg:x="4668" fg:w="2"/><text x="99.2322%" y="607.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class (2 samples, 0.04%)</title><rect x="98.9822%" y="581" width="0.0424%" height="15" fill="rgb(246,38,12)" fg:x="4668" fg:w="2"/><text x="99.2322%" y="591.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class_reverse_with_suffix (2 samples, 0.04%)</title><rect x="98.9822%" y="565" width="0.0424%" height="15" fill="rgb(227,194,49)" fg:x="4668" fg:w="2"/><text x="99.2322%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="99.0246%" y="533" width="0.0212%" height="15" fill="rgb(249,207,12)" fg:x="4670" fg:w="1"/><text x="99.2746%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="99.0246%" y="517" width="0.0212%" height="15" fill="rgb(224,194,14)" fg:x="4670" fg:w="1"/><text x="99.2746%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect x="99.0246%" y="501" width="0.0212%" height="15" fill="rgb(227,204,5)" fg:x="4670" fg:w="1"/><text x="99.2746%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="99.0246%" y="485" width="0.0212%" height="15" fill="rgb(231,114,21)" fg:x="4670" fg:w="1"/><text x="99.2746%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="99.0246%" y="469" width="0.0212%" height="15" fill="rgb(238,209,2)" fg:x="4670" fg:w="1"/><text x="99.2746%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="99.0246%" y="453" width="0.0212%" height="15" fill="rgb(253,135,41)" fg:x="4670" fg:w="1"/><text x="99.2746%" y="463.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="99.0246%" y="437" width="0.0212%" height="15" fill="rgb(206,112,53)" fg:x="4670" fg:w="1"/><text x="99.2746%" y="447.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="99.0246%" y="421" width="0.0212%" height="15" fill="rgb(222,219,51)" fg:x="4670" fg:w="1"/><text x="99.2746%" y="431.50"></text></g><g><title>sysmalloc (1 samples, 0.02%)</title><rect x="99.0246%" y="405" width="0.0212%" height="15" fill="rgb(237,64,10)" fg:x="4670" fg:w="1"/><text x="99.2746%" y="415.50"></text></g><g><title>grow_heap (1 samples, 0.02%)</title><rect x="99.0246%" y="389" width="0.0212%" height="15" fill="rgb(231,135,3)" fg:x="4670" fg:w="1"/><text x="99.2746%" y="399.50"></text></g><g><title>__GI___mprotect (1 samples, 0.02%)</title><rect x="99.0246%" y="373" width="0.0212%" height="15" fill="rgb(209,155,30)" fg:x="4670" fg:w="1"/><text x="99.2746%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="99.0246%" y="357" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="4670" fg:w="1"/><text x="99.2746%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="99.0246%" y="341" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="4670" fg:w="1"/><text x="99.2746%" y="351.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="99.0246%" y="325" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="4670" fg:w="1"/><text x="99.2746%" y="335.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="99.0246%" y="309" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="4670" fg:w="1"/><text x="99.2746%" y="319.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="99.0246%" y="293" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="4670" fg:w="1"/><text x="99.2746%" y="303.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="99.0246%" y="277" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="4670" fg:w="1"/><text x="99.2746%" y="287.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="99.0246%" y="261" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="4670" fg:w="1"/><text x="99.2746%" y="271.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="99.0246%" y="245" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="4670" fg:w="1"/><text x="99.2746%" y="255.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.08%)</title><rect x="99.0458%" y="389" width="0.0848%" height="15" fill="rgb(210,204,4)" fg:x="4671" fg:w="4"/><text x="99.2958%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.08%)</title><rect x="99.0458%" y="373" width="0.0848%" height="15" fill="rgb(210,204,4)" fg:x="4671" fg:w="4"/><text x="99.2958%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="99.0458%" y="405" width="0.1060%" height="15" fill="rgb(210,204,4)" fg:x="4671" fg:w="5"/><text x="99.2958%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="99.0458%" y="437" width="0.1272%" height="15" fill="rgb(210,204,4)" fg:x="4671" fg:w="6"/><text x="99.2958%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="99.0458%" y="421" width="0.1272%" height="15" fill="rgb(210,204,4)" fg:x="4671" fg:w="6"/><text x="99.2958%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.15%)</title><rect x="99.0458%" y="485" width="0.1484%" height="15" fill="rgb(210,204,4)" fg:x="4671" fg:w="7"/><text x="99.2958%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.15%)</title><rect x="99.0458%" y="469" width="0.1484%" height="15" fill="rgb(210,204,4)" fg:x="4671" fg:w="7"/><text x="99.2958%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.15%)</title><rect x="99.0458%" y="453" width="0.1484%" height="15" fill="rgb(210,204,4)" fg:x="4671" fg:w="7"/><text x="99.2958%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (9 samples, 0.19%)</title><rect x="99.0458%" y="501" width="0.1908%" height="15" fill="rgb(210,204,4)" fg:x="4671" fg:w="9"/><text x="99.2958%" y="511.50"></text></g><g><title>core::ptr::write (12 samples, 0.25%)</title><rect x="99.0458%" y="517" width="0.2545%" height="15" fill="rgb(209,143,44)" fg:x="4671" fg:w="12"/><text x="99.2958%" y="527.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.04%)</title><rect x="99.3003%" y="517" width="0.0424%" height="15" fill="rgb(246,165,53)" fg:x="4683" fg:w="2"/><text x="99.5503%" y="527.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.04%)</title><rect x="99.3003%" y="501" width="0.0424%" height="15" fill="rgb(226,134,37)" fg:x="4683" fg:w="2"/><text x="99.5503%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2 samples, 0.04%)</title><rect x="99.3003%" y="485" width="0.0424%" height="15" fill="rgb(232,29,30)" fg:x="4683" fg:w="2"/><text x="99.5503%" y="495.50"></text></g><g><title>&lt;regex_automata::util::primitives::StateID as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="99.3427%" y="485" width="0.0212%" height="15" fill="rgb(234,185,22)" fg:x="4685" fg:w="1"/><text x="99.5927%" y="495.50"></text></g><g><title>__memmove_avx512_unaligned_erms (7 samples, 0.15%)</title><rect x="99.3639%" y="389" width="0.1484%" height="15" fill="rgb(217,126,36)" fg:x="4686" fg:w="7"/><text x="99.6139%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (8 samples, 0.17%)</title><rect x="99.3639%" y="421" width="0.1696%" height="15" fill="rgb(222,107,1)" fg:x="4686" fg:w="8"/><text x="99.6139%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.17%)</title><rect x="99.3639%" y="405" width="0.1696%" height="15" fill="rgb(214,20,35)" fg:x="4686" fg:w="8"/><text x="99.6139%" y="415.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (26 samples, 0.55%)</title><rect x="99.0246%" y="725" width="0.5513%" height="15" fill="rgb(210,105,37)" fg:x="4670" fg:w="26"/><text x="99.2746%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.55%)</title><rect x="99.0246%" y="709" width="0.5513%" height="15" fill="rgb(214,109,53)" fg:x="4670" fg:w="26"/><text x="99.2746%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (26 samples, 0.55%)</title><rect x="99.0246%" y="693" width="0.5513%" height="15" fill="rgb(254,35,30)" fg:x="4670" fg:w="26"/><text x="99.2746%" y="703.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (26 samples, 0.55%)</title><rect x="99.0246%" y="677" width="0.5513%" height="15" fill="rgb(226,169,23)" fg:x="4670" fg:w="26"/><text x="99.2746%" y="687.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (26 samples, 0.55%)</title><rect x="99.0246%" y="661" width="0.5513%" height="15" fill="rgb(205,130,14)" fg:x="4670" fg:w="26"/><text x="99.2746%" y="671.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (26 samples, 0.55%)</title><rect x="99.0246%" y="645" width="0.5513%" height="15" fill="rgb(213,34,18)" fg:x="4670" fg:w="26"/><text x="99.2746%" y="655.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class (26 samples, 0.55%)</title><rect x="99.0246%" y="629" width="0.5513%" height="15" fill="rgb(246,38,12)" fg:x="4670" fg:w="26"/><text x="99.2746%" y="639.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::new (26 samples, 0.55%)</title><rect x="99.0246%" y="613" width="0.5513%" height="15" fill="rgb(211,200,20)" fg:x="4670" fg:w="26"/><text x="99.2746%" y="623.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8State::clear (26 samples, 0.55%)</title><rect x="99.0246%" y="597" width="0.5513%" height="15" fill="rgb(241,127,0)" fg:x="4670" fg:w="26"/><text x="99.2746%" y="607.50"></text></g><g><title>regex_automata::nfa::thompson::map::Utf8BoundedMap::clear (26 samples, 0.55%)</title><rect x="99.0246%" y="581" width="0.5513%" height="15" fill="rgb(207,86,25)" fg:x="4670" fg:w="26"/><text x="99.2746%" y="591.50"></text></g><g><title>alloc::vec::from_elem (26 samples, 0.55%)</title><rect x="99.0246%" y="565" width="0.5513%" height="15" fill="rgb(208,109,54)" fg:x="4670" fg:w="26"/><text x="99.2746%" y="575.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (26 samples, 0.55%)</title><rect x="99.0246%" y="549" width="0.5513%" height="15" fill="rgb(228,177,24)" fg:x="4670" fg:w="26"/><text x="99.2746%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (25 samples, 0.53%)</title><rect x="99.0458%" y="533" width="0.5301%" height="15" fill="rgb(216,52,5)" fg:x="4671" fg:w="25"/><text x="99.2958%" y="543.50"></text></g><g><title>&lt;alloc::vec::ExtendElement&lt;T&gt; as alloc::vec::ExtendWith&lt;T&gt;&gt;::next (11 samples, 0.23%)</title><rect x="99.3427%" y="517" width="0.2332%" height="15" fill="rgb(216,123,15)" fg:x="4685" fg:w="11"/><text x="99.5927%" y="527.50"></text></g><g><title>&lt;regex_automata::nfa::thompson::map::Utf8BoundedEntry as core::clone::Clone&gt;::clone (11 samples, 0.23%)</title><rect x="99.3427%" y="501" width="0.2332%" height="15" fill="rgb(211,18,41)" fg:x="4685" fg:w="11"/><text x="99.5927%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.21%)</title><rect x="99.3639%" y="485" width="0.2120%" height="15" fill="rgb(239,104,10)" fg:x="4686" fg:w="10"/><text x="99.6139%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10 samples, 0.21%)</title><rect x="99.3639%" y="469" width="0.2120%" height="15" fill="rgb(229,121,46)" fg:x="4686" fg:w="10"/><text x="99.6139%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (10 samples, 0.21%)</title><rect x="99.3639%" y="453" width="0.2120%" height="15" fill="rgb(221,172,50)" fg:x="4686" fg:w="10"/><text x="99.6139%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10 samples, 0.21%)</title><rect x="99.3639%" y="437" width="0.2120%" height="15" fill="rgb(216,42,52)" fg:x="4686" fg:w="10"/><text x="99.6139%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.04%)</title><rect x="99.5335%" y="421" width="0.0424%" height="15" fill="rgb(249,207,12)" fg:x="4694" fg:w="2"/><text x="99.7835%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.04%)</title><rect x="99.5335%" y="405" width="0.0424%" height="15" fill="rgb(224,194,14)" fg:x="4694" fg:w="2"/><text x="99.7835%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.04%)</title><rect x="99.5335%" y="389" width="0.0424%" height="15" fill="rgb(227,204,5)" fg:x="4694" fg:w="2"/><text x="99.7835%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.04%)</title><rect x="99.5759%" y="357" width="0.0424%" height="15" fill="rgb(210,204,4)" fg:x="4696" fg:w="2"/><text x="99.8259%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.06%)</title><rect x="99.5759%" y="373" width="0.0636%" height="15" fill="rgb(210,204,4)" fg:x="4696" fg:w="3"/><text x="99.8259%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.08%)</title><rect x="99.5759%" y="405" width="0.0848%" height="15" fill="rgb(210,204,4)" fg:x="4696" fg:w="4"/><text x="99.8259%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.08%)</title><rect x="99.5759%" y="389" width="0.0848%" height="15" fill="rgb(210,204,4)" fg:x="4696" fg:w="4"/><text x="99.8259%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="99.5759%" y="421" width="0.1060%" height="15" fill="rgb(210,204,4)" fg:x="4696" fg:w="5"/><text x="99.8259%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="99.5759%" y="453" width="0.1272%" height="15" fill="rgb(210,204,4)" fg:x="4696" fg:w="6"/><text x="99.8259%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="99.5759%" y="437" width="0.1272%" height="15" fill="rgb(210,204,4)" fg:x="4696" fg:w="6"/><text x="99.8259%" y="447.50"></text></g><g><title>core::ptr::write (7 samples, 0.15%)</title><rect x="99.5759%" y="501" width="0.1484%" height="15" fill="rgb(209,143,44)" fg:x="4696" fg:w="7"/><text x="99.8259%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.15%)</title><rect x="99.5759%" y="485" width="0.1484%" height="15" fill="rgb(210,204,4)" fg:x="4696" fg:w="7"/><text x="99.8259%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.15%)</title><rect x="99.5759%" y="469" width="0.1484%" height="15" fill="rgb(210,204,4)" fg:x="4696" fg:w="7"/><text x="99.8259%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.02%)</title><rect x="99.7243%" y="469" width="0.0212%" height="15" fill="rgb(232,29,30)" fg:x="4703" fg:w="1"/><text x="99.9743%" y="479.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.04%)</title><rect x="99.7243%" y="501" width="0.0424%" height="15" fill="rgb(246,165,53)" fg:x="4703" fg:w="2"/><text x="99.9743%" y="511.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.04%)</title><rect x="99.7243%" y="485" width="0.0424%" height="15" fill="rgb(226,134,37)" fg:x="4703" fg:w="2"/><text x="99.9743%" y="495.50"></text></g><g><title>&lt;regex_automata::util::primitives::StateID as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="99.7668%" y="469" width="0.0212%" height="15" fill="rgb(234,185,22)" fg:x="4705" fg:w="1"/><text x="100.0168%" y="479.50"></text></g><g><title>__memmove_avx512_unaligned_erms (4 samples, 0.08%)</title><rect x="99.7880%" y="373" width="0.0848%" height="15" fill="rgb(217,126,36)" fg:x="4706" fg:w="4"/><text x="100.0380%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (5 samples, 0.11%)</title><rect x="99.7880%" y="405" width="0.1060%" height="15" fill="rgb(222,107,1)" fg:x="4706" fg:w="5"/><text x="100.0380%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.11%)</title><rect x="99.7880%" y="389" width="0.1060%" height="15" fill="rgb(214,20,35)" fg:x="4706" fg:w="5"/><text x="100.0380%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.13%)</title><rect x="99.7880%" y="453" width="0.1272%" height="15" fill="rgb(229,121,46)" fg:x="4706" fg:w="6"/><text x="100.0380%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.13%)</title><rect x="99.7880%" y="437" width="0.1272%" height="15" fill="rgb(221,172,50)" fg:x="4706" fg:w="6"/><text x="100.0380%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.13%)</title><rect x="99.7880%" y="421" width="0.1272%" height="15" fill="rgb(216,42,52)" fg:x="4706" fg:w="6"/><text x="100.0380%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="99.8940%" y="405" width="0.0212%" height="15" fill="rgb(249,207,12)" fg:x="4711" fg:w="1"/><text x="100.1440%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="99.8940%" y="389" width="0.0212%" height="15" fill="rgb(224,194,14)" fg:x="4711" fg:w="1"/><text x="100.1440%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect x="99.8940%" y="373" width="0.0212%" height="15" fill="rgb(227,204,5)" fg:x="4711" fg:w="1"/><text x="100.1440%" y="383.50"></text></g><g><title>regex_automata::meta::strategy::Core::new (43 samples, 0.91%)</title><rect x="99.0246%" y="997" width="0.9118%" height="15" fill="rgb(222,69,27)" fg:x="4670" fg:w="43"/><text x="99.2746%" y="1007.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (43 samples, 0.91%)</title><rect x="99.0246%" y="981" width="0.9118%" height="15" fill="rgb(226,42,16)" fg:x="4670" fg:w="43"/><text x="99.2746%" y="991.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (43 samples, 0.91%)</title><rect x="99.0246%" y="965" width="0.9118%" height="15" fill="rgb(242,129,17)" fg:x="4670" fg:w="43"/><text x="99.2746%" y="975.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (43 samples, 0.91%)</title><rect x="99.0246%" y="949" width="0.9118%" height="15" fill="rgb(247,137,3)" fg:x="4670" fg:w="43"/><text x="99.2746%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (43 samples, 0.91%)</title><rect x="99.0246%" y="933" width="0.9118%" height="15" fill="rgb(214,109,53)" fg:x="4670" fg:w="43"/><text x="99.2746%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (43 samples, 0.91%)</title><rect x="99.0246%" y="917" width="0.9118%" height="15" fill="rgb(254,35,30)" fg:x="4670" fg:w="43"/><text x="99.2746%" y="927.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (43 samples, 0.91%)</title><rect x="99.0246%" y="901" width="0.9118%" height="15" fill="rgb(226,169,23)" fg:x="4670" fg:w="43"/><text x="99.2746%" y="911.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile::{{closure}} (43 samples, 0.91%)</title><rect x="99.0246%" y="885" width="0.9118%" height="15" fill="rgb(218,216,52)" fg:x="4670" fg:w="43"/><text x="99.2746%" y="895.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (43 samples, 0.91%)</title><rect x="99.0246%" y="869" width="0.9118%" height="15" fill="rgb(235,200,16)" fg:x="4670" fg:w="43"/><text x="99.2746%" y="879.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (43 samples, 0.91%)</title><rect x="99.0246%" y="853" width="0.9118%" height="15" fill="rgb(213,34,18)" fg:x="4670" fg:w="43"/><text x="99.2746%" y="863.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (43 samples, 0.91%)</title><rect x="99.0246%" y="837" width="0.9118%" height="15" fill="rgb(210,105,37)" fg:x="4670" fg:w="43"/><text x="99.2746%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (43 samples, 0.91%)</title><rect x="99.0246%" y="821" width="0.9118%" height="15" fill="rgb(214,109,53)" fg:x="4670" fg:w="43"/><text x="99.2746%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (43 samples, 0.91%)</title><rect x="99.0246%" y="805" width="0.9118%" height="15" fill="rgb(254,35,30)" fg:x="4670" fg:w="43"/><text x="99.2746%" y="815.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (43 samples, 0.91%)</title><rect x="99.0246%" y="789" width="0.9118%" height="15" fill="rgb(226,169,23)" fg:x="4670" fg:w="43"/><text x="99.2746%" y="799.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (43 samples, 0.91%)</title><rect x="99.0246%" y="773" width="0.9118%" height="15" fill="rgb(205,130,14)" fg:x="4670" fg:w="43"/><text x="99.2746%" y="783.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (43 samples, 0.91%)</title><rect x="99.0246%" y="757" width="0.9118%" height="15" fill="rgb(235,200,16)" fg:x="4670" fg:w="43"/><text x="99.2746%" y="767.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (43 samples, 0.91%)</title><rect x="99.0246%" y="741" width="0.9118%" height="15" fill="rgb(213,34,18)" fg:x="4670" fg:w="43"/><text x="99.2746%" y="751.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (17 samples, 0.36%)</title><rect x="99.5759%" y="725" width="0.3605%" height="15" fill="rgb(253,35,22)" fg:x="4696" fg:w="17"/><text x="99.8259%" y="735.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (17 samples, 0.36%)</title><rect x="99.5759%" y="709" width="0.3605%" height="15" fill="rgb(247,137,3)" fg:x="4696" fg:w="17"/><text x="99.8259%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.36%)</title><rect x="99.5759%" y="693" width="0.3605%" height="15" fill="rgb(214,109,53)" fg:x="4696" fg:w="17"/><text x="99.8259%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (17 samples, 0.36%)</title><rect x="99.5759%" y="677" width="0.3605%" height="15" fill="rgb(254,35,30)" fg:x="4696" fg:w="17"/><text x="99.8259%" y="687.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (17 samples, 0.36%)</title><rect x="99.5759%" y="661" width="0.3605%" height="15" fill="rgb(226,169,23)" fg:x="4696" fg:w="17"/><text x="99.8259%" y="671.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice::{{closure}} (17 samples, 0.36%)</title><rect x="99.5759%" y="645" width="0.3605%" height="15" fill="rgb(223,145,12)" fg:x="4696" fg:w="17"/><text x="99.8259%" y="655.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (17 samples, 0.36%)</title><rect x="99.5759%" y="629" width="0.3605%" height="15" fill="rgb(213,34,18)" fg:x="4696" fg:w="17"/><text x="99.8259%" y="639.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class (17 samples, 0.36%)</title><rect x="99.5759%" y="613" width="0.3605%" height="15" fill="rgb(246,38,12)" fg:x="4696" fg:w="17"/><text x="99.8259%" y="623.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::new (17 samples, 0.36%)</title><rect x="99.5759%" y="597" width="0.3605%" height="15" fill="rgb(211,200,20)" fg:x="4696" fg:w="17"/><text x="99.8259%" y="607.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8State::clear (17 samples, 0.36%)</title><rect x="99.5759%" y="581" width="0.3605%" height="15" fill="rgb(241,127,0)" fg:x="4696" fg:w="17"/><text x="99.8259%" y="591.50"></text></g><g><title>regex_automata::nfa::thompson::map::Utf8BoundedMap::clear (17 samples, 0.36%)</title><rect x="99.5759%" y="565" width="0.3605%" height="15" fill="rgb(207,86,25)" fg:x="4696" fg:w="17"/><text x="99.8259%" y="575.50"></text></g><g><title>alloc::vec::from_elem (17 samples, 0.36%)</title><rect x="99.5759%" y="549" width="0.3605%" height="15" fill="rgb(208,109,54)" fg:x="4696" fg:w="17"/><text x="99.8259%" y="559.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (17 samples, 0.36%)</title><rect x="99.5759%" y="533" width="0.3605%" height="15" fill="rgb(228,177,24)" fg:x="4696" fg:w="17"/><text x="99.8259%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (17 samples, 0.36%)</title><rect x="99.5759%" y="517" width="0.3605%" height="15" fill="rgb(216,52,5)" fg:x="4696" fg:w="17"/><text x="99.8259%" y="527.50"></text></g><g><title>&lt;alloc::vec::ExtendElement&lt;T&gt; as alloc::vec::ExtendWith&lt;T&gt;&gt;::next (8 samples, 0.17%)</title><rect x="99.7668%" y="501" width="0.1696%" height="15" fill="rgb(216,123,15)" fg:x="4705" fg:w="8"/><text x="100.0168%" y="511.50"></text></g><g><title>&lt;regex_automata::nfa::thompson::map::Utf8BoundedEntry as core::clone::Clone&gt;::clone (8 samples, 0.17%)</title><rect x="99.7668%" y="485" width="0.1696%" height="15" fill="rgb(211,18,41)" fg:x="4705" fg:w="8"/><text x="100.0168%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.15%)</title><rect x="99.7880%" y="469" width="0.1484%" height="15" fill="rgb(239,104,10)" fg:x="4706" fg:w="7"/><text x="100.0380%" y="479.50"></text></g><g><title>aho_corasick::dfa::Builder::finish_build_one_start::{{closure}} (1 samples, 0.02%)</title><rect x="99.9364%" y="853" width="0.0212%" height="15" fill="rgb(251,205,26)" fg:x="4713" fg:w="1"/><text x="100.1864%" y="863.50"></text></g><g><title>[unknown] (247 samples, 5.24%)</title><rect x="94.7413%" y="1093" width="5.2375%" height="15" fill="rgb(227,28,50)" fg:x="4468" fg:w="247"/><text x="94.9913%" y="1103.50">[unkno..</text></g><g><title>regex::builders::Builder::build_one_bytes (45 samples, 0.95%)</title><rect x="99.0246%" y="1077" width="0.9542%" height="15" fill="rgb(233,102,7)" fg:x="4670" fg:w="45"/><text x="99.2746%" y="1087.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (45 samples, 0.95%)</title><rect x="99.0246%" y="1061" width="0.9542%" height="15" fill="rgb(212,33,22)" fg:x="4670" fg:w="45"/><text x="99.2746%" y="1071.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many (45 samples, 0.95%)</title><rect x="99.0246%" y="1045" width="0.9542%" height="15" fill="rgb(236,25,32)" fg:x="4670" fg:w="45"/><text x="99.2746%" y="1055.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (45 samples, 0.95%)</title><rect x="99.0246%" y="1029" width="0.9542%" height="15" fill="rgb(250,142,30)" fg:x="4670" fg:w="45"/><text x="99.2746%" y="1039.50"></text></g><g><title>regex_automata::meta::strategy::new (45 samples, 0.95%)</title><rect x="99.0246%" y="1013" width="0.9542%" height="15" fill="rgb(243,171,22)" fg:x="4670" fg:w="45"/><text x="99.2746%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (2 samples, 0.04%)</title><rect x="99.9364%" y="997" width="0.0424%" height="15" fill="rgb(225,8,7)" fg:x="4713" fg:w="2"/><text x="100.1864%" y="1007.50"></text></g><g><title>regex_automata::meta::strategy::new::{{closure}} (2 samples, 0.04%)</title><rect x="99.9364%" y="981" width="0.0424%" height="15" fill="rgb(238,100,15)" fg:x="4713" fg:w="2"/><text x="100.1864%" y="991.50"></text></g><g><title>regex_automata::util::prefilter::Prefilter::new (2 samples, 0.04%)</title><rect x="99.9364%" y="965" width="0.0424%" height="15" fill="rgb(227,199,27)" fg:x="4713" fg:w="2"/><text x="100.1864%" y="975.50"></text></g><g><title>regex_automata::util::prefilter::Choice::new (2 samples, 0.04%)</title><rect x="99.9364%" y="949" width="0.0424%" height="15" fill="rgb(243,64,33)" fg:x="4713" fg:w="2"/><text x="100.1864%" y="959.50"></text></g><g><title>regex_automata::util::prefilter::teddy::Teddy::new (2 samples, 0.04%)</title><rect x="99.9364%" y="933" width="0.0424%" height="15" fill="rgb(207,155,0)" fg:x="4713" fg:w="2"/><text x="100.1864%" y="943.50"></text></g><g><title>aho_corasick::dfa::Builder::build (2 samples, 0.04%)</title><rect x="99.9364%" y="917" width="0.0424%" height="15" fill="rgb(212,91,25)" fg:x="4713" fg:w="2"/><text x="100.1864%" y="927.50"></text></g><g><title>aho_corasick::dfa::Builder::build_from_noncontiguous (2 samples, 0.04%)</title><rect x="99.9364%" y="901" width="0.0424%" height="15" fill="rgb(231,220,22)" fg:x="4713" fg:w="2"/><text x="100.1864%" y="911.50"></text></g><g><title>aho_corasick::dfa::Builder::finish_build_one_start (2 samples, 0.04%)</title><rect x="99.9364%" y="885" width="0.0424%" height="15" fill="rgb(242,31,54)" fg:x="4713" fg:w="2"/><text x="100.1864%" y="895.50"></text></g><g><title>aho_corasick::dfa::sparse_iter (2 samples, 0.04%)</title><rect x="99.9364%" y="869" width="0.0424%" height="15" fill="rgb(223,225,36)" fg:x="4713" fg:w="2"/><text x="100.1864%" y="879.50"></text></g><g><title>all (4,716 samples, 100%)</title><rect x="0.0000%" y="1125" width="100.0000%" height="15" fill="rgb(206,183,37)" fg:x="0" fg:w="4716"/><text x="0.2500%" y="1135.50"></text></g><g><title>gen-99999-1-Mot (2,610 samples, 55.34%)</title><rect x="44.6565%" y="1109" width="55.3435%" height="15" fill="rgb(250,27,1)" fg:x="2106" fg:w="2610"/><text x="44.9065%" y="1119.50">gen-99999-1-Mot</text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="99.9788%" y="1093" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="4715" fg:w="1"/><text x="100.2288%" y="1103.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="99.9788%" y="1077" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="4715" fg:w="1"/><text x="100.2288%" y="1087.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="99.9788%" y="1061" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="4715" fg:w="1"/><text x="100.2288%" y="1071.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="99.9788%" y="1045" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="4715" fg:w="1"/><text x="100.2288%" y="1055.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="99.9788%" y="1029" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="4715" fg:w="1"/><text x="100.2288%" y="1039.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="99.9788%" y="1013" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="4715" fg:w="1"/><text x="100.2288%" y="1023.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="99.9788%" y="997" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="4715" fg:w="1"/><text x="100.2288%" y="1007.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="99.9788%" y="981" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="4715" fg:w="1"/><text x="100.2288%" y="991.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="99.9788%" y="965" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="4715" fg:w="1"/><text x="100.2288%" y="975.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="99.9788%" y="949" width="0.0212%" height="15" fill="rgb(210,204,4)" fg:x="4715" fg:w="1"/><text x="100.2288%" y="959.50"></text></g></svg></svg>