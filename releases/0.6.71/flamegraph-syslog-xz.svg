<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1126" onload="init(evt)" viewBox="0 0 1200 1126" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: super_speedy_syslog_searcher 0.6.71; git: 369bf08; -freq 5000; created 20240416T000552-0700--><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1126" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1109.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1109.00"> </text><svg id="frames" x="10" width="1180" total_samples="284"><g><title>_dl_unload_cache (1 samples, 0.35%)</title><rect x="0.0000%" y="965" width="0.3521%" height="15" fill="rgb(247,146,21)" fg:x="0" fg:w="1"/><text x="0.2500%" y="975.50"></text></g><g><title>munmap (1 samples, 0.35%)</title><rect x="0.0000%" y="949" width="0.3521%" height="15" fill="rgb(209,162,22)" fg:x="0" fg:w="1"/><text x="0.2500%" y="959.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="0.0000%" y="933" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="0" fg:w="1"/><text x="0.2500%" y="943.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="0.0000%" y="917" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="0" fg:w="1"/><text x="0.2500%" y="927.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="0.0000%" y="901" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="0" fg:w="1"/><text x="0.2500%" y="911.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="0.0000%" y="885" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="0" fg:w="1"/><text x="0.2500%" y="895.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="0.0000%" y="869" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="0" fg:w="1"/><text x="0.2500%" y="879.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="0.0000%" y="853" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="0" fg:w="1"/><text x="0.2500%" y="863.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="0.0000%" y="837" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="0" fg:w="1"/><text x="0.2500%" y="847.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="0.0000%" y="821" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="0" fg:w="1"/><text x="0.2500%" y="831.50"></text></g><g><title>elf_dynamic_do_Rela (1 samples, 0.35%)</title><rect x="0.3521%" y="949" width="0.3521%" height="15" fill="rgb(234,90,53)" fg:x="1" fg:w="1"/><text x="0.6021%" y="959.50"></text></g><g><title>elf_machine_rela_relative (1 samples, 0.35%)</title><rect x="0.3521%" y="933" width="0.3521%" height="15" fill="rgb(215,35,45)" fg:x="1" fg:w="1"/><text x="0.6021%" y="943.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="0.3521%" y="917" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="1" fg:w="1"/><text x="0.6021%" y="927.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="0.3521%" y="901" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="1" fg:w="1"/><text x="0.6021%" y="911.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="0.3521%" y="885" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="1" fg:w="1"/><text x="0.6021%" y="895.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="0.3521%" y="869" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="1" fg:w="1"/><text x="0.6021%" y="879.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="0.3521%" y="853" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="1" fg:w="1"/><text x="0.6021%" y="863.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="0.3521%" y="837" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="1" fg:w="1"/><text x="0.6021%" y="847.50"></text></g><g><title>_dl_relocate_object (2 samples, 0.70%)</title><rect x="0.3521%" y="965" width="0.7042%" height="15" fill="rgb(244,75,35)" fg:x="1" fg:w="2"/><text x="0.6021%" y="975.50"></text></g><g><title>_dl_protect_relro (1 samples, 0.35%)</title><rect x="0.7042%" y="949" width="0.3521%" height="15" fill="rgb(234,138,23)" fg:x="2" fg:w="1"/><text x="0.9542%" y="959.50"></text></g><g><title>__mprotect (1 samples, 0.35%)</title><rect x="0.7042%" y="933" width="0.3521%" height="15" fill="rgb(236,147,42)" fg:x="2" fg:w="1"/><text x="0.9542%" y="943.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="0.7042%" y="917" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="2" fg:w="1"/><text x="0.9542%" y="927.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="0.7042%" y="901" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="2" fg:w="1"/><text x="0.9542%" y="911.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="0.7042%" y="885" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="2" fg:w="1"/><text x="0.9542%" y="895.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="0.7042%" y="869" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="2" fg:w="1"/><text x="0.9542%" y="879.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="0.7042%" y="853" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="2" fg:w="1"/><text x="0.9542%" y="863.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="0.7042%" y="837" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="2" fg:w="1"/><text x="0.9542%" y="847.50"></text></g><g><title>_dl_start (4 samples, 1.41%)</title><rect x="0.0000%" y="1029" width="1.4085%" height="15" fill="rgb(214,13,30)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1039.50"></text></g><g><title>_dl_start_final (4 samples, 1.41%)</title><rect x="0.0000%" y="1013" width="1.4085%" height="15" fill="rgb(222,52,46)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1023.50"></text></g><g><title>_dl_sysdep_start (4 samples, 1.41%)</title><rect x="0.0000%" y="997" width="1.4085%" height="15" fill="rgb(238,104,49)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1007.50"></text></g><g><title>dl_main (4 samples, 1.41%)</title><rect x="0.0000%" y="981" width="1.4085%" height="15" fill="rgb(253,59,10)" fg:x="0" fg:w="4"/><text x="0.2500%" y="991.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.35%)</title><rect x="1.0563%" y="965" width="0.3521%" height="15" fill="rgb(208,68,2)" fg:x="3" fg:w="1"/><text x="1.3063%" y="975.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.35%)</title><rect x="1.0563%" y="949" width="0.3521%" height="15" fill="rgb(238,71,42)" fg:x="3" fg:w="1"/><text x="1.3063%" y="959.50"></text></g><g><title>openaux (1 samples, 0.35%)</title><rect x="1.0563%" y="933" width="0.3521%" height="15" fill="rgb(215,55,1)" fg:x="3" fg:w="1"/><text x="1.3063%" y="943.50"></text></g><g><title>_dl_map_object (1 samples, 0.35%)</title><rect x="1.0563%" y="917" width="0.3521%" height="15" fill="rgb(247,77,9)" fg:x="3" fg:w="1"/><text x="1.3063%" y="927.50"></text></g><g><title>_dl_map_object_from_fd (1 samples, 0.35%)</title><rect x="1.0563%" y="901" width="0.3521%" height="15" fill="rgb(253,121,32)" fg:x="3" fg:w="1"/><text x="1.3063%" y="911.50"></text></g><g><title>_dl_map_segments (1 samples, 0.35%)</title><rect x="1.0563%" y="885" width="0.3521%" height="15" fill="rgb(231,61,38)" fg:x="3" fg:w="1"/><text x="1.3063%" y="895.50"></text></g><g><title>_dl_map_segment (1 samples, 0.35%)</title><rect x="1.0563%" y="869" width="0.3521%" height="15" fill="rgb(239,138,14)" fg:x="3" fg:w="1"/><text x="1.3063%" y="879.50"></text></g><g><title>__mmap64 (1 samples, 0.35%)</title><rect x="1.0563%" y="853" width="0.3521%" height="15" fill="rgb(224,219,34)" fg:x="3" fg:w="1"/><text x="1.3063%" y="863.50"></text></g><g><title>__mmap64 (1 samples, 0.35%)</title><rect x="1.0563%" y="837" width="0.3521%" height="15" fill="rgb(224,219,34)" fg:x="3" fg:w="1"/><text x="1.3063%" y="847.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="1.0563%" y="821" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="3" fg:w="1"/><text x="1.3063%" y="831.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="1.0563%" y="805" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="3" fg:w="1"/><text x="1.3063%" y="815.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="1.0563%" y="789" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="3" fg:w="1"/><text x="1.3063%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="1.0563%" y="773" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="3" fg:w="1"/><text x="1.3063%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="1.0563%" y="757" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="3" fg:w="1"/><text x="1.3063%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="1.0563%" y="741" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="3" fg:w="1"/><text x="1.3063%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="1.0563%" y="725" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="3" fg:w="1"/><text x="1.3063%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="1.4085%" y="421" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="4" fg:w="1"/><text x="1.6585%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="1.4085%" y="405" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="4" fg:w="1"/><text x="1.6585%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.70%)</title><rect x="1.4085%" y="725" width="0.7042%" height="15" fill="rgb(251,145,9)" fg:x="4" fg:w="2"/><text x="1.6585%" y="735.50"></text></g><g><title>&lt;termcolor::StandardStream as std::io::Write&gt;::write (2 samples, 0.70%)</title><rect x="1.4085%" y="709" width="0.7042%" height="15" fill="rgb(250,180,25)" fg:x="4" fg:w="2"/><text x="1.6585%" y="719.50"></text></g><g><title>&lt;termcolor::LossyStandardStream&lt;W&gt; as std::io::Write&gt;::write (2 samples, 0.70%)</title><rect x="1.4085%" y="693" width="0.7042%" height="15" fill="rgb(232,195,18)" fg:x="4" fg:w="2"/><text x="1.6585%" y="703.50"></text></g><g><title>&lt;termcolor::WriterInner&lt;W&gt; as std::io::Write&gt;::write (2 samples, 0.70%)</title><rect x="1.4085%" y="677" width="0.7042%" height="15" fill="rgb(206,183,32)" fg:x="4" fg:w="2"/><text x="1.6585%" y="687.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write (2 samples, 0.70%)</title><rect x="1.4085%" y="661" width="0.7042%" height="15" fill="rgb(215,142,33)" fg:x="4" fg:w="2"/><text x="1.6585%" y="671.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write (2 samples, 0.70%)</title><rect x="1.4085%" y="645" width="0.7042%" height="15" fill="rgb(232,39,45)" fg:x="4" fg:w="2"/><text x="1.6585%" y="655.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write (2 samples, 0.70%)</title><rect x="1.4085%" y="629" width="0.7042%" height="15" fill="rgb(216,85,2)" fg:x="4" fg:w="2"/><text x="1.6585%" y="639.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write (2 samples, 0.70%)</title><rect x="1.4085%" y="613" width="0.7042%" height="15" fill="rgb(226,48,36)" fg:x="4" fg:w="2"/><text x="1.6585%" y="623.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write (2 samples, 0.70%)</title><rect x="1.4085%" y="597" width="0.7042%" height="15" fill="rgb(237,90,14)" fg:x="4" fg:w="2"/><text x="1.6585%" y="607.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (2 samples, 0.70%)</title><rect x="1.4085%" y="581" width="0.7042%" height="15" fill="rgb(239,119,25)" fg:x="4" fg:w="2"/><text x="1.6585%" y="591.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (2 samples, 0.70%)</title><rect x="1.4085%" y="565" width="0.7042%" height="15" fill="rgb(236,163,16)" fg:x="4" fg:w="2"/><text x="1.6585%" y="575.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (2 samples, 0.70%)</title><rect x="1.4085%" y="549" width="0.7042%" height="15" fill="rgb(247,26,49)" fg:x="4" fg:w="2"/><text x="1.6585%" y="559.50"></text></g><g><title>__GI___libc_write (2 samples, 0.70%)</title><rect x="1.4085%" y="533" width="0.7042%" height="15" fill="rgb(232,197,30)" fg:x="4" fg:w="2"/><text x="1.6585%" y="543.50"></text></g><g><title>__GI___libc_write (2 samples, 0.70%)</title><rect x="1.4085%" y="517" width="0.7042%" height="15" fill="rgb(232,197,30)" fg:x="4" fg:w="2"/><text x="1.6585%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.70%)</title><rect x="1.4085%" y="501" width="0.7042%" height="15" fill="rgb(210,204,4)" fg:x="4" fg:w="2"/><text x="1.6585%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.70%)</title><rect x="1.4085%" y="485" width="0.7042%" height="15" fill="rgb(210,204,4)" fg:x="4" fg:w="2"/><text x="1.6585%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.70%)</title><rect x="1.4085%" y="469" width="0.7042%" height="15" fill="rgb(210,204,4)" fg:x="4" fg:w="2"/><text x="1.6585%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.70%)</title><rect x="1.4085%" y="453" width="0.7042%" height="15" fill="rgb(210,204,4)" fg:x="4" fg:w="2"/><text x="1.6585%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.70%)</title><rect x="1.4085%" y="437" width="0.7042%" height="15" fill="rgb(210,204,4)" fg:x="4" fg:w="2"/><text x="1.6585%" y="447.50"></text></g><g><title>s4lib::data::line::LinePart::as_slice (2 samples, 0.70%)</title><rect x="2.1127%" y="725" width="0.7042%" height="15" fill="rgb(251,71,39)" fg:x="6" fg:w="2"/><text x="2.3627%" y="735.50"></text></g><g><title>std::sys_common::memchr::memrchr (1 samples, 0.35%)</title><rect x="2.8169%" y="517" width="0.3521%" height="15" fill="rgb(232,88,32)" fg:x="8" fg:w="1"/><text x="3.0669%" y="527.50"></text></g><g><title>std::sys::unix::memchr::memrchr (1 samples, 0.35%)</title><rect x="2.8169%" y="501" width="0.3521%" height="15" fill="rgb(223,76,45)" fg:x="8" fg:w="1"/><text x="3.0669%" y="511.50"></text></g><g><title>std::sys::unix::memchr::memrchr::memrchr_specific (1 samples, 0.35%)</title><rect x="2.8169%" y="485" width="0.3521%" height="15" fill="rgb(241,110,16)" fg:x="8" fg:w="1"/><text x="3.0669%" y="495.50"></text></g><g><title>__memrchr_evex (1 samples, 0.35%)</title><rect x="2.8169%" y="469" width="0.3521%" height="15" fill="rgb(249,31,17)" fg:x="8" fg:w="1"/><text x="3.0669%" y="479.50"></text></g><g><title>termcolor::Ansi&lt;W&gt;::write_str (2 samples, 0.70%)</title><rect x="2.8169%" y="661" width="0.7042%" height="15" fill="rgb(232,27,51)" fg:x="8" fg:w="2"/><text x="3.0669%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.70%)</title><rect x="2.8169%" y="645" width="0.7042%" height="15" fill="rgb(251,145,9)" fg:x="8" fg:w="2"/><text x="3.0669%" y="655.50"></text></g><g><title>&lt;termcolor::Ansi&lt;W&gt; as std::io::Write&gt;::write (2 samples, 0.70%)</title><rect x="2.8169%" y="629" width="0.7042%" height="15" fill="rgb(207,158,40)" fg:x="8" fg:w="2"/><text x="3.0669%" y="639.50"></text></g><g><title>&lt;termcolor::IoStandardStream as std::io::Write&gt;::write (2 samples, 0.70%)</title><rect x="2.8169%" y="613" width="0.7042%" height="15" fill="rgb(227,89,5)" fg:x="8" fg:w="2"/><text x="3.0669%" y="623.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write (2 samples, 0.70%)</title><rect x="2.8169%" y="597" width="0.7042%" height="15" fill="rgb(215,142,33)" fg:x="8" fg:w="2"/><text x="3.0669%" y="607.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write (2 samples, 0.70%)</title><rect x="2.8169%" y="581" width="0.7042%" height="15" fill="rgb(232,39,45)" fg:x="8" fg:w="2"/><text x="3.0669%" y="591.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write (2 samples, 0.70%)</title><rect x="2.8169%" y="565" width="0.7042%" height="15" fill="rgb(216,85,2)" fg:x="8" fg:w="2"/><text x="3.0669%" y="575.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write (2 samples, 0.70%)</title><rect x="2.8169%" y="549" width="0.7042%" height="15" fill="rgb(226,48,36)" fg:x="8" fg:w="2"/><text x="3.0669%" y="559.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write (2 samples, 0.70%)</title><rect x="2.8169%" y="533" width="0.7042%" height="15" fill="rgb(237,90,14)" fg:x="8" fg:w="2"/><text x="3.0669%" y="543.50"></text></g><g><title>std::io::buffered::linewritershim::LineWriterShim&lt;W&gt;::flush_if_completed_line (1 samples, 0.35%)</title><rect x="3.1690%" y="517" width="0.3521%" height="15" fill="rgb(248,173,12)" fg:x="9" fg:w="1"/><text x="3.4190%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.35%)</title><rect x="3.5211%" y="661" width="0.3521%" height="15" fill="rgb(251,145,9)" fg:x="10" fg:w="1"/><text x="3.7711%" y="671.50"></text></g><g><title>&lt;termcolor::Ansi&lt;W&gt; as std::io::Write&gt;::write (1 samples, 0.35%)</title><rect x="3.5211%" y="645" width="0.3521%" height="15" fill="rgb(207,158,40)" fg:x="10" fg:w="1"/><text x="3.7711%" y="655.50"></text></g><g><title>&lt;termcolor::IoStandardStream as std::io::Write&gt;::write (1 samples, 0.35%)</title><rect x="3.5211%" y="629" width="0.3521%" height="15" fill="rgb(227,89,5)" fg:x="10" fg:w="1"/><text x="3.7711%" y="639.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write (1 samples, 0.35%)</title><rect x="3.5211%" y="613" width="0.3521%" height="15" fill="rgb(215,142,33)" fg:x="10" fg:w="1"/><text x="3.7711%" y="623.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write (1 samples, 0.35%)</title><rect x="3.5211%" y="597" width="0.3521%" height="15" fill="rgb(232,39,45)" fg:x="10" fg:w="1"/><text x="3.7711%" y="607.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write (1 samples, 0.35%)</title><rect x="3.5211%" y="581" width="0.3521%" height="15" fill="rgb(216,85,2)" fg:x="10" fg:w="1"/><text x="3.7711%" y="591.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write (1 samples, 0.35%)</title><rect x="3.5211%" y="565" width="0.3521%" height="15" fill="rgb(226,48,36)" fg:x="10" fg:w="1"/><text x="3.7711%" y="575.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write (1 samples, 0.35%)</title><rect x="3.5211%" y="549" width="0.3521%" height="15" fill="rgb(237,90,14)" fg:x="10" fg:w="1"/><text x="3.7711%" y="559.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write (1 samples, 0.35%)</title><rect x="3.5211%" y="533" width="0.3521%" height="15" fill="rgb(250,14,31)" fg:x="10" fg:w="1"/><text x="3.7711%" y="543.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_to_buffer_unchecked (1 samples, 0.35%)</title><rect x="3.5211%" y="517" width="0.3521%" height="15" fill="rgb(208,120,32)" fg:x="10" fg:w="1"/><text x="3.7711%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.35%)</title><rect x="3.5211%" y="501" width="0.3521%" height="15" fill="rgb(214,20,35)" fg:x="10" fg:w="1"/><text x="3.7711%" y="511.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.35%)</title><rect x="3.5211%" y="485" width="0.3521%" height="15" fill="rgb(217,126,36)" fg:x="10" fg:w="1"/><text x="3.7711%" y="495.50"></text></g><g><title>&lt;termcolor::StandardStream as termcolor::WriteColor&gt;::set_color (4 samples, 1.41%)</title><rect x="2.8169%" y="725" width="1.4085%" height="15" fill="rgb(217,221,27)" fg:x="8" fg:w="4"/><text x="3.0669%" y="735.50"></text></g><g><title>&lt;termcolor::LossyStandardStream&lt;W&gt; as termcolor::WriteColor&gt;::set_color (4 samples, 1.41%)</title><rect x="2.8169%" y="709" width="1.4085%" height="15" fill="rgb(244,124,31)" fg:x="8" fg:w="4"/><text x="3.0669%" y="719.50"></text></g><g><title>&lt;termcolor::WriterInner&lt;W&gt; as termcolor::WriteColor&gt;::set_color (4 samples, 1.41%)</title><rect x="2.8169%" y="693" width="1.4085%" height="15" fill="rgb(234,182,7)" fg:x="8" fg:w="4"/><text x="3.0669%" y="703.50"></text></g><g><title>&lt;termcolor::Ansi&lt;W&gt; as termcolor::WriteColor&gt;::set_color (4 samples, 1.41%)</title><rect x="2.8169%" y="677" width="1.4085%" height="15" fill="rgb(208,123,3)" fg:x="8" fg:w="4"/><text x="3.0669%" y="687.50"></text></g><g><title>&lt;termcolor::Ansi&lt;W&gt; as termcolor::WriteColor&gt;::reset (1 samples, 0.35%)</title><rect x="3.8732%" y="661" width="0.3521%" height="15" fill="rgb(226,70,2)" fg:x="11" fg:w="1"/><text x="4.1232%" y="671.50"></text></g><g><title>termcolor::Ansi&lt;W&gt;::write_str (1 samples, 0.35%)</title><rect x="3.8732%" y="645" width="0.3521%" height="15" fill="rgb(232,27,51)" fg:x="11" fg:w="1"/><text x="4.1232%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.35%)</title><rect x="3.8732%" y="629" width="0.3521%" height="15" fill="rgb(251,145,9)" fg:x="11" fg:w="1"/><text x="4.1232%" y="639.50"></text></g><g><title>&lt;termcolor::Ansi&lt;W&gt; as std::io::Write&gt;::write (1 samples, 0.35%)</title><rect x="3.8732%" y="613" width="0.3521%" height="15" fill="rgb(207,158,40)" fg:x="11" fg:w="1"/><text x="4.1232%" y="623.50"></text></g><g><title>&lt;termcolor::IoStandardStream as std::io::Write&gt;::write (1 samples, 0.35%)</title><rect x="3.8732%" y="597" width="0.3521%" height="15" fill="rgb(227,89,5)" fg:x="11" fg:w="1"/><text x="4.1232%" y="607.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write (1 samples, 0.35%)</title><rect x="3.8732%" y="581" width="0.3521%" height="15" fill="rgb(215,142,33)" fg:x="11" fg:w="1"/><text x="4.1232%" y="591.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write (1 samples, 0.35%)</title><rect x="3.8732%" y="565" width="0.3521%" height="15" fill="rgb(232,39,45)" fg:x="11" fg:w="1"/><text x="4.1232%" y="575.50"></text></g><g><title>std::io::stdio::Stdout::lock (1 samples, 0.35%)</title><rect x="3.8732%" y="549" width="0.3521%" height="15" fill="rgb(237,213,8)" fg:x="11" fg:w="1"/><text x="4.1232%" y="559.50"></text></g><g><title>std::sys_common::remutex::ReentrantMutex&lt;T&gt;::lock (1 samples, 0.35%)</title><rect x="3.8732%" y="533" width="0.3521%" height="15" fill="rgb(215,43,28)" fg:x="11" fg:w="1"/><text x="4.1232%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.35%)</title><rect x="3.8732%" y="517" width="0.3521%" height="15" fill="rgb(219,73,27)" fg:x="11" fg:w="1"/><text x="4.1232%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.35%)</title><rect x="3.8732%" y="501" width="0.3521%" height="15" fill="rgb(208,10,34)" fg:x="11" fg:w="1"/><text x="4.1232%" y="511.50"></text></g><g><title>s4lib::printer::printers::PrinterLogMessage::print_sysline (9 samples, 3.17%)</title><rect x="1.4085%" y="757" width="3.1690%" height="15" fill="rgb(244,86,43)" fg:x="4" fg:w="9"/><text x="1.6585%" y="767.50">s4l..</text></g><g><title>s4lib::printer::printers::PrinterLogMessage::print_sysline_color (9 samples, 3.17%)</title><rect x="1.4085%" y="741" width="3.1690%" height="15" fill="rgb(253,154,21)" fg:x="4" fg:w="9"/><text x="1.6585%" y="751.50">s4l..</text></g><g><title>&lt;termcolor::StandardStream as std::io::Write&gt;::flush (1 samples, 0.35%)</title><rect x="4.2254%" y="725" width="0.3521%" height="15" fill="rgb(214,129,27)" fg:x="12" fg:w="1"/><text x="4.4754%" y="735.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::flush (1 samples, 0.35%)</title><rect x="4.2254%" y="709" width="0.3521%" height="15" fill="rgb(244,108,51)" fg:x="12" fg:w="1"/><text x="4.4754%" y="719.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::flush (1 samples, 0.35%)</title><rect x="4.2254%" y="693" width="0.3521%" height="15" fill="rgb(224,207,51)" fg:x="12" fg:w="1"/><text x="4.4754%" y="703.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::flush (1 samples, 0.35%)</title><rect x="4.2254%" y="677" width="0.3521%" height="15" fill="rgb(213,149,3)" fg:x="12" fg:w="1"/><text x="4.4754%" y="687.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::flush (1 samples, 0.35%)</title><rect x="4.2254%" y="661" width="0.3521%" height="15" fill="rgb(212,213,13)" fg:x="12" fg:w="1"/><text x="4.4754%" y="671.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::flush (1 samples, 0.35%)</title><rect x="4.2254%" y="645" width="0.3521%" height="15" fill="rgb(231,193,47)" fg:x="12" fg:w="1"/><text x="4.4754%" y="655.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.35%)</title><rect x="4.2254%" y="629" width="0.3521%" height="15" fill="rgb(240,178,54)" fg:x="12" fg:w="1"/><text x="4.4754%" y="639.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (1 samples, 0.35%)</title><rect x="4.2254%" y="613" width="0.3521%" height="15" fill="rgb(239,119,25)" fg:x="12" fg:w="1"/><text x="4.4754%" y="623.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (1 samples, 0.35%)</title><rect x="4.2254%" y="597" width="0.3521%" height="15" fill="rgb(236,163,16)" fg:x="12" fg:w="1"/><text x="4.4754%" y="607.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.35%)</title><rect x="4.2254%" y="581" width="0.3521%" height="15" fill="rgb(247,26,49)" fg:x="12" fg:w="1"/><text x="4.4754%" y="591.50"></text></g><g><title>__GI___libc_write (1 samples, 0.35%)</title><rect x="4.2254%" y="565" width="0.3521%" height="15" fill="rgb(232,197,30)" fg:x="12" fg:w="1"/><text x="4.4754%" y="575.50"></text></g><g><title>__GI___libc_write (1 samples, 0.35%)</title><rect x="4.2254%" y="549" width="0.3521%" height="15" fill="rgb(232,197,30)" fg:x="12" fg:w="1"/><text x="4.4754%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="4.2254%" y="533" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="12" fg:w="1"/><text x="4.4754%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="4.2254%" y="517" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="12" fg:w="1"/><text x="4.4754%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="4.2254%" y="501" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="12" fg:w="1"/><text x="4.4754%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="4.2254%" y="485" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="12" fg:w="1"/><text x="4.4754%" y="495.50"></text></g><g><title>crossbeam_channel::channel::read (2 samples, 0.70%)</title><rect x="4.5775%" y="725" width="0.7042%" height="15" fill="rgb(209,181,8)" fg:x="13" fg:w="2"/><text x="4.8275%" y="735.50"></text></g><g><title>__memmove_avx512_unaligned_erms (2 samples, 0.70%)</title><rect x="4.5775%" y="709" width="0.7042%" height="15" fill="rgb(217,126,36)" fg:x="13" fg:w="2"/><text x="4.8275%" y="719.50"></text></g><g><title>crossbeam_channel::select::SelectedOperation::recv (3 samples, 1.06%)</title><rect x="4.5775%" y="741" width="1.0563%" height="15" fill="rgb(206,140,19)" fg:x="13" fg:w="3"/><text x="4.8275%" y="751.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.35%)</title><rect x="5.2817%" y="725" width="0.3521%" height="15" fill="rgb(206,149,53)" fg:x="15" fg:w="1"/><text x="5.5317%" y="735.50"></text></g><g><title>core::hint::spin_loop (12 samples, 4.23%)</title><rect x="5.6338%" y="581" width="4.2254%" height="15" fill="rgb(241,144,6)" fg:x="16" fg:w="12"/><text x="5.8838%" y="591.50">core:..</text></g><g><title>core::core_arch::x86::sse2::_mm_pause (12 samples, 4.23%)</title><rect x="5.6338%" y="565" width="4.2254%" height="15" fill="rgb(213,129,2)" fg:x="16" fg:w="12"/><text x="5.8838%" y="575.50">core:..</text></g><g><title>crossbeam_channel::context::Context::wait_until (13 samples, 4.58%)</title><rect x="5.6338%" y="613" width="4.5775%" height="15" fill="rgb(218,28,27)" fg:x="16" fg:w="13"/><text x="5.8838%" y="623.50">cross..</text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (13 samples, 4.58%)</title><rect x="5.6338%" y="597" width="4.5775%" height="15" fill="rgb(224,200,25)" fg:x="16" fg:w="13"/><text x="5.8838%" y="607.50">cross..</text></g><g><title>__GI___sched_yield (1 samples, 0.35%)</title><rect x="9.8592%" y="581" width="0.3521%" height="15" fill="rgb(225,197,10)" fg:x="28" fg:w="1"/><text x="10.1092%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="9.8592%" y="565" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="28" fg:w="1"/><text x="10.1092%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="9.8592%" y="549" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="28" fg:w="1"/><text x="10.1092%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="9.8592%" y="533" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="28" fg:w="1"/><text x="10.1092%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="9.8592%" y="517" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="28" fg:w="1"/><text x="10.1092%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="9.8592%" y="501" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="28" fg:w="1"/><text x="10.1092%" y="511.50"></text></g><g><title>&lt;crossbeam_channel::channel::Receiver&lt;T&gt; as crossbeam_channel::select::SelectHandle&gt;::unregister (1 samples, 0.35%)</title><rect x="10.2113%" y="613" width="0.3521%" height="15" fill="rgb(240,190,47)" fg:x="29" fg:w="1"/><text x="10.4613%" y="623.50"></text></g><g><title>&lt;crossbeam_channel::flavors::array::Receiver&lt;T&gt; as crossbeam_channel::select::SelectHandle&gt;::unregister (1 samples, 0.35%)</title><rect x="10.2113%" y="597" width="0.3521%" height="15" fill="rgb(227,116,52)" fg:x="29" fg:w="1"/><text x="10.4613%" y="607.50"></text></g><g><title>crossbeam_channel::waker::SyncWaker::unregister (1 samples, 0.35%)</title><rect x="10.2113%" y="581" width="0.3521%" height="15" fill="rgb(236,193,47)" fg:x="29" fg:w="1"/><text x="10.4613%" y="591.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.35%)</title><rect x="10.2113%" y="565" width="0.3521%" height="15" fill="rgb(234,45,50)" fg:x="29" fg:w="1"/><text x="10.4613%" y="575.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (1 samples, 0.35%)</title><rect x="10.2113%" y="549" width="0.3521%" height="15" fill="rgb(247,66,5)" fg:x="29" fg:w="1"/><text x="10.4613%" y="559.50"></text></g><g><title>crossbeam_channel::select::run_select::{{closure}} (15 samples, 5.28%)</title><rect x="5.6338%" y="629" width="5.2817%" height="15" fill="rgb(241,20,29)" fg:x="16" fg:w="15"/><text x="5.8838%" y="639.50">crossb..</text></g><g><title>&lt;crossbeam_channel::channel::Receiver&lt;T&gt; as crossbeam_channel::select::SelectHandle&gt;::register (1 samples, 0.35%)</title><rect x="10.5634%" y="613" width="0.3521%" height="15" fill="rgb(232,111,38)" fg:x="30" fg:w="1"/><text x="10.8134%" y="623.50"></text></g><g><title>&lt;crossbeam_channel::flavors::array::Receiver&lt;T&gt; as crossbeam_channel::select::SelectHandle&gt;::register (1 samples, 0.35%)</title><rect x="10.5634%" y="597" width="0.3521%" height="15" fill="rgb(249,116,40)" fg:x="30" fg:w="1"/><text x="10.8134%" y="607.50"></text></g><g><title>crossbeam_channel::waker::SyncWaker::register (1 samples, 0.35%)</title><rect x="10.5634%" y="581" width="0.3521%" height="15" fill="rgb(224,150,31)" fg:x="30" fg:w="1"/><text x="10.8134%" y="591.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.35%)</title><rect x="10.5634%" y="565" width="0.3521%" height="15" fill="rgb(234,45,50)" fg:x="30" fg:w="1"/><text x="10.8134%" y="575.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (1 samples, 0.35%)</title><rect x="10.5634%" y="549" width="0.3521%" height="15" fill="rgb(247,66,5)" fg:x="30" fg:w="1"/><text x="10.8134%" y="559.50"></text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (16 samples, 5.63%)</title><rect x="5.6338%" y="661" width="5.6338%" height="15" fill="rgb(251,136,16)" fg:x="16" fg:w="16"/><text x="5.8838%" y="671.50">crossbe..</text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (16 samples, 5.63%)</title><rect x="5.6338%" y="645" width="5.6338%" height="15" fill="rgb(251,136,16)" fg:x="16" fg:w="16"/><text x="5.8838%" y="655.50">crossbe..</text></g><g><title>crossbeam_channel::context::Context::with (17 samples, 5.99%)</title><rect x="5.6338%" y="693" width="5.9859%" height="15" fill="rgb(249,203,42)" fg:x="16" fg:w="17"/><text x="5.8838%" y="703.50">crossbea..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (17 samples, 5.99%)</title><rect x="5.6338%" y="677" width="5.9859%" height="15" fill="rgb(235,136,14)" fg:x="16" fg:w="17"/><text x="5.8838%" y="687.50">std::thr..</text></g><g><title>crossbeam_channel::select::Select::select (18 samples, 6.34%)</title><rect x="5.6338%" y="741" width="6.3380%" height="15" fill="rgb(218,151,27)" fg:x="16" fg:w="18"/><text x="5.8838%" y="751.50">crossbea..</text></g><g><title>crossbeam_channel::select::select (18 samples, 6.34%)</title><rect x="5.6338%" y="725" width="6.3380%" height="15" fill="rgb(210,225,20)" fg:x="16" fg:w="18"/><text x="5.8838%" y="735.50">crossbea..</text></g><g><title>crossbeam_channel::select::run_select (18 samples, 6.34%)</title><rect x="5.6338%" y="709" width="6.3380%" height="15" fill="rgb(238,41,29)" fg:x="16" fg:w="18"/><text x="5.8838%" y="719.50">crossbea..</text></g><g><title>&lt;crossbeam_channel::channel::Receiver&lt;T&gt; as crossbeam_channel::select::SelectHandle&gt;::try_select (1 samples, 0.35%)</title><rect x="11.6197%" y="693" width="0.3521%" height="15" fill="rgb(236,74,9)" fg:x="33" fg:w="1"/><text x="11.8697%" y="703.50"></text></g><g><title>&lt;crossbeam_channel::flavors::array::Receiver&lt;T&gt; as crossbeam_channel::select::SelectHandle&gt;::try_select (1 samples, 0.35%)</title><rect x="11.6197%" y="677" width="0.3521%" height="15" fill="rgb(205,196,31)" fg:x="33" fg:w="1"/><text x="11.8697%" y="687.50"></text></g><g><title>crossbeam_channel::flavors::array::Channel&lt;T&gt;::start_recv (1 samples, 0.35%)</title><rect x="11.6197%" y="661" width="0.3521%" height="15" fill="rgb(249,64,9)" fg:x="33" fg:w="1"/><text x="11.8697%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.35%)</title><rect x="11.6197%" y="645" width="0.3521%" height="15" fill="rgb(219,73,27)" fg:x="33" fg:w="1"/><text x="11.8697%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.35%)</title><rect x="11.6197%" y="629" width="0.3521%" height="15" fill="rgb(208,10,34)" fg:x="33" fg:w="1"/><text x="11.8697%" y="639.50"></text></g><g><title>s4::processing_loop::recv_many_chan (22 samples, 7.75%)</title><rect x="4.5775%" y="757" width="7.7465%" height="15" fill="rgb(253,70,6)" fg:x="13" fg:w="22"/><text x="4.8275%" y="767.50">s4::process..</text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.35%)</title><rect x="11.9718%" y="741" width="0.3521%" height="15" fill="rgb(217,126,36)" fg:x="34" fg:w="1"/><text x="12.2218%" y="751.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (1 samples, 0.35%)</title><rect x="12.3239%" y="693" width="0.3521%" height="15" fill="rgb(223,155,52)" fg:x="35" fg:w="1"/><text x="12.5739%" y="703.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (1 samples, 0.35%)</title><rect x="12.3239%" y="677" width="0.3521%" height="15" fill="rgb(212,166,45)" fg:x="35" fg:w="1"/><text x="12.5739%" y="687.50"></text></g><g><title>s4::processing_loop (33 samples, 11.62%)</title><rect x="1.4085%" y="773" width="11.6197%" height="15" fill="rgb(233,182,14)" fg:x="4" fg:w="33"/><text x="1.6585%" y="783.50">s4::processing_lo..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove (2 samples, 0.70%)</title><rect x="12.3239%" y="757" width="0.7042%" height="15" fill="rgb(224,108,5)" fg:x="35" fg:w="2"/><text x="12.5739%" y="767.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove_entry (2 samples, 0.70%)</title><rect x="12.3239%" y="741" width="0.7042%" height="15" fill="rgb(245,136,18)" fg:x="35" fg:w="2"/><text x="12.5739%" y="751.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::remove_entry (2 samples, 0.70%)</title><rect x="12.3239%" y="725" width="0.7042%" height="15" fill="rgb(227,63,43)" fg:x="35" fg:w="2"/><text x="12.5739%" y="735.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::remove_kv (2 samples, 0.70%)</title><rect x="12.3239%" y="709" width="0.7042%" height="15" fill="rgb(211,181,27)" fg:x="35" fg:w="2"/><text x="12.5739%" y="719.50"></text></g><g><title>regex::regex::string::Regex::captures (1 samples, 0.35%)</title><rect x="13.0282%" y="741" width="0.3521%" height="15" fill="rgb(241,100,17)" fg:x="37" fg:w="1"/><text x="13.2782%" y="751.50"></text></g><g><title>regex::regex::string::Regex::captures_at (1 samples, 0.35%)</title><rect x="13.0282%" y="725" width="0.3521%" height="15" fill="rgb(243,147,5)" fg:x="37" fg:w="1"/><text x="13.2782%" y="735.50"></text></g><g><title>regex_automata::meta::regex::Regex::search_captures (1 samples, 0.35%)</title><rect x="13.0282%" y="709" width="0.3521%" height="15" fill="rgb(212,211,21)" fg:x="37" fg:w="1"/><text x="13.2782%" y="719.50"></text></g><g><title>regex_automata::meta::regex::Regex::search_slots (1 samples, 0.35%)</title><rect x="13.0282%" y="693" width="0.3521%" height="15" fill="rgb(243,12,43)" fg:x="37" fg:w="1"/><text x="13.2782%" y="703.50"></text></g><g><title>regex_automata::meta::regex::RegexInfo::is_impossible (1 samples, 0.35%)</title><rect x="13.0282%" y="677" width="0.3521%" height="15" fill="rgb(220,177,25)" fg:x="37" fg:w="1"/><text x="13.2782%" y="687.50"></text></g><g><title>regex_automata::meta::regex::RegexInfo::props_union (1 samples, 0.35%)</title><rect x="13.0282%" y="661" width="0.3521%" height="15" fill="rgb(233,168,47)" fg:x="37" fg:w="1"/><text x="13.2782%" y="671.50"></text></g><g><title>_start (39 samples, 13.73%)</title><rect x="0.0000%" y="1045" width="13.7324%" height="15" fill="rgb(210,219,27)" fg:x="0" fg:w="39"/><text x="0.2500%" y="1055.50">_start</text></g><g><title>__libc_start_main_impl (35 samples, 12.32%)</title><rect x="1.4085%" y="1029" width="12.3239%" height="15" fill="rgb(228,214,28)" fg:x="4" fg:w="35"/><text x="1.6585%" y="1039.50">__libc_start_main_..</text></g><g><title>__libc_start_call_main (35 samples, 12.32%)</title><rect x="1.4085%" y="1013" width="12.3239%" height="15" fill="rgb(249,173,1)" fg:x="4" fg:w="35"/><text x="1.6585%" y="1023.50">__libc_start_call_..</text></g><g><title>main (35 samples, 12.32%)</title><rect x="1.4085%" y="997" width="12.3239%" height="15" fill="rgb(238,28,47)" fg:x="4" fg:w="35"/><text x="1.6585%" y="1007.50">main</text></g><g><title>std::rt::lang_start_internal (35 samples, 12.32%)</title><rect x="1.4085%" y="981" width="12.3239%" height="15" fill="rgb(240,177,54)" fg:x="4" fg:w="35"/><text x="1.6585%" y="991.50">std::rt::lang_star..</text></g><g><title>std::panic::catch_unwind (35 samples, 12.32%)</title><rect x="1.4085%" y="965" width="12.3239%" height="15" fill="rgb(216,75,8)" fg:x="4" fg:w="35"/><text x="1.6585%" y="975.50">std::panic::catch_..</text></g><g><title>std::panicking::try (35 samples, 12.32%)</title><rect x="1.4085%" y="949" width="12.3239%" height="15" fill="rgb(212,61,29)" fg:x="4" fg:w="35"/><text x="1.6585%" y="959.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (35 samples, 12.32%)</title><rect x="1.4085%" y="933" width="12.3239%" height="15" fill="rgb(232,162,46)" fg:x="4" fg:w="35"/><text x="1.6585%" y="943.50">std::panicking::tr..</text></g><g><title>std::rt::lang_start_internal::{{closure}} (35 samples, 12.32%)</title><rect x="1.4085%" y="917" width="12.3239%" height="15" fill="rgb(219,15,13)" fg:x="4" fg:w="35"/><text x="1.6585%" y="927.50">std::rt::lang_star..</text></g><g><title>std::panic::catch_unwind (35 samples, 12.32%)</title><rect x="1.4085%" y="901" width="12.3239%" height="15" fill="rgb(216,75,8)" fg:x="4" fg:w="35"/><text x="1.6585%" y="911.50">std::panic::catch_..</text></g><g><title>std::panicking::try (35 samples, 12.32%)</title><rect x="1.4085%" y="885" width="12.3239%" height="15" fill="rgb(212,61,29)" fg:x="4" fg:w="35"/><text x="1.6585%" y="895.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (35 samples, 12.32%)</title><rect x="1.4085%" y="869" width="12.3239%" height="15" fill="rgb(232,162,46)" fg:x="4" fg:w="35"/><text x="1.6585%" y="879.50">std::panicking::tr..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (35 samples, 12.32%)</title><rect x="1.4085%" y="853" width="12.3239%" height="15" fill="rgb(212,73,0)" fg:x="4" fg:w="35"/><text x="1.6585%" y="863.50">core::ops::functio..</text></g><g><title>std::rt::lang_start::{{closure}} (35 samples, 12.32%)</title><rect x="1.4085%" y="837" width="12.3239%" height="15" fill="rgb(213,78,9)" fg:x="4" fg:w="35"/><text x="1.6585%" y="847.50">std::rt::lang_star..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (35 samples, 12.32%)</title><rect x="1.4085%" y="821" width="12.3239%" height="15" fill="rgb(210,88,34)" fg:x="4" fg:w="35"/><text x="1.6585%" y="831.50">std::sys_common::b..</text></g><g><title>core::ops::function::FnOnce::call_once (35 samples, 12.32%)</title><rect x="1.4085%" y="805" width="12.3239%" height="15" fill="rgb(210,80,10)" fg:x="4" fg:w="35"/><text x="1.6585%" y="815.50">core::ops::functio..</text></g><g><title>s4::main (35 samples, 12.32%)</title><rect x="1.4085%" y="789" width="12.3239%" height="15" fill="rgb(221,151,31)" fg:x="4" fg:w="35"/><text x="1.6585%" y="799.50">s4::main</text></g><g><title>s4::cli_process_args (2 samples, 0.70%)</title><rect x="13.0282%" y="773" width="0.7042%" height="15" fill="rgb(217,50,44)" fg:x="37" fg:w="2"/><text x="13.2782%" y="783.50"></text></g><g><title>s4::string_wdhms_to_duration (2 samples, 0.70%)</title><rect x="13.0282%" y="757" width="0.7042%" height="15" fill="rgb(237,135,26)" fg:x="37" fg:w="2"/><text x="13.2782%" y="767.50"></text></g><g><title>&lt;s4::REGEX_DUR_OFFSET as core::ops::deref::Deref&gt;::deref (1 samples, 0.35%)</title><rect x="13.3803%" y="741" width="0.3521%" height="15" fill="rgb(239,209,23)" fg:x="38" fg:w="1"/><text x="13.6303%" y="751.50"></text></g><g><title>&lt;s4::REGEX_DUR_OFFSET as core::ops::deref::Deref&gt;::deref::__stability (1 samples, 0.35%)</title><rect x="13.3803%" y="725" width="0.3521%" height="15" fill="rgb(223,204,38)" fg:x="38" fg:w="1"/><text x="13.6303%" y="735.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (1 samples, 0.35%)</title><rect x="13.3803%" y="709" width="0.3521%" height="15" fill="rgb(235,175,8)" fg:x="38" fg:w="1"/><text x="13.6303%" y="719.50"></text></g><g><title>std::sync::once::Once::call_once (1 samples, 0.35%)</title><rect x="13.3803%" y="693" width="0.3521%" height="15" fill="rgb(247,17,47)" fg:x="38" fg:w="1"/><text x="13.6303%" y="703.50"></text></g><g><title>std::sys_common::once::futex::Once::call (1 samples, 0.35%)</title><rect x="13.3803%" y="677" width="0.3521%" height="15" fill="rgb(246,168,49)" fg:x="38" fg:w="1"/><text x="13.6303%" y="687.50"></text></g><g><title>std::sync::once::Once::call_once::{{closure}} (1 samples, 0.35%)</title><rect x="13.3803%" y="661" width="0.3521%" height="15" fill="rgb(237,63,35)" fg:x="38" fg:w="1"/><text x="13.6303%" y="671.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}} (1 samples, 0.35%)</title><rect x="13.3803%" y="645" width="0.3521%" height="15" fill="rgb(238,7,51)" fg:x="38" fg:w="1"/><text x="13.6303%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.35%)</title><rect x="13.3803%" y="629" width="0.3521%" height="15" fill="rgb(210,80,10)" fg:x="38" fg:w="1"/><text x="13.6303%" y="639.50"></text></g><g><title>&lt;s4::REGEX_DUR_OFFSET as core::ops::deref::Deref&gt;::deref::__static_ref_initialize (1 samples, 0.35%)</title><rect x="13.3803%" y="613" width="0.3521%" height="15" fill="rgb(216,114,7)" fg:x="38" fg:w="1"/><text x="13.6303%" y="623.50"></text></g><g><title>regex::regex::string::Regex::new (1 samples, 0.35%)</title><rect x="13.3803%" y="597" width="0.3521%" height="15" fill="rgb(239,163,48)" fg:x="38" fg:w="1"/><text x="13.6303%" y="607.50"></text></g><g><title>regex::builders::string::RegexBuilder::build (1 samples, 0.35%)</title><rect x="13.3803%" y="581" width="0.3521%" height="15" fill="rgb(234,198,23)" fg:x="38" fg:w="1"/><text x="13.6303%" y="591.50"></text></g><g><title>regex::builders::Builder::build_one_string (1 samples, 0.35%)</title><rect x="13.3803%" y="565" width="0.3521%" height="15" fill="rgb(254,213,31)" fg:x="38" fg:w="1"/><text x="13.6303%" y="575.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (1 samples, 0.35%)</title><rect x="13.3803%" y="549" width="0.3521%" height="15" fill="rgb(212,33,22)" fg:x="38" fg:w="1"/><text x="13.6303%" y="559.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many (1 samples, 0.35%)</title><rect x="13.3803%" y="533" width="0.3521%" height="15" fill="rgb(236,25,32)" fg:x="38" fg:w="1"/><text x="13.6303%" y="543.50"></text></g><g><title>regex_syntax::hir::translate::Translator::translate (1 samples, 0.35%)</title><rect x="13.3803%" y="517" width="0.3521%" height="15" fill="rgb(212,73,14)" fg:x="38" fg:w="1"/><text x="13.6303%" y="527.50"></text></g><g><title>regex_syntax::ast::visitor::visit (1 samples, 0.35%)</title><rect x="13.3803%" y="501" width="0.3521%" height="15" fill="rgb(209,184,21)" fg:x="38" fg:w="1"/><text x="13.6303%" y="511.50"></text></g><g><title>regex_syntax::ast::visitor::HeapVisitor::visit (1 samples, 0.35%)</title><rect x="13.3803%" y="485" width="0.3521%" height="15" fill="rgb(253,224,17)" fg:x="38" fg:w="1"/><text x="13.6303%" y="495.50"></text></g><g><title>regex_syntax::ast::visitor::HeapVisitor::induct (1 samples, 0.35%)</title><rect x="13.3803%" y="469" width="0.3521%" height="15" fill="rgb(220,131,54)" fg:x="38" fg:w="1"/><text x="13.6303%" y="479.50"></text></g><g><title>regex_syntax::ast::visitor::HeapVisitor::visit_class (1 samples, 0.35%)</title><rect x="13.3803%" y="453" width="0.3521%" height="15" fill="rgb(253,26,45)" fg:x="38" fg:w="1"/><text x="13.6303%" y="463.50"></text></g><g><title>regex_syntax::ast::visitor::HeapVisitor::visit_class_post (1 samples, 0.35%)</title><rect x="13.3803%" y="437" width="0.3521%" height="15" fill="rgb(236,134,51)" fg:x="38" fg:w="1"/><text x="13.6303%" y="447.50"></text></g><g><title>&lt;regex_syntax::hir::translate::TranslatorI as regex_syntax::ast::visitor::Visitor&gt;::visit_class_set_item_post (1 samples, 0.35%)</title><rect x="13.3803%" y="421" width="0.3521%" height="15" fill="rgb(209,145,6)" fg:x="38" fg:w="1"/><text x="13.6303%" y="431.50"></text></g><g><title>regex_syntax::hir::translate::TranslatorI::hir_perl_unicode_class (1 samples, 0.35%)</title><rect x="13.3803%" y="405" width="0.3521%" height="15" fill="rgb(222,183,49)" fg:x="38" fg:w="1"/><text x="13.6303%" y="415.50"></text></g><g><title>regex_syntax::unicode::perl_digit (1 samples, 0.35%)</title><rect x="13.3803%" y="389" width="0.3521%" height="15" fill="rgb(251,98,45)" fg:x="38" fg:w="1"/><text x="13.6303%" y="399.50"></text></g><g><title>regex_syntax::unicode::perl_digit::imp (1 samples, 0.35%)</title><rect x="13.3803%" y="373" width="0.3521%" height="15" fill="rgb(253,108,48)" fg:x="38" fg:w="1"/><text x="13.6303%" y="383.50"></text></g><g><title>regex_syntax::unicode::hir_class (1 samples, 0.35%)</title><rect x="13.3803%" y="357" width="0.3521%" height="15" fill="rgb(232,22,10)" fg:x="38" fg:w="1"/><text x="13.6303%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.35%)</title><rect x="13.3803%" y="341" width="0.3521%" height="15" fill="rgb(222,213,17)" fg:x="38" fg:w="1"/><text x="13.6303%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.35%)</title><rect x="13.3803%" y="325" width="0.3521%" height="15" fill="rgb(247,137,3)" fg:x="38" fg:w="1"/><text x="13.6303%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.35%)</title><rect x="13.3803%" y="309" width="0.3521%" height="15" fill="rgb(227,158,43)" fg:x="38" fg:w="1"/><text x="13.6303%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.35%)</title><rect x="13.3803%" y="293" width="0.3521%" height="15" fill="rgb(232,14,28)" fg:x="38" fg:w="1"/><text x="13.6303%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.35%)</title><rect x="13.3803%" y="277" width="0.3521%" height="15" fill="rgb(232,211,42)" fg:x="38" fg:w="1"/><text x="13.6303%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.35%)</title><rect x="13.3803%" y="261" width="0.3521%" height="15" fill="rgb(214,146,48)" fg:x="38" fg:w="1"/><text x="13.6303%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.35%)</title><rect x="13.3803%" y="245" width="0.3521%" height="15" fill="rgb(245,181,4)" fg:x="38" fg:w="1"/><text x="13.6303%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.35%)</title><rect x="13.3803%" y="229" width="0.3521%" height="15" fill="rgb(242,69,50)" fg:x="38" fg:w="1"/><text x="13.6303%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.35%)</title><rect x="13.3803%" y="213" width="0.3521%" height="15" fill="rgb(214,12,39)" fg:x="38" fg:w="1"/><text x="13.6303%" y="223.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.35%)</title><rect x="13.3803%" y="197" width="0.3521%" height="15" fill="rgb(253,112,1)" fg:x="38" fg:w="1"/><text x="13.6303%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.35%)</title><rect x="13.3803%" y="181" width="0.3521%" height="15" fill="rgb(245,36,31)" fg:x="38" fg:w="1"/><text x="13.6303%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::{{closure}} (1 samples, 0.35%)</title><rect x="13.3803%" y="165" width="0.3521%" height="15" fill="rgb(221,227,48)" fg:x="38" fg:w="1"/><text x="13.6303%" y="175.50"></text></g><g><title>core::ptr::write (1 samples, 0.35%)</title><rect x="13.3803%" y="149" width="0.3521%" height="15" fill="rgb(209,143,44)" fg:x="38" fg:w="1"/><text x="13.6303%" y="159.50"></text></g><g><title>__clone3 (1 samples, 0.35%)</title><rect x="13.7324%" y="1045" width="0.3521%" height="15" fill="rgb(252,169,8)" fg:x="39" fg:w="1"/><text x="13.9824%" y="1055.50"></text></g><g><title>start_thread (1 samples, 0.35%)</title><rect x="13.7324%" y="1029" width="0.3521%" height="15" fill="rgb(209,148,13)" fg:x="39" fg:w="1"/><text x="13.9824%" y="1039.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.35%)</title><rect x="13.7324%" y="1013" width="0.3521%" height="15" fill="rgb(215,36,0)" fg:x="39" fg:w="1"/><text x="13.9824%" y="1023.50"></text></g><g><title>std::sys::unix::stack_overflow::Handler::new (1 samples, 0.35%)</title><rect x="13.7324%" y="997" width="0.3521%" height="15" fill="rgb(218,173,48)" fg:x="39" fg:w="1"/><text x="13.9824%" y="1007.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (1 samples, 0.35%)</title><rect x="13.7324%" y="981" width="0.3521%" height="15" fill="rgb(237,166,40)" fg:x="39" fg:w="1"/><text x="13.9824%" y="991.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (1 samples, 0.35%)</title><rect x="13.7324%" y="965" width="0.3521%" height="15" fill="rgb(223,116,29)" fg:x="39" fg:w="1"/><text x="13.9824%" y="975.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (1 samples, 0.35%)</title><rect x="13.7324%" y="949" width="0.3521%" height="15" fill="rgb(233,124,20)" fg:x="39" fg:w="1"/><text x="13.9824%" y="959.50"></text></g><g><title>__GI___mprotect (1 samples, 0.35%)</title><rect x="13.7324%" y="933" width="0.3521%" height="15" fill="rgb(209,155,30)" fg:x="39" fg:w="1"/><text x="13.9824%" y="943.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="13.7324%" y="917" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="39" fg:w="1"/><text x="13.9824%" y="927.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="13.7324%" y="901" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="39" fg:w="1"/><text x="13.9824%" y="911.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="13.7324%" y="885" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="39" fg:w="1"/><text x="13.9824%" y="895.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="13.7324%" y="869" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="39" fg:w="1"/><text x="13.9824%" y="879.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="13.7324%" y="853" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="39" fg:w="1"/><text x="13.9824%" y="863.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="13.7324%" y="837" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="39" fg:w="1"/><text x="13.9824%" y="847.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="13.7324%" y="821" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="39" fg:w="1"/><text x="13.9824%" y="831.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (1 samples, 0.35%)</title><rect x="14.0845%" y="1029" width="0.3521%" height="15" fill="rgb(212,33,22)" fg:x="40" fg:w="1"/><text x="14.3345%" y="1039.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many (1 samples, 0.35%)</title><rect x="14.0845%" y="1013" width="0.3521%" height="15" fill="rgb(236,25,32)" fg:x="40" fg:w="1"/><text x="14.3345%" y="1023.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (1 samples, 0.35%)</title><rect x="14.0845%" y="997" width="0.3521%" height="15" fill="rgb(250,142,30)" fg:x="40" fg:w="1"/><text x="14.3345%" y="1007.50"></text></g><g><title>regex_automata::meta::strategy::new (1 samples, 0.35%)</title><rect x="14.0845%" y="981" width="0.3521%" height="15" fill="rgb(243,171,22)" fg:x="40" fg:w="1"/><text x="14.3345%" y="991.50"></text></g><g><title>regex_automata::meta::strategy::Core::new (1 samples, 0.35%)</title><rect x="14.0845%" y="965" width="0.3521%" height="15" fill="rgb(222,69,27)" fg:x="40" fg:w="1"/><text x="14.3345%" y="975.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (1 samples, 0.35%)</title><rect x="14.0845%" y="949" width="0.3521%" height="15" fill="rgb(226,42,16)" fg:x="40" fg:w="1"/><text x="14.3345%" y="959.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (1 samples, 0.35%)</title><rect x="14.0845%" y="933" width="0.3521%" height="15" fill="rgb(242,129,17)" fg:x="40" fg:w="1"/><text x="14.3345%" y="943.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (1 samples, 0.35%)</title><rect x="14.0845%" y="917" width="0.3521%" height="15" fill="rgb(247,137,3)" fg:x="40" fg:w="1"/><text x="14.3345%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.35%)</title><rect x="14.0845%" y="901" width="0.3521%" height="15" fill="rgb(214,109,53)" fg:x="40" fg:w="1"/><text x="14.3345%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.35%)</title><rect x="14.0845%" y="885" width="0.3521%" height="15" fill="rgb(254,35,30)" fg:x="40" fg:w="1"/><text x="14.3345%" y="895.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.35%)</title><rect x="14.0845%" y="869" width="0.3521%" height="15" fill="rgb(226,169,23)" fg:x="40" fg:w="1"/><text x="14.3345%" y="879.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile::{{closure}} (1 samples, 0.35%)</title><rect x="14.0845%" y="853" width="0.3521%" height="15" fill="rgb(218,216,52)" fg:x="40" fg:w="1"/><text x="14.3345%" y="863.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 0.35%)</title><rect x="14.0845%" y="837" width="0.3521%" height="15" fill="rgb(235,200,16)" fg:x="40" fg:w="1"/><text x="14.3345%" y="847.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.35%)</title><rect x="14.0845%" y="821" width="0.3521%" height="15" fill="rgb(213,34,18)" fg:x="40" fg:w="1"/><text x="14.3345%" y="831.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (1 samples, 0.35%)</title><rect x="14.0845%" y="805" width="0.3521%" height="15" fill="rgb(210,105,37)" fg:x="40" fg:w="1"/><text x="14.3345%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.35%)</title><rect x="14.0845%" y="789" width="0.3521%" height="15" fill="rgb(214,109,53)" fg:x="40" fg:w="1"/><text x="14.3345%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.35%)</title><rect x="14.0845%" y="773" width="0.3521%" height="15" fill="rgb(254,35,30)" fg:x="40" fg:w="1"/><text x="14.3345%" y="783.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.35%)</title><rect x="14.0845%" y="757" width="0.3521%" height="15" fill="rgb(226,169,23)" fg:x="40" fg:w="1"/><text x="14.3345%" y="767.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (1 samples, 0.35%)</title><rect x="14.0845%" y="741" width="0.3521%" height="15" fill="rgb(205,130,14)" fg:x="40" fg:w="1"/><text x="14.3345%" y="751.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_at_least (1 samples, 0.35%)</title><rect x="14.0845%" y="725" width="0.3521%" height="15" fill="rgb(238,57,7)" fg:x="40" fg:w="1"/><text x="14.3345%" y="735.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 0.35%)</title><rect x="14.0845%" y="709" width="0.3521%" height="15" fill="rgb(235,200,16)" fg:x="40" fg:w="1"/><text x="14.3345%" y="719.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.35%)</title><rect x="14.0845%" y="693" width="0.3521%" height="15" fill="rgb(213,34,18)" fg:x="40" fg:w="1"/><text x="14.3345%" y="703.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (1 samples, 0.35%)</title><rect x="14.0845%" y="677" width="0.3521%" height="15" fill="rgb(253,35,22)" fg:x="40" fg:w="1"/><text x="14.3345%" y="687.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (1 samples, 0.35%)</title><rect x="14.0845%" y="661" width="0.3521%" height="15" fill="rgb(247,137,3)" fg:x="40" fg:w="1"/><text x="14.3345%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.35%)</title><rect x="14.0845%" y="645" width="0.3521%" height="15" fill="rgb(214,109,53)" fg:x="40" fg:w="1"/><text x="14.3345%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.35%)</title><rect x="14.0845%" y="629" width="0.3521%" height="15" fill="rgb(254,35,30)" fg:x="40" fg:w="1"/><text x="14.3345%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.35%)</title><rect x="14.0845%" y="613" width="0.3521%" height="15" fill="rgb(226,169,23)" fg:x="40" fg:w="1"/><text x="14.3345%" y="623.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice::{{closure}} (1 samples, 0.35%)</title><rect x="14.0845%" y="597" width="0.3521%" height="15" fill="rgb(223,145,12)" fg:x="40" fg:w="1"/><text x="14.3345%" y="607.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 0.35%)</title><rect x="14.0845%" y="581" width="0.3521%" height="15" fill="rgb(235,200,16)" fg:x="40" fg:w="1"/><text x="14.3345%" y="591.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.35%)</title><rect x="14.0845%" y="565" width="0.3521%" height="15" fill="rgb(213,34,18)" fg:x="40" fg:w="1"/><text x="14.3345%" y="575.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (1 samples, 0.35%)</title><rect x="14.0845%" y="549" width="0.3521%" height="15" fill="rgb(210,105,37)" fg:x="40" fg:w="1"/><text x="14.3345%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.35%)</title><rect x="14.0845%" y="533" width="0.3521%" height="15" fill="rgb(214,109,53)" fg:x="40" fg:w="1"/><text x="14.3345%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.35%)</title><rect x="14.0845%" y="517" width="0.3521%" height="15" fill="rgb(254,35,30)" fg:x="40" fg:w="1"/><text x="14.3345%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.35%)</title><rect x="14.0845%" y="501" width="0.3521%" height="15" fill="rgb(226,169,23)" fg:x="40" fg:w="1"/><text x="14.3345%" y="511.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (1 samples, 0.35%)</title><rect x="14.0845%" y="485" width="0.3521%" height="15" fill="rgb(205,130,14)" fg:x="40" fg:w="1"/><text x="14.3345%" y="495.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_at_least (1 samples, 0.35%)</title><rect x="14.0845%" y="469" width="0.3521%" height="15" fill="rgb(238,57,7)" fg:x="40" fg:w="1"/><text x="14.3345%" y="479.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.35%)</title><rect x="14.0845%" y="453" width="0.3521%" height="15" fill="rgb(213,34,18)" fg:x="40" fg:w="1"/><text x="14.3345%" y="463.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class (1 samples, 0.35%)</title><rect x="14.0845%" y="437" width="0.3521%" height="15" fill="rgb(246,38,12)" fg:x="40" fg:w="1"/><text x="14.3345%" y="447.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::new (1 samples, 0.35%)</title><rect x="14.0845%" y="421" width="0.3521%" height="15" fill="rgb(211,200,20)" fg:x="40" fg:w="1"/><text x="14.3345%" y="431.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8State::clear (1 samples, 0.35%)</title><rect x="14.0845%" y="405" width="0.3521%" height="15" fill="rgb(241,127,0)" fg:x="40" fg:w="1"/><text x="14.3345%" y="415.50"></text></g><g><title>regex_automata::nfa::thompson::map::Utf8BoundedMap::clear (1 samples, 0.35%)</title><rect x="14.0845%" y="389" width="0.3521%" height="15" fill="rgb(207,86,25)" fg:x="40" fg:w="1"/><text x="14.3345%" y="399.50"></text></g><g><title>alloc::vec::from_elem (1 samples, 0.35%)</title><rect x="14.0845%" y="373" width="0.3521%" height="15" fill="rgb(208,109,54)" fg:x="40" fg:w="1"/><text x="14.3345%" y="383.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1 samples, 0.35%)</title><rect x="14.0845%" y="357" width="0.3521%" height="15" fill="rgb(228,177,24)" fg:x="40" fg:w="1"/><text x="14.3345%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (1 samples, 0.35%)</title><rect x="14.0845%" y="341" width="0.3521%" height="15" fill="rgb(216,52,5)" fg:x="40" fg:w="1"/><text x="14.3345%" y="351.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.35%)</title><rect x="14.0845%" y="325" width="0.3521%" height="15" fill="rgb(246,165,53)" fg:x="40" fg:w="1"/><text x="14.3345%" y="335.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.35%)</title><rect x="14.0845%" y="309" width="0.3521%" height="15" fill="rgb(226,134,37)" fg:x="40" fg:w="1"/><text x="14.3345%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.35%)</title><rect x="14.0845%" y="293" width="0.3521%" height="15" fill="rgb(232,29,30)" fg:x="40" fg:w="1"/><text x="14.3345%" y="303.50"></text></g><g><title>&lt;s4::CLI_Args as clap_builder::derive::Args&gt;::augment_args (1 samples, 0.35%)</title><rect x="14.4366%" y="1029" width="0.3521%" height="15" fill="rgb(230,145,47)" fg:x="41" fg:w="1"/><text x="14.6866%" y="1039.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.35%)</title><rect x="14.4366%" y="1013" width="0.3521%" height="15" fill="rgb(206,165,10)" fg:x="41" fg:w="1"/><text x="14.6866%" y="1023.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (1 samples, 0.35%)</title><rect x="14.4366%" y="997" width="0.3521%" height="15" fill="rgb(213,107,40)" fg:x="41" fg:w="1"/><text x="14.6866%" y="1007.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (1 samples, 0.35%)</title><rect x="14.4366%" y="981" width="0.3521%" height="15" fill="rgb(225,89,12)" fg:x="41" fg:w="1"/><text x="14.6866%" y="991.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.35%)</title><rect x="14.4366%" y="965" width="0.3521%" height="15" fill="rgb(223,143,22)" fg:x="41" fg:w="1"/><text x="14.6866%" y="975.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.35%)</title><rect x="14.4366%" y="949" width="0.3521%" height="15" fill="rgb(216,218,52)" fg:x="41" fg:w="1"/><text x="14.6866%" y="959.50"></text></g><g><title>once_cell::imp::initialize_or_wait (1 samples, 0.35%)</title><rect x="14.4366%" y="933" width="0.3521%" height="15" fill="rgb(247,128,5)" fg:x="41" fg:w="1"/><text x="14.6866%" y="943.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.35%)</title><rect x="14.4366%" y="917" width="0.3521%" height="15" fill="rgb(225,224,16)" fg:x="41" fg:w="1"/><text x="14.6866%" y="927.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (1 samples, 0.35%)</title><rect x="14.4366%" y="901" width="0.3521%" height="15" fill="rgb(237,110,11)" fg:x="41" fg:w="1"/><text x="14.6866%" y="911.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (1 samples, 0.35%)</title><rect x="14.4366%" y="885" width="0.3521%" height="15" fill="rgb(253,34,22)" fg:x="41" fg:w="1"/><text x="14.6866%" y="895.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force::{{closure}} (1 samples, 0.35%)</title><rect x="14.4366%" y="869" width="0.3521%" height="15" fill="rgb(211,30,54)" fg:x="41" fg:w="1"/><text x="14.6866%" y="879.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.35%)</title><rect x="14.4366%" y="853" width="0.3521%" height="15" fill="rgb(210,80,10)" fg:x="41" fg:w="1"/><text x="14.6866%" y="863.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.35%)</title><rect x="14.4366%" y="837" width="0.3521%" height="15" fill="rgb(210,80,10)" fg:x="41" fg:w="1"/><text x="14.6866%" y="847.50"></text></g><g><title>&lt;s4::CLI_Args as clap_builder::derive::Args&gt;::augment_args::DEFAULT_VALUE::{{closure}} (1 samples, 0.35%)</title><rect x="14.4366%" y="821" width="0.3521%" height="15" fill="rgb(211,191,16)" fg:x="41" fg:w="1"/><text x="14.6866%" y="831.50"></text></g><g><title>&lt;s4::LOCAL_NOW_OFFSET as core::ops::deref::Deref&gt;::deref (1 samples, 0.35%)</title><rect x="14.4366%" y="805" width="0.3521%" height="15" fill="rgb(224,211,37)" fg:x="41" fg:w="1"/><text x="14.6866%" y="815.50"></text></g><g><title>&lt;s4::LOCAL_NOW_OFFSET as core::ops::deref::Deref&gt;::deref::__stability (1 samples, 0.35%)</title><rect x="14.4366%" y="789" width="0.3521%" height="15" fill="rgb(214,139,35)" fg:x="41" fg:w="1"/><text x="14.6866%" y="799.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (1 samples, 0.35%)</title><rect x="14.4366%" y="773" width="0.3521%" height="15" fill="rgb(235,175,8)" fg:x="41" fg:w="1"/><text x="14.6866%" y="783.50"></text></g><g><title>std::sync::once::Once::call_once (1 samples, 0.35%)</title><rect x="14.4366%" y="757" width="0.3521%" height="15" fill="rgb(247,17,47)" fg:x="41" fg:w="1"/><text x="14.6866%" y="767.50"></text></g><g><title>std::sys_common::once::futex::Once::call (1 samples, 0.35%)</title><rect x="14.4366%" y="741" width="0.3521%" height="15" fill="rgb(246,168,49)" fg:x="41" fg:w="1"/><text x="14.6866%" y="751.50"></text></g><g><title>std::sync::once::Once::call_once::{{closure}} (1 samples, 0.35%)</title><rect x="14.4366%" y="725" width="0.3521%" height="15" fill="rgb(237,63,35)" fg:x="41" fg:w="1"/><text x="14.6866%" y="735.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}} (1 samples, 0.35%)</title><rect x="14.4366%" y="709" width="0.3521%" height="15" fill="rgb(238,7,51)" fg:x="41" fg:w="1"/><text x="14.6866%" y="719.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.35%)</title><rect x="14.4366%" y="693" width="0.3521%" height="15" fill="rgb(210,80,10)" fg:x="41" fg:w="1"/><text x="14.6866%" y="703.50"></text></g><g><title>&lt;s4::LOCAL_NOW_OFFSET as core::ops::deref::Deref&gt;::deref::__static_ref_initialize (1 samples, 0.35%)</title><rect x="14.4366%" y="677" width="0.3521%" height="15" fill="rgb(246,217,27)" fg:x="41" fg:w="1"/><text x="14.6866%" y="687.50"></text></g><g><title>&lt;s4::LOCAL_NOW as core::ops::deref::Deref&gt;::deref (1 samples, 0.35%)</title><rect x="14.4366%" y="661" width="0.3521%" height="15" fill="rgb(251,224,11)" fg:x="41" fg:w="1"/><text x="14.6866%" y="671.50"></text></g><g><title>&lt;s4::LOCAL_NOW as core::ops::deref::Deref&gt;::deref::__stability (1 samples, 0.35%)</title><rect x="14.4366%" y="645" width="0.3521%" height="15" fill="rgb(220,103,38)" fg:x="41" fg:w="1"/><text x="14.6866%" y="655.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (1 samples, 0.35%)</title><rect x="14.4366%" y="629" width="0.3521%" height="15" fill="rgb(235,175,8)" fg:x="41" fg:w="1"/><text x="14.6866%" y="639.50"></text></g><g><title>std::sync::once::Once::call_once (1 samples, 0.35%)</title><rect x="14.4366%" y="613" width="0.3521%" height="15" fill="rgb(247,17,47)" fg:x="41" fg:w="1"/><text x="14.6866%" y="623.50"></text></g><g><title>std::sys_common::once::futex::Once::call (1 samples, 0.35%)</title><rect x="14.4366%" y="597" width="0.3521%" height="15" fill="rgb(246,168,49)" fg:x="41" fg:w="1"/><text x="14.6866%" y="607.50"></text></g><g><title>std::sync::once::Once::call_once::{{closure}} (1 samples, 0.35%)</title><rect x="14.4366%" y="581" width="0.3521%" height="15" fill="rgb(237,63,35)" fg:x="41" fg:w="1"/><text x="14.6866%" y="591.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}} (1 samples, 0.35%)</title><rect x="14.4366%" y="565" width="0.3521%" height="15" fill="rgb(238,7,51)" fg:x="41" fg:w="1"/><text x="14.6866%" y="575.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.35%)</title><rect x="14.4366%" y="549" width="0.3521%" height="15" fill="rgb(210,80,10)" fg:x="41" fg:w="1"/><text x="14.6866%" y="559.50"></text></g><g><title>&lt;s4::LOCAL_NOW as core::ops::deref::Deref&gt;::deref::__static_ref_initialize (1 samples, 0.35%)</title><rect x="14.4366%" y="533" width="0.3521%" height="15" fill="rgb(241,128,21)" fg:x="41" fg:w="1"/><text x="14.6866%" y="543.50"></text></g><g><title>&lt;s4::UTC_NOW as core::ops::deref::Deref&gt;::deref (1 samples, 0.35%)</title><rect x="14.4366%" y="517" width="0.3521%" height="15" fill="rgb(222,80,38)" fg:x="41" fg:w="1"/><text x="14.6866%" y="527.50"></text></g><g><title>&lt;s4::UTC_NOW as core::ops::deref::Deref&gt;::deref::__stability (1 samples, 0.35%)</title><rect x="14.4366%" y="501" width="0.3521%" height="15" fill="rgb(230,142,10)" fg:x="41" fg:w="1"/><text x="14.6866%" y="511.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (1 samples, 0.35%)</title><rect x="14.4366%" y="485" width="0.3521%" height="15" fill="rgb(235,175,8)" fg:x="41" fg:w="1"/><text x="14.6866%" y="495.50"></text></g><g><title>std::sync::once::Once::call_once (1 samples, 0.35%)</title><rect x="14.4366%" y="469" width="0.3521%" height="15" fill="rgb(247,17,47)" fg:x="41" fg:w="1"/><text x="14.6866%" y="479.50"></text></g><g><title>std::sys_common::once::futex::Once::call (1 samples, 0.35%)</title><rect x="14.4366%" y="453" width="0.3521%" height="15" fill="rgb(246,168,49)" fg:x="41" fg:w="1"/><text x="14.6866%" y="463.50"></text></g><g><title>std::sync::once::Once::call_once::{{closure}} (1 samples, 0.35%)</title><rect x="14.4366%" y="437" width="0.3521%" height="15" fill="rgb(237,63,35)" fg:x="41" fg:w="1"/><text x="14.6866%" y="447.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}} (1 samples, 0.35%)</title><rect x="14.4366%" y="421" width="0.3521%" height="15" fill="rgb(238,7,51)" fg:x="41" fg:w="1"/><text x="14.6866%" y="431.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.35%)</title><rect x="14.4366%" y="405" width="0.3521%" height="15" fill="rgb(210,80,10)" fg:x="41" fg:w="1"/><text x="14.6866%" y="415.50"></text></g><g><title>&lt;s4::UTC_NOW as core::ops::deref::Deref&gt;::deref::__static_ref_initialize (1 samples, 0.35%)</title><rect x="14.4366%" y="389" width="0.3521%" height="15" fill="rgb(252,29,3)" fg:x="41" fg:w="1"/><text x="14.6866%" y="399.50"></text></g><g><title>chrono::offset::utc::Utc::now (1 samples, 0.35%)</title><rect x="14.4366%" y="373" width="0.3521%" height="15" fill="rgb(237,117,12)" fg:x="41" fg:w="1"/><text x="14.6866%" y="383.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.35%)</title><rect x="14.4366%" y="357" width="0.3521%" height="15" fill="rgb(227,203,15)" fg:x="41" fg:w="1"/><text x="14.6866%" y="367.50"></text></g><g><title>__GI___clock_gettime (1 samples, 0.35%)</title><rect x="14.4366%" y="341" width="0.3521%" height="15" fill="rgb(231,211,11)" fg:x="41" fg:w="1"/><text x="14.6866%" y="351.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.35%)</title><rect x="14.4366%" y="325" width="0.3521%" height="15" fill="rgb(212,103,52)" fg:x="41" fg:w="1"/><text x="14.6866%" y="335.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="14.4366%" y="309" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="41" fg:w="1"/><text x="14.6866%" y="319.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="14.4366%" y="293" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="41" fg:w="1"/><text x="14.6866%" y="303.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="14.4366%" y="277" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="41" fg:w="1"/><text x="14.6866%" y="287.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="14.4366%" y="261" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="41" fg:w="1"/><text x="14.6866%" y="271.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="14.4366%" y="245" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="41" fg:w="1"/><text x="14.6866%" y="255.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="14.4366%" y="229" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="41" fg:w="1"/><text x="14.6866%" y="239.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="14.4366%" y="213" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="41" fg:w="1"/><text x="14.6866%" y="223.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="14.4366%" y="197" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="41" fg:w="1"/><text x="14.6866%" y="207.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="14.4366%" y="181" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="41" fg:w="1"/><text x="14.6866%" y="191.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="14.4366%" y="165" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="41" fg:w="1"/><text x="14.6866%" y="175.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="14.4366%" y="149" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="41" fg:w="1"/><text x="14.6866%" y="159.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="14.4366%" y="133" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="41" fg:w="1"/><text x="14.6866%" y="143.50"></text></g><g><title>[unknown] (4 samples, 1.41%)</title><rect x="14.0845%" y="1045" width="1.4085%" height="15" fill="rgb(227,28,50)" fg:x="40" fg:w="4"/><text x="14.3345%" y="1055.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write (2 samples, 0.70%)</title><rect x="14.7887%" y="1029" width="0.7042%" height="15" fill="rgb(232,39,45)" fg:x="42" fg:w="2"/><text x="15.0387%" y="1039.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write (2 samples, 0.70%)</title><rect x="14.7887%" y="1013" width="0.7042%" height="15" fill="rgb(216,85,2)" fg:x="42" fg:w="2"/><text x="15.0387%" y="1023.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write (2 samples, 0.70%)</title><rect x="14.7887%" y="997" width="0.7042%" height="15" fill="rgb(226,48,36)" fg:x="42" fg:w="2"/><text x="15.0387%" y="1007.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write (2 samples, 0.70%)</title><rect x="14.7887%" y="981" width="0.7042%" height="15" fill="rgb(237,90,14)" fg:x="42" fg:w="2"/><text x="15.0387%" y="991.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write (2 samples, 0.70%)</title><rect x="14.7887%" y="965" width="0.7042%" height="15" fill="rgb(250,14,31)" fg:x="42" fg:w="2"/><text x="15.0387%" y="975.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_to_buffer_unchecked (2 samples, 0.70%)</title><rect x="14.7887%" y="949" width="0.7042%" height="15" fill="rgb(208,120,32)" fg:x="42" fg:w="2"/><text x="15.0387%" y="959.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.70%)</title><rect x="14.7887%" y="933" width="0.7042%" height="15" fill="rgb(214,20,35)" fg:x="42" fg:w="2"/><text x="15.0387%" y="943.50"></text></g><g><title>__GI___libc_write (2 samples, 0.70%)</title><rect x="14.7887%" y="917" width="0.7042%" height="15" fill="rgb(232,197,30)" fg:x="42" fg:w="2"/><text x="15.0387%" y="927.50"></text></g><g><title>__GI___libc_write (2 samples, 0.70%)</title><rect x="14.7887%" y="901" width="0.7042%" height="15" fill="rgb(232,197,30)" fg:x="42" fg:w="2"/><text x="15.0387%" y="911.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.70%)</title><rect x="14.7887%" y="885" width="0.7042%" height="15" fill="rgb(210,204,4)" fg:x="42" fg:w="2"/><text x="15.0387%" y="895.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="15.4930%" y="853" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="44" fg:w="1"/><text x="15.7430%" y="863.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 1.76%)</title><rect x="15.4930%" y="869" width="1.7606%" height="15" fill="rgb(210,204,4)" fg:x="44" fg:w="5"/><text x="15.7430%" y="879.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 2.11%)</title><rect x="15.4930%" y="885" width="2.1127%" height="15" fill="rgb(210,204,4)" fg:x="44" fg:w="6"/><text x="15.7430%" y="895.50">[..</text></g><g><title>[[kernel.kallsyms]] (7 samples, 2.46%)</title><rect x="15.4930%" y="933" width="2.4648%" height="15" fill="rgb(210,204,4)" fg:x="44" fg:w="7"/><text x="15.7430%" y="943.50">[[..</text></g><g><title>[[kernel.kallsyms]] (7 samples, 2.46%)</title><rect x="15.4930%" y="917" width="2.4648%" height="15" fill="rgb(210,204,4)" fg:x="44" fg:w="7"/><text x="15.7430%" y="927.50">[[..</text></g><g><title>[[kernel.kallsyms]] (7 samples, 2.46%)</title><rect x="15.4930%" y="901" width="2.4648%" height="15" fill="rgb(210,204,4)" fg:x="44" fg:w="7"/><text x="15.7430%" y="911.50">[[..</text></g><g><title>[[kernel.kallsyms]] (8 samples, 2.82%)</title><rect x="15.4930%" y="965" width="2.8169%" height="15" fill="rgb(210,204,4)" fg:x="44" fg:w="8"/><text x="15.7430%" y="975.50">[[..</text></g><g><title>[[kernel.kallsyms]] (8 samples, 2.82%)</title><rect x="15.4930%" y="949" width="2.8169%" height="15" fill="rgb(210,204,4)" fg:x="44" fg:w="8"/><text x="15.7430%" y="959.50">[[..</text></g><g><title>[[kernel.kallsyms]] (17 samples, 5.99%)</title><rect x="15.4930%" y="1045" width="5.9859%" height="15" fill="rgb(210,204,4)" fg:x="44" fg:w="17"/><text x="15.7430%" y="1055.50">[[kernel..</text></g><g><title>[[kernel.kallsyms]] (17 samples, 5.99%)</title><rect x="15.4930%" y="1029" width="5.9859%" height="15" fill="rgb(210,204,4)" fg:x="44" fg:w="17"/><text x="15.7430%" y="1039.50">[[kernel..</text></g><g><title>[[kernel.kallsyms]] (17 samples, 5.99%)</title><rect x="15.4930%" y="1013" width="5.9859%" height="15" fill="rgb(210,204,4)" fg:x="44" fg:w="17"/><text x="15.7430%" y="1023.50">[[kernel..</text></g><g><title>[[kernel.kallsyms]] (17 samples, 5.99%)</title><rect x="15.4930%" y="997" width="5.9859%" height="15" fill="rgb(210,204,4)" fg:x="44" fg:w="17"/><text x="15.7430%" y="1007.50">[[kernel..</text></g><g><title>[[kernel.kallsyms]] (17 samples, 5.99%)</title><rect x="15.4930%" y="981" width="5.9859%" height="15" fill="rgb(210,204,4)" fg:x="44" fg:w="17"/><text x="15.7430%" y="991.50">[[kernel..</text></g><g><title>s4 (62 samples, 21.83%)</title><rect x="0.0000%" y="1061" width="21.8310%" height="15" fill="rgb(230,7,27)" fg:x="0" fg:w="62"/><text x="0.2500%" y="1071.50">s4</text></g><g><title>[[heap]] (1 samples, 0.35%)</title><rect x="21.4789%" y="1045" width="0.3521%" height="15" fill="rgb(221,205,47)" fg:x="61" fg:w="1"/><text x="21.7289%" y="1055.50"></text></g><g><title>__GI___libc_write (1 samples, 0.35%)</title><rect x="21.4789%" y="1029" width="0.3521%" height="15" fill="rgb(232,197,30)" fg:x="61" fg:w="1"/><text x="21.7289%" y="1039.50"></text></g><g><title>__GI___libc_write (1 samples, 0.35%)</title><rect x="21.4789%" y="1013" width="0.3521%" height="15" fill="rgb(232,197,30)" fg:x="61" fg:w="1"/><text x="21.7289%" y="1023.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="21.4789%" y="997" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="61" fg:w="1"/><text x="21.7289%" y="1007.50"></text></g><g><title>perf-exec (10 samples, 3.52%)</title><rect x="21.8310%" y="1061" width="3.5211%" height="15" fill="rgb(250,111,27)" fg:x="62" fg:w="10"/><text x="22.0810%" y="1071.50">per..</text></g><g><title>[[kernel.kallsyms]] (10 samples, 3.52%)</title><rect x="21.8310%" y="1045" width="3.5211%" height="15" fill="rgb(210,204,4)" fg:x="62" fg:w="10"/><text x="22.0810%" y="1055.50">[[k..</text></g><g><title>[[kernel.kallsyms]] (10 samples, 3.52%)</title><rect x="21.8310%" y="1029" width="3.5211%" height="15" fill="rgb(210,204,4)" fg:x="62" fg:w="10"/><text x="22.0810%" y="1039.50">[[k..</text></g><g><title>[[kernel.kallsyms]] (10 samples, 3.52%)</title><rect x="21.8310%" y="1013" width="3.5211%" height="15" fill="rgb(210,204,4)" fg:x="62" fg:w="10"/><text x="22.0810%" y="1023.50">[[k..</text></g><g><title>[[kernel.kallsyms]] (10 samples, 3.52%)</title><rect x="21.8310%" y="997" width="3.5211%" height="15" fill="rgb(210,204,4)" fg:x="62" fg:w="10"/><text x="22.0810%" y="1007.50">[[k..</text></g><g><title>[[kernel.kallsyms]] (10 samples, 3.52%)</title><rect x="21.8310%" y="981" width="3.5211%" height="15" fill="rgb(210,204,4)" fg:x="62" fg:w="10"/><text x="22.0810%" y="991.50">[[k..</text></g><g><title>[[kernel.kallsyms]] (10 samples, 3.52%)</title><rect x="21.8310%" y="965" width="3.5211%" height="15" fill="rgb(210,204,4)" fg:x="62" fg:w="10"/><text x="22.0810%" y="975.50">[[k..</text></g><g><title>[[kernel.kallsyms]] (10 samples, 3.52%)</title><rect x="21.8310%" y="949" width="3.5211%" height="15" fill="rgb(210,204,4)" fg:x="62" fg:w="10"/><text x="22.0810%" y="959.50">[[k..</text></g><g><title>[[kernel.kallsyms]] (10 samples, 3.52%)</title><rect x="21.8310%" y="933" width="3.5211%" height="15" fill="rgb(210,204,4)" fg:x="62" fg:w="10"/><text x="22.0810%" y="943.50">[[k..</text></g><g><title>[[kernel.kallsyms]] (10 samples, 3.52%)</title><rect x="21.8310%" y="917" width="3.5211%" height="15" fill="rgb(210,204,4)" fg:x="62" fg:w="10"/><text x="22.0810%" y="927.50">[[k..</text></g><g><title>regex_automata::util::pool::Pool&lt;T,F&gt;::get (1 samples, 0.35%)</title><rect x="25.3521%" y="565" width="0.3521%" height="15" fill="rgb(210,26,34)" fg:x="72" fg:w="1"/><text x="25.6021%" y="575.50"></text></g><g><title>regex_automata::util::pool::inner::Pool&lt;T,F&gt;::get (1 samples, 0.35%)</title><rect x="25.3521%" y="549" width="0.3521%" height="15" fill="rgb(245,192,35)" fg:x="72" fg:w="1"/><text x="25.6021%" y="559.50"></text></g><g><title>regex_automata::util::pool::inner::Pool&lt;T,F&gt;::get_slow (1 samples, 0.35%)</title><rect x="25.3521%" y="533" width="0.3521%" height="15" fill="rgb(239,82,48)" fg:x="72" fg:w="1"/><text x="25.6021%" y="543.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (1 samples, 0.35%)</title><rect x="25.3521%" y="517" width="0.3521%" height="15" fill="rgb(249,36,21)" fg:x="72" fg:w="1"/><text x="25.6021%" y="527.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir::{{closure}} (1 samples, 0.35%)</title><rect x="25.3521%" y="501" width="0.3521%" height="15" fill="rgb(234,153,14)" fg:x="72" fg:w="1"/><text x="25.6021%" y="511.50"></text></g><g><title>&lt;regex_automata::meta::strategy::Core as regex_automata::meta::strategy::Strategy&gt;::create_cache (1 samples, 0.35%)</title><rect x="25.3521%" y="485" width="0.3521%" height="15" fill="rgb(250,2,44)" fg:x="72" fg:w="1"/><text x="25.6021%" y="495.50"></text></g><g><title>regex_automata::meta::wrappers::PikeVM::create_cache (1 samples, 0.35%)</title><rect x="25.3521%" y="469" width="0.3521%" height="15" fill="rgb(217,147,1)" fg:x="72" fg:w="1"/><text x="25.6021%" y="479.50"></text></g><g><title>regex_automata::meta::wrappers::PikeVMCache::new (1 samples, 0.35%)</title><rect x="25.3521%" y="453" width="0.3521%" height="15" fill="rgb(211,6,33)" fg:x="72" fg:w="1"/><text x="25.6021%" y="463.50"></text></g><g><title>regex_automata::nfa::thompson::pikevm::PikeVM::create_cache (1 samples, 0.35%)</title><rect x="25.3521%" y="437" width="0.3521%" height="15" fill="rgb(211,33,34)" fg:x="72" fg:w="1"/><text x="25.6021%" y="447.50"></text></g><g><title>regex_automata::nfa::thompson::pikevm::Cache::new (1 samples, 0.35%)</title><rect x="25.3521%" y="421" width="0.3521%" height="15" fill="rgb(244,199,14)" fg:x="72" fg:w="1"/><text x="25.6021%" y="431.50"></text></g><g><title>regex_automata::nfa::thompson::pikevm::ActiveStates::new (1 samples, 0.35%)</title><rect x="25.3521%" y="405" width="0.3521%" height="15" fill="rgb(220,13,3)" fg:x="72" fg:w="1"/><text x="25.6021%" y="415.50"></text></g><g><title>regex_automata::nfa::thompson::pikevm::ActiveStates::reset (1 samples, 0.35%)</title><rect x="25.3521%" y="389" width="0.3521%" height="15" fill="rgb(243,194,33)" fg:x="72" fg:w="1"/><text x="25.6021%" y="399.50"></text></g><g><title>regex_automata::nfa::thompson::pikevm::SlotTable::reset (1 samples, 0.35%)</title><rect x="25.3521%" y="373" width="0.3521%" height="15" fill="rgb(226,221,20)" fg:x="72" fg:w="1"/><text x="25.6021%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (1 samples, 0.35%)</title><rect x="25.3521%" y="357" width="0.3521%" height="15" fill="rgb(249,199,35)" fg:x="72" fg:w="1"/><text x="25.6021%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (1 samples, 0.35%)</title><rect x="25.3521%" y="341" width="0.3521%" height="15" fill="rgb(216,52,5)" fg:x="72" fg:w="1"/><text x="25.6021%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.35%)</title><rect x="25.3521%" y="325" width="0.3521%" height="15" fill="rgb(212,159,3)" fg:x="72" fg:w="1"/><text x="25.6021%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.35%)</title><rect x="25.3521%" y="309" width="0.3521%" height="15" fill="rgb(231,142,39)" fg:x="72" fg:w="1"/><text x="25.6021%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.35%)</title><rect x="25.3521%" y="293" width="0.3521%" height="15" fill="rgb(249,2,22)" fg:x="72" fg:w="1"/><text x="25.6021%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.35%)</title><rect x="25.3521%" y="277" width="0.3521%" height="15" fill="rgb(254,53,35)" fg:x="72" fg:w="1"/><text x="25.6021%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.35%)</title><rect x="25.3521%" y="261" width="0.3521%" height="15" fill="rgb(237,133,22)" fg:x="72" fg:w="1"/><text x="25.6021%" y="271.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.35%)</title><rect x="25.3521%" y="245" width="0.3521%" height="15" fill="rgb(206,112,53)" fg:x="72" fg:w="1"/><text x="25.6021%" y="255.50"></text></g><g><title>_int_malloc (1 samples, 0.35%)</title><rect x="25.3521%" y="229" width="0.3521%" height="15" fill="rgb(222,219,51)" fg:x="72" fg:w="1"/><text x="25.6021%" y="239.50"></text></g><g><title>regex::regex::bytes::Regex::captures (2 samples, 0.70%)</title><rect x="25.3521%" y="645" width="0.7042%" height="15" fill="rgb(233,29,12)" fg:x="72" fg:w="2"/><text x="25.6021%" y="655.50"></text></g><g><title>regex::regex::bytes::Regex::captures_at (2 samples, 0.70%)</title><rect x="25.3521%" y="629" width="0.7042%" height="15" fill="rgb(207,96,18)" fg:x="72" fg:w="2"/><text x="25.6021%" y="639.50"></text></g><g><title>regex_automata::meta::regex::Regex::captures (2 samples, 0.70%)</title><rect x="25.3521%" y="613" width="0.7042%" height="15" fill="rgb(219,198,6)" fg:x="72" fg:w="2"/><text x="25.6021%" y="623.50"></text></g><g><title>regex_automata::meta::regex::Regex::search_captures (2 samples, 0.70%)</title><rect x="25.3521%" y="597" width="0.7042%" height="15" fill="rgb(212,211,21)" fg:x="72" fg:w="2"/><text x="25.6021%" y="607.50"></text></g><g><title>regex_automata::meta::regex::Regex::search_slots (2 samples, 0.70%)</title><rect x="25.3521%" y="581" width="0.7042%" height="15" fill="rgb(243,12,43)" fg:x="72" fg:w="2"/><text x="25.6021%" y="591.50"></text></g><g><title>&lt;regex_automata::meta::strategy::Core as regex_automata::meta::strategy::Strategy&gt;::search_slots (1 samples, 0.35%)</title><rect x="25.7042%" y="565" width="0.3521%" height="15" fill="rgb(221,222,32)" fg:x="73" fg:w="1"/><text x="25.9542%" y="575.50"></text></g><g><title>regex_automata::meta::strategy::Core::try_search_mayfail (1 samples, 0.35%)</title><rect x="25.7042%" y="549" width="0.3521%" height="15" fill="rgb(244,122,16)" fg:x="73" fg:w="1"/><text x="25.9542%" y="559.50"></text></g><g><title>regex_automata::meta::wrappers::HybridEngine::try_search (1 samples, 0.35%)</title><rect x="25.7042%" y="533" width="0.3521%" height="15" fill="rgb(216,227,19)" fg:x="73" fg:w="1"/><text x="25.9542%" y="543.50"></text></g><g><title>regex_automata::hybrid::regex::Regex::try_search (1 samples, 0.35%)</title><rect x="25.7042%" y="517" width="0.3521%" height="15" fill="rgb(234,124,32)" fg:x="73" fg:w="1"/><text x="25.9542%" y="527.50"></text></g><g><title>regex_automata::hybrid::dfa::DFA::try_search_fwd (1 samples, 0.35%)</title><rect x="25.7042%" y="501" width="0.3521%" height="15" fill="rgb(209,194,30)" fg:x="73" fg:w="1"/><text x="25.9542%" y="511.50"></text></g><g><title>regex_automata::hybrid::search::find_fwd (1 samples, 0.35%)</title><rect x="25.7042%" y="485" width="0.3521%" height="15" fill="rgb(254,161,34)" fg:x="73" fg:w="1"/><text x="25.9542%" y="495.50"></text></g><g><title>regex_automata::hybrid::search::find_fwd_imp (1 samples, 0.35%)</title><rect x="25.7042%" y="469" width="0.3521%" height="15" fill="rgb(246,79,15)" fg:x="73" fg:w="1"/><text x="25.9542%" y="479.50"></text></g><g><title>regex_automata::hybrid::dfa::DFA::next_state (1 samples, 0.35%)</title><rect x="25.7042%" y="453" width="0.3521%" height="15" fill="rgb(223,122,32)" fg:x="73" fg:w="1"/><text x="25.9542%" y="463.50"></text></g><g><title>regex_automata::hybrid::dfa::Lazy::cache_next_state (1 samples, 0.35%)</title><rect x="25.7042%" y="437" width="0.3521%" height="15" fill="rgb(233,228,11)" fg:x="73" fg:w="1"/><text x="25.9542%" y="447.50"></text></g><g><title>regex_automata::util::determinize::next (1 samples, 0.35%)</title><rect x="25.7042%" y="421" width="0.3521%" height="15" fill="rgb(227,112,15)" fg:x="73" fg:w="1"/><text x="25.9542%" y="431.50"></text></g><g><title>regex::builders::bytes::RegexBuilder::new (1 samples, 0.35%)</title><rect x="26.0563%" y="533" width="0.3521%" height="15" fill="rgb(246,66,5)" fg:x="74" fg:w="1"/><text x="26.3063%" y="543.50"></text></g><g><title>regex::builders::Builder::new (1 samples, 0.35%)</title><rect x="26.0563%" y="517" width="0.3521%" height="15" fill="rgb(223,120,31)" fg:x="74" fg:w="1"/><text x="26.3063%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.35%)</title><rect x="26.0563%" y="501" width="0.3521%" height="15" fill="rgb(205,186,49)" fg:x="74" fg:w="1"/><text x="26.3063%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.35%)</title><rect x="26.0563%" y="485" width="0.3521%" height="15" fill="rgb(232,211,42)" fg:x="74" fg:w="1"/><text x="26.3063%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.35%)</title><rect x="26.0563%" y="469" width="0.3521%" height="15" fill="rgb(214,146,48)" fg:x="74" fg:w="1"/><text x="26.3063%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.35%)</title><rect x="26.0563%" y="453" width="0.3521%" height="15" fill="rgb(245,181,4)" fg:x="74" fg:w="1"/><text x="26.3063%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.35%)</title><rect x="26.0563%" y="437" width="0.3521%" height="15" fill="rgb(242,69,50)" fg:x="74" fg:w="1"/><text x="26.3063%" y="447.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.35%)</title><rect x="26.0563%" y="421" width="0.3521%" height="15" fill="rgb(238,117,12)" fg:x="74" fg:w="1"/><text x="26.3063%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::by_ref_sized::ByRefSized&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.35%)</title><rect x="26.0563%" y="405" width="0.3521%" height="15" fill="rgb(217,183,5)" fg:x="74" fg:w="1"/><text x="26.3063%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.35%)</title><rect x="26.0563%" y="389" width="0.3521%" height="15" fill="rgb(223,137,46)" fg:x="74" fg:w="1"/><text x="26.3063%" y="399.50"></text></g><g><title>&lt;core::const_closure::ConstFnMutClosure&lt;&amp;mut A,Function&gt; as core::ops::function::FnMut&lt;ClosureArguments&gt;&gt;::call_mut (1 samples, 0.35%)</title><rect x="26.0563%" y="373" width="0.3521%" height="15" fill="rgb(206,27,14)" fg:x="74" fg:w="1"/><text x="26.3063%" y="383.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.35%)</title><rect x="26.0563%" y="357" width="0.3521%" height="15" fill="rgb(235,49,44)" fg:x="74" fg:w="1"/><text x="26.3063%" y="367.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_2_imp (1 samples, 0.35%)</title><rect x="26.0563%" y="341" width="0.3521%" height="15" fill="rgb(252,20,41)" fg:x="74" fg:w="1"/><text x="26.3063%" y="351.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (1 samples, 0.35%)</title><rect x="26.0563%" y="325" width="0.3521%" height="15" fill="rgb(226,146,40)" fg:x="74" fg:w="1"/><text x="26.3063%" y="335.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.35%)</title><rect x="26.0563%" y="309" width="0.3521%" height="15" fill="rgb(253,112,1)" fg:x="74" fg:w="1"/><text x="26.3063%" y="319.50"></text></g><g><title>regex::builders::Builder::new::{{closure}} (1 samples, 0.35%)</title><rect x="26.0563%" y="293" width="0.3521%" height="15" fill="rgb(240,154,24)" fg:x="74" fg:w="1"/><text x="26.3063%" y="303.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (1 samples, 0.35%)</title><rect x="26.0563%" y="277" width="0.3521%" height="15" fill="rgb(212,135,46)" fg:x="74" fg:w="1"/><text x="26.3063%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.35%)</title><rect x="26.0563%" y="261" width="0.3521%" height="15" fill="rgb(229,24,43)" fg:x="74" fg:w="1"/><text x="26.3063%" y="271.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.35%)</title><rect x="26.0563%" y="245" width="0.3521%" height="15" fill="rgb(240,68,32)" fg:x="74" fg:w="1"/><text x="26.3063%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.35%)</title><rect x="26.0563%" y="229" width="0.3521%" height="15" fill="rgb(212,75,49)" fg:x="74" fg:w="1"/><text x="26.3063%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.35%)</title><rect x="26.0563%" y="213" width="0.3521%" height="15" fill="rgb(209,26,30)" fg:x="74" fg:w="1"/><text x="26.3063%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.35%)</title><rect x="26.0563%" y="197" width="0.3521%" height="15" fill="rgb(229,121,46)" fg:x="74" fg:w="1"/><text x="26.3063%" y="207.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.35%)</title><rect x="26.0563%" y="181" width="0.3521%" height="15" fill="rgb(221,172,50)" fg:x="74" fg:w="1"/><text x="26.3063%" y="191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.35%)</title><rect x="26.0563%" y="165" width="0.3521%" height="15" fill="rgb(216,42,52)" fg:x="74" fg:w="1"/><text x="26.3063%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.35%)</title><rect x="26.0563%" y="149" width="0.3521%" height="15" fill="rgb(249,207,12)" fg:x="74" fg:w="1"/><text x="26.3063%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.35%)</title><rect x="26.0563%" y="133" width="0.3521%" height="15" fill="rgb(224,194,14)" fg:x="74" fg:w="1"/><text x="26.3063%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.35%)</title><rect x="26.0563%" y="117" width="0.3521%" height="15" fill="rgb(227,204,5)" fg:x="74" fg:w="1"/><text x="26.3063%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.35%)</title><rect x="26.0563%" y="101" width="0.3521%" height="15" fill="rgb(231,114,21)" fg:x="74" fg:w="1"/><text x="26.3063%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.35%)</title><rect x="26.0563%" y="85" width="0.3521%" height="15" fill="rgb(238,209,2)" fg:x="74" fg:w="1"/><text x="26.3063%" y="95.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.35%)</title><rect x="26.0563%" y="69" width="0.3521%" height="15" fill="rgb(253,135,41)" fg:x="74" fg:w="1"/><text x="26.3063%" y="79.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.35%)</title><rect x="26.0563%" y="53" width="0.3521%" height="15" fill="rgb(206,112,53)" fg:x="74" fg:w="1"/><text x="26.3063%" y="63.50"></text></g><g><title>_int_malloc (1 samples, 0.35%)</title><rect x="26.0563%" y="37" width="0.3521%" height="15" fill="rgb(222,219,51)" fg:x="74" fg:w="1"/><text x="26.3063%" y="47.50"></text></g><g><title>regex_syntax::hir::translate::TranslatorI::hir_ascii_unicode_class (1 samples, 0.35%)</title><rect x="26.4085%" y="357" width="0.3521%" height="15" fill="rgb(239,90,10)" fg:x="75" fg:w="1"/><text x="26.6585%" y="367.50"></text></g><g><title>regex_syntax::hir::translate::TranslatorI::unicode_fold_and_negate (1 samples, 0.35%)</title><rect x="26.4085%" y="341" width="0.3521%" height="15" fill="rgb(228,29,41)" fg:x="75" fg:w="1"/><text x="26.6585%" y="351.50"></text></g><g><title>regex_syntax::ast::visitor::HeapVisitor::induct (2 samples, 0.70%)</title><rect x="26.4085%" y="421" width="0.7042%" height="15" fill="rgb(220,131,54)" fg:x="75" fg:w="2"/><text x="26.6585%" y="431.50"></text></g><g><title>regex_syntax::ast::visitor::HeapVisitor::visit_class (2 samples, 0.70%)</title><rect x="26.4085%" y="405" width="0.7042%" height="15" fill="rgb(253,26,45)" fg:x="75" fg:w="2"/><text x="26.6585%" y="415.50"></text></g><g><title>regex_syntax::ast::visitor::HeapVisitor::visit_class_post (2 samples, 0.70%)</title><rect x="26.4085%" y="389" width="0.7042%" height="15" fill="rgb(236,134,51)" fg:x="75" fg:w="2"/><text x="26.6585%" y="399.50"></text></g><g><title>&lt;regex_syntax::hir::translate::TranslatorI as regex_syntax::ast::visitor::Visitor&gt;::visit_class_set_item_post (2 samples, 0.70%)</title><rect x="26.4085%" y="373" width="0.7042%" height="15" fill="rgb(209,145,6)" fg:x="75" fg:w="2"/><text x="26.6585%" y="383.50"></text></g><g><title>__GI___libc_free (1 samples, 0.35%)</title><rect x="26.7606%" y="357" width="0.3521%" height="15" fill="rgb(247,8,17)" fg:x="76" fg:w="1"/><text x="27.0106%" y="367.50"></text></g><g><title>regex_syntax::hir::translate::TranslatorI::push_char (1 samples, 0.35%)</title><rect x="27.1127%" y="405" width="0.3521%" height="15" fill="rgb(208,83,35)" fg:x="77" fg:w="1"/><text x="27.3627%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.35%)</title><rect x="27.1127%" y="389" width="0.3521%" height="15" fill="rgb(243,52,34)" fg:x="77" fg:w="1"/><text x="27.3627%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.35%)</title><rect x="27.1127%" y="373" width="0.3521%" height="15" fill="rgb(224,207,30)" fg:x="77" fg:w="1"/><text x="27.3627%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.35%)</title><rect x="27.1127%" y="357" width="0.3521%" height="15" fill="rgb(251,49,54)" fg:x="77" fg:w="1"/><text x="27.3627%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.35%)</title><rect x="27.1127%" y="341" width="0.3521%" height="15" fill="rgb(248,74,39)" fg:x="77" fg:w="1"/><text x="27.3627%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.35%)</title><rect x="27.1127%" y="325" width="0.3521%" height="15" fill="rgb(239,196,40)" fg:x="77" fg:w="1"/><text x="27.3627%" y="335.50"></text></g><g><title>regex_syntax::hir::Properties::literal (1 samples, 0.35%)</title><rect x="27.4648%" y="373" width="0.3521%" height="15" fill="rgb(224,191,39)" fg:x="78" fg:w="1"/><text x="27.7148%" y="383.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.35%)</title><rect x="27.4648%" y="357" width="0.3521%" height="15" fill="rgb(248,147,30)" fg:x="78" fg:w="1"/><text x="27.7148%" y="367.50"></text></g><g><title>regex_syntax::hir::translate::TranslatorI::pop_concat_expr (2 samples, 0.70%)</title><rect x="27.4648%" y="405" width="0.7042%" height="15" fill="rgb(213,98,0)" fg:x="78" fg:w="2"/><text x="27.7148%" y="415.50"></text></g><g><title>regex_syntax::hir::Hir::literal (2 samples, 0.70%)</title><rect x="27.4648%" y="389" width="0.7042%" height="15" fill="rgb(248,43,17)" fg:x="78" fg:w="2"/><text x="27.7148%" y="399.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.35%)</title><rect x="27.8169%" y="373" width="0.3521%" height="15" fill="rgb(249,58,20)" fg:x="79" fg:w="1"/><text x="28.0669%" y="383.50"></text></g><g><title>alloc::vec::&lt;impl core::convert::From&lt;alloc::vec::Vec&lt;T,A&gt;&gt; for alloc::boxed::Box&lt;[T],A&gt;&gt;::from (1 samples, 0.35%)</title><rect x="27.8169%" y="357" width="0.3521%" height="15" fill="rgb(222,176,43)" fg:x="79" fg:w="1"/><text x="28.0669%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (1 samples, 0.35%)</title><rect x="27.8169%" y="341" width="0.3521%" height="15" fill="rgb(241,79,3)" fg:x="79" fg:w="1"/><text x="28.0669%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::shrink_to_fit (1 samples, 0.35%)</title><rect x="27.8169%" y="325" width="0.3521%" height="15" fill="rgb(242,210,14)" fg:x="79" fg:w="1"/><text x="28.0669%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::shrink_to_fit (1 samples, 0.35%)</title><rect x="27.8169%" y="309" width="0.3521%" height="15" fill="rgb(226,51,15)" fg:x="79" fg:w="1"/><text x="28.0669%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::shrink (1 samples, 0.35%)</title><rect x="27.8169%" y="293" width="0.3521%" height="15" fill="rgb(220,229,0)" fg:x="79" fg:w="1"/><text x="28.0669%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::shrink (1 samples, 0.35%)</title><rect x="27.8169%" y="277" width="0.3521%" height="15" fill="rgb(225,20,48)" fg:x="79" fg:w="1"/><text x="28.0669%" y="287.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.35%)</title><rect x="27.8169%" y="261" width="0.3521%" height="15" fill="rgb(254,47,34)" fg:x="79" fg:w="1"/><text x="28.0669%" y="271.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.35%)</title><rect x="27.8169%" y="245" width="0.3521%" height="15" fill="rgb(254,73,4)" fg:x="79" fg:w="1"/><text x="28.0669%" y="255.50"></text></g><g><title>regex_syntax::hir::translate::TranslatorI::case_fold_char (1 samples, 0.35%)</title><rect x="28.1690%" y="405" width="0.3521%" height="15" fill="rgb(240,41,22)" fg:x="80" fg:w="1"/><text x="28.4190%" y="415.50"></text></g><g><title>regex_syntax::hir::ClassUnicode::try_case_fold_simple (1 samples, 0.35%)</title><rect x="28.1690%" y="389" width="0.3521%" height="15" fill="rgb(225,146,29)" fg:x="80" fg:w="1"/><text x="28.4190%" y="399.50"></text></g><g><title>regex_syntax::hir::interval::IntervalSet&lt;I&gt;::case_fold_simple (1 samples, 0.35%)</title><rect x="28.1690%" y="373" width="0.3521%" height="15" fill="rgb(211,184,23)" fg:x="80" fg:w="1"/><text x="28.4190%" y="383.50"></text></g><g><title>&lt;regex_syntax::hir::ClassUnicodeRange as regex_syntax::hir::interval::Interval&gt;::case_fold_simple (1 samples, 0.35%)</title><rect x="28.1690%" y="357" width="0.3521%" height="15" fill="rgb(242,212,29)" fg:x="80" fg:w="1"/><text x="28.4190%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.35%)</title><rect x="28.1690%" y="341" width="0.3521%" height="15" fill="rgb(241,229,15)" fg:x="80" fg:w="1"/><text x="28.4190%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.35%)</title><rect x="28.1690%" y="325" width="0.3521%" height="15" fill="rgb(254,103,39)" fg:x="80" fg:w="1"/><text x="28.4190%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.35%)</title><rect x="28.1690%" y="309" width="0.3521%" height="15" fill="rgb(254,53,35)" fg:x="80" fg:w="1"/><text x="28.4190%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.35%)</title><rect x="28.1690%" y="293" width="0.3521%" height="15" fill="rgb(237,133,22)" fg:x="80" fg:w="1"/><text x="28.4190%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.35%)</title><rect x="28.1690%" y="277" width="0.3521%" height="15" fill="rgb(237,156,49)" fg:x="80" fg:w="1"/><text x="28.4190%" y="287.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.35%)</title><rect x="28.1690%" y="261" width="0.3521%" height="15" fill="rgb(214,150,36)" fg:x="80" fg:w="1"/><text x="28.4190%" y="271.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.35%)</title><rect x="28.1690%" y="245" width="0.3521%" height="15" fill="rgb(254,47,34)" fg:x="80" fg:w="1"/><text x="28.4190%" y="255.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.35%)</title><rect x="28.1690%" y="229" width="0.3521%" height="15" fill="rgb(254,73,4)" fg:x="80" fg:w="1"/><text x="28.4190%" y="239.50"></text></g><g><title>_int_realloc (1 samples, 0.35%)</title><rect x="28.1690%" y="213" width="0.3521%" height="15" fill="rgb(231,75,41)" fg:x="80" fg:w="1"/><text x="28.4190%" y="223.50"></text></g><g><title>_int_malloc (1 samples, 0.35%)</title><rect x="28.1690%" y="197" width="0.3521%" height="15" fill="rgb(222,219,51)" fg:x="80" fg:w="1"/><text x="28.4190%" y="207.50"></text></g><g><title>tcache_put (1 samples, 0.35%)</title><rect x="28.1690%" y="181" width="0.3521%" height="15" fill="rgb(227,177,28)" fg:x="80" fg:w="1"/><text x="28.4190%" y="191.50"></text></g><g><title>regex_syntax::hir::Hir::into_parts (1 samples, 0.35%)</title><rect x="28.5211%" y="389" width="0.3521%" height="15" fill="rgb(217,98,50)" fg:x="81" fg:w="1"/><text x="28.7711%" y="399.50"></text></g><g><title>regex_syntax::hir::Properties::empty (1 samples, 0.35%)</title><rect x="28.5211%" y="373" width="0.3521%" height="15" fill="rgb(222,71,35)" fg:x="81" fg:w="1"/><text x="28.7711%" y="383.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.35%)</title><rect x="28.5211%" y="357" width="0.3521%" height="15" fill="rgb(209,114,30)" fg:x="81" fg:w="1"/><text x="28.7711%" y="367.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.35%)</title><rect x="28.5211%" y="341" width="0.3521%" height="15" fill="rgb(248,129,10)" fg:x="81" fg:w="1"/><text x="28.7711%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.35%)</title><rect x="28.5211%" y="325" width="0.3521%" height="15" fill="rgb(231,114,21)" fg:x="81" fg:w="1"/><text x="28.7711%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.35%)</title><rect x="28.5211%" y="309" width="0.3521%" height="15" fill="rgb(238,209,2)" fg:x="81" fg:w="1"/><text x="28.7711%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.35%)</title><rect x="28.5211%" y="293" width="0.3521%" height="15" fill="rgb(253,135,41)" fg:x="81" fg:w="1"/><text x="28.7711%" y="303.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.35%)</title><rect x="28.5211%" y="277" width="0.3521%" height="15" fill="rgb(206,112,53)" fg:x="81" fg:w="1"/><text x="28.7711%" y="287.50"></text></g><g><title>_int_malloc (1 samples, 0.35%)</title><rect x="28.5211%" y="261" width="0.3521%" height="15" fill="rgb(222,219,51)" fg:x="81" fg:w="1"/><text x="28.7711%" y="271.50"></text></g><g><title>__GI___libc_free (1 samples, 0.35%)</title><rect x="28.8732%" y="373" width="0.3521%" height="15" fill="rgb(247,8,17)" fg:x="82" fg:w="1"/><text x="29.1232%" y="383.50"></text></g><g><title>_int_free (1 samples, 0.35%)</title><rect x="28.8732%" y="357" width="0.3521%" height="15" fill="rgb(221,113,48)" fg:x="82" fg:w="1"/><text x="29.1232%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;regex_syntax::hir::Hir&gt;&gt; (2 samples, 0.70%)</title><rect x="28.8732%" y="389" width="0.7042%" height="15" fill="rgb(225,127,54)" fg:x="82" fg:w="2"/><text x="29.1232%" y="399.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.35%)</title><rect x="29.2254%" y="373" width="0.3521%" height="15" fill="rgb(240,119,4)" fg:x="83" fg:w="1"/><text x="29.4754%" y="383.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (1 samples, 0.35%)</title><rect x="29.2254%" y="357" width="0.3521%" height="15" fill="rgb(215,100,25)" fg:x="83" fg:w="1"/><text x="29.4754%" y="367.50"></text></g><g><title>regex_syntax::hir::Hir::concat (4 samples, 1.41%)</title><rect x="28.5211%" y="405" width="1.4085%" height="15" fill="rgb(228,76,42)" fg:x="81" fg:w="4"/><text x="28.7711%" y="415.50"></text></g><g><title>__GI___libc_free (1 samples, 0.35%)</title><rect x="29.5775%" y="389" width="0.3521%" height="15" fill="rgb(247,8,17)" fg:x="84" fg:w="1"/><text x="29.8275%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::hir::Hir&gt; (1 samples, 0.35%)</title><rect x="29.9296%" y="373" width="0.3521%" height="15" fill="rgb(244,216,7)" fg:x="85" fg:w="1"/><text x="30.1796%" y="383.50"></text></g><g><title>regex_syntax::hir::Hir::alternation (2 samples, 0.70%)</title><rect x="29.9296%" y="405" width="0.7042%" height="15" fill="rgb(206,114,23)" fg:x="85" fg:w="2"/><text x="30.1796%" y="415.50"></text></g><g><title>regex_syntax::hir::Hir::into_parts (2 samples, 0.70%)</title><rect x="29.9296%" y="389" width="0.7042%" height="15" fill="rgb(217,98,50)" fg:x="85" fg:w="2"/><text x="30.1796%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.35%)</title><rect x="30.6338%" y="405" width="0.3521%" height="15" fill="rgb(241,229,15)" fg:x="87" fg:w="1"/><text x="30.8838%" y="415.50"></text></g><g><title>core::ptr::write (1 samples, 0.35%)</title><rect x="30.6338%" y="389" width="0.3521%" height="15" fill="rgb(209,143,44)" fg:x="87" fg:w="1"/><text x="30.8838%" y="399.50"></text></g><g><title>&lt;regex_syntax::hir::translate::TranslatorI as regex_syntax::ast::visitor::Visitor&gt;::visit_post (14 samples, 4.93%)</title><rect x="27.1127%" y="421" width="4.9296%" height="15" fill="rgb(207,12,29)" fg:x="77" fg:w="14"/><text x="27.3627%" y="431.50">&lt;regex..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.35%)</title><rect x="32.0423%" y="389" width="0.3521%" height="15" fill="rgb(241,229,15)" fg:x="91" fg:w="1"/><text x="32.2923%" y="399.50"></text></g><g><title>core::ptr::write (1 samples, 0.35%)</title><rect x="32.0423%" y="373" width="0.3521%" height="15" fill="rgb(209,143,44)" fg:x="91" fg:w="1"/><text x="32.2923%" y="383.50"></text></g><g><title>regex_syntax::hir::translate::Translator::translate (18 samples, 6.34%)</title><rect x="26.4085%" y="469" width="6.3380%" height="15" fill="rgb(212,73,14)" fg:x="75" fg:w="18"/><text x="26.6585%" y="479.50">regex_sy..</text></g><g><title>regex_syntax::ast::visitor::visit (18 samples, 6.34%)</title><rect x="26.4085%" y="453" width="6.3380%" height="15" fill="rgb(209,184,21)" fg:x="75" fg:w="18"/><text x="26.6585%" y="463.50">regex_sy..</text></g><g><title>regex_syntax::ast::visitor::HeapVisitor::visit (18 samples, 6.34%)</title><rect x="26.4085%" y="437" width="6.3380%" height="15" fill="rgb(253,224,17)" fg:x="75" fg:w="18"/><text x="26.6585%" y="447.50">regex_sy..</text></g><g><title>&lt;regex_syntax::hir::translate::TranslatorI as regex_syntax::ast::visitor::Visitor&gt;::visit_alternation_in (2 samples, 0.70%)</title><rect x="32.0423%" y="421" width="0.7042%" height="15" fill="rgb(208,41,30)" fg:x="91" fg:w="2"/><text x="32.2923%" y="431.50"></text></g><g><title>regex_syntax::hir::translate::TranslatorI::push (2 samples, 0.70%)</title><rect x="32.0423%" y="405" width="0.7042%" height="15" fill="rgb(222,136,12)" fg:x="91" fg:w="2"/><text x="32.2923%" y="415.50"></text></g><g><title>_int_malloc (2 samples, 0.70%)</title><rect x="32.7465%" y="293" width="0.7042%" height="15" fill="rgb(222,219,51)" fg:x="93" fg:w="2"/><text x="32.9965%" y="303.50"></text></g><g><title>alloc::alloc::exchange_malloc (5 samples, 1.76%)</title><rect x="32.7465%" y="373" width="1.7606%" height="15" fill="rgb(248,129,10)" fg:x="93" fg:w="5"/><text x="32.9965%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 1.76%)</title><rect x="32.7465%" y="357" width="1.7606%" height="15" fill="rgb(231,114,21)" fg:x="93" fg:w="5"/><text x="32.9965%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 1.76%)</title><rect x="32.7465%" y="341" width="1.7606%" height="15" fill="rgb(238,209,2)" fg:x="93" fg:w="5"/><text x="32.9965%" y="351.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 1.76%)</title><rect x="32.7465%" y="325" width="1.7606%" height="15" fill="rgb(253,135,41)" fg:x="93" fg:w="5"/><text x="32.9965%" y="335.50"></text></g><g><title>__GI___libc_malloc (5 samples, 1.76%)</title><rect x="32.7465%" y="309" width="1.7606%" height="15" fill="rgb(206,112,53)" fg:x="93" fg:w="5"/><text x="32.9965%" y="319.50"></text></g><g><title>regex_syntax::ast::parse::Primitive::into_ast (6 samples, 2.11%)</title><rect x="32.7465%" y="421" width="2.1127%" height="15" fill="rgb(225,212,2)" fg:x="93" fg:w="6"/><text x="32.9965%" y="431.50">r..</text></g><g><title>regex_syntax::ast::Ast::literal (6 samples, 2.11%)</title><rect x="32.7465%" y="405" width="2.1127%" height="15" fill="rgb(212,66,23)" fg:x="93" fg:w="6"/><text x="32.9965%" y="415.50">r..</text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (6 samples, 2.11%)</title><rect x="32.7465%" y="389" width="2.1127%" height="15" fill="rgb(209,114,30)" fg:x="93" fg:w="6"/><text x="32.9965%" y="399.50">a..</text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_flags (1 samples, 0.35%)</title><rect x="34.8592%" y="389" width="0.3521%" height="15" fill="rgb(243,217,22)" fg:x="99" fg:w="1"/><text x="35.1092%" y="399.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_flag (1 samples, 0.35%)</title><rect x="34.8592%" y="373" width="0.3521%" height="15" fill="rgb(225,154,52)" fg:x="99" fg:w="1"/><text x="35.1092%" y="383.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::char (1 samples, 0.35%)</title><rect x="34.8592%" y="357" width="0.3521%" height="15" fill="rgb(206,73,47)" fg:x="99" fg:w="1"/><text x="35.1092%" y="367.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::push_group (2 samples, 0.70%)</title><rect x="34.8592%" y="421" width="0.7042%" height="15" fill="rgb(218,85,47)" fg:x="99" fg:w="2"/><text x="35.1092%" y="431.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_group (2 samples, 0.70%)</title><rect x="34.8592%" y="405" width="0.7042%" height="15" fill="rgb(237,110,47)" fg:x="99" fg:w="2"/><text x="35.1092%" y="415.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_capture_name (1 samples, 0.35%)</title><rect x="35.2113%" y="389" width="0.3521%" height="15" fill="rgb(241,170,13)" fg:x="100" fg:w="1"/><text x="35.4613%" y="399.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::add_capture_name (1 samples, 0.35%)</title><rect x="35.2113%" y="373" width="0.3521%" height="15" fill="rgb(244,6,43)" fg:x="100" fg:w="1"/><text x="35.4613%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by_key (1 samples, 0.35%)</title><rect x="35.2113%" y="357" width="0.3521%" height="15" fill="rgb(219,159,10)" fg:x="100" fg:w="1"/><text x="35.4613%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.35%)</title><rect x="35.2113%" y="341" width="0.3521%" height="15" fill="rgb(252,87,43)" fg:x="100" fg:w="1"/><text x="35.4613%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by_key::{{closure}} (1 samples, 0.35%)</title><rect x="35.2113%" y="325" width="0.3521%" height="15" fill="rgb(217,124,17)" fg:x="100" fg:w="1"/><text x="35.4613%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (1 samples, 0.35%)</title><rect x="35.2113%" y="309" width="0.3521%" height="15" fill="rgb(229,177,5)" fg:x="100" fg:w="1"/><text x="35.4613%" y="319.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (1 samples, 0.35%)</title><rect x="35.2113%" y="293" width="0.3521%" height="15" fill="rgb(207,23,8)" fg:x="100" fg:w="1"/><text x="35.4613%" y="303.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (1 samples, 0.35%)</title><rect x="35.2113%" y="277" width="0.3521%" height="15" fill="rgb(252,53,50)" fg:x="100" fg:w="1"/><text x="35.4613%" y="287.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (1 samples, 0.35%)</title><rect x="35.2113%" y="261" width="0.3521%" height="15" fill="rgb(209,210,31)" fg:x="100" fg:w="1"/><text x="35.4613%" y="271.50"></text></g><g><title>__memcmp_evex_movbe (1 samples, 0.35%)</title><rect x="35.2113%" y="245" width="0.3521%" height="15" fill="rgb(253,103,40)" fg:x="100" fg:w="1"/><text x="35.4613%" y="255.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::push_alternate (1 samples, 0.35%)</title><rect x="35.5634%" y="421" width="0.3521%" height="15" fill="rgb(224,168,6)" fg:x="101" fg:w="1"/><text x="35.8134%" y="431.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::char (1 samples, 0.35%)</title><rect x="35.5634%" y="405" width="0.3521%" height="15" fill="rgb(206,73,47)" fg:x="101" fg:w="1"/><text x="35.8134%" y="415.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_set_class_open (1 samples, 0.35%)</title><rect x="35.9155%" y="389" width="0.3521%" height="15" fill="rgb(208,128,52)" fg:x="102" fg:w="1"/><text x="36.1655%" y="399.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::span (1 samples, 0.35%)</title><rect x="35.9155%" y="373" width="0.3521%" height="15" fill="rgb(249,58,28)" fg:x="102" fg:w="1"/><text x="36.1655%" y="383.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::pos (1 samples, 0.35%)</title><rect x="35.9155%" y="357" width="0.3521%" height="15" fill="rgb(205,216,50)" fg:x="102" fg:w="1"/><text x="36.1655%" y="367.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (1 samples, 0.35%)</title><rect x="35.9155%" y="341" width="0.3521%" height="15" fill="rgb(211,150,53)" fg:x="102" fg:w="1"/><text x="36.1655%" y="351.50"></text></g><g><title>core::ptr::write (1 samples, 0.35%)</title><rect x="36.2676%" y="373" width="0.3521%" height="15" fill="rgb(209,143,44)" fg:x="103" fg:w="1"/><text x="36.5176%" y="383.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.35%)</title><rect x="36.2676%" y="357" width="0.3521%" height="15" fill="rgb(217,126,36)" fg:x="103" fg:w="1"/><text x="36.5176%" y="367.50"></text></g><g><title>malloc_consolidate (1 samples, 0.35%)</title><rect x="36.6197%" y="293" width="0.3521%" height="15" fill="rgb(228,194,39)" fg:x="104" fg:w="1"/><text x="36.8697%" y="303.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::push_class_open (4 samples, 1.41%)</title><rect x="35.9155%" y="405" width="1.4085%" height="15" fill="rgb(208,186,32)" fg:x="102" fg:w="4"/><text x="36.1655%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 1.06%)</title><rect x="36.2676%" y="389" width="1.0563%" height="15" fill="rgb(241,229,15)" fg:x="103" fg:w="3"/><text x="36.5176%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.70%)</title><rect x="36.6197%" y="373" width="0.7042%" height="15" fill="rgb(254,103,39)" fg:x="104" fg:w="2"/><text x="36.8697%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.70%)</title><rect x="36.6197%" y="357" width="0.7042%" height="15" fill="rgb(254,53,35)" fg:x="104" fg:w="2"/><text x="36.8697%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.70%)</title><rect x="36.6197%" y="341" width="0.7042%" height="15" fill="rgb(237,133,22)" fg:x="104" fg:w="2"/><text x="36.8697%" y="351.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.70%)</title><rect x="36.6197%" y="325" width="0.7042%" height="15" fill="rgb(206,112,53)" fg:x="104" fg:w="2"/><text x="36.8697%" y="335.50"></text></g><g><title>_int_malloc (2 samples, 0.70%)</title><rect x="36.6197%" y="309" width="0.7042%" height="15" fill="rgb(222,219,51)" fg:x="104" fg:w="2"/><text x="36.8697%" y="319.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_set_class (5 samples, 1.76%)</title><rect x="35.9155%" y="421" width="1.7606%" height="15" fill="rgb(248,118,21)" fg:x="102" fg:w="5"/><text x="36.1655%" y="431.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::maybe_parse_ascii_class (1 samples, 0.35%)</title><rect x="37.3239%" y="405" width="0.3521%" height="15" fill="rgb(215,29,15)" fg:x="106" fg:w="1"/><text x="37.5739%" y="415.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::bump (1 samples, 0.35%)</title><rect x="37.3239%" y="389" width="0.3521%" height="15" fill="rgb(207,165,29)" fg:x="106" fg:w="1"/><text x="37.5739%" y="399.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::is_eof (1 samples, 0.35%)</title><rect x="37.3239%" y="373" width="0.3521%" height="15" fill="rgb(215,65,50)" fg:x="106" fg:w="1"/><text x="37.5739%" y="383.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::char (1 samples, 0.35%)</title><rect x="37.6761%" y="405" width="0.3521%" height="15" fill="rgb(206,73,47)" fg:x="107" fg:w="1"/><text x="37.9261%" y="415.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::char_at (1 samples, 0.35%)</title><rect x="37.6761%" y="389" width="0.3521%" height="15" fill="rgb(220,224,36)" fg:x="107" fg:w="1"/><text x="37.9261%" y="399.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.35%)</title><rect x="37.6761%" y="373" width="0.3521%" height="15" fill="rgb(242,166,4)" fg:x="107" fg:w="1"/><text x="37.9261%" y="383.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.35%)</title><rect x="37.6761%" y="357" width="0.3521%" height="15" fill="rgb(245,139,50)" fg:x="107" fg:w="1"/><text x="37.9261%" y="367.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_primitive (2 samples, 0.70%)</title><rect x="37.6761%" y="421" width="0.7042%" height="15" fill="rgb(214,58,42)" fg:x="107" fg:w="2"/><text x="37.9261%" y="431.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::char (1 samples, 0.35%)</title><rect x="38.3803%" y="421" width="0.3521%" height="15" fill="rgb(206,73,47)" fg:x="109" fg:w="1"/><text x="38.6303%" y="431.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.35%)</title><rect x="38.7324%" y="357" width="0.3521%" height="15" fill="rgb(206,112,53)" fg:x="110" fg:w="1"/><text x="38.9824%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.70%)</title><rect x="38.7324%" y="421" width="0.7042%" height="15" fill="rgb(241,229,15)" fg:x="110" fg:w="2"/><text x="38.9824%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.70%)</title><rect x="38.7324%" y="405" width="0.7042%" height="15" fill="rgb(254,103,39)" fg:x="110" fg:w="2"/><text x="38.9824%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.70%)</title><rect x="38.7324%" y="389" width="0.7042%" height="15" fill="rgb(254,53,35)" fg:x="110" fg:w="2"/><text x="38.9824%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.70%)</title><rect x="38.7324%" y="373" width="0.7042%" height="15" fill="rgb(237,133,22)" fg:x="110" fg:w="2"/><text x="38.9824%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.35%)</title><rect x="39.0845%" y="357" width="0.3521%" height="15" fill="rgb(237,156,49)" fg:x="111" fg:w="1"/><text x="39.3345%" y="367.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.35%)</title><rect x="39.0845%" y="341" width="0.3521%" height="15" fill="rgb(214,150,36)" fg:x="111" fg:w="1"/><text x="39.3345%" y="351.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.35%)</title><rect x="39.0845%" y="325" width="0.3521%" height="15" fill="rgb(254,47,34)" fg:x="111" fg:w="1"/><text x="39.3345%" y="335.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.35%)</title><rect x="39.0845%" y="309" width="0.3521%" height="15" fill="rgb(254,73,4)" fg:x="111" fg:w="1"/><text x="39.3345%" y="319.50"></text></g><g><title>_int_realloc (1 samples, 0.35%)</title><rect x="39.0845%" y="293" width="0.3521%" height="15" fill="rgb(231,75,41)" fg:x="111" fg:w="1"/><text x="39.3345%" y="303.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.35%)</title><rect x="39.0845%" y="277" width="0.3521%" height="15" fill="rgb(217,126,36)" fg:x="111" fg:w="1"/><text x="39.3345%" y="287.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.70%)</title><rect x="39.4366%" y="421" width="0.7042%" height="15" fill="rgb(245,132,34)" fg:x="112" fg:w="2"/><text x="39.6866%" y="431.50"></text></g><g><title>regex_syntax::ast::parse::Parser::parse (22 samples, 7.75%)</title><rect x="32.7465%" y="469" width="7.7465%" height="15" fill="rgb(225,142,35)" fg:x="93" fg:w="22"/><text x="32.9965%" y="479.50">regex_synta..</text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse (22 samples, 7.75%)</title><rect x="32.7465%" y="453" width="7.7465%" height="15" fill="rgb(254,60,41)" fg:x="93" fg:w="22"/><text x="32.9965%" y="463.50">regex_synta..</text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_with_comments (22 samples, 7.75%)</title><rect x="32.7465%" y="437" width="7.7465%" height="15" fill="rgb(223,9,23)" fg:x="93" fg:w="22"/><text x="32.9965%" y="447.50">regex_synta..</text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::hir::Properties&gt; (1 samples, 0.35%)</title><rect x="40.4930%" y="373" width="0.3521%" height="15" fill="rgb(249,111,12)" fg:x="115" fg:w="1"/><text x="40.7430%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;regex_syntax::hir::PropertiesI&gt;&gt; (1 samples, 0.35%)</title><rect x="40.4930%" y="357" width="0.3521%" height="15" fill="rgb(237,14,7)" fg:x="115" fg:w="1"/><text x="40.7430%" y="367.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.35%)</title><rect x="40.4930%" y="341" width="0.3521%" height="15" fill="rgb(241,6,19)" fg:x="115" fg:w="1"/><text x="40.7430%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.35%)</title><rect x="40.4930%" y="325" width="0.3521%" height="15" fill="rgb(238,77,31)" fg:x="115" fg:w="1"/><text x="40.7430%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.35%)</title><rect x="40.4930%" y="309" width="0.3521%" height="15" fill="rgb(227,15,28)" fg:x="115" fg:w="1"/><text x="40.7430%" y="319.50"></text></g><g><title>__GI___libc_free (1 samples, 0.35%)</title><rect x="40.4930%" y="293" width="0.3521%" height="15" fill="rgb(247,8,17)" fg:x="115" fg:w="1"/><text x="40.7430%" y="303.50"></text></g><g><title>_int_free (1 samples, 0.35%)</title><rect x="40.4930%" y="277" width="0.3521%" height="15" fill="rgb(221,113,48)" fg:x="115" fg:w="1"/><text x="40.7430%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::hir::Hir&gt; (2 samples, 0.70%)</title><rect x="40.4930%" y="389" width="0.7042%" height="15" fill="rgb(244,216,7)" fg:x="115" fg:w="2"/><text x="40.7430%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;regex_syntax::hir::Hir&gt;&gt; (1 samples, 0.35%)</title><rect x="40.8451%" y="373" width="0.3521%" height="15" fill="rgb(217,113,50)" fg:x="116" fg:w="1"/><text x="41.0951%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::hir::Hir&gt; (1 samples, 0.35%)</title><rect x="40.8451%" y="357" width="0.3521%" height="15" fill="rgb(244,216,7)" fg:x="116" fg:w="1"/><text x="41.0951%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::hir::Properties&gt; (1 samples, 0.35%)</title><rect x="40.8451%" y="341" width="0.3521%" height="15" fill="rgb(249,111,12)" fg:x="116" fg:w="1"/><text x="41.0951%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;regex_syntax::hir::PropertiesI&gt;&gt; (1 samples, 0.35%)</title><rect x="40.8451%" y="325" width="0.3521%" height="15" fill="rgb(237,14,7)" fg:x="116" fg:w="1"/><text x="41.0951%" y="335.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.35%)</title><rect x="40.8451%" y="309" width="0.3521%" height="15" fill="rgb(241,6,19)" fg:x="116" fg:w="1"/><text x="41.0951%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.35%)</title><rect x="40.8451%" y="293" width="0.3521%" height="15" fill="rgb(238,77,31)" fg:x="116" fg:w="1"/><text x="41.0951%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.35%)</title><rect x="40.8451%" y="277" width="0.3521%" height="15" fill="rgb(227,15,28)" fg:x="116" fg:w="1"/><text x="41.0951%" y="287.50"></text></g><g><title>__GI___libc_free (1 samples, 0.35%)</title><rect x="40.8451%" y="261" width="0.3521%" height="15" fill="rgb(247,8,17)" fg:x="116" fg:w="1"/><text x="41.0951%" y="271.50"></text></g><g><title>_int_free (1 samples, 0.35%)</title><rect x="40.8451%" y="245" width="0.3521%" height="15" fill="rgb(221,113,48)" fg:x="116" fg:w="1"/><text x="41.0951%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_syntax::hir::Hir&gt;&gt; (3 samples, 1.06%)</title><rect x="40.4930%" y="469" width="1.0563%" height="15" fill="rgb(206,118,12)" fg:x="115" fg:w="3"/><text x="40.7430%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 1.06%)</title><rect x="40.4930%" y="453" width="1.0563%" height="15" fill="rgb(249,14,2)" fg:x="115" fg:w="3"/><text x="40.7430%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;[regex_syntax::hir::Hir]&gt; (3 samples, 1.06%)</title><rect x="40.4930%" y="437" width="1.0563%" height="15" fill="rgb(240,58,42)" fg:x="115" fg:w="3"/><text x="40.7430%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::hir::Hir&gt; (3 samples, 1.06%)</title><rect x="40.4930%" y="421" width="1.0563%" height="15" fill="rgb(244,216,7)" fg:x="115" fg:w="3"/><text x="40.7430%" y="431.50"></text></g><g><title>&lt;regex_syntax::hir::Hir as core::ops::drop::Drop&gt;::drop (3 samples, 1.06%)</title><rect x="40.4930%" y="405" width="1.0563%" height="15" fill="rgb(251,195,49)" fg:x="115" fg:w="3"/><text x="40.7430%" y="415.50"></text></g><g><title>_int_free (1 samples, 0.35%)</title><rect x="41.5493%" y="357" width="0.3521%" height="15" fill="rgb(221,113,48)" fg:x="118" fg:w="1"/><text x="41.7993%" y="367.50"></text></g><g><title>__GI___libc_free (2 samples, 0.70%)</title><rect x="41.5493%" y="373" width="0.7042%" height="15" fill="rgb(247,8,17)" fg:x="118" fg:w="2"/><text x="41.7993%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::ast::Ast&gt; (4 samples, 1.41%)</title><rect x="41.5493%" y="389" width="1.4085%" height="15" fill="rgb(216,180,24)" fg:x="118" fg:w="4"/><text x="41.7993%" y="399.50"></text></g><g><title>&lt;regex_syntax::ast::Ast as core::ops::drop::Drop&gt;::drop (2 samples, 0.70%)</title><rect x="42.2535%" y="373" width="0.7042%" height="15" fill="rgb(238,18,15)" fg:x="120" fg:w="2"/><text x="42.5035%" y="383.50"></text></g><g><title>malloc_consolidate (2 samples, 0.70%)</title><rect x="42.9577%" y="101" width="0.7042%" height="15" fill="rgb(228,194,39)" fg:x="122" fg:w="2"/><text x="43.2077%" y="111.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;regex_syntax::ast::ClassBracketed&gt;&gt; (3 samples, 1.06%)</title><rect x="42.9577%" y="389" width="1.0563%" height="15" fill="rgb(216,49,34)" fg:x="122" fg:w="3"/><text x="43.2077%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::ast::ClassBracketed&gt; (3 samples, 1.06%)</title><rect x="42.9577%" y="373" width="1.0563%" height="15" fill="rgb(233,178,20)" fg:x="122" fg:w="3"/><text x="43.2077%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::ast::ClassSet&gt; (3 samples, 1.06%)</title><rect x="42.9577%" y="357" width="1.0563%" height="15" fill="rgb(218,161,37)" fg:x="122" fg:w="3"/><text x="43.2077%" y="367.50"></text></g><g><title>&lt;regex_syntax::ast::ClassSet as core::ops::drop::Drop&gt;::drop (3 samples, 1.06%)</title><rect x="42.9577%" y="341" width="1.0563%" height="15" fill="rgb(227,212,36)" fg:x="122" fg:w="3"/><text x="43.2077%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (3 samples, 1.06%)</title><rect x="42.9577%" y="325" width="1.0563%" height="15" fill="rgb(205,186,49)" fg:x="122" fg:w="3"/><text x="43.2077%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 1.06%)</title><rect x="42.9577%" y="309" width="1.0563%" height="15" fill="rgb(232,211,42)" fg:x="122" fg:w="3"/><text x="43.2077%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (3 samples, 1.06%)</title><rect x="42.9577%" y="293" width="1.0563%" height="15" fill="rgb(214,146,48)" fg:x="122" fg:w="3"/><text x="43.2077%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 1.06%)</title><rect x="42.9577%" y="277" width="1.0563%" height="15" fill="rgb(212,159,3)" fg:x="122" fg:w="3"/><text x="43.2077%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 1.06%)</title><rect x="42.9577%" y="261" width="1.0563%" height="15" fill="rgb(231,142,39)" fg:x="122" fg:w="3"/><text x="43.2077%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 1.06%)</title><rect x="42.9577%" y="245" width="1.0563%" height="15" fill="rgb(249,2,22)" fg:x="122" fg:w="3"/><text x="43.2077%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 1.06%)</title><rect x="42.9577%" y="229" width="1.0563%" height="15" fill="rgb(254,53,35)" fg:x="122" fg:w="3"/><text x="43.2077%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 1.06%)</title><rect x="42.9577%" y="213" width="1.0563%" height="15" fill="rgb(237,133,22)" fg:x="122" fg:w="3"/><text x="43.2077%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 1.06%)</title><rect x="42.9577%" y="197" width="1.0563%" height="15" fill="rgb(237,156,49)" fg:x="122" fg:w="3"/><text x="43.2077%" y="207.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 1.06%)</title><rect x="42.9577%" y="181" width="1.0563%" height="15" fill="rgb(214,150,36)" fg:x="122" fg:w="3"/><text x="43.2077%" y="191.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 1.06%)</title><rect x="42.9577%" y="165" width="1.0563%" height="15" fill="rgb(254,47,34)" fg:x="122" fg:w="3"/><text x="43.2077%" y="175.50"></text></g><g><title>__GI___libc_realloc (3 samples, 1.06%)</title><rect x="42.9577%" y="149" width="1.0563%" height="15" fill="rgb(254,73,4)" fg:x="122" fg:w="3"/><text x="43.2077%" y="159.50"></text></g><g><title>_int_realloc (3 samples, 1.06%)</title><rect x="42.9577%" y="133" width="1.0563%" height="15" fill="rgb(231,75,41)" fg:x="122" fg:w="3"/><text x="43.2077%" y="143.50"></text></g><g><title>_int_malloc (3 samples, 1.06%)</title><rect x="42.9577%" y="117" width="1.0563%" height="15" fill="rgb(222,219,51)" fg:x="122" fg:w="3"/><text x="43.2077%" y="127.50"></text></g><g><title>_int_free (3 samples, 1.06%)</title><rect x="44.0141%" y="373" width="1.0563%" height="15" fill="rgb(221,113,48)" fg:x="125" fg:w="3"/><text x="44.2641%" y="383.50"></text></g><g><title>__GI___libc_free (4 samples, 1.41%)</title><rect x="44.0141%" y="389" width="1.4085%" height="15" fill="rgb(247,8,17)" fg:x="125" fg:w="4"/><text x="44.2641%" y="399.50"></text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::process_stage1_blockzero_analysis (58 samples, 20.42%)</title><rect x="25.3521%" y="789" width="20.4225%" height="15" fill="rgb(214,107,3)" fg:x="72" fg:w="58"/><text x="25.6021%" y="799.50">s4lib::readers::syslogprocessor:..</text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::blockzero_analysis (58 samples, 20.42%)</title><rect x="25.3521%" y="773" width="20.4225%" height="15" fill="rgb(228,176,28)" fg:x="72" fg:w="58"/><text x="25.6021%" y="783.50">s4lib::readers::syslogprocessor:..</text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::blockzero_analysis_syslines (58 samples, 20.42%)</title><rect x="25.3521%" y="757" width="20.4225%" height="15" fill="rgb(208,15,47)" fg:x="72" fg:w="58"/><text x="25.6021%" y="767.50">s4lib::readers::syslogprocessor:..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_sysline_in_block (58 samples, 20.42%)</title><rect x="25.3521%" y="741" width="20.4225%" height="15" fill="rgb(243,65,52)" fg:x="72" fg:w="58"/><text x="25.6021%" y="751.50">s4lib::readers::syslinereader::S..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_sysline_in_block_year (58 samples, 20.42%)</title><rect x="25.3521%" y="725" width="20.4225%" height="15" fill="rgb(253,177,51)" fg:x="72" fg:w="58"/><text x="25.6021%" y="735.50">s4lib::readers::syslinereader::S..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::parse_datetime_in_line_cached (58 samples, 20.42%)</title><rect x="25.3521%" y="709" width="20.4225%" height="15" fill="rgb(231,75,50)" fg:x="72" fg:w="58"/><text x="25.6021%" y="719.50">s4lib::readers::syslinereader::S..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::parse_datetime_in_line (58 samples, 20.42%)</title><rect x="25.3521%" y="693" width="20.4225%" height="15" fill="rgb(234,54,15)" fg:x="72" fg:w="58"/><text x="25.6021%" y="703.50">s4lib::readers::syslinereader::S..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_datetime_in_line (58 samples, 20.42%)</title><rect x="25.3521%" y="677" width="20.4225%" height="15" fill="rgb(212,53,9)" fg:x="72" fg:w="58"/><text x="25.6021%" y="687.50">s4lib::readers::syslinereader::S..</text></g><g><title>s4lib::data::datetime::bytes_to_regex_to_datetime (58 samples, 20.42%)</title><rect x="25.3521%" y="661" width="20.4225%" height="15" fill="rgb(252,84,36)" fg:x="72" fg:w="58"/><text x="25.6021%" y="671.50">s4lib::data::datetime::bytes_to_..</text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (56 samples, 19.72%)</title><rect x="26.0563%" y="645" width="19.7183%" height="15" fill="rgb(223,143,22)" fg:x="74" fg:w="56"/><text x="26.3063%" y="655.50">once_cell::sync::OnceCell&lt;T&gt;::g..</text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (56 samples, 19.72%)</title><rect x="26.0563%" y="629" width="19.7183%" height="15" fill="rgb(216,218,52)" fg:x="74" fg:w="56"/><text x="26.3063%" y="639.50">once_cell::imp::OnceCell&lt;T&gt;::in..</text></g><g><title>once_cell::imp::initialize_or_wait (56 samples, 19.72%)</title><rect x="26.0563%" y="613" width="19.7183%" height="15" fill="rgb(247,128,5)" fg:x="74" fg:w="56"/><text x="26.3063%" y="623.50">once_cell::imp::initialize_or_w..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (56 samples, 19.72%)</title><rect x="26.0563%" y="597" width="19.7183%" height="15" fill="rgb(225,224,16)" fg:x="74" fg:w="56"/><text x="26.3063%" y="607.50">core::ops::function::impls::&lt;im..</text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (56 samples, 19.72%)</title><rect x="26.0563%" y="581" width="19.7183%" height="15" fill="rgb(237,110,11)" fg:x="74" fg:w="56"/><text x="26.3063%" y="591.50">once_cell::imp::OnceCell&lt;T&gt;::in..</text></g><g><title>s4lib::data::datetime::bytes_to_regex_to_datetime::{{closure}} (56 samples, 19.72%)</title><rect x="26.0563%" y="565" width="19.7183%" height="15" fill="rgb(231,98,11)" fg:x="74" fg:w="56"/><text x="26.3063%" y="575.50">s4lib::data::datetime::bytes_to..</text></g><g><title>regex::regex::bytes::Regex::new (56 samples, 19.72%)</title><rect x="26.0563%" y="549" width="19.7183%" height="15" fill="rgb(246,224,25)" fg:x="74" fg:w="56"/><text x="26.3063%" y="559.50">regex::regex::bytes::Regex::new</text></g><g><title>regex::builders::bytes::RegexBuilder::build (55 samples, 19.37%)</title><rect x="26.4085%" y="533" width="19.3662%" height="15" fill="rgb(236,76,51)" fg:x="75" fg:w="55"/><text x="26.6585%" y="543.50">regex::builders::bytes::RegexB..</text></g><g><title>regex::builders::Builder::build_one_bytes (55 samples, 19.37%)</title><rect x="26.4085%" y="517" width="19.3662%" height="15" fill="rgb(233,102,7)" fg:x="75" fg:w="55"/><text x="26.6585%" y="527.50">regex::builders::Builder::buil..</text></g><g><title>regex_automata::meta::regex::Builder::build (55 samples, 19.37%)</title><rect x="26.4085%" y="501" width="19.3662%" height="15" fill="rgb(212,33,22)" fg:x="75" fg:w="55"/><text x="26.6585%" y="511.50">regex_automata::meta::regex::B..</text></g><g><title>regex_automata::meta::regex::Builder::build_many (55 samples, 19.37%)</title><rect x="26.4085%" y="485" width="19.3662%" height="15" fill="rgb(236,25,32)" fg:x="75" fg:w="55"/><text x="26.6585%" y="495.50">regex_automata::meta::regex::B..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_syntax::ast::Ast&gt;&gt; (12 samples, 4.23%)</title><rect x="41.5493%" y="469" width="4.2254%" height="15" fill="rgb(234,216,45)" fg:x="118" fg:w="12"/><text x="41.7993%" y="479.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 4.23%)</title><rect x="41.5493%" y="453" width="4.2254%" height="15" fill="rgb(249,14,2)" fg:x="118" fg:w="12"/><text x="41.7993%" y="463.50">&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;[regex_syntax::ast::Ast]&gt; (12 samples, 4.23%)</title><rect x="41.5493%" y="437" width="4.2254%" height="15" fill="rgb(216,112,18)" fg:x="118" fg:w="12"/><text x="41.7993%" y="447.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::ast::Ast&gt; (12 samples, 4.23%)</title><rect x="41.5493%" y="421" width="4.2254%" height="15" fill="rgb(216,180,24)" fg:x="118" fg:w="12"/><text x="41.7993%" y="431.50">core:..</text></g><g><title>&lt;regex_syntax::ast::Ast as core::ops::drop::Drop&gt;::drop (12 samples, 4.23%)</title><rect x="41.5493%" y="405" width="4.2254%" height="15" fill="rgb(238,18,15)" fg:x="118" fg:w="12"/><text x="41.7993%" y="415.50">&lt;rege..</text></g><g><title>&lt;regex_syntax::ast::Ast as core::ops::drop::Drop&gt;::drop::{{closure}} (1 samples, 0.35%)</title><rect x="45.4225%" y="389" width="0.3521%" height="15" fill="rgb(247,83,50)" fg:x="129" fg:w="1"/><text x="45.6725%" y="399.50"></text></g><g><title>regex_syntax::ast::Ast::empty (1 samples, 0.35%)</title><rect x="45.4225%" y="373" width="0.3521%" height="15" fill="rgb(233,124,28)" fg:x="129" fg:w="1"/><text x="45.6725%" y="383.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.35%)</title><rect x="45.4225%" y="357" width="0.3521%" height="15" fill="rgb(209,114,30)" fg:x="129" fg:w="1"/><text x="45.6725%" y="367.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.35%)</title><rect x="45.4225%" y="341" width="0.3521%" height="15" fill="rgb(248,129,10)" fg:x="129" fg:w="1"/><text x="45.6725%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.35%)</title><rect x="45.4225%" y="325" width="0.3521%" height="15" fill="rgb(231,114,21)" fg:x="129" fg:w="1"/><text x="45.6725%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.35%)</title><rect x="45.4225%" y="309" width="0.3521%" height="15" fill="rgb(238,209,2)" fg:x="129" fg:w="1"/><text x="45.6725%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.35%)</title><rect x="45.4225%" y="293" width="0.3521%" height="15" fill="rgb(253,135,41)" fg:x="129" fg:w="1"/><text x="45.6725%" y="303.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.35%)</title><rect x="45.4225%" y="277" width="0.3521%" height="15" fill="rgb(206,112,53)" fg:x="129" fg:w="1"/><text x="45.6725%" y="287.50"></text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::is_sysline_last (1 samples, 0.35%)</title><rect x="45.7746%" y="789" width="0.3521%" height="15" fill="rgb(249,126,46)" fg:x="130" fg:w="1"/><text x="46.0246%" y="799.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.35%)</title><rect x="45.7746%" y="773" width="0.3521%" height="15" fill="rgb(210,59,24)" fg:x="130" fg:w="1"/><text x="46.0246%" y="783.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::inner (1 samples, 0.35%)</title><rect x="45.7746%" y="757" width="0.3521%" height="15" fill="rgb(232,202,24)" fg:x="130" fg:w="1"/><text x="46.0246%" y="767.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.35%)</title><rect x="45.7746%" y="741" width="0.3521%" height="15" fill="rgb(221,185,31)" fg:x="130" fg:w="1"/><text x="46.0246%" y="751.50"></text></g><g><title>s4lib::data::line::LinePart::block_boxptr_ab (1 samples, 0.35%)</title><rect x="46.1268%" y="645" width="0.3521%" height="15" fill="rgb(217,228,51)" fg:x="131" fg:w="1"/><text x="46.3768%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.35%)</title><rect x="46.1268%" y="629" width="0.3521%" height="15" fill="rgb(209,114,30)" fg:x="131" fg:w="1"/><text x="46.3768%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.35%)</title><rect x="46.1268%" y="613" width="0.3521%" height="15" fill="rgb(248,129,10)" fg:x="131" fg:w="1"/><text x="46.3768%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.35%)</title><rect x="46.1268%" y="597" width="0.3521%" height="15" fill="rgb(231,114,21)" fg:x="131" fg:w="1"/><text x="46.3768%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.35%)</title><rect x="46.1268%" y="581" width="0.3521%" height="15" fill="rgb(238,209,2)" fg:x="131" fg:w="1"/><text x="46.3768%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.35%)</title><rect x="46.1268%" y="565" width="0.3521%" height="15" fill="rgb(253,135,41)" fg:x="131" fg:w="1"/><text x="46.3768%" y="575.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.35%)</title><rect x="46.1268%" y="549" width="0.3521%" height="15" fill="rgb(206,112,53)" fg:x="131" fg:w="1"/><text x="46.3768%" y="559.50"></text></g><g><title>_int_malloc (1 samples, 0.35%)</title><rect x="46.1268%" y="533" width="0.3521%" height="15" fill="rgb(222,219,51)" fg:x="131" fg:w="1"/><text x="46.3768%" y="543.50"></text></g><g><title>tcache_put (1 samples, 0.35%)</title><rect x="46.1268%" y="517" width="0.3521%" height="15" fill="rgb(227,177,28)" fg:x="131" fg:w="1"/><text x="46.3768%" y="527.50"></text></g><g><title>s4lib::data::line::Line::get_boxptrs (2 samples, 0.70%)</title><rect x="46.1268%" y="661" width="0.7042%" height="15" fill="rgb(211,81,2)" fg:x="131" fg:w="2"/><text x="46.3768%" y="671.50"></text></g><g><title>s4lib::data::datetime::u8_to_str (1 samples, 0.35%)</title><rect x="46.8310%" y="645" width="0.3521%" height="15" fill="rgb(224,133,45)" fg:x="133" fg:w="1"/><text x="47.0810%" y="655.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::is_ascii (1 samples, 0.35%)</title><rect x="46.8310%" y="629" width="0.3521%" height="15" fill="rgb(218,219,34)" fg:x="133" fg:w="1"/><text x="47.0810%" y="639.50"></text></g><g><title>core::slice::ascii::is_ascii (1 samples, 0.35%)</title><rect x="46.8310%" y="613" width="0.3521%" height="15" fill="rgb(224,171,44)" fg:x="133" fg:w="1"/><text x="47.0810%" y="623.50"></text></g><g><title>chrono::offset::TimeZone::from_local_datetime (1 samples, 0.35%)</title><rect x="47.1831%" y="629" width="0.3521%" height="15" fill="rgb(244,75,24)" fg:x="134" fg:w="1"/><text x="47.4331%" y="639.50"></text></g><g><title>chrono::offset::LocalResult&lt;T&gt;::and_then (1 samples, 0.35%)</title><rect x="47.1831%" y="613" width="0.3521%" height="15" fill="rgb(254,100,47)" fg:x="134" fg:w="1"/><text x="47.4331%" y="623.50"></text></g><g><title>chrono::offset::LocalResult::Single (1 samples, 0.35%)</title><rect x="47.1831%" y="597" width="0.3521%" height="15" fill="rgb(227,153,34)" fg:x="134" fg:w="1"/><text x="47.4331%" y="607.50"></text></g><g><title>s4lib::data::datetime::datetime_parse_from_str (3 samples, 1.06%)</title><rect x="47.1831%" y="645" width="1.0563%" height="15" fill="rgb(242,206,13)" fg:x="134" fg:w="3"/><text x="47.4331%" y="655.50"></text></g><g><title>chrono::naive::datetime::NaiveDateTime::parse_from_str (2 samples, 0.70%)</title><rect x="47.5352%" y="629" width="0.7042%" height="15" fill="rgb(217,43,10)" fg:x="135" fg:w="2"/><text x="47.7852%" y="639.50"></text></g><g><title>chrono::format::parse::parse (2 samples, 0.70%)</title><rect x="47.5352%" y="613" width="0.7042%" height="15" fill="rgb(248,184,2)" fg:x="135" fg:w="2"/><text x="47.7852%" y="623.50"></text></g><g><title>chrono::format::parse::parse_internal (2 samples, 0.70%)</title><rect x="47.5352%" y="597" width="0.7042%" height="15" fill="rgb(254,10,23)" fg:x="135" fg:w="2"/><text x="47.7852%" y="607.50"></text></g><g><title>regex_automata::util::captures::Captures::get_group_by_name (1 samples, 0.35%)</title><rect x="48.2394%" y="613" width="0.3521%" height="15" fill="rgb(243,115,33)" fg:x="137" fg:w="1"/><text x="48.4894%" y="623.50"></text></g><g><title>regex_automata::util::captures::GroupInfo::to_index (1 samples, 0.35%)</title><rect x="48.2394%" y="597" width="0.3521%" height="15" fill="rgb(250,225,43)" fg:x="137" fg:w="1"/><text x="48.4894%" y="607.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.35%)</title><rect x="48.2394%" y="581" width="0.3521%" height="15" fill="rgb(218,89,21)" fg:x="137" fg:w="1"/><text x="48.4894%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.35%)</title><rect x="48.2394%" y="565" width="0.3521%" height="15" fill="rgb(207,60,33)" fg:x="137" fg:w="1"/><text x="48.4894%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.35%)</title><rect x="48.2394%" y="549" width="0.3521%" height="15" fill="rgb(207,224,35)" fg:x="137" fg:w="1"/><text x="48.4894%" y="559.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.35%)</title><rect x="48.2394%" y="533" width="0.3521%" height="15" fill="rgb(241,1,29)" fg:x="137" fg:w="1"/><text x="48.4894%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.35%)</title><rect x="48.2394%" y="517" width="0.3521%" height="15" fill="rgb(222,198,6)" fg:x="137" fg:w="1"/><text x="48.4894%" y="527.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.35%)</title><rect x="48.2394%" y="501" width="0.3521%" height="15" fill="rgb(212,33,36)" fg:x="137" fg:w="1"/><text x="48.4894%" y="511.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.35%)</title><rect x="48.2394%" y="485" width="0.3521%" height="15" fill="rgb(250,187,26)" fg:x="137" fg:w="1"/><text x="48.4894%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.35%)</title><rect x="48.2394%" y="469" width="0.3521%" height="15" fill="rgb(208,211,8)" fg:x="137" fg:w="1"/><text x="48.4894%" y="479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1 samples, 0.35%)</title><rect x="48.2394%" y="453" width="0.3521%" height="15" fill="rgb(206,132,37)" fg:x="137" fg:w="1"/><text x="48.4894%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.35%)</title><rect x="48.2394%" y="437" width="0.3521%" height="15" fill="rgb(243,187,24)" fg:x="137" fg:w="1"/><text x="48.4894%" y="447.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.35%)</title><rect x="48.2394%" y="421" width="0.3521%" height="15" fill="rgb(226,117,6)" fg:x="137" fg:w="1"/><text x="48.4894%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.35%)</title><rect x="48.2394%" y="405" width="0.3521%" height="15" fill="rgb(236,225,40)" fg:x="137" fg:w="1"/><text x="48.4894%" y="415.50"></text></g><g><title>regex::regex::bytes::Captures::name (2 samples, 0.70%)</title><rect x="48.2394%" y="629" width="0.7042%" height="15" fill="rgb(227,58,29)" fg:x="137" fg:w="2"/><text x="48.4894%" y="639.50"></text></g><g><title>s4lib::data::datetime::captures_to_buffer_bytes (3 samples, 1.06%)</title><rect x="48.2394%" y="645" width="1.0563%" height="15" fill="rgb(241,188,28)" fg:x="137" fg:w="3"/><text x="48.4894%" y="655.50"></text></g><g><title>regex_automata::meta::regex::RegexInfo::is_impossible (1 samples, 0.35%)</title><rect x="49.2958%" y="565" width="0.3521%" height="15" fill="rgb(220,177,25)" fg:x="140" fg:w="1"/><text x="49.5458%" y="575.50"></text></g><g><title>regex_automata::meta::strategy::Core::search_slots_nofail (1 samples, 0.35%)</title><rect x="49.6479%" y="549" width="0.3521%" height="15" fill="rgb(248,164,40)" fg:x="141" fg:w="1"/><text x="49.8979%" y="559.50"></text></g><g><title>regex_automata::meta::wrappers::BoundedBacktrackerEngine::search_slots (1 samples, 0.35%)</title><rect x="49.6479%" y="533" width="0.3521%" height="15" fill="rgb(224,210,15)" fg:x="141" fg:w="1"/><text x="49.8979%" y="543.50"></text></g><g><title>regex_automata::nfa::thompson::backtrack::BoundedBacktracker::try_search_slots (1 samples, 0.35%)</title><rect x="49.6479%" y="517" width="0.3521%" height="15" fill="rgb(223,178,39)" fg:x="141" fg:w="1"/><text x="49.8979%" y="527.50"></text></g><g><title>regex_automata::nfa::thompson::backtrack::BoundedBacktracker::try_search_slots_imp (1 samples, 0.35%)</title><rect x="49.6479%" y="501" width="0.3521%" height="15" fill="rgb(254,24,16)" fg:x="141" fg:w="1"/><text x="49.8979%" y="511.50"></text></g><g><title>regex_automata::nfa::thompson::backtrack::BoundedBacktracker::search_imp (1 samples, 0.35%)</title><rect x="49.6479%" y="485" width="0.3521%" height="15" fill="rgb(207,186,34)" fg:x="141" fg:w="1"/><text x="49.8979%" y="495.50"></text></g><g><title>regex_automata::nfa::thompson::backtrack::BoundedBacktracker::backtrack (1 samples, 0.35%)</title><rect x="49.6479%" y="469" width="0.3521%" height="15" fill="rgb(240,43,20)" fg:x="141" fg:w="1"/><text x="49.8979%" y="479.50"></text></g><g><title>regex_automata::nfa::thompson::backtrack::BoundedBacktracker::step (1 samples, 0.35%)</title><rect x="49.6479%" y="453" width="0.3521%" height="15" fill="rgb(236,64,1)" fg:x="141" fg:w="1"/><text x="49.8979%" y="463.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::SparseTransitions::matches (1 samples, 0.35%)</title><rect x="49.6479%" y="437" width="0.3521%" height="15" fill="rgb(232,144,32)" fg:x="141" fg:w="1"/><text x="49.8979%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.35%)</title><rect x="49.6479%" y="421" width="0.3521%" height="15" fill="rgb(225,8,7)" fg:x="141" fg:w="1"/><text x="49.8979%" y="431.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::SparseTransitions::matches::{{closure}} (1 samples, 0.35%)</title><rect x="49.6479%" y="405" width="0.3521%" height="15" fill="rgb(249,48,1)" fg:x="141" fg:w="1"/><text x="49.8979%" y="415.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::SparseTransitions::matches_byte (1 samples, 0.35%)</title><rect x="49.6479%" y="389" width="0.3521%" height="15" fill="rgb(218,204,19)" fg:x="141" fg:w="1"/><text x="49.8979%" y="399.50"></text></g><g><title>regex::regex::bytes::Regex::captures (3 samples, 1.06%)</title><rect x="49.2958%" y="645" width="1.0563%" height="15" fill="rgb(233,29,12)" fg:x="140" fg:w="3"/><text x="49.5458%" y="655.50"></text></g><g><title>regex::regex::bytes::Regex::captures_at (3 samples, 1.06%)</title><rect x="49.2958%" y="629" width="1.0563%" height="15" fill="rgb(207,96,18)" fg:x="140" fg:w="3"/><text x="49.5458%" y="639.50"></text></g><g><title>regex_automata::meta::regex::Regex::captures (3 samples, 1.06%)</title><rect x="49.2958%" y="613" width="1.0563%" height="15" fill="rgb(219,198,6)" fg:x="140" fg:w="3"/><text x="49.5458%" y="623.50"></text></g><g><title>regex_automata::meta::regex::Regex::search_captures (3 samples, 1.06%)</title><rect x="49.2958%" y="597" width="1.0563%" height="15" fill="rgb(212,211,21)" fg:x="140" fg:w="3"/><text x="49.5458%" y="607.50"></text></g><g><title>regex_automata::meta::regex::Regex::search_slots (3 samples, 1.06%)</title><rect x="49.2958%" y="581" width="1.0563%" height="15" fill="rgb(243,12,43)" fg:x="140" fg:w="3"/><text x="49.5458%" y="591.50"></text></g><g><title>&lt;regex_automata::meta::strategy::Core as regex_automata::meta::strategy::Strategy&gt;::search_slots (2 samples, 0.70%)</title><rect x="49.6479%" y="565" width="0.7042%" height="15" fill="rgb(221,222,32)" fg:x="141" fg:w="2"/><text x="49.8979%" y="575.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.35%)</title><rect x="50.3521%" y="517" width="0.3521%" height="15" fill="rgb(212,33,36)" fg:x="143" fg:w="1"/><text x="50.6021%" y="527.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.35%)</title><rect x="50.3521%" y="501" width="0.3521%" height="15" fill="rgb(250,187,26)" fg:x="143" fg:w="1"/><text x="50.6021%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.35%)</title><rect x="50.3521%" y="485" width="0.3521%" height="15" fill="rgb(208,211,8)" fg:x="143" fg:w="1"/><text x="50.6021%" y="495.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1 samples, 0.35%)</title><rect x="50.3521%" y="469" width="0.3521%" height="15" fill="rgb(206,132,37)" fg:x="143" fg:w="1"/><text x="50.6021%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.35%)</title><rect x="50.3521%" y="453" width="0.3521%" height="15" fill="rgb(243,187,24)" fg:x="143" fg:w="1"/><text x="50.6021%" y="463.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.35%)</title><rect x="50.3521%" y="437" width="0.3521%" height="15" fill="rgb(226,117,6)" fg:x="143" fg:w="1"/><text x="50.6021%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.35%)</title><rect x="50.3521%" y="421" width="0.3521%" height="15" fill="rgb(236,225,40)" fg:x="143" fg:w="1"/><text x="50.6021%" y="431.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.35%)</title><rect x="50.3521%" y="405" width="0.3521%" height="15" fill="rgb(221,52,24)" fg:x="143" fg:w="1"/><text x="50.6021%" y="415.50"></text></g><g><title>regex::regex::bytes::Captures::name (2 samples, 0.70%)</title><rect x="50.3521%" y="645" width="0.7042%" height="15" fill="rgb(227,58,29)" fg:x="143" fg:w="2"/><text x="50.6021%" y="655.50"></text></g><g><title>regex_automata::util::captures::Captures::get_group_by_name (2 samples, 0.70%)</title><rect x="50.3521%" y="629" width="0.7042%" height="15" fill="rgb(243,115,33)" fg:x="143" fg:w="2"/><text x="50.6021%" y="639.50"></text></g><g><title>regex_automata::util::captures::GroupInfo::to_index (2 samples, 0.70%)</title><rect x="50.3521%" y="613" width="0.7042%" height="15" fill="rgb(250,225,43)" fg:x="143" fg:w="2"/><text x="50.6021%" y="623.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.70%)</title><rect x="50.3521%" y="597" width="0.7042%" height="15" fill="rgb(218,89,21)" fg:x="143" fg:w="2"/><text x="50.6021%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.70%)</title><rect x="50.3521%" y="581" width="0.7042%" height="15" fill="rgb(207,60,33)" fg:x="143" fg:w="2"/><text x="50.6021%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.70%)</title><rect x="50.3521%" y="565" width="0.7042%" height="15" fill="rgb(207,224,35)" fg:x="143" fg:w="2"/><text x="50.6021%" y="575.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.70%)</title><rect x="50.3521%" y="549" width="0.7042%" height="15" fill="rgb(241,1,29)" fg:x="143" fg:w="2"/><text x="50.6021%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.70%)</title><rect x="50.3521%" y="533" width="0.7042%" height="15" fill="rgb(222,198,6)" fg:x="143" fg:w="2"/><text x="50.6021%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.35%)</title><rect x="50.7042%" y="517" width="0.3521%" height="15" fill="rgb(218,214,24)" fg:x="144" fg:w="1"/><text x="50.9542%" y="527.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.35%)</title><rect x="50.7042%" y="501" width="0.3521%" height="15" fill="rgb(230,187,21)" fg:x="144" fg:w="1"/><text x="50.9542%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.35%)</title><rect x="50.7042%" y="485" width="0.3521%" height="15" fill="rgb(244,191,49)" fg:x="144" fg:w="1"/><text x="50.9542%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.35%)</title><rect x="50.7042%" y="469" width="0.3521%" height="15" fill="rgb(215,158,9)" fg:x="144" fg:w="1"/><text x="50.9542%" y="479.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.35%)</title><rect x="50.7042%" y="453" width="0.3521%" height="15" fill="rgb(223,143,42)" fg:x="144" fg:w="1"/><text x="50.9542%" y="463.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_datetime_in_line (15 samples, 5.28%)</title><rect x="46.1268%" y="677" width="5.2817%" height="15" fill="rgb(212,53,9)" fg:x="131" fg:w="15"/><text x="46.3768%" y="687.50">s4lib:..</text></g><g><title>s4lib::data::datetime::bytes_to_regex_to_datetime (13 samples, 4.58%)</title><rect x="46.8310%" y="661" width="4.5775%" height="15" fill="rgb(252,84,36)" fg:x="133" fg:w="13"/><text x="47.0810%" y="671.50">s4lib..</text></g><g><title>__rust_dealloc (1 samples, 0.35%)</title><rect x="51.0563%" y="645" width="0.3521%" height="15" fill="rgb(241,15,46)" fg:x="145" fg:w="1"/><text x="51.3063%" y="655.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::parse_datetime_in_line (16 samples, 5.63%)</title><rect x="46.1268%" y="693" width="5.6338%" height="15" fill="rgb(234,54,15)" fg:x="131" fg:w="16"/><text x="46.3768%" y="703.50">s4lib::..</text></g><g><title>itertools::Itertools::sorted_by (1 samples, 0.35%)</title><rect x="51.4085%" y="677" width="0.3521%" height="15" fill="rgb(225,164,23)" fg:x="146" fg:w="1"/><text x="51.6585%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.35%)</title><rect x="51.4085%" y="661" width="0.3521%" height="15" fill="rgb(247,137,3)" fg:x="146" fg:w="1"/><text x="51.6585%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.35%)</title><rect x="51.4085%" y="645" width="0.3521%" height="15" fill="rgb(227,158,43)" fg:x="146" fg:w="1"/><text x="51.6585%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.35%)</title><rect x="51.4085%" y="629" width="0.3521%" height="15" fill="rgb(232,14,28)" fg:x="146" fg:w="1"/><text x="51.6585%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.35%)</title><rect x="51.4085%" y="613" width="0.3521%" height="15" fill="rgb(253,154,22)" fg:x="146" fg:w="1"/><text x="51.6585%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.35%)</title><rect x="51.4085%" y="597" width="0.3521%" height="15" fill="rgb(249,207,12)" fg:x="146" fg:w="1"/><text x="51.6585%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.35%)</title><rect x="51.4085%" y="581" width="0.3521%" height="15" fill="rgb(224,194,14)" fg:x="146" fg:w="1"/><text x="51.6585%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.35%)</title><rect x="51.4085%" y="565" width="0.3521%" height="15" fill="rgb(227,204,5)" fg:x="146" fg:w="1"/><text x="51.6585%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.35%)</title><rect x="51.4085%" y="549" width="0.3521%" height="15" fill="rgb(231,114,21)" fg:x="146" fg:w="1"/><text x="51.6585%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.35%)</title><rect x="51.4085%" y="533" width="0.3521%" height="15" fill="rgb(238,209,2)" fg:x="146" fg:w="1"/><text x="51.6585%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.35%)</title><rect x="51.4085%" y="517" width="0.3521%" height="15" fill="rgb(253,135,41)" fg:x="146" fg:w="1"/><text x="51.6585%" y="527.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.35%)</title><rect x="51.4085%" y="501" width="0.3521%" height="15" fill="rgb(206,112,53)" fg:x="146" fg:w="1"/><text x="51.6585%" y="511.50"></text></g><g><title>_int_malloc (1 samples, 0.35%)</title><rect x="51.4085%" y="485" width="0.3521%" height="15" fill="rgb(222,219,51)" fg:x="146" fg:w="1"/><text x="51.6585%" y="495.50"></text></g><g><title>lru::LruCache&lt;K,V,S&gt;::detach (1 samples, 0.35%)</title><rect x="51.7606%" y="677" width="0.3521%" height="15" fill="rgb(239,138,31)" fg:x="147" fg:w="1"/><text x="52.0106%" y="687.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::parse_datetime_in_line_cached (18 samples, 6.34%)</title><rect x="46.1268%" y="709" width="6.3380%" height="15" fill="rgb(231,75,50)" fg:x="131" fg:w="18"/><text x="46.3768%" y="719.50">s4lib::r..</text></g><g><title>lru::LruCache&lt;K,V,S&gt;::get (2 samples, 0.70%)</title><rect x="51.7606%" y="693" width="0.7042%" height="15" fill="rgb(207,105,41)" fg:x="147" fg:w="2"/><text x="52.0106%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (1 samples, 0.35%)</title><rect x="52.1127%" y="677" width="0.3521%" height="15" fill="rgb(207,58,42)" fg:x="148" fg:w="1"/><text x="52.3627%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (1 samples, 0.35%)</title><rect x="52.1127%" y="661" width="0.3521%" height="15" fill="rgb(243,133,17)" fg:x="148" fg:w="1"/><text x="52.3627%" y="671.50"></text></g><g><title>rangemap::map::RangeMap&lt;K,V&gt;::insert (1 samples, 0.35%)</title><rect x="52.4648%" y="693" width="0.3521%" height="15" fill="rgb(216,177,54)" fg:x="149" fg:w="1"/><text x="52.7148%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.35%)</title><rect x="52.4648%" y="677" width="0.3521%" height="15" fill="rgb(213,87,31)" fg:x="149" fg:w="1"/><text x="52.7148%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.35%)</title><rect x="52.4648%" y="661" width="0.3521%" height="15" fill="rgb(217,123,23)" fg:x="149" fg:w="1"/><text x="52.7148%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.35%)</title><rect x="52.4648%" y="645" width="0.3521%" height="15" fill="rgb(231,80,37)" fg:x="149" fg:w="1"/><text x="52.7148%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (1 samples, 0.35%)</title><rect x="52.4648%" y="629" width="0.3521%" height="15" fill="rgb(208,76,5)" fg:x="149" fg:w="1"/><text x="52.7148%" y="639.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::split (1 samples, 0.35%)</title><rect x="52.4648%" y="613" width="0.3521%" height="15" fill="rgb(250,43,14)" fg:x="149" fg:w="1"/><text x="52.7148%" y="623.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (1 samples, 0.35%)</title><rect x="52.4648%" y="597" width="0.3521%" height="15" fill="rgb(254,11,13)" fg:x="149" fg:w="1"/><text x="52.7148%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (1 samples, 0.35%)</title><rect x="52.4648%" y="581" width="0.3521%" height="15" fill="rgb(225,5,54)" fg:x="149" fg:w="1"/><text x="52.7148%" y="591.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (1 samples, 0.35%)</title><rect x="52.4648%" y="565" width="0.3521%" height="15" fill="rgb(249,175,32)" fg:x="149" fg:w="1"/><text x="52.7148%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.35%)</title><rect x="52.4648%" y="549" width="0.3521%" height="15" fill="rgb(231,114,21)" fg:x="149" fg:w="1"/><text x="52.7148%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.35%)</title><rect x="52.4648%" y="533" width="0.3521%" height="15" fill="rgb(238,209,2)" fg:x="149" fg:w="1"/><text x="52.7148%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.35%)</title><rect x="52.4648%" y="517" width="0.3521%" height="15" fill="rgb(253,135,41)" fg:x="149" fg:w="1"/><text x="52.7148%" y="527.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.35%)</title><rect x="52.4648%" y="501" width="0.3521%" height="15" fill="rgb(206,112,53)" fg:x="149" fg:w="1"/><text x="52.7148%" y="511.50"></text></g><g><title>_int_malloc (1 samples, 0.35%)</title><rect x="52.4648%" y="485" width="0.3521%" height="15" fill="rgb(222,219,51)" fg:x="149" fg:w="1"/><text x="52.7148%" y="495.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::insert_sysline (2 samples, 0.70%)</title><rect x="52.4648%" y="709" width="0.7042%" height="15" fill="rgb(207,59,0)" fg:x="149" fg:w="2"/><text x="52.7148%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.35%)</title><rect x="52.8169%" y="693" width="0.3521%" height="15" fill="rgb(213,87,31)" fg:x="150" fg:w="1"/><text x="53.0669%" y="703.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.35%)</title><rect x="52.8169%" y="677" width="0.3521%" height="15" fill="rgb(217,123,23)" fg:x="150" fg:w="1"/><text x="53.0669%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.35%)</title><rect x="52.8169%" y="661" width="0.3521%" height="15" fill="rgb(231,80,37)" fg:x="150" fg:w="1"/><text x="53.0669%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (1 samples, 0.35%)</title><rect x="52.8169%" y="645" width="0.3521%" height="15" fill="rgb(208,76,5)" fg:x="150" fg:w="1"/><text x="53.0669%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::split (1 samples, 0.35%)</title><rect x="52.8169%" y="629" width="0.3521%" height="15" fill="rgb(250,43,14)" fg:x="150" fg:w="1"/><text x="53.0669%" y="639.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (1 samples, 0.35%)</title><rect x="52.8169%" y="613" width="0.3521%" height="15" fill="rgb(254,11,13)" fg:x="150" fg:w="1"/><text x="53.0669%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (1 samples, 0.35%)</title><rect x="52.8169%" y="597" width="0.3521%" height="15" fill="rgb(225,5,54)" fg:x="150" fg:w="1"/><text x="53.0669%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (1 samples, 0.35%)</title><rect x="52.8169%" y="581" width="0.3521%" height="15" fill="rgb(249,175,32)" fg:x="150" fg:w="1"/><text x="53.0669%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.35%)</title><rect x="52.8169%" y="565" width="0.3521%" height="15" fill="rgb(231,114,21)" fg:x="150" fg:w="1"/><text x="53.0669%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.35%)</title><rect x="52.8169%" y="549" width="0.3521%" height="15" fill="rgb(238,209,2)" fg:x="150" fg:w="1"/><text x="53.0669%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.35%)</title><rect x="52.8169%" y="533" width="0.3521%" height="15" fill="rgb(253,135,41)" fg:x="150" fg:w="1"/><text x="53.0669%" y="543.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.35%)</title><rect x="52.8169%" y="517" width="0.3521%" height="15" fill="rgb(206,112,53)" fg:x="150" fg:w="1"/><text x="53.0669%" y="527.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::check_store (1 samples, 0.35%)</title><rect x="53.1690%" y="709" width="0.3521%" height="15" fill="rgb(240,122,8)" fg:x="151" fg:w="1"/><text x="53.4190%" y="719.50"></text></g><g><title>lru::LruCache&lt;K,V,S&gt;::get (1 samples, 0.35%)</title><rect x="53.1690%" y="693" width="0.3521%" height="15" fill="rgb(207,105,41)" fg:x="151" fg:w="1"/><text x="53.4190%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (1 samples, 0.35%)</title><rect x="53.1690%" y="677" width="0.3521%" height="15" fill="rgb(207,58,42)" fg:x="151" fg:w="1"/><text x="53.4190%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (1 samples, 0.35%)</title><rect x="53.1690%" y="661" width="0.3521%" height="15" fill="rgb(243,133,17)" fg:x="151" fg:w="1"/><text x="53.4190%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (1 samples, 0.35%)</title><rect x="53.1690%" y="645" width="0.3521%" height="15" fill="rgb(231,28,3)" fg:x="151" fg:w="1"/><text x="53.4190%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.35%)</title><rect x="53.1690%" y="629" width="0.3521%" height="15" fill="rgb(252,63,32)" fg:x="151" fg:w="1"/><text x="53.4190%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1 samples, 0.35%)</title><rect x="53.1690%" y="613" width="0.3521%" height="15" fill="rgb(243,218,21)" fg:x="151" fg:w="1"/><text x="53.4190%" y="623.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.35%)</title><rect x="53.1690%" y="597" width="0.3521%" height="15" fill="rgb(209,34,41)" fg:x="151" fg:w="1"/><text x="53.4190%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.35%)</title><rect x="53.1690%" y="581" width="0.3521%" height="15" fill="rgb(241,196,44)" fg:x="151" fg:w="1"/><text x="53.4190%" y="591.50"></text></g><g><title>s4lib::readers::linereader::LineReader::check_store (1 samples, 0.35%)</title><rect x="53.5211%" y="693" width="0.3521%" height="15" fill="rgb(215,197,25)" fg:x="152" fg:w="1"/><text x="53.7711%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (1 samples, 0.35%)</title><rect x="53.5211%" y="677" width="0.3521%" height="15" fill="rgb(222,9,43)" fg:x="152" fg:w="1"/><text x="53.7711%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (1 samples, 0.35%)</title><rect x="53.5211%" y="661" width="0.3521%" height="15" fill="rgb(242,164,29)" fg:x="152" fg:w="1"/><text x="53.7711%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1 samples, 0.35%)</title><rect x="53.5211%" y="645" width="0.3521%" height="15" fill="rgb(217,165,36)" fg:x="152" fg:w="1"/><text x="53.7711%" y="655.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1 samples, 0.35%)</title><rect x="53.5211%" y="629" width="0.3521%" height="15" fill="rgb(220,202,26)" fg:x="152" fg:w="1"/><text x="53.7711%" y="639.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1 samples, 0.35%)</title><rect x="53.5211%" y="613" width="0.3521%" height="15" fill="rgb(233,132,38)" fg:x="152" fg:w="1"/><text x="53.7711%" y="623.50"></text></g><g><title>s4lib::data::line::Line::fileoffset_end (1 samples, 0.35%)</title><rect x="53.8732%" y="693" width="0.3521%" height="15" fill="rgb(250,37,25)" fg:x="153" fg:w="1"/><text x="54.1232%" y="703.50"></text></g><g><title>lru::LruCache&lt;K,V,S&gt;::replace_or_create_node (1 samples, 0.35%)</title><rect x="54.2254%" y="661" width="0.3521%" height="15" fill="rgb(235,6,33)" fg:x="154" fg:w="1"/><text x="54.4754%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (1 samples, 0.35%)</title><rect x="54.2254%" y="645" width="0.3521%" height="15" fill="rgb(230,19,42)" fg:x="154" fg:w="1"/><text x="54.4754%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (1 samples, 0.35%)</title><rect x="54.2254%" y="629" width="0.3521%" height="15" fill="rgb(208,183,29)" fg:x="154" fg:w="1"/><text x="54.4754%" y="639.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.35%)</title><rect x="54.2254%" y="613" width="0.3521%" height="15" fill="rgb(241,1,29)" fg:x="154" fg:w="1"/><text x="54.4754%" y="623.50"></text></g><g><title>&lt;lru::KeyRef&lt;K&gt; as core::hash::Hash&gt;::hash (1 samples, 0.35%)</title><rect x="54.2254%" y="597" width="0.3521%" height="15" fill="rgb(238,110,49)" fg:x="154" fg:w="1"/><text x="54.4754%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (1 samples, 0.35%)</title><rect x="54.2254%" y="581" width="0.3521%" height="15" fill="rgb(213,18,30)" fg:x="154" fg:w="1"/><text x="54.4754%" y="591.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (1 samples, 0.35%)</title><rect x="54.2254%" y="565" width="0.3521%" height="15" fill="rgb(228,200,49)" fg:x="154" fg:w="1"/><text x="54.4754%" y="575.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1 samples, 0.35%)</title><rect x="54.2254%" y="549" width="0.3521%" height="15" fill="rgb(243,175,12)" fg:x="154" fg:w="1"/><text x="54.4754%" y="559.50"></text></g><g><title>lru::LruCache&lt;K,V,S&gt;::put (2 samples, 0.70%)</title><rect x="54.2254%" y="693" width="0.7042%" height="15" fill="rgb(244,170,33)" fg:x="154" fg:w="2"/><text x="54.4754%" y="703.50"></text></g><g><title>lru::LruCache&lt;K,V,S&gt;::capturing_put (2 samples, 0.70%)</title><rect x="54.2254%" y="677" width="0.7042%" height="15" fill="rgb(218,66,15)" fg:x="154" fg:w="2"/><text x="54.4754%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.35%)</title><rect x="54.5775%" y="661" width="0.3521%" height="15" fill="rgb(228,156,5)" fg:x="155" fg:w="1"/><text x="54.8275%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (1 samples, 0.35%)</title><rect x="54.5775%" y="645" width="0.3521%" height="15" fill="rgb(236,164,17)" fg:x="155" fg:w="1"/><text x="54.8275%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (1 samples, 0.35%)</title><rect x="54.5775%" y="629" width="0.3521%" height="15" fill="rgb(209,5,27)" fg:x="155" fg:w="1"/><text x="54.8275%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner::fix_insert_slot (1 samples, 0.35%)</title><rect x="54.5775%" y="613" width="0.3521%" height="15" fill="rgb(235,172,34)" fg:x="155" fg:w="1"/><text x="54.8275%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.35%)</title><rect x="54.9296%" y="661" width="0.3521%" height="15" fill="rgb(235,45,53)" fg:x="156" fg:w="1"/><text x="55.1796%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (2 samples, 0.70%)</title><rect x="54.9296%" y="693" width="0.7042%" height="15" fill="rgb(222,9,43)" fg:x="156" fg:w="2"/><text x="55.1796%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (2 samples, 0.70%)</title><rect x="54.9296%" y="677" width="0.7042%" height="15" fill="rgb(242,164,29)" fg:x="156" fg:w="2"/><text x="55.1796%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1 samples, 0.35%)</title><rect x="55.2817%" y="661" width="0.3521%" height="15" fill="rgb(217,165,36)" fg:x="157" fg:w="1"/><text x="55.5317%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1 samples, 0.35%)</title><rect x="55.2817%" y="645" width="0.3521%" height="15" fill="rgb(220,202,26)" fg:x="157" fg:w="1"/><text x="55.5317%" y="655.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1 samples, 0.35%)</title><rect x="55.2817%" y="629" width="0.3521%" height="15" fill="rgb(233,132,38)" fg:x="157" fg:w="1"/><text x="55.5317%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (1 samples, 0.35%)</title><rect x="55.2817%" y="613" width="0.3521%" height="15" fill="rgb(231,0,6)" fg:x="157" fg:w="1"/><text x="55.5317%" y="623.50"></text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::find_sysline_between_datetime_filters (29 samples, 10.21%)</title><rect x="46.1268%" y="789" width="10.2113%" height="15" fill="rgb(205,32,8)" fg:x="131" fg:w="29"/><text x="46.3768%" y="799.50">s4lib::readers:..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_sysline_between_datetime_filters (29 samples, 10.21%)</title><rect x="46.1268%" y="773" width="10.2113%" height="15" fill="rgb(241,74,20)" fg:x="131" fg:w="29"/><text x="46.3768%" y="783.50">s4lib::readers:..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_sysline_at_datetime_filter_binary_search (29 samples, 10.21%)</title><rect x="46.1268%" y="757" width="10.2113%" height="15" fill="rgb(206,70,45)" fg:x="131" fg:w="29"/><text x="46.3768%" y="767.50">s4lib::readers:..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_sysline (29 samples, 10.21%)</title><rect x="46.1268%" y="741" width="10.2113%" height="15" fill="rgb(223,164,31)" fg:x="131" fg:w="29"/><text x="46.3768%" y="751.50">s4lib::readers:..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_sysline_year (29 samples, 10.21%)</title><rect x="46.1268%" y="725" width="10.2113%" height="15" fill="rgb(234,169,18)" fg:x="131" fg:w="29"/><text x="46.3768%" y="735.50">s4lib::readers:..</text></g><g><title>s4lib::readers::linereader::LineReader::find_line (8 samples, 2.82%)</title><rect x="53.5211%" y="709" width="2.8169%" height="15" fill="rgb(238,98,28)" fg:x="152" fg:w="8"/><text x="53.7711%" y="719.50">s4..</text></g><g><title>s4lib::readers::linereader::LineReader::drop_lines (1 samples, 0.35%)</title><rect x="56.3380%" y="725" width="0.3521%" height="15" fill="rgb(214,84,44)" fg:x="160" fg:w="1"/><text x="56.5880%" y="735.50"></text></g><g><title>s4lib::readers::linereader::LineReader::drop_line (1 samples, 0.35%)</title><rect x="56.3380%" y="709" width="0.3521%" height="15" fill="rgb(246,194,20)" fg:x="160" fg:w="1"/><text x="56.5880%" y="719.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::try_unwrap (2 samples, 0.70%)</title><rect x="56.6901%" y="725" width="0.7042%" height="15" fill="rgb(221,73,3)" fg:x="161" fg:w="2"/><text x="56.9401%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;s4lib::data::sysline::Sysline&gt;&gt; (2 samples, 0.70%)</title><rect x="56.6901%" y="709" width="0.7042%" height="15" fill="rgb(237,210,34)" fg:x="161" fg:w="2"/><text x="56.9401%" y="719.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.70%)</title><rect x="56.6901%" y="693" width="0.7042%" height="15" fill="rgb(205,138,54)" fg:x="161" fg:w="2"/><text x="56.9401%" y="703.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::drop_sysline (4 samples, 1.41%)</title><rect x="56.3380%" y="741" width="1.4085%" height="15" fill="rgb(224,6,32)" fg:x="160" fg:w="4"/><text x="56.5880%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove (1 samples, 0.35%)</title><rect x="57.3944%" y="725" width="0.3521%" height="15" fill="rgb(224,108,5)" fg:x="163" fg:w="1"/><text x="57.6444%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove_entry (1 samples, 0.35%)</title><rect x="57.3944%" y="709" width="0.3521%" height="15" fill="rgb(245,136,18)" fg:x="163" fg:w="1"/><text x="57.6444%" y="719.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::remove_entry (1 samples, 0.35%)</title><rect x="57.3944%" y="693" width="0.3521%" height="15" fill="rgb(227,63,43)" fg:x="163" fg:w="1"/><text x="57.6444%" y="703.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::remove_kv (1 samples, 0.35%)</title><rect x="57.3944%" y="677" width="0.3521%" height="15" fill="rgb(211,181,27)" fg:x="163" fg:w="1"/><text x="57.6444%" y="687.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (1 samples, 0.35%)</title><rect x="57.3944%" y="661" width="0.3521%" height="15" fill="rgb(223,155,52)" fg:x="163" fg:w="1"/><text x="57.6444%" y="671.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (1 samples, 0.35%)</title><rect x="57.3944%" y="645" width="0.3521%" height="15" fill="rgb(212,166,45)" fg:x="163" fg:w="1"/><text x="57.6444%" y="655.50"></text></g><g><title>alloc::collections::btree::node::BalancingContext&lt;K,V&gt;::merge_tracking_child_edge (1 samples, 0.35%)</title><rect x="57.3944%" y="629" width="0.3521%" height="15" fill="rgb(253,74,36)" fg:x="163" fg:w="1"/><text x="57.6444%" y="639.50"></text></g><g><title>alloc::collections::btree::node::BalancingContext&lt;K,V&gt;::merge_tracking_child (1 samples, 0.35%)</title><rect x="57.3944%" y="613" width="0.3521%" height="15" fill="rgb(241,205,47)" fg:x="163" fg:w="1"/><text x="57.6444%" y="623.50"></text></g><g><title>alloc::collections::btree::node::BalancingContext&lt;K,V&gt;::do_merge (1 samples, 0.35%)</title><rect x="57.3944%" y="597" width="0.3521%" height="15" fill="rgb(246,103,50)" fg:x="163" fg:w="1"/><text x="57.6444%" y="607.50"></text></g><g><title>__GI___libc_free (1 samples, 0.35%)</title><rect x="57.3944%" y="581" width="0.3521%" height="15" fill="rgb(247,8,17)" fg:x="163" fg:w="1"/><text x="57.6444%" y="591.50"></text></g><g><title>_int_free (1 samples, 0.35%)</title><rect x="57.3944%" y="565" width="0.3521%" height="15" fill="rgb(221,113,48)" fg:x="163" fg:w="1"/><text x="57.6444%" y="575.50"></text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::drop_data_try (5 samples, 1.76%)</title><rect x="56.3380%" y="789" width="1.7606%" height="15" fill="rgb(244,39,16)" fg:x="160" fg:w="5"/><text x="56.5880%" y="799.50"></text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::drop_data (5 samples, 1.76%)</title><rect x="56.3380%" y="773" width="1.7606%" height="15" fill="rgb(215,155,30)" fg:x="160" fg:w="5"/><text x="56.5880%" y="783.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::drop_data (5 samples, 1.76%)</title><rect x="56.3380%" y="757" width="1.7606%" height="15" fill="rgb(244,67,10)" fg:x="160" fg:w="5"/><text x="56.5880%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.35%)</title><rect x="57.7465%" y="741" width="0.3521%" height="15" fill="rgb(243,42,17)" fg:x="164" fg:w="1"/><text x="57.9965%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.35%)</title><rect x="57.7465%" y="725" width="0.3521%" height="15" fill="rgb(221,194,39)" fg:x="164" fg:w="1"/><text x="57.9965%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.35%)</title><rect x="57.7465%" y="709" width="0.3521%" height="15" fill="rgb(223,137,46)" fg:x="164" fg:w="1"/><text x="57.9965%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (1 samples, 0.35%)</title><rect x="57.7465%" y="693" width="0.3521%" height="15" fill="rgb(248,210,1)" fg:x="164" fg:w="1"/><text x="57.9965%" y="703.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.35%)</title><rect x="57.7465%" y="677" width="0.3521%" height="15" fill="rgb(225,224,16)" fg:x="164" fg:w="1"/><text x="57.9965%" y="687.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::drop_data::{{closure}} (1 samples, 0.35%)</title><rect x="57.7465%" y="661" width="0.3521%" height="15" fill="rgb(217,86,28)" fg:x="164" fg:w="1"/><text x="57.9965%" y="671.50"></text></g><g><title>__clone3 (94 samples, 33.10%)</title><rect x="25.3521%" y="1045" width="33.0986%" height="15" fill="rgb(252,169,8)" fg:x="72" fg:w="94"/><text x="25.6021%" y="1055.50">__clone3</text></g><g><title>start_thread (94 samples, 33.10%)</title><rect x="25.3521%" y="1029" width="33.0986%" height="15" fill="rgb(209,148,13)" fg:x="72" fg:w="94"/><text x="25.6021%" y="1039.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (94 samples, 33.10%)</title><rect x="25.3521%" y="1013" width="33.0986%" height="15" fill="rgb(215,36,0)" fg:x="72" fg:w="94"/><text x="25.6021%" y="1023.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (94 samples, 33.10%)</title><rect x="25.3521%" y="997" width="33.0986%" height="15" fill="rgb(228,202,16)" fg:x="72" fg:w="94"/><text x="25.6021%" y="1007.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (94 samples, 33.10%)</title><rect x="25.3521%" y="981" width="33.0986%" height="15" fill="rgb(228,202,16)" fg:x="72" fg:w="94"/><text x="25.6021%" y="991.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (94 samples, 33.10%)</title><rect x="25.3521%" y="965" width="33.0986%" height="15" fill="rgb(218,104,40)" fg:x="72" fg:w="94"/><text x="25.6021%" y="975.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (94 samples, 33.10%)</title><rect x="25.3521%" y="949" width="33.0986%" height="15" fill="rgb(249,4,49)" fg:x="72" fg:w="94"/><text x="25.6021%" y="959.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>std::panic::catch_unwind (94 samples, 33.10%)</title><rect x="25.3521%" y="933" width="33.0986%" height="15" fill="rgb(216,75,8)" fg:x="72" fg:w="94"/><text x="25.6021%" y="943.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (94 samples, 33.10%)</title><rect x="25.3521%" y="917" width="33.0986%" height="15" fill="rgb(212,61,29)" fg:x="72" fg:w="94"/><text x="25.6021%" y="927.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (94 samples, 33.10%)</title><rect x="25.3521%" y="901" width="33.0986%" height="15" fill="rgb(232,162,46)" fg:x="72" fg:w="94"/><text x="25.6021%" y="911.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (94 samples, 33.10%)</title><rect x="25.3521%" y="885" width="33.0986%" height="15" fill="rgb(230,83,13)" fg:x="72" fg:w="94"/><text x="25.6021%" y="895.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (94 samples, 33.10%)</title><rect x="25.3521%" y="869" width="33.0986%" height="15" fill="rgb(214,132,49)" fg:x="72" fg:w="94"/><text x="25.6021%" y="879.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (94 samples, 33.10%)</title><rect x="25.3521%" y="853" width="33.0986%" height="15" fill="rgb(210,88,34)" fg:x="72" fg:w="94"/><text x="25.6021%" y="863.50">std::sys_common::backtrace::__rust_begin_short_backtra..</text></g><g><title>s4::processing_loop::{{closure}} (94 samples, 33.10%)</title><rect x="25.3521%" y="837" width="33.0986%" height="15" fill="rgb(245,19,23)" fg:x="72" fg:w="94"/><text x="25.6021%" y="847.50">s4::processing_loop::{{closure}}</text></g><g><title>s4::exec_fileprocessor_thread (94 samples, 33.10%)</title><rect x="25.3521%" y="821" width="33.0986%" height="15" fill="rgb(245,49,27)" fg:x="72" fg:w="94"/><text x="25.6021%" y="831.50">s4::exec_fileprocessor_thread</text></g><g><title>s4::exec_syslogprocessor (94 samples, 33.10%)</title><rect x="25.3521%" y="805" width="33.0986%" height="15" fill="rgb(229,116,34)" fg:x="72" fg:w="94"/><text x="25.6021%" y="815.50">s4::exec_syslogprocessor</text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.35%)</title><rect x="58.0986%" y="789" width="0.3521%" height="15" fill="rgb(247,105,42)" fg:x="165" fg:w="1"/><text x="58.3486%" y="799.50"></text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::process_stage1_blockzero_analysis (1 samples, 0.35%)</title><rect x="58.4507%" y="1029" width="0.3521%" height="15" fill="rgb(214,107,3)" fg:x="166" fg:w="1"/><text x="58.7007%" y="1039.50"></text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::blockzero_analysis (1 samples, 0.35%)</title><rect x="58.4507%" y="1013" width="0.3521%" height="15" fill="rgb(228,176,28)" fg:x="166" fg:w="1"/><text x="58.7007%" y="1023.50"></text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::blockzero_analysis_syslines (1 samples, 0.35%)</title><rect x="58.4507%" y="997" width="0.3521%" height="15" fill="rgb(208,15,47)" fg:x="166" fg:w="1"/><text x="58.7007%" y="1007.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_sysline_in_block (1 samples, 0.35%)</title><rect x="58.4507%" y="981" width="0.3521%" height="15" fill="rgb(243,65,52)" fg:x="166" fg:w="1"/><text x="58.7007%" y="991.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_sysline_in_block_year (1 samples, 0.35%)</title><rect x="58.4507%" y="965" width="0.3521%" height="15" fill="rgb(253,177,51)" fg:x="166" fg:w="1"/><text x="58.7007%" y="975.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::parse_datetime_in_line_cached (1 samples, 0.35%)</title><rect x="58.4507%" y="949" width="0.3521%" height="15" fill="rgb(231,75,50)" fg:x="166" fg:w="1"/><text x="58.7007%" y="959.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::parse_datetime_in_line (1 samples, 0.35%)</title><rect x="58.4507%" y="933" width="0.3521%" height="15" fill="rgb(234,54,15)" fg:x="166" fg:w="1"/><text x="58.7007%" y="943.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_datetime_in_line (1 samples, 0.35%)</title><rect x="58.4507%" y="917" width="0.3521%" height="15" fill="rgb(212,53,9)" fg:x="166" fg:w="1"/><text x="58.7007%" y="927.50"></text></g><g><title>s4lib::data::datetime::bytes_to_regex_to_datetime (1 samples, 0.35%)</title><rect x="58.4507%" y="901" width="0.3521%" height="15" fill="rgb(252,84,36)" fg:x="166" fg:w="1"/><text x="58.7007%" y="911.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.35%)</title><rect x="58.4507%" y="885" width="0.3521%" height="15" fill="rgb(223,143,22)" fg:x="166" fg:w="1"/><text x="58.7007%" y="895.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.35%)</title><rect x="58.4507%" y="869" width="0.3521%" height="15" fill="rgb(216,218,52)" fg:x="166" fg:w="1"/><text x="58.7007%" y="879.50"></text></g><g><title>once_cell::imp::initialize_or_wait (1 samples, 0.35%)</title><rect x="58.4507%" y="853" width="0.3521%" height="15" fill="rgb(247,128,5)" fg:x="166" fg:w="1"/><text x="58.7007%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.35%)</title><rect x="58.4507%" y="837" width="0.3521%" height="15" fill="rgb(225,224,16)" fg:x="166" fg:w="1"/><text x="58.7007%" y="847.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (1 samples, 0.35%)</title><rect x="58.4507%" y="821" width="0.3521%" height="15" fill="rgb(237,110,11)" fg:x="166" fg:w="1"/><text x="58.7007%" y="831.50"></text></g><g><title>s4lib::data::datetime::bytes_to_regex_to_datetime::{{closure}} (1 samples, 0.35%)</title><rect x="58.4507%" y="805" width="0.3521%" height="15" fill="rgb(231,98,11)" fg:x="166" fg:w="1"/><text x="58.7007%" y="815.50"></text></g><g><title>regex::regex::bytes::Regex::new (1 samples, 0.35%)</title><rect x="58.4507%" y="789" width="0.3521%" height="15" fill="rgb(246,224,25)" fg:x="166" fg:w="1"/><text x="58.7007%" y="799.50"></text></g><g><title>regex::builders::bytes::RegexBuilder::build (1 samples, 0.35%)</title><rect x="58.4507%" y="773" width="0.3521%" height="15" fill="rgb(236,76,51)" fg:x="166" fg:w="1"/><text x="58.7007%" y="783.50"></text></g><g><title>regex::builders::Builder::build_one_bytes (1 samples, 0.35%)</title><rect x="58.4507%" y="757" width="0.3521%" height="15" fill="rgb(233,102,7)" fg:x="166" fg:w="1"/><text x="58.7007%" y="767.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (1 samples, 0.35%)</title><rect x="58.4507%" y="741" width="0.3521%" height="15" fill="rgb(212,33,22)" fg:x="166" fg:w="1"/><text x="58.7007%" y="751.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many (1 samples, 0.35%)</title><rect x="58.4507%" y="725" width="0.3521%" height="15" fill="rgb(236,25,32)" fg:x="166" fg:w="1"/><text x="58.7007%" y="735.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (1 samples, 0.35%)</title><rect x="58.4507%" y="709" width="0.3521%" height="15" fill="rgb(250,142,30)" fg:x="166" fg:w="1"/><text x="58.7007%" y="719.50"></text></g><g><title>regex_automata::meta::strategy::new (1 samples, 0.35%)</title><rect x="58.4507%" y="693" width="0.3521%" height="15" fill="rgb(243,171,22)" fg:x="166" fg:w="1"/><text x="58.7007%" y="703.50"></text></g><g><title>regex_automata::meta::strategy::Core::new (1 samples, 0.35%)</title><rect x="58.4507%" y="677" width="0.3521%" height="15" fill="rgb(222,69,27)" fg:x="166" fg:w="1"/><text x="58.7007%" y="687.50"></text></g><g><title>regex_automata::meta::wrappers::BoundedBacktracker::new (1 samples, 0.35%)</title><rect x="58.4507%" y="661" width="0.3521%" height="15" fill="rgb(254,154,44)" fg:x="166" fg:w="1"/><text x="58.7007%" y="671.50"></text></g><g><title>regex_automata::meta::wrappers::BoundedBacktrackerEngine::new (1 samples, 0.35%)</title><rect x="58.4507%" y="645" width="0.3521%" height="15" fill="rgb(241,166,13)" fg:x="166" fg:w="1"/><text x="58.7007%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::backtrack::Builder&gt; (1 samples, 0.35%)</title><rect x="58.4507%" y="629" width="0.3521%" height="15" fill="rgb(206,15,54)" fg:x="166" fg:w="1"/><text x="58.7007%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::compiler::Compiler&gt; (1 samples, 0.35%)</title><rect x="58.4507%" y="613" width="0.3521%" height="15" fill="rgb(213,189,36)" fg:x="166" fg:w="1"/><text x="58.7007%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;regex_automata::nfa::thompson::range_trie::RangeTrie&gt;&gt; (1 samples, 0.35%)</title><rect x="58.4507%" y="597" width="0.3521%" height="15" fill="rgb(215,44,46)" fg:x="166" fg:w="1"/><text x="58.7007%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;regex_automata::nfa::thompson::range_trie::RangeTrie&gt;&gt; (1 samples, 0.35%)</title><rect x="58.4507%" y="581" width="0.3521%" height="15" fill="rgb(243,91,48)" fg:x="166" fg:w="1"/><text x="58.7007%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::range_trie::RangeTrie&gt; (1 samples, 0.35%)</title><rect x="58.4507%" y="565" width="0.3521%" height="15" fill="rgb(233,99,35)" fg:x="166" fg:w="1"/><text x="58.7007%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_automata::nfa::thompson::range_trie::State&gt;&gt; (1 samples, 0.35%)</title><rect x="58.4507%" y="549" width="0.3521%" height="15" fill="rgb(231,148,46)" fg:x="166" fg:w="1"/><text x="58.7007%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;regex_automata::nfa::thompson::range_trie::State&gt;&gt; (1 samples, 0.35%)</title><rect x="58.4507%" y="533" width="0.3521%" height="15" fill="rgb(241,122,2)" fg:x="166" fg:w="1"/><text x="58.7007%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.35%)</title><rect x="58.4507%" y="517" width="0.3521%" height="15" fill="rgb(213,128,22)" fg:x="166" fg:w="1"/><text x="58.7007%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.35%)</title><rect x="58.4507%" y="501" width="0.3521%" height="15" fill="rgb(238,77,31)" fg:x="166" fg:w="1"/><text x="58.7007%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.35%)</title><rect x="58.4507%" y="485" width="0.3521%" height="15" fill="rgb(227,15,28)" fg:x="166" fg:w="1"/><text x="58.7007%" y="495.50"></text></g><g><title>__GI___libc_free (1 samples, 0.35%)</title><rect x="58.4507%" y="469" width="0.3521%" height="15" fill="rgb(247,8,17)" fg:x="166" fg:w="1"/><text x="58.7007%" y="479.50"></text></g><g><title>arena_for_chunk (1 samples, 0.35%)</title><rect x="58.4507%" y="453" width="0.3521%" height="15" fill="rgb(234,26,42)" fg:x="166" fg:w="1"/><text x="58.7007%" y="463.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_sysline_in_block_year (1 samples, 0.35%)</title><rect x="58.8028%" y="1029" width="0.3521%" height="15" fill="rgb(253,177,51)" fg:x="167" fg:w="1"/><text x="59.0528%" y="1039.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::parse_datetime_in_line_cached (1 samples, 0.35%)</title><rect x="58.8028%" y="1013" width="0.3521%" height="15" fill="rgb(231,75,50)" fg:x="167" fg:w="1"/><text x="59.0528%" y="1023.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::parse_datetime_in_line (1 samples, 0.35%)</title><rect x="58.8028%" y="997" width="0.3521%" height="15" fill="rgb(234,54,15)" fg:x="167" fg:w="1"/><text x="59.0528%" y="1007.50"></text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_datetime_in_line (1 samples, 0.35%)</title><rect x="58.8028%" y="981" width="0.3521%" height="15" fill="rgb(212,53,9)" fg:x="167" fg:w="1"/><text x="59.0528%" y="991.50"></text></g><g><title>s4lib::data::datetime::bytes_to_regex_to_datetime (1 samples, 0.35%)</title><rect x="58.8028%" y="965" width="0.3521%" height="15" fill="rgb(252,84,36)" fg:x="167" fg:w="1"/><text x="59.0528%" y="975.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.35%)</title><rect x="58.8028%" y="949" width="0.3521%" height="15" fill="rgb(223,143,22)" fg:x="167" fg:w="1"/><text x="59.0528%" y="959.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.35%)</title><rect x="58.8028%" y="933" width="0.3521%" height="15" fill="rgb(216,218,52)" fg:x="167" fg:w="1"/><text x="59.0528%" y="943.50"></text></g><g><title>once_cell::imp::initialize_or_wait (1 samples, 0.35%)</title><rect x="58.8028%" y="917" width="0.3521%" height="15" fill="rgb(247,128,5)" fg:x="167" fg:w="1"/><text x="59.0528%" y="927.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.35%)</title><rect x="58.8028%" y="901" width="0.3521%" height="15" fill="rgb(225,224,16)" fg:x="167" fg:w="1"/><text x="59.0528%" y="911.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (1 samples, 0.35%)</title><rect x="58.8028%" y="885" width="0.3521%" height="15" fill="rgb(237,110,11)" fg:x="167" fg:w="1"/><text x="59.0528%" y="895.50"></text></g><g><title>s4lib::data::datetime::bytes_to_regex_to_datetime::{{closure}} (1 samples, 0.35%)</title><rect x="58.8028%" y="869" width="0.3521%" height="15" fill="rgb(231,98,11)" fg:x="167" fg:w="1"/><text x="59.0528%" y="879.50"></text></g><g><title>regex::regex::bytes::Regex::new (1 samples, 0.35%)</title><rect x="58.8028%" y="853" width="0.3521%" height="15" fill="rgb(246,224,25)" fg:x="167" fg:w="1"/><text x="59.0528%" y="863.50"></text></g><g><title>regex::builders::bytes::RegexBuilder::build (1 samples, 0.35%)</title><rect x="58.8028%" y="837" width="0.3521%" height="15" fill="rgb(236,76,51)" fg:x="167" fg:w="1"/><text x="59.0528%" y="847.50"></text></g><g><title>regex::builders::Builder::build_one_bytes (1 samples, 0.35%)</title><rect x="58.8028%" y="821" width="0.3521%" height="15" fill="rgb(233,102,7)" fg:x="167" fg:w="1"/><text x="59.0528%" y="831.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (1 samples, 0.35%)</title><rect x="58.8028%" y="805" width="0.3521%" height="15" fill="rgb(212,33,22)" fg:x="167" fg:w="1"/><text x="59.0528%" y="815.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many (1 samples, 0.35%)</title><rect x="58.8028%" y="789" width="0.3521%" height="15" fill="rgb(236,25,32)" fg:x="167" fg:w="1"/><text x="59.0528%" y="799.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (1 samples, 0.35%)</title><rect x="58.8028%" y="773" width="0.3521%" height="15" fill="rgb(250,142,30)" fg:x="167" fg:w="1"/><text x="59.0528%" y="783.50"></text></g><g><title>regex_automata::meta::strategy::new (1 samples, 0.35%)</title><rect x="58.8028%" y="757" width="0.3521%" height="15" fill="rgb(243,171,22)" fg:x="167" fg:w="1"/><text x="59.0528%" y="767.50"></text></g><g><title>regex_automata::meta::strategy::Core::new (1 samples, 0.35%)</title><rect x="58.8028%" y="741" width="0.3521%" height="15" fill="rgb(222,69,27)" fg:x="167" fg:w="1"/><text x="59.0528%" y="751.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (1 samples, 0.35%)</title><rect x="58.8028%" y="725" width="0.3521%" height="15" fill="rgb(226,42,16)" fg:x="167" fg:w="1"/><text x="59.0528%" y="735.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (1 samples, 0.35%)</title><rect x="58.8028%" y="709" width="0.3521%" height="15" fill="rgb(242,129,17)" fg:x="167" fg:w="1"/><text x="59.0528%" y="719.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::build (1 samples, 0.35%)</title><rect x="58.8028%" y="693" width="0.3521%" height="15" fill="rgb(205,136,15)" fg:x="167" fg:w="1"/><text x="59.0528%" y="703.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::Inner::add (1 samples, 0.35%)</title><rect x="58.8028%" y="677" width="0.3521%" height="15" fill="rgb(212,0,0)" fg:x="167" fg:w="1"/><text x="59.0528%" y="687.50"></text></g><g><title>regex_automata::util::alphabet::ByteClassSet::set_range (1 samples, 0.35%)</title><rect x="58.8028%" y="661" width="0.3521%" height="15" fill="rgb(234,204,30)" fg:x="167" fg:w="1"/><text x="59.0528%" y="671.50"></text></g><g><title>regex_automata::util::alphabet::ByteSet::add (1 samples, 0.35%)</title><rect x="58.8028%" y="645" width="0.3521%" height="15" fill="rgb(228,133,21)" fg:x="167" fg:w="1"/><text x="59.0528%" y="655.50"></text></g><g><title>regex_automata::meta::strategy::ReverseInner::new (1 samples, 0.35%)</title><rect x="59.1549%" y="805" width="0.3521%" height="15" fill="rgb(225,146,32)" fg:x="168" fg:w="1"/><text x="59.4049%" y="815.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_from_hir (1 samples, 0.35%)</title><rect x="59.1549%" y="789" width="0.3521%" height="15" fill="rgb(210,66,46)" fg:x="168" fg:w="1"/><text x="59.4049%" y="799.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (1 samples, 0.35%)</title><rect x="59.1549%" y="773" width="0.3521%" height="15" fill="rgb(226,42,16)" fg:x="168" fg:w="1"/><text x="59.4049%" y="783.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (1 samples, 0.35%)</title><rect x="59.1549%" y="757" width="0.3521%" height="15" fill="rgb(242,129,17)" fg:x="168" fg:w="1"/><text x="59.4049%" y="767.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (1 samples, 0.35%)</title><rect x="59.1549%" y="741" width="0.3521%" height="15" fill="rgb(247,137,3)" fg:x="168" fg:w="1"/><text x="59.4049%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.35%)</title><rect x="59.1549%" y="725" width="0.3521%" height="15" fill="rgb(214,109,53)" fg:x="168" fg:w="1"/><text x="59.4049%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.35%)</title><rect x="59.1549%" y="709" width="0.3521%" height="15" fill="rgb(254,35,30)" fg:x="168" fg:w="1"/><text x="59.4049%" y="719.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.35%)</title><rect x="59.1549%" y="693" width="0.3521%" height="15" fill="rgb(226,169,23)" fg:x="168" fg:w="1"/><text x="59.4049%" y="703.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile::{{closure}} (1 samples, 0.35%)</title><rect x="59.1549%" y="677" width="0.3521%" height="15" fill="rgb(218,216,52)" fg:x="168" fg:w="1"/><text x="59.4049%" y="687.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 0.35%)</title><rect x="59.1549%" y="661" width="0.3521%" height="15" fill="rgb(235,200,16)" fg:x="168" fg:w="1"/><text x="59.4049%" y="671.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.35%)</title><rect x="59.1549%" y="645" width="0.3521%" height="15" fill="rgb(213,34,18)" fg:x="168" fg:w="1"/><text x="59.4049%" y="655.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (1 samples, 0.35%)</title><rect x="59.1549%" y="629" width="0.3521%" height="15" fill="rgb(210,105,37)" fg:x="168" fg:w="1"/><text x="59.4049%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 0.35%)</title><rect x="59.1549%" y="613" width="0.3521%" height="15" fill="rgb(222,94,14)" fg:x="168" fg:w="1"/><text x="59.4049%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.35%)</title><rect x="59.1549%" y="597" width="0.3521%" height="15" fill="rgb(254,35,30)" fg:x="168" fg:w="1"/><text x="59.4049%" y="607.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.35%)</title><rect x="59.1549%" y="581" width="0.3521%" height="15" fill="rgb(226,169,23)" fg:x="168" fg:w="1"/><text x="59.4049%" y="591.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (1 samples, 0.35%)</title><rect x="59.1549%" y="565" width="0.3521%" height="15" fill="rgb(205,130,14)" fg:x="168" fg:w="1"/><text x="59.4049%" y="575.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.35%)</title><rect x="59.1549%" y="549" width="0.3521%" height="15" fill="rgb(213,34,18)" fg:x="168" fg:w="1"/><text x="59.4049%" y="559.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (1 samples, 0.35%)</title><rect x="59.1549%" y="533" width="0.3521%" height="15" fill="rgb(253,35,22)" fg:x="168" fg:w="1"/><text x="59.4049%" y="543.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::add (1 samples, 0.35%)</title><rect x="59.1549%" y="517" width="0.3521%" height="15" fill="rgb(247,201,32)" fg:x="168" fg:w="1"/><text x="59.4049%" y="527.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::get_or_add_state (1 samples, 0.35%)</title><rect x="59.1549%" y="501" width="0.3521%" height="15" fill="rgb(249,22,31)" fg:x="168" fg:w="1"/><text x="59.4049%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.35%)</title><rect x="59.1549%" y="485" width="0.3521%" height="15" fill="rgb(241,229,15)" fg:x="168" fg:w="1"/><text x="59.4049%" y="495.50"></text></g><g><title>core::ptr::write (1 samples, 0.35%)</title><rect x="59.1549%" y="469" width="0.3521%" height="15" fill="rgb(209,143,44)" fg:x="168" fg:w="1"/><text x="59.4049%" y="479.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by_key (1 samples, 0.35%)</title><rect x="59.5070%" y="485" width="0.3521%" height="15" fill="rgb(219,159,10)" fg:x="169" fg:w="1"/><text x="59.7570%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.35%)</title><rect x="59.5070%" y="469" width="0.3521%" height="15" fill="rgb(252,87,43)" fg:x="169" fg:w="1"/><text x="59.7570%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (1 samples, 0.35%)</title><rect x="59.8592%" y="485" width="0.3521%" height="15" fill="rgb(222,129,7)" fg:x="170" fg:w="1"/><text x="60.1092%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.35%)</title><rect x="59.8592%" y="469" width="0.3521%" height="15" fill="rgb(212,159,3)" fg:x="170" fg:w="1"/><text x="60.1092%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.35%)</title><rect x="59.8592%" y="453" width="0.3521%" height="15" fill="rgb(231,142,39)" fg:x="170" fg:w="1"/><text x="60.1092%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.35%)</title><rect x="59.8592%" y="437" width="0.3521%" height="15" fill="rgb(249,2,22)" fg:x="170" fg:w="1"/><text x="60.1092%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.35%)</title><rect x="59.8592%" y="421" width="0.3521%" height="15" fill="rgb(254,53,35)" fg:x="170" fg:w="1"/><text x="60.1092%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.35%)</title><rect x="59.8592%" y="405" width="0.3521%" height="15" fill="rgb(237,133,22)" fg:x="170" fg:w="1"/><text x="60.1092%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 1.06%)</title><rect x="59.5070%" y="629" width="1.0563%" height="15" fill="rgb(214,109,53)" fg:x="169" fg:w="3"/><text x="59.7570%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 1.06%)</title><rect x="59.5070%" y="613" width="1.0563%" height="15" fill="rgb(254,35,30)" fg:x="169" fg:w="3"/><text x="59.7570%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (3 samples, 1.06%)</title><rect x="59.5070%" y="597" width="1.0563%" height="15" fill="rgb(226,169,23)" fg:x="169" fg:w="3"/><text x="59.7570%" y="607.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (3 samples, 1.06%)</title><rect x="59.5070%" y="581" width="1.0563%" height="15" fill="rgb(205,130,14)" fg:x="169" fg:w="3"/><text x="59.7570%" y="591.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (3 samples, 1.06%)</title><rect x="59.5070%" y="565" width="1.0563%" height="15" fill="rgb(235,200,16)" fg:x="169" fg:w="3"/><text x="59.7570%" y="575.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (3 samples, 1.06%)</title><rect x="59.5070%" y="549" width="1.0563%" height="15" fill="rgb(213,34,18)" fg:x="169" fg:w="3"/><text x="59.7570%" y="559.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (3 samples, 1.06%)</title><rect x="59.5070%" y="533" width="1.0563%" height="15" fill="rgb(253,35,22)" fg:x="169" fg:w="3"/><text x="59.7570%" y="543.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::add (3 samples, 1.06%)</title><rect x="59.5070%" y="517" width="1.0563%" height="15" fill="rgb(247,201,32)" fg:x="169" fg:w="3"/><text x="59.7570%" y="527.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::get_or_add_state (3 samples, 1.06%)</title><rect x="59.5070%" y="501" width="1.0563%" height="15" fill="rgb(249,22,31)" fg:x="169" fg:w="3"/><text x="59.7570%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by_key (1 samples, 0.35%)</title><rect x="60.5634%" y="485" width="0.3521%" height="15" fill="rgb(219,159,10)" fg:x="172" fg:w="1"/><text x="60.8134%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.35%)</title><rect x="60.5634%" y="469" width="0.3521%" height="15" fill="rgb(252,87,43)" fg:x="172" fg:w="1"/><text x="60.8134%" y="479.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by_key::{{closure}} (1 samples, 0.35%)</title><rect x="60.5634%" y="453" width="0.3521%" height="15" fill="rgb(217,124,17)" fg:x="172" fg:w="1"/><text x="60.8134%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u8&gt;::cmp (1 samples, 0.35%)</title><rect x="60.5634%" y="437" width="0.3521%" height="15" fill="rgb(206,19,29)" fg:x="172" fg:w="1"/><text x="60.8134%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.35%)</title><rect x="60.9155%" y="485" width="0.3521%" height="15" fill="rgb(241,229,15)" fg:x="173" fg:w="1"/><text x="61.1655%" y="495.50"></text></g><g><title>core::ptr::write (1 samples, 0.35%)</title><rect x="60.9155%" y="469" width="0.3521%" height="15" fill="rgb(209,143,44)" fg:x="173" fg:w="1"/><text x="61.1655%" y="479.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::add (3 samples, 1.06%)</title><rect x="60.5634%" y="517" width="1.0563%" height="15" fill="rgb(247,201,32)" fg:x="172" fg:w="3"/><text x="60.8134%" y="527.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::get_or_add_state (3 samples, 1.06%)</title><rect x="60.5634%" y="501" width="1.0563%" height="15" fill="rgb(249,22,31)" fg:x="172" fg:w="3"/><text x="60.8134%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (1 samples, 0.35%)</title><rect x="61.2676%" y="485" width="0.3521%" height="15" fill="rgb(222,129,7)" fg:x="174" fg:w="1"/><text x="61.5176%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.35%)</title><rect x="61.2676%" y="469" width="0.3521%" height="15" fill="rgb(212,159,3)" fg:x="174" fg:w="1"/><text x="61.5176%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.35%)</title><rect x="61.2676%" y="453" width="0.3521%" height="15" fill="rgb(231,142,39)" fg:x="174" fg:w="1"/><text x="61.5176%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.35%)</title><rect x="61.2676%" y="437" width="0.3521%" height="15" fill="rgb(249,2,22)" fg:x="174" fg:w="1"/><text x="61.5176%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.35%)</title><rect x="61.2676%" y="421" width="0.3521%" height="15" fill="rgb(254,53,35)" fg:x="174" fg:w="1"/><text x="61.5176%" y="431.50"></text></g><g><title>core::cmp::max (1 samples, 0.35%)</title><rect x="61.2676%" y="405" width="0.3521%" height="15" fill="rgb(230,43,15)" fg:x="174" fg:w="1"/><text x="61.5176%" y="415.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.35%)</title><rect x="61.2676%" y="389" width="0.3521%" height="15" fill="rgb(238,229,26)" fg:x="174" fg:w="1"/><text x="61.5176%" y="399.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (7 samples, 2.46%)</title><rect x="59.5070%" y="789" width="2.4648%" height="15" fill="rgb(226,42,16)" fg:x="169" fg:w="7"/><text x="59.7570%" y="799.50">re..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (7 samples, 2.46%)</title><rect x="59.5070%" y="773" width="2.4648%" height="15" fill="rgb(242,129,17)" fg:x="169" fg:w="7"/><text x="59.7570%" y="783.50">re..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (7 samples, 2.46%)</title><rect x="59.5070%" y="757" width="2.4648%" height="15" fill="rgb(247,137,3)" fg:x="169" fg:w="7"/><text x="59.7570%" y="767.50">re..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 2.46%)</title><rect x="59.5070%" y="741" width="2.4648%" height="15" fill="rgb(214,109,53)" fg:x="169" fg:w="7"/><text x="59.7570%" y="751.50">&lt;c..</text></g><g><title>core::option::Option&lt;T&gt;::map (7 samples, 2.46%)</title><rect x="59.5070%" y="725" width="2.4648%" height="15" fill="rgb(254,35,30)" fg:x="169" fg:w="7"/><text x="59.7570%" y="735.50">co..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (7 samples, 2.46%)</title><rect x="59.5070%" y="709" width="2.4648%" height="15" fill="rgb(226,169,23)" fg:x="169" fg:w="7"/><text x="59.7570%" y="719.50">co..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile::{{closure}} (7 samples, 2.46%)</title><rect x="59.5070%" y="693" width="2.4648%" height="15" fill="rgb(218,216,52)" fg:x="169" fg:w="7"/><text x="59.7570%" y="703.50">re..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (7 samples, 2.46%)</title><rect x="59.5070%" y="677" width="2.4648%" height="15" fill="rgb(235,200,16)" fg:x="169" fg:w="7"/><text x="59.7570%" y="687.50">re..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (7 samples, 2.46%)</title><rect x="59.5070%" y="661" width="2.4648%" height="15" fill="rgb(213,34,18)" fg:x="169" fg:w="7"/><text x="59.7570%" y="671.50">re..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (7 samples, 2.46%)</title><rect x="59.5070%" y="645" width="2.4648%" height="15" fill="rgb(210,105,37)" fg:x="169" fg:w="7"/><text x="59.7570%" y="655.50">re..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (4 samples, 1.41%)</title><rect x="60.5634%" y="629" width="1.4085%" height="15" fill="rgb(222,94,14)" fg:x="172" fg:w="4"/><text x="60.8134%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 1.41%)</title><rect x="60.5634%" y="613" width="1.4085%" height="15" fill="rgb(254,35,30)" fg:x="172" fg:w="4"/><text x="60.8134%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (4 samples, 1.41%)</title><rect x="60.5634%" y="597" width="1.4085%" height="15" fill="rgb(226,169,23)" fg:x="172" fg:w="4"/><text x="60.8134%" y="607.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (4 samples, 1.41%)</title><rect x="60.5634%" y="581" width="1.4085%" height="15" fill="rgb(205,130,14)" fg:x="172" fg:w="4"/><text x="60.8134%" y="591.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (4 samples, 1.41%)</title><rect x="60.5634%" y="565" width="1.4085%" height="15" fill="rgb(235,200,16)" fg:x="172" fg:w="4"/><text x="60.8134%" y="575.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (4 samples, 1.41%)</title><rect x="60.5634%" y="549" width="1.4085%" height="15" fill="rgb(213,34,18)" fg:x="172" fg:w="4"/><text x="60.8134%" y="559.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (4 samples, 1.41%)</title><rect x="60.5634%" y="533" width="1.4085%" height="15" fill="rgb(253,35,22)" fg:x="172" fg:w="4"/><text x="60.8134%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::literal_trie::LiteralTrie&gt; (1 samples, 0.35%)</title><rect x="61.6197%" y="517" width="0.3521%" height="15" fill="rgb(244,70,29)" fg:x="175" fg:w="1"/><text x="61.8697%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_automata::nfa::thompson::literal_trie::State&gt;&gt; (1 samples, 0.35%)</title><rect x="61.6197%" y="501" width="0.3521%" height="15" fill="rgb(227,19,7)" fg:x="175" fg:w="1"/><text x="61.8697%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.35%)</title><rect x="61.6197%" y="485" width="0.3521%" height="15" fill="rgb(249,14,2)" fg:x="175" fg:w="1"/><text x="61.8697%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[regex_automata::nfa::thompson::literal_trie::State]&gt; (1 samples, 0.35%)</title><rect x="61.6197%" y="469" width="0.3521%" height="15" fill="rgb(241,61,51)" fg:x="175" fg:w="1"/><text x="61.8697%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::literal_trie::State&gt; (1 samples, 0.35%)</title><rect x="61.6197%" y="453" width="0.3521%" height="15" fill="rgb(245,189,53)" fg:x="175" fg:w="1"/><text x="61.8697%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_automata::nfa::thompson::literal_trie::Transition&gt;&gt; (1 samples, 0.35%)</title><rect x="61.6197%" y="437" width="0.3521%" height="15" fill="rgb(242,32,21)" fg:x="175" fg:w="1"/><text x="61.8697%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;regex_automata::nfa::thompson::literal_trie::Transition&gt;&gt; (1 samples, 0.35%)</title><rect x="61.6197%" y="421" width="0.3521%" height="15" fill="rgb(216,209,43)" fg:x="175" fg:w="1"/><text x="61.8697%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.35%)</title><rect x="61.6197%" y="405" width="0.3521%" height="15" fill="rgb(213,128,22)" fg:x="175" fg:w="1"/><text x="61.8697%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.35%)</title><rect x="61.6197%" y="389" width="0.3521%" height="15" fill="rgb(238,77,31)" fg:x="175" fg:w="1"/><text x="61.8697%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.35%)</title><rect x="61.6197%" y="373" width="0.3521%" height="15" fill="rgb(227,15,28)" fg:x="175" fg:w="1"/><text x="61.8697%" y="383.50"></text></g><g><title>__GI___libc_free (1 samples, 0.35%)</title><rect x="61.6197%" y="357" width="0.3521%" height="15" fill="rgb(247,8,17)" fg:x="175" fg:w="1"/><text x="61.8697%" y="367.50"></text></g><g><title>_int_free (1 samples, 0.35%)</title><rect x="61.6197%" y="341" width="0.3521%" height="15" fill="rgb(221,113,48)" fg:x="175" fg:w="1"/><text x="61.8697%" y="351.50"></text></g><g><title>regex_automata::dfa::onepass::InternalBuilder::shuffle_states (1 samples, 0.35%)</title><rect x="61.9718%" y="725" width="0.3521%" height="15" fill="rgb(235,45,9)" fg:x="176" fg:w="1"/><text x="62.2218%" y="735.50"></text></g><g><title>regex_automata::dfa::remapper::Remapper::remap (1 samples, 0.35%)</title><rect x="61.9718%" y="709" width="0.3521%" height="15" fill="rgb(246,37,46)" fg:x="176" fg:w="1"/><text x="62.2218%" y="719.50"></text></g><g><title>regex_automata::dfa::remapper::onepass::&lt;impl regex_automata::dfa::remapper::Remappable for regex_automata::dfa::onepass::DFA&gt;::remap (1 samples, 0.35%)</title><rect x="61.9718%" y="693" width="0.3521%" height="15" fill="rgb(220,104,28)" fg:x="176" fg:w="1"/><text x="62.2218%" y="703.50"></text></g><g><title>regex_automata::dfa::onepass::DFA::remap (1 samples, 0.35%)</title><rect x="61.9718%" y="677" width="0.3521%" height="15" fill="rgb(220,12,22)" fg:x="176" fg:w="1"/><text x="62.2218%" y="687.50"></text></g><g><title>regex_automata::dfa::remapper::Remapper::remap::{{closure}} (1 samples, 0.35%)</title><rect x="61.9718%" y="661" width="0.3521%" height="15" fill="rgb(205,70,50)" fg:x="176" fg:w="1"/><text x="62.2218%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.35%)</title><rect x="61.9718%" y="645" width="0.3521%" height="15" fill="rgb(215,149,39)" fg:x="176" fg:w="1"/><text x="62.2218%" y="655.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.35%)</title><rect x="61.9718%" y="629" width="0.3521%" height="15" fill="rgb(250,51,46)" fg:x="176" fg:w="1"/><text x="62.2218%" y="639.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.35%)</title><rect x="61.9718%" y="613" width="0.3521%" height="15" fill="rgb(254,116,45)" fg:x="176" fg:w="1"/><text x="62.2218%" y="623.50"></text></g><g><title>regex_automata::dfa::onepass::InternalBuilder::add_dfa_state_for_nfa_state (1 samples, 0.35%)</title><rect x="62.3239%" y="709" width="0.3521%" height="15" fill="rgb(226,222,5)" fg:x="177" fg:w="1"/><text x="62.5739%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.35%)</title><rect x="62.3239%" y="693" width="0.3521%" height="15" fill="rgb(241,229,15)" fg:x="177" fg:w="1"/><text x="62.5739%" y="703.50"></text></g><g><title>regex_automata::dfa::onepass::InternalBuilder::compile_transition (2 samples, 0.70%)</title><rect x="62.3239%" y="725" width="0.7042%" height="15" fill="rgb(230,62,50)" fg:x="177" fg:w="2"/><text x="62.5739%" y="735.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.35%)</title><rect x="62.6761%" y="709" width="0.3521%" height="15" fill="rgb(245,132,34)" fg:x="178" fg:w="1"/><text x="62.9261%" y="719.50"></text></g><g><title>s4lib::data::datetime::bytes_to_regex_to_datetime (12 samples, 4.23%)</title><rect x="59.1549%" y="1029" width="4.2254%" height="15" fill="rgb(252,84,36)" fg:x="168" fg:w="12"/><text x="59.4049%" y="1039.50">s4lib..</text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (12 samples, 4.23%)</title><rect x="59.1549%" y="1013" width="4.2254%" height="15" fill="rgb(223,143,22)" fg:x="168" fg:w="12"/><text x="59.4049%" y="1023.50">once_..</text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (12 samples, 4.23%)</title><rect x="59.1549%" y="997" width="4.2254%" height="15" fill="rgb(216,218,52)" fg:x="168" fg:w="12"/><text x="59.4049%" y="1007.50">once_..</text></g><g><title>once_cell::imp::initialize_or_wait (12 samples, 4.23%)</title><rect x="59.1549%" y="981" width="4.2254%" height="15" fill="rgb(247,128,5)" fg:x="168" fg:w="12"/><text x="59.4049%" y="991.50">once_..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (12 samples, 4.23%)</title><rect x="59.1549%" y="965" width="4.2254%" height="15" fill="rgb(225,224,16)" fg:x="168" fg:w="12"/><text x="59.4049%" y="975.50">core:..</text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (12 samples, 4.23%)</title><rect x="59.1549%" y="949" width="4.2254%" height="15" fill="rgb(237,110,11)" fg:x="168" fg:w="12"/><text x="59.4049%" y="959.50">once_..</text></g><g><title>s4lib::data::datetime::bytes_to_regex_to_datetime::{{closure}} (12 samples, 4.23%)</title><rect x="59.1549%" y="933" width="4.2254%" height="15" fill="rgb(231,98,11)" fg:x="168" fg:w="12"/><text x="59.4049%" y="943.50">s4lib..</text></g><g><title>regex::regex::bytes::Regex::new (12 samples, 4.23%)</title><rect x="59.1549%" y="917" width="4.2254%" height="15" fill="rgb(246,224,25)" fg:x="168" fg:w="12"/><text x="59.4049%" y="927.50">regex..</text></g><g><title>regex::builders::bytes::RegexBuilder::build (12 samples, 4.23%)</title><rect x="59.1549%" y="901" width="4.2254%" height="15" fill="rgb(236,76,51)" fg:x="168" fg:w="12"/><text x="59.4049%" y="911.50">regex..</text></g><g><title>regex::builders::Builder::build_one_bytes (12 samples, 4.23%)</title><rect x="59.1549%" y="885" width="4.2254%" height="15" fill="rgb(233,102,7)" fg:x="168" fg:w="12"/><text x="59.4049%" y="895.50">regex..</text></g><g><title>regex_automata::meta::regex::Builder::build (12 samples, 4.23%)</title><rect x="59.1549%" y="869" width="4.2254%" height="15" fill="rgb(212,33,22)" fg:x="168" fg:w="12"/><text x="59.4049%" y="879.50">regex..</text></g><g><title>regex_automata::meta::regex::Builder::build_many (12 samples, 4.23%)</title><rect x="59.1549%" y="853" width="4.2254%" height="15" fill="rgb(236,25,32)" fg:x="168" fg:w="12"/><text x="59.4049%" y="863.50">regex..</text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (12 samples, 4.23%)</title><rect x="59.1549%" y="837" width="4.2254%" height="15" fill="rgb(250,142,30)" fg:x="168" fg:w="12"/><text x="59.4049%" y="847.50">regex..</text></g><g><title>regex_automata::meta::strategy::new (12 samples, 4.23%)</title><rect x="59.1549%" y="821" width="4.2254%" height="15" fill="rgb(243,171,22)" fg:x="168" fg:w="12"/><text x="59.4049%" y="831.50">regex..</text></g><g><title>regex_automata::meta::strategy::Core::new (11 samples, 3.87%)</title><rect x="59.5070%" y="805" width="3.8732%" height="15" fill="rgb(222,69,27)" fg:x="169" fg:w="11"/><text x="59.7570%" y="815.50">rege..</text></g><g><title>regex_automata::meta::wrappers::OnePass::new (4 samples, 1.41%)</title><rect x="61.9718%" y="789" width="1.4085%" height="15" fill="rgb(235,224,47)" fg:x="176" fg:w="4"/><text x="62.2218%" y="799.50"></text></g><g><title>regex_automata::meta::wrappers::OnePassEngine::new (4 samples, 1.41%)</title><rect x="61.9718%" y="773" width="1.4085%" height="15" fill="rgb(247,185,25)" fg:x="176" fg:w="4"/><text x="62.2218%" y="783.50"></text></g><g><title>regex_automata::dfa::onepass::Builder::build_from_nfa (4 samples, 1.41%)</title><rect x="61.9718%" y="757" width="1.4085%" height="15" fill="rgb(209,62,19)" fg:x="176" fg:w="4"/><text x="62.2218%" y="767.50"></text></g><g><title>regex_automata::dfa::onepass::InternalBuilder::build (4 samples, 1.41%)</title><rect x="61.9718%" y="741" width="1.4085%" height="15" fill="rgb(206,107,24)" fg:x="176" fg:w="4"/><text x="62.2218%" y="751.50"></text></g><g><title>regex_automata::dfa::onepass::InternalBuilder::add_start_state (1 samples, 0.35%)</title><rect x="63.0282%" y="725" width="0.3521%" height="15" fill="rgb(245,13,2)" fg:x="179" fg:w="1"/><text x="63.2782%" y="735.50"></text></g><g><title>regex_automata::dfa::onepass::InternalBuilder::add_dfa_state_for_nfa_state (1 samples, 0.35%)</title><rect x="63.0282%" y="709" width="0.3521%" height="15" fill="rgb(226,222,5)" fg:x="179" fg:w="1"/><text x="63.2782%" y="719.50"></text></g><g><title>regex_automata::dfa::onepass::InternalBuilder::add_empty_state (1 samples, 0.35%)</title><rect x="63.0282%" y="693" width="0.3521%" height="15" fill="rgb(249,155,54)" fg:x="179" fg:w="1"/><text x="63.2782%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.35%)</title><rect x="63.0282%" y="677" width="0.3521%" height="15" fill="rgb(205,186,49)" fg:x="179" fg:w="1"/><text x="63.2782%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.35%)</title><rect x="63.0282%" y="661" width="0.3521%" height="15" fill="rgb(232,211,42)" fg:x="179" fg:w="1"/><text x="63.2782%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.35%)</title><rect x="63.0282%" y="645" width="0.3521%" height="15" fill="rgb(214,146,48)" fg:x="179" fg:w="1"/><text x="63.2782%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.35%)</title><rect x="63.0282%" y="629" width="0.3521%" height="15" fill="rgb(212,159,3)" fg:x="179" fg:w="1"/><text x="63.2782%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.35%)</title><rect x="63.0282%" y="613" width="0.3521%" height="15" fill="rgb(231,142,39)" fg:x="179" fg:w="1"/><text x="63.2782%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.35%)</title><rect x="63.0282%" y="597" width="0.3521%" height="15" fill="rgb(249,2,22)" fg:x="179" fg:w="1"/><text x="63.2782%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.35%)</title><rect x="63.0282%" y="581" width="0.3521%" height="15" fill="rgb(254,53,35)" fg:x="179" fg:w="1"/><text x="63.2782%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.35%)</title><rect x="63.0282%" y="565" width="0.3521%" height="15" fill="rgb(237,133,22)" fg:x="179" fg:w="1"/><text x="63.2782%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.35%)</title><rect x="63.0282%" y="549" width="0.3521%" height="15" fill="rgb(237,156,49)" fg:x="179" fg:w="1"/><text x="63.2782%" y="559.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.35%)</title><rect x="63.0282%" y="533" width="0.3521%" height="15" fill="rgb(214,150,36)" fg:x="179" fg:w="1"/><text x="63.2782%" y="543.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.35%)</title><rect x="63.0282%" y="517" width="0.3521%" height="15" fill="rgb(254,47,34)" fg:x="179" fg:w="1"/><text x="63.2782%" y="527.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.35%)</title><rect x="63.0282%" y="501" width="0.3521%" height="15" fill="rgb(254,73,4)" fg:x="179" fg:w="1"/><text x="63.2782%" y="511.50"></text></g><g><title>regex_syntax::hir::literal::PreferenceTrie::create_state (1 samples, 0.35%)</title><rect x="63.3803%" y="517" width="0.3521%" height="15" fill="rgb(224,202,5)" fg:x="180" fg:w="1"/><text x="63.6303%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.35%)</title><rect x="63.3803%" y="501" width="0.3521%" height="15" fill="rgb(241,229,15)" fg:x="180" fg:w="1"/><text x="63.6303%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by_key::{{closure}} (1 samples, 0.35%)</title><rect x="63.7324%" y="485" width="0.3521%" height="15" fill="rgb(217,124,17)" fg:x="181" fg:w="1"/><text x="63.9824%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u8&gt;::cmp (1 samples, 0.35%)</title><rect x="63.7324%" y="469" width="0.3521%" height="15" fill="rgb(206,19,29)" fg:x="181" fg:w="1"/><text x="63.9824%" y="479.50"></text></g><g><title>regex_automata::util::prefilter::prefixes (3 samples, 1.06%)</title><rect x="63.3803%" y="645" width="1.0563%" height="15" fill="rgb(209,67,19)" fg:x="180" fg:w="3"/><text x="63.6303%" y="655.50"></text></g><g><title>regex_syntax::hir::literal::Seq::optimize_for_prefix_by_preference (3 samples, 1.06%)</title><rect x="63.3803%" y="629" width="1.0563%" height="15" fill="rgb(206,179,34)" fg:x="180" fg:w="3"/><text x="63.6303%" y="639.50"></text></g><g><title>regex_syntax::hir::literal::Seq::optimize_by_preference (3 samples, 1.06%)</title><rect x="63.3803%" y="613" width="1.0563%" height="15" fill="rgb(208,121,1)" fg:x="180" fg:w="3"/><text x="63.6303%" y="623.50"></text></g><g><title>regex_syntax::hir::literal::PreferenceTrie::minimize (3 samples, 1.06%)</title><rect x="63.3803%" y="597" width="1.0563%" height="15" fill="rgb(240,28,15)" fg:x="180" fg:w="3"/><text x="63.6303%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut (3 samples, 1.06%)</title><rect x="63.3803%" y="581" width="1.0563%" height="15" fill="rgb(208,159,28)" fg:x="180" fg:w="3"/><text x="63.6303%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut::process_loop (3 samples, 1.06%)</title><rect x="63.3803%" y="565" width="1.0563%" height="15" fill="rgb(227,228,3)" fg:x="180" fg:w="3"/><text x="63.6303%" y="575.50"></text></g><g><title>regex_syntax::hir::literal::PreferenceTrie::minimize::{{closure}} (3 samples, 1.06%)</title><rect x="63.3803%" y="549" width="1.0563%" height="15" fill="rgb(234,110,33)" fg:x="180" fg:w="3"/><text x="63.6303%" y="559.50"></text></g><g><title>regex_syntax::hir::literal::PreferenceTrie::insert (3 samples, 1.06%)</title><rect x="63.3803%" y="533" width="1.0563%" height="15" fill="rgb(208,38,45)" fg:x="180" fg:w="3"/><text x="63.6303%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by_key (2 samples, 0.70%)</title><rect x="63.7324%" y="517" width="0.7042%" height="15" fill="rgb(219,159,10)" fg:x="181" fg:w="2"/><text x="63.9824%" y="527.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.70%)</title><rect x="63.7324%" y="501" width="0.7042%" height="15" fill="rgb(252,87,43)" fg:x="181" fg:w="2"/><text x="63.9824%" y="511.50"></text></g><g><title>regex_automata::meta::reverse_inner::top_concat (1 samples, 0.35%)</title><rect x="64.4366%" y="613" width="0.3521%" height="15" fill="rgb(211,177,54)" fg:x="183" fg:w="1"/><text x="64.6866%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.35%)</title><rect x="64.4366%" y="597" width="0.3521%" height="15" fill="rgb(222,213,17)" fg:x="183" fg:w="1"/><text x="64.6866%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.35%)</title><rect x="64.4366%" y="581" width="0.3521%" height="15" fill="rgb(247,137,3)" fg:x="183" fg:w="1"/><text x="64.6866%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.35%)</title><rect x="64.4366%" y="565" width="0.3521%" height="15" fill="rgb(227,158,43)" fg:x="183" fg:w="1"/><text x="64.6866%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.35%)</title><rect x="64.4366%" y="549" width="0.3521%" height="15" fill="rgb(232,14,28)" fg:x="183" fg:w="1"/><text x="64.6866%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.35%)</title><rect x="64.4366%" y="533" width="0.3521%" height="15" fill="rgb(232,211,42)" fg:x="183" fg:w="1"/><text x="64.6866%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.35%)</title><rect x="64.4366%" y="517" width="0.3521%" height="15" fill="rgb(214,146,48)" fg:x="183" fg:w="1"/><text x="64.6866%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.35%)</title><rect x="64.4366%" y="501" width="0.3521%" height="15" fill="rgb(245,181,4)" fg:x="183" fg:w="1"/><text x="64.6866%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.35%)</title><rect x="64.4366%" y="485" width="0.3521%" height="15" fill="rgb(242,69,50)" fg:x="183" fg:w="1"/><text x="64.6866%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.35%)</title><rect x="64.4366%" y="469" width="0.3521%" height="15" fill="rgb(214,12,39)" fg:x="183" fg:w="1"/><text x="64.6866%" y="479.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.35%)</title><rect x="64.4366%" y="453" width="0.3521%" height="15" fill="rgb(253,112,1)" fg:x="183" fg:w="1"/><text x="64.6866%" y="463.50"></text></g><g><title>regex_automata::meta::reverse_inner::top_concat::{{closure}} (1 samples, 0.35%)</title><rect x="64.4366%" y="437" width="0.3521%" height="15" fill="rgb(215,49,37)" fg:x="183" fg:w="1"/><text x="64.6866%" y="447.50"></text></g><g><title>regex_automata::meta::reverse_inner::flatten (1 samples, 0.35%)</title><rect x="64.4366%" y="421" width="0.3521%" height="15" fill="rgb(250,32,35)" fg:x="183" fg:w="1"/><text x="64.6866%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.35%)</title><rect x="64.4366%" y="405" width="0.3521%" height="15" fill="rgb(222,213,17)" fg:x="183" fg:w="1"/><text x="64.6866%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.35%)</title><rect x="64.4366%" y="389" width="0.3521%" height="15" fill="rgb(247,137,3)" fg:x="183" fg:w="1"/><text x="64.6866%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.35%)</title><rect x="64.4366%" y="373" width="0.3521%" height="15" fill="rgb(227,158,43)" fg:x="183" fg:w="1"/><text x="64.6866%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.35%)</title><rect x="64.4366%" y="357" width="0.3521%" height="15" fill="rgb(232,14,28)" fg:x="183" fg:w="1"/><text x="64.6866%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.35%)</title><rect x="64.4366%" y="341" width="0.3521%" height="15" fill="rgb(232,211,42)" fg:x="183" fg:w="1"/><text x="64.6866%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.35%)</title><rect x="64.4366%" y="325" width="0.3521%" height="15" fill="rgb(214,146,48)" fg:x="183" fg:w="1"/><text x="64.6866%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.35%)</title><rect x="64.4366%" y="309" width="0.3521%" height="15" fill="rgb(245,181,4)" fg:x="183" fg:w="1"/><text x="64.6866%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.35%)</title><rect x="64.4366%" y="293" width="0.3521%" height="15" fill="rgb(242,69,50)" fg:x="183" fg:w="1"/><text x="64.6866%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.35%)</title><rect x="64.4366%" y="277" width="0.3521%" height="15" fill="rgb(214,12,39)" fg:x="183" fg:w="1"/><text x="64.6866%" y="287.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.35%)</title><rect x="64.4366%" y="261" width="0.3521%" height="15" fill="rgb(253,112,1)" fg:x="183" fg:w="1"/><text x="64.6866%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.35%)</title><rect x="64.4366%" y="245" width="0.3521%" height="15" fill="rgb(245,36,31)" fg:x="183" fg:w="1"/><text x="64.6866%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::{{closure}} (1 samples, 0.35%)</title><rect x="64.4366%" y="229" width="0.3521%" height="15" fill="rgb(221,227,48)" fg:x="183" fg:w="1"/><text x="64.6866%" y="239.50"></text></g><g><title>core::ptr::write (1 samples, 0.35%)</title><rect x="64.4366%" y="213" width="0.3521%" height="15" fill="rgb(209,143,44)" fg:x="183" fg:w="1"/><text x="64.6866%" y="223.50"></text></g><g><title>regex_syntax::hir::literal::Seq::optimize_for_prefix_by_preference (1 samples, 0.35%)</title><rect x="64.7887%" y="597" width="0.3521%" height="15" fill="rgb(206,179,34)" fg:x="184" fg:w="1"/><text x="65.0387%" y="607.50"></text></g><g><title>regex_syntax::hir::literal::Seq::optimize_by_preference (1 samples, 0.35%)</title><rect x="64.7887%" y="581" width="0.3521%" height="15" fill="rgb(208,121,1)" fg:x="184" fg:w="1"/><text x="65.0387%" y="591.50"></text></g><g><title>regex_syntax::hir::literal::PreferenceTrie::minimize (1 samples, 0.35%)</title><rect x="64.7887%" y="565" width="0.3521%" height="15" fill="rgb(240,28,15)" fg:x="184" fg:w="1"/><text x="65.0387%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut (1 samples, 0.35%)</title><rect x="64.7887%" y="549" width="0.3521%" height="15" fill="rgb(208,159,28)" fg:x="184" fg:w="1"/><text x="65.0387%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut::process_loop (1 samples, 0.35%)</title><rect x="64.7887%" y="533" width="0.3521%" height="15" fill="rgb(227,228,3)" fg:x="184" fg:w="1"/><text x="65.0387%" y="543.50"></text></g><g><title>regex_syntax::hir::literal::PreferenceTrie::minimize::{{closure}} (1 samples, 0.35%)</title><rect x="64.7887%" y="517" width="0.3521%" height="15" fill="rgb(234,110,33)" fg:x="184" fg:w="1"/><text x="65.0387%" y="527.50"></text></g><g><title>regex_syntax::hir::literal::PreferenceTrie::insert (1 samples, 0.35%)</title><rect x="64.7887%" y="501" width="0.3521%" height="15" fill="rgb(208,38,45)" fg:x="184" fg:w="1"/><text x="65.0387%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (1 samples, 0.35%)</title><rect x="64.7887%" y="485" width="0.3521%" height="15" fill="rgb(222,129,7)" fg:x="184" fg:w="1"/><text x="65.0387%" y="495.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.35%)</title><rect x="64.7887%" y="469" width="0.3521%" height="15" fill="rgb(221,136,15)" fg:x="184" fg:w="1"/><text x="65.0387%" y="479.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.35%)</title><rect x="64.7887%" y="453" width="0.3521%" height="15" fill="rgb(217,126,36)" fg:x="184" fg:w="1"/><text x="65.0387%" y="463.50"></text></g><g><title>regex_automata::meta::strategy::ReverseInner::new (3 samples, 1.06%)</title><rect x="64.4366%" y="645" width="1.0563%" height="15" fill="rgb(225,146,32)" fg:x="183" fg:w="3"/><text x="64.6866%" y="655.50"></text></g><g><title>regex_automata::meta::reverse_inner::extract (3 samples, 1.06%)</title><rect x="64.4366%" y="629" width="1.0563%" height="15" fill="rgb(209,78,45)" fg:x="183" fg:w="3"/><text x="64.6866%" y="639.50"></text></g><g><title>regex_automata::meta::reverse_inner::prefilter (2 samples, 0.70%)</title><rect x="64.7887%" y="613" width="0.7042%" height="15" fill="rgb(221,50,42)" fg:x="184" fg:w="2"/><text x="65.0387%" y="623.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::extract (1 samples, 0.35%)</title><rect x="65.1408%" y="597" width="0.3521%" height="15" fill="rgb(242,28,8)" fg:x="185" fg:w="1"/><text x="65.3908%" y="607.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::extract_alternation (1 samples, 0.35%)</title><rect x="65.1408%" y="581" width="0.3521%" height="15" fill="rgb(236,31,24)" fg:x="185" fg:w="1"/><text x="65.3908%" y="591.50"></text></g><g><title>regex_syntax::hir::literal::Extractor::union (1 samples, 0.35%)</title><rect x="65.1408%" y="565" width="0.3521%" height="15" fill="rgb(253,75,3)" fg:x="185" fg:w="1"/><text x="65.3908%" y="575.50"></text></g><g><title>regex_syntax::hir::literal::Seq::union (1 samples, 0.35%)</title><rect x="65.1408%" y="549" width="0.3521%" height="15" fill="rgb(226,117,51)" fg:x="185" fg:w="1"/><text x="65.3908%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.35%)</title><rect x="65.1408%" y="533" width="0.3521%" height="15" fill="rgb(205,186,49)" fg:x="185" fg:w="1"/><text x="65.3908%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.35%)</title><rect x="65.1408%" y="517" width="0.3521%" height="15" fill="rgb(232,211,42)" fg:x="185" fg:w="1"/><text x="65.3908%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;regex_automata::nfa::thompson::map::Utf8BoundedEntry&gt;&gt; (1 samples, 0.35%)</title><rect x="65.4930%" y="533" width="0.3521%" height="15" fill="rgb(209,15,40)" fg:x="186" fg:w="1"/><text x="65.7430%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.35%)</title><rect x="65.4930%" y="517" width="0.3521%" height="15" fill="rgb(213,128,22)" fg:x="186" fg:w="1"/><text x="65.7430%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.35%)</title><rect x="65.4930%" y="501" width="0.3521%" height="15" fill="rgb(238,77,31)" fg:x="186" fg:w="1"/><text x="65.7430%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.35%)</title><rect x="65.4930%" y="485" width="0.3521%" height="15" fill="rgb(227,15,28)" fg:x="186" fg:w="1"/><text x="65.7430%" y="495.50"></text></g><g><title>__GI___libc_free (1 samples, 0.35%)</title><rect x="65.4930%" y="469" width="0.3521%" height="15" fill="rgb(247,8,17)" fg:x="186" fg:w="1"/><text x="65.7430%" y="479.50"></text></g><g><title>_int_free (1 samples, 0.35%)</title><rect x="65.4930%" y="453" width="0.3521%" height="15" fill="rgb(221,113,48)" fg:x="186" fg:w="1"/><text x="65.7430%" y="463.50"></text></g><g><title>malloc_consolidate (1 samples, 0.35%)</title><rect x="65.4930%" y="437" width="0.3521%" height="15" fill="rgb(228,194,39)" fg:x="186" fg:w="1"/><text x="65.7430%" y="447.50"></text></g><g><title>unlink_chunk (1 samples, 0.35%)</title><rect x="65.4930%" y="421" width="0.3521%" height="15" fill="rgb(223,20,30)" fg:x="186" fg:w="1"/><text x="65.7430%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;regex_automata::nfa::thompson::compiler::Utf8State&gt;&gt; (2 samples, 0.70%)</title><rect x="65.4930%" y="613" width="0.7042%" height="15" fill="rgb(247,24,16)" fg:x="186" fg:w="2"/><text x="65.7430%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;regex_automata::nfa::thompson::compiler::Utf8State&gt;&gt; (2 samples, 0.70%)</title><rect x="65.4930%" y="597" width="0.7042%" height="15" fill="rgb(239,113,24)" fg:x="186" fg:w="2"/><text x="65.7430%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::compiler::Utf8State&gt; (2 samples, 0.70%)</title><rect x="65.4930%" y="581" width="0.7042%" height="15" fill="rgb(250,143,15)" fg:x="186" fg:w="2"/><text x="65.7430%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::map::Utf8BoundedMap&gt; (2 samples, 0.70%)</title><rect x="65.4930%" y="565" width="0.7042%" height="15" fill="rgb(224,100,47)" fg:x="186" fg:w="2"/><text x="65.7430%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_automata::nfa::thompson::map::Utf8BoundedEntry&gt;&gt; (2 samples, 0.70%)</title><rect x="65.4930%" y="549" width="0.7042%" height="15" fill="rgb(219,69,19)" fg:x="186" fg:w="2"/><text x="65.7430%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.35%)</title><rect x="65.8451%" y="533" width="0.3521%" height="15" fill="rgb(249,14,2)" fg:x="187" fg:w="1"/><text x="66.0951%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[regex_automata::nfa::thompson::map::Utf8BoundedEntry]&gt; (1 samples, 0.35%)</title><rect x="65.8451%" y="517" width="0.3521%" height="15" fill="rgb(228,140,11)" fg:x="187" fg:w="1"/><text x="66.0951%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::map::Utf8BoundedEntry&gt; (1 samples, 0.35%)</title><rect x="65.8451%" y="501" width="0.3521%" height="15" fill="rgb(247,188,9)" fg:x="187" fg:w="1"/><text x="66.0951%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_automata::nfa::thompson::nfa::Transition&gt;&gt; (1 samples, 0.35%)</title><rect x="65.8451%" y="485" width="0.3521%" height="15" fill="rgb(207,29,6)" fg:x="187" fg:w="1"/><text x="66.0951%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;regex_automata::nfa::thompson::nfa::Transition&gt;&gt; (1 samples, 0.35%)</title><rect x="65.8451%" y="469" width="0.3521%" height="15" fill="rgb(228,146,49)" fg:x="187" fg:w="1"/><text x="66.0951%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.35%)</title><rect x="65.8451%" y="453" width="0.3521%" height="15" fill="rgb(213,128,22)" fg:x="187" fg:w="1"/><text x="66.0951%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.35%)</title><rect x="65.8451%" y="437" width="0.3521%" height="15" fill="rgb(253,185,17)" fg:x="187" fg:w="1"/><text x="66.0951%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;regex_automata::nfa::thompson::builder::State&gt;&gt; (2 samples, 0.70%)</title><rect x="66.1972%" y="549" width="0.7042%" height="15" fill="rgb(253,22,30)" fg:x="188" fg:w="2"/><text x="66.4472%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.70%)</title><rect x="66.1972%" y="533" width="0.7042%" height="15" fill="rgb(213,128,22)" fg:x="188" fg:w="2"/><text x="66.4472%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.70%)</title><rect x="66.1972%" y="517" width="0.7042%" height="15" fill="rgb(238,77,31)" fg:x="188" fg:w="2"/><text x="66.4472%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.70%)</title><rect x="66.1972%" y="501" width="0.7042%" height="15" fill="rgb(227,15,28)" fg:x="188" fg:w="2"/><text x="66.4472%" y="511.50"></text></g><g><title>__GI___libc_free (2 samples, 0.70%)</title><rect x="66.1972%" y="485" width="0.7042%" height="15" fill="rgb(247,8,17)" fg:x="188" fg:w="2"/><text x="66.4472%" y="495.50"></text></g><g><title>_int_free (2 samples, 0.70%)</title><rect x="66.1972%" y="469" width="0.7042%" height="15" fill="rgb(221,113,48)" fg:x="188" fg:w="2"/><text x="66.4472%" y="479.50"></text></g><g><title>malloc_consolidate (2 samples, 0.70%)</title><rect x="66.1972%" y="453" width="0.7042%" height="15" fill="rgb(228,194,39)" fg:x="188" fg:w="2"/><text x="66.4472%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::builder::State&gt; (1 samples, 0.35%)</title><rect x="66.9014%" y="517" width="0.3521%" height="15" fill="rgb(207,220,38)" fg:x="190" fg:w="1"/><text x="67.1514%" y="527.50"></text></g><g><title>__GI___libc_free (1 samples, 0.35%)</title><rect x="66.9014%" y="501" width="0.3521%" height="15" fill="rgb(247,8,17)" fg:x="190" fg:w="1"/><text x="67.1514%" y="511.50"></text></g><g><title>_int_free (1 samples, 0.35%)</title><rect x="66.9014%" y="485" width="0.3521%" height="15" fill="rgb(221,113,48)" fg:x="190" fg:w="1"/><text x="67.1514%" y="495.50"></text></g><g><title>regex_automata::meta::strategy::Core::new (6 samples, 2.11%)</title><rect x="65.4930%" y="645" width="2.1127%" height="15" fill="rgb(222,69,27)" fg:x="186" fg:w="6"/><text x="65.7430%" y="655.50">r..</text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::compiler::Compiler&gt; (6 samples, 2.11%)</title><rect x="65.4930%" y="629" width="2.1127%" height="15" fill="rgb(213,189,36)" fg:x="186" fg:w="6"/><text x="65.7430%" y="639.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;regex_automata::nfa::thompson::builder::Builder&gt;&gt; (4 samples, 1.41%)</title><rect x="66.1972%" y="613" width="1.4085%" height="15" fill="rgb(234,58,54)" fg:x="188" fg:w="4"/><text x="66.4472%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;regex_automata::nfa::thompson::builder::Builder&gt;&gt; (4 samples, 1.41%)</title><rect x="66.1972%" y="597" width="1.4085%" height="15" fill="rgb(211,168,54)" fg:x="188" fg:w="4"/><text x="66.4472%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::builder::Builder&gt; (4 samples, 1.41%)</title><rect x="66.1972%" y="581" width="1.4085%" height="15" fill="rgb(236,9,46)" fg:x="188" fg:w="4"/><text x="66.4472%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_automata::nfa::thompson::builder::State&gt;&gt; (4 samples, 1.41%)</title><rect x="66.1972%" y="565" width="1.4085%" height="15" fill="rgb(209,117,28)" fg:x="188" fg:w="4"/><text x="66.4472%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.70%)</title><rect x="66.9014%" y="549" width="0.7042%" height="15" fill="rgb(249,14,2)" fg:x="190" fg:w="2"/><text x="67.1514%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;[regex_automata::nfa::thompson::builder::State]&gt; (2 samples, 0.70%)</title><rect x="66.9014%" y="533" width="0.7042%" height="15" fill="rgb(227,197,38)" fg:x="190" fg:w="2"/><text x="67.1514%" y="543.50"></text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::process_stage1_blockzero_analysis (13 samples, 4.58%)</title><rect x="63.3803%" y="997" width="4.5775%" height="15" fill="rgb(214,107,3)" fg:x="180" fg:w="13"/><text x="63.6303%" y="1007.50">s4lib..</text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::blockzero_analysis (13 samples, 4.58%)</title><rect x="63.3803%" y="981" width="4.5775%" height="15" fill="rgb(228,176,28)" fg:x="180" fg:w="13"/><text x="63.6303%" y="991.50">s4lib..</text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::blockzero_analysis_syslines (13 samples, 4.58%)</title><rect x="63.3803%" y="965" width="4.5775%" height="15" fill="rgb(208,15,47)" fg:x="180" fg:w="13"/><text x="63.6303%" y="975.50">s4lib..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_sysline_in_block (13 samples, 4.58%)</title><rect x="63.3803%" y="949" width="4.5775%" height="15" fill="rgb(243,65,52)" fg:x="180" fg:w="13"/><text x="63.6303%" y="959.50">s4lib..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_sysline_in_block_year (13 samples, 4.58%)</title><rect x="63.3803%" y="933" width="4.5775%" height="15" fill="rgb(253,177,51)" fg:x="180" fg:w="13"/><text x="63.6303%" y="943.50">s4lib..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::parse_datetime_in_line_cached (13 samples, 4.58%)</title><rect x="63.3803%" y="917" width="4.5775%" height="15" fill="rgb(231,75,50)" fg:x="180" fg:w="13"/><text x="63.6303%" y="927.50">s4lib..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::parse_datetime_in_line (13 samples, 4.58%)</title><rect x="63.3803%" y="901" width="4.5775%" height="15" fill="rgb(234,54,15)" fg:x="180" fg:w="13"/><text x="63.6303%" y="911.50">s4lib..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::find_datetime_in_line (13 samples, 4.58%)</title><rect x="63.3803%" y="885" width="4.5775%" height="15" fill="rgb(212,53,9)" fg:x="180" fg:w="13"/><text x="63.6303%" y="895.50">s4lib..</text></g><g><title>s4lib::data::datetime::bytes_to_regex_to_datetime (13 samples, 4.58%)</title><rect x="63.3803%" y="869" width="4.5775%" height="15" fill="rgb(252,84,36)" fg:x="180" fg:w="13"/><text x="63.6303%" y="879.50">s4lib..</text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (13 samples, 4.58%)</title><rect x="63.3803%" y="853" width="4.5775%" height="15" fill="rgb(223,143,22)" fg:x="180" fg:w="13"/><text x="63.6303%" y="863.50">once_..</text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (13 samples, 4.58%)</title><rect x="63.3803%" y="837" width="4.5775%" height="15" fill="rgb(216,218,52)" fg:x="180" fg:w="13"/><text x="63.6303%" y="847.50">once_..</text></g><g><title>once_cell::imp::initialize_or_wait (13 samples, 4.58%)</title><rect x="63.3803%" y="821" width="4.5775%" height="15" fill="rgb(247,128,5)" fg:x="180" fg:w="13"/><text x="63.6303%" y="831.50">once_..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (13 samples, 4.58%)</title><rect x="63.3803%" y="805" width="4.5775%" height="15" fill="rgb(225,224,16)" fg:x="180" fg:w="13"/><text x="63.6303%" y="815.50">core:..</text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (13 samples, 4.58%)</title><rect x="63.3803%" y="789" width="4.5775%" height="15" fill="rgb(237,110,11)" fg:x="180" fg:w="13"/><text x="63.6303%" y="799.50">once_..</text></g><g><title>s4lib::data::datetime::bytes_to_regex_to_datetime::{{closure}} (13 samples, 4.58%)</title><rect x="63.3803%" y="773" width="4.5775%" height="15" fill="rgb(231,98,11)" fg:x="180" fg:w="13"/><text x="63.6303%" y="783.50">s4lib..</text></g><g><title>regex::regex::bytes::Regex::new (13 samples, 4.58%)</title><rect x="63.3803%" y="757" width="4.5775%" height="15" fill="rgb(246,224,25)" fg:x="180" fg:w="13"/><text x="63.6303%" y="767.50">regex..</text></g><g><title>regex::builders::bytes::RegexBuilder::build (13 samples, 4.58%)</title><rect x="63.3803%" y="741" width="4.5775%" height="15" fill="rgb(236,76,51)" fg:x="180" fg:w="13"/><text x="63.6303%" y="751.50">regex..</text></g><g><title>regex::builders::Builder::build_one_bytes (13 samples, 4.58%)</title><rect x="63.3803%" y="725" width="4.5775%" height="15" fill="rgb(233,102,7)" fg:x="180" fg:w="13"/><text x="63.6303%" y="735.50">regex..</text></g><g><title>regex_automata::meta::regex::Builder::build (13 samples, 4.58%)</title><rect x="63.3803%" y="709" width="4.5775%" height="15" fill="rgb(212,33,22)" fg:x="180" fg:w="13"/><text x="63.6303%" y="719.50">regex..</text></g><g><title>regex_automata::meta::regex::Builder::build_many (13 samples, 4.58%)</title><rect x="63.3803%" y="693" width="4.5775%" height="15" fill="rgb(236,25,32)" fg:x="180" fg:w="13"/><text x="63.6303%" y="703.50">regex..</text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (13 samples, 4.58%)</title><rect x="63.3803%" y="677" width="4.5775%" height="15" fill="rgb(250,142,30)" fg:x="180" fg:w="13"/><text x="63.6303%" y="687.50">regex..</text></g><g><title>regex_automata::meta::strategy::new (13 samples, 4.58%)</title><rect x="63.3803%" y="661" width="4.5775%" height="15" fill="rgb(243,171,22)" fg:x="180" fg:w="13"/><text x="63.6303%" y="671.50">regex..</text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (1 samples, 0.35%)</title><rect x="67.6056%" y="645" width="0.3521%" height="15" fill="rgb(221,10,3)" fg:x="192" fg:w="1"/><text x="67.8556%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.35%)</title><rect x="67.6056%" y="629" width="0.3521%" height="15" fill="rgb(209,114,30)" fg:x="192" fg:w="1"/><text x="67.8556%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.35%)</title><rect x="67.6056%" y="613" width="0.3521%" height="15" fill="rgb(248,129,10)" fg:x="192" fg:w="1"/><text x="67.8556%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.35%)</title><rect x="67.6056%" y="597" width="0.3521%" height="15" fill="rgb(231,114,21)" fg:x="192" fg:w="1"/><text x="67.8556%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.35%)</title><rect x="67.6056%" y="581" width="0.3521%" height="15" fill="rgb(238,209,2)" fg:x="192" fg:w="1"/><text x="67.8556%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.35%)</title><rect x="67.6056%" y="565" width="0.3521%" height="15" fill="rgb(253,135,41)" fg:x="192" fg:w="1"/><text x="67.8556%" y="575.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.35%)</title><rect x="67.6056%" y="549" width="0.3521%" height="15" fill="rgb(206,112,53)" fg:x="192" fg:w="1"/><text x="67.8556%" y="559.50"></text></g><g><title>_int_malloc (1 samples, 0.35%)</title><rect x="67.6056%" y="533" width="0.3521%" height="15" fill="rgb(222,219,51)" fg:x="192" fg:w="1"/><text x="67.8556%" y="543.50"></text></g><g><title>malloc_consolidate (1 samples, 0.35%)</title><rect x="67.6056%" y="517" width="0.3521%" height="15" fill="rgb(228,194,39)" fg:x="192" fg:w="1"/><text x="67.8556%" y="527.50"></text></g><g><title>unlink_chunk (1 samples, 0.35%)</title><rect x="67.6056%" y="501" width="0.3521%" height="15" fill="rgb(223,20,30)" fg:x="192" fg:w="1"/><text x="67.8556%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="67.9577%" y="773" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="193" fg:w="1"/><text x="68.2077%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="67.9577%" y="757" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="193" fg:w="1"/><text x="68.2077%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="67.9577%" y="741" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="193" fg:w="1"/><text x="68.2077%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="67.9577%" y="725" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="193" fg:w="1"/><text x="68.2077%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="67.9577%" y="709" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="193" fg:w="1"/><text x="68.2077%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="67.9577%" y="693" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="193" fg:w="1"/><text x="68.2077%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="67.9577%" y="677" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="193" fg:w="1"/><text x="68.2077%" y="687.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (3 samples, 1.06%)</title><rect x="67.9577%" y="885" width="1.0563%" height="15" fill="rgb(231,96,28)" fg:x="193" fg:w="3"/><text x="68.2077%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 1.06%)</title><rect x="67.9577%" y="869" width="1.0563%" height="15" fill="rgb(243,52,34)" fg:x="193" fg:w="3"/><text x="68.2077%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 1.06%)</title><rect x="67.9577%" y="853" width="1.0563%" height="15" fill="rgb(224,207,30)" fg:x="193" fg:w="3"/><text x="68.2077%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 1.06%)</title><rect x="67.9577%" y="837" width="1.0563%" height="15" fill="rgb(251,49,54)" fg:x="193" fg:w="3"/><text x="68.2077%" y="847.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 1.06%)</title><rect x="67.9577%" y="821" width="1.0563%" height="15" fill="rgb(214,20,35)" fg:x="193" fg:w="3"/><text x="68.2077%" y="831.50"></text></g><g><title>__memmove_avx512_unaligned_erms (3 samples, 1.06%)</title><rect x="67.9577%" y="805" width="1.0563%" height="15" fill="rgb(217,126,36)" fg:x="193" fg:w="3"/><text x="68.2077%" y="815.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 1.06%)</title><rect x="67.9577%" y="789" width="1.0563%" height="15" fill="rgb(210,204,4)" fg:x="193" fg:w="3"/><text x="68.2077%" y="799.50"></text></g><g><title>crc::crc64::&lt;impl crc::Crc&lt;u64&gt;&gt;::table_entry (6 samples, 2.11%)</title><rect x="69.0141%" y="837" width="2.1127%" height="15" fill="rgb(252,12,4)" fg:x="196" fg:w="6"/><text x="69.2641%" y="847.50">c..</text></g><g><title>lzma_rs::decode::xz::validate_block_check (18 samples, 6.34%)</title><rect x="69.0141%" y="885" width="6.3380%" height="15" fill="rgb(250,224,34)" fg:x="196" fg:w="18"/><text x="69.2641%" y="895.50">lzma_rs:..</text></g><g><title>crc::crc64::&lt;impl crc::Crc&lt;u64&gt;&gt;::checksum (18 samples, 6.34%)</title><rect x="69.0141%" y="869" width="6.3380%" height="15" fill="rgb(221,6,1)" fg:x="196" fg:w="18"/><text x="69.2641%" y="879.50">crc::crc..</text></g><g><title>crc::crc64::&lt;impl crc::Crc&lt;u64&gt;&gt;::update (18 samples, 6.34%)</title><rect x="69.0141%" y="853" width="6.3380%" height="15" fill="rgb(240,176,23)" fg:x="196" fg:w="18"/><text x="69.2641%" y="863.50">crc::crc..</text></g><g><title>lzma_rs::decode::rangecoder::RangeDecoder&lt;R&gt;::decode_bit (1 samples, 0.35%)</title><rect x="75.3521%" y="757" width="0.3521%" height="15" fill="rgb(252,202,43)" fg:x="214" fg:w="1"/><text x="75.6021%" y="767.50"></text></g><g><title>lzma_rs::decode::rangecoder::RangeDecoder&lt;R&gt;::normalize (1 samples, 0.35%)</title><rect x="75.3521%" y="741" width="0.3521%" height="15" fill="rgb(244,177,8)" fg:x="214" fg:w="1"/><text x="75.6021%" y="751.50"></text></g><g><title>lzma_rs::decode::rangecoder::LenDecoder::decode (2 samples, 0.70%)</title><rect x="75.3521%" y="773" width="0.7042%" height="15" fill="rgb(212,65,0)" fg:x="214" fg:w="2"/><text x="75.6021%" y="783.50"></text></g><g><title>lzma_rs::decode::rangecoder::BitTree::parse (1 samples, 0.35%)</title><rect x="75.7042%" y="757" width="0.3521%" height="15" fill="rgb(247,34,47)" fg:x="215" fg:w="1"/><text x="75.9542%" y="767.50"></text></g><g><title>lzma_rs::decode::rangecoder::RangeDecoder&lt;R&gt;::parse_bit_tree (1 samples, 0.35%)</title><rect x="75.7042%" y="741" width="0.3521%" height="15" fill="rgb(213,76,29)" fg:x="215" fg:w="1"/><text x="75.9542%" y="751.50"></text></g><g><title>lzma_rs::decode::rangecoder::RangeDecoder&lt;R&gt;::decode_bit (1 samples, 0.35%)</title><rect x="75.7042%" y="725" width="0.3521%" height="15" fill="rgb(252,202,43)" fg:x="215" fg:w="1"/><text x="75.9542%" y="735.50"></text></g><g><title>lzma_rs::decode::rangecoder::BitTree::parse_reverse (1 samples, 0.35%)</title><rect x="76.0563%" y="757" width="0.3521%" height="15" fill="rgb(233,45,10)" fg:x="216" fg:w="1"/><text x="76.3063%" y="767.50"></text></g><g><title>lzma_rs::decode::rangecoder::RangeDecoder&lt;R&gt;::parse_reverse_bit_tree (1 samples, 0.35%)</title><rect x="76.0563%" y="741" width="0.3521%" height="15" fill="rgb(231,45,1)" fg:x="216" fg:w="1"/><text x="76.3063%" y="751.50"></text></g><g><title>lzma_rs::decode::lzma::DecoderState::decode_distance (3 samples, 1.06%)</title><rect x="76.0563%" y="773" width="1.0563%" height="15" fill="rgb(235,190,43)" fg:x="216" fg:w="3"/><text x="76.3063%" y="783.50"></text></g><g><title>lzma_rs::decode::rangecoder::BitTree::parse (2 samples, 0.70%)</title><rect x="76.4085%" y="757" width="0.7042%" height="15" fill="rgb(247,34,47)" fg:x="217" fg:w="2"/><text x="76.6585%" y="767.50"></text></g><g><title>lzma_rs::decode::rangecoder::RangeDecoder&lt;R&gt;::parse_bit_tree (2 samples, 0.70%)</title><rect x="76.4085%" y="741" width="0.7042%" height="15" fill="rgb(213,76,29)" fg:x="217" fg:w="2"/><text x="76.6585%" y="751.50"></text></g><g><title>lzma_rs::decode::rangecoder::RangeDecoder&lt;R&gt;::decode_bit (2 samples, 0.70%)</title><rect x="76.4085%" y="725" width="0.7042%" height="15" fill="rgb(252,202,43)" fg:x="217" fg:w="2"/><text x="76.6585%" y="735.50"></text></g><g><title>lzma_rs::decode::rangecoder::RangeDecoder&lt;R&gt;::normalize (2 samples, 0.70%)</title><rect x="76.4085%" y="709" width="0.7042%" height="15" fill="rgb(244,177,8)" fg:x="217" fg:w="2"/><text x="76.6585%" y="719.50"></text></g><g><title>byteorder::io::ReadBytesExt::read_u8 (2 samples, 0.70%)</title><rect x="76.4085%" y="693" width="0.7042%" height="15" fill="rgb(232,209,0)" fg:x="217" fg:w="2"/><text x="76.6585%" y="703.50"></text></g><g><title>std::io::Read::read_exact (2 samples, 0.70%)</title><rect x="76.4085%" y="677" width="0.7042%" height="15" fill="rgb(232,110,35)" fg:x="217" fg:w="2"/><text x="76.6585%" y="687.50"></text></g><g><title>std::io::default_read_exact (2 samples, 0.70%)</title><rect x="76.4085%" y="661" width="0.7042%" height="15" fill="rgb(223,139,4)" fg:x="217" fg:w="2"/><text x="76.6585%" y="671.50"></text></g><g><title>&lt;std::io::Take&lt;T&gt; as std::io::Read&gt;::read (2 samples, 0.70%)</title><rect x="76.4085%" y="645" width="0.7042%" height="15" fill="rgb(206,103,18)" fg:x="217" fg:w="2"/><text x="76.6585%" y="655.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read (2 samples, 0.70%)</title><rect x="76.4085%" y="629" width="0.7042%" height="15" fill="rgb(241,185,29)" fg:x="217" fg:w="2"/><text x="76.6585%" y="639.50"></text></g><g><title>&lt;lzma_rs::decode::util::CountBufRead&lt;R&gt; as std::io::Read&gt;::read (2 samples, 0.70%)</title><rect x="76.4085%" y="613" width="0.7042%" height="15" fill="rgb(247,211,52)" fg:x="217" fg:w="2"/><text x="76.6585%" y="623.50"></text></g><g><title>&lt;lzma_rs::decode::util::CountBufRead&lt;R&gt; as std::io::Read&gt;::read (2 samples, 0.70%)</title><rect x="76.4085%" y="597" width="0.7042%" height="15" fill="rgb(247,211,52)" fg:x="217" fg:w="2"/><text x="76.6585%" y="607.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (2 samples, 0.70%)</title><rect x="76.4085%" y="581" width="0.7042%" height="15" fill="rgb(248,29,38)" fg:x="217" fg:w="2"/><text x="76.6585%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 1.41%)</title><rect x="77.1127%" y="645" width="1.4085%" height="15" fill="rgb(210,204,4)" fg:x="219" fg:w="4"/><text x="77.3627%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 1.41%)</title><rect x="77.1127%" y="629" width="1.4085%" height="15" fill="rgb(210,204,4)" fg:x="219" fg:w="4"/><text x="77.3627%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 1.41%)</title><rect x="77.1127%" y="613" width="1.4085%" height="15" fill="rgb(210,204,4)" fg:x="219" fg:w="4"/><text x="77.3627%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 1.41%)</title><rect x="77.1127%" y="597" width="1.4085%" height="15" fill="rgb(210,204,4)" fg:x="219" fg:w="4"/><text x="77.3627%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 1.76%)</title><rect x="77.1127%" y="757" width="1.7606%" height="15" fill="rgb(241,229,15)" fg:x="219" fg:w="5"/><text x="77.3627%" y="767.50"></text></g><g><title>core::ptr::write (5 samples, 1.76%)</title><rect x="77.1127%" y="741" width="1.7606%" height="15" fill="rgb(209,143,44)" fg:x="219" fg:w="5"/><text x="77.3627%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 1.76%)</title><rect x="77.1127%" y="725" width="1.7606%" height="15" fill="rgb(210,204,4)" fg:x="219" fg:w="5"/><text x="77.3627%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 1.76%)</title><rect x="77.1127%" y="709" width="1.7606%" height="15" fill="rgb(210,204,4)" fg:x="219" fg:w="5"/><text x="77.3627%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 1.76%)</title><rect x="77.1127%" y="693" width="1.7606%" height="15" fill="rgb(210,204,4)" fg:x="219" fg:w="5"/><text x="77.3627%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 1.76%)</title><rect x="77.1127%" y="677" width="1.7606%" height="15" fill="rgb(210,204,4)" fg:x="219" fg:w="5"/><text x="77.3627%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 1.76%)</title><rect x="77.1127%" y="661" width="1.7606%" height="15" fill="rgb(210,204,4)" fg:x="219" fg:w="5"/><text x="77.3627%" y="671.50"></text></g><g><title>lzma_rs::decode::lzma::DecoderState::process_next (12 samples, 4.23%)</title><rect x="75.3521%" y="805" width="4.2254%" height="15" fill="rgb(227,197,53)" fg:x="214" fg:w="12"/><text x="75.6021%" y="815.50">lzma_..</text></g><g><title>lzma_rs::decode::lzma::DecoderState::process_next_inner (12 samples, 4.23%)</title><rect x="75.3521%" y="789" width="4.2254%" height="15" fill="rgb(233,124,28)" fg:x="214" fg:w="12"/><text x="75.6021%" y="799.50">lzma_..</text></g><g><title>&lt;lzma_rs::decode::lzbuffer::LzAccumBuffer&lt;W&gt; as lzma_rs::decode::lzbuffer::LzBuffer&lt;W&gt;&gt;::append_lz (7 samples, 2.46%)</title><rect x="77.1127%" y="773" width="2.4648%" height="15" fill="rgb(245,174,38)" fg:x="219" fg:w="7"/><text x="77.3627%" y="783.50">&lt;l..</text></g><g><title>lzma_rs::decode::lzma2::Lzma2Decoder::parse_lzma (13 samples, 4.58%)</title><rect x="75.3521%" y="853" width="4.5775%" height="15" fill="rgb(232,23,40)" fg:x="214" fg:w="13"/><text x="75.6021%" y="863.50">lzma_..</text></g><g><title>lzma_rs::decode::lzma::DecoderState::process (13 samples, 4.58%)</title><rect x="75.3521%" y="837" width="4.5775%" height="15" fill="rgb(212,205,4)" fg:x="214" fg:w="13"/><text x="75.6021%" y="847.50">lzma_..</text></g><g><title>lzma_rs::decode::lzma::DecoderState::process_mode (13 samples, 4.58%)</title><rect x="75.3521%" y="821" width="4.5775%" height="15" fill="rgb(237,97,11)" fg:x="214" fg:w="13"/><text x="75.6021%" y="831.50">lzma_..</text></g><g><title>&lt;std::io::Take&lt;T&gt; as std::io::BufRead&gt;::fill_buf (1 samples, 0.35%)</title><rect x="79.5775%" y="805" width="0.3521%" height="15" fill="rgb(212,32,29)" fg:x="226" fg:w="1"/><text x="79.8275%" y="815.50"></text></g><g><title>std::io::impls::&lt;impl std::io::BufRead for &amp;mut B&gt;::fill_buf (1 samples, 0.35%)</title><rect x="79.5775%" y="789" width="0.3521%" height="15" fill="rgb(206,102,5)" fg:x="226" fg:w="1"/><text x="79.8275%" y="799.50"></text></g><g><title>&lt;lzma_rs::decode::util::CountBufRead&lt;R&gt; as std::io::BufRead&gt;::fill_buf (1 samples, 0.35%)</title><rect x="79.5775%" y="773" width="0.3521%" height="15" fill="rgb(228,194,24)" fg:x="226" fg:w="1"/><text x="79.8275%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.70%)</title><rect x="79.9296%" y="677" width="0.7042%" height="15" fill="rgb(210,204,4)" fg:x="227" fg:w="2"/><text x="80.1796%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.70%)</title><rect x="79.9296%" y="661" width="0.7042%" height="15" fill="rgb(210,204,4)" fg:x="227" fg:w="2"/><text x="80.1796%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.70%)</title><rect x="79.9296%" y="645" width="0.7042%" height="15" fill="rgb(210,204,4)" fg:x="227" fg:w="2"/><text x="80.1796%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.70%)</title><rect x="79.9296%" y="629" width="0.7042%" height="15" fill="rgb(210,204,4)" fg:x="227" fg:w="2"/><text x="80.1796%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.70%)</title><rect x="79.9296%" y="613" width="0.7042%" height="15" fill="rgb(210,204,4)" fg:x="227" fg:w="2"/><text x="80.1796%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.70%)</title><rect x="79.9296%" y="597" width="0.7042%" height="15" fill="rgb(210,204,4)" fg:x="227" fg:w="2"/><text x="80.1796%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 1.06%)</title><rect x="79.9296%" y="725" width="1.0563%" height="15" fill="rgb(210,204,4)" fg:x="227" fg:w="3"/><text x="80.1796%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 1.06%)</title><rect x="79.9296%" y="709" width="1.0563%" height="15" fill="rgb(210,204,4)" fg:x="227" fg:w="3"/><text x="80.1796%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 1.06%)</title><rect x="79.9296%" y="693" width="1.0563%" height="15" fill="rgb(210,204,4)" fg:x="227" fg:w="3"/><text x="80.1796%" y="703.50"></text></g><g><title>lzma_rs::xz_decompress (38 samples, 13.38%)</title><rect x="67.9577%" y="933" width="13.3803%" height="15" fill="rgb(219,30,48)" fg:x="193" fg:w="38"/><text x="68.2077%" y="943.50">lzma_rs::xz_decompre..</text></g><g><title>lzma_rs::decode::xz::decode_stream (38 samples, 13.38%)</title><rect x="67.9577%" y="917" width="13.3803%" height="15" fill="rgb(229,135,23)" fg:x="193" fg:w="38"/><text x="68.2077%" y="927.50">lzma_rs::decode::xz:..</text></g><g><title>lzma_rs::decode::xz::read_block (38 samples, 13.38%)</title><rect x="67.9577%" y="901" width="13.3803%" height="15" fill="rgb(206,79,15)" fg:x="193" fg:w="38"/><text x="68.2077%" y="911.50">lzma_rs::decode::xz:..</text></g><g><title>lzma_rs::decode::xz::decode_filter (17 samples, 5.99%)</title><rect x="75.3521%" y="885" width="5.9859%" height="15" fill="rgb(207,132,32)" fg:x="214" fg:w="17"/><text x="75.6021%" y="895.50">lzma_rs:..</text></g><g><title>lzma_rs::decode::lzma2::Lzma2Decoder::decompress (17 samples, 5.99%)</title><rect x="75.3521%" y="869" width="5.9859%" height="15" fill="rgb(208,195,50)" fg:x="214" fg:w="17"/><text x="75.6021%" y="879.50">lzma_rs:..</text></g><g><title>&lt;lzma_rs::decode::lzbuffer::LzAccumBuffer&lt;W&gt; as lzma_rs::decode::lzbuffer::LzBuffer&lt;W&gt;&gt;::finish (4 samples, 1.41%)</title><rect x="79.9296%" y="853" width="1.4085%" height="15" fill="rgb(212,115,20)" fg:x="227" fg:w="4"/><text x="80.1796%" y="863.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (4 samples, 1.41%)</title><rect x="79.9296%" y="837" width="1.4085%" height="15" fill="rgb(230,53,11)" fg:x="227" fg:w="4"/><text x="80.1796%" y="847.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (4 samples, 1.41%)</title><rect x="79.9296%" y="821" width="1.4085%" height="15" fill="rgb(231,96,28)" fg:x="227" fg:w="4"/><text x="80.1796%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4 samples, 1.41%)</title><rect x="79.9296%" y="805" width="1.4085%" height="15" fill="rgb(243,52,34)" fg:x="227" fg:w="4"/><text x="80.1796%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 1.41%)</title><rect x="79.9296%" y="789" width="1.4085%" height="15" fill="rgb(224,207,30)" fg:x="227" fg:w="4"/><text x="80.1796%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 1.41%)</title><rect x="79.9296%" y="773" width="1.4085%" height="15" fill="rgb(251,49,54)" fg:x="227" fg:w="4"/><text x="80.1796%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 1.41%)</title><rect x="79.9296%" y="757" width="1.4085%" height="15" fill="rgb(214,20,35)" fg:x="227" fg:w="4"/><text x="80.1796%" y="767.50"></text></g><g><title>__memmove_avx512_unaligned_erms (4 samples, 1.41%)</title><rect x="79.9296%" y="741" width="1.4085%" height="15" fill="rgb(217,126,36)" fg:x="227" fg:w="4"/><text x="80.1796%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.35%)</title><rect x="81.3380%" y="933" width="0.3521%" height="15" fill="rgb(253,154,22)" fg:x="231" fg:w="1"/><text x="81.5880%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.35%)</title><rect x="81.3380%" y="917" width="0.3521%" height="15" fill="rgb(249,207,12)" fg:x="231" fg:w="1"/><text x="81.5880%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.35%)</title><rect x="81.3380%" y="901" width="0.3521%" height="15" fill="rgb(224,194,14)" fg:x="231" fg:w="1"/><text x="81.5880%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.35%)</title><rect x="81.3380%" y="885" width="0.3521%" height="15" fill="rgb(227,204,5)" fg:x="231" fg:w="1"/><text x="81.5880%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.35%)</title><rect x="81.3380%" y="869" width="0.3521%" height="15" fill="rgb(231,114,21)" fg:x="231" fg:w="1"/><text x="81.5880%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.35%)</title><rect x="81.3380%" y="853" width="0.3521%" height="15" fill="rgb(238,209,2)" fg:x="231" fg:w="1"/><text x="81.5880%" y="863.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.35%)</title><rect x="81.3380%" y="837" width="0.3521%" height="15" fill="rgb(253,135,41)" fg:x="231" fg:w="1"/><text x="81.5880%" y="847.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.35%)</title><rect x="81.3380%" y="821" width="0.3521%" height="15" fill="rgb(206,112,53)" fg:x="231" fg:w="1"/><text x="81.5880%" y="831.50"></text></g><g><title>_int_malloc (1 samples, 0.35%)</title><rect x="81.3380%" y="805" width="0.3521%" height="15" fill="rgb(222,219,51)" fg:x="231" fg:w="1"/><text x="81.5880%" y="815.50"></text></g><g><title>sysmalloc (1 samples, 0.35%)</title><rect x="81.3380%" y="789" width="0.3521%" height="15" fill="rgb(237,64,10)" fg:x="231" fg:w="1"/><text x="81.5880%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="81.6901%" y="853" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="232" fg:w="1"/><text x="81.9401%" y="863.50"></text></g><g><title>s4::exec_fileprocessor_thread (54 samples, 19.01%)</title><rect x="63.3803%" y="1029" width="19.0141%" height="15" fill="rgb(245,49,27)" fg:x="180" fg:w="54"/><text x="63.6303%" y="1039.50">s4::exec_fileprocessor_thread</text></g><g><title>s4::exec_syslogprocessor (54 samples, 19.01%)</title><rect x="63.3803%" y="1013" width="19.0141%" height="15" fill="rgb(229,116,34)" fg:x="180" fg:w="54"/><text x="63.6303%" y="1023.50">s4::exec_syslogprocessor</text></g><g><title>s4lib::readers::syslogprocessor::SyslogProcessor::new (41 samples, 14.44%)</title><rect x="67.9577%" y="997" width="14.4366%" height="15" fill="rgb(223,11,33)" fg:x="193" fg:w="41"/><text x="68.2077%" y="1007.50">s4lib::readers::syslog..</text></g><g><title>s4lib::readers::syslinereader::SyslineReader::new (41 samples, 14.44%)</title><rect x="67.9577%" y="981" width="14.4366%" height="15" fill="rgb(247,92,42)" fg:x="193" fg:w="41"/><text x="68.2077%" y="991.50">s4lib::readers::syslin..</text></g><g><title>s4lib::readers::linereader::LineReader::new (41 samples, 14.44%)</title><rect x="67.9577%" y="965" width="14.4366%" height="15" fill="rgb(243,188,25)" fg:x="193" fg:w="41"/><text x="68.2077%" y="975.50">s4lib::readers::linere..</text></g><g><title>s4lib::readers::blockreader::BlockReader::new (41 samples, 14.44%)</title><rect x="67.9577%" y="949" width="14.4366%" height="15" fill="rgb(233,2,13)" fg:x="193" fg:w="41"/><text x="68.2077%" y="959.50">s4lib::readers::blockr..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.70%)</title><rect x="81.6901%" y="933" width="0.7042%" height="15" fill="rgb(243,52,34)" fg:x="232" fg:w="2"/><text x="81.9401%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.70%)</title><rect x="81.6901%" y="917" width="0.7042%" height="15" fill="rgb(224,207,30)" fg:x="232" fg:w="2"/><text x="81.9401%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.70%)</title><rect x="81.6901%" y="901" width="0.7042%" height="15" fill="rgb(251,49,54)" fg:x="232" fg:w="2"/><text x="81.9401%" y="911.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.70%)</title><rect x="81.6901%" y="885" width="0.7042%" height="15" fill="rgb(214,20,35)" fg:x="232" fg:w="2"/><text x="81.9401%" y="895.50"></text></g><g><title>__memmove_avx512_unaligned_erms (2 samples, 0.70%)</title><rect x="81.6901%" y="869" width="0.7042%" height="15" fill="rgb(217,126,36)" fg:x="232" fg:w="2"/><text x="81.9401%" y="879.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Compiler::fill_failure_transitions (1 samples, 0.35%)</title><rect x="82.3944%" y="837" width="0.3521%" height="15" fill="rgb(242,200,7)" fg:x="234" fg:w="1"/><text x="82.6444%" y="847.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::NFA::next_link (1 samples, 0.35%)</title><rect x="82.3944%" y="821" width="0.3521%" height="15" fill="rgb(209,45,40)" fg:x="234" fg:w="1"/><text x="82.6444%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or (1 samples, 0.35%)</title><rect x="82.3944%" y="805" width="0.3521%" height="15" fill="rgb(246,82,18)" fg:x="234" fg:w="1"/><text x="82.6444%" y="815.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Compiler::densify (1 samples, 0.35%)</title><rect x="82.7465%" y="837" width="0.3521%" height="15" fill="rgb(238,72,18)" fg:x="235" fg:w="1"/><text x="82.9965%" y="847.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::NFA::alloc_dense_state (1 samples, 0.35%)</title><rect x="82.7465%" y="821" width="0.3521%" height="15" fill="rgb(219,82,1)" fg:x="235" fg:w="1"/><text x="82.9965%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.35%)</title><rect x="82.7465%" y="805" width="0.3521%" height="15" fill="rgb(205,186,49)" fg:x="235" fg:w="1"/><text x="82.9965%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.35%)</title><rect x="82.7465%" y="789" width="0.3521%" height="15" fill="rgb(232,211,42)" fg:x="235" fg:w="1"/><text x="82.9965%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.35%)</title><rect x="82.7465%" y="773" width="0.3521%" height="15" fill="rgb(214,146,48)" fg:x="235" fg:w="1"/><text x="82.9965%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.35%)</title><rect x="82.7465%" y="757" width="0.3521%" height="15" fill="rgb(212,159,3)" fg:x="235" fg:w="1"/><text x="82.9965%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.35%)</title><rect x="82.7465%" y="741" width="0.3521%" height="15" fill="rgb(231,142,39)" fg:x="235" fg:w="1"/><text x="82.9965%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.35%)</title><rect x="82.7465%" y="725" width="0.3521%" height="15" fill="rgb(249,2,22)" fg:x="235" fg:w="1"/><text x="82.9965%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.35%)</title><rect x="82.7465%" y="709" width="0.3521%" height="15" fill="rgb(254,53,35)" fg:x="235" fg:w="1"/><text x="82.9965%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.35%)</title><rect x="82.7465%" y="693" width="0.3521%" height="15" fill="rgb(237,133,22)" fg:x="235" fg:w="1"/><text x="82.9965%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.35%)</title><rect x="82.7465%" y="677" width="0.3521%" height="15" fill="rgb(237,156,49)" fg:x="235" fg:w="1"/><text x="82.9965%" y="687.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.35%)</title><rect x="82.7465%" y="661" width="0.3521%" height="15" fill="rgb(214,150,36)" fg:x="235" fg:w="1"/><text x="82.9965%" y="671.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.35%)</title><rect x="82.7465%" y="645" width="0.3521%" height="15" fill="rgb(254,47,34)" fg:x="235" fg:w="1"/><text x="82.9965%" y="655.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.35%)</title><rect x="82.7465%" y="629" width="0.3521%" height="15" fill="rgb(254,73,4)" fg:x="235" fg:w="1"/><text x="82.9965%" y="639.50"></text></g><g><title>_int_realloc (1 samples, 0.35%)</title><rect x="82.7465%" y="613" width="0.3521%" height="15" fill="rgb(231,75,41)" fg:x="235" fg:w="1"/><text x="82.9965%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="82.7465%" y="597" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="235" fg:w="1"/><text x="82.9965%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="82.7465%" y="581" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="235" fg:w="1"/><text x="82.9965%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="82.7465%" y="565" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="235" fg:w="1"/><text x="82.9965%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="82.7465%" y="549" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="235" fg:w="1"/><text x="82.9965%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="82.7465%" y="533" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="235" fg:w="1"/><text x="82.9965%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="82.7465%" y="517" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="235" fg:w="1"/><text x="82.9965%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="82.7465%" y="501" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="235" fg:w="1"/><text x="82.9965%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="82.7465%" y="485" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="235" fg:w="1"/><text x="82.9965%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="82.7465%" y="469" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="235" fg:w="1"/><text x="82.9965%" y="479.50"></text></g><g><title>regex_automata::util::prefilter::teddy::Teddy::new (3 samples, 1.06%)</title><rect x="82.3944%" y="901" width="1.0563%" height="15" fill="rgb(207,155,0)" fg:x="234" fg:w="3"/><text x="82.6444%" y="911.50"></text></g><g><title>aho_corasick::dfa::Builder::build (3 samples, 1.06%)</title><rect x="82.3944%" y="885" width="1.0563%" height="15" fill="rgb(212,91,25)" fg:x="234" fg:w="3"/><text x="82.6444%" y="895.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Builder::build (3 samples, 1.06%)</title><rect x="82.3944%" y="869" width="1.0563%" height="15" fill="rgb(235,33,22)" fg:x="234" fg:w="3"/><text x="82.6444%" y="879.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Compiler::compile (3 samples, 1.06%)</title><rect x="82.3944%" y="853" width="1.0563%" height="15" fill="rgb(253,203,15)" fg:x="234" fg:w="3"/><text x="82.6444%" y="863.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Compiler::build_trie (1 samples, 0.35%)</title><rect x="83.0986%" y="837" width="0.3521%" height="15" fill="rgb(206,127,45)" fg:x="236" fg:w="1"/><text x="83.3486%" y="847.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::NFA::add_transition (1 samples, 0.35%)</title><rect x="83.0986%" y="821" width="0.3521%" height="15" fill="rgb(213,191,43)" fg:x="236" fg:w="1"/><text x="83.3486%" y="831.50"></text></g><g><title>aho_corasick::util::primitives::&lt;impl core::ops::index::Index&lt;aho_corasick::util::primitives::StateID&gt; for alloc::vec::Vec&lt;T&gt;&gt;::index (1 samples, 0.35%)</title><rect x="83.0986%" y="805" width="0.3521%" height="15" fill="rgb(245,127,36)" fg:x="236" fg:w="1"/><text x="83.3486%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.35%)</title><rect x="83.0986%" y="789" width="0.3521%" height="15" fill="rgb(215,149,39)" fg:x="236" fg:w="1"/><text x="83.3486%" y="799.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.35%)</title><rect x="83.0986%" y="773" width="0.3521%" height="15" fill="rgb(250,51,46)" fg:x="236" fg:w="1"/><text x="83.3486%" y="783.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.35%)</title><rect x="83.0986%" y="757" width="0.3521%" height="15" fill="rgb(254,116,45)" fg:x="236" fg:w="1"/><text x="83.3486%" y="767.50"></text></g><g><title>regex_automata::meta::strategy::new (4 samples, 1.41%)</title><rect x="82.3944%" y="1029" width="1.4085%" height="15" fill="rgb(243,171,22)" fg:x="234" fg:w="4"/><text x="82.6444%" y="1039.50"></text></g><g><title>regex_automata::meta::strategy::ReverseInner::new (4 samples, 1.41%)</title><rect x="82.3944%" y="1013" width="1.4085%" height="15" fill="rgb(225,146,32)" fg:x="234" fg:w="4"/><text x="82.6444%" y="1023.50"></text></g><g><title>regex_automata::meta::reverse_inner::extract (4 samples, 1.41%)</title><rect x="82.3944%" y="997" width="1.4085%" height="15" fill="rgb(209,78,45)" fg:x="234" fg:w="4"/><text x="82.6444%" y="1007.50"></text></g><g><title>regex_automata::meta::reverse_inner::prefilter (4 samples, 1.41%)</title><rect x="82.3944%" y="981" width="1.4085%" height="15" fill="rgb(221,50,42)" fg:x="234" fg:w="4"/><text x="82.6444%" y="991.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (4 samples, 1.41%)</title><rect x="82.3944%" y="965" width="1.4085%" height="15" fill="rgb(225,8,7)" fg:x="234" fg:w="4"/><text x="82.6444%" y="975.50"></text></g><g><title>regex_automata::meta::reverse_inner::prefilter::{{closure}} (4 samples, 1.41%)</title><rect x="82.3944%" y="949" width="1.4085%" height="15" fill="rgb(234,195,1)" fg:x="234" fg:w="4"/><text x="82.6444%" y="959.50"></text></g><g><title>regex_automata::util::prefilter::Prefilter::new (4 samples, 1.41%)</title><rect x="82.3944%" y="933" width="1.4085%" height="15" fill="rgb(227,199,27)" fg:x="234" fg:w="4"/><text x="82.6444%" y="943.50"></text></g><g><title>regex_automata::util::prefilter::Choice::new (4 samples, 1.41%)</title><rect x="82.3944%" y="917" width="1.4085%" height="15" fill="rgb(243,64,33)" fg:x="234" fg:w="4"/><text x="82.6444%" y="927.50"></text></g><g><title>regex_automata::util::prefilter::aho_corasick::AhoCorasick::new (1 samples, 0.35%)</title><rect x="83.4507%" y="901" width="0.3521%" height="15" fill="rgb(212,202,50)" fg:x="237" fg:w="1"/><text x="83.7007%" y="911.50"></text></g><g><title>aho_corasick::ahocorasick::AhoCorasickBuilder::build (1 samples, 0.35%)</title><rect x="83.4507%" y="885" width="0.3521%" height="15" fill="rgb(223,55,42)" fg:x="237" fg:w="1"/><text x="83.7007%" y="895.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Builder::build (1 samples, 0.35%)</title><rect x="83.4507%" y="869" width="0.3521%" height="15" fill="rgb(235,33,22)" fg:x="237" fg:w="1"/><text x="83.7007%" y="879.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Compiler::compile (1 samples, 0.35%)</title><rect x="83.4507%" y="853" width="0.3521%" height="15" fill="rgb(253,203,15)" fg:x="237" fg:w="1"/><text x="83.7007%" y="863.50"></text></g><g><title>aho_corasick::util::prefilter::Builder::build (1 samples, 0.35%)</title><rect x="83.4507%" y="837" width="0.3521%" height="15" fill="rgb(217,28,22)" fg:x="237" fg:w="1"/><text x="83.7007%" y="847.50"></text></g><g><title>aho_corasick::util::prefilter::RareBytesBuilder::build (1 samples, 0.35%)</title><rect x="83.4507%" y="821" width="0.3521%" height="15" fill="rgb(237,175,5)" fg:x="237" fg:w="1"/><text x="83.7007%" y="831.50"></text></g><g><title>aho_corasick::util::prefilter::RareBytesBuilder::build::imp (1 samples, 0.35%)</title><rect x="83.4507%" y="805" width="0.3521%" height="15" fill="rgb(222,125,2)" fg:x="237" fg:w="1"/><text x="83.7007%" y="815.50"></text></g><g><title>aho_corasick::util::alphabet::ByteSet::contains (1 samples, 0.35%)</title><rect x="83.4507%" y="789" width="0.3521%" height="15" fill="rgb(235,156,8)" fg:x="237" fg:w="1"/><text x="83.7007%" y="799.50"></text></g><g><title>aho_corasick::util::alphabet::ByteClasses::get (2 samples, 0.70%)</title><rect x="83.8028%" y="773" width="0.7042%" height="15" fill="rgb(251,98,47)" fg:x="238" fg:w="2"/><text x="84.0528%" y="783.50"></text></g><g><title>regex_automata::meta::strategy::ReverseInner::new (4 samples, 1.41%)</title><rect x="83.8028%" y="965" width="1.4085%" height="15" fill="rgb(225,146,32)" fg:x="238" fg:w="4"/><text x="84.0528%" y="975.50"></text></g><g><title>regex_automata::meta::reverse_inner::extract (4 samples, 1.41%)</title><rect x="83.8028%" y="949" width="1.4085%" height="15" fill="rgb(209,78,45)" fg:x="238" fg:w="4"/><text x="84.0528%" y="959.50"></text></g><g><title>regex_automata::meta::reverse_inner::prefilter (4 samples, 1.41%)</title><rect x="83.8028%" y="933" width="1.4085%" height="15" fill="rgb(221,50,42)" fg:x="238" fg:w="4"/><text x="84.0528%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (4 samples, 1.41%)</title><rect x="83.8028%" y="917" width="1.4085%" height="15" fill="rgb(225,8,7)" fg:x="238" fg:w="4"/><text x="84.0528%" y="927.50"></text></g><g><title>regex_automata::meta::reverse_inner::prefilter::{{closure}} (4 samples, 1.41%)</title><rect x="83.8028%" y="901" width="1.4085%" height="15" fill="rgb(234,195,1)" fg:x="238" fg:w="4"/><text x="84.0528%" y="911.50"></text></g><g><title>regex_automata::util::prefilter::Prefilter::new (4 samples, 1.41%)</title><rect x="83.8028%" y="885" width="1.4085%" height="15" fill="rgb(227,199,27)" fg:x="238" fg:w="4"/><text x="84.0528%" y="895.50"></text></g><g><title>regex_automata::util::prefilter::Choice::new (4 samples, 1.41%)</title><rect x="83.8028%" y="869" width="1.4085%" height="15" fill="rgb(243,64,33)" fg:x="238" fg:w="4"/><text x="84.0528%" y="879.50"></text></g><g><title>regex_automata::util::prefilter::teddy::Teddy::new (4 samples, 1.41%)</title><rect x="83.8028%" y="853" width="1.4085%" height="15" fill="rgb(207,155,0)" fg:x="238" fg:w="4"/><text x="84.0528%" y="863.50"></text></g><g><title>aho_corasick::dfa::Builder::build (4 samples, 1.41%)</title><rect x="83.8028%" y="837" width="1.4085%" height="15" fill="rgb(212,91,25)" fg:x="238" fg:w="4"/><text x="84.0528%" y="847.50"></text></g><g><title>aho_corasick::dfa::Builder::build_from_noncontiguous (4 samples, 1.41%)</title><rect x="83.8028%" y="821" width="1.4085%" height="15" fill="rgb(231,220,22)" fg:x="238" fg:w="4"/><text x="84.0528%" y="831.50"></text></g><g><title>aho_corasick::dfa::Builder::finish_build_one_start (4 samples, 1.41%)</title><rect x="83.8028%" y="805" width="1.4085%" height="15" fill="rgb(242,31,54)" fg:x="238" fg:w="4"/><text x="84.0528%" y="815.50"></text></g><g><title>aho_corasick::dfa::sparse_iter (4 samples, 1.41%)</title><rect x="83.8028%" y="789" width="1.4085%" height="15" fill="rgb(223,225,36)" fg:x="238" fg:w="4"/><text x="84.0528%" y="799.50"></text></g><g><title>aho_corasick::dfa::Builder::finish_build_one_start::{{closure}} (2 samples, 0.70%)</title><rect x="84.5070%" y="773" width="0.7042%" height="15" fill="rgb(251,205,26)" fg:x="240" fg:w="2"/><text x="84.7570%" y="783.50"></text></g><g><title>aho_corasick::dfa::Builder::finish_build_one_start::{{closure}} (2 samples, 0.70%)</title><rect x="84.5070%" y="757" width="0.7042%" height="15" fill="rgb(251,205,26)" fg:x="240" fg:w="2"/><text x="84.7570%" y="767.50"></text></g><g><title>core::ptr::write (4 samples, 1.41%)</title><rect x="85.2113%" y="469" width="1.4085%" height="15" fill="rgb(209,143,44)" fg:x="242" fg:w="4"/><text x="85.4613%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 1.41%)</title><rect x="85.2113%" y="453" width="1.4085%" height="15" fill="rgb(210,204,4)" fg:x="242" fg:w="4"/><text x="85.4613%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 1.41%)</title><rect x="85.2113%" y="437" width="1.4085%" height="15" fill="rgb(210,204,4)" fg:x="242" fg:w="4"/><text x="85.4613%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 1.41%)</title><rect x="85.2113%" y="421" width="1.4085%" height="15" fill="rgb(210,204,4)" fg:x="242" fg:w="4"/><text x="85.4613%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 1.41%)</title><rect x="85.2113%" y="405" width="1.4085%" height="15" fill="rgb(210,204,4)" fg:x="242" fg:w="4"/><text x="85.4613%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 1.41%)</title><rect x="85.2113%" y="389" width="1.4085%" height="15" fill="rgb(210,204,4)" fg:x="242" fg:w="4"/><text x="85.4613%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 1.41%)</title><rect x="85.2113%" y="373" width="1.4085%" height="15" fill="rgb(210,204,4)" fg:x="242" fg:w="4"/><text x="85.4613%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 1.41%)</title><rect x="85.2113%" y="357" width="1.4085%" height="15" fill="rgb(210,204,4)" fg:x="242" fg:w="4"/><text x="85.4613%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 1.41%)</title><rect x="85.2113%" y="341" width="1.4085%" height="15" fill="rgb(210,204,4)" fg:x="242" fg:w="4"/><text x="85.4613%" y="351.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 1.41%)</title><rect x="85.2113%" y="325" width="1.4085%" height="15" fill="rgb(210,204,4)" fg:x="242" fg:w="4"/><text x="85.4613%" y="335.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.35%)</title><rect x="86.6197%" y="469" width="0.3521%" height="15" fill="rgb(246,165,53)" fg:x="246" fg:w="1"/><text x="86.8697%" y="479.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.35%)</title><rect x="86.6197%" y="453" width="0.3521%" height="15" fill="rgb(226,134,37)" fg:x="246" fg:w="1"/><text x="86.8697%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.35%)</title><rect x="86.6197%" y="437" width="0.3521%" height="15" fill="rgb(232,29,30)" fg:x="246" fg:w="1"/><text x="86.8697%" y="447.50"></text></g><g><title>&lt;regex_automata::util::primitives::StateID as core::clone::Clone&gt;::clone (1 samples, 0.35%)</title><rect x="86.9718%" y="437" width="0.3521%" height="15" fill="rgb(234,185,22)" fg:x="247" fg:w="1"/><text x="87.2218%" y="447.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class (7 samples, 2.46%)</title><rect x="85.2113%" y="581" width="2.4648%" height="15" fill="rgb(246,38,12)" fg:x="242" fg:w="7"/><text x="85.4613%" y="591.50">re..</text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::new (7 samples, 2.46%)</title><rect x="85.2113%" y="565" width="2.4648%" height="15" fill="rgb(211,200,20)" fg:x="242" fg:w="7"/><text x="85.4613%" y="575.50">re..</text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8State::clear (7 samples, 2.46%)</title><rect x="85.2113%" y="549" width="2.4648%" height="15" fill="rgb(241,127,0)" fg:x="242" fg:w="7"/><text x="85.4613%" y="559.50">re..</text></g><g><title>regex_automata::nfa::thompson::map::Utf8BoundedMap::clear (7 samples, 2.46%)</title><rect x="85.2113%" y="533" width="2.4648%" height="15" fill="rgb(207,86,25)" fg:x="242" fg:w="7"/><text x="85.4613%" y="543.50">re..</text></g><g><title>alloc::vec::from_elem (7 samples, 2.46%)</title><rect x="85.2113%" y="517" width="2.4648%" height="15" fill="rgb(208,109,54)" fg:x="242" fg:w="7"/><text x="85.4613%" y="527.50">al..</text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (7 samples, 2.46%)</title><rect x="85.2113%" y="501" width="2.4648%" height="15" fill="rgb(228,177,24)" fg:x="242" fg:w="7"/><text x="85.4613%" y="511.50">&lt;T..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (7 samples, 2.46%)</title><rect x="85.2113%" y="485" width="2.4648%" height="15" fill="rgb(216,52,5)" fg:x="242" fg:w="7"/><text x="85.4613%" y="495.50">al..</text></g><g><title>&lt;alloc::vec::ExtendElement&lt;T&gt; as alloc::vec::ExtendWith&lt;T&gt;&gt;::next (2 samples, 0.70%)</title><rect x="86.9718%" y="469" width="0.7042%" height="15" fill="rgb(216,123,15)" fg:x="247" fg:w="2"/><text x="87.2218%" y="479.50"></text></g><g><title>&lt;regex_automata::nfa::thompson::map::Utf8BoundedEntry as core::clone::Clone&gt;::clone (2 samples, 0.70%)</title><rect x="86.9718%" y="453" width="0.7042%" height="15" fill="rgb(211,18,41)" fg:x="247" fg:w="2"/><text x="87.2218%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.35%)</title><rect x="87.3239%" y="437" width="0.3521%" height="15" fill="rgb(239,104,10)" fg:x="248" fg:w="1"/><text x="87.5739%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.35%)</title><rect x="87.3239%" y="421" width="0.3521%" height="15" fill="rgb(229,121,46)" fg:x="248" fg:w="1"/><text x="87.5739%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.35%)</title><rect x="87.3239%" y="405" width="0.3521%" height="15" fill="rgb(221,172,50)" fg:x="248" fg:w="1"/><text x="87.5739%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.35%)</title><rect x="87.3239%" y="389" width="0.3521%" height="15" fill="rgb(216,42,52)" fg:x="248" fg:w="1"/><text x="87.5739%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.35%)</title><rect x="87.3239%" y="373" width="0.3521%" height="15" fill="rgb(222,107,1)" fg:x="248" fg:w="1"/><text x="87.5739%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.35%)</title><rect x="87.3239%" y="357" width="0.3521%" height="15" fill="rgb(214,20,35)" fg:x="248" fg:w="1"/><text x="87.5739%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.70%)</title><rect x="87.6761%" y="277" width="0.7042%" height="15" fill="rgb(210,204,4)" fg:x="249" fg:w="2"/><text x="87.9261%" y="287.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.70%)</title><rect x="87.6761%" y="261" width="0.7042%" height="15" fill="rgb(210,204,4)" fg:x="249" fg:w="2"/><text x="87.9261%" y="271.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.70%)</title><rect x="87.6761%" y="245" width="0.7042%" height="15" fill="rgb(210,204,4)" fg:x="249" fg:w="2"/><text x="87.9261%" y="255.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.70%)</title><rect x="87.6761%" y="229" width="0.7042%" height="15" fill="rgb(210,204,4)" fg:x="249" fg:w="2"/><text x="87.9261%" y="239.50"></text></g><g><title>core::ptr::write (3 samples, 1.06%)</title><rect x="87.6761%" y="373" width="1.0563%" height="15" fill="rgb(209,143,44)" fg:x="249" fg:w="3"/><text x="87.9261%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 1.06%)</title><rect x="87.6761%" y="357" width="1.0563%" height="15" fill="rgb(210,204,4)" fg:x="249" fg:w="3"/><text x="87.9261%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 1.06%)</title><rect x="87.6761%" y="341" width="1.0563%" height="15" fill="rgb(210,204,4)" fg:x="249" fg:w="3"/><text x="87.9261%" y="351.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 1.06%)</title><rect x="87.6761%" y="325" width="1.0563%" height="15" fill="rgb(210,204,4)" fg:x="249" fg:w="3"/><text x="87.9261%" y="335.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 1.06%)</title><rect x="87.6761%" y="309" width="1.0563%" height="15" fill="rgb(210,204,4)" fg:x="249" fg:w="3"/><text x="87.9261%" y="319.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 1.06%)</title><rect x="87.6761%" y="293" width="1.0563%" height="15" fill="rgb(210,204,4)" fg:x="249" fg:w="3"/><text x="87.9261%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 4.23%)</title><rect x="85.2113%" y="789" width="4.2254%" height="15" fill="rgb(214,109,53)" fg:x="242" fg:w="12"/><text x="85.4613%" y="799.50">&lt;core..</text></g><g><title>core::option::Option&lt;T&gt;::map (12 samples, 4.23%)</title><rect x="85.2113%" y="773" width="4.2254%" height="15" fill="rgb(254,35,30)" fg:x="242" fg:w="12"/><text x="85.4613%" y="783.50">core:..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (12 samples, 4.23%)</title><rect x="85.2113%" y="757" width="4.2254%" height="15" fill="rgb(226,169,23)" fg:x="242" fg:w="12"/><text x="85.4613%" y="767.50">core:..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (12 samples, 4.23%)</title><rect x="85.2113%" y="741" width="4.2254%" height="15" fill="rgb(205,130,14)" fg:x="242" fg:w="12"/><text x="85.4613%" y="751.50">regex..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (12 samples, 4.23%)</title><rect x="85.2113%" y="725" width="4.2254%" height="15" fill="rgb(235,200,16)" fg:x="242" fg:w="12"/><text x="85.4613%" y="735.50">regex..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (12 samples, 4.23%)</title><rect x="85.2113%" y="709" width="4.2254%" height="15" fill="rgb(213,34,18)" fg:x="242" fg:w="12"/><text x="85.4613%" y="719.50">regex..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (12 samples, 4.23%)</title><rect x="85.2113%" y="693" width="4.2254%" height="15" fill="rgb(253,35,22)" fg:x="242" fg:w="12"/><text x="85.4613%" y="703.50">regex..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (12 samples, 4.23%)</title><rect x="85.2113%" y="677" width="4.2254%" height="15" fill="rgb(247,137,3)" fg:x="242" fg:w="12"/><text x="85.4613%" y="687.50">regex..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 4.23%)</title><rect x="85.2113%" y="661" width="4.2254%" height="15" fill="rgb(214,109,53)" fg:x="242" fg:w="12"/><text x="85.4613%" y="671.50">&lt;core..</text></g><g><title>core::option::Option&lt;T&gt;::map (12 samples, 4.23%)</title><rect x="85.2113%" y="645" width="4.2254%" height="15" fill="rgb(254,35,30)" fg:x="242" fg:w="12"/><text x="85.4613%" y="655.50">core:..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (12 samples, 4.23%)</title><rect x="85.2113%" y="629" width="4.2254%" height="15" fill="rgb(226,169,23)" fg:x="242" fg:w="12"/><text x="85.4613%" y="639.50">core:..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice::{{closure}} (12 samples, 4.23%)</title><rect x="85.2113%" y="613" width="4.2254%" height="15" fill="rgb(223,145,12)" fg:x="242" fg:w="12"/><text x="85.4613%" y="623.50">regex..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (12 samples, 4.23%)</title><rect x="85.2113%" y="597" width="4.2254%" height="15" fill="rgb(213,34,18)" fg:x="242" fg:w="12"/><text x="85.4613%" y="607.50">regex..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (5 samples, 1.76%)</title><rect x="87.6761%" y="581" width="1.7606%" height="15" fill="rgb(210,105,37)" fg:x="249" fg:w="5"/><text x="87.9261%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 1.76%)</title><rect x="87.6761%" y="565" width="1.7606%" height="15" fill="rgb(214,109,53)" fg:x="249" fg:w="5"/><text x="87.9261%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 1.76%)</title><rect x="87.6761%" y="549" width="1.7606%" height="15" fill="rgb(254,35,30)" fg:x="249" fg:w="5"/><text x="87.9261%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (5 samples, 1.76%)</title><rect x="87.6761%" y="533" width="1.7606%" height="15" fill="rgb(226,169,23)" fg:x="249" fg:w="5"/><text x="87.9261%" y="543.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (5 samples, 1.76%)</title><rect x="87.6761%" y="517" width="1.7606%" height="15" fill="rgb(205,130,14)" fg:x="249" fg:w="5"/><text x="87.9261%" y="527.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (5 samples, 1.76%)</title><rect x="87.6761%" y="501" width="1.7606%" height="15" fill="rgb(213,34,18)" fg:x="249" fg:w="5"/><text x="87.9261%" y="511.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class (5 samples, 1.76%)</title><rect x="87.6761%" y="485" width="1.7606%" height="15" fill="rgb(246,38,12)" fg:x="249" fg:w="5"/><text x="87.9261%" y="495.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::new (5 samples, 1.76%)</title><rect x="87.6761%" y="469" width="1.7606%" height="15" fill="rgb(211,200,20)" fg:x="249" fg:w="5"/><text x="87.9261%" y="479.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8State::clear (5 samples, 1.76%)</title><rect x="87.6761%" y="453" width="1.7606%" height="15" fill="rgb(241,127,0)" fg:x="249" fg:w="5"/><text x="87.9261%" y="463.50"></text></g><g><title>regex_automata::nfa::thompson::map::Utf8BoundedMap::clear (5 samples, 1.76%)</title><rect x="87.6761%" y="437" width="1.7606%" height="15" fill="rgb(207,86,25)" fg:x="249" fg:w="5"/><text x="87.9261%" y="447.50"></text></g><g><title>alloc::vec::from_elem (5 samples, 1.76%)</title><rect x="87.6761%" y="421" width="1.7606%" height="15" fill="rgb(208,109,54)" fg:x="249" fg:w="5"/><text x="87.9261%" y="431.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (5 samples, 1.76%)</title><rect x="87.6761%" y="405" width="1.7606%" height="15" fill="rgb(228,177,24)" fg:x="249" fg:w="5"/><text x="87.9261%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (5 samples, 1.76%)</title><rect x="87.6761%" y="389" width="1.7606%" height="15" fill="rgb(216,52,5)" fg:x="249" fg:w="5"/><text x="87.9261%" y="399.50"></text></g><g><title>&lt;alloc::vec::ExtendElement&lt;T&gt; as alloc::vec::ExtendWith&lt;T&gt;&gt;::next (2 samples, 0.70%)</title><rect x="88.7324%" y="373" width="0.7042%" height="15" fill="rgb(216,123,15)" fg:x="252" fg:w="2"/><text x="88.9824%" y="383.50"></text></g><g><title>&lt;regex_automata::nfa::thompson::map::Utf8BoundedEntry as core::clone::Clone&gt;::clone (2 samples, 0.70%)</title><rect x="88.7324%" y="357" width="0.7042%" height="15" fill="rgb(211,18,41)" fg:x="252" fg:w="2"/><text x="88.9824%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.70%)</title><rect x="88.7324%" y="341" width="0.7042%" height="15" fill="rgb(239,104,10)" fg:x="252" fg:w="2"/><text x="88.9824%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.70%)</title><rect x="88.7324%" y="325" width="0.7042%" height="15" fill="rgb(229,121,46)" fg:x="252" fg:w="2"/><text x="88.9824%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.70%)</title><rect x="88.7324%" y="309" width="0.7042%" height="15" fill="rgb(221,172,50)" fg:x="252" fg:w="2"/><text x="88.9824%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.70%)</title><rect x="88.7324%" y="293" width="0.7042%" height="15" fill="rgb(216,42,52)" fg:x="252" fg:w="2"/><text x="88.9824%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.70%)</title><rect x="88.7324%" y="277" width="0.7042%" height="15" fill="rgb(222,107,1)" fg:x="252" fg:w="2"/><text x="88.9824%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.70%)</title><rect x="88.7324%" y="261" width="0.7042%" height="15" fill="rgb(214,20,35)" fg:x="252" fg:w="2"/><text x="88.9824%" y="271.50"></text></g><g><title>__memmove_avx512_unaligned_erms (2 samples, 0.70%)</title><rect x="88.7324%" y="245" width="0.7042%" height="15" fill="rgb(217,126,36)" fg:x="252" fg:w="2"/><text x="88.9824%" y="255.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (17 samples, 5.99%)</title><rect x="83.8028%" y="1029" width="5.9859%" height="15" fill="rgb(212,33,22)" fg:x="238" fg:w="17"/><text x="84.0528%" y="1039.50">regex_au..</text></g><g><title>regex_automata::meta::regex::Builder::build_many (17 samples, 5.99%)</title><rect x="83.8028%" y="1013" width="5.9859%" height="15" fill="rgb(236,25,32)" fg:x="238" fg:w="17"/><text x="84.0528%" y="1023.50">regex_au..</text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (17 samples, 5.99%)</title><rect x="83.8028%" y="997" width="5.9859%" height="15" fill="rgb(250,142,30)" fg:x="238" fg:w="17"/><text x="84.0528%" y="1007.50">regex_au..</text></g><g><title>regex_automata::meta::strategy::new (17 samples, 5.99%)</title><rect x="83.8028%" y="981" width="5.9859%" height="15" fill="rgb(243,171,22)" fg:x="238" fg:w="17"/><text x="84.0528%" y="991.50">regex_au..</text></g><g><title>regex_automata::meta::strategy::Core::new (13 samples, 4.58%)</title><rect x="85.2113%" y="965" width="4.5775%" height="15" fill="rgb(222,69,27)" fg:x="242" fg:w="13"/><text x="85.4613%" y="975.50">regex..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (13 samples, 4.58%)</title><rect x="85.2113%" y="949" width="4.5775%" height="15" fill="rgb(226,42,16)" fg:x="242" fg:w="13"/><text x="85.4613%" y="959.50">regex..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (13 samples, 4.58%)</title><rect x="85.2113%" y="933" width="4.5775%" height="15" fill="rgb(242,129,17)" fg:x="242" fg:w="13"/><text x="85.4613%" y="943.50">regex..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (13 samples, 4.58%)</title><rect x="85.2113%" y="917" width="4.5775%" height="15" fill="rgb(247,137,3)" fg:x="242" fg:w="13"/><text x="85.4613%" y="927.50">regex..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 4.58%)</title><rect x="85.2113%" y="901" width="4.5775%" height="15" fill="rgb(214,109,53)" fg:x="242" fg:w="13"/><text x="85.4613%" y="911.50">&lt;core..</text></g><g><title>core::option::Option&lt;T&gt;::map (13 samples, 4.58%)</title><rect x="85.2113%" y="885" width="4.5775%" height="15" fill="rgb(254,35,30)" fg:x="242" fg:w="13"/><text x="85.4613%" y="895.50">core:..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (13 samples, 4.58%)</title><rect x="85.2113%" y="869" width="4.5775%" height="15" fill="rgb(226,169,23)" fg:x="242" fg:w="13"/><text x="85.4613%" y="879.50">core:..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile::{{closure}} (13 samples, 4.58%)</title><rect x="85.2113%" y="853" width="4.5775%" height="15" fill="rgb(218,216,52)" fg:x="242" fg:w="13"/><text x="85.4613%" y="863.50">regex..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (13 samples, 4.58%)</title><rect x="85.2113%" y="837" width="4.5775%" height="15" fill="rgb(235,200,16)" fg:x="242" fg:w="13"/><text x="85.4613%" y="847.50">regex..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (13 samples, 4.58%)</title><rect x="85.2113%" y="821" width="4.5775%" height="15" fill="rgb(213,34,18)" fg:x="242" fg:w="13"/><text x="85.4613%" y="831.50">regex..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (13 samples, 4.58%)</title><rect x="85.2113%" y="805" width="4.5775%" height="15" fill="rgb(210,105,37)" fg:x="242" fg:w="13"/><text x="85.4613%" y="815.50">regex..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 0.35%)</title><rect x="89.4366%" y="789" width="0.3521%" height="15" fill="rgb(222,94,14)" fg:x="254" fg:w="1"/><text x="89.6866%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.35%)</title><rect x="89.4366%" y="773" width="0.3521%" height="15" fill="rgb(254,35,30)" fg:x="254" fg:w="1"/><text x="89.6866%" y="783.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.35%)</title><rect x="89.4366%" y="757" width="0.3521%" height="15" fill="rgb(226,169,23)" fg:x="254" fg:w="1"/><text x="89.6866%" y="767.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (1 samples, 0.35%)</title><rect x="89.4366%" y="741" width="0.3521%" height="15" fill="rgb(205,130,14)" fg:x="254" fg:w="1"/><text x="89.6866%" y="751.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 0.35%)</title><rect x="89.4366%" y="725" width="0.3521%" height="15" fill="rgb(235,200,16)" fg:x="254" fg:w="1"/><text x="89.6866%" y="735.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.35%)</title><rect x="89.4366%" y="709" width="0.3521%" height="15" fill="rgb(213,34,18)" fg:x="254" fg:w="1"/><text x="89.6866%" y="719.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (1 samples, 0.35%)</title><rect x="89.4366%" y="693" width="0.3521%" height="15" fill="rgb(253,35,22)" fg:x="254" fg:w="1"/><text x="89.6866%" y="703.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (1 samples, 0.35%)</title><rect x="89.4366%" y="677" width="0.3521%" height="15" fill="rgb(247,137,3)" fg:x="254" fg:w="1"/><text x="89.6866%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.35%)</title><rect x="89.4366%" y="661" width="0.3521%" height="15" fill="rgb(214,109,53)" fg:x="254" fg:w="1"/><text x="89.6866%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.35%)</title><rect x="89.4366%" y="645" width="0.3521%" height="15" fill="rgb(254,35,30)" fg:x="254" fg:w="1"/><text x="89.6866%" y="655.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.35%)</title><rect x="89.4366%" y="629" width="0.3521%" height="15" fill="rgb(226,169,23)" fg:x="254" fg:w="1"/><text x="89.6866%" y="639.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice::{{closure}} (1 samples, 0.35%)</title><rect x="89.4366%" y="613" width="0.3521%" height="15" fill="rgb(223,145,12)" fg:x="254" fg:w="1"/><text x="89.6866%" y="623.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.35%)</title><rect x="89.4366%" y="597" width="0.3521%" height="15" fill="rgb(213,34,18)" fg:x="254" fg:w="1"/><text x="89.6866%" y="607.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (1 samples, 0.35%)</title><rect x="89.4366%" y="581" width="0.3521%" height="15" fill="rgb(210,105,37)" fg:x="254" fg:w="1"/><text x="89.6866%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 0.35%)</title><rect x="89.4366%" y="565" width="0.3521%" height="15" fill="rgb(222,94,14)" fg:x="254" fg:w="1"/><text x="89.6866%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.35%)</title><rect x="89.4366%" y="549" width="0.3521%" height="15" fill="rgb(254,35,30)" fg:x="254" fg:w="1"/><text x="89.6866%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.35%)</title><rect x="89.4366%" y="533" width="0.3521%" height="15" fill="rgb(226,169,23)" fg:x="254" fg:w="1"/><text x="89.6866%" y="543.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (1 samples, 0.35%)</title><rect x="89.4366%" y="517" width="0.3521%" height="15" fill="rgb(205,130,14)" fg:x="254" fg:w="1"/><text x="89.6866%" y="527.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.35%)</title><rect x="89.4366%" y="501" width="0.3521%" height="15" fill="rgb(213,34,18)" fg:x="254" fg:w="1"/><text x="89.6866%" y="511.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_repetition (1 samples, 0.35%)</title><rect x="89.4366%" y="485" width="0.3521%" height="15" fill="rgb(205,23,25)" fg:x="254" fg:w="1"/><text x="89.6866%" y="495.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_zero_or_one (1 samples, 0.35%)</title><rect x="89.4366%" y="469" width="0.3521%" height="15" fill="rgb(240,227,44)" fg:x="254" fg:w="1"/><text x="89.6866%" y="479.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::add_empty (1 samples, 0.35%)</title><rect x="89.4366%" y="453" width="0.3521%" height="15" fill="rgb(245,57,0)" fg:x="254" fg:w="1"/><text x="89.6866%" y="463.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add_empty (1 samples, 0.35%)</title><rect x="89.4366%" y="437" width="0.3521%" height="15" fill="rgb(233,49,21)" fg:x="254" fg:w="1"/><text x="89.6866%" y="447.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add (1 samples, 0.35%)</title><rect x="89.4366%" y="421" width="0.3521%" height="15" fill="rgb(253,91,29)" fg:x="254" fg:w="1"/><text x="89.6866%" y="431.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::check_size_limit (1 samples, 0.35%)</title><rect x="89.4366%" y="405" width="0.3521%" height="15" fill="rgb(235,140,32)" fg:x="254" fg:w="1"/><text x="89.6866%" y="415.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 0.35%)</title><rect x="89.7887%" y="677" width="0.3521%" height="15" fill="rgb(235,200,16)" fg:x="255" fg:w="1"/><text x="90.0387%" y="687.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.35%)</title><rect x="89.7887%" y="661" width="0.3521%" height="15" fill="rgb(213,34,18)" fg:x="255" fg:w="1"/><text x="90.0387%" y="671.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (1 samples, 0.35%)</title><rect x="89.7887%" y="645" width="0.3521%" height="15" fill="rgb(253,35,22)" fg:x="255" fg:w="1"/><text x="90.0387%" y="655.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::add (1 samples, 0.35%)</title><rect x="89.7887%" y="629" width="0.3521%" height="15" fill="rgb(247,201,32)" fg:x="255" fg:w="1"/><text x="90.0387%" y="639.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::get_or_add_state (1 samples, 0.35%)</title><rect x="89.7887%" y="613" width="0.3521%" height="15" fill="rgb(249,22,31)" fg:x="255" fg:w="1"/><text x="90.0387%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (1 samples, 0.35%)</title><rect x="89.7887%" y="597" width="0.3521%" height="15" fill="rgb(222,129,7)" fg:x="255" fg:w="1"/><text x="90.0387%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.35%)</title><rect x="89.7887%" y="581" width="0.3521%" height="15" fill="rgb(212,159,3)" fg:x="255" fg:w="1"/><text x="90.0387%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.35%)</title><rect x="89.7887%" y="565" width="0.3521%" height="15" fill="rgb(231,142,39)" fg:x="255" fg:w="1"/><text x="90.0387%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.35%)</title><rect x="89.7887%" y="549" width="0.3521%" height="15" fill="rgb(249,2,22)" fg:x="255" fg:w="1"/><text x="90.0387%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.35%)</title><rect x="89.7887%" y="533" width="0.3521%" height="15" fill="rgb(254,53,35)" fg:x="255" fg:w="1"/><text x="90.0387%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.35%)</title><rect x="89.7887%" y="517" width="0.3521%" height="15" fill="rgb(237,133,22)" fg:x="255" fg:w="1"/><text x="90.0387%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.35%)</title><rect x="89.7887%" y="501" width="0.3521%" height="15" fill="rgb(237,156,49)" fg:x="255" fg:w="1"/><text x="90.0387%" y="511.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.35%)</title><rect x="89.7887%" y="485" width="0.3521%" height="15" fill="rgb(214,150,36)" fg:x="255" fg:w="1"/><text x="90.0387%" y="495.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.35%)</title><rect x="89.7887%" y="469" width="0.3521%" height="15" fill="rgb(254,47,34)" fg:x="255" fg:w="1"/><text x="90.0387%" y="479.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.35%)</title><rect x="89.7887%" y="453" width="0.3521%" height="15" fill="rgb(254,73,4)" fg:x="255" fg:w="1"/><text x="90.0387%" y="463.50"></text></g><g><title>_int_realloc (1 samples, 0.35%)</title><rect x="89.7887%" y="437" width="0.3521%" height="15" fill="rgb(231,75,41)" fg:x="255" fg:w="1"/><text x="90.0387%" y="447.50"></text></g><g><title>_int_malloc (1 samples, 0.35%)</title><rect x="89.7887%" y="421" width="0.3521%" height="15" fill="rgb(222,219,51)" fg:x="255" fg:w="1"/><text x="90.0387%" y="431.50"></text></g><g><title>regex::regex::bytes::Regex::new (2 samples, 0.70%)</title><rect x="89.7887%" y="1029" width="0.7042%" height="15" fill="rgb(246,224,25)" fg:x="255" fg:w="2"/><text x="90.0387%" y="1039.50"></text></g><g><title>regex::builders::bytes::RegexBuilder::build (2 samples, 0.70%)</title><rect x="89.7887%" y="1013" width="0.7042%" height="15" fill="rgb(236,76,51)" fg:x="255" fg:w="2"/><text x="90.0387%" y="1023.50"></text></g><g><title>regex::builders::Builder::build_one_bytes (2 samples, 0.70%)</title><rect x="89.7887%" y="997" width="0.7042%" height="15" fill="rgb(233,102,7)" fg:x="255" fg:w="2"/><text x="90.0387%" y="1007.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (2 samples, 0.70%)</title><rect x="89.7887%" y="981" width="0.7042%" height="15" fill="rgb(212,33,22)" fg:x="255" fg:w="2"/><text x="90.0387%" y="991.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many (2 samples, 0.70%)</title><rect x="89.7887%" y="965" width="0.7042%" height="15" fill="rgb(236,25,32)" fg:x="255" fg:w="2"/><text x="90.0387%" y="975.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (2 samples, 0.70%)</title><rect x="89.7887%" y="949" width="0.7042%" height="15" fill="rgb(250,142,30)" fg:x="255" fg:w="2"/><text x="90.0387%" y="959.50"></text></g><g><title>regex_automata::meta::strategy::new (2 samples, 0.70%)</title><rect x="89.7887%" y="933" width="0.7042%" height="15" fill="rgb(243,171,22)" fg:x="255" fg:w="2"/><text x="90.0387%" y="943.50"></text></g><g><title>regex_automata::meta::strategy::Core::new (2 samples, 0.70%)</title><rect x="89.7887%" y="917" width="0.7042%" height="15" fill="rgb(222,69,27)" fg:x="255" fg:w="2"/><text x="90.0387%" y="927.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (2 samples, 0.70%)</title><rect x="89.7887%" y="901" width="0.7042%" height="15" fill="rgb(226,42,16)" fg:x="255" fg:w="2"/><text x="90.0387%" y="911.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (2 samples, 0.70%)</title><rect x="89.7887%" y="885" width="0.7042%" height="15" fill="rgb(242,129,17)" fg:x="255" fg:w="2"/><text x="90.0387%" y="895.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (2 samples, 0.70%)</title><rect x="89.7887%" y="869" width="0.7042%" height="15" fill="rgb(247,137,3)" fg:x="255" fg:w="2"/><text x="90.0387%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.70%)</title><rect x="89.7887%" y="853" width="0.7042%" height="15" fill="rgb(214,109,53)" fg:x="255" fg:w="2"/><text x="90.0387%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.70%)</title><rect x="89.7887%" y="837" width="0.7042%" height="15" fill="rgb(254,35,30)" fg:x="255" fg:w="2"/><text x="90.0387%" y="847.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.70%)</title><rect x="89.7887%" y="821" width="0.7042%" height="15" fill="rgb(226,169,23)" fg:x="255" fg:w="2"/><text x="90.0387%" y="831.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile::{{closure}} (2 samples, 0.70%)</title><rect x="89.7887%" y="805" width="0.7042%" height="15" fill="rgb(218,216,52)" fg:x="255" fg:w="2"/><text x="90.0387%" y="815.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (2 samples, 0.70%)</title><rect x="89.7887%" y="789" width="0.7042%" height="15" fill="rgb(235,200,16)" fg:x="255" fg:w="2"/><text x="90.0387%" y="799.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (2 samples, 0.70%)</title><rect x="89.7887%" y="773" width="0.7042%" height="15" fill="rgb(213,34,18)" fg:x="255" fg:w="2"/><text x="90.0387%" y="783.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (2 samples, 0.70%)</title><rect x="89.7887%" y="757" width="0.7042%" height="15" fill="rgb(210,105,37)" fg:x="255" fg:w="2"/><text x="90.0387%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.70%)</title><rect x="89.7887%" y="741" width="0.7042%" height="15" fill="rgb(214,109,53)" fg:x="255" fg:w="2"/><text x="90.0387%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.70%)</title><rect x="89.7887%" y="725" width="0.7042%" height="15" fill="rgb(254,35,30)" fg:x="255" fg:w="2"/><text x="90.0387%" y="735.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.70%)</title><rect x="89.7887%" y="709" width="0.7042%" height="15" fill="rgb(226,169,23)" fg:x="255" fg:w="2"/><text x="90.0387%" y="719.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (2 samples, 0.70%)</title><rect x="89.7887%" y="693" width="0.7042%" height="15" fill="rgb(205,130,14)" fg:x="255" fg:w="2"/><text x="90.0387%" y="703.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_bounded (1 samples, 0.35%)</title><rect x="90.1408%" y="677" width="0.3521%" height="15" fill="rgb(214,135,45)" fg:x="256" fg:w="1"/><text x="90.3908%" y="687.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_exactly (1 samples, 0.35%)</title><rect x="90.1408%" y="661" width="0.3521%" height="15" fill="rgb(240,41,50)" fg:x="256" fg:w="1"/><text x="90.3908%" y="671.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (1 samples, 0.35%)</title><rect x="90.1408%" y="645" width="0.3521%" height="15" fill="rgb(210,105,37)" fg:x="256" fg:w="1"/><text x="90.3908%" y="655.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.35%)</title><rect x="90.1408%" y="629" width="0.3521%" height="15" fill="rgb(213,34,18)" fg:x="256" fg:w="1"/><text x="90.3908%" y="639.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class (1 samples, 0.35%)</title><rect x="90.1408%" y="613" width="0.3521%" height="15" fill="rgb(246,38,12)" fg:x="256" fg:w="1"/><text x="90.3908%" y="623.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::add_sparse (1 samples, 0.35%)</title><rect x="90.1408%" y="597" width="0.3521%" height="15" fill="rgb(227,211,41)" fg:x="256" fg:w="1"/><text x="90.3908%" y="607.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add_sparse (1 samples, 0.35%)</title><rect x="90.1408%" y="581" width="0.3521%" height="15" fill="rgb(233,153,44)" fg:x="256" fg:w="1"/><text x="90.3908%" y="591.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add (1 samples, 0.35%)</title><rect x="90.1408%" y="565" width="0.3521%" height="15" fill="rgb(253,91,29)" fg:x="256" fg:w="1"/><text x="90.3908%" y="575.50"></text></g><g><title>sysmalloc (1 samples, 0.35%)</title><rect x="90.4930%" y="357" width="0.3521%" height="15" fill="rgb(237,64,10)" fg:x="257" fg:w="1"/><text x="90.7430%" y="367.50"></text></g><g><title>grow_heap (1 samples, 0.35%)</title><rect x="90.4930%" y="341" width="0.3521%" height="15" fill="rgb(231,135,3)" fg:x="257" fg:w="1"/><text x="90.7430%" y="351.50"></text></g><g><title>__GI___mprotect (1 samples, 0.35%)</title><rect x="90.4930%" y="325" width="0.3521%" height="15" fill="rgb(209,155,30)" fg:x="257" fg:w="1"/><text x="90.7430%" y="335.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="90.4930%" y="309" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="257" fg:w="1"/><text x="90.7430%" y="319.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="90.4930%" y="293" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="257" fg:w="1"/><text x="90.7430%" y="303.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="90.4930%" y="277" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="257" fg:w="1"/><text x="90.7430%" y="287.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="90.4930%" y="261" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="257" fg:w="1"/><text x="90.7430%" y="271.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="90.4930%" y="245" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="257" fg:w="1"/><text x="90.7430%" y="255.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="90.4930%" y="229" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="257" fg:w="1"/><text x="90.7430%" y="239.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="90.4930%" y="213" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="257" fg:w="1"/><text x="90.7430%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.70%)</title><rect x="90.4930%" y="485" width="0.7042%" height="15" fill="rgb(249,207,12)" fg:x="257" fg:w="2"/><text x="90.7430%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.70%)</title><rect x="90.4930%" y="469" width="0.7042%" height="15" fill="rgb(224,194,14)" fg:x="257" fg:w="2"/><text x="90.7430%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.70%)</title><rect x="90.4930%" y="453" width="0.7042%" height="15" fill="rgb(227,204,5)" fg:x="257" fg:w="2"/><text x="90.7430%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.70%)</title><rect x="90.4930%" y="437" width="0.7042%" height="15" fill="rgb(231,114,21)" fg:x="257" fg:w="2"/><text x="90.7430%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.70%)</title><rect x="90.4930%" y="421" width="0.7042%" height="15" fill="rgb(238,209,2)" fg:x="257" fg:w="2"/><text x="90.7430%" y="431.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.70%)</title><rect x="90.4930%" y="405" width="0.7042%" height="15" fill="rgb(253,135,41)" fg:x="257" fg:w="2"/><text x="90.7430%" y="415.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.70%)</title><rect x="90.4930%" y="389" width="0.7042%" height="15" fill="rgb(206,112,53)" fg:x="257" fg:w="2"/><text x="90.7430%" y="399.50"></text></g><g><title>_int_malloc (2 samples, 0.70%)</title><rect x="90.4930%" y="373" width="0.7042%" height="15" fill="rgb(222,219,51)" fg:x="257" fg:w="2"/><text x="90.7430%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="91.1972%" y="421" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="259" fg:w="1"/><text x="91.4472%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="91.1972%" y="405" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="259" fg:w="1"/><text x="91.4472%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="91.1972%" y="389" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="259" fg:w="1"/><text x="91.4472%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="91.1972%" y="373" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="259" fg:w="1"/><text x="91.4472%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="91.1972%" y="357" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="259" fg:w="1"/><text x="91.4472%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="91.1972%" y="341" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="259" fg:w="1"/><text x="91.4472%" y="351.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="91.1972%" y="325" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="259" fg:w="1"/><text x="91.4472%" y="335.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.70%)</title><rect x="91.1972%" y="437" width="0.7042%" height="15" fill="rgb(210,204,4)" fg:x="259" fg:w="2"/><text x="91.4472%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 1.06%)</title><rect x="91.1972%" y="453" width="1.0563%" height="15" fill="rgb(210,204,4)" fg:x="259" fg:w="3"/><text x="91.4472%" y="463.50"></text></g><g><title>core::ptr::write (5 samples, 1.76%)</title><rect x="91.1972%" y="469" width="1.7606%" height="15" fill="rgb(209,143,44)" fg:x="259" fg:w="5"/><text x="91.4472%" y="479.50"></text></g><g><title>&lt;regex_automata::util::primitives::StateID as core::clone::Clone&gt;::clone (1 samples, 0.35%)</title><rect x="92.9577%" y="437" width="0.3521%" height="15" fill="rgb(234,185,22)" fg:x="264" fg:w="1"/><text x="93.2077%" y="447.50"></text></g><g><title>__memmove_avx512_unaligned_erms (2 samples, 0.70%)</title><rect x="93.3099%" y="341" width="0.7042%" height="15" fill="rgb(217,126,36)" fg:x="265" fg:w="2"/><text x="93.5599%" y="351.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (11 samples, 3.87%)</title><rect x="90.4930%" y="677" width="3.8732%" height="15" fill="rgb(210,105,37)" fg:x="257" fg:w="11"/><text x="90.7430%" y="687.50">rege..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 3.87%)</title><rect x="90.4930%" y="661" width="3.8732%" height="15" fill="rgb(214,109,53)" fg:x="257" fg:w="11"/><text x="90.7430%" y="671.50">&lt;cor..</text></g><g><title>core::option::Option&lt;T&gt;::map (11 samples, 3.87%)</title><rect x="90.4930%" y="645" width="3.8732%" height="15" fill="rgb(254,35,30)" fg:x="257" fg:w="11"/><text x="90.7430%" y="655.50">core..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (11 samples, 3.87%)</title><rect x="90.4930%" y="629" width="3.8732%" height="15" fill="rgb(226,169,23)" fg:x="257" fg:w="11"/><text x="90.7430%" y="639.50">core..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (11 samples, 3.87%)</title><rect x="90.4930%" y="613" width="3.8732%" height="15" fill="rgb(205,130,14)" fg:x="257" fg:w="11"/><text x="90.7430%" y="623.50">rege..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (11 samples, 3.87%)</title><rect x="90.4930%" y="597" width="3.8732%" height="15" fill="rgb(213,34,18)" fg:x="257" fg:w="11"/><text x="90.7430%" y="607.50">rege..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class (11 samples, 3.87%)</title><rect x="90.4930%" y="581" width="3.8732%" height="15" fill="rgb(246,38,12)" fg:x="257" fg:w="11"/><text x="90.7430%" y="591.50">rege..</text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::new (11 samples, 3.87%)</title><rect x="90.4930%" y="565" width="3.8732%" height="15" fill="rgb(211,200,20)" fg:x="257" fg:w="11"/><text x="90.7430%" y="575.50">rege..</text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8State::clear (11 samples, 3.87%)</title><rect x="90.4930%" y="549" width="3.8732%" height="15" fill="rgb(241,127,0)" fg:x="257" fg:w="11"/><text x="90.7430%" y="559.50">rege..</text></g><g><title>regex_automata::nfa::thompson::map::Utf8BoundedMap::clear (11 samples, 3.87%)</title><rect x="90.4930%" y="533" width="3.8732%" height="15" fill="rgb(207,86,25)" fg:x="257" fg:w="11"/><text x="90.7430%" y="543.50">rege..</text></g><g><title>alloc::vec::from_elem (11 samples, 3.87%)</title><rect x="90.4930%" y="517" width="3.8732%" height="15" fill="rgb(208,109,54)" fg:x="257" fg:w="11"/><text x="90.7430%" y="527.50">allo..</text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (11 samples, 3.87%)</title><rect x="90.4930%" y="501" width="3.8732%" height="15" fill="rgb(228,177,24)" fg:x="257" fg:w="11"/><text x="90.7430%" y="511.50">&lt;T a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (9 samples, 3.17%)</title><rect x="91.1972%" y="485" width="3.1690%" height="15" fill="rgb(216,52,5)" fg:x="259" fg:w="9"/><text x="91.4472%" y="495.50">all..</text></g><g><title>&lt;alloc::vec::ExtendElement&lt;T&gt; as alloc::vec::ExtendWith&lt;T&gt;&gt;::next (4 samples, 1.41%)</title><rect x="92.9577%" y="469" width="1.4085%" height="15" fill="rgb(216,123,15)" fg:x="264" fg:w="4"/><text x="93.2077%" y="479.50"></text></g><g><title>&lt;regex_automata::nfa::thompson::map::Utf8BoundedEntry as core::clone::Clone&gt;::clone (4 samples, 1.41%)</title><rect x="92.9577%" y="453" width="1.4085%" height="15" fill="rgb(211,18,41)" fg:x="264" fg:w="4"/><text x="93.2077%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 1.06%)</title><rect x="93.3099%" y="437" width="1.0563%" height="15" fill="rgb(239,104,10)" fg:x="265" fg:w="3"/><text x="93.5599%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 1.06%)</title><rect x="93.3099%" y="421" width="1.0563%" height="15" fill="rgb(229,121,46)" fg:x="265" fg:w="3"/><text x="93.5599%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 1.06%)</title><rect x="93.3099%" y="405" width="1.0563%" height="15" fill="rgb(221,172,50)" fg:x="265" fg:w="3"/><text x="93.5599%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 1.06%)</title><rect x="93.3099%" y="389" width="1.0563%" height="15" fill="rgb(216,42,52)" fg:x="265" fg:w="3"/><text x="93.5599%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3 samples, 1.06%)</title><rect x="93.3099%" y="373" width="1.0563%" height="15" fill="rgb(222,107,1)" fg:x="265" fg:w="3"/><text x="93.5599%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 1.06%)</title><rect x="93.3099%" y="357" width="1.0563%" height="15" fill="rgb(214,20,35)" fg:x="265" fg:w="3"/><text x="93.5599%" y="367.50"></text></g><g><title>regex_syntax::utf8::Utf8Sequence::as_slice (1 samples, 0.35%)</title><rect x="94.3662%" y="549" width="0.3521%" height="15" fill="rgb(221,115,14)" fg:x="268" fg:w="1"/><text x="94.6162%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 4.58%)</title><rect x="90.4930%" y="773" width="4.5775%" height="15" fill="rgb(214,109,53)" fg:x="257" fg:w="13"/><text x="90.7430%" y="783.50">&lt;core..</text></g><g><title>core::option::Option&lt;T&gt;::map (13 samples, 4.58%)</title><rect x="90.4930%" y="757" width="4.5775%" height="15" fill="rgb(254,35,30)" fg:x="257" fg:w="13"/><text x="90.7430%" y="767.50">core:..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (13 samples, 4.58%)</title><rect x="90.4930%" y="741" width="4.5775%" height="15" fill="rgb(226,169,23)" fg:x="257" fg:w="13"/><text x="90.7430%" y="751.50">core:..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (13 samples, 4.58%)</title><rect x="90.4930%" y="725" width="4.5775%" height="15" fill="rgb(205,130,14)" fg:x="257" fg:w="13"/><text x="90.7430%" y="735.50">regex..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (13 samples, 4.58%)</title><rect x="90.4930%" y="709" width="4.5775%" height="15" fill="rgb(235,200,16)" fg:x="257" fg:w="13"/><text x="90.7430%" y="719.50">regex..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (13 samples, 4.58%)</title><rect x="90.4930%" y="693" width="4.5775%" height="15" fill="rgb(213,34,18)" fg:x="257" fg:w="13"/><text x="90.7430%" y="703.50">regex..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (2 samples, 0.70%)</title><rect x="94.3662%" y="677" width="0.7042%" height="15" fill="rgb(253,35,22)" fg:x="268" fg:w="2"/><text x="94.6162%" y="687.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (2 samples, 0.70%)</title><rect x="94.3662%" y="661" width="0.7042%" height="15" fill="rgb(247,137,3)" fg:x="268" fg:w="2"/><text x="94.6162%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.70%)</title><rect x="94.3662%" y="645" width="0.7042%" height="15" fill="rgb(214,109,53)" fg:x="268" fg:w="2"/><text x="94.6162%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.70%)</title><rect x="94.3662%" y="629" width="0.7042%" height="15" fill="rgb(254,35,30)" fg:x="268" fg:w="2"/><text x="94.6162%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.70%)</title><rect x="94.3662%" y="613" width="0.7042%" height="15" fill="rgb(226,169,23)" fg:x="268" fg:w="2"/><text x="94.6162%" y="623.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice::{{closure}} (2 samples, 0.70%)</title><rect x="94.3662%" y="597" width="0.7042%" height="15" fill="rgb(223,145,12)" fg:x="268" fg:w="2"/><text x="94.6162%" y="607.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (2 samples, 0.70%)</title><rect x="94.3662%" y="581" width="0.7042%" height="15" fill="rgb(213,34,18)" fg:x="268" fg:w="2"/><text x="94.6162%" y="591.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class (2 samples, 0.70%)</title><rect x="94.3662%" y="565" width="0.7042%" height="15" fill="rgb(246,38,12)" fg:x="268" fg:w="2"/><text x="94.6162%" y="575.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::finish (1 samples, 0.35%)</title><rect x="94.7183%" y="549" width="0.3521%" height="15" fill="rgb(214,220,0)" fg:x="269" fg:w="1"/><text x="94.9683%" y="559.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::compile_from (1 samples, 0.35%)</title><rect x="94.7183%" y="533" width="0.3521%" height="15" fill="rgb(235,97,10)" fg:x="269" fg:w="1"/><text x="94.9683%" y="543.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::pop_freeze (1 samples, 0.35%)</title><rect x="94.7183%" y="517" width="0.3521%" height="15" fill="rgb(210,186,8)" fg:x="269" fg:w="1"/><text x="94.9683%" y="527.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Node::set_last_transition (1 samples, 0.35%)</title><rect x="94.7183%" y="501" width="0.3521%" height="15" fill="rgb(240,190,47)" fg:x="269" fg:w="1"/><text x="94.9683%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (1 samples, 0.35%)</title><rect x="94.7183%" y="485" width="0.3521%" height="15" fill="rgb(206,153,2)" fg:x="269" fg:w="1"/><text x="94.9683%" y="495.50"></text></g><g><title>core::mem::replace (1 samples, 0.35%)</title><rect x="94.7183%" y="469" width="0.3521%" height="15" fill="rgb(240,40,18)" fg:x="269" fg:w="1"/><text x="94.9683%" y="479.50"></text></g><g><title>core::ptr::read (1 samples, 0.35%)</title><rect x="94.7183%" y="453" width="0.3521%" height="15" fill="rgb(222,157,29)" fg:x="269" fg:w="1"/><text x="94.9683%" y="463.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add_union (1 samples, 0.35%)</title><rect x="95.0704%" y="533" width="0.3521%" height="15" fill="rgb(247,38,8)" fg:x="270" fg:w="1"/><text x="95.3204%" y="543.50"></text></g><g><title>regex::builders::Builder::build_one_bytes (15 samples, 5.28%)</title><rect x="90.4930%" y="1029" width="5.2817%" height="15" fill="rgb(233,102,7)" fg:x="257" fg:w="15"/><text x="90.7430%" y="1039.50">regex:..</text></g><g><title>regex_automata::meta::regex::Builder::build (15 samples, 5.28%)</title><rect x="90.4930%" y="1013" width="5.2817%" height="15" fill="rgb(212,33,22)" fg:x="257" fg:w="15"/><text x="90.7430%" y="1023.50">regex_..</text></g><g><title>regex_automata::meta::regex::Builder::build_many (15 samples, 5.28%)</title><rect x="90.4930%" y="997" width="5.2817%" height="15" fill="rgb(236,25,32)" fg:x="257" fg:w="15"/><text x="90.7430%" y="1007.50">regex_..</text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (15 samples, 5.28%)</title><rect x="90.4930%" y="981" width="5.2817%" height="15" fill="rgb(250,142,30)" fg:x="257" fg:w="15"/><text x="90.7430%" y="991.50">regex_..</text></g><g><title>regex_automata::meta::strategy::new (15 samples, 5.28%)</title><rect x="90.4930%" y="965" width="5.2817%" height="15" fill="rgb(243,171,22)" fg:x="257" fg:w="15"/><text x="90.7430%" y="975.50">regex_..</text></g><g><title>regex_automata::meta::strategy::Core::new (15 samples, 5.28%)</title><rect x="90.4930%" y="949" width="5.2817%" height="15" fill="rgb(222,69,27)" fg:x="257" fg:w="15"/><text x="90.7430%" y="959.50">regex_..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (15 samples, 5.28%)</title><rect x="90.4930%" y="933" width="5.2817%" height="15" fill="rgb(226,42,16)" fg:x="257" fg:w="15"/><text x="90.7430%" y="943.50">regex_..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (15 samples, 5.28%)</title><rect x="90.4930%" y="917" width="5.2817%" height="15" fill="rgb(242,129,17)" fg:x="257" fg:w="15"/><text x="90.7430%" y="927.50">regex_..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (15 samples, 5.28%)</title><rect x="90.4930%" y="901" width="5.2817%" height="15" fill="rgb(247,137,3)" fg:x="257" fg:w="15"/><text x="90.7430%" y="911.50">regex_..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 5.28%)</title><rect x="90.4930%" y="885" width="5.2817%" height="15" fill="rgb(214,109,53)" fg:x="257" fg:w="15"/><text x="90.7430%" y="895.50">&lt;core:..</text></g><g><title>core::option::Option&lt;T&gt;::map (15 samples, 5.28%)</title><rect x="90.4930%" y="869" width="5.2817%" height="15" fill="rgb(254,35,30)" fg:x="257" fg:w="15"/><text x="90.7430%" y="879.50">core::..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (15 samples, 5.28%)</title><rect x="90.4930%" y="853" width="5.2817%" height="15" fill="rgb(226,169,23)" fg:x="257" fg:w="15"/><text x="90.7430%" y="863.50">core::..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile::{{closure}} (15 samples, 5.28%)</title><rect x="90.4930%" y="837" width="5.2817%" height="15" fill="rgb(218,216,52)" fg:x="257" fg:w="15"/><text x="90.7430%" y="847.50">regex_..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (15 samples, 5.28%)</title><rect x="90.4930%" y="821" width="5.2817%" height="15" fill="rgb(235,200,16)" fg:x="257" fg:w="15"/><text x="90.7430%" y="831.50">regex_..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (15 samples, 5.28%)</title><rect x="90.4930%" y="805" width="5.2817%" height="15" fill="rgb(213,34,18)" fg:x="257" fg:w="15"/><text x="90.7430%" y="815.50">regex_..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (15 samples, 5.28%)</title><rect x="90.4930%" y="789" width="5.2817%" height="15" fill="rgb(210,105,37)" fg:x="257" fg:w="15"/><text x="90.7430%" y="799.50">regex_..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (2 samples, 0.70%)</title><rect x="95.0704%" y="773" width="0.7042%" height="15" fill="rgb(222,94,14)" fg:x="270" fg:w="2"/><text x="95.3204%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.70%)</title><rect x="95.0704%" y="757" width="0.7042%" height="15" fill="rgb(254,35,30)" fg:x="270" fg:w="2"/><text x="95.3204%" y="767.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.70%)</title><rect x="95.0704%" y="741" width="0.7042%" height="15" fill="rgb(226,169,23)" fg:x="270" fg:w="2"/><text x="95.3204%" y="751.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (2 samples, 0.70%)</title><rect x="95.0704%" y="725" width="0.7042%" height="15" fill="rgb(205,130,14)" fg:x="270" fg:w="2"/><text x="95.3204%" y="735.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (2 samples, 0.70%)</title><rect x="95.0704%" y="709" width="0.7042%" height="15" fill="rgb(235,200,16)" fg:x="270" fg:w="2"/><text x="95.3204%" y="719.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (2 samples, 0.70%)</title><rect x="95.0704%" y="693" width="0.7042%" height="15" fill="rgb(213,34,18)" fg:x="270" fg:w="2"/><text x="95.3204%" y="703.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (2 samples, 0.70%)</title><rect x="95.0704%" y="677" width="0.7042%" height="15" fill="rgb(210,105,37)" fg:x="270" fg:w="2"/><text x="95.3204%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (2 samples, 0.70%)</title><rect x="95.0704%" y="661" width="0.7042%" height="15" fill="rgb(222,94,14)" fg:x="270" fg:w="2"/><text x="95.3204%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.70%)</title><rect x="95.0704%" y="645" width="0.7042%" height="15" fill="rgb(254,35,30)" fg:x="270" fg:w="2"/><text x="95.3204%" y="655.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.70%)</title><rect x="95.0704%" y="629" width="0.7042%" height="15" fill="rgb(226,169,23)" fg:x="270" fg:w="2"/><text x="95.3204%" y="639.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (2 samples, 0.70%)</title><rect x="95.0704%" y="613" width="0.7042%" height="15" fill="rgb(205,130,14)" fg:x="270" fg:w="2"/><text x="95.3204%" y="623.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (2 samples, 0.70%)</title><rect x="95.0704%" y="597" width="0.7042%" height="15" fill="rgb(235,200,16)" fg:x="270" fg:w="2"/><text x="95.3204%" y="607.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (2 samples, 0.70%)</title><rect x="95.0704%" y="581" width="0.7042%" height="15" fill="rgb(213,34,18)" fg:x="270" fg:w="2"/><text x="95.3204%" y="591.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (2 samples, 0.70%)</title><rect x="95.0704%" y="565" width="0.7042%" height="15" fill="rgb(253,35,22)" fg:x="270" fg:w="2"/><text x="95.3204%" y="575.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::compile (2 samples, 0.70%)</title><rect x="95.0704%" y="549" width="0.7042%" height="15" fill="rgb(233,39,2)" fg:x="270" fg:w="2"/><text x="95.3204%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.35%)</title><rect x="95.4225%" y="533" width="0.3521%" height="15" fill="rgb(241,229,15)" fg:x="271" fg:w="1"/><text x="95.6725%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.35%)</title><rect x="95.4225%" y="517" width="0.3521%" height="15" fill="rgb(254,103,39)" fg:x="271" fg:w="1"/><text x="95.6725%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.35%)</title><rect x="95.4225%" y="501" width="0.3521%" height="15" fill="rgb(254,53,35)" fg:x="271" fg:w="1"/><text x="95.6725%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.35%)</title><rect x="95.4225%" y="485" width="0.3521%" height="15" fill="rgb(237,133,22)" fg:x="271" fg:w="1"/><text x="95.6725%" y="495.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.35%)</title><rect x="95.4225%" y="469" width="0.3521%" height="15" fill="rgb(206,149,53)" fg:x="271" fg:w="1"/><text x="95.6725%" y="479.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::compile (2 samples, 0.70%)</title><rect x="95.7746%" y="565" width="0.7042%" height="15" fill="rgb(233,39,2)" fg:x="272" fg:w="2"/><text x="96.0246%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 1.06%)</title><rect x="95.7746%" y="677" width="1.0563%" height="15" fill="rgb(214,109,53)" fg:x="272" fg:w="3"/><text x="96.0246%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 1.06%)</title><rect x="95.7746%" y="661" width="1.0563%" height="15" fill="rgb(254,35,30)" fg:x="272" fg:w="3"/><text x="96.0246%" y="671.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (3 samples, 1.06%)</title><rect x="95.7746%" y="645" width="1.0563%" height="15" fill="rgb(226,169,23)" fg:x="272" fg:w="3"/><text x="96.0246%" y="655.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (3 samples, 1.06%)</title><rect x="95.7746%" y="629" width="1.0563%" height="15" fill="rgb(205,130,14)" fg:x="272" fg:w="3"/><text x="96.0246%" y="639.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (3 samples, 1.06%)</title><rect x="95.7746%" y="613" width="1.0563%" height="15" fill="rgb(235,200,16)" fg:x="272" fg:w="3"/><text x="96.0246%" y="623.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (3 samples, 1.06%)</title><rect x="95.7746%" y="597" width="1.0563%" height="15" fill="rgb(213,34,18)" fg:x="272" fg:w="3"/><text x="96.0246%" y="607.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (3 samples, 1.06%)</title><rect x="95.7746%" y="581" width="1.0563%" height="15" fill="rgb(253,35,22)" fg:x="272" fg:w="3"/><text x="96.0246%" y="591.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::add (1 samples, 0.35%)</title><rect x="96.4789%" y="565" width="0.3521%" height="15" fill="rgb(247,201,32)" fg:x="274" fg:w="1"/><text x="96.7289%" y="575.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::get_or_add_state (1 samples, 0.35%)</title><rect x="96.4789%" y="549" width="0.3521%" height="15" fill="rgb(249,22,31)" fg:x="274" fg:w="1"/><text x="96.7289%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.35%)</title><rect x="96.4789%" y="533" width="0.3521%" height="15" fill="rgb(241,229,15)" fg:x="274" fg:w="1"/><text x="96.7289%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.35%)</title><rect x="96.4789%" y="517" width="0.3521%" height="15" fill="rgb(254,103,39)" fg:x="274" fg:w="1"/><text x="96.7289%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.35%)</title><rect x="96.4789%" y="501" width="0.3521%" height="15" fill="rgb(254,53,35)" fg:x="274" fg:w="1"/><text x="96.7289%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.35%)</title><rect x="96.4789%" y="485" width="0.3521%" height="15" fill="rgb(237,133,22)" fg:x="274" fg:w="1"/><text x="96.7289%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.35%)</title><rect x="96.4789%" y="469" width="0.3521%" height="15" fill="rgb(237,156,49)" fg:x="274" fg:w="1"/><text x="96.7289%" y="479.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.35%)</title><rect x="96.4789%" y="453" width="0.3521%" height="15" fill="rgb(214,150,36)" fg:x="274" fg:w="1"/><text x="96.7289%" y="463.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.35%)</title><rect x="96.4789%" y="437" width="0.3521%" height="15" fill="rgb(254,47,34)" fg:x="274" fg:w="1"/><text x="96.7289%" y="447.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.35%)</title><rect x="96.4789%" y="421" width="0.3521%" height="15" fill="rgb(254,73,4)" fg:x="274" fg:w="1"/><text x="96.7289%" y="431.50"></text></g><g><title>_int_realloc (1 samples, 0.35%)</title><rect x="96.4789%" y="405" width="0.3521%" height="15" fill="rgb(231,75,41)" fg:x="274" fg:w="1"/><text x="96.7289%" y="415.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1 samples, 0.35%)</title><rect x="96.4789%" y="389" width="0.3521%" height="15" fill="rgb(217,126,36)" fg:x="274" fg:w="1"/><text x="96.7289%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="96.4789%" y="373" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="274" fg:w="1"/><text x="96.7289%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="96.4789%" y="357" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="274" fg:w="1"/><text x="96.7289%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="96.4789%" y="341" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="274" fg:w="1"/><text x="96.7289%" y="351.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="96.4789%" y="325" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="274" fg:w="1"/><text x="96.7289%" y="335.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="96.4789%" y="309" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="274" fg:w="1"/><text x="96.7289%" y="319.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="96.4789%" y="293" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="274" fg:w="1"/><text x="96.7289%" y="303.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="96.4789%" y="277" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="274" fg:w="1"/><text x="96.7289%" y="287.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="96.4789%" y="261" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="274" fg:w="1"/><text x="96.7289%" y="271.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.35%)</title><rect x="96.4789%" y="245" width="0.3521%" height="15" fill="rgb(210,204,4)" fg:x="274" fg:w="1"/><text x="96.7289%" y="255.50"></text></g><g><title>once_cell::imp::initialize_or_wait (4 samples, 1.41%)</title><rect x="95.7746%" y="1029" width="1.4085%" height="15" fill="rgb(247,128,5)" fg:x="272" fg:w="4"/><text x="96.0246%" y="1039.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (4 samples, 1.41%)</title><rect x="95.7746%" y="1013" width="1.4085%" height="15" fill="rgb(225,224,16)" fg:x="272" fg:w="4"/><text x="96.0246%" y="1023.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (4 samples, 1.41%)</title><rect x="95.7746%" y="997" width="1.4085%" height="15" fill="rgb(237,110,11)" fg:x="272" fg:w="4"/><text x="96.0246%" y="1007.50"></text></g><g><title>s4lib::data::datetime::bytes_to_regex_to_datetime::{{closure}} (4 samples, 1.41%)</title><rect x="95.7746%" y="981" width="1.4085%" height="15" fill="rgb(231,98,11)" fg:x="272" fg:w="4"/><text x="96.0246%" y="991.50"></text></g><g><title>regex::regex::bytes::Regex::new (4 samples, 1.41%)</title><rect x="95.7746%" y="965" width="1.4085%" height="15" fill="rgb(246,224,25)" fg:x="272" fg:w="4"/><text x="96.0246%" y="975.50"></text></g><g><title>regex::builders::bytes::RegexBuilder::build (4 samples, 1.41%)</title><rect x="95.7746%" y="949" width="1.4085%" height="15" fill="rgb(236,76,51)" fg:x="272" fg:w="4"/><text x="96.0246%" y="959.50"></text></g><g><title>regex::builders::Builder::build_one_bytes (4 samples, 1.41%)</title><rect x="95.7746%" y="933" width="1.4085%" height="15" fill="rgb(233,102,7)" fg:x="272" fg:w="4"/><text x="96.0246%" y="943.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (4 samples, 1.41%)</title><rect x="95.7746%" y="917" width="1.4085%" height="15" fill="rgb(212,33,22)" fg:x="272" fg:w="4"/><text x="96.0246%" y="927.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many (4 samples, 1.41%)</title><rect x="95.7746%" y="901" width="1.4085%" height="15" fill="rgb(236,25,32)" fg:x="272" fg:w="4"/><text x="96.0246%" y="911.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (4 samples, 1.41%)</title><rect x="95.7746%" y="885" width="1.4085%" height="15" fill="rgb(250,142,30)" fg:x="272" fg:w="4"/><text x="96.0246%" y="895.50"></text></g><g><title>regex_automata::meta::strategy::new (4 samples, 1.41%)</title><rect x="95.7746%" y="869" width="1.4085%" height="15" fill="rgb(243,171,22)" fg:x="272" fg:w="4"/><text x="96.0246%" y="879.50"></text></g><g><title>regex_automata::meta::strategy::Core::new (4 samples, 1.41%)</title><rect x="95.7746%" y="853" width="1.4085%" height="15" fill="rgb(222,69,27)" fg:x="272" fg:w="4"/><text x="96.0246%" y="863.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (4 samples, 1.41%)</title><rect x="95.7746%" y="837" width="1.4085%" height="15" fill="rgb(226,42,16)" fg:x="272" fg:w="4"/><text x="96.0246%" y="847.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (4 samples, 1.41%)</title><rect x="95.7746%" y="821" width="1.4085%" height="15" fill="rgb(242,129,17)" fg:x="272" fg:w="4"/><text x="96.0246%" y="831.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (4 samples, 1.41%)</title><rect x="95.7746%" y="805" width="1.4085%" height="15" fill="rgb(247,137,3)" fg:x="272" fg:w="4"/><text x="96.0246%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 1.41%)</title><rect x="95.7746%" y="789" width="1.4085%" height="15" fill="rgb(214,109,53)" fg:x="272" fg:w="4"/><text x="96.0246%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 1.41%)</title><rect x="95.7746%" y="773" width="1.4085%" height="15" fill="rgb(254,35,30)" fg:x="272" fg:w="4"/><text x="96.0246%" y="783.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (4 samples, 1.41%)</title><rect x="95.7746%" y="757" width="1.4085%" height="15" fill="rgb(226,169,23)" fg:x="272" fg:w="4"/><text x="96.0246%" y="767.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile::{{closure}} (4 samples, 1.41%)</title><rect x="95.7746%" y="741" width="1.4085%" height="15" fill="rgb(218,216,52)" fg:x="272" fg:w="4"/><text x="96.0246%" y="751.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (4 samples, 1.41%)</title><rect x="95.7746%" y="725" width="1.4085%" height="15" fill="rgb(235,200,16)" fg:x="272" fg:w="4"/><text x="96.0246%" y="735.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (4 samples, 1.41%)</title><rect x="95.7746%" y="709" width="1.4085%" height="15" fill="rgb(213,34,18)" fg:x="272" fg:w="4"/><text x="96.0246%" y="719.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (4 samples, 1.41%)</title><rect x="95.7746%" y="693" width="1.4085%" height="15" fill="rgb(210,105,37)" fg:x="272" fg:w="4"/><text x="96.0246%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 0.35%)</title><rect x="96.8310%" y="677" width="0.3521%" height="15" fill="rgb(222,94,14)" fg:x="275" fg:w="1"/><text x="97.0810%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.35%)</title><rect x="96.8310%" y="661" width="0.3521%" height="15" fill="rgb(254,35,30)" fg:x="275" fg:w="1"/><text x="97.0810%" y="671.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.35%)</title><rect x="96.8310%" y="645" width="0.3521%" height="15" fill="rgb(226,169,23)" fg:x="275" fg:w="1"/><text x="97.0810%" y="655.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (1 samples, 0.35%)</title><rect x="96.8310%" y="629" width="0.3521%" height="15" fill="rgb(205,130,14)" fg:x="275" fg:w="1"/><text x="97.0810%" y="639.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 0.35%)</title><rect x="96.8310%" y="613" width="0.3521%" height="15" fill="rgb(235,200,16)" fg:x="275" fg:w="1"/><text x="97.0810%" y="623.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.35%)</title><rect x="96.8310%" y="597" width="0.3521%" height="15" fill="rgb(213,34,18)" fg:x="275" fg:w="1"/><text x="97.0810%" y="607.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (1 samples, 0.35%)</title><rect x="96.8310%" y="581" width="0.3521%" height="15" fill="rgb(253,35,22)" fg:x="275" fg:w="1"/><text x="97.0810%" y="591.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::compile (1 samples, 0.35%)</title><rect x="96.8310%" y="565" width="0.3521%" height="15" fill="rgb(233,39,2)" fg:x="275" fg:w="1"/><text x="97.0810%" y="575.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.35%)</title><rect x="96.8310%" y="549" width="0.3521%" height="15" fill="rgb(245,132,34)" fg:x="275" fg:w="1"/><text x="97.0810%" y="559.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.35%)</title><rect x="97.1831%" y="1029" width="0.3521%" height="15" fill="rgb(216,218,52)" fg:x="276" fg:w="1"/><text x="97.4331%" y="1039.50"></text></g><g><title>once_cell::imp::initialize_or_wait (1 samples, 0.35%)</title><rect x="97.1831%" y="1013" width="0.3521%" height="15" fill="rgb(247,128,5)" fg:x="276" fg:w="1"/><text x="97.4331%" y="1023.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.35%)</title><rect x="97.1831%" y="997" width="0.3521%" height="15" fill="rgb(225,224,16)" fg:x="276" fg:w="1"/><text x="97.4331%" y="1007.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (1 samples, 0.35%)</title><rect x="97.1831%" y="981" width="0.3521%" height="15" fill="rgb(237,110,11)" fg:x="276" fg:w="1"/><text x="97.4331%" y="991.50"></text></g><g><title>s4lib::data::datetime::bytes_to_regex_to_datetime::{{closure}} (1 samples, 0.35%)</title><rect x="97.1831%" y="965" width="0.3521%" height="15" fill="rgb(231,98,11)" fg:x="276" fg:w="1"/><text x="97.4331%" y="975.50"></text></g><g><title>regex::regex::bytes::Regex::new (1 samples, 0.35%)</title><rect x="97.1831%" y="949" width="0.3521%" height="15" fill="rgb(246,224,25)" fg:x="276" fg:w="1"/><text x="97.4331%" y="959.50"></text></g><g><title>regex::builders::bytes::RegexBuilder::build (1 samples, 0.35%)</title><rect x="97.1831%" y="933" width="0.3521%" height="15" fill="rgb(236,76,51)" fg:x="276" fg:w="1"/><text x="97.4331%" y="943.50"></text></g><g><title>regex::builders::Builder::build_one_bytes (1 samples, 0.35%)</title><rect x="97.1831%" y="917" width="0.3521%" height="15" fill="rgb(233,102,7)" fg:x="276" fg:w="1"/><text x="97.4331%" y="927.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (1 samples, 0.35%)</title><rect x="97.1831%" y="901" width="0.3521%" height="15" fill="rgb(212,33,22)" fg:x="276" fg:w="1"/><text x="97.4331%" y="911.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many (1 samples, 0.35%)</title><rect x="97.1831%" y="885" width="0.3521%" height="15" fill="rgb(236,25,32)" fg:x="276" fg:w="1"/><text x="97.4331%" y="895.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (1 samples, 0.35%)</title><rect x="97.1831%" y="869" width="0.3521%" height="15" fill="rgb(250,142,30)" fg:x="276" fg:w="1"/><text x="97.4331%" y="879.50"></text></g><g><title>regex_automata::meta::strategy::new (1 samples, 0.35%)</title><rect x="97.1831%" y="853" width="0.3521%" height="15" fill="rgb(243,171,22)" fg:x="276" fg:w="1"/><text x="97.4331%" y="863.50"></text></g><g><title>regex_automata::meta::strategy::Core::new (1 samples, 0.35%)</title><rect x="97.1831%" y="837" width="0.3521%" height="15" fill="rgb(222,69,27)" fg:x="276" fg:w="1"/><text x="97.4331%" y="847.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (1 samples, 0.35%)</title><rect x="97.1831%" y="821" width="0.3521%" height="15" fill="rgb(226,42,16)" fg:x="276" fg:w="1"/><text x="97.4331%" y="831.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (1 samples, 0.35%)</title><rect x="97.1831%" y="805" width="0.3521%" height="15" fill="rgb(242,129,17)" fg:x="276" fg:w="1"/><text x="97.4331%" y="815.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (1 samples, 0.35%)</title><rect x="97.1831%" y="789" width="0.3521%" height="15" fill="rgb(247,137,3)" fg:x="276" fg:w="1"/><text x="97.4331%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.35%)</title><rect x="97.1831%" y="773" width="0.3521%" height="15" fill="rgb(214,109,53)" fg:x="276" fg:w="1"/><text x="97.4331%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.35%)</title><rect x="97.1831%" y="757" width="0.3521%" height="15" fill="rgb(254,35,30)" fg:x="276" fg:w="1"/><text x="97.4331%" y="767.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.35%)</title><rect x="97.1831%" y="741" width="0.3521%" height="15" fill="rgb(226,169,23)" fg:x="276" fg:w="1"/><text x="97.4331%" y="751.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile::{{closure}} (1 samples, 0.35%)</title><rect x="97.1831%" y="725" width="0.3521%" height="15" fill="rgb(218,216,52)" fg:x="276" fg:w="1"/><text x="97.4331%" y="735.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 0.35%)</title><rect x="97.1831%" y="709" width="0.3521%" height="15" fill="rgb(235,200,16)" fg:x="276" fg:w="1"/><text x="97.4331%" y="719.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.35%)</title><rect x="97.1831%" y="693" width="0.3521%" height="15" fill="rgb(213,34,18)" fg:x="276" fg:w="1"/><text x="97.4331%" y="703.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (1 samples, 0.35%)</title><rect x="97.1831%" y="677" width="0.3521%" height="15" fill="rgb(210,105,37)" fg:x="276" fg:w="1"/><text x="97.4331%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.35%)</title><rect x="97.1831%" y="661" width="0.3521%" height="15" fill="rgb(214,109,53)" fg:x="276" fg:w="1"/><text x="97.4331%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.35%)</title><rect x="97.1831%" y="645" width="0.3521%" height="15" fill="rgb(254,35,30)" fg:x="276" fg:w="1"/><text x="97.4331%" y="655.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.35%)</title><rect x="97.1831%" y="629" width="0.3521%" height="15" fill="rgb(226,169,23)" fg:x="276" fg:w="1"/><text x="97.4331%" y="639.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (1 samples, 0.35%)</title><rect x="97.1831%" y="613" width="0.3521%" height="15" fill="rgb(205,130,14)" fg:x="276" fg:w="1"/><text x="97.4331%" y="623.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 0.35%)</title><rect x="97.1831%" y="597" width="0.3521%" height="15" fill="rgb(235,200,16)" fg:x="276" fg:w="1"/><text x="97.4331%" y="607.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.35%)</title><rect x="97.1831%" y="581" width="0.3521%" height="15" fill="rgb(213,34,18)" fg:x="276" fg:w="1"/><text x="97.4331%" y="591.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (1 samples, 0.35%)</title><rect x="97.1831%" y="565" width="0.3521%" height="15" fill="rgb(253,35,22)" fg:x="276" fg:w="1"/><text x="97.4331%" y="575.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::add (1 samples, 0.35%)</title><rect x="97.1831%" y="549" width="0.3521%" height="15" fill="rgb(247,201,32)" fg:x="276" fg:w="1"/><text x="97.4331%" y="559.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::get_or_add_state (1 samples, 0.35%)</title><rect x="97.1831%" y="533" width="0.3521%" height="15" fill="rgb(249,22,31)" fg:x="276" fg:w="1"/><text x="97.4331%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (1 samples, 0.35%)</title><rect x="97.1831%" y="517" width="0.3521%" height="15" fill="rgb(222,129,7)" fg:x="276" fg:w="1"/><text x="97.4331%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.35%)</title><rect x="97.1831%" y="501" width="0.3521%" height="15" fill="rgb(212,159,3)" fg:x="276" fg:w="1"/><text x="97.4331%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.35%)</title><rect x="97.1831%" y="485" width="0.3521%" height="15" fill="rgb(231,142,39)" fg:x="276" fg:w="1"/><text x="97.4331%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.35%)</title><rect x="97.1831%" y="469" width="0.3521%" height="15" fill="rgb(249,2,22)" fg:x="276" fg:w="1"/><text x="97.4331%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.35%)</title><rect x="97.1831%" y="453" width="0.3521%" height="15" fill="rgb(254,53,35)" fg:x="276" fg:w="1"/><text x="97.4331%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.35%)</title><rect x="97.1831%" y="437" width="0.3521%" height="15" fill="rgb(237,133,22)" fg:x="276" fg:w="1"/><text x="97.4331%" y="447.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.35%)</title><rect x="97.1831%" y="421" width="0.3521%" height="15" fill="rgb(206,112,53)" fg:x="276" fg:w="1"/><text x="97.4331%" y="431.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add_sparse (1 samples, 0.35%)</title><rect x="97.5352%" y="581" width="0.3521%" height="15" fill="rgb(233,153,44)" fg:x="277" fg:w="1"/><text x="97.7852%" y="591.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add (1 samples, 0.35%)</title><rect x="97.5352%" y="565" width="0.3521%" height="15" fill="rgb(253,91,29)" fg:x="277" fg:w="1"/><text x="97.7852%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.35%)</title><rect x="97.5352%" y="549" width="0.3521%" height="15" fill="rgb(241,229,15)" fg:x="277" fg:w="1"/><text x="97.7852%" y="559.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::compile (2 samples, 0.70%)</title><rect x="97.5352%" y="597" width="0.7042%" height="15" fill="rgb(233,39,2)" fg:x="277" fg:w="2"/><text x="97.7852%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.35%)</title><rect x="97.8873%" y="581" width="0.3521%" height="15" fill="rgb(241,229,15)" fg:x="278" fg:w="1"/><text x="98.1373%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.35%)</title><rect x="97.8873%" y="565" width="0.3521%" height="15" fill="rgb(254,103,39)" fg:x="278" fg:w="1"/><text x="98.1373%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.35%)</title><rect x="97.8873%" y="549" width="0.3521%" height="15" fill="rgb(254,53,35)" fg:x="278" fg:w="1"/><text x="98.1373%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.35%)</title><rect x="97.8873%" y="533" width="0.3521%" height="15" fill="rgb(237,133,22)" fg:x="278" fg:w="1"/><text x="98.1373%" y="543.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.35%)</title><rect x="97.8873%" y="517" width="0.3521%" height="15" fill="rgb(206,149,53)" fg:x="278" fg:w="1"/><text x="98.1373%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 1.06%)</title><rect x="97.5352%" y="709" width="1.0563%" height="15" fill="rgb(214,109,53)" fg:x="277" fg:w="3"/><text x="97.7852%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 1.06%)</title><rect x="97.5352%" y="693" width="1.0563%" height="15" fill="rgb(254,35,30)" fg:x="277" fg:w="3"/><text x="97.7852%" y="703.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (3 samples, 1.06%)</title><rect x="97.5352%" y="677" width="1.0563%" height="15" fill="rgb(226,169,23)" fg:x="277" fg:w="3"/><text x="97.7852%" y="687.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (3 samples, 1.06%)</title><rect x="97.5352%" y="661" width="1.0563%" height="15" fill="rgb(205,130,14)" fg:x="277" fg:w="3"/><text x="97.7852%" y="671.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (3 samples, 1.06%)</title><rect x="97.5352%" y="645" width="1.0563%" height="15" fill="rgb(235,200,16)" fg:x="277" fg:w="3"/><text x="97.7852%" y="655.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (3 samples, 1.06%)</title><rect x="97.5352%" y="629" width="1.0563%" height="15" fill="rgb(213,34,18)" fg:x="277" fg:w="3"/><text x="97.7852%" y="639.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (3 samples, 1.06%)</title><rect x="97.5352%" y="613" width="1.0563%" height="15" fill="rgb(253,35,22)" fg:x="277" fg:w="3"/><text x="97.7852%" y="623.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::add (1 samples, 0.35%)</title><rect x="98.2394%" y="597" width="0.3521%" height="15" fill="rgb(247,201,32)" fg:x="279" fg:w="1"/><text x="98.4894%" y="607.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::State::add_match (1 samples, 0.35%)</title><rect x="98.2394%" y="581" width="0.3521%" height="15" fill="rgb(206,206,41)" fg:x="279" fg:w="1"/><text x="98.4894%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.35%)</title><rect x="98.2394%" y="565" width="0.3521%" height="15" fill="rgb(241,229,15)" fg:x="279" fg:w="1"/><text x="98.4894%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.35%)</title><rect x="98.2394%" y="549" width="0.3521%" height="15" fill="rgb(254,103,39)" fg:x="279" fg:w="1"/><text x="98.4894%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.35%)</title><rect x="98.2394%" y="533" width="0.3521%" height="15" fill="rgb(254,53,35)" fg:x="279" fg:w="1"/><text x="98.4894%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.35%)</title><rect x="98.2394%" y="517" width="0.3521%" height="15" fill="rgb(237,133,22)" fg:x="279" fg:w="1"/><text x="98.4894%" y="527.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.35%)</title><rect x="98.2394%" y="501" width="0.3521%" height="15" fill="rgb(206,112,53)" fg:x="279" fg:w="1"/><text x="98.4894%" y="511.50"></text></g><g><title>_int_malloc (1 samples, 0.35%)</title><rect x="98.2394%" y="485" width="0.3521%" height="15" fill="rgb(222,219,51)" fg:x="279" fg:w="1"/><text x="98.4894%" y="495.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add_union (2 samples, 0.70%)</title><rect x="98.5915%" y="581" width="0.7042%" height="15" fill="rgb(247,38,8)" fg:x="280" fg:w="2"/><text x="98.8415%" y="591.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add (2 samples, 0.70%)</title><rect x="98.5915%" y="565" width="0.7042%" height="15" fill="rgb(253,91,29)" fg:x="280" fg:w="2"/><text x="98.8415%" y="575.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (3 samples, 1.06%)</title><rect x="98.5915%" y="645" width="1.0563%" height="15" fill="rgb(235,200,16)" fg:x="280" fg:w="3"/><text x="98.8415%" y="655.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (3 samples, 1.06%)</title><rect x="98.5915%" y="629" width="1.0563%" height="15" fill="rgb(213,34,18)" fg:x="280" fg:w="3"/><text x="98.8415%" y="639.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (3 samples, 1.06%)</title><rect x="98.5915%" y="613" width="1.0563%" height="15" fill="rgb(253,35,22)" fg:x="280" fg:w="3"/><text x="98.8415%" y="623.50"></text></g><g><title>regex_automata::nfa::thompson::literal_trie::LiteralTrie::compile (3 samples, 1.06%)</title><rect x="98.5915%" y="597" width="1.0563%" height="15" fill="rgb(233,39,2)" fg:x="280" fg:w="3"/><text x="98.8415%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_automata::nfa::thompson::nfa::Transition&gt;&gt; (1 samples, 0.35%)</title><rect x="99.2958%" y="581" width="0.3521%" height="15" fill="rgb(207,29,6)" fg:x="282" fg:w="1"/><text x="99.5458%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;regex_automata::nfa::thompson::nfa::Transition&gt;&gt; (1 samples, 0.35%)</title><rect x="99.2958%" y="565" width="0.3521%" height="15" fill="rgb(228,146,49)" fg:x="282" fg:w="1"/><text x="99.5458%" y="575.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.35%)</title><rect x="99.2958%" y="549" width="0.3521%" height="15" fill="rgb(213,128,22)" fg:x="282" fg:w="1"/><text x="99.5458%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.35%)</title><rect x="99.2958%" y="533" width="0.3521%" height="15" fill="rgb(238,77,31)" fg:x="282" fg:w="1"/><text x="99.5458%" y="543.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.35%)</title><rect x="99.2958%" y="517" width="0.3521%" height="15" fill="rgb(227,15,28)" fg:x="282" fg:w="1"/><text x="99.5458%" y="527.50"></text></g><g><title>__GI___libc_free (1 samples, 0.35%)</title><rect x="99.2958%" y="501" width="0.3521%" height="15" fill="rgb(247,8,17)" fg:x="282" fg:w="1"/><text x="99.5458%" y="511.50"></text></g><g><title>_int_free (1 samples, 0.35%)</title><rect x="99.2958%" y="485" width="0.3521%" height="15" fill="rgb(221,113,48)" fg:x="282" fg:w="1"/><text x="99.5458%" y="495.50"></text></g><g><title>all (284 samples, 100%)</title><rect x="0.0000%" y="1077" width="100.0000%" height="15" fill="rgb(206,183,37)" fg:x="0" fg:w="284"/><text x="0.2500%" y="1087.50"></text></g><g><title>gen-1000-3-foob (212 samples, 74.65%)</title><rect x="25.3521%" y="1061" width="74.6479%" height="15" fill="rgb(214,224,18)" fg:x="72" fg:w="212"/><text x="25.6021%" y="1071.50">gen-1000-3-foob</text></g><g><title>[unknown] (118 samples, 41.55%)</title><rect x="58.4507%" y="1045" width="41.5493%" height="15" fill="rgb(227,28,50)" fg:x="166" fg:w="118"/><text x="58.7007%" y="1055.50">[unknown]</text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (7 samples, 2.46%)</title><rect x="97.5352%" y="1029" width="2.4648%" height="15" fill="rgb(237,110,11)" fg:x="277" fg:w="7"/><text x="97.7852%" y="1039.50">on..</text></g><g><title>s4lib::data::datetime::bytes_to_regex_to_datetime::{{closure}} (7 samples, 2.46%)</title><rect x="97.5352%" y="1013" width="2.4648%" height="15" fill="rgb(231,98,11)" fg:x="277" fg:w="7"/><text x="97.7852%" y="1023.50">s4..</text></g><g><title>regex::regex::bytes::Regex::new (7 samples, 2.46%)</title><rect x="97.5352%" y="997" width="2.4648%" height="15" fill="rgb(246,224,25)" fg:x="277" fg:w="7"/><text x="97.7852%" y="1007.50">re..</text></g><g><title>regex::builders::bytes::RegexBuilder::build (7 samples, 2.46%)</title><rect x="97.5352%" y="981" width="2.4648%" height="15" fill="rgb(236,76,51)" fg:x="277" fg:w="7"/><text x="97.7852%" y="991.50">re..</text></g><g><title>regex::builders::Builder::build_one_bytes (7 samples, 2.46%)</title><rect x="97.5352%" y="965" width="2.4648%" height="15" fill="rgb(233,102,7)" fg:x="277" fg:w="7"/><text x="97.7852%" y="975.50">re..</text></g><g><title>regex_automata::meta::regex::Builder::build (7 samples, 2.46%)</title><rect x="97.5352%" y="949" width="2.4648%" height="15" fill="rgb(212,33,22)" fg:x="277" fg:w="7"/><text x="97.7852%" y="959.50">re..</text></g><g><title>regex_automata::meta::regex::Builder::build_many (7 samples, 2.46%)</title><rect x="97.5352%" y="933" width="2.4648%" height="15" fill="rgb(236,25,32)" fg:x="277" fg:w="7"/><text x="97.7852%" y="943.50">re..</text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (7 samples, 2.46%)</title><rect x="97.5352%" y="917" width="2.4648%" height="15" fill="rgb(250,142,30)" fg:x="277" fg:w="7"/><text x="97.7852%" y="927.50">re..</text></g><g><title>regex_automata::meta::strategy::new (7 samples, 2.46%)</title><rect x="97.5352%" y="901" width="2.4648%" height="15" fill="rgb(243,171,22)" fg:x="277" fg:w="7"/><text x="97.7852%" y="911.50">re..</text></g><g><title>regex_automata::meta::strategy::Core::new (7 samples, 2.46%)</title><rect x="97.5352%" y="885" width="2.4648%" height="15" fill="rgb(222,69,27)" fg:x="277" fg:w="7"/><text x="97.7852%" y="895.50">re..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (7 samples, 2.46%)</title><rect x="97.5352%" y="869" width="2.4648%" height="15" fill="rgb(226,42,16)" fg:x="277" fg:w="7"/><text x="97.7852%" y="879.50">re..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (7 samples, 2.46%)</title><rect x="97.5352%" y="853" width="2.4648%" height="15" fill="rgb(242,129,17)" fg:x="277" fg:w="7"/><text x="97.7852%" y="863.50">re..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (7 samples, 2.46%)</title><rect x="97.5352%" y="837" width="2.4648%" height="15" fill="rgb(247,137,3)" fg:x="277" fg:w="7"/><text x="97.7852%" y="847.50">re..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 2.46%)</title><rect x="97.5352%" y="821" width="2.4648%" height="15" fill="rgb(214,109,53)" fg:x="277" fg:w="7"/><text x="97.7852%" y="831.50">&lt;c..</text></g><g><title>core::option::Option&lt;T&gt;::map (7 samples, 2.46%)</title><rect x="97.5352%" y="805" width="2.4648%" height="15" fill="rgb(254,35,30)" fg:x="277" fg:w="7"/><text x="97.7852%" y="815.50">co..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (7 samples, 2.46%)</title><rect x="97.5352%" y="789" width="2.4648%" height="15" fill="rgb(226,169,23)" fg:x="277" fg:w="7"/><text x="97.7852%" y="799.50">co..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile::{{closure}} (7 samples, 2.46%)</title><rect x="97.5352%" y="773" width="2.4648%" height="15" fill="rgb(218,216,52)" fg:x="277" fg:w="7"/><text x="97.7852%" y="783.50">re..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (7 samples, 2.46%)</title><rect x="97.5352%" y="757" width="2.4648%" height="15" fill="rgb(235,200,16)" fg:x="277" fg:w="7"/><text x="97.7852%" y="767.50">re..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (7 samples, 2.46%)</title><rect x="97.5352%" y="741" width="2.4648%" height="15" fill="rgb(213,34,18)" fg:x="277" fg:w="7"/><text x="97.7852%" y="751.50">re..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (7 samples, 2.46%)</title><rect x="97.5352%" y="725" width="2.4648%" height="15" fill="rgb(210,105,37)" fg:x="277" fg:w="7"/><text x="97.7852%" y="735.50">re..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (4 samples, 1.41%)</title><rect x="98.5915%" y="709" width="1.4085%" height="15" fill="rgb(222,94,14)" fg:x="280" fg:w="4"/><text x="98.8415%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 1.41%)</title><rect x="98.5915%" y="693" width="1.4085%" height="15" fill="rgb(254,35,30)" fg:x="280" fg:w="4"/><text x="98.8415%" y="703.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (4 samples, 1.41%)</title><rect x="98.5915%" y="677" width="1.4085%" height="15" fill="rgb(226,169,23)" fg:x="280" fg:w="4"/><text x="98.8415%" y="687.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (4 samples, 1.41%)</title><rect x="98.5915%" y="661" width="1.4085%" height="15" fill="rgb(205,130,14)" fg:x="280" fg:w="4"/><text x="98.8415%" y="671.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.35%)</title><rect x="99.6479%" y="645" width="0.3521%" height="15" fill="rgb(213,34,18)" fg:x="283" fg:w="1"/><text x="99.8979%" y="655.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_repetition (1 samples, 0.35%)</title><rect x="99.6479%" y="629" width="0.3521%" height="15" fill="rgb(205,23,25)" fg:x="283" fg:w="1"/><text x="99.8979%" y="639.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_zero_or_one (1 samples, 0.35%)</title><rect x="99.6479%" y="613" width="0.3521%" height="15" fill="rgb(240,227,44)" fg:x="283" fg:w="1"/><text x="99.8979%" y="623.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.35%)</title><rect x="99.6479%" y="597" width="0.3521%" height="15" fill="rgb(213,34,18)" fg:x="283" fg:w="1"/><text x="99.8979%" y="607.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_literal (1 samples, 0.35%)</title><rect x="99.6479%" y="581" width="0.3521%" height="15" fill="rgb(231,166,28)" fg:x="283" fg:w="1"/><text x="99.8979%" y="591.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (1 samples, 0.35%)</title><rect x="99.6479%" y="565" width="0.3521%" height="15" fill="rgb(210,105,37)" fg:x="283" fg:w="1"/><text x="99.8979%" y="575.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::is_reverse (1 samples, 0.35%)</title><rect x="99.6479%" y="549" width="0.3521%" height="15" fill="rgb(242,98,52)" fg:x="283" fg:w="1"/><text x="99.8979%" y="559.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Config::get_reverse (1 samples, 0.35%)</title><rect x="99.6479%" y="533" width="0.3521%" height="15" fill="rgb(216,98,7)" fg:x="283" fg:w="1"/><text x="99.8979%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (1 samples, 0.35%)</title><rect x="99.6479%" y="517" width="0.3521%" height="15" fill="rgb(238,198,36)" fg:x="283" fg:w="1"/><text x="99.8979%" y="527.50"></text></g></svg></svg>