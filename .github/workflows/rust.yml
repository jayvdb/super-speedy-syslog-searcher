---
name: Rust
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  S4_TEST_FILES: ./logs/other/tests/dtf2-2.log
                 ./logs/other/tests/dtf3-2a.log
                 ./logs/other/tests/dtf5-6a.log.gz
jobs:
  job_build_debug:
    runs-on: ubuntu-latest
    steps:
      # build & upload debug
      - uses: actions/checkout@v2
      - name: Build Debug
        run: |
          set -eux
          cargo build --verbose
          cp -av ./target/debug/s4 ./s4
      - name: upload build debug binary
        uses: actions/upload-artifact@v3
        with:
          name: s4_debug
          path: ./s4
  job_build_release:
    runs-on: ubuntu-latest
    steps:
      # build & upload release
      - uses: actions/checkout@v2
      - name: Build Release
        run: |
          set -eux
          cargo build --release --verbose
          cp -av ./target/release/s4 ./s4
      - name: upload build release binary
        uses: actions/upload-artifact@v3
        with:
          name: s4_release
          path: ./s4
  job_bench:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build Bench
        run: cargo bench --no-run
  job_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run Tests
        run: cargo test -j1 --verbose -- --test-threads=1
  job_run_debug:
    needs: job_build_debug
    runs-on: ubuntu-latest
    steps:
      # download & run debug
      - name: Download debug binary
        uses: actions/download-artifact@v3
        with:
          name: s4_debug
      - name: Run Program Debug
        run: |
          set -eux
          chmod -v +x ./s4
          ./s4 --help
          ./s4 --color=never -l -s -n -w $S4_TEST_FILES
          ./s4 --color=never -l -s -p -w $S4_TEST_FILES
          ./s4 --color=never -u -s -n -w $S4_TEST_FILES
          ./s4 --color=never -u -s -n -w $S4_TEST_FILES
          ./s4 --color=always -l -s -n -w $S4_TEST_FILES
          ./s4 --color=always -l -s -p -w $S4_TEST_FILES
          ./s4 --color=always -u -s -n -w $S4_TEST_FILES
          ./s4 --color=always -u -s -n -w $S4_TEST_FILES
  job_run_release:
    needs: job_build_release
    runs-on: ubuntu-latest
    steps:
      # download & run release
      - name: Download release binary
        uses: actions/download-artifact@v3
        with:
          name: s4_release
      - name: Run Program Release
        run: |
          set -eux
          chmod -v +x ./s4
          ./s4 --help
          ./s4 --color=never -l -s -n -w $S4_TEST_FILES
          ./s4 --color=never -l -s -p -w $S4_TEST_FILES
          ./s4 --color=never -u -s -n -w $S4_TEST_FILES
          ./s4 --color=never -u -s -n -w $S4_TEST_FILES
          ./s4 --color=always -l -s -n -w $S4_TEST_FILES
          ./s4 --color=always -l -s -p -w $S4_TEST_FILES
          ./s4 --color=always -u -s -n -w $S4_TEST_FILES
          ./s4 --color=always -u -s -n -w $S4_TEST_FILES
